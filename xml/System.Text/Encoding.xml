<Type Name="Encoding" FullName="System.Text.Encoding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7073924d86a171ef09dde8b1f05e080aea46121f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37755889" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Encoding : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Encoding extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Text.Encoding" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Encoding&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Encoding abstract : ICloneable" />
  <TypeSignature Language="F#" Value="type Encoding = class&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="20dad-101">Reprezentuje kodowania znaków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="20dad-101">Represents a character encoding.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-102">Kodowanie jest procesem przekształcania zestawu znaków Unicode do sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="20dad-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="20dad-103">Dekodowanie jest procesem przekształcania sekwencji bajtów zakodowany zestaw znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="20dad-103">In contrast, decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span> <span data-ttu-id="20dad-104">Informacje o Unicode przekształcania formatuje (UTFs) i inne kodowanie obsługiwane przez <xref:System.Text.Encoding>, zobacz [kodowanie znaków na platformie .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="20dad-104">For information about the Unicode Transformation Formats (UTFs) and other encodings supported by <xref:System.Text.Encoding>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="20dad-105">Należy pamiętać, że <xref:System.Text.Encoding> jest przeznaczony do działania na znaki Unicode zamiast dowolnego elementu danych binarnych, takich jak tablice typu byte.</span><span class="sxs-lookup"><span data-stu-id="20dad-105">Note that <xref:System.Text.Encoding> is intended to operate on Unicode characters instead of arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="20dad-106">Jeśli musisz zakodować dowolne dane binarne do tekstu, należy użyć protokołu, takie jak uuencode, który jest implementowany przez metody takie jak <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="20dad-106">If you must encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="20dad-107">Program .NET Framework zawiera następujące implementacje <xref:System.Text.Encoding> klasy do obsługi bieżącego kodowania Unicode i inne kodowanie:</span><span class="sxs-lookup"><span data-stu-id="20dad-107">The .NET Framework provides the following implementations of the <xref:System.Text.Encoding> class to support current Unicode encodings and other encodings:</span></span>  
  
-   <span data-ttu-id="20dad-108"><xref:System.Text.ASCIIEncoding> znaki Unicode są kodowane jako pojedyncze znaki ASCII 7-bitowego.</span><span class="sxs-lookup"><span data-stu-id="20dad-108"><xref:System.Text.ASCIIEncoding> encodes Unicode characters as single 7-bit ASCII characters.</span></span> <span data-ttu-id="20dad-109">To kodowanie tylko obsługuje znak wartości z zakresu od U + 0000 i U + 007F.</span><span class="sxs-lookup"><span data-stu-id="20dad-109">This encoding only supports character values between U+0000 and U+007F.</span></span> <span data-ttu-id="20dad-110">Strona kodowa 20127.</span><span class="sxs-lookup"><span data-stu-id="20dad-110">Code page 20127.</span></span> <span data-ttu-id="20dad-111">Również dostępne za pośrednictwem <xref:System.Text.Encoding.ASCII%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="20dad-111">Also available through the <xref:System.Text.Encoding.ASCII%2A> property.</span></span>  
  
-   <span data-ttu-id="20dad-112"><xref:System.Text.UTF7Encoding> koduje znaki Unicode przy użyciu kodowania UTF-7.</span><span class="sxs-lookup"><span data-stu-id="20dad-112"><xref:System.Text.UTF7Encoding> encodes Unicode characters using the UTF-7 encoding.</span></span> <span data-ttu-id="20dad-113">To kodowanie obsługuje wszystkie wartości znakowych Unicode.</span><span class="sxs-lookup"><span data-stu-id="20dad-113">This encoding supports all Unicode character values.</span></span> <span data-ttu-id="20dad-114">Strona kodowa 65000.</span><span class="sxs-lookup"><span data-stu-id="20dad-114">Code page 65000.</span></span> <span data-ttu-id="20dad-115">Również dostępne za pośrednictwem <xref:System.Text.Encoding.UTF7%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="20dad-115">Also available through the <xref:System.Text.Encoding.UTF7%2A> property.</span></span>  
  
-   <span data-ttu-id="20dad-116"><xref:System.Text.UTF8Encoding> koduje znaki Unicode przy użyciu kodowania UTF-8.</span><span class="sxs-lookup"><span data-stu-id="20dad-116"><xref:System.Text.UTF8Encoding> encodes Unicode characters using the UTF-8 encoding.</span></span> <span data-ttu-id="20dad-117">To kodowanie obsługuje wszystkie wartości znakowych Unicode.</span><span class="sxs-lookup"><span data-stu-id="20dad-117">This encoding supports all Unicode character values.</span></span> <span data-ttu-id="20dad-118">Strona kodowa 65001.</span><span class="sxs-lookup"><span data-stu-id="20dad-118">Code page 65001.</span></span> <span data-ttu-id="20dad-119">Również dostępne za pośrednictwem <xref:System.Text.Encoding.UTF8%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="20dad-119">Also available through the <xref:System.Text.Encoding.UTF8%2A> property.</span></span>  
  
-   <span data-ttu-id="20dad-120"><xref:System.Text.UnicodeEncoding> koduje znaki Unicode przy użyciu kodowania UTF-16.</span><span class="sxs-lookup"><span data-stu-id="20dad-120"><xref:System.Text.UnicodeEncoding> encodes Unicode characters using the UTF-16 encoding.</span></span> <span data-ttu-id="20dad-121">Obsługiwane są zarówno zamówienia endian i przetwarzanie dużej ilości bajtów little endian.</span><span class="sxs-lookup"><span data-stu-id="20dad-121">Both little endian and big endian byte orders are supported.</span></span> <span data-ttu-id="20dad-122">Również dostępne za pośrednictwem <xref:System.Text.Encoding.Unicode%2A> właściwości i <xref:System.Text.Encoding.BigEndianUnicode%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="20dad-122">Also available through the <xref:System.Text.Encoding.Unicode%2A> property and the <xref:System.Text.Encoding.BigEndianUnicode%2A> property.</span></span>  
  
-   <span data-ttu-id="20dad-123"><xref:System.Text.UTF32Encoding> koduje znaki Unicode przy użyciu kodowania UTF-32.</span><span class="sxs-lookup"><span data-stu-id="20dad-123"><xref:System.Text.UTF32Encoding> encodes Unicode characters using the UTF-32 encoding.</span></span> <span data-ttu-id="20dad-124">Little endian (strona kodowa 12000) i bajtów big endian (strona kodowa 12001) zamówienia są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="20dad-124">Both little endian (code page 12000) and big endian (code page 12001) byte orders are supported.</span></span> <span data-ttu-id="20dad-125">Również dostępne za pośrednictwem <xref:System.Text.Encoding.UTF32%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="20dad-125">Also available through the <xref:System.Text.Encoding.UTF32%2A> property.</span></span>  
  
 <span data-ttu-id="20dad-126"><xref:System.Text.Encoding> Klasa jest przeznaczona głównie do konwersji między różnych kodowań i Unicode.</span><span class="sxs-lookup"><span data-stu-id="20dad-126">The <xref:System.Text.Encoding> class is primarily intended to convert between different encodings and Unicode.</span></span> <span data-ttu-id="20dad-127">Często jednej z klas pochodnych Unicode jest odpowiednim wyborem dla twojej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="20dad-127">Often one of the derived Unicode classes is the correct choice for your app.</span></span>  
  
 <span data-ttu-id="20dad-128">Użyj <xref:System.Text.Encoding.GetEncoding%2A> metodę, aby uzyskać inne kodowanie i wywołać <xref:System.Text.Encoding.GetEncodings%2A> metodę, aby uzyskać listę wszystkich kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-128">Use the <xref:System.Text.Encoding.GetEncoding%2A> method to obtain other encodings, and call the <xref:System.Text.Encoding.GetEncodings%2A> method to get a list of all encodings.</span></span>  
  
 <span data-ttu-id="20dad-129">W poniższej tabeli wymieniono kodowania obsługiwane przez program .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="20dad-129">The following table lists the encodings supported by the .NET Framework.</span></span> <span data-ttu-id="20dad-130">Wyświetla listę każdego kodowania na numer strony kodowej i wartości kodowania firmy <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> i <xref:System.Text.EncodingInfo.DisplayName%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="20dad-130">It lists each encoding's code page number and the values of the encoding's <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> and <xref:System.Text.EncodingInfo.DisplayName%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="20dad-131">Gwiazdki w ostatniej kolumnie oznacza, że strona kodowa jest obsługiwany natywnie programu .NET Framework, niezależnie od tego, podstawowej platformy.</span><span class="sxs-lookup"><span data-stu-id="20dad-131">An asterisk in the last column indicates that the code page is natively supported by the .NET Framework, regardless of the underlying platform.</span></span> <span data-ttu-id="20dad-132">Uwaga kodu strony, którego <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> właściwość odpowiada międzynarodowego standardu nie musi być w pełni przestrzegać tego standardu.</span><span class="sxs-lookup"><span data-stu-id="20dad-132">Note that code pages whose <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> property corresponds to an international standard do not necessarily comply in full with that standard.</span></span>  
  
|<span data-ttu-id="20dad-133">Strona kodowa</span><span class="sxs-lookup"><span data-stu-id="20dad-133">Code page</span></span>|<span data-ttu-id="20dad-134">Nazwa</span><span class="sxs-lookup"><span data-stu-id="20dad-134">Name</span></span>|<span data-ttu-id="20dad-135">Nazwa wyświetlana</span><span class="sxs-lookup"><span data-stu-id="20dad-135">Display name</span></span>|<span data-ttu-id="20dad-136">Obsługa programu .NET framework</span><span class="sxs-lookup"><span data-stu-id="20dad-136">.NET Framework support</span></span>|  
|---------------|----------|------------------|----------------------------|  
|<span data-ttu-id="20dad-137">37</span><span class="sxs-lookup"><span data-stu-id="20dad-137">37</span></span>|<span data-ttu-id="20dad-138">IBM037</span><span class="sxs-lookup"><span data-stu-id="20dad-138">IBM037</span></span>|<span data-ttu-id="20dad-139">IBM EBCDIC (US-Canada)</span><span class="sxs-lookup"><span data-stu-id="20dad-139">IBM EBCDIC (US-Canada)</span></span>||  
|<span data-ttu-id="20dad-140">437</span><span class="sxs-lookup"><span data-stu-id="20dad-140">437</span></span>|<span data-ttu-id="20dad-141">IBM437</span><span class="sxs-lookup"><span data-stu-id="20dad-141">IBM437</span></span>|<span data-ttu-id="20dad-142">OEM-USA</span><span class="sxs-lookup"><span data-stu-id="20dad-142">OEM United States</span></span>||  
|<span data-ttu-id="20dad-143">500</span><span class="sxs-lookup"><span data-stu-id="20dad-143">500</span></span>|<span data-ttu-id="20dad-144">IBM500</span><span class="sxs-lookup"><span data-stu-id="20dad-144">IBM500</span></span>|<span data-ttu-id="20dad-145">IBM EBCDIC (międzynarodowy)</span><span class="sxs-lookup"><span data-stu-id="20dad-145">IBM EBCDIC (International)</span></span>||  
|<span data-ttu-id="20dad-146">708</span><span class="sxs-lookup"><span data-stu-id="20dad-146">708</span></span>|<span data-ttu-id="20dad-147">ASMO-708</span><span class="sxs-lookup"><span data-stu-id="20dad-147">ASMO-708</span></span>|<span data-ttu-id="20dad-148">Arabski (ASMO 708)</span><span class="sxs-lookup"><span data-stu-id="20dad-148">Arabic (ASMO 708)</span></span>||  
|<span data-ttu-id="20dad-149">720</span><span class="sxs-lookup"><span data-stu-id="20dad-149">720</span></span>|<span data-ttu-id="20dad-150">DOS-720</span><span class="sxs-lookup"><span data-stu-id="20dad-150">DOS-720</span></span>|<span data-ttu-id="20dad-151">Arabski (DOS)</span><span class="sxs-lookup"><span data-stu-id="20dad-151">Arabic (DOS)</span></span>||  
|<span data-ttu-id="20dad-152">737</span><span class="sxs-lookup"><span data-stu-id="20dad-152">737</span></span>|<span data-ttu-id="20dad-153">ibm737</span><span class="sxs-lookup"><span data-stu-id="20dad-153">ibm737</span></span>|<span data-ttu-id="20dad-154">Grecki (DOS)</span><span class="sxs-lookup"><span data-stu-id="20dad-154">Greek (DOS)</span></span>||  
|<span data-ttu-id="20dad-155">775</span><span class="sxs-lookup"><span data-stu-id="20dad-155">775</span></span>|<span data-ttu-id="20dad-156">ibm775</span><span class="sxs-lookup"><span data-stu-id="20dad-156">ibm775</span></span>|<span data-ttu-id="20dad-157">Bałtycki (DOS)</span><span class="sxs-lookup"><span data-stu-id="20dad-157">Baltic (DOS)</span></span>||  
|<span data-ttu-id="20dad-158">850</span><span class="sxs-lookup"><span data-stu-id="20dad-158">850</span></span>|<span data-ttu-id="20dad-159">ibm850</span><span class="sxs-lookup"><span data-stu-id="20dad-159">ibm850</span></span>|<span data-ttu-id="20dad-160">Zachodnioeuropejski (DOS)</span><span class="sxs-lookup"><span data-stu-id="20dad-160">Western European (DOS)</span></span>||  
|<span data-ttu-id="20dad-161">852</span><span class="sxs-lookup"><span data-stu-id="20dad-161">852</span></span>|<span data-ttu-id="20dad-162">ibm852</span><span class="sxs-lookup"><span data-stu-id="20dad-162">ibm852</span></span>|<span data-ttu-id="20dad-163">Środkowoeuropejski (DOS)</span><span class="sxs-lookup"><span data-stu-id="20dad-163">Central European (DOS)</span></span>||  
|<span data-ttu-id="20dad-164">855</span><span class="sxs-lookup"><span data-stu-id="20dad-164">855</span></span>|<span data-ttu-id="20dad-165">IBM855</span><span class="sxs-lookup"><span data-stu-id="20dad-165">IBM855</span></span>|<span data-ttu-id="20dad-166">OEM Cyrillic</span><span class="sxs-lookup"><span data-stu-id="20dad-166">OEM Cyrillic</span></span>||  
|<span data-ttu-id="20dad-167">857</span><span class="sxs-lookup"><span data-stu-id="20dad-167">857</span></span>|<span data-ttu-id="20dad-168">ibm857</span><span class="sxs-lookup"><span data-stu-id="20dad-168">ibm857</span></span>|<span data-ttu-id="20dad-169">Turecki (DOS)</span><span class="sxs-lookup"><span data-stu-id="20dad-169">Turkish (DOS)</span></span>||  
|<span data-ttu-id="20dad-170">858</span><span class="sxs-lookup"><span data-stu-id="20dad-170">858</span></span>|<span data-ttu-id="20dad-171">IBM00858</span><span class="sxs-lookup"><span data-stu-id="20dad-171">IBM00858</span></span>|<span data-ttu-id="20dad-172">OEM wielojęzyczny Latin I</span><span class="sxs-lookup"><span data-stu-id="20dad-172">OEM Multilingual Latin I</span></span>||  
|<span data-ttu-id="20dad-173">860</span><span class="sxs-lookup"><span data-stu-id="20dad-173">860</span></span>|<span data-ttu-id="20dad-174">IBM860</span><span class="sxs-lookup"><span data-stu-id="20dad-174">IBM860</span></span>|<span data-ttu-id="20dad-175">Portugalski (DOS)</span><span class="sxs-lookup"><span data-stu-id="20dad-175">Portuguese (DOS)</span></span>||  
|<span data-ttu-id="20dad-176">861</span><span class="sxs-lookup"><span data-stu-id="20dad-176">861</span></span>|<span data-ttu-id="20dad-177">ibm861</span><span class="sxs-lookup"><span data-stu-id="20dad-177">ibm861</span></span>|<span data-ttu-id="20dad-178">Islandzki (DOS)</span><span class="sxs-lookup"><span data-stu-id="20dad-178">Icelandic (DOS)</span></span>||  
|<span data-ttu-id="20dad-179">862</span><span class="sxs-lookup"><span data-stu-id="20dad-179">862</span></span>|<span data-ttu-id="20dad-180">DOS-862</span><span class="sxs-lookup"><span data-stu-id="20dad-180">DOS-862</span></span>|<span data-ttu-id="20dad-181">Hebrajski (DOS)</span><span class="sxs-lookup"><span data-stu-id="20dad-181">Hebrew (DOS)</span></span>||  
|<span data-ttu-id="20dad-182">863</span><span class="sxs-lookup"><span data-stu-id="20dad-182">863</span></span>|<span data-ttu-id="20dad-183">IBM863</span><span class="sxs-lookup"><span data-stu-id="20dad-183">IBM863</span></span>|<span data-ttu-id="20dad-184">Francuski kanadyjski (DOS)</span><span class="sxs-lookup"><span data-stu-id="20dad-184">French Canadian (DOS)</span></span>||  
|<span data-ttu-id="20dad-185">864</span><span class="sxs-lookup"><span data-stu-id="20dad-185">864</span></span>|<span data-ttu-id="20dad-186">IBM864</span><span class="sxs-lookup"><span data-stu-id="20dad-186">IBM864</span></span>|<span data-ttu-id="20dad-187">Arabski (864)</span><span class="sxs-lookup"><span data-stu-id="20dad-187">Arabic (864)</span></span>||  
|<span data-ttu-id="20dad-188">865</span><span class="sxs-lookup"><span data-stu-id="20dad-188">865</span></span>|<span data-ttu-id="20dad-189">IBM865</span><span class="sxs-lookup"><span data-stu-id="20dad-189">IBM865</span></span>|<span data-ttu-id="20dad-190">Nordycki (DOS)</span><span class="sxs-lookup"><span data-stu-id="20dad-190">Nordic (DOS)</span></span>||  
|<span data-ttu-id="20dad-191">866</span><span class="sxs-lookup"><span data-stu-id="20dad-191">866</span></span>|<span data-ttu-id="20dad-192">cp866</span><span class="sxs-lookup"><span data-stu-id="20dad-192">cp866</span></span>|<span data-ttu-id="20dad-193">Cyrilice (DOS)</span><span class="sxs-lookup"><span data-stu-id="20dad-193">Cyrillic (DOS)</span></span>||  
|<span data-ttu-id="20dad-194">869</span><span class="sxs-lookup"><span data-stu-id="20dad-194">869</span></span>|<span data-ttu-id="20dad-195">ibm869</span><span class="sxs-lookup"><span data-stu-id="20dad-195">ibm869</span></span>|<span data-ttu-id="20dad-196">Grecki współczesny (DOS)</span><span class="sxs-lookup"><span data-stu-id="20dad-196">Greek, Modern (DOS)</span></span>||  
|<span data-ttu-id="20dad-197">870</span><span class="sxs-lookup"><span data-stu-id="20dad-197">870</span></span>|<span data-ttu-id="20dad-198">IBM870</span><span class="sxs-lookup"><span data-stu-id="20dad-198">IBM870</span></span>|<span data-ttu-id="20dad-199">IBM EBCDIC (wielojęzyczny Latin-2)</span><span class="sxs-lookup"><span data-stu-id="20dad-199">IBM EBCDIC (Multilingual Latin-2)</span></span>||  
|<span data-ttu-id="20dad-200">874</span><span class="sxs-lookup"><span data-stu-id="20dad-200">874</span></span>|<span data-ttu-id="20dad-201">windows-874</span><span class="sxs-lookup"><span data-stu-id="20dad-201">windows-874</span></span>|<span data-ttu-id="20dad-202">Tajski (Windows)</span><span class="sxs-lookup"><span data-stu-id="20dad-202">Thai (Windows)</span></span>||  
|<span data-ttu-id="20dad-203">875</span><span class="sxs-lookup"><span data-stu-id="20dad-203">875</span></span>|<span data-ttu-id="20dad-204">cp875</span><span class="sxs-lookup"><span data-stu-id="20dad-204">cp875</span></span>|<span data-ttu-id="20dad-205">IBM EBCDIC (grecki współczesny)</span><span class="sxs-lookup"><span data-stu-id="20dad-205">IBM EBCDIC (Greek Modern)</span></span>||  
|<span data-ttu-id="20dad-206">932</span><span class="sxs-lookup"><span data-stu-id="20dad-206">932</span></span>|<span data-ttu-id="20dad-207">shift_jis</span><span class="sxs-lookup"><span data-stu-id="20dad-207">shift_jis</span></span>|<span data-ttu-id="20dad-208">Japoński (Shift-JIS)</span><span class="sxs-lookup"><span data-stu-id="20dad-208">Japanese (Shift-JIS)</span></span>||  
|<span data-ttu-id="20dad-209">936</span><span class="sxs-lookup"><span data-stu-id="20dad-209">936</span></span>|<span data-ttu-id="20dad-210">gb2312</span><span class="sxs-lookup"><span data-stu-id="20dad-210">gb2312</span></span>|<span data-ttu-id="20dad-211">Chiński uproszczony (GB2312)</span><span class="sxs-lookup"><span data-stu-id="20dad-211">Chinese Simplified (GB2312)</span></span>|<span data-ttu-id="20dad-212">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-212">✓</span></span>|  
|<span data-ttu-id="20dad-213">949</span><span class="sxs-lookup"><span data-stu-id="20dad-213">949</span></span>|<span data-ttu-id="20dad-214">ks_c_5601-1987</span><span class="sxs-lookup"><span data-stu-id="20dad-214">ks_c_5601-1987</span></span>|<span data-ttu-id="20dad-215">koreański</span><span class="sxs-lookup"><span data-stu-id="20dad-215">Korean</span></span>||  
|<span data-ttu-id="20dad-216">950</span><span class="sxs-lookup"><span data-stu-id="20dad-216">950</span></span>|<span data-ttu-id="20dad-217">big5</span><span class="sxs-lookup"><span data-stu-id="20dad-217">big5</span></span>|<span data-ttu-id="20dad-218">Chiński tradycyjny (Big5)</span><span class="sxs-lookup"><span data-stu-id="20dad-218">Chinese Traditional (Big5)</span></span>||  
|<span data-ttu-id="20dad-219">1026</span><span class="sxs-lookup"><span data-stu-id="20dad-219">1026</span></span>|<span data-ttu-id="20dad-220">IBM1026</span><span class="sxs-lookup"><span data-stu-id="20dad-220">IBM1026</span></span>|<span data-ttu-id="20dad-221">IBM EBCDIC (turecki Latin-5)</span><span class="sxs-lookup"><span data-stu-id="20dad-221">IBM EBCDIC (Turkish Latin-5)</span></span>||  
|<span data-ttu-id="20dad-222">1047</span><span class="sxs-lookup"><span data-stu-id="20dad-222">1047</span></span>|<span data-ttu-id="20dad-223">IBM01047</span><span class="sxs-lookup"><span data-stu-id="20dad-223">IBM01047</span></span>|<span data-ttu-id="20dad-224">IBM Latin 1</span><span class="sxs-lookup"><span data-stu-id="20dad-224">IBM Latin-1</span></span>||  
|<span data-ttu-id="20dad-225">1140</span><span class="sxs-lookup"><span data-stu-id="20dad-225">1140</span></span>|<span data-ttu-id="20dad-226">IBM01140</span><span class="sxs-lookup"><span data-stu-id="20dad-226">IBM01140</span></span>|<span data-ttu-id="20dad-227">IBM EBCDIC (Stany Zjednoczone Kanada Euro)</span><span class="sxs-lookup"><span data-stu-id="20dad-227">IBM EBCDIC (US-Canada-Euro)</span></span>||  
|<span data-ttu-id="20dad-228">1141</span><span class="sxs-lookup"><span data-stu-id="20dad-228">1141</span></span>|<span data-ttu-id="20dad-229">IBM01141</span><span class="sxs-lookup"><span data-stu-id="20dad-229">IBM01141</span></span>|<span data-ttu-id="20dad-230">IBM EBCDIC (Niemcy Euro)</span><span class="sxs-lookup"><span data-stu-id="20dad-230">IBM EBCDIC (Germany-Euro)</span></span>||  
|<span data-ttu-id="20dad-231">1142</span><span class="sxs-lookup"><span data-stu-id="20dad-231">1142</span></span>|<span data-ttu-id="20dad-232">IBM01142</span><span class="sxs-lookup"><span data-stu-id="20dad-232">IBM01142</span></span>|<span data-ttu-id="20dad-233">IBM EBCDIC (Dania Norwegia Euro)</span><span class="sxs-lookup"><span data-stu-id="20dad-233">IBM EBCDIC (Denmark-Norway-Euro)</span></span>||  
|<span data-ttu-id="20dad-234">1143</span><span class="sxs-lookup"><span data-stu-id="20dad-234">1143</span></span>|<span data-ttu-id="20dad-235">IBM01143</span><span class="sxs-lookup"><span data-stu-id="20dad-235">IBM01143</span></span>|<span data-ttu-id="20dad-236">IBM EBCDIC (Finlandia Szwecja Euro)</span><span class="sxs-lookup"><span data-stu-id="20dad-236">IBM EBCDIC (Finland-Sweden-Euro)</span></span>||  
|<span data-ttu-id="20dad-237">1144</span><span class="sxs-lookup"><span data-stu-id="20dad-237">1144</span></span>|<span data-ttu-id="20dad-238">IBM01144</span><span class="sxs-lookup"><span data-stu-id="20dad-238">IBM01144</span></span>|<span data-ttu-id="20dad-239">IBM EBCDIC (Włochy Euro)</span><span class="sxs-lookup"><span data-stu-id="20dad-239">IBM EBCDIC (Italy-Euro)</span></span>||  
|<span data-ttu-id="20dad-240">1145</span><span class="sxs-lookup"><span data-stu-id="20dad-240">1145</span></span>|<span data-ttu-id="20dad-241">IBM01145</span><span class="sxs-lookup"><span data-stu-id="20dad-241">IBM01145</span></span>|<span data-ttu-id="20dad-242">IBM EBCDIC (Hiszpania Euro)</span><span class="sxs-lookup"><span data-stu-id="20dad-242">IBM EBCDIC (Spain-Euro)</span></span>||  
|<span data-ttu-id="20dad-243">1146</span><span class="sxs-lookup"><span data-stu-id="20dad-243">1146</span></span>|<span data-ttu-id="20dad-244">IBM01146</span><span class="sxs-lookup"><span data-stu-id="20dad-244">IBM01146</span></span>|<span data-ttu-id="20dad-245">IBM EBCDIC (Zjednoczone Królestwo Euro)</span><span class="sxs-lookup"><span data-stu-id="20dad-245">IBM EBCDIC (UK-Euro)</span></span>||  
|<span data-ttu-id="20dad-246">1147</span><span class="sxs-lookup"><span data-stu-id="20dad-246">1147</span></span>|<span data-ttu-id="20dad-247">IBM01147</span><span class="sxs-lookup"><span data-stu-id="20dad-247">IBM01147</span></span>|<span data-ttu-id="20dad-248">IBM EBCDIC (Francie Euro)</span><span class="sxs-lookup"><span data-stu-id="20dad-248">IBM EBCDIC (France-Euro)</span></span>||  
|<span data-ttu-id="20dad-249">1148</span><span class="sxs-lookup"><span data-stu-id="20dad-249">1148</span></span>|<span data-ttu-id="20dad-250">IBM01148</span><span class="sxs-lookup"><span data-stu-id="20dad-250">IBM01148</span></span>|<span data-ttu-id="20dad-251">IBM EBCDIC (międzynarodowy Euro)</span><span class="sxs-lookup"><span data-stu-id="20dad-251">IBM EBCDIC (International-Euro)</span></span>||  
|<span data-ttu-id="20dad-252">1149</span><span class="sxs-lookup"><span data-stu-id="20dad-252">1149</span></span>|<span data-ttu-id="20dad-253">IBM01149</span><span class="sxs-lookup"><span data-stu-id="20dad-253">IBM01149</span></span>|<span data-ttu-id="20dad-254">IBM EBCDIC (Island Euro)</span><span class="sxs-lookup"><span data-stu-id="20dad-254">IBM EBCDIC (Icelandic-Euro)</span></span>||  
|<span data-ttu-id="20dad-255">1200</span><span class="sxs-lookup"><span data-stu-id="20dad-255">1200</span></span>|<span data-ttu-id="20dad-256">UTF-16</span><span class="sxs-lookup"><span data-stu-id="20dad-256">utf-16</span></span>|<span data-ttu-id="20dad-257">Unicode</span><span class="sxs-lookup"><span data-stu-id="20dad-257">Unicode</span></span>|<span data-ttu-id="20dad-258">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-258">✓</span></span>|  
|<span data-ttu-id="20dad-259">1201</span><span class="sxs-lookup"><span data-stu-id="20dad-259">1201</span></span>|<span data-ttu-id="20dad-260">unicodeFFFE</span><span class="sxs-lookup"><span data-stu-id="20dad-260">unicodeFFFE</span></span>|<span data-ttu-id="20dad-261">Unicode (Big endian)</span><span class="sxs-lookup"><span data-stu-id="20dad-261">Unicode (Big endian)</span></span>|<span data-ttu-id="20dad-262">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-262">✓</span></span>|  
|<span data-ttu-id="20dad-263">1250</span><span class="sxs-lookup"><span data-stu-id="20dad-263">1250</span></span>|<span data-ttu-id="20dad-264">windows-1250</span><span class="sxs-lookup"><span data-stu-id="20dad-264">windows-1250</span></span>|<span data-ttu-id="20dad-265">Środkowoeuropejski (Windows)</span><span class="sxs-lookup"><span data-stu-id="20dad-265">Central European (Windows)</span></span>||  
|<span data-ttu-id="20dad-266">1251</span><span class="sxs-lookup"><span data-stu-id="20dad-266">1251</span></span>|<span data-ttu-id="20dad-267">windows-1251</span><span class="sxs-lookup"><span data-stu-id="20dad-267">windows-1251</span></span>|<span data-ttu-id="20dad-268">Cyrilice (Windows)</span><span class="sxs-lookup"><span data-stu-id="20dad-268">Cyrillic (Windows)</span></span>||  
|<span data-ttu-id="20dad-269">1252</span><span class="sxs-lookup"><span data-stu-id="20dad-269">1252</span></span>|<span data-ttu-id="20dad-270">Windows-1252</span><span class="sxs-lookup"><span data-stu-id="20dad-270">Windows-1252</span></span>|<span data-ttu-id="20dad-271">Zachodnioeuropejski (Windows)</span><span class="sxs-lookup"><span data-stu-id="20dad-271">Western European (Windows)</span></span>|<span data-ttu-id="20dad-272">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-272">✓</span></span>|  
|<span data-ttu-id="20dad-273">1253</span><span class="sxs-lookup"><span data-stu-id="20dad-273">1253</span></span>|<span data-ttu-id="20dad-274">windows-1253</span><span class="sxs-lookup"><span data-stu-id="20dad-274">windows-1253</span></span>|<span data-ttu-id="20dad-275">Grecki (Windows)</span><span class="sxs-lookup"><span data-stu-id="20dad-275">Greek (Windows)</span></span>||  
|<span data-ttu-id="20dad-276">1254</span><span class="sxs-lookup"><span data-stu-id="20dad-276">1254</span></span>|<span data-ttu-id="20dad-277">windows-1254</span><span class="sxs-lookup"><span data-stu-id="20dad-277">windows-1254</span></span>|<span data-ttu-id="20dad-278">Turecki (Windows)</span><span class="sxs-lookup"><span data-stu-id="20dad-278">Turkish (Windows)</span></span>||  
|<span data-ttu-id="20dad-279">1255</span><span class="sxs-lookup"><span data-stu-id="20dad-279">1255</span></span>|<span data-ttu-id="20dad-280">windows-1255</span><span class="sxs-lookup"><span data-stu-id="20dad-280">windows-1255</span></span>|<span data-ttu-id="20dad-281">Hebrajski (Windows)</span><span class="sxs-lookup"><span data-stu-id="20dad-281">Hebrew (Windows)</span></span>||  
|<span data-ttu-id="20dad-282">1256</span><span class="sxs-lookup"><span data-stu-id="20dad-282">1256</span></span>|<span data-ttu-id="20dad-283">windows-1256</span><span class="sxs-lookup"><span data-stu-id="20dad-283">windows-1256</span></span>|<span data-ttu-id="20dad-284">Arabski (Windows)</span><span class="sxs-lookup"><span data-stu-id="20dad-284">Arabic (Windows)</span></span>||  
|<span data-ttu-id="20dad-285">1257</span><span class="sxs-lookup"><span data-stu-id="20dad-285">1257</span></span>|<span data-ttu-id="20dad-286">windows-1257</span><span class="sxs-lookup"><span data-stu-id="20dad-286">windows-1257</span></span>|<span data-ttu-id="20dad-287">Bałtycki (Windows)</span><span class="sxs-lookup"><span data-stu-id="20dad-287">Baltic (Windows)</span></span>||  
|<span data-ttu-id="20dad-288">1258</span><span class="sxs-lookup"><span data-stu-id="20dad-288">1258</span></span>|<span data-ttu-id="20dad-289">windows-1258</span><span class="sxs-lookup"><span data-stu-id="20dad-289">windows-1258</span></span>|<span data-ttu-id="20dad-290">Wietnamski (Windows)</span><span class="sxs-lookup"><span data-stu-id="20dad-290">Vietnamese (Windows)</span></span>||  
|<span data-ttu-id="20dad-291">1361</span><span class="sxs-lookup"><span data-stu-id="20dad-291">1361</span></span>|<span data-ttu-id="20dad-292">Johab</span><span class="sxs-lookup"><span data-stu-id="20dad-292">Johab</span></span>|<span data-ttu-id="20dad-293">Koreański (Johab)</span><span class="sxs-lookup"><span data-stu-id="20dad-293">Korean (Johab)</span></span>||  
|<span data-ttu-id="20dad-294">10000</span><span class="sxs-lookup"><span data-stu-id="20dad-294">10000</span></span>|<span data-ttu-id="20dad-295">dla komputerów Macintosh</span><span class="sxs-lookup"><span data-stu-id="20dad-295">macintosh</span></span>|<span data-ttu-id="20dad-296">Zachodnioeuropejski (Mac)</span><span class="sxs-lookup"><span data-stu-id="20dad-296">Western European (Mac)</span></span>||  
|<span data-ttu-id="20dad-297">10001</span><span class="sxs-lookup"><span data-stu-id="20dad-297">10001</span></span>|<span data-ttu-id="20dad-298">x-mac — japoński</span><span class="sxs-lookup"><span data-stu-id="20dad-298">x-mac-japanese</span></span>|<span data-ttu-id="20dad-299">Japoński (Mac)</span><span class="sxs-lookup"><span data-stu-id="20dad-299">Japanese (Mac)</span></span>||  
|<span data-ttu-id="20dad-300">10002</span><span class="sxs-lookup"><span data-stu-id="20dad-300">10002</span></span>|<span data-ttu-id="20dad-301">x-mac-chinesetrad</span><span class="sxs-lookup"><span data-stu-id="20dad-301">x-mac-chinesetrad</span></span>|<span data-ttu-id="20dad-302">Chiński tradycyjny (Mac)</span><span class="sxs-lookup"><span data-stu-id="20dad-302">Chinese Traditional (Mac)</span></span>||  
|<span data-ttu-id="20dad-303">10003</span><span class="sxs-lookup"><span data-stu-id="20dad-303">10003</span></span>|<span data-ttu-id="20dad-304">x-mac — koreański</span><span class="sxs-lookup"><span data-stu-id="20dad-304">x-mac-korean</span></span>|<span data-ttu-id="20dad-305">Koreański (Mac)</span><span class="sxs-lookup"><span data-stu-id="20dad-305">Korean (Mac)</span></span>|<span data-ttu-id="20dad-306">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-306">✓</span></span>|  
|<span data-ttu-id="20dad-307">10004</span><span class="sxs-lookup"><span data-stu-id="20dad-307">10004</span></span>|<span data-ttu-id="20dad-308">x-mac-arabic</span><span class="sxs-lookup"><span data-stu-id="20dad-308">x-mac-arabic</span></span>|<span data-ttu-id="20dad-309">Arabski (Mac)</span><span class="sxs-lookup"><span data-stu-id="20dad-309">Arabic (Mac)</span></span>||  
|<span data-ttu-id="20dad-310">10005</span><span class="sxs-lookup"><span data-stu-id="20dad-310">10005</span></span>|<span data-ttu-id="20dad-311">x-mac-hebrew</span><span class="sxs-lookup"><span data-stu-id="20dad-311">x-mac-hebrew</span></span>|<span data-ttu-id="20dad-312">Hebrajski (Mac)</span><span class="sxs-lookup"><span data-stu-id="20dad-312">Hebrew (Mac)</span></span>||  
|<span data-ttu-id="20dad-313">10006</span><span class="sxs-lookup"><span data-stu-id="20dad-313">10006</span></span>|<span data-ttu-id="20dad-314">x-mac — grecki</span><span class="sxs-lookup"><span data-stu-id="20dad-314">x-mac-greek</span></span>|<span data-ttu-id="20dad-315">Grecki (Mac)</span><span class="sxs-lookup"><span data-stu-id="20dad-315">Greek (Mac)</span></span>||  
|<span data-ttu-id="20dad-316">10007</span><span class="sxs-lookup"><span data-stu-id="20dad-316">10007</span></span>|<span data-ttu-id="20dad-317">x-mac-cyrillic</span><span class="sxs-lookup"><span data-stu-id="20dad-317">x-mac-cyrillic</span></span>|<span data-ttu-id="20dad-318">Cyrilice (Mac)</span><span class="sxs-lookup"><span data-stu-id="20dad-318">Cyrillic (Mac)</span></span>||  
|<span data-ttu-id="20dad-319">10008</span><span class="sxs-lookup"><span data-stu-id="20dad-319">10008</span></span>|<span data-ttu-id="20dad-320">x-mac-chinesesimp</span><span class="sxs-lookup"><span data-stu-id="20dad-320">x-mac-chinesesimp</span></span>|<span data-ttu-id="20dad-321">Chiński uproszczony (Mac)</span><span class="sxs-lookup"><span data-stu-id="20dad-321">Chinese Simplified (Mac)</span></span>|<span data-ttu-id="20dad-322">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-322">✓</span></span>|  
|<span data-ttu-id="20dad-323">10010</span><span class="sxs-lookup"><span data-stu-id="20dad-323">10010</span></span>|<span data-ttu-id="20dad-324">x-mac rumuński</span><span class="sxs-lookup"><span data-stu-id="20dad-324">x-mac-romanian</span></span>|<span data-ttu-id="20dad-325">Rumuński (Mac)</span><span class="sxs-lookup"><span data-stu-id="20dad-325">Romanian (Mac)</span></span>||  
|<span data-ttu-id="20dad-326">10017</span><span class="sxs-lookup"><span data-stu-id="20dad-326">10017</span></span>|<span data-ttu-id="20dad-327">x-mac-ukrainian</span><span class="sxs-lookup"><span data-stu-id="20dad-327">x-mac-ukrainian</span></span>|<span data-ttu-id="20dad-328">Ukraiński (Mac)</span><span class="sxs-lookup"><span data-stu-id="20dad-328">Ukrainian (Mac)</span></span>||  
|<span data-ttu-id="20dad-329">10021</span><span class="sxs-lookup"><span data-stu-id="20dad-329">10021</span></span>|<span data-ttu-id="20dad-330">x-mac — tajski</span><span class="sxs-lookup"><span data-stu-id="20dad-330">x-mac-thai</span></span>|<span data-ttu-id="20dad-331">Tajski (Mac)</span><span class="sxs-lookup"><span data-stu-id="20dad-331">Thai (Mac)</span></span>||  
|<span data-ttu-id="20dad-332">10029</span><span class="sxs-lookup"><span data-stu-id="20dad-332">10029</span></span>|<span data-ttu-id="20dad-333">x-mac-ce</span><span class="sxs-lookup"><span data-stu-id="20dad-333">x-mac-ce</span></span>|<span data-ttu-id="20dad-334">Środkowoeuropejski (Mac)</span><span class="sxs-lookup"><span data-stu-id="20dad-334">Central European (Mac)</span></span>||  
|<span data-ttu-id="20dad-335">10079</span><span class="sxs-lookup"><span data-stu-id="20dad-335">10079</span></span>|<span data-ttu-id="20dad-336">x-mac islandzki</span><span class="sxs-lookup"><span data-stu-id="20dad-336">x-mac-icelandic</span></span>|<span data-ttu-id="20dad-337">Islandzki (Mac)</span><span class="sxs-lookup"><span data-stu-id="20dad-337">Icelandic (Mac)</span></span>||  
|<span data-ttu-id="20dad-338">10081</span><span class="sxs-lookup"><span data-stu-id="20dad-338">10081</span></span>|<span data-ttu-id="20dad-339">x-mac-turkish</span><span class="sxs-lookup"><span data-stu-id="20dad-339">x-mac-turkish</span></span>|<span data-ttu-id="20dad-340">Turecki (Mac)</span><span class="sxs-lookup"><span data-stu-id="20dad-340">Turkish (Mac)</span></span>||  
|<span data-ttu-id="20dad-341">10082</span><span class="sxs-lookup"><span data-stu-id="20dad-341">10082</span></span>|<span data-ttu-id="20dad-342">x-mac — chorwacki</span><span class="sxs-lookup"><span data-stu-id="20dad-342">x-mac-croatian</span></span>|<span data-ttu-id="20dad-343">Chorwacki (Mac)</span><span class="sxs-lookup"><span data-stu-id="20dad-343">Croatian (Mac)</span></span>||  
|<span data-ttu-id="20dad-344">12000</span><span class="sxs-lookup"><span data-stu-id="20dad-344">12000</span></span>|<span data-ttu-id="20dad-345">UTF-32</span><span class="sxs-lookup"><span data-stu-id="20dad-345">utf-32</span></span>|<span data-ttu-id="20dad-346">Unicode (UTF-32)</span><span class="sxs-lookup"><span data-stu-id="20dad-346">Unicode (UTF-32)</span></span>|<span data-ttu-id="20dad-347">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-347">✓</span></span>|  
|<span data-ttu-id="20dad-348">12001</span><span class="sxs-lookup"><span data-stu-id="20dad-348">12001</span></span>|<span data-ttu-id="20dad-349">utf-32BE</span><span class="sxs-lookup"><span data-stu-id="20dad-349">utf-32BE</span></span>|<span data-ttu-id="20dad-350">Unicode (UTF-32 Big endian)</span><span class="sxs-lookup"><span data-stu-id="20dad-350">Unicode (UTF-32 Big endian)</span></span>|<span data-ttu-id="20dad-351">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-351">✓</span></span>|  
|<span data-ttu-id="20dad-352">20000</span><span class="sxs-lookup"><span data-stu-id="20dad-352">20000</span></span>|<span data-ttu-id="20dad-353">x-Chinese-CNS</span><span class="sxs-lookup"><span data-stu-id="20dad-353">x-Chinese-CNS</span></span>|<span data-ttu-id="20dad-354">Chiński tradycyjny (CNS)</span><span class="sxs-lookup"><span data-stu-id="20dad-354">Chinese Traditional (CNS)</span></span>||  
|<span data-ttu-id="20dad-355">20001</span><span class="sxs-lookup"><span data-stu-id="20dad-355">20001</span></span>|<span data-ttu-id="20dad-356">x-cp20001</span><span class="sxs-lookup"><span data-stu-id="20dad-356">x-cp20001</span></span>|<span data-ttu-id="20dad-357">WAN TCA</span><span class="sxs-lookup"><span data-stu-id="20dad-357">TCA Taiwan</span></span>||  
|<span data-ttu-id="20dad-358">20002</span><span class="sxs-lookup"><span data-stu-id="20dad-358">20002</span></span>|<span data-ttu-id="20dad-359">x-Chinese-Eten</span><span class="sxs-lookup"><span data-stu-id="20dad-359">x-Chinese-Eten</span></span>|<span data-ttu-id="20dad-360">Chiński tradycyjny (Eten)</span><span class="sxs-lookup"><span data-stu-id="20dad-360">Chinese Traditional (Eten)</span></span>||  
|<span data-ttu-id="20dad-361">20003</span><span class="sxs-lookup"><span data-stu-id="20dad-361">20003</span></span>|<span data-ttu-id="20dad-362">x-cp20003</span><span class="sxs-lookup"><span data-stu-id="20dad-362">x-cp20003</span></span>|<span data-ttu-id="20dad-363">WAN Ibm5550</span><span class="sxs-lookup"><span data-stu-id="20dad-363">IBM5550 Taiwan</span></span>||  
|<span data-ttu-id="20dad-364">20004</span><span class="sxs-lookup"><span data-stu-id="20dad-364">20004</span></span>|<span data-ttu-id="20dad-365">x-cp20004</span><span class="sxs-lookup"><span data-stu-id="20dad-365">x-cp20004</span></span>|<span data-ttu-id="20dad-366">WAN Teletext</span><span class="sxs-lookup"><span data-stu-id="20dad-366">TeleText Taiwan</span></span>||  
|<span data-ttu-id="20dad-367">20005</span><span class="sxs-lookup"><span data-stu-id="20dad-367">20005</span></span>|<span data-ttu-id="20dad-368">x-cp20005</span><span class="sxs-lookup"><span data-stu-id="20dad-368">x-cp20005</span></span>|<span data-ttu-id="20dad-369">Tchaj-WAN</span><span class="sxs-lookup"><span data-stu-id="20dad-369">Wang Taiwan</span></span>||  
|<span data-ttu-id="20dad-370">20105</span><span class="sxs-lookup"><span data-stu-id="20dad-370">20105</span></span>|<span data-ttu-id="20dad-371">x-IA5</span><span class="sxs-lookup"><span data-stu-id="20dad-371">x-IA5</span></span>|<span data-ttu-id="20dad-372">Zachodnioeuropejski (IA5)</span><span class="sxs-lookup"><span data-stu-id="20dad-372">Western European (IA5)</span></span>||  
|<span data-ttu-id="20dad-373">20106</span><span class="sxs-lookup"><span data-stu-id="20dad-373">20106</span></span>|<span data-ttu-id="20dad-374">x-IA5 — niemiecki</span><span class="sxs-lookup"><span data-stu-id="20dad-374">x-IA5-German</span></span>|<span data-ttu-id="20dad-375">Niemiecki (IA5)</span><span class="sxs-lookup"><span data-stu-id="20dad-375">German (IA5)</span></span>||  
|<span data-ttu-id="20dad-376">20107</span><span class="sxs-lookup"><span data-stu-id="20dad-376">20107</span></span>|<span data-ttu-id="20dad-377">x-IA5 — szwedzki</span><span class="sxs-lookup"><span data-stu-id="20dad-377">x-IA5-Swedish</span></span>|<span data-ttu-id="20dad-378">Szwedzki (IA5)</span><span class="sxs-lookup"><span data-stu-id="20dad-378">Swedish (IA5)</span></span>||  
|<span data-ttu-id="20dad-379">20108</span><span class="sxs-lookup"><span data-stu-id="20dad-379">20108</span></span>|<span data-ttu-id="20dad-380">x-IA5-Norwegian</span><span class="sxs-lookup"><span data-stu-id="20dad-380">x-IA5-Norwegian</span></span>|<span data-ttu-id="20dad-381">Norweski (IA5)</span><span class="sxs-lookup"><span data-stu-id="20dad-381">Norwegian (IA5)</span></span>||  
|<span data-ttu-id="20dad-382">20127</span><span class="sxs-lookup"><span data-stu-id="20dad-382">20127</span></span>|<span data-ttu-id="20dad-383">us-ascii</span><span class="sxs-lookup"><span data-stu-id="20dad-383">us-ascii</span></span>|<span data-ttu-id="20dad-384">US-ASCII</span><span class="sxs-lookup"><span data-stu-id="20dad-384">US-ASCII</span></span>|<span data-ttu-id="20dad-385">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-385">✓</span></span>|  
|<span data-ttu-id="20dad-386">20261</span><span class="sxs-lookup"><span data-stu-id="20dad-386">20261</span></span>|<span data-ttu-id="20dad-387">x-cp20261</span><span class="sxs-lookup"><span data-stu-id="20dad-387">x-cp20261</span></span>|<span data-ttu-id="20dad-388">T.61</span><span class="sxs-lookup"><span data-stu-id="20dad-388">T.61</span></span>||  
|<span data-ttu-id="20dad-389">20269</span><span class="sxs-lookup"><span data-stu-id="20dad-389">20269</span></span>|<span data-ttu-id="20dad-390">x-cp20269</span><span class="sxs-lookup"><span data-stu-id="20dad-390">x-cp20269</span></span>|<span data-ttu-id="20dad-391">ISO-6937</span><span class="sxs-lookup"><span data-stu-id="20dad-391">ISO-6937</span></span>||  
|<span data-ttu-id="20dad-392">20273</span><span class="sxs-lookup"><span data-stu-id="20dad-392">20273</span></span>|<span data-ttu-id="20dad-393">IBM273</span><span class="sxs-lookup"><span data-stu-id="20dad-393">IBM273</span></span>|<span data-ttu-id="20dad-394">IBM EBCDIC (Niemcy)</span><span class="sxs-lookup"><span data-stu-id="20dad-394">IBM EBCDIC (Germany)</span></span>||  
|<span data-ttu-id="20dad-395">20277</span><span class="sxs-lookup"><span data-stu-id="20dad-395">20277</span></span>|<span data-ttu-id="20dad-396">IBM277</span><span class="sxs-lookup"><span data-stu-id="20dad-396">IBM277</span></span>|<span data-ttu-id="20dad-397">IBM EBCDIC (Dania Norwegia)</span><span class="sxs-lookup"><span data-stu-id="20dad-397">IBM EBCDIC (Denmark-Norway)</span></span>||  
|<span data-ttu-id="20dad-398">20278</span><span class="sxs-lookup"><span data-stu-id="20dad-398">20278</span></span>|<span data-ttu-id="20dad-399">IBM278</span><span class="sxs-lookup"><span data-stu-id="20dad-399">IBM278</span></span>|<span data-ttu-id="20dad-400">IBM EBCDIC (Finlandia Szwecja)</span><span class="sxs-lookup"><span data-stu-id="20dad-400">IBM EBCDIC (Finland-Sweden)</span></span>||  
|<span data-ttu-id="20dad-401">20280</span><span class="sxs-lookup"><span data-stu-id="20dad-401">20280</span></span>|<span data-ttu-id="20dad-402">IBM280</span><span class="sxs-lookup"><span data-stu-id="20dad-402">IBM280</span></span>|<span data-ttu-id="20dad-403">IBM EBCDIC (Włochy)</span><span class="sxs-lookup"><span data-stu-id="20dad-403">IBM EBCDIC (Italy)</span></span>||  
|<span data-ttu-id="20dad-404">20284</span><span class="sxs-lookup"><span data-stu-id="20dad-404">20284</span></span>|<span data-ttu-id="20dad-405">IBM284</span><span class="sxs-lookup"><span data-stu-id="20dad-405">IBM284</span></span>|<span data-ttu-id="20dad-406">IBM EBCDIC (Hiszpania)</span><span class="sxs-lookup"><span data-stu-id="20dad-406">IBM EBCDIC (Spain)</span></span>||  
|<span data-ttu-id="20dad-407">20285</span><span class="sxs-lookup"><span data-stu-id="20dad-407">20285</span></span>|<span data-ttu-id="20dad-408">IBM285</span><span class="sxs-lookup"><span data-stu-id="20dad-408">IBM285</span></span>|<span data-ttu-id="20dad-409">IBM EBCDIC (UK)</span><span class="sxs-lookup"><span data-stu-id="20dad-409">IBM EBCDIC (UK)</span></span>||  
|<span data-ttu-id="20dad-410">20290</span><span class="sxs-lookup"><span data-stu-id="20dad-410">20290</span></span>|<span data-ttu-id="20dad-411">IBM290</span><span class="sxs-lookup"><span data-stu-id="20dad-411">IBM290</span></span>|<span data-ttu-id="20dad-412">IBM EBCDIC (Japonsko-katakana)</span><span class="sxs-lookup"><span data-stu-id="20dad-412">IBM EBCDIC (Japanese katakana)</span></span>||  
|<span data-ttu-id="20dad-413">20297</span><span class="sxs-lookup"><span data-stu-id="20dad-413">20297</span></span>|<span data-ttu-id="20dad-414">IBM297</span><span class="sxs-lookup"><span data-stu-id="20dad-414">IBM297</span></span>|<span data-ttu-id="20dad-415">IBM EBCDIC (Francie)</span><span class="sxs-lookup"><span data-stu-id="20dad-415">IBM EBCDIC (France)</span></span>||  
|<span data-ttu-id="20dad-416">20420</span><span class="sxs-lookup"><span data-stu-id="20dad-416">20420</span></span>|<span data-ttu-id="20dad-417">IBM420</span><span class="sxs-lookup"><span data-stu-id="20dad-417">IBM420</span></span>|<span data-ttu-id="20dad-418">IBM EBCDIC (arabski)</span><span class="sxs-lookup"><span data-stu-id="20dad-418">IBM EBCDIC (Arabic)</span></span>||  
|<span data-ttu-id="20dad-419">20423</span><span class="sxs-lookup"><span data-stu-id="20dad-419">20423</span></span>|<span data-ttu-id="20dad-420">IBM423</span><span class="sxs-lookup"><span data-stu-id="20dad-420">IBM423</span></span>|<span data-ttu-id="20dad-421">IBM EBCDIC (grecki)</span><span class="sxs-lookup"><span data-stu-id="20dad-421">IBM EBCDIC (Greek)</span></span>||  
|<span data-ttu-id="20dad-422">20424</span><span class="sxs-lookup"><span data-stu-id="20dad-422">20424</span></span>|<span data-ttu-id="20dad-423">IBM424</span><span class="sxs-lookup"><span data-stu-id="20dad-423">IBM424</span></span>|<span data-ttu-id="20dad-424">IBM EBCDIC (hebrajski)</span><span class="sxs-lookup"><span data-stu-id="20dad-424">IBM EBCDIC (Hebrew)</span></span>||  
|<span data-ttu-id="20dad-425">20833</span><span class="sxs-lookup"><span data-stu-id="20dad-425">20833</span></span>|<span data-ttu-id="20dad-426">EBCDIC-x-KoreanExtended</span><span class="sxs-lookup"><span data-stu-id="20dad-426">x-EBCDIC-KoreanExtended</span></span>|<span data-ttu-id="20dad-427">IBM EBCDIC (koreański rozszerzony)</span><span class="sxs-lookup"><span data-stu-id="20dad-427">IBM EBCDIC (Korean Extended)</span></span>||  
|<span data-ttu-id="20dad-428">20838</span><span class="sxs-lookup"><span data-stu-id="20dad-428">20838</span></span>|<span data-ttu-id="20dad-429">IBM — tajski</span><span class="sxs-lookup"><span data-stu-id="20dad-429">IBM-Thai</span></span>|<span data-ttu-id="20dad-430">IBM EBCDIC (tajski)</span><span class="sxs-lookup"><span data-stu-id="20dad-430">IBM EBCDIC (Thai)</span></span>||  
|<span data-ttu-id="20dad-431">20866</span><span class="sxs-lookup"><span data-stu-id="20dad-431">20866</span></span>|<span data-ttu-id="20dad-432">KOI8-r</span><span class="sxs-lookup"><span data-stu-id="20dad-432">koi8-r</span></span>|<span data-ttu-id="20dad-433">Cyrilice (KOI8-R)</span><span class="sxs-lookup"><span data-stu-id="20dad-433">Cyrillic (KOI8-R)</span></span>||  
|<span data-ttu-id="20dad-434">20871</span><span class="sxs-lookup"><span data-stu-id="20dad-434">20871</span></span>|<span data-ttu-id="20dad-435">IBM871</span><span class="sxs-lookup"><span data-stu-id="20dad-435">IBM871</span></span>|<span data-ttu-id="20dad-436">IBM EBCDIC (islandzki)</span><span class="sxs-lookup"><span data-stu-id="20dad-436">IBM EBCDIC (Icelandic)</span></span>||  
|<span data-ttu-id="20dad-437">20880</span><span class="sxs-lookup"><span data-stu-id="20dad-437">20880</span></span>|<span data-ttu-id="20dad-438">IBM880</span><span class="sxs-lookup"><span data-stu-id="20dad-438">IBM880</span></span>|<span data-ttu-id="20dad-439">IBM EBCDIC (rosyjski cyrylica)</span><span class="sxs-lookup"><span data-stu-id="20dad-439">IBM EBCDIC (Cyrillic Russian)</span></span>||  
|<span data-ttu-id="20dad-440">20905</span><span class="sxs-lookup"><span data-stu-id="20dad-440">20905</span></span>|<span data-ttu-id="20dad-441">IBM905</span><span class="sxs-lookup"><span data-stu-id="20dad-441">IBM905</span></span>|<span data-ttu-id="20dad-442">IBM EBCDIC (turecki)</span><span class="sxs-lookup"><span data-stu-id="20dad-442">IBM EBCDIC (Turkish)</span></span>||  
|<span data-ttu-id="20dad-443">20924</span><span class="sxs-lookup"><span data-stu-id="20dad-443">20924</span></span>|<span data-ttu-id="20dad-444">IBM00924</span><span class="sxs-lookup"><span data-stu-id="20dad-444">IBM00924</span></span>|<span data-ttu-id="20dad-445">IBM Latin 1</span><span class="sxs-lookup"><span data-stu-id="20dad-445">IBM Latin-1</span></span>||  
|<span data-ttu-id="20dad-446">20932</span><span class="sxs-lookup"><span data-stu-id="20dad-446">20932</span></span>|<span data-ttu-id="20dad-447">EUC-JP</span><span class="sxs-lookup"><span data-stu-id="20dad-447">EUC-JP</span></span>|<span data-ttu-id="20dad-448">Japoński (JIS 0208 1990 r. i 0212 1990)</span><span class="sxs-lookup"><span data-stu-id="20dad-448">Japanese (JIS 0208-1990 and 0212-1990)</span></span>||  
|<span data-ttu-id="20dad-449">20936</span><span class="sxs-lookup"><span data-stu-id="20dad-449">20936</span></span>|<span data-ttu-id="20dad-450">x-cp20936</span><span class="sxs-lookup"><span data-stu-id="20dad-450">x-cp20936</span></span>|<span data-ttu-id="20dad-451">Chiński uproszczony (GB2312-80)</span><span class="sxs-lookup"><span data-stu-id="20dad-451">Chinese Simplified (GB2312-80)</span></span>|<span data-ttu-id="20dad-452">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-452">✓</span></span>|  
|<span data-ttu-id="20dad-453">20949</span><span class="sxs-lookup"><span data-stu-id="20dad-453">20949</span></span>|<span data-ttu-id="20dad-454">x-cp20949</span><span class="sxs-lookup"><span data-stu-id="20dad-454">x-cp20949</span></span>|<span data-ttu-id="20dad-455">Koreański Wansung</span><span class="sxs-lookup"><span data-stu-id="20dad-455">Korean Wansung</span></span>|<span data-ttu-id="20dad-456">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-456">✓</span></span>|  
|<span data-ttu-id="20dad-457">21025</span><span class="sxs-lookup"><span data-stu-id="20dad-457">21025</span></span>|<span data-ttu-id="20dad-458">cp1025</span><span class="sxs-lookup"><span data-stu-id="20dad-458">cp1025</span></span>|<span data-ttu-id="20dad-459">IBM EBCDIC (serbski bułgarski cyrylica)</span><span class="sxs-lookup"><span data-stu-id="20dad-459">IBM EBCDIC (Cyrillic Serbian-Bulgarian)</span></span>||  
|<span data-ttu-id="20dad-460">21866</span><span class="sxs-lookup"><span data-stu-id="20dad-460">21866</span></span>|<span data-ttu-id="20dad-461">KOI8-u</span><span class="sxs-lookup"><span data-stu-id="20dad-461">koi8-u</span></span>|<span data-ttu-id="20dad-462">Cyrilice (KOI8-U)</span><span class="sxs-lookup"><span data-stu-id="20dad-462">Cyrillic (KOI8-U)</span></span>||  
|<span data-ttu-id="20dad-463">28591</span><span class="sxs-lookup"><span data-stu-id="20dad-463">28591</span></span>|<span data-ttu-id="20dad-464">ISO-8859-1</span><span class="sxs-lookup"><span data-stu-id="20dad-464">iso-8859-1</span></span>|<span data-ttu-id="20dad-465">Zachodnioeuropejski (ISO)</span><span class="sxs-lookup"><span data-stu-id="20dad-465">Western European (ISO)</span></span>|<span data-ttu-id="20dad-466">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-466">✓</span></span>|  
|<span data-ttu-id="20dad-467">28592</span><span class="sxs-lookup"><span data-stu-id="20dad-467">28592</span></span>|<span data-ttu-id="20dad-468">ISO-8859-2</span><span class="sxs-lookup"><span data-stu-id="20dad-468">iso-8859-2</span></span>|<span data-ttu-id="20dad-469">Środkowoeuropejski (ISO)</span><span class="sxs-lookup"><span data-stu-id="20dad-469">Central European (ISO)</span></span>||  
|<span data-ttu-id="20dad-470">28593</span><span class="sxs-lookup"><span data-stu-id="20dad-470">28593</span></span>|<span data-ttu-id="20dad-471">ISO-8859-3</span><span class="sxs-lookup"><span data-stu-id="20dad-471">iso-8859-3</span></span>|<span data-ttu-id="20dad-472">3 alfabetu łacińskiego (ISO)</span><span class="sxs-lookup"><span data-stu-id="20dad-472">Latin 3 (ISO)</span></span>||  
|<span data-ttu-id="20dad-473">28594</span><span class="sxs-lookup"><span data-stu-id="20dad-473">28594</span></span>|<span data-ttu-id="20dad-474">ISO-8859-4</span><span class="sxs-lookup"><span data-stu-id="20dad-474">iso-8859-4</span></span>|<span data-ttu-id="20dad-475">Bałtycki (ISO)</span><span class="sxs-lookup"><span data-stu-id="20dad-475">Baltic (ISO)</span></span>||  
|<span data-ttu-id="20dad-476">28595</span><span class="sxs-lookup"><span data-stu-id="20dad-476">28595</span></span>|<span data-ttu-id="20dad-477">ISO-8859-5</span><span class="sxs-lookup"><span data-stu-id="20dad-477">iso-8859-5</span></span>|<span data-ttu-id="20dad-478">Cyrilice (ISO)</span><span class="sxs-lookup"><span data-stu-id="20dad-478">Cyrillic (ISO)</span></span>||  
|<span data-ttu-id="20dad-479">28596</span><span class="sxs-lookup"><span data-stu-id="20dad-479">28596</span></span>|<span data-ttu-id="20dad-480">ISO-8859-6</span><span class="sxs-lookup"><span data-stu-id="20dad-480">iso-8859-6</span></span>|<span data-ttu-id="20dad-481">Arabski (ISO)</span><span class="sxs-lookup"><span data-stu-id="20dad-481">Arabic (ISO)</span></span>||  
|<span data-ttu-id="20dad-482">28597</span><span class="sxs-lookup"><span data-stu-id="20dad-482">28597</span></span>|<span data-ttu-id="20dad-483">ISO-8859-7</span><span class="sxs-lookup"><span data-stu-id="20dad-483">iso-8859-7</span></span>|<span data-ttu-id="20dad-484">Grecki (ISO)</span><span class="sxs-lookup"><span data-stu-id="20dad-484">Greek (ISO)</span></span>||  
|<span data-ttu-id="20dad-485">28598</span><span class="sxs-lookup"><span data-stu-id="20dad-485">28598</span></span>|<span data-ttu-id="20dad-486">ISO-8859-8</span><span class="sxs-lookup"><span data-stu-id="20dad-486">iso-8859-8</span></span>|<span data-ttu-id="20dad-487">Hebrajski (ISO-Visual)</span><span class="sxs-lookup"><span data-stu-id="20dad-487">Hebrew (ISO-Visual)</span></span>|<span data-ttu-id="20dad-488">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-488">✓</span></span>|  
|<span data-ttu-id="20dad-489">28599</span><span class="sxs-lookup"><span data-stu-id="20dad-489">28599</span></span>|<span data-ttu-id="20dad-490">ISO-8859-9</span><span class="sxs-lookup"><span data-stu-id="20dad-490">iso-8859-9</span></span>|<span data-ttu-id="20dad-491">Turecki (ISO)</span><span class="sxs-lookup"><span data-stu-id="20dad-491">Turkish (ISO)</span></span>||  
|<span data-ttu-id="20dad-492">28603</span><span class="sxs-lookup"><span data-stu-id="20dad-492">28603</span></span>|<span data-ttu-id="20dad-493">ISO-8859-13</span><span class="sxs-lookup"><span data-stu-id="20dad-493">iso-8859-13</span></span>|<span data-ttu-id="20dad-494">Estoński (ISO)</span><span class="sxs-lookup"><span data-stu-id="20dad-494">Estonian (ISO)</span></span>||  
|<span data-ttu-id="20dad-495">28605</span><span class="sxs-lookup"><span data-stu-id="20dad-495">28605</span></span>|<span data-ttu-id="20dad-496">ISO-8859-15</span><span class="sxs-lookup"><span data-stu-id="20dad-496">iso-8859-15</span></span>|<span data-ttu-id="20dad-497">Łaciński 9 (ISO)</span><span class="sxs-lookup"><span data-stu-id="20dad-497">Latin 9 (ISO)</span></span>||  
|<span data-ttu-id="20dad-498">29001</span><span class="sxs-lookup"><span data-stu-id="20dad-498">29001</span></span>|<span data-ttu-id="20dad-499">x-Europa</span><span class="sxs-lookup"><span data-stu-id="20dad-499">x-Europa</span></span>|<span data-ttu-id="20dad-500">Europa</span><span class="sxs-lookup"><span data-stu-id="20dad-500">Europa</span></span>||  
|<span data-ttu-id="20dad-501">38598</span><span class="sxs-lookup"><span data-stu-id="20dad-501">38598</span></span>|<span data-ttu-id="20dad-502">iso-8859-8-i</span><span class="sxs-lookup"><span data-stu-id="20dad-502">iso-8859-8-i</span></span>|<span data-ttu-id="20dad-503">Hebrajski (ISO-Logical)</span><span class="sxs-lookup"><span data-stu-id="20dad-503">Hebrew (ISO-Logical)</span></span>|<span data-ttu-id="20dad-504">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-504">✓</span></span>|  
|<span data-ttu-id="20dad-505">50220</span><span class="sxs-lookup"><span data-stu-id="20dad-505">50220</span></span>|<span data-ttu-id="20dad-506">iso-2022-jp</span><span class="sxs-lookup"><span data-stu-id="20dad-506">iso-2022-jp</span></span>|<span data-ttu-id="20dad-507">Japoński (JIS)</span><span class="sxs-lookup"><span data-stu-id="20dad-507">Japanese (JIS)</span></span>|<span data-ttu-id="20dad-508">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-508">✓</span></span>|  
|<span data-ttu-id="20dad-509">50221</span><span class="sxs-lookup"><span data-stu-id="20dad-509">50221</span></span>|<span data-ttu-id="20dad-510">csISO2022JP</span><span class="sxs-lookup"><span data-stu-id="20dad-510">csISO2022JP</span></span>|<span data-ttu-id="20dad-511">Japoński (JIS-dozwolone 1-bajtowe znaki Kana)</span><span class="sxs-lookup"><span data-stu-id="20dad-511">Japanese (JIS-Allow 1 byte Kana)</span></span>|<span data-ttu-id="20dad-512">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-512">✓</span></span>|  
|<span data-ttu-id="20dad-513">50222</span><span class="sxs-lookup"><span data-stu-id="20dad-513">50222</span></span>|<span data-ttu-id="20dad-514">iso-2022-jp</span><span class="sxs-lookup"><span data-stu-id="20dad-514">iso-2022-jp</span></span>|<span data-ttu-id="20dad-515">Japoński (JIS-dozwolone 1-bajtowe znaki Kana - tak / SI)</span><span class="sxs-lookup"><span data-stu-id="20dad-515">Japanese (JIS-Allow 1 byte Kana - SO/SI)</span></span>|<span data-ttu-id="20dad-516">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-516">✓</span></span>|  
|<span data-ttu-id="20dad-517">50225</span><span class="sxs-lookup"><span data-stu-id="20dad-517">50225</span></span>|<span data-ttu-id="20dad-518">ISO-2022-kr</span><span class="sxs-lookup"><span data-stu-id="20dad-518">iso-2022-kr</span></span>|<span data-ttu-id="20dad-519">Koreański (ISO)</span><span class="sxs-lookup"><span data-stu-id="20dad-519">Korean (ISO)</span></span>|<span data-ttu-id="20dad-520">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-520">✓</span></span>|  
|<span data-ttu-id="20dad-521">50227</span><span class="sxs-lookup"><span data-stu-id="20dad-521">50227</span></span>|<span data-ttu-id="20dad-522">x-cp50227</span><span class="sxs-lookup"><span data-stu-id="20dad-522">x-cp50227</span></span>|<span data-ttu-id="20dad-523">Chiński uproszczony (ISO-2022)</span><span class="sxs-lookup"><span data-stu-id="20dad-523">Chinese Simplified (ISO-2022)</span></span>|<span data-ttu-id="20dad-524">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-524">✓</span></span>|  
|<span data-ttu-id="20dad-525">51932</span><span class="sxs-lookup"><span data-stu-id="20dad-525">51932</span></span>|<span data-ttu-id="20dad-526">euc-jp</span><span class="sxs-lookup"><span data-stu-id="20dad-526">euc-jp</span></span>|<span data-ttu-id="20dad-527">Japoński (EUC)</span><span class="sxs-lookup"><span data-stu-id="20dad-527">Japanese (EUC)</span></span>|<span data-ttu-id="20dad-528">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-528">✓</span></span>|  
|<span data-ttu-id="20dad-529">51936</span><span class="sxs-lookup"><span data-stu-id="20dad-529">51936</span></span>|<span data-ttu-id="20dad-530">EUC-CN</span><span class="sxs-lookup"><span data-stu-id="20dad-530">EUC-CN</span></span>|<span data-ttu-id="20dad-531">Chiński uproszczony (EUC)</span><span class="sxs-lookup"><span data-stu-id="20dad-531">Chinese Simplified (EUC)</span></span>|<span data-ttu-id="20dad-532">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-532">✓</span></span>|  
|<span data-ttu-id="20dad-533">51949</span><span class="sxs-lookup"><span data-stu-id="20dad-533">51949</span></span>|<span data-ttu-id="20dad-534">euc-kr</span><span class="sxs-lookup"><span data-stu-id="20dad-534">euc-kr</span></span>|<span data-ttu-id="20dad-535">Koreański (EUC)</span><span class="sxs-lookup"><span data-stu-id="20dad-535">Korean (EUC)</span></span>|<span data-ttu-id="20dad-536">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-536">✓</span></span>|  
|<span data-ttu-id="20dad-537">52936</span><span class="sxs-lookup"><span data-stu-id="20dad-537">52936</span></span>|<span data-ttu-id="20dad-538">hz-gb-2312</span><span class="sxs-lookup"><span data-stu-id="20dad-538">hz-gb-2312</span></span>|<span data-ttu-id="20dad-539">Chiński uproszczony (HZ)</span><span class="sxs-lookup"><span data-stu-id="20dad-539">Chinese Simplified (HZ)</span></span>|<span data-ttu-id="20dad-540">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-540">✓</span></span>|  
|<span data-ttu-id="20dad-541">54936</span><span class="sxs-lookup"><span data-stu-id="20dad-541">54936</span></span>|<span data-ttu-id="20dad-542">GB18030</span><span class="sxs-lookup"><span data-stu-id="20dad-542">GB18030</span></span>|<span data-ttu-id="20dad-543">Chiński uproszczony (GB18030)</span><span class="sxs-lookup"><span data-stu-id="20dad-543">Chinese Simplified (GB18030)</span></span>|<span data-ttu-id="20dad-544">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-544">✓</span></span>|  
|<span data-ttu-id="20dad-545">57002</span><span class="sxs-lookup"><span data-stu-id="20dad-545">57002</span></span>|<span data-ttu-id="20dad-546">x-iscii-de</span><span class="sxs-lookup"><span data-stu-id="20dad-546">x-iscii-de</span></span>|<span data-ttu-id="20dad-547">ISCII dewanagari</span><span class="sxs-lookup"><span data-stu-id="20dad-547">ISCII Devanagari</span></span>|<span data-ttu-id="20dad-548">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-548">✓</span></span>|  
|<span data-ttu-id="20dad-549">57003</span><span class="sxs-lookup"><span data-stu-id="20dad-549">57003</span></span>|<span data-ttu-id="20dad-550">x-iscii-be</span><span class="sxs-lookup"><span data-stu-id="20dad-550">x-iscii-be</span></span>|<span data-ttu-id="20dad-551">ISCII Bengali</span><span class="sxs-lookup"><span data-stu-id="20dad-551">ISCII Bengali</span></span>|<span data-ttu-id="20dad-552">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-552">✓</span></span>|  
|<span data-ttu-id="20dad-553">57004</span><span class="sxs-lookup"><span data-stu-id="20dad-553">57004</span></span>|<span data-ttu-id="20dad-554">x-iscii danych</span><span class="sxs-lookup"><span data-stu-id="20dad-554">x-iscii-ta</span></span>|<span data-ttu-id="20dad-555">ISCII tamilski</span><span class="sxs-lookup"><span data-stu-id="20dad-555">ISCII Tamil</span></span>|<span data-ttu-id="20dad-556">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-556">✓</span></span>|  
|<span data-ttu-id="20dad-557">57005</span><span class="sxs-lookup"><span data-stu-id="20dad-557">57005</span></span>|<span data-ttu-id="20dad-558">iscii-x Usuń</span><span class="sxs-lookup"><span data-stu-id="20dad-558">x-iscii-te</span></span>|<span data-ttu-id="20dad-559">ISCII Telugu</span><span class="sxs-lookup"><span data-stu-id="20dad-559">ISCII Telugu</span></span>|<span data-ttu-id="20dad-560">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-560">✓</span></span>|  
|<span data-ttu-id="20dad-561">57006</span><span class="sxs-lookup"><span data-stu-id="20dad-561">57006</span></span>|<span data-ttu-id="20dad-562">x iscii — jako</span><span class="sxs-lookup"><span data-stu-id="20dad-562">x-iscii-as</span></span>|<span data-ttu-id="20dad-563">ISCII assamski</span><span class="sxs-lookup"><span data-stu-id="20dad-563">ISCII Assamese</span></span>|<span data-ttu-id="20dad-564">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-564">✓</span></span>|  
|<span data-ttu-id="20dad-565">57007</span><span class="sxs-lookup"><span data-stu-id="20dad-565">57007</span></span>|<span data-ttu-id="20dad-566">x-iscii — lub</span><span class="sxs-lookup"><span data-stu-id="20dad-566">x-iscii-or</span></span>|<span data-ttu-id="20dad-567">ISCII orija</span><span class="sxs-lookup"><span data-stu-id="20dad-567">ISCII Oriya</span></span>|<span data-ttu-id="20dad-568">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-568">✓</span></span>|  
|<span data-ttu-id="20dad-569">57008</span><span class="sxs-lookup"><span data-stu-id="20dad-569">57008</span></span>|<span data-ttu-id="20dad-570">x-iscii-ka</span><span class="sxs-lookup"><span data-stu-id="20dad-570">x-iscii-ka</span></span>|<span data-ttu-id="20dad-571">ISCII Kannada</span><span class="sxs-lookup"><span data-stu-id="20dad-571">ISCII Kannada</span></span>|<span data-ttu-id="20dad-572">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-572">✓</span></span>|  
|<span data-ttu-id="20dad-573">57009</span><span class="sxs-lookup"><span data-stu-id="20dad-573">57009</span></span>|<span data-ttu-id="20dad-574">x-iscii-ma</span><span class="sxs-lookup"><span data-stu-id="20dad-574">x-iscii-ma</span></span>|<span data-ttu-id="20dad-575">ISCII Malayalam</span><span class="sxs-lookup"><span data-stu-id="20dad-575">ISCII Malayalam</span></span>|<span data-ttu-id="20dad-576">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-576">✓</span></span>|  
|<span data-ttu-id="20dad-577">57010</span><span class="sxs-lookup"><span data-stu-id="20dad-577">57010</span></span>|<span data-ttu-id="20dad-578">x-iscii-gu</span><span class="sxs-lookup"><span data-stu-id="20dad-578">x-iscii-gu</span></span>|<span data-ttu-id="20dad-579">ISCII Gujarati</span><span class="sxs-lookup"><span data-stu-id="20dad-579">ISCII Gujarati</span></span>|<span data-ttu-id="20dad-580">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-580">✓</span></span>|  
|<span data-ttu-id="20dad-581">57011</span><span class="sxs-lookup"><span data-stu-id="20dad-581">57011</span></span>|<span data-ttu-id="20dad-582">x-iscii-pa</span><span class="sxs-lookup"><span data-stu-id="20dad-582">x-iscii-pa</span></span>|<span data-ttu-id="20dad-583">ISCII Punjabi</span><span class="sxs-lookup"><span data-stu-id="20dad-583">ISCII Punjabi</span></span>|<span data-ttu-id="20dad-584">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-584">✓</span></span>|  
|<span data-ttu-id="20dad-585">65000</span><span class="sxs-lookup"><span data-stu-id="20dad-585">65000</span></span>|<span data-ttu-id="20dad-586">UTF-7</span><span class="sxs-lookup"><span data-stu-id="20dad-586">utf-7</span></span>|<span data-ttu-id="20dad-587">Unicode (UTF-7)</span><span class="sxs-lookup"><span data-stu-id="20dad-587">Unicode (UTF-7)</span></span>|<span data-ttu-id="20dad-588">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-588">✓</span></span>|  
|<span data-ttu-id="20dad-589">65001</span><span class="sxs-lookup"><span data-stu-id="20dad-589">65001</span></span>|<span data-ttu-id="20dad-590">UTF-8</span><span class="sxs-lookup"><span data-stu-id="20dad-590">utf-8</span></span>|<span data-ttu-id="20dad-591">Unicode (UTF-8)</span><span class="sxs-lookup"><span data-stu-id="20dad-591">Unicode (UTF-8)</span></span>|<span data-ttu-id="20dad-592">✓</span><span class="sxs-lookup"><span data-stu-id="20dad-592">✓</span></span>|  
  
 <span data-ttu-id="20dad-593">Poniższy przykład wywołuje <xref:System.Text.Encoding.GetEncoding%28System.Int32%29> i <xref:System.Text.Encoding.GetEncoding%28System.String%29> kod metody w celu uzyskania Grecki (Windows): kodowanie strony.</span><span class="sxs-lookup"><span data-stu-id="20dad-593">The following example calls the <xref:System.Text.Encoding.GetEncoding%28System.Int32%29> and <xref:System.Text.Encoding.GetEncoding%28System.String%29> methods to get the Greek (Windows) code page encoding.</span></span> <span data-ttu-id="20dad-594">Porównuje <xref:System.Text.Encoding> obiektów zwróconych przez wywołania metody, aby pokazać, że są równe, a następnie mapy wyświetla punkt kodowy Unicode i wartością odpowiadającego mu kodu strony każdego znaku w alfabetu greckiego.</span><span class="sxs-lookup"><span data-stu-id="20dad-594">It compares the <xref:System.Text.Encoding> objects returned by the method calls to show that they are equal, and then maps displays the Unicode code point and the corresponding code page value for each character in the Greek alphabet.</span></span>  
  
 [!code-csharp[System.Text.Encoding#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding/cs/getencoding1.cs#1)]
 [!code-vb[System.Text.Encoding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding/vb/getencoding1.vb#1)]  
  
 <span data-ttu-id="20dad-595">Jeśli dane, które ma zostać przekonwertowany jest dostępna tylko w kolejnych bloków (na przykład dane odczytane ze strumienia) lub ilości danych jest tak duża, że należy ją podzielić na mniejsze bloki, należy użyć <xref:System.Text.Decoder> lub <xref:System.Text.Encoder> dostarczone przez <xref:System.Text.Encoding.GetDecoder%2A> Metoda lub <xref:System.Text.Encoding.GetEncoder%2A> metody, odpowiednio w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="20dad-595">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="20dad-596">Służy kolejności bajtów big endian UTF-16 i UTF-32 koderów (najbardziej znaczący bajt pierwszy) lub nieco kolejności bajtów endian (najmniej znaczący bajt pierwszy).</span><span class="sxs-lookup"><span data-stu-id="20dad-596">The UTF-16 and the UTF-32 encoders can use the big endian byte order (most significant byte first) or the little endian byte order (least significant byte first).</span></span> <span data-ttu-id="20dad-597">Na przykład Wielka litera (U + 0041) jest serializowany jako następujące (w formacie szesnastkowym):</span><span class="sxs-lookup"><span data-stu-id="20dad-597">For example, the Latin Capital Letter A (U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="20dad-598">Kolejności bajtów big endian UTF-16: 00 41</span><span class="sxs-lookup"><span data-stu-id="20dad-598">UTF-16 big endian byte order: 00 41</span></span>  
  
-   <span data-ttu-id="20dad-599">Mały kolejności bajtów endian UTF-16: 41 00</span><span class="sxs-lookup"><span data-stu-id="20dad-599">UTF-16 little endian byte order: 41 00</span></span>  
  
-   <span data-ttu-id="20dad-600">Kolejności bajtów big endian UTF-32: 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="20dad-600">UTF-32 big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="20dad-601">Mały kolejności bajtów endian UTF-32: 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="20dad-601">UTF-32 little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="20dad-602">Jest zwykle wydajniejszym rozwiązaniem przechowywania znaki Unicode przy użyciu kolejności bajtów natywnych.</span><span class="sxs-lookup"><span data-stu-id="20dad-602">It is generally more efficient to store Unicode characters using the native byte order.</span></span> <span data-ttu-id="20dad-603">Na przykład lepiej jest używać nieco kolejności bajtów endian na little endian platform, takich jak komputery z technologią Intel.</span><span class="sxs-lookup"><span data-stu-id="20dad-603">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span>  
  
 <span data-ttu-id="20dad-604"><xref:System.Text.Encoding.GetPreamble%2A> Metoda pobiera tablicę bajtów, która zawiera znacznik kolejności bajtów (BOM).</span><span class="sxs-lookup"><span data-stu-id="20dad-604">The <xref:System.Text.Encoding.GetPreamble%2A> method retrieves an array of bytes that includes the byte order mark (BOM).</span></span> <span data-ttu-id="20dad-605">Jeśli ta tablica bajtów jest umieszczany na strumień zakodowany, pomaga dekodera do identyfikowania użyty format kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-605">If this byte array is prefixed to an encoded stream, it helps the decoder to identify the encoding format used.</span></span>  
  
 <span data-ttu-id="20dad-606">Aby uzyskać więcej informacji na temat kolejności bajtów i znacznika kolejności bajtów, patrz Unicode Standard na [strony głównej Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="20dad-606">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
 <span data-ttu-id="20dad-607">Należy zwrócić uwagę na to, że klas kodowania zezwalają na błędy, aby:</span><span class="sxs-lookup"><span data-stu-id="20dad-607">Note that the encoding classes allow errors to:</span></span>  
  
-   <span data-ttu-id="20dad-608">Zmień w trybie dyskretnym na "?" znaków.</span><span class="sxs-lookup"><span data-stu-id="20dad-608">Silently change to a "?" character.</span></span>  
  
-   <span data-ttu-id="20dad-609">Użyj znaku "best fit".</span><span class="sxs-lookup"><span data-stu-id="20dad-609">Use a "best fit" character.</span></span>  
  
-   <span data-ttu-id="20dad-610">Zmień zachowanie specyficzne dla aplikacji za pośrednictwem <xref:System.Text.EncoderFallback> i <xref:System.Text.DecoderFallback> klas znak zastępczy U + FFFD Unicode.</span><span class="sxs-lookup"><span data-stu-id="20dad-610">Change to an application-specific behavior through use of the <xref:System.Text.EncoderFallback> and <xref:System.Text.DecoderFallback> classes with the U+FFFD Unicode replacement character.</span></span>  
  
 <span data-ttu-id="20dad-611">Każdy błąd strumienia danych, należy zgłosić wyjątek.</span><span class="sxs-lookup"><span data-stu-id="20dad-611">You should throw an exception on any data stream error.</span></span> <span data-ttu-id="20dad-612">Aplikacja korzysta z flagą "throwonerror", jeśli ma to zastosowanie lub korzysta z <xref:System.Text.EncoderExceptionFallback> i <xref:System.Text.DecoderExceptionFallback> klasy.</span><span class="sxs-lookup"><span data-stu-id="20dad-612">An app either uses a "throwonerror" flag when applicable or uses the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.DecoderExceptionFallback> classes.</span></span> <span data-ttu-id="20dad-613">Najlepsze dopasowanie rezerwowe często nie jest zalecane, ponieważ może spowodować utratę danych lub pomyłek i jest mniejsza niż proste znak zamiany.</span><span class="sxs-lookup"><span data-stu-id="20dad-613">Best fit fallback is often not recommended because it can cause data loss or confusion and is slower than simple character replacements.</span></span> <span data-ttu-id="20dad-614">W przypadku kodowania ANSI najlepsze dopasowanie zachowanie jest domyślne.</span><span class="sxs-lookup"><span data-stu-id="20dad-614">For ANSI encodings, the best fit behavior is the default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-615">Poniższy przykład konwertuje ciąg z jednego formatu kodowania na inny.</span><span class="sxs-lookup"><span data-stu-id="20dad-615">The following example converts a string from one encoding to another.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20dad-616">Tablica bajtów [] jest jedynym typem w tym przykładzie, który zawiera dane zakodowane.</span><span class="sxs-lookup"><span data-stu-id="20dad-616">The byte[] array is the only type in this example that contains the encoded data.</span></span> <span data-ttu-id="20dad-617">Typy .NET Char i parametrów znajdują się Unicode, więc <xref:System.Text.Encoding.GetChars%2A> wywołanie dekoduje dane do standardu Unicode.</span><span class="sxs-lookup"><span data-stu-id="20dad-617">The .NET Char and String types are themselves Unicode, so the <xref:System.Text.Encoding.GetChars%2A> call decodes the data back to Unicode.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-618">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.Encoding" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-618">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20dad-619">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.Encoding" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-619">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-620">Ten konstruktor klasy pochodnej, musi zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="20dad-620">Derived classes override this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoding (int codePage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 codePage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (codePage As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoding(int codePage);" />
      <MemberSignature Language="F#" Value="new System.Text.Encoding : int -&gt; System.Text.Encoding" Usage="new System.Text.Encoding codePage" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codePage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePage">
          <span data-ttu-id="20dad-621">Identyfikator strony kodu preferowanych kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-621">The code page identifier of the preferred encoding.</span>
          </span>
          <span data-ttu-id="20dad-622">- lub - 0, aby użyć domyślnego kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-622">-or-  0, to use the default encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-623">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.Encoding" /> klasę, która odnosi się do określonej strony kodowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-623">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class that corresponds to the specified code page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-624">Ten konstruktor klasy pochodnej, musi zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="20dad-624">Derived classes override this constructor.</span></span>  
  
 <span data-ttu-id="20dad-625">Tworzenie wywołania do tego konstruktora z klasy pochodnej <xref:System.Text.Encoding> obiektu, który używa uwierzytelniania rezerwowego najlepszego dopasowania zarówno kodowania i dekodowania operacji.</span><span class="sxs-lookup"><span data-stu-id="20dad-625">Calls to this constructor from a derived class create an <xref:System.Text.Encoding> object that uses best-fit fallback for both encoding and decoding operations.</span></span> <span data-ttu-id="20dad-626">Zarówno <xref:System.Text.Encoding.DecoderFallback%2A> i <xref:System.Text.Encoding.EncoderFallback%2A> właściwości tylko do odczytu i nie może być modyfikowany.</span><span class="sxs-lookup"><span data-stu-id="20dad-626">Both the <xref:System.Text.Encoding.DecoderFallback%2A> and <xref:System.Text.Encoding.EncoderFallback%2A> properties are read-only and cannot be modified.</span></span> <span data-ttu-id="20dad-627">Do kontrolowania strategia rezerwowa dla klasą pochodną <xref:System.Text.Encoding>, wywołaj <xref:System.Text.Encoding.%23ctor%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="20dad-627">To control the fallback strategy for a class derived from <xref:System.Text.Encoding>, call the <xref:System.Text.Encoding.%23ctor%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-628">
            <paramref name="codePage" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-628">
              <paramref name="codePage" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoding (int codePage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 codePage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.#ctor(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoding(int codePage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="new System.Text.Encoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="new System.Text.Encoding (codePage, encoderFallback, decoderFallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codePage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codePage">
          <span data-ttu-id="20dad-629">Kod identyfikator strony kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-629">The encoding code page identifier.</span>
          </span>
        </param>
        <param name="encoderFallback">
          <span data-ttu-id="20dad-630">Obiekt, który udostępnia procedurę obsługi błędów, jeśli znak nie może zostać zakodowana przy użyciu bieżącego kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-630">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span>
          </span>
        </param>
        <param name="decoderFallback">
          <span data-ttu-id="20dad-631">Obiekt, który udostępnia procedurę obsługi błędów podczas sekwencja bajtów nie może zostać zdekodowany przy użyciu bieżącego kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-631">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-632">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.Encoding" /> klasę, która odnosi się do określonej strony kodowej przy użyciu określonego koder i dekoder strategie rezerwowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-632">Initializes a new instance of the <see cref="T:System.Text.Encoding" /> class that corresponds to the specified code page with the specified encoder and decoder fallback strategies.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-633">Ten konstruktor jest `protected`; pochodnej klasy go zastąpić.</span><span class="sxs-lookup"><span data-stu-id="20dad-633">This constructor is `protected`; derived classes override it.</span></span>  
  
 <span data-ttu-id="20dad-634">Ten konstruktor jest wywołać z klasy pochodnej w celu kontrolowania rezerwowe, kodowania i dekodowania strategii.</span><span class="sxs-lookup"><span data-stu-id="20dad-634">You call this constructor from a derived class to control the fallback encoding and decoding strategies.</span></span> <span data-ttu-id="20dad-635"><xref:System.Text.Encoding> Konstruktory klasy Tworzenie obiektów tylko do odczytu kodowania, w których encoder lub dekodera rezerwowy, można ustawić po utworzeniu obiektu.</span><span class="sxs-lookup"><span data-stu-id="20dad-635">The <xref:System.Text.Encoding> class constructors create read-only encoding objects that don't allow encoder or decoder fallback to be set after the object is created.</span></span>  
  
 <span data-ttu-id="20dad-636">Jeśli `encoderFallback` lub `decoderFallback` ma wartość null, rezerwowy najlepszego dopasowania jest używany jako odpowiednie strategia rezerwowa.</span><span class="sxs-lookup"><span data-stu-id="20dad-636">If either `encoderFallback` or `decoderFallback` is null, best-fit fallback is used as the corresponding fallback strategy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-637">
            <paramref name="codePage" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-637">
              <paramref name="codePage" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ASCII">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding ASCII { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding ASCII" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.ASCII" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ASCII As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ ASCII { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ASCII : System.Text.Encoding" Usage="System.Text.Encoding.ASCII" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-638">Pobiera Kodowanie zestawu znaków (7-bitowym) ASCII.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-638">Gets an encoding for the ASCII (7-bit) character set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-639">Ustaw kodowanie znaków ASCII (7-bitowych).</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-639">An  encoding for the ASCII (7-bit) character set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-640">Znaki ASCII są ograniczone do najniższego 128 znaków Unicode od U + 0000 do U + 007F.</span><span class="sxs-lookup"><span data-stu-id="20dad-640">ASCII characters are limited to the lowest 128 Unicode characters, from U+0000 to U+007F.</span></span>  
  
 <span data-ttu-id="20dad-641">Podczas wybierania kodowanie ASCII dla danej aplikacji należy rozważyć następujące kwestie:</span><span class="sxs-lookup"><span data-stu-id="20dad-641">When selecting the ASCII encoding for your app, consider the following:</span></span>  
  
-   <span data-ttu-id="20dad-642">Kodowanie ASCII jest zwykle dla protokołów, które wymagają ASCII.</span><span class="sxs-lookup"><span data-stu-id="20dad-642">The ASCII encoding is usually appropriate for protocols that require ASCII.</span></span>  
  
-   <span data-ttu-id="20dad-643">Jeśli użytkownik wymaga 8-bitowego kodowania (co jest czasami niepoprawnie określany jako "ASCII"), kodowanie UTF-8, zaleca się za pośrednictwem ASCII kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-643">If you requires 8-bit encoding (which is sometimes incorrectly referred to as "ASCII"), the UTF-8 encoding is recommended over the ASCII encoding.</span></span> <span data-ttu-id="20dad-644">Znaki 0 7F wyniki są identyczne, ale używanie UTF-8 pozwala uniknąć utraty danych, umożliwiając reprezentacja wszystkich znaków Unicode, które są stałego.</span><span class="sxs-lookup"><span data-stu-id="20dad-644">For the characters 0-7F, the results are identical, but use of UTF-8 avoids data loss by allowing representation of all Unicode characters that are representable.</span></span> <span data-ttu-id="20dad-645">Należy pamiętać, że kodowanie ASCII ma 8-bitowych niejednoznaczności, umożliwiająca złośliwe wykorzystanie, ale kodowania UTF-8 usuwa niejednoznaczności dotyczące bit 8.</span><span class="sxs-lookup"><span data-stu-id="20dad-645">Note that the ASCII encoding has an 8th bit ambiguity that can allow malicious use, but the UTF-8 encoding removes ambiguity about the 8th bit.</span></span>  
  
-   <span data-ttu-id="20dad-646">Przed programu .NET Framework w wersji 2.0 .NET Framework mogą fałszowania, ignorując bit 8.</span><span class="sxs-lookup"><span data-stu-id="20dad-646">Prior to the .NET Framework version 2.0, the .NET Framework allowed spoofing by ignoring the 8th bit.</span></span> <span data-ttu-id="20dad-647">Począwszy od programu .NET Framework 2.0, punkty kodowe spoza zestawu ASCII rezerwowe podczas dekodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-647">Beginning with the .NET Framework 2.0, non-ASCII code points fall back during decoding.</span></span>  
  
 <span data-ttu-id="20dad-648"><xref:System.Text.ASCIIEncoding> Obiekt, który jest zwracany przez tę właściwość może nie mieć odpowiednich zachowanie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="20dad-648">The <xref:System.Text.ASCIIEncoding> object that is returned by this property might not have the appropriate behavior for your app.</span></span> <span data-ttu-id="20dad-649">Używa ona zastąpienie rezerwowego zastąpienia każdego ciągu, który go nie można zakodować i poszczególne bajty, które nie można go zdekodować znakiem zapytania ("?") znaków.</span><span class="sxs-lookup"><span data-stu-id="20dad-649">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with a question mark ("?") character.</span></span> <span data-ttu-id="20dad-650">Zamiast tego możesz wywołać <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> metodę, aby utworzyć wystąpienie <xref:System.Text.ASCIIEncoding> obiektu, którego uwierzytelniania rezerwowego jest albo <xref:System.Text.EncoderFallbackException> lub <xref:System.Text.DecoderFallbackException>, tak jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="20dad-650">Instead, you can call the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> method to instantiate an <xref:System.Text.ASCIIEncoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.ASCII#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.ascii/cs/encoding.ascii2.cs#1)]
 [!code-vb[System.Text.Encoding.ASCII#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.ascii/vb/encoding.ascii2.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="20dad-651">Poniższy przykład ilustruje efekt ASCII kodowanie znaków, które wykraczają poza zakres ASCII.</span><span class="sxs-lookup"><span data-stu-id="20dad-651">The following example demonstrates the effect of the ASCII encoding on characters that are outside the ASCII range.</span></span>  
  
 [!code-cpp[System.Text.Encoding.ASCII Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.ASCII Example/CPP/ascii.cpp#1)]
 [!code-csharp[System.Text.Encoding.ASCII Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.ASCII Example/CS/ascii.cs#1)]
 [!code-vb[System.Text.Encoding.ASCII Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.ASCII Example/VB/ascii.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.ASCIIEncoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <altmember cref="P:System.Text.Encoding.Unicode" />
      </Docs>
    </Member>
    <Member MemberName="BigEndianUnicode">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding BigEndianUnicode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding BigEndianUnicode" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.BigEndianUnicode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BigEndianUnicode As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ BigEndianUnicode { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BigEndianUnicode : System.Text.Encoding" Usage="System.Text.Encoding.BigEndianUnicode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-652">Pobiera kodowanie dla formatu UTF-16, który używa kolejności bajtów big endian.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-652">Gets an encoding for the UTF-16 format that uses the big endian byte order.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-653">Kodowanie obiekt do formatu UTF-16, który używa kolejności bajtów big endian.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-653">An encoding object for the UTF-16 format that uses the big endian byte order.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-654"><xref:System.Text.UnicodeEncoding> Obiekt, który jest zwracany przez tę właściwość nie może mieć odpowiednie zachowanie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="20dad-654">The <xref:System.Text.UnicodeEncoding> object that is returned by this property may not have the appropriate behavior for your app.</span></span> <span data-ttu-id="20dad-655">Używa ona zastąpienie rezerwowego zastąpienia każdego ciągu, który go nie można zakodować i poszczególne bajty, które nie można go zdekodować znakiem zapytania ("?") znaków.</span><span class="sxs-lookup"><span data-stu-id="20dad-655">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with a question mark ("?") character.</span></span> <span data-ttu-id="20dad-656">Zamiast tego możesz wywołać <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> Konstruktor do tworzenia wystąpienia big endian <xref:System.Text.UnicodeEncoding> obiektu, którego uwierzytelniania rezerwowego jest albo <xref:System.Text.EncoderFallbackException> lub <xref:System.Text.DecoderFallbackException>, tak jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="20dad-656">Instead, you can call the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a big endian <xref:System.Text.UnicodeEncoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.BigEndianUnicode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/CS/bigendianunicode1.cs#2)]
 [!code-vb[System.Text.Encoding.BigEndianUnicode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/VB/bigendianunicode1.vb#2)]  
  
 <span data-ttu-id="20dad-657">Zwrócony <xref:System.Text.UnicodeEncoding> obiekt ma <xref:System.Text.Encoding.BodyName%2A>, <xref:System.Text.Encoding.HeaderName%2A>, i <xref:System.Text.Encoding.WebName%2A> właściwości, które dają nazwy "unicodeFFFE".</span><span class="sxs-lookup"><span data-stu-id="20dad-657">The returned <xref:System.Text.UnicodeEncoding> object has <xref:System.Text.Encoding.BodyName%2A>, <xref:System.Text.Encoding.HeaderName%2A>, and <xref:System.Text.Encoding.WebName%2A> properties, which yield the name "unicodeFFFE".</span></span> <span data-ttu-id="20dad-658">Mimo że znacznika kolejności bajtów big endian UTF-16 szesnastkowej FEFF, nazwa "unicodeFFFE" wybrano, ponieważ znacznik kolejności bajtów jest wyświetlany jako szesnastkowa FFFE na little endian komputerów Windows.</span><span class="sxs-lookup"><span data-stu-id="20dad-658">Although the UTF-16 big endian byte order mark is hexadecimal FEFF, the name "unicodeFFFE" was chosen because the byte order mark appears as hexadecimal FFFE on little endian Windows computers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-659">Poniższy przykład odczytuje plik tekstowy z kodowaniem UTF-16 za pomocą kolejności bajtów big endian.</span><span class="sxs-lookup"><span data-stu-id="20dad-659">The following example reads a text file with a UTF-16 encoding using the big endian byte order.</span></span>  
  
 [!code-cpp[System.Text.Encoding.BigEndianUnicode#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/CPP/bigendianunicode.cpp#1)]
 [!code-csharp[System.Text.Encoding.BigEndianUnicode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/CS/bigendianunicode.cs#1)]
 [!code-vb[System.Text.Encoding.BigEndianUnicode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.BigEndianUnicode/VB/bigendianunicode.vb#1)]  
  
 <span data-ttu-id="20dad-660">Poniższy przykład określa liczbę bajtów wymaganą do kodowania tablicy znaków, koduje znaki i wyświetla wynikowy bajtów.</span><span class="sxs-lookup"><span data-stu-id="20dad-660">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UnicodeEncoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <altmember cref="P:System.Text.Encoding.Unicode" />
      </Docs>
    </Member>
    <Member MemberName="BodyName">
      <MemberSignature Language="C#" Value="public virtual string BodyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BodyName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.BodyName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BodyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BodyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BodyName : string" Usage="System.Text.Encoding.BodyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-661">W przypadku przesłonięcia w klasie pochodnej pobiera nazwę bieżącego kodowania, która może być używany z poczty agenta treść znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-661">When overridden in a derived class, gets a name for the current encoding that can be used with mail agent body tags.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-662">Nazwa bieżącego <see cref="T:System.Text.Encoding" /> które mogą być używane z tagami treści agenta poczty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-662">A name for the current <see cref="T:System.Text.Encoding" /> that can be used with mail agent body tags.</span>
          </span>
          <span data-ttu-id="20dad-663">- lub - ciąg pusty (""), jeśli bieżący <see cref="T:System.Text.Encoding" /> nie mogą być używane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-663">-or-  An empty string (""), if the current <see cref="T:System.Text.Encoding" /> cannot be used.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-664">Jeśli potrzebujesz kodowania dla nazwy treści, należy wywołać <xref:System.Text.Encoding.GetEncoding%2A> z <xref:System.Text.Encoding.BodyName%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="20dad-664">If you need an encoding for a body name, you should call <xref:System.Text.Encoding.GetEncoding%2A> with the <xref:System.Text.Encoding.BodyName%2A> property.</span></span> <span data-ttu-id="20dad-665">Często metoda pobiera inne kodowanie z kodowanie testu dostarczony w wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="20dad-665">Often the method retrieves a different encoding from the test encoding furnished in the call.</span></span> <span data-ttu-id="20dad-666">Zazwyczaj trzeba pobrać takie kodowania; tylko aplikacji poczty e-mail Większość aplikacji potrzebnych do opisania kodowania należy używać jej <xref:System.Text.Encoding.WebName%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-666">Generally only email applications need to retrieve such an encoding; most other applications that need to describe an encoding should use its <xref:System.Text.Encoding.WebName%2A>.</span></span>  
  
 <span data-ttu-id="20dad-667">W niektórych przypadkach wartość <xref:System.Text.Encoding.BodyName%2A> właściwość odpowiada międzynarodowego standardu, który określa, że kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-667">In some cases, the value of the <xref:System.Text.Encoding.BodyName%2A> property corresponds to the international standard that defines that encoding.</span></span> <span data-ttu-id="20dad-668">Nie oznacza to, że implementacja jest zgodna w całości z tym standardem.</span><span class="sxs-lookup"><span data-stu-id="20dad-668">This doesn't mean that the implementation complies in full with that standard.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-669">Poniższy przykład pobiera różne nazwy dla każdego kodowania i wyświetla kodowanie z jedną lub więcej nazw, które różnią się od <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="20dad-669">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="20dad-670">Wyświetla <xref:System.Text.Encoding.EncodingName%2A> , ale nie porównać ją.</span><span class="sxs-lookup"><span data-stu-id="20dad-670">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.Name" />
        <altmember cref="P:System.Text.Encoding.EncodingName" />
        <altmember cref="P:System.Text.Encoding.HeaderName" />
        <altmember cref="P:System.Text.Encoding.WebName" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="encoding.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20dad-671">W przypadku przesłonięcia w klasie pochodnej tworzy płytką kopię bieżącego <see cref="T:System.Text.Encoding" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-671">When overridden in a derived class, creates a shallow copy of the current <see cref="T:System.Text.Encoding" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-672">Kopię bieżącego <see cref="T:System.Text.Encoding" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-672">A copy of the current <see cref="T:System.Text.Encoding" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-673">Klon jest zapisywalny nawet wtedy, gdy oryginalny <xref:System.Text.Encoding> obiekt jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="20dad-673">The clone is writable even if the original <xref:System.Text.Encoding> object is read-only.</span></span> <span data-ttu-id="20dad-674">W związku z tym można zmodyfikować właściwości klonu.</span><span class="sxs-lookup"><span data-stu-id="20dad-674">Therefore, the properties of the clone can be modified.</span></span>  
  
 <span data-ttu-id="20dad-675">Płytką kopię obiektu jest kopią tylko obiekt.</span><span class="sxs-lookup"><span data-stu-id="20dad-675">A shallow copy of an object is a copy of the object only.</span></span> <span data-ttu-id="20dad-676">Jeśli obiekt zawiera odwołania do innych obiektów, płytka kopia nie tworzy kopii obiektów, do którego się odwołuje.</span><span class="sxs-lookup"><span data-stu-id="20dad-676">If the object contains references to other objects, the shallow copy does not create copies of the referred objects.</span></span> <span data-ttu-id="20dad-677">Odwołuje się do obiektów, oryginalnym zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="20dad-677">It refers to the original objects instead.</span></span> <span data-ttu-id="20dad-678">Natomiast głębokie kopiowanie obiektu tworzy kopię obiektu i wszystko bezpośrednio lub pośrednio odwołuje się ten obiekt kopię.</span><span class="sxs-lookup"><span data-stu-id="20dad-678">In contrast, a deep copy of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public virtual int CodePage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.CodePage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CodePage { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CodePage : int" Usage="System.Text.Encoding.CodePage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-679">Po przesłonięciu w klasie pochodnej pobiera identyfikator strony kodu bieżącego <see cref="T:System.Text.Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-679">When overridden in a derived class, gets the code page identifier of the current <see cref="T:System.Text.Encoding" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-680">Identyfikator strony kodu bieżącego <see cref="T:System.Text.Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-680">The code page identifier of the current <see cref="T:System.Text.Encoding" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="20dad-681">Poniższy przykład pobiera różne nazwy dla każdego kodowania i wyświetla kodowanie z jedną lub więcej nazw, które różnią się od <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="20dad-681">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="20dad-682">Wyświetla <xref:System.Text.Encoding.EncodingName%2A> , ale nie porównać ją.</span><span class="sxs-lookup"><span data-stu-id="20dad-682">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.CodePage" />
        <altmember cref="P:System.Text.Encoding.WindowsCodePage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-683">Konwertuje tablicę bajtów z jednego formatu kodowania na inny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-683">Converts a byte array from one encoding to another.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static byte[] Convert (System.Text.Encoding srcEncoding, System.Text.Encoding dstEncoding, byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Convert(class System.Text.Encoding srcEncoding, class System.Text.Encoding dstEncoding, unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Convert (srcEncoding As Encoding, dstEncoding As Encoding, bytes As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Convert(System::Text::Encoding ^ srcEncoding, System::Text::Encoding ^ dstEncoding, cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="static member Convert : System.Text.Encoding * System.Text.Encoding * byte[] -&gt; byte[]" Usage="System.Text.Encoding.Convert (srcEncoding, dstEncoding, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcEncoding" Type="System.Text.Encoding" />
        <Parameter Name="dstEncoding" Type="System.Text.Encoding" />
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="srcEncoding">
          <span data-ttu-id="20dad-684">Format kodowania <c>bajtów</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-684">The encoding format of <c>bytes</c>.</span>
          </span>
        </param>
        <param name="dstEncoding">
          <span data-ttu-id="20dad-685">Format kodowania docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-685">The target encoding format.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="20dad-686">Bajty do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-686">The bytes to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-687">Konwertuje tablicę bajtów całego z jednego formatu kodowania na inny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-687">Converts an entire byte array from one encoding to another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-688">Tablica typu <see cref="T:System.Byte" /> zawierającego wyniki konwersji <paramref name="bytes" /> z <paramref name="srcEncoding" /> do <paramref name="dstEncoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-688">An array of type <see cref="T:System.Byte" /> containing the results of converting <paramref name="bytes" /> from <paramref name="srcEncoding" /> to <paramref name="dstEncoding" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="20dad-689">Poniższy przykład konwertuje ciąg kodowany w formacie Unicode na ciąg kodowany w formacie ASCII.</span><span class="sxs-lookup"><span data-stu-id="20dad-689">The following example converts a Unicode-encoded string to an ASCII-encoded string.</span></span> <span data-ttu-id="20dad-690">Ponieważ obiekt kodowanie ASCII zwracany przez <xref:System.Text.Encoding.ASCII%2A> właściwość używa zastąpienie rezerwowego i znak Pi nie jest częścią zestawu znaków ASCII, znak Pi jest zastępowany znaku zapytania jako dane wyjściowe w przykładzie pokazano.</span><span class="sxs-lookup"><span data-stu-id="20dad-690">Because the ASCII encoding object returned by the <xref:System.Text.Encoding.ASCII%2A> property uses replacement fallback and the Pi character is not part of the ASCII character set, the Pi character is replaced with a question mark, as the output from the example shows.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-691">
            <paramref name="srcEncoding" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-691">
              <paramref name="srcEncoding" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="20dad-692">- lub - <paramref name="dstEncoding" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-692">-or-  <paramref name="dstEncoding" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="20dad-693">- lub - <paramref name="bytes" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-693">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="20dad-694">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - ** srcEncoding.* * <see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-694">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  **srcEncoding.** <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="20dad-695">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - ** dstEncoding.* * <see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-695">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  **dstEncoding.** <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static byte[] Convert (System.Text.Encoding srcEncoding, System.Text.Encoding dstEncoding, byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Convert(class System.Text.Encoding srcEncoding, class System.Text.Encoding dstEncoding, unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Convert (srcEncoding As Encoding, dstEncoding As Encoding, bytes As Byte(), index As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Convert(System::Text::Encoding ^ srcEncoding, System::Text::Encoding ^ dstEncoding, cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="static member Convert : System.Text.Encoding * System.Text.Encoding * byte[] * int * int -&gt; byte[]" Usage="System.Text.Encoding.Convert (srcEncoding, dstEncoding, bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcEncoding" Type="System.Text.Encoding" />
        <Parameter Name="dstEncoding" Type="System.Text.Encoding" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="srcEncoding">
          <span data-ttu-id="20dad-696">Kodowanie tablicy źródłowej <c>bajtów</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-696">The encoding of the source array, <c>bytes</c>.</span>
          </span>
        </param>
        <param name="dstEncoding">
          <span data-ttu-id="20dad-697">Kodowanie tablicy danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-697">The encoding of the output array.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="20dad-698">Tablica bajtów do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-698">The array of bytes to convert.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="20dad-699">Indeks pierwszego elementu <c>bajtów</c> do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-699">The index of the first element of <c>bytes</c> to convert.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="20dad-700">Liczba bajtów do konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-700">The number of bytes to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-701">Konwertuje zakresu bajtów w tablicy bajtów z jednego formatu kodowania na inny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-701">Converts a range of bytes in a byte array from one encoding to another.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-702">Tablica typu <see cref="T:System.Byte" /> zawierający wynik konwersji zakresu bajtów w <paramref name="bytes" /> z <paramref name="srcEncoding" /> do <paramref name="dstEncoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-702">An array of type <see cref="T:System.Byte" /> containing the result of converting a range of bytes in <paramref name="bytes" /> from <paramref name="srcEncoding" /> to <paramref name="dstEncoding" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-703">
            <paramref name="srcEncoding" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-703">
              <paramref name="srcEncoding" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="20dad-704">- lub - <paramref name="dstEncoding" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-704">-or-  <paramref name="dstEncoding" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="20dad-705">- lub - <paramref name="bytes" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-705">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-706">
            <paramref name="index" /> i <paramref name="count" /> nie określono nieprawidłowy zakres w tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-706">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the byte array.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="20dad-707">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - ** srcEncoding.* * <see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-707">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  **srcEncoding.** <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="20dad-708">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - ** dstEncoding.* * <see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-708">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  **dstEncoding.** <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecoderFallback">
      <MemberSignature Language="C#" Value="public System.Text.DecoderFallback DecoderFallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.DecoderFallback DecoderFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.DecoderFallback" />
      <MemberSignature Language="VB.NET" Value="Public Property DecoderFallback As DecoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::DecoderFallback ^ DecoderFallback { System::Text::DecoderFallback ^ get(); void set(System::Text::DecoderFallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DecoderFallback : System.Text.DecoderFallback with get, set" Usage="System.Text.Encoding.DecoderFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.DecoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-709">Pobiera lub ustawia <see cref="T:System.Text.DecoderFallback" /> obiektu dla bieżącego <see cref="T:System.Text.Encoding" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-709">Gets or sets the <see cref="T:System.Text.DecoderFallback" /> object for the current <see cref="T:System.Text.Encoding" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-710">Obiekt rezerwowego dekodera dla bieżącego <see cref="T:System.Text.Encoding" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-710">The decoder fallback object for the current <see cref="T:System.Text.Encoding" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-711"><xref:System.Text.DecoderFallback> Obiekt reprezentuje program obsługi błędów, które jest wywoływane, gdy nie mogą zostać zdekodowane sekwencja zakodowany bajtów na znak.</span><span class="sxs-lookup"><span data-stu-id="20dad-711">The <xref:System.Text.DecoderFallback> object represents an error handler that is invoked when an encoded byte sequence cannot be decoded into a character.</span></span> <span data-ttu-id="20dad-712">Obsługiwany jest dowolny z następujące typy programów obsługi:</span><span class="sxs-lookup"><span data-stu-id="20dad-712">Any one of the following handler types is supported:</span></span>  
  
-   <span data-ttu-id="20dad-713">Najlepszego dopasowania rezerwowego obsługi, który zastępuje bajtów, które nie mogą zostać zdekodowane niektórych znaków odpowiednich obiektów zastępczych.</span><span class="sxs-lookup"><span data-stu-id="20dad-713">A best-fit fallback handler, which replaces bytes that cannot be decoded with some suitable replacement character.</span></span>  
  
-   <span data-ttu-id="20dad-714">Zastąpienie rezerwowego obsługi, który zastępuje niektóre znak zastępczy dowolnego bajtów, które nie mogą zostać zdekodowane.</span><span class="sxs-lookup"><span data-stu-id="20dad-714">A replacement fallback handler, which replaces bytes that cannot be decoded with some arbitrary replacement character.</span></span> <span data-ttu-id="20dad-715">Program .NET Framework zawiera jeden zastąpienie rezerwowego program obsługi, <xref:System.Text.DecoderFallback>, które domyślnie są zastępowane bajtów, które nie mogą zostać zdekodowane znak zapytania ("?") znaków.</span><span class="sxs-lookup"><span data-stu-id="20dad-715">The .NET Framework includes one replacement fallback handler, <xref:System.Text.DecoderFallback>, which by default replaces bytes that cannot be decoded with a question mark ("?") character.</span></span>  
  
-   <span data-ttu-id="20dad-716">Rezerwowy obsługi wyjątków, który zgłasza wyjątek, gdy nie mogą zostać zdekodowane bajtów.</span><span class="sxs-lookup"><span data-stu-id="20dad-716">An exception fallback handler, which throws an exception when bytes cannot be decoded.</span></span> <span data-ttu-id="20dad-717">Program .NET Framework zawiera jeden rezerwowy aparatu obsługi wyjątków, <xref:System.Text.DecoderExceptionFallback>, który zgłasza <xref:System.Text.DecoderFallbackException> po nie mogą zostać zdekodowane bajtów.</span><span class="sxs-lookup"><span data-stu-id="20dad-717">The .NET Framework includes one exception fallback handler, <xref:System.Text.DecoderExceptionFallback>, which throws a <xref:System.Text.DecoderFallbackException> when bytes cannot be decoded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-718">Wartość w operacji zestawu jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-718">The value in a set operation is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="20dad-719">Nie można przypisać wartości w operacji zestawu, ponieważ bieżący <see cref="T:System.Text.Encoding" /> obiekt jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-719">A value cannot be assigned in a set operation because the current <see cref="T:System.Text.Encoding" /> object is read-only.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.DecoderFallback" />
        <altmember cref="T:System.Text.DecoderFallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding Default" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ Default { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Text.Encoding" Usage="System.Text.Encoding.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-720">Pobiera domyślne kodowanie dla tej implementacji .NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-720">Gets the default encoding for this .NET implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-721">Określanie domyślnego kodowania dla tej implementacji .NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-721">The default encoding for this .NET implementation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="20dad-722">Różne komputery mogą używać różnych kodowań jako domyślne, a kodowanie domyślne można zmienić na pojedynczym komputerze.</span><span class="sxs-lookup"><span data-stu-id="20dad-722">Different computers can use different encodings as the default, and the default encoding can change on a single computer.</span></span> <span data-ttu-id="20dad-723">Jeśli używasz <xref:System.Text.Encoding.Default%2A> kodowanie do kodowania i dekodowania dane przesyłane strumieniowo między komputerami lub pobierane w różnym czasie na tym samym komputerze, jego może tłumaczenie danych niepoprawnie.</span><span class="sxs-lookup"><span data-stu-id="20dad-723">If you use the <xref:System.Text.Encoding.Default%2A> encoding to encode and decode data streamed between computers or retrieved at different times on the same computer, it may translate that data incorrectly.</span></span> <span data-ttu-id="20dad-724">Ponadto kodowanie zwrócony przez <xref:System.Text.Encoding.Default%2A> właściwość używa najlepszego dopasowania powrotu do mapowania nieobsługiwane znaki znaki obsługiwane przez stronę kodową.</span><span class="sxs-lookup"><span data-stu-id="20dad-724">In addition, the encoding returned by the <xref:System.Text.Encoding.Default%2A> property uses best-fit fallback to map unsupported characters to characters supported by the code page.</span></span> <span data-ttu-id="20dad-725">Z tego względu przy użyciu domyślnego kodowania nie jest zalecane.</span><span class="sxs-lookup"><span data-stu-id="20dad-725">For these reasons, using the default encoding is not recommended.</span></span> <span data-ttu-id="20dad-726">Aby upewnić się, że zakodowany bajtów są poprawnie dekodowane, należy użyć kodowania Unicode, takich jak <xref:System.Text.UTF8Encoding> lub <xref:System.Text.UnicodeEncoding>.</span><span class="sxs-lookup"><span data-stu-id="20dad-726">To ensure that encoded bytes are decoded properly, you should use a Unicode encoding, such as <xref:System.Text.UTF8Encoding> or <xref:System.Text.UnicodeEncoding>.</span></span> <span data-ttu-id="20dad-727">Aby upewnić się, że ten sam format jest używany do kodowania i dekodowania można także użyć protokołu wyższego poziomu.</span><span class="sxs-lookup"><span data-stu-id="20dad-727">You could also use a higher-level protocol to ensure that the same format is used for encoding and decoding.</span></span>  

### <a name="the-default-property-in-the-net-framework"></a><span data-ttu-id="20dad-728">Domyślna właściwość w programie .NET Framework</span><span class="sxs-lookup"><span data-stu-id="20dad-728">The Default property in the .NET Framework</span></span>

<span data-ttu-id="20dad-729">W programie .NET Framework na pulpicie Windows <xref:System.Text.Encoding.Default%2A> właściwość zawsze pobiera stronę kodową systemu i tworzy <xref:System.Text.Encoding> obiekt, który odnosi się do niego.</span><span class="sxs-lookup"><span data-stu-id="20dad-729">In the .NET Framework on the Windows desktop, the <xref:System.Text.Encoding.Default%2A> property always gets the system's active code page and creates a <xref:System.Text.Encoding> object that corresponds to it.</span></span> <span data-ttu-id="20dad-730">Strona kodowa active może być stronę kodową ANSI, który zawiera zestaw oraz dodatkowe znaki, które różnią się przez strony kodowej znaków ASCII.</span><span class="sxs-lookup"><span data-stu-id="20dad-730">The active code page may be an ANSI code page, which includes the ASCII character set along with additional characters that vary by code page.</span></span> <span data-ttu-id="20dad-731">Ponieważ wszystkie <xref:System.Text.Encoding.Default%2A> kodowania, w oparciu o strony kodowe ANSI utratę danych, rozważ użycie <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> kodowania w zamian.</span><span class="sxs-lookup"><span data-stu-id="20dad-731">Because all <xref:System.Text.Encoding.Default%2A> encodings based on ANSI code pages lose data, consider using the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> encoding instead.</span></span> <span data-ttu-id="20dad-732">UTF-8 często jest identyczne w U + 00 do U + 7F zakresu, ale można kodowania znaków poza zakresem ASCII bez utraty.</span><span class="sxs-lookup"><span data-stu-id="20dad-732">UTF-8 is often identical in the U+00 to U+7F range, but can encode characters outside the ASCII range without loss.</span></span>

## <a name="the-default-property-on-net-core"></a><span data-ttu-id="20dad-733">Właściwość Default na platformie .NET Core</span><span class="sxs-lookup"><span data-stu-id="20dad-733">The Default property on .NET Core</span></span>

<span data-ttu-id="20dad-734">Na platformie .NET Core <xref:System.Text.Encoding.Default%2A> właściwość zawsze zwraca <xref:System.Text.UTF8Encoding>.</span><span class="sxs-lookup"><span data-stu-id="20dad-734">On .NET Core, the <xref:System.Text.Encoding.Default%2A> property always returns the <xref:System.Text.UTF8Encoding>.</span></span> <span data-ttu-id="20dad-735">UTF-8 są obsługiwane we wszystkich systemach operacyjnych (Windows, Linux i maksymalna OS X) na której działają aplikacje platformy .NET Core.</span><span class="sxs-lookup"><span data-stu-id="20dad-735">UTF-8 is supported on all the operating systems (Windows, Linux, and Max OS X) on which .NET Core applications run.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncoderFallback">
      <MemberSignature Language="C#" Value="public System.Text.EncoderFallback EncoderFallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.EncoderFallback EncoderFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.EncoderFallback" />
      <MemberSignature Language="VB.NET" Value="Public Property EncoderFallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::EncoderFallback ^ EncoderFallback { System::Text::EncoderFallback ^ get(); void set(System::Text::EncoderFallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncoderFallback : System.Text.EncoderFallback with get, set" Usage="System.Text.Encoding.EncoderFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-736">Pobiera lub ustawia <see cref="T:System.Text.EncoderFallback" /> obiektu dla bieżącego <see cref="T:System.Text.Encoding" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-736">Gets or sets the <see cref="T:System.Text.EncoderFallback" /> object for the current <see cref="T:System.Text.Encoding" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-737">Koder rezerwowego obiektu dla bieżącego <see cref="T:System.Text.Encoding" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-737">The encoder fallback object for the current <see cref="T:System.Text.Encoding" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-738"><xref:System.Text.EncoderFallback> Obiekt reprezentuje procedurę obsługi błędów, które jest wywoływane, gdy znak nie można przekonwertować sekwencja bajtów zakodowany.</span><span class="sxs-lookup"><span data-stu-id="20dad-738">The <xref:System.Text.EncoderFallback> object represents an error handler that is invoked when a character cannot be converted into an encoded byte sequence.</span></span> <span data-ttu-id="20dad-739">Obsługiwany jest dowolny z następujące typy programów obsługi:</span><span class="sxs-lookup"><span data-stu-id="20dad-739">Any one of the following handler types is supported:</span></span>  
  
-   <span data-ttu-id="20dad-740">Najlepszego dopasowania rezerwowego obsługi, który zastępuje znaki, które nie może zostać zakodowana niektórych znaków odpowiednich obiektów zastępczych.</span><span class="sxs-lookup"><span data-stu-id="20dad-740">A best-fit fallback handler, which replaces characters that cannot be encoded with some suitable replacement character.</span></span>  
  
-   <span data-ttu-id="20dad-741">Zastąpienie rezerwowego obsługi, który zastępuje znaki, które nie może zostać zakodowana niektóre zastąpienie dowolnego znaku.</span><span class="sxs-lookup"><span data-stu-id="20dad-741">A replacement fallback handler, which replaces characters that cannot be encoded with some arbitrary replacement character.</span></span> <span data-ttu-id="20dad-742">Program .NET Framework zawiera jeden obsługi rezerwowego zastąpienia, <xref:System.Text.EncoderFallback>, która domyślnie zastępuje znaki, które nie może zostać zakodowana znakiem zapytania ("?") znaków.</span><span class="sxs-lookup"><span data-stu-id="20dad-742">The .NET Framework includes one replacement fallback handler, <xref:System.Text.EncoderFallback>, which by default replaces characters that cannot be encoded with a question mark ("?") character.</span></span>  
  
-   <span data-ttu-id="20dad-743">Rezerwowy obsługi wyjątków, który zgłasza wyjątek, gdy nie może zostać zakodowana znaków.</span><span class="sxs-lookup"><span data-stu-id="20dad-743">An exception fallback handler, which throws an exception when characters cannot be encoded.</span></span> <span data-ttu-id="20dad-744">Program .NET Framework zawiera jeden rezerwowy aparatu obsługi wyjątków, <xref:System.Text.EncoderExceptionFallback>, który zgłasza <xref:System.Text.EncoderFallbackException> po nie mogą zostać zdekodowane znaki.</span><span class="sxs-lookup"><span data-stu-id="20dad-744">The .NET Framework includes one exception fallback handler, <xref:System.Text.EncoderExceptionFallback>, which throws an <xref:System.Text.EncoderFallbackException> when characters cannot be decoded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-745">Wartość w operacji zestawu jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-745">The value in a set operation is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="20dad-746">Nie można przypisać wartości w operacji zestawu, ponieważ bieżący <see cref="T:System.Text.Encoding" /> obiekt jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-746">A value cannot be assigned in a set operation because the current <see cref="T:System.Text.Encoding" /> object is read-only.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="EncodingName">
      <MemberSignature Language="C#" Value="public virtual string EncodingName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodingName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.EncodingName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EncodingName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EncodingName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EncodingName : string" Usage="System.Text.Encoding.EncodingName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-747">W przypadku przesłonięcia w klasie pochodnej pobiera zrozumiałą dla użytkownika opis bieżącego kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-747">When overridden in a derived class, gets the human-readable description of the current encoding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-748">Czytelny dla człowieka opis bieżącego <see cref="T:System.Text.Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-748">The human-readable description of the current <see cref="T:System.Text.Encoding" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-749"><xref:System.Text.Encoding.EncodingName%2A> Właściwość jest przeznaczona do wyświetlenia.</span><span class="sxs-lookup"><span data-stu-id="20dad-749">The <xref:System.Text.Encoding.EncodingName%2A> property is intended for display.</span></span> <span data-ttu-id="20dad-750">Aby znaleźć nazwę, która może być przekazywany do <xref:System.Text.Encoding.GetEncoding%2A> metody, użyj <xref:System.Text.Encoding.WebName%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="20dad-750">To find a name that can be passed to the <xref:System.Text.Encoding.GetEncoding%2A> method, use the <xref:System.Text.Encoding.WebName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-751">Poniższy przykład pobiera różne nazwy dla każdego kodowania i wyświetla kodowanie z jedną lub więcej nazw, które różnią się od <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="20dad-751">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="20dad-752">Wyświetla <xref:System.Text.Encoding.EncodingName%2A> , ale nie porównać ją.</span><span class="sxs-lookup"><span data-stu-id="20dad-752">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.DisplayName" />
        <altmember cref="P:System.Text.Encoding.BodyName" />
        <altmember cref="P:System.Text.Encoding.HeaderName" />
        <altmember cref="P:System.Text.Encoding.WebName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="encoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="20dad-753">
            <see cref="T:System.Object" /> Do porównania z bieżącym wystąpieniem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-753">The <see cref="T:System.Object" /> to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-754">Określa, czy określony <see cref="T:System.Object" /> jest taki sam, jak bieżące wystąpienie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-754">Determines whether the specified <see cref="T:System.Object" /> is equal to the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-755">
            <see langword="true" /> Jeśli <paramref name="value" /> jest wystąpieniem <see cref="T:System.Text.Encoding" /> i jest taki sam jak bieżące wystąpienie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-755">
              <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.Encoding" /> and is equal to the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-756">Dwa wystąpienia <xref:System.Text.Encoding> są traktowane jako równe, jeżeli odnoszą się do tej samej strony kodowej i ich `EncoderFallback` i `DecoderFallback` obiekty są sobie równe.</span><span class="sxs-lookup"><span data-stu-id="20dad-756">Two instances of <xref:System.Text.Encoding> are considered equal if they correspond to the same code page and their `EncoderFallback` and `DecoderFallback` objects are equal.</span></span> <span data-ttu-id="20dad-757">W szczególności pochodnej strony kodowe wszystkie mają stronę kodową 0 i ich przejścia są zwykle `null` (`Nothing` w języku Visual Basic .NET).</span><span class="sxs-lookup"><span data-stu-id="20dad-757">In particular, derived code pages all have a code page of 0 and their fallbacks are normally `null` (`Nothing` in Visual Basic .NET).</span></span> <span data-ttu-id="20dad-758">Ten sposób są wszystkie uważane za równe ze sobą.</span><span class="sxs-lookup"><span data-stu-id="20dad-758">Thus they are all considered equal to one another.</span></span> <span data-ttu-id="20dad-759">W wyniku jest fakt, że gdy <xref:System.Text.Encoding.Equals%2A> jest używany do wypełniania tabeli wyznaczania wartości skrótu, wszystkie pochodne porównania kodowania jest taki sam i dzielą się na tym samym miejsce tabeli wyznaczania wartości skrótu.</span><span class="sxs-lookup"><span data-stu-id="20dad-759">One consequence is that when <xref:System.Text.Encoding.Equals%2A> is used to populate a hash table, all derived encodings compare equal and fall into the same hash table slot.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-760">Poniższy przykład pobiera dwóch wystąpień tego samego kodowania (po jednym przez stronę kodową), a drugi według nazwy i sprawdza, czy ich równości.</span><span class="sxs-lookup"><span data-stu-id="20dad-760">The following example gets two instances of the same encoding (one by codepage and another by name), and checks their equality.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Text.Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-761">W przypadku przesłonięcia w klasie pochodnej, oblicza liczbę bajtów produkowane przez kodowanie zestawu znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-761">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (chars As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(cli::array &lt;char&gt; ^ chars);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : char[] -&gt; int&#xA;override this.GetByteCount : char[] -&gt; int" Usage="encoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="20dad-762">Tablica znaków zawierający znaki do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-762">The character array containing the characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-763">W przypadku przesłonięcia w klasie pochodnej, oblicza liczbę bajtów produkowane przez kodowanie znaków określoną tablicę znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-763">When overridden in a derived class, calculates the number of bytes produced by encoding all the characters in the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-764">Liczba bajtów produkowane przez kodowanie znaków określoną tablicę znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-764">The number of bytes produced by encoding all the characters in the specified character array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-765">Do obliczania rozmiaru tablicy dokładnie wymagane przez <xref:System.Text.Encoding.GetBytes%2A> do przechowywania wynikowy bajtów, wywołanie <xref:System.Text.Encoding.GetByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-765">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="20dad-766">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.Encoding.GetMaxByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-766">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="20dad-767"><xref:System.Text.Encoding.GetByteCount%2A> Metoda ogólnie Umożliwia przydzielenie mniej pamięci podczas <xref:System.Text.Encoding.GetMaxByteCount%2A> Metoda ogólnie jest wykonywany szybciej.</span><span class="sxs-lookup"><span data-stu-id="20dad-767">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="20dad-768"><xref:System.Text.Encoding.GetByteCount%2A> Metoda określa liczbę bajtów spowodować Kodowanie zestawu znaków Unicode i <xref:System.Text.Encoding.GetBytes%2A> metoda wykonuje rzeczywistego kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-768">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="20dad-769"><xref:System.Text.Encoding.GetBytes%2A> Metoda oczekuje dyskretnych konwersji, w przeciwieństwie do <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metody, która obsługuje wiele konwersje na jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-769">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-770">Różne wersje programu <xref:System.Text.Encoding.GetByteCount%2A> i <xref:System.Text.Encoding.GetBytes%2A> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="20dad-770">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="20dad-771">Poniżej przedstawiono pewne zagadnienia programowania do użytku z następujących metod:</span><span class="sxs-lookup"><span data-stu-id="20dad-771">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="20dad-772">Aplikacja może być konieczne zakodować wiele danych wejściowych znaków na stronę kodową i przetwarzanie znaków przy użyciu wielu wywołań.</span><span class="sxs-lookup"><span data-stu-id="20dad-772">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="20dad-773">W takim przypadku prawdopodobnie trzeba utrzymywać stan między wywołaniami, biorąc pod uwagę stanu, który jest trwały przez <xref:System.Text.Encoder> obiekt używany.</span><span class="sxs-lookup"><span data-stu-id="20dad-773">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="20dad-774">Jeśli aplikacja obsługuje ciąg danych wejściowych, należy użyć wersjami ciągów <xref:System.Text.Encoding.GetBytes%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-774">If your app handles string inputs, you should use the string versions of the <xref:System.Text.Encoding.GetBytes%2A> method.</span></span>  
  
-   <span data-ttu-id="20dad-775">Wersja buforu znaku Unicode z <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> umożliwia kilka technik szybkie, zwłaszcza w przypadku wielu wywołań przy użyciu <xref:System.Text.Encoder> obiektu lub wstawiania do istniejących buforów.</span><span class="sxs-lookup"><span data-stu-id="20dad-775">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="20dad-776">Mieć na uwadze, jednak, że tej wersji metoda czasami jest niebezpieczne, ponieważ wskaźniki są wymagane.</span><span class="sxs-lookup"><span data-stu-id="20dad-776">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="20dad-777">Jeśli aplikacja musi przekonwertować dużej ilości danych, należy używać ponownie bufor wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-777">If your app must convert a large amount of data, you should reuse the output buffer.</span></span> <span data-ttu-id="20dad-778">W tym przypadku <xref:System.Text.Encoding.GetBytes%2A> najlepszym wyborem jest w wersji, która obsługuje tablice typu byte.</span><span class="sxs-lookup"><span data-stu-id="20dad-778">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="20dad-779">Należy rozważyć użycie <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> zamiast metody <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-779">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="20dad-780">Metoda konwersji konwertuje jak najwięcej danych i zgłosić wyjątek, jeśli bufor wyjściowy jest zbyt mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-780">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="20dad-781">Kodowanie strumienia ciągłego, ta metoda jest często najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-781">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-782">Poniższy przykład określa liczbę bajtów wymaganą do kodowania tablicy znaków, koduje znaki i wyświetla wynikowy bajtów.</span><span class="sxs-lookup"><span data-stu-id="20dad-782">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-783">
            <paramref name="chars" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-783">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="20dad-784">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-784">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(valuetype System.ReadOnlySpan`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (chars As ReadOnlySpan(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : ReadOnlySpan&lt;char&gt; -&gt; int&#xA;override this.GetByteCount : ReadOnlySpan&lt;char&gt; -&gt; int" Usage="encoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : string -&gt; int&#xA;override this.GetByteCount : string -&gt; int" Usage="encoding.GetByteCount s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="20dad-785">Ciąg zawierający zestaw znaków do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-785">The string containing the set of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-786">W przypadku przesłonięcia w klasie pochodnej, oblicza liczbę bajtów produkowane przez kodowanie znaków w określonym stringu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-786">When overridden in a derived class, calculates the number of bytes produced by encoding the characters in the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-787">Liczba bajtów produkowane przez kodowanie określonych znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-787">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-788">Do obliczania rozmiaru tablicy dokładnie wymagane przez <xref:System.Text.Encoding.GetBytes%2A> do przechowywania wynikowy bajtów, wywołanie <xref:System.Text.Encoding.GetByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-788">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="20dad-789">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.Encoding.GetMaxByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-789">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="20dad-790"><xref:System.Text.Encoding.GetByteCount%2A> Metoda ogólnie Umożliwia przydzielenie mniej pamięci podczas <xref:System.Text.Encoding.GetMaxByteCount%2A> Metoda ogólnie jest wykonywany szybciej.</span><span class="sxs-lookup"><span data-stu-id="20dad-790">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="20dad-791"><xref:System.Text.Encoding.GetByteCount%2A> Metoda określa liczbę bajtów spowodować Kodowanie zestawu znaków Unicode i <xref:System.Text.Encoding.GetBytes%2A> metoda wykonuje rzeczywistego kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-791">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="20dad-792"><xref:System.Text.Encoding.GetBytes%2A> Metoda oczekuje dyskretnych konwersji, w przeciwieństwie do <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metody, która obsługuje wiele konwersje na jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-792">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-793">Różne wersje programu <xref:System.Text.Encoding.GetByteCount%2A> i <xref:System.Text.Encoding.GetBytes%2A> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="20dad-793">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="20dad-794">Poniżej przedstawiono pewne zagadnienia programowania do użytku z następujących metod:</span><span class="sxs-lookup"><span data-stu-id="20dad-794">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="20dad-795">Aplikacja może być konieczne zakodować wiele danych wejściowych znaków na stronę kodową i przetwarzanie znaków przy użyciu wielu wywołań.</span><span class="sxs-lookup"><span data-stu-id="20dad-795">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="20dad-796">W takim przypadku prawdopodobnie trzeba utrzymywać stan między wywołaniami, biorąc pod uwagę stanu, który jest trwały przez <xref:System.Text.Encoder> obiekt używany.</span><span class="sxs-lookup"><span data-stu-id="20dad-796">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="20dad-797">Jeśli aplikacja obsługuje ciąg danych wejściowych, wersję ciągu <xref:System.Text.Encoding.GetBytes%2A> jest zalecane.</span><span class="sxs-lookup"><span data-stu-id="20dad-797">If your app handles string inputs, the string version of <xref:System.Text.Encoding.GetBytes%2A> is recommended.</span></span>  
  
-   <span data-ttu-id="20dad-798">Wersja buforu znaku Unicode z <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> umożliwia kilka technik szybkie, zwłaszcza w przypadku wielu wywołań przy użyciu <xref:System.Text.Encoder> obiektu lub wstawiania do istniejących buforów.</span><span class="sxs-lookup"><span data-stu-id="20dad-798">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="20dad-799">Mieć na uwadze, jednak, że tej wersji metoda czasami jest niebezpieczne, ponieważ wskaźniki są wymagane.</span><span class="sxs-lookup"><span data-stu-id="20dad-799">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="20dad-800">Jeśli aplikacja musi przekonwertować dużej ilości danych, należy używać ponownie bufor wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-800">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="20dad-801">W tym przypadku <xref:System.Text.Encoding.GetBytes%2A> najlepszym wyborem jest w wersji, która obsługuje tablice typu byte.</span><span class="sxs-lookup"><span data-stu-id="20dad-801">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="20dad-802">Należy rozważyć użycie <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> zamiast metody <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-802">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="20dad-803">Metoda konwersji konwertuje jak najwięcej danych i zgłosić wyjątek, jeśli bufor wyjściowy jest zbyt mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-803">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="20dad-804">Kodowanie strumienia ciągłego, ta metoda jest często najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-804">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-805">Poniższy przykład określa liczbę bajtów wymaganą do kodowania, ciągu lub zakres w ciągu koduje znaki i wyświetla wynikowy bajtów.</span><span class="sxs-lookup"><span data-stu-id="20dad-805">The following example determines the number of bytes required to encode a string or a range in the string, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/VB/getbytes_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-806">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-806">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="20dad-807">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-807">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : nativeptr&lt;char&gt; * int -&gt; int&#xA;override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="encoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="20dad-808">Wskaźnik do pierwszego znaku do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-808">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="20dad-809">Liczba znaków do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-809">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-810">W przypadku przesłonięcia w klasie pochodnej, oblicza liczbę bajtów produkowane przez kodowanie zestawu znaków, zaczynając od określonego znaku wskaźnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-810">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-811">Liczba bajtów produkowane przez kodowanie określonych znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-811">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-812">Aby obliczyć tablicy dokładny rozmiar <xref:System.Text.Encoding.GetBytes%2A> wymaga do przechowywania wynikowy bajty, należy wywołać <xref:System.Text.Encoding.GetByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-812">To calculate the exact array size that <xref:System.Text.Encoding.GetBytes%2A> requires to store the resulting bytes, you should call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="20dad-813">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.Encoding.GetMaxByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-813">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="20dad-814"><xref:System.Text.Encoding.GetByteCount%2A> Metoda ogólnie Umożliwia przydzielenie mniej pamięci podczas <xref:System.Text.Encoding.GetMaxByteCount%2A> Metoda ogólnie jest wykonywany szybciej.</span><span class="sxs-lookup"><span data-stu-id="20dad-814">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="20dad-815"><xref:System.Text.Encoding.GetByteCount%28System.Char%2A%2CSystem.Int32%29> Metoda określa liczbę bajtów spowodować Kodowanie zestawu znaków Unicode i <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> metoda wykonuje rzeczywistego kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-815">The <xref:System.Text.Encoding.GetByteCount%28System.Char%2A%2CSystem.Int32%29> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> method performs the actual encoding.</span></span> <span data-ttu-id="20dad-816"><xref:System.Text.Encoding.GetBytes%2A> Metoda oczekuje dyskretnych konwersji, w przeciwieństwie do <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metody, która obsługuje wiele konwersje na jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-816">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-817">Różne wersje programu <xref:System.Text.Encoding.GetByteCount%2A> i <xref:System.Text.Encoding.GetBytes%2A> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="20dad-817">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="20dad-818">Poniżej przedstawiono niektóre zagadnienia dotyczące korzystania z tych metod:</span><span class="sxs-lookup"><span data-stu-id="20dad-818">The following are some considerations for using these methods:</span></span>  
  
-   <span data-ttu-id="20dad-819">Aplikacja może być konieczne zakodować wiele danych wejściowych znaków na stronę kodową i przetwarzanie znaków przy użyciu wielu wywołań.</span><span class="sxs-lookup"><span data-stu-id="20dad-819">Your app may need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="20dad-820">W takim przypadku prawdopodobnie trzeba utrzymywać stan między wywołaniami, biorąc pod uwagę stanu, który jest trwały przez <xref:System.Text.Encoder> obiekt używany.</span><span class="sxs-lookup"><span data-stu-id="20dad-820">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="20dad-821">Jeśli aplikacja obsługuje ciąg danych wejściowych, należy użyć ciągu <xref:System.Text.Encoding.GetBytes%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-821">If your app handles string inputs, you should use the string version of the <xref:System.Text.Encoding.GetBytes%2A> method.</span></span>  
  
-   <span data-ttu-id="20dad-822">Wersja buforu znaku Unicode z <xref:System.Text.Encoding.GetBytes%2A> umożliwia kilka technik szybkie, zwłaszcza w przypadku wielu wywołań przy użyciu <xref:System.Text.Encoder> obiektu lub wstawiania do istniejących buforów.</span><span class="sxs-lookup"><span data-stu-id="20dad-822">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%2A> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="20dad-823">Mieć na uwadze, jednak, że tej wersji metoda czasami jest niebezpieczne, ponieważ wskaźniki są wymagane.</span><span class="sxs-lookup"><span data-stu-id="20dad-823">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="20dad-824">Jeśli aplikacja musi przekonwertować dużej ilości danych, należy używać ponownie bufor wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-824">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="20dad-825">W tym przypadku <xref:System.Text.Encoding.GetBytes%2A> najlepszym wyborem jest w wersji, która obsługuje tablice typu byte.</span><span class="sxs-lookup"><span data-stu-id="20dad-825">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="20dad-826">Należy rozważyć użycie <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> zamiast metody <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-826">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="20dad-827">Metoda konwersji konwertuje jak najwięcej danych i zgłosić wyjątek, jeśli bufor wyjściowy jest zbyt mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-827">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="20dad-828">Kodowanie strumienia ciągłego, ta metoda jest często najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-828">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-829">
            <paramref name="chars" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-829">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-830">
            <paramref name="count" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-830">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="20dad-831">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-831">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="20dad-832">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-832">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="20dad-833">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-833">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public abstract int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : char[] * int * int -&gt; int" Usage="encoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="20dad-834">Tablica znaków, zawierającą zestaw znaków kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-834">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="20dad-835">Indeks pierwszego znaku do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-835">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="20dad-836">Liczba znaków do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-836">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-837">W przypadku przesłonięcia w klasie pochodnej, oblicza liczbę bajtów produkowane przez kodowanie zestawu znaków, z określoną tablicę znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-837">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-838">Liczba bajtów produkowane przez kodowanie określonych znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-838">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-839">Do obliczania rozmiaru tablicy dokładnie wymagane przez <xref:System.Text.Encoding.GetBytes%2A> do przechowywania wynikowy bajtów, wywołanie <xref:System.Text.Encoding.GetByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-839">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="20dad-840">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.Encoding.GetMaxByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-840">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="20dad-841"><xref:System.Text.Encoding.GetByteCount%2A> Metoda ogólnie Umożliwia przydzielenie mniej pamięci podczas <xref:System.Text.Encoding.GetMaxByteCount%2A> Metoda ogólnie jest wykonywany szybciej.</span><span class="sxs-lookup"><span data-stu-id="20dad-841">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="20dad-842"><xref:System.Text.Encoding.GetByteCount%2A> Metoda określa liczbę bajtów spowodować Kodowanie zestawu znaków Unicode i <xref:System.Text.Encoding.GetBytes%2A> metoda wykonuje rzeczywistego kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-842">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="20dad-843"><xref:System.Text.Encoding.GetBytes%2A> Metoda oczekuje dyskretnych konwersji, w przeciwieństwie do <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metody, która obsługuje wiele konwersje na jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-843">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-844">Różne wersje programu <xref:System.Text.Encoding.GetByteCount%2A> i <xref:System.Text.Encoding.GetBytes%2A> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="20dad-844">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="20dad-845">Poniżej przedstawiono pewne zagadnienia programowania do użytku z następujących metod:</span><span class="sxs-lookup"><span data-stu-id="20dad-845">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="20dad-846">Aplikacja może być konieczne zakodować wiele danych wejściowych znaków na stronę kodową i przetwarzanie znaków przy użyciu wielu wywołań.</span><span class="sxs-lookup"><span data-stu-id="20dad-846">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="20dad-847">W takim przypadku prawdopodobnie trzeba utrzymywać stan między wywołaniami, biorąc pod uwagę stanu, który jest trwały przez <xref:System.Text.Encoder> obiekt używany.</span><span class="sxs-lookup"><span data-stu-id="20dad-847">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span>  
  
-   <span data-ttu-id="20dad-848">Jeśli aplikacja obsługuje ciąg danych wejściowych, wersję ciągu <xref:System.Text.Encoding.GetBytes%2A> jest zalecane.</span><span class="sxs-lookup"><span data-stu-id="20dad-848">If your app handles string inputs, the string version of <xref:System.Text.Encoding.GetBytes%2A> is recommended.</span></span>  
  
-   <span data-ttu-id="20dad-849">Wersja buforu znaku Unicode z <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> umożliwia kilka technik szybkie, zwłaszcza w przypadku wielu wywołań przy użyciu <xref:System.Text.Encoder> obiektu lub wstawiania do istniejących buforów.</span><span class="sxs-lookup"><span data-stu-id="20dad-849">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="20dad-850">Mieć na uwadze, jednak, że tej wersji metoda czasami jest niebezpieczne, ponieważ wskaźniki są wymagane.</span><span class="sxs-lookup"><span data-stu-id="20dad-850">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="20dad-851">Jeśli aplikacja musi przekonwertować dużej ilości danych, należy używać ponownie bufor wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-851">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="20dad-852">W tym przypadku <xref:System.Text.Encoding.GetBytes%2A> najlepszym wyborem jest w wersji, która obsługuje tablice typu byte.</span><span class="sxs-lookup"><span data-stu-id="20dad-852">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="20dad-853">Należy rozważyć użycie <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> zamiast metody <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-853">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="20dad-854">Metoda konwersji konwertuje jak najwięcej danych i zgłosić wyjątek, jeśli bufor wyjściowy jest zbyt mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-854">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="20dad-855">Kodowanie strumienia ciągłego, ta metoda jest często najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-855">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-856">Poniższy przykład określa liczbę bajtów wymaganą do zakodowania trzy znaki z tablicy znaków koduje znaki i wyświetla wynikowy bajtów.</span><span class="sxs-lookup"><span data-stu-id="20dad-856">The following example determines the number of bytes required to encode three characters from a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CPP/getbytes_chararric.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CS/getbytes_chararric.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/VB/getbytes_chararric.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-857">
            <paramref name="chars" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-857">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-858">
            <paramref name="index" /> lub <paramref name="count" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-858">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="20dad-859">- lub - <paramref name="index" /> i <paramref name="count" /> nie określa prawidłowego zakresu <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-859">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="20dad-860">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-860">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public int GetByteCount (string s, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetByteCount(string s, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetByteCount(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteCount (s As String, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetByteCount(System::String ^ s, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetByteCount : string * int * int -&gt; int" Usage="encoding.GetByteCount (s, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="index">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-861">W przypadku przesłonięcia w klasie pochodnej, koduje zestaw znaków do sekwencji bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-861">When overridden in a derived class, encodes a set of characters into a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As Char()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes(cli::array &lt;char&gt; ^ chars);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : char[] -&gt; byte[]&#xA;override this.GetBytes : char[] -&gt; byte[]" Usage="encoding.GetBytes chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="20dad-862">Tablica znaków zawierający znaki do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-862">The character array containing the characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-863">W przypadku przesłonięcia w klasie pochodnej, koduje wszystkie znaki w określoną tablicę znaków do sekwencji bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-863">When overridden in a derived class, encodes all the characters in the specified character array into a sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-864">Tablica bajtów zawierająca wyniki z określonego zestawu znaków kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-864">A byte array containing the results of encoding the specified set of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-865">Jeśli dane, które ma zostać przekonwertowany jest dostępna tylko w kolejnych bloków (na przykład dane odczytane ze strumienia) lub ilości danych jest tak duża, że należy ją podzielić na mniejsze bloki, należy użyć <xref:System.Text.Decoder> lub <xref:System.Text.Encoder> dostarczone przez <xref:System.Text.Encoding.GetDecoder%2A> Metoda lub <xref:System.Text.Encoding.GetEncoder%2A> metody, odpowiednio w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="20dad-865">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="20dad-866"><xref:System.Text.Encoding.GetByteCount%2A> Metoda określa liczbę bajtów spowodować Kodowanie zestawu znaków Unicode i <xref:System.Text.Encoding.GetBytes%2A> metoda wykonuje rzeczywistego kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-866">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="20dad-867"><xref:System.Text.Encoding.GetBytes%2A> Metoda oczekuje dyskretnych konwersji, w przeciwieństwie do <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metody, która obsługuje wiele konwersje na jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-867">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-868">Różne wersje programu <xref:System.Text.Encoding.GetByteCount%2A> i <xref:System.Text.Encoding.GetBytes%2A> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="20dad-868">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="20dad-869">Poniżej przedstawiono pewne zagadnienia programowania do użytku z następujących metod:</span><span class="sxs-lookup"><span data-stu-id="20dad-869">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="20dad-870">Aplikacja może być konieczne zakodować wiele danych wejściowych znaków na stronę kodową i przetwarzanie znaków przy użyciu wielu wywołań.</span><span class="sxs-lookup"><span data-stu-id="20dad-870">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="20dad-871">W takim przypadku prawdopodobnie trzeba utrzymywać stan między wywołaniami, biorąc pod uwagę stanu, który jest trwały przez <xref:System.Text.Encoder> obiekt używany.</span><span class="sxs-lookup"><span data-stu-id="20dad-871">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="20dad-872">(Na przykład sekwencja znaków, który zawiera pary zastępcze może kończyć się znakiem zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="20dad-872">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="20dad-873"><xref:System.Text.Encoder> Zapamiętają tego znakiem zastępczym wysokiego poziomu, dzięki czemu można połączyć z dwuskładnikowego na początku następujące wywołanie.</span><span class="sxs-lookup"><span data-stu-id="20dad-873">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="20dad-874"><xref:System.Text.Encoding> nie będzie możliwe do zarządzania stanem, więc znak zostanie wysłane do <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="20dad-874"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="20dad-875">Jeśli aplikacja obsługuje ciąg danych wejściowych, należy wywołać wersję ciągu <xref:System.Text.Encoding.GetBytes%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-875">If your app handles string inputs, you should call the string version of the <xref:System.Text.Encoding.GetBytes%2A> method.</span></span>  
  
-   <span data-ttu-id="20dad-876">Wersja buforu znaku Unicode z <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> umożliwia kilka technik szybkie, zwłaszcza w przypadku wielu wywołań przy użyciu <xref:System.Text.Encoder> obiektu lub wstawiania do istniejących buforów.</span><span class="sxs-lookup"><span data-stu-id="20dad-876">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="20dad-877">Mieć na uwadze, jednak, że tej wersji metoda czasami jest niebezpieczne, ponieważ wskaźniki są wymagane.</span><span class="sxs-lookup"><span data-stu-id="20dad-877">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="20dad-878">Jeśli aplikacja musi przekonwertować dużej ilości danych, należy używać ponownie bufor wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-878">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="20dad-879">W tym przypadku <xref:System.Text.Encoding.GetBytes%2A> najlepszym wyborem jest w wersji, która obsługuje tablice typu byte.</span><span class="sxs-lookup"><span data-stu-id="20dad-879">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="20dad-880">Należy rozważyć użycie <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> zamiast metody <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-880">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="20dad-881">Metoda konwersji konwertuje jak najwięcej danych i zgłosić wyjątek, jeśli bufor wyjściowy jest zbyt mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-881">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="20dad-882">Kodowanie strumienia ciągłego, ta metoda jest często najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-882">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-883">Poniższy przykład określa liczbę bajtów wymaganą do kodowania tablicy znaków, koduje znaki i wyświetla wynikowy bajtów.</span><span class="sxs-lookup"><span data-stu-id="20dad-883">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-884">
            <paramref name="chars" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-884">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="20dad-885">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-885">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : string -&gt; byte[]&#xA;override this.GetBytes : string -&gt; byte[]" Usage="encoding.GetBytes s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="20dad-886">Ciąg zawierający znaki do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-886">The string containing the characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-887">W przypadku przesłonięcia w klasie pochodnej, koduje wszystkie znaki w określonym ciągiem znaków do sekwencji bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-887">When overridden in a derived class, encodes all the characters in the specified string into a sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-888">Tablica bajtów zawierająca wyniki z określonego zestawu znaków kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-888">A byte array containing the results of encoding the specified set of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-889">Jeśli dane, które ma zostać przekonwertowany jest dostępna tylko w kolejnych bloków (na przykład dane odczytane ze strumienia) lub ilości danych jest tak duża, że należy ją podzielić na mniejsze bloki, należy użyć <xref:System.Text.Decoder> lub <xref:System.Text.Encoder> dostarczone przez <xref:System.Text.Encoding.GetDecoder%2A> Metoda lub <xref:System.Text.Encoding.GetEncoder%2A> metody, odpowiednio w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="20dad-889">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="20dad-890"><xref:System.Text.Encoding.GetByteCount%2A> Metoda określa liczbę bajtów spowodować Kodowanie zestawu znaków Unicode i <xref:System.Text.Encoding.GetBytes%2A> metoda wykonuje rzeczywistego kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-890">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="20dad-891"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> Metoda oczekuje dyskretnych konwersji, w przeciwieństwie do <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metody, która obsługuje wiele konwersje na jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-891">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-892">Różne wersje programu <xref:System.Text.Encoding.GetByteCount%2A> i <xref:System.Text.Encoding.GetBytes%2A> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="20dad-892">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="20dad-893">Poniżej przedstawiono pewne zagadnienia programowania do użytku z następujących metod:</span><span class="sxs-lookup"><span data-stu-id="20dad-893">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="20dad-894">Aplikacja może być konieczne zakodować wiele danych wejściowych znaków na stronę kodową i przetwarzanie znaków przy użyciu wielu wywołań.</span><span class="sxs-lookup"><span data-stu-id="20dad-894">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="20dad-895">W takim przypadku prawdopodobnie trzeba utrzymywać stan między wywołaniami, biorąc pod uwagę stanu, który jest trwały przez <xref:System.Text.Encoder> obiekt używany.</span><span class="sxs-lookup"><span data-stu-id="20dad-895">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="20dad-896">(Na przykład sekwencja znaków, który zawiera pary zastępcze może kończyć się znakiem zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="20dad-896">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="20dad-897"><xref:System.Text.Encoder> Zapamiętają tego znakiem zastępczym wysokiego poziomu, dzięki czemu można połączyć z dwuskładnikowego na początku następujące wywołanie.</span><span class="sxs-lookup"><span data-stu-id="20dad-897">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="20dad-898"><xref:System.Text.Encoding> nie będzie możliwe do zarządzania stanem, więc znak zostanie wysłane do <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="20dad-898"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="20dad-899">Jeśli aplikacja obsługuje ciąg danych wejściowych, należy użyć ciągu <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-899">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="20dad-900">Wersja buforu znaku Unicode z <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> umożliwia kilka technik szybkie, zwłaszcza w przypadku wielu wywołań przy użyciu <xref:System.Text.Encoder> obiektu lub wstawiania do istniejących buforów.</span><span class="sxs-lookup"><span data-stu-id="20dad-900">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="20dad-901">Mieć na uwadze, jednak, że tej wersji metoda czasami jest niebezpieczne, ponieważ wskaźniki są wymagane.</span><span class="sxs-lookup"><span data-stu-id="20dad-901">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="20dad-902">Jeśli aplikacja musi przekonwertować dużej ilości danych, należy używać ponownie bufor wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-902">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="20dad-903">W tym przypadku <xref:System.Text.Encoding.GetBytes%2A> najlepszym wyborem jest w wersji, która obsługuje tablice typu byte.</span><span class="sxs-lookup"><span data-stu-id="20dad-903">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="20dad-904">Należy rozważyć użycie <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> zamiast metody <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-904">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="20dad-905">Metoda konwersji konwertuje jak najwięcej danych i zgłosić wyjątek, jeśli bufor wyjściowy jest zbyt mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-905">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="20dad-906">Kodowanie strumienia ciągłego, ta metoda jest często najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-906">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-907">Poniższy przykład określa liczbę bajtów wymaganą do kodowania, ciągu lub zakres w ciągu koduje znaki i wyświetla wynikowy bajtów.</span><span class="sxs-lookup"><span data-stu-id="20dad-907">The following example determines the number of bytes required to encode a string or a range in the string, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/VB/getbytes_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-908">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-908">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="20dad-909">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-909">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; -&gt; int&#xA;override this.GetBytes : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; -&gt; int" Usage="encoding.GetBytes (chars, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetBytes (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetBytes(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As Char(), index As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetBytes(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : char[] * int * int -&gt; byte[]&#xA;override this.GetBytes : char[] * int * int -&gt; byte[]" Usage="encoding.GetBytes (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="20dad-910">Tablica znaków, zawierającą zestaw znaków kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-910">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="20dad-911">Indeks pierwszego znaku do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-911">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="20dad-912">Liczba znaków do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-912">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-913">W przypadku przesłonięcia w klasie pochodnej, koduje zestaw znaków, z określoną tablicę znaków do sekwencji bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-913">When overridden in a derived class, encodes a set of characters from the specified character array into a sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-914">Tablica bajtów zawierająca wyniki z określonego zestawu znaków kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-914">A byte array containing the results of encoding the specified set of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-915">Jeśli dane, które ma zostać przekonwertowany jest dostępna tylko w kolejnych bloków (na przykład dane odczytane ze strumienia) lub ilości danych jest tak duża, że należy ją podzielić na mniejsze bloki, należy użyć <xref:System.Text.Decoder> lub <xref:System.Text.Encoder> dostarczone przez <xref:System.Text.Encoding.GetDecoder%2A> Metoda lub <xref:System.Text.Encoding.GetEncoder%2A> metody, odpowiednio w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="20dad-915">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="20dad-916"><xref:System.Text.Encoding.GetByteCount%2A> Metoda określa liczbę bajtów spowodować Kodowanie zestawu znaków Unicode i <xref:System.Text.Encoding.GetBytes%2A> metoda wykonuje rzeczywistego kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-916">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="20dad-917"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> Metoda oczekuje dyskretnych konwersji, w przeciwieństwie do <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metody, która obsługuje wiele konwersje na jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-917">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-918">Różne wersje programu <xref:System.Text.Encoding.GetByteCount%2A> i <xref:System.Text.Encoding.GetBytes%2A> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="20dad-918">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="20dad-919">Poniżej przedstawiono pewne zagadnienia programowania do użytku z następujących metod:</span><span class="sxs-lookup"><span data-stu-id="20dad-919">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="20dad-920">Aplikacja może być konieczne zakodować wiele danych wejściowych znaków na stronę kodową i przetwarzanie znaków przy użyciu wielu wywołań.</span><span class="sxs-lookup"><span data-stu-id="20dad-920">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="20dad-921">W takim przypadku prawdopodobnie trzeba utrzymywać stan między wywołaniami, biorąc pod uwagę stanu, który jest trwały przez <xref:System.Text.Encoder> obiekt używany.</span><span class="sxs-lookup"><span data-stu-id="20dad-921">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="20dad-922">(Na przykład sekwencja znaków, który zawiera pary zastępcze może kończyć się znakiem zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="20dad-922">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="20dad-923"><xref:System.Text.Encoder> Zapamiętają tego znakiem zastępczym wysokiego poziomu, dzięki czemu można połączyć z dwuskładnikowego na początku następujące wywołanie.</span><span class="sxs-lookup"><span data-stu-id="20dad-923">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="20dad-924"><xref:System.Text.Encoding> nie będzie możliwe do zarządzania stanem, więc znak zostanie wysłane do <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="20dad-924"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="20dad-925">Jeśli aplikacja obsługuje ciąg danych wejściowych, należy użyć ciągu <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-925">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="20dad-926">Wersja buforu znaku Unicode z <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> umożliwia kilka technik szybkie, zwłaszcza w przypadku wielu wywołań przy użyciu <xref:System.Text.Encoder> obiektu lub wstawiania do istniejących buforów.</span><span class="sxs-lookup"><span data-stu-id="20dad-926">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="20dad-927">Mieć na uwadze, jednak, że tej wersji metoda czasami jest niebezpieczne, ponieważ wskaźniki są wymagane.</span><span class="sxs-lookup"><span data-stu-id="20dad-927">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="20dad-928">Jeśli aplikacja musi przekonwertować dużej ilości danych, należy używać ponownie bufor wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-928">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="20dad-929">W tym przypadku <xref:System.Text.Encoding.GetBytes%2A> najlepszym wyborem jest w wersji, która obsługuje tablice typu byte.</span><span class="sxs-lookup"><span data-stu-id="20dad-929">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="20dad-930">Należy rozważyć użycie <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> zamiast metody <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-930">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="20dad-931">Metoda konwersji konwertuje jak najwięcej danych i zgłosić wyjątek, jeśli bufor wyjściowy jest zbyt mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-931">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="20dad-932">Kodowanie strumienia ciągłego, ta metoda jest często najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-932">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-933">Poniższy przykład określa liczbę bajtów wymaganą do zakodowania trzy znaki z tablicy znaków koduje znaki i wyświetla wynikowy bajtów.</span><span class="sxs-lookup"><span data-stu-id="20dad-933">The following example determines the number of bytes required to encode three characters from a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CPP/getbytes_chararric.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CS/getbytes_chararric.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/VB/getbytes_chararric.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-934">
            <paramref name="chars" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-934">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-935">
            <paramref name="index" /> lub <paramref name="count" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-935">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="20dad-936">- lub - <paramref name="index" /> i <paramref name="count" /> nie określa prawidłowego zakresu <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-936">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="20dad-937">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-937">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public byte[] GetBytes (string s, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetBytes(string s, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBytes (s As String, index As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetBytes : string * int * int -&gt; byte[]" Usage="encoding.GetBytes (s, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="index">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int&#xA;override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="encoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="20dad-938">Wskaźnik do pierwszego znaku do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-938">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="20dad-939">Liczba znaków do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-939">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="20dad-940">Wskaźnik do lokalizacji, w której należy rozpocząć pisanie wynikowa sekwencja bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-940">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="20dad-941">Maksymalna liczba bajtów do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-941">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-942">W przypadku przesłonięcia w klasie pochodnej, koduje zestaw znaków, zaczynając od określonego znaku wskaźnika do sekwencji bajtów, które są przechowywane, zaczynając od wskaźnika określoną liczbę bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-942">When overridden in a derived class, encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-943">Rzeczywista liczba bajtów zapisanych w lokalizacji wskazanej przez <paramref name="bytes" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-943">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-944">Aby obliczyć tablicy dokładny rozmiar <xref:System.Text.Encoding.GetBytes%2A> wymaga do przechowywania wynikowy bajtów, wywołanie <xref:System.Text.Encoding.GetByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-944">To calculate the exact array size that <xref:System.Text.Encoding.GetBytes%2A> requires to store the resulting bytes, call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="20dad-945">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.Encoding.GetMaxByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-945">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="20dad-946"><xref:System.Text.Encoding.GetByteCount%2A> Metoda ogólnie Umożliwia przydzielenie mniej pamięci podczas <xref:System.Text.Encoding.GetMaxByteCount%2A> Metoda ogólnie jest wykonywany szybciej.</span><span class="sxs-lookup"><span data-stu-id="20dad-946">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="20dad-947">Jeśli dane do konwersji są dostępne tylko w blokach sekwencyjnych (takich jak dane odczytane ze strumienia) lub jeśli ilość danych jest tak duża, że trzeba ją podzielić na mniejsze bloki, należy użyć podanego obiektu <xref:System.Text.Decoder> lub <xref:System.Text.Encoder> odpowiednio przez metodę <xref:System.Text.Encoding.GetDecoder%2A> lub <xref:System.Text.Encoding.GetEncoder%2A> klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="20dad-947">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.Encoding.GetDecoder%2A> or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="20dad-948"><xref:System.Text.Encoding.GetByteCount%2A> Metoda określa liczbę bajtów spowodować Kodowanie zestawu znaków Unicode i <xref:System.Text.Encoding.GetBytes%2A> metoda wykonuje rzeczywistego kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-948">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="20dad-949"><xref:System.Text.Encoding.GetBytes%2A> Metoda oczekuje dyskretnych konwersji, w przeciwieństwie do <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metody, która obsługuje wiele konwersje na jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-949">The <xref:System.Text.Encoding.GetBytes%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-950">Różne wersje programu <xref:System.Text.Encoding.GetByteCount%2A> i <xref:System.Text.Encoding.GetBytes%2A> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="20dad-950">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="20dad-951">Poniżej przedstawiono pewne zagadnienia programowania do użytku z następujących metod:</span><span class="sxs-lookup"><span data-stu-id="20dad-951">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="20dad-952">Aplikacja może być konieczne zakodować wiele danych wejściowych znaków na stronę kodową i przetwarzanie znaków przy użyciu wielu wywołań.</span><span class="sxs-lookup"><span data-stu-id="20dad-952">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="20dad-953">W takim przypadku prawdopodobnie trzeba utrzymywać stan między wywołaniami, biorąc pod uwagę stanu, który jest trwały przez <xref:System.Text.Encoder> obiekt używany.</span><span class="sxs-lookup"><span data-stu-id="20dad-953">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="20dad-954">(Na przykład sekwencja znaków, który zawiera pary zastępcze może kończyć się znakiem zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="20dad-954">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="20dad-955"><xref:System.Text.Encoder> Zapamiętają tego znakiem zastępczym wysokiego poziomu, dzięki czemu można połączyć z dwuskładnikowego na początku następujące wywołanie.</span><span class="sxs-lookup"><span data-stu-id="20dad-955">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="20dad-956"><xref:System.Text.Encoding> nie będzie możliwe do zarządzania stanem, więc znak zostanie wysłane do <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="20dad-956"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="20dad-957">Jeśli aplikacja obsługuje ciąg danych wejściowych, należy użyć ciągu <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-957">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="20dad-958">Wersja buforu znaku Unicode z <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> umożliwia kilka technik szybkie, zwłaszcza w przypadku wielu wywołań przy użyciu <xref:System.Text.Encoder> obiektu lub wstawiania do istniejących buforów.</span><span class="sxs-lookup"><span data-stu-id="20dad-958">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="20dad-959">Mieć na uwadze, jednak, że tej wersji metoda czasami jest niebezpieczne, ponieważ wskaźniki są wymagane.</span><span class="sxs-lookup"><span data-stu-id="20dad-959">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="20dad-960">Jeśli aplikacja musi przekonwertować dużej ilości danych, należy używać ponownie bufor wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-960">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="20dad-961">W tym przypadku <xref:System.Text.Encoding.GetBytes%2A> najlepszym wyborem jest w wersji, która obsługuje tablice typu byte.</span><span class="sxs-lookup"><span data-stu-id="20dad-961">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="20dad-962">Należy rozważyć użycie <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> zamiast metody <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-962">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="20dad-963">Metoda konwersji konwertuje jak najwięcej danych i zgłosić wyjątek, jeśli bufor wyjściowy jest zbyt mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-963">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="20dad-964">Kodowanie strumienia ciągłego, ta metoda jest często najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-964">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-965">
            <paramref name="chars" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-965">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="20dad-966">- lub - <paramref name="bytes" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-966">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-967">
            <paramref name="charCount" /> lub <paramref name="byteCount" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-967">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20dad-968">
            <paramref name="byteCount" /> jest mniejsza niż wynikowa liczba bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-968">
              <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="20dad-969">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-969">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="20dad-970">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-970">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="20dad-971">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-971">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public abstract int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="encoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="20dad-972">Tablica znaków, zawierającą zestaw znaków kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-972">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="20dad-973">Indeks pierwszego znaku do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-973">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="20dad-974">Liczba znaków do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-974">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="20dad-975">Tablica bajtów ma zawierać wynikowa sekwencja bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-975">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="20dad-976">Indeks, od którego należy rozpocząć pisanie wynikowa sekwencja bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-976">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-977">W przypadku przesłonięcia w klasie pochodnej, koduje zestaw znaków, z określoną tablicę znaków, w określonej tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-977">When overridden in a derived class, encodes a set of characters from the specified character array into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-978">Rzeczywista liczba bajtów zapisanych na <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-978">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-979">Do obliczania rozmiaru tablicy dokładnie wymagane przez <xref:System.Text.Encoding.GetBytes%2A> do przechowywania wynikowy bajty, należy wywołać <xref:System.Text.Encoding.GetByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-979">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, you should call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="20dad-980">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.Encoding.GetMaxByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-980">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="20dad-981"><xref:System.Text.Encoding.GetByteCount%2A> Metoda ogólnie Umożliwia przydzielenie mniej pamięci podczas <xref:System.Text.Encoding.GetMaxByteCount%2A> Metoda ogólnie jest wykonywany szybciej.</span><span class="sxs-lookup"><span data-stu-id="20dad-981">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="20dad-982">Jeśli dane, które ma zostać przekonwertowany jest dostępna tylko w kolejnych bloków (na przykład dane odczytane ze strumienia) lub ilości danych jest tak duża, że należy ją podzielić na mniejsze bloki, należy użyć <xref:System.Text.Decoder> lub <xref:System.Text.Encoder> dostarczone przez <xref:System.Text.Encoding.GetDecoder%2A> Metoda lub <xref:System.Text.Encoding.GetEncoder%2A> metody, odpowiednio w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="20dad-982">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="20dad-983"><xref:System.Text.Encoding.GetByteCount%2A> Metoda określa liczbę bajtów spowodować Kodowanie zestawu znaków Unicode i <xref:System.Text.Encoding.GetBytes%2A> metoda wykonuje rzeczywistego kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-983">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="20dad-984"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> Metoda oczekuje dyskretnych konwersji, w przeciwieństwie do <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metody, która obsługuje wiele konwersje na jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-984">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-985">Różne wersje programu <xref:System.Text.Encoding.GetByteCount%2A> i <xref:System.Text.Encoding.GetBytes%2A> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="20dad-985">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="20dad-986">Poniżej przedstawiono pewne zagadnienia programowania do użytku z następujących metod:</span><span class="sxs-lookup"><span data-stu-id="20dad-986">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="20dad-987">Aplikacja może być konieczne zakodować wiele danych wejściowych znaków na stronę kodową i przetwarzanie znaków przy użyciu wielu wywołań.</span><span class="sxs-lookup"><span data-stu-id="20dad-987">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="20dad-988">W takim przypadku prawdopodobnie trzeba utrzymywać stan między wywołaniami, biorąc pod uwagę stanu, który jest trwały przez <xref:System.Text.Encoder> obiekt używany.</span><span class="sxs-lookup"><span data-stu-id="20dad-988">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="20dad-989">(Na przykład sekwencja znaków, który zawiera pary zastępcze może kończyć się znakiem zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="20dad-989">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="20dad-990"><xref:System.Text.Encoder> Zapamiętają tego znakiem zastępczym wysokiego poziomu, dzięki czemu można połączyć z dwuskładnikowego na początku następujące wywołanie.</span><span class="sxs-lookup"><span data-stu-id="20dad-990">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="20dad-991"><xref:System.Text.Encoding> nie będzie możliwe do zarządzania stanem, więc znak zostanie wysłane do <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="20dad-991"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="20dad-992">Jeśli aplikacja obsługuje ciąg danych wejściowych, należy użyć ciągu <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-992">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="20dad-993">Wersja buforu znaku Unicode z <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> umożliwia kilka technik szybkie, zwłaszcza w przypadku wielu wywołań przy użyciu <xref:System.Text.Encoder> obiektu lub wstawiania do istniejących buforów.</span><span class="sxs-lookup"><span data-stu-id="20dad-993">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="20dad-994">Mieć na uwadze, jednak, że tej wersji metoda czasami jest niebezpieczne, ponieważ wskaźniki są wymagane.</span><span class="sxs-lookup"><span data-stu-id="20dad-994">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="20dad-995">Jeśli aplikacja musi przekonwertować dużej ilości danych, należy używać ponownie bufor wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-995">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="20dad-996">W tym przypadku <xref:System.Text.Encoding.GetBytes%2A> najlepszym wyborem jest w wersji, która obsługuje tablice typu byte.</span><span class="sxs-lookup"><span data-stu-id="20dad-996">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="20dad-997">Należy rozważyć użycie <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> zamiast metody <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-997">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="20dad-998">Metoda konwersji konwertuje jak najwięcej danych i zgłosić wyjątek, jeśli bufor wyjściowy jest zbyt mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-998">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="20dad-999">Kodowanie strumienia ciągłego, ta metoda jest często najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-999">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1000">Poniższy przykład określa liczbę bajtów wymaganą do zakodowania trzy znaki z tablicy znaków koduje znaki i wyświetla wynikowy bajtów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1000">The following example determines the number of bytes required to encode three characters from a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CPP/getbytes_chararric.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/CS/getbytes_chararric.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArrIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArrIC/VB/getbytes_chararric.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-1001">
            <paramref name="chars" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1001">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="20dad-1002">- lub - <paramref name="bytes" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1002">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-1003">
            <paramref name="charIndex" /> lub <paramref name="charCount" /> lub <paramref name="byteIndex" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1003">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="20dad-1004">- lub - <paramref name="charIndex" /> i <paramref name="charCount" /> nie określa prawidłowego zakresu <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1004">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="20dad-1005">- lub - <paramref name="byteIndex" /> nie jest prawidłowym indeksem w <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1005">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20dad-1006">
            <paramref name="bytes" /> nie ma za małą pojemność z <paramref name="byteIndex" /> do końca tablicy, aby pomieścić wynikowy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1006">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="20dad-1007">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1007">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : string * int * int * byte[] * int -&gt; int&#xA;override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="encoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="20dad-1008">Ciąg zawierający zestaw znaków do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1008">The string containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="20dad-1009">Indeks pierwszego znaku do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1009">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="20dad-1010">Liczba znaków do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1010">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="20dad-1011">Tablica bajtów ma zawierać wynikowa sekwencja bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1011">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="20dad-1012">Indeks, od którego należy rozpocząć pisanie wynikowa sekwencja bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1012">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1013">W przypadku przesłonięcia w klasie pochodnej, koduje zestaw znaków z określonego ciągu, w określonej tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1013">When overridden in a derived class, encodes a set of characters from the specified string into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1014">Rzeczywista liczba bajtów zapisanych na <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1014">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1015">Do obliczania rozmiaru tablicy dokładnie wymagane przez <xref:System.Text.Encoding.GetBytes%2A> do przechowywania wynikowy bajty, należy wywołać <xref:System.Text.Encoding.GetByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1015">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, you should call the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="20dad-1016">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.Encoding.GetMaxByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1016">To calculate the maximum array size, call the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="20dad-1017"><xref:System.Text.Encoding.GetByteCount%2A> Metoda ogólnie Umożliwia przydzielenie mniej pamięci podczas <xref:System.Text.Encoding.GetMaxByteCount%2A> Metoda ogólnie jest wykonywany szybciej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1017">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="20dad-1018">Jeśli dane, które ma zostać przekonwertowany jest dostępna tylko w kolejnych bloków (na przykład dane odczytane ze strumienia) lub ilości danych jest tak duża, że należy ją podzielić na mniejsze bloki, należy użyć <xref:System.Text.Decoder> lub <xref:System.Text.Encoder> dostarczone przez <xref:System.Text.Encoding.GetDecoder%2A> Metoda lub <xref:System.Text.Encoding.GetEncoder%2A> metody, odpowiednio w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1018">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="20dad-1019"><xref:System.Text.Encoding.GetByteCount%2A> Metoda określa liczbę bajtów spowodować Kodowanie zestawu znaków Unicode i <xref:System.Text.Encoding.GetBytes%2A> metoda wykonuje rzeczywistego kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1019">The <xref:System.Text.Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoding.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="20dad-1020"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> Metoda oczekuje dyskretnych konwersji, w przeciwieństwie do <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> metody, która obsługuje wiele konwersje na jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1020">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method, which handles multiple conversions on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-1021">Różne wersje programu <xref:System.Text.Encoding.GetByteCount%2A> i <xref:System.Text.Encoding.GetBytes%2A> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1021">Several versions of <xref:System.Text.Encoding.GetByteCount%2A> and <xref:System.Text.Encoding.GetBytes%2A> are supported.</span></span> <span data-ttu-id="20dad-1022">Poniżej przedstawiono pewne zagadnienia programowania do użytku z następujących metod:</span><span class="sxs-lookup"><span data-stu-id="20dad-1022">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="20dad-1023">Aplikacja może być konieczne zakodować wiele danych wejściowych znaków na stronę kodową i przetwarzanie znaków przy użyciu wielu wywołań.</span><span class="sxs-lookup"><span data-stu-id="20dad-1023">Your app might need to encode many input characters to a code page and process the characters using multiple calls.</span></span> <span data-ttu-id="20dad-1024">W takim przypadku prawdopodobnie trzeba utrzymywać stan między wywołaniami, biorąc pod uwagę stanu, który jest trwały przez <xref:System.Text.Encoder> obiekt używany.</span><span class="sxs-lookup"><span data-stu-id="20dad-1024">In this case, you probably need to maintain state between calls, taking into account the state that is persisted by the <xref:System.Text.Encoder> object being used.</span></span> <span data-ttu-id="20dad-1025">(Na przykład sekwencja znaków, który zawiera pary zastępcze może kończyć się znakiem zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="20dad-1025">(For example, a character sequence that includes surrogate pairs might end with a high surrogate.</span></span> <span data-ttu-id="20dad-1026"><xref:System.Text.Encoder> Zapamiętają tego znakiem zastępczym wysokiego poziomu, dzięki czemu można połączyć z dwuskładnikowego na początku następujące wywołanie.</span><span class="sxs-lookup"><span data-stu-id="20dad-1026">The <xref:System.Text.Encoder> will remember that high surrogate so that it can be combined with a low surrogate at the beginning of a following call.</span></span> <span data-ttu-id="20dad-1027"><xref:System.Text.Encoding> nie będzie możliwe do zarządzania stanem, więc znak zostanie wysłane do <xref:System.Text.EncoderFallback>.)</span><span class="sxs-lookup"><span data-stu-id="20dad-1027"><xref:System.Text.Encoding> won't be able to maintain the state, so the character will be sent to the <xref:System.Text.EncoderFallback>.)</span></span>  
  
-   <span data-ttu-id="20dad-1028">Jeśli aplikacja obsługuje ciąg danych wejściowych, należy użyć ciągu <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1028">If your app handles string inputs, you should use the string version of <xref:System.Text.Encoding.GetBytes%2A>.</span></span>  
  
-   <span data-ttu-id="20dad-1029">Wersja buforu znaku Unicode z <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> umożliwia kilka technik szybkie, zwłaszcza w przypadku wielu wywołań przy użyciu <xref:System.Text.Encoder> obiektu lub wstawiania do istniejących buforów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1029">The Unicode character buffer version of <xref:System.Text.Encoding.GetBytes%28System.Char%2A%2CSystem.Int32%2CSystem.Byte%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls using the <xref:System.Text.Encoder> object or inserting into existing buffers.</span></span> <span data-ttu-id="20dad-1030">Mieć na uwadze, jednak, że tej wersji metoda czasami jest niebezpieczne, ponieważ wskaźniki są wymagane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1030">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="20dad-1031">Jeśli aplikacja musi przekonwertować dużej ilości danych, należy używać ponownie bufor wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1031">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="20dad-1032">W tym przypadku <xref:System.Text.Encoding.GetBytes%2A> najlepszym wyborem jest w wersji, która obsługuje tablice typu byte.</span><span class="sxs-lookup"><span data-stu-id="20dad-1032">In this case, the <xref:System.Text.Encoding.GetBytes%2A> version that supports byte arrays is the best choice.</span></span>  
  
-   <span data-ttu-id="20dad-1033">Należy rozważyć użycie <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> zamiast metody <xref:System.Text.Encoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1033">Consider using the <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetByteCount%2A>.</span></span> <span data-ttu-id="20dad-1034">Metoda konwersji konwertuje jak najwięcej danych i zgłosić wyjątek, jeśli bufor wyjściowy jest zbyt mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-1034">The conversion method converts as much data as possible, and does throw an exception if the output buffer is too small.</span></span> <span data-ttu-id="20dad-1035">Kodowanie strumienia ciągłego, ta metoda jest często najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-1035">For continuous encoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1036">Poniższy przykład określa liczbę bajtów wymaganą do kodowania, ciągu lub zakres w ciągu koduje znaki i wyświetla wynikowy bajtów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1036">The following example determines the number of bytes required to encode a string or a range in the string, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CPP/getbytes_string.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/CS/getbytes_string.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_String/VB/getbytes_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-1037">
            <paramref name="s" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1037">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="20dad-1038">- lub - <paramref name="bytes" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1038">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-1039">
            <paramref name="charIndex" /> lub <paramref name="charCount" /> lub <paramref name="byteIndex" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1039">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="20dad-1040">- lub - <paramref name="charIndex" /> i <paramref name="charCount" /> nie określa prawidłowego zakresu <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1040">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="20dad-1041">- lub - <paramref name="byteIndex" /> nie jest prawidłowym indeksem w <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1041">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20dad-1042">
            <paramref name="bytes" /> nie ma za małą pojemność z <paramref name="byteIndex" /> do końca tablicy, aby pomieścić wynikowy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1042">
              <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="20dad-1043">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1043">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1044">W przypadku przesłonięcia w klasie pochodnej, oblicza liczbę znaków, generowane przez dekodowanie sekwencji bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1044">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : byte[] -&gt; int&#xA;override this.GetCharCount : byte[] -&gt; int" Usage="encoding.GetCharCount bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="20dad-1045">Tablica bajtów zawierająca sekwencji bajtów do zdekodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1045">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1046">W przypadku przesłonięcia w klasie pochodnej, oblicza liczbę znaków, generowane przez dekodowanie wszystkich bajtów w określonej tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1046">When overridden in a derived class, calculates the number of characters produced by decoding all the bytes in the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1047">Liczba znaków, generowane przez dekodowanie określonej sekwencji bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1047">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1048">Do obliczania rozmiaru tablicy dokładnie wymagane przez <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> Aby wynikowy znaków, należy użyć <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1048">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> method.</span></span> <span data-ttu-id="20dad-1049">Aby obliczyć maksymalny rozmiar tablicy, należy użyć <xref:System.Text.Encoding.GetMaxCharCount%28System.Int32%29> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1049">To calculate the maximum array size, you should use the <xref:System.Text.Encoding.GetMaxCharCount%28System.Int32%29> method.</span></span> <span data-ttu-id="20dad-1050"><xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> Metoda ogólnie Umożliwia przydzielenie mniej pamięci podczas <xref:System.Text.Encoding.GetMaxCharCount%2A> Metoda ogólnie jest wykonywany szybciej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1050">The <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="20dad-1051"><xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> Metoda określa, ile znaków spowodować dekodowanie sekwencji bajtów, a <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> metoda przeprowadza rzeczywiste dekodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1051">The <xref:System.Text.Encoding.GetCharCount%28System.Byte%5B%5D%29> method determines how many characters result in decoding a sequence of bytes, and the  <xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%29> method performs the actual decoding.</span></span> <span data-ttu-id="20dad-1052"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Metoda oczekuje dyskretnych konwersji, w przeciwieństwie do <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> metody, która obsługuje wiele przebiegów na jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1052">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-1053">Różne wersje programu <xref:System.Text.Encoding.GetCharCount%2A> i <xref:System.Text.Encoding.GetChars%2A> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1053">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="20dad-1054">Poniżej przedstawiono pewne zagadnienia programowania do użytku z następujących metod:</span><span class="sxs-lookup"><span data-stu-id="20dad-1054">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="20dad-1055">Aplikacja może być konieczne dekodowania wielu bajtów danych wejściowych od strony kodowej i przetwarzać bajtów przy użyciu wielu wywołań.</span><span class="sxs-lookup"><span data-stu-id="20dad-1055">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="20dad-1056">W takim przypadku prawdopodobnie trzeba utrzymywać stan między wywołaniami.</span><span class="sxs-lookup"><span data-stu-id="20dad-1056">In this case, you probably need to maintain state between calls.</span></span>  
  
-   <span data-ttu-id="20dad-1057">Jeśli aplikacja obsługuje ciąg w danych wyjściowych, należy użyć <xref:System.Text.Encoding.GetString%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1057">If your app handles string outputs, you should use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="20dad-1058">Ponieważ ta metoda musi sprawdzić długość ciągu i przydzielić buforu, jest nieco wolniej, ale powstałe <xref:System.String> typu, zaleca się.</span><span class="sxs-lookup"><span data-stu-id="20dad-1058">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="20dad-1059">Wersja bajtów <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> umożliwia kilka technik szybkie, zwłaszcza w przypadku wielu wywołań do dużych buforów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1059">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="20dad-1060">Mieć na uwadze, jednak, że tej wersji metoda czasami jest niebezpieczne, ponieważ wskaźniki są wymagane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1060">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="20dad-1061">Jeśli aplikacja musi przekonwertować dużej ilości danych, należy używać ponownie bufor wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1061">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="20dad-1062">W tym przypadku [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > wersji, że obsługuje danych wyjściowych znaków bufory jest najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-1062">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="20dad-1063">Należy rozważyć użycie <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> zamiast metody <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1063">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="20dad-1064">Metoda konwersji konwertuje jak najwięcej danych i zgłasza wyjątek, jeśli bufor wyjściowy jest zbyt mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-1064">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="20dad-1065">Dekodowania ciągłego strumienia, ta metoda jest często najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-1065">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1066">Poniższy przykład koduje ciąg na tablicę bajtów, a następnie dekoduje bajtów na tablicę znaków.</span><span class="sxs-lookup"><span data-stu-id="20dad-1066">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/VB/getchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-1067">
            <paramref name="bytes" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1067">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="20dad-1068">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1068">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Text.Encoding.GetChars" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharCount (bytes As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : ReadOnlySpan&lt;byte&gt; -&gt; int&#xA;override this.GetCharCount : ReadOnlySpan&lt;byte&gt; -&gt; int" Usage="encoding.GetCharCount bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public virtual int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int&#xA;override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="encoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="20dad-1069">Wskaźnik do pierwszego bajtu do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1069">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="20dad-1070">Liczba bajtów do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1070">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1071">W przypadku przesłonięcia w klasie pochodnej, oblicza liczbę znaków, generowane przez dekodowanie sekwencji bajtów, zaczynając od wskaźnika określoną liczbę bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1071">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1072">Liczba znaków, generowane przez dekodowanie określonej sekwencji bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1072">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1073">Do obliczania tablicy dokładny rozmiar <xref:System.Text.Encoding.GetChars%2A> wymaga, aby przechowywać wynikowy znaków, należy użyć <xref:System.Text.Encoding.GetCharCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1073">To calculate the exact array size that <xref:System.Text.Encoding.GetChars%2A> requires to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="20dad-1074">Aby obliczyć maksymalny rozmiar tablicy, należy użyć <xref:System.Text.Encoding.GetMaxCharCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1074">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="20dad-1075"><xref:System.Text.Encoding.GetCharCount%2A> Metoda ogólnie Umożliwia przydzielenie mniej pamięci podczas <xref:System.Text.Encoding.GetMaxCharCount%2A> Metoda ogólnie jest wykonywany szybciej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1075">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="20dad-1076"><xref:System.Text.Encoding.GetCharCount%2A> Metoda określa, ile znaków spowodować dekodowanie sekwencji bajtów, a <xref:System.Text.Encoding.GetChars%2A> metoda przeprowadza rzeczywiste dekodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1076">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="20dad-1077"><xref:System.Text.Encoding.GetChars%2A> Metoda oczekuje dyskretnych konwersji, w przeciwieństwie do <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> metody, która obsługuje wiele przebiegów na jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1077">The <xref:System.Text.Encoding.GetChars%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-1078">Różne wersje programu <xref:System.Text.Encoding.GetCharCount%2A> i <xref:System.Text.Encoding.GetChars%2A> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1078">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="20dad-1079">Poniżej przedstawiono pewne zagadnienia programowania do użytku z następujących metod:</span><span class="sxs-lookup"><span data-stu-id="20dad-1079">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="20dad-1080">Aplikacja może być konieczne dekodowania wielu bajtów danych wejściowych od strony kodowej i przetwarzać bajtów przy użyciu wielu wywołań.</span><span class="sxs-lookup"><span data-stu-id="20dad-1080">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="20dad-1081">W takim przypadku prawdopodobnie trzeba utrzymywać stan między wywołaniami.</span><span class="sxs-lookup"><span data-stu-id="20dad-1081">In this case, you probably need to maintain state between calls.</span></span>  
  
-   <span data-ttu-id="20dad-1082">Jeśli aplikacja obsługuje ciąg w danych wyjściowych, zalecane jest użycie <xref:System.Text.Encoding.GetString%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1082">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="20dad-1083">Ponieważ ta metoda musi sprawdzić długość ciągu i przydzielić buforu, jest nieco wolniej, ale powstałe <xref:System.String> typu, zaleca się.</span><span class="sxs-lookup"><span data-stu-id="20dad-1083">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="20dad-1084">Wersja bajtów <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> umożliwia kilka technik szybkie, zwłaszcza w przypadku wielu wywołań do dużych buforów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1084">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="20dad-1085">Mieć na uwadze, jednak, że tej wersji metoda czasami jest niebezpieczne, ponieważ wskaźniki są wymagane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1085">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="20dad-1086">Jeśli aplikacja musi przekonwertować dużej ilości danych, należy używać ponownie bufor wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1086">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="20dad-1087">W tym przypadku [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > wersji, że obsługuje danych wyjściowych znaków bufory jest najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-1087">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="20dad-1088">Należy rozważyć użycie <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> zamiast metody <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1088">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="20dad-1089">Metoda konwersji konwertuje jak najwięcej danych i zgłasza wyjątek, jeśli bufor wyjściowy jest zbyt mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-1089">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="20dad-1090">Dekodowania ciągłego strumienia, ta metoda jest często najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-1090">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-1091">
            <paramref name="bytes" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1091">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-1092">
            <paramref name="count" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1092">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="20dad-1093">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1093">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="20dad-1094">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1094">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="20dad-1095">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1095">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Text.Encoding.GetChars" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public abstract int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetCharCount : byte[] * int * int -&gt; int" Usage="encoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="20dad-1096">Tablica bajtów zawierająca sekwencji bajtów do zdekodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1096">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="20dad-1097">Indeks pierwszego bajtu do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1097">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="20dad-1098">Liczba bajtów do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1098">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1099">W przypadku przesłonięcia w klasie pochodnej, oblicza liczbę znaków, generowane przez dekodowanie sekwencji bajtów z określonej tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1099">When overridden in a derived class, calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1100">Liczba znaków, generowane przez dekodowanie określonej sekwencji bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1100">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1101">Do obliczania rozmiaru tablicy dokładnie wymagane przez <xref:System.Text.Encoding.GetChars%2A> Aby wynikowy znaków, należy użyć <xref:System.Text.Encoding.GetCharCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1101">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%2A> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="20dad-1102">Aby obliczyć maksymalny rozmiar tablicy, należy użyć <xref:System.Text.Encoding.GetMaxCharCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1102">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="20dad-1103"><xref:System.Text.Encoding.GetCharCount%2A> Metoda ogólnie Umożliwia przydzielenie mniej pamięci podczas <xref:System.Text.Encoding.GetMaxCharCount%2A> Metoda ogólnie jest wykonywany szybciej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1103">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="20dad-1104"><xref:System.Text.Encoding.GetCharCount%2A> Metoda określa, ile znaków spowodować dekodowanie sekwencji bajtów, a <xref:System.Text.Encoding.GetChars%2A> metoda przeprowadza rzeczywiste dekodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1104">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="20dad-1105"><xref:System.Text.Encoding.GetChars%2A> Metoda oczekuje dyskretnych konwersji, w przeciwieństwie do <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> metody, która obsługuje wiele przebiegów na jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1105">The <xref:System.Text.Encoding.GetChars%2A> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-1106">Różne wersje programu <xref:System.Text.Encoding.GetCharCount%2A> i <xref:System.Text.Encoding.GetChars%2A> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1106">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="20dad-1107">Poniżej przedstawiono pewne zagadnienia programowania do użytku z następujących metod:</span><span class="sxs-lookup"><span data-stu-id="20dad-1107">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="20dad-1108">Aplikacja może być konieczne dekodowania wielu bajtów danych wejściowych od strony kodowej i przetwarzać bajtów przy użyciu wielu wywołań.</span><span class="sxs-lookup"><span data-stu-id="20dad-1108">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="20dad-1109">W takim przypadku prawdopodobnie trzeba utrzymywać stan między wywołaniami.</span><span class="sxs-lookup"><span data-stu-id="20dad-1109">In this case, you probably need to maintain state between calls.</span></span>  
  
-   <span data-ttu-id="20dad-1110">Jeśli aplikacja obsługuje ciąg w danych wyjściowych, zalecane jest użycie <xref:System.Text.Encoding.GetString%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1110">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="20dad-1111">Ponieważ ta metoda musi sprawdzić długość ciągu i przydzielić buforu, jest nieco wolniej, ale powstałe <xref:System.String> typu, zaleca się.</span><span class="sxs-lookup"><span data-stu-id="20dad-1111">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="20dad-1112">Wersja bajtów <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> umożliwia kilka technik szybkie, zwłaszcza w przypadku wielu wywołań do dużych buforów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1112">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="20dad-1113">Mieć na uwadze, jednak, że tej wersji metoda czasami jest niebezpieczne, ponieważ wskaźniki są wymagane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1113">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="20dad-1114">Jeśli aplikacja musi przekonwertować dużej ilości danych, należy używać ponownie bufor wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1114">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="20dad-1115">W tym przypadku [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > wersji, że obsługuje danych wyjściowych znaków bufory jest najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-1115">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="20dad-1116">Należy rozważyć użycie <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> zamiast metody <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1116">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="20dad-1117">Metoda konwersji konwertuje jak najwięcej danych i zgłasza wyjątek, jeśli bufor wyjściowy jest zbyt mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-1117">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="20dad-1118">Dekodowania ciągłego strumienia, ta metoda jest często najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-1118">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1119">Poniższy przykład konwertuje ciąg z jednego formatu kodowania na inny.</span><span class="sxs-lookup"><span data-stu-id="20dad-1119">The following example converts a string from one encoding to another.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 <span data-ttu-id="20dad-1120">Poniższy przykład koduje ciąg na tablicę bajtów, a następnie dekoduje zakresu bajtów na tablicę znaków.</span><span class="sxs-lookup"><span data-stu-id="20dad-1120">The following example encodes a string into an array of bytes, and then decodes a range of the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CPP/getcharsic.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CS/getcharsic.cs#1)]
 [!code-vb[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/VB/getcharsic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-1121">
            <paramref name="bytes" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1121">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-1122">
            <paramref name="index" /> lub <paramref name="count" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1122">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="20dad-1123">- lub - <paramref name="index" /> i <paramref name="count" /> nie określa prawidłowego zakresu <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1123">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="20dad-1124">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1124">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Text.Encoding.GetChars" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1125">W przypadku przesłonięcia w klasie pochodnej, dekoduje sekwencję bajtów w zestawie znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1125">When overridden in a derived class, decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual char[] GetChars (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char[] GetChars(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As Byte()) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;char&gt; ^ GetChars(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : byte[] -&gt; char[]&#xA;override this.GetChars : byte[] -&gt; char[]" Usage="encoding.GetChars bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="20dad-1126">Tablica bajtów zawierająca sekwencji bajtów do zdekodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1126">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1127">W przypadku przesłonięcia w klasie pochodnej, dekoduje wszystkich bajtów w określonej tablicy bajtów w zestawie znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1127">When overridden in a derived class, decodes all the bytes in the specified byte array into a set of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1128">Tablica znaków, zawierającą wyniki dekodowanie określonej sekwencji bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1128">A character array containing the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1129"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> pobiera znaków z sekwencji bajtów danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="20dad-1129"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="20dad-1130"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> różni się od <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> ponieważ <xref:System.Text.Encoding> oczekuje dyskretnych konwersji, podczas gdy <xref:System.Text.Decoder> jest przeznaczony dla wielu przebiegów w jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1130"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-1131">Jeśli dane, które ma zostać przekonwertowany jest dostępna tylko w kolejnych bloków (na przykład dane odczytane ze strumienia) lub ilości danych jest tak duża, że należy ją podzielić na mniejsze bloki, należy użyć <xref:System.Text.Decoder> lub <xref:System.Text.Encoder> dostarczone przez <xref:System.Text.Encoding.GetDecoder%2A> Metoda lub <xref:System.Text.Encoding.GetEncoder%2A> metody, odpowiednio w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1131">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="20dad-1132">**Uwaga** ta metoda jest przeznaczona do pracy na znaki Unicode, a nie na dowolne dane binarne, takie jak tablice typu byte.</span><span class="sxs-lookup"><span data-stu-id="20dad-1132">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="20dad-1133">Jeśli musisz zakodować dowolne dane binarne do tekstu, należy użyć protokołu, takie jak uuencode, który jest implementowany przez metody takie jak <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1133">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="20dad-1134"><xref:System.Text.Encoding.GetCharCount%2A> Metoda określa, ile znaków spowodować dekodowanie sekwencji bajtów, a <xref:System.Text.Encoding.GetChars%2A> metoda przeprowadza rzeczywiste dekodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1134">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="20dad-1135"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Metoda oczekuje dyskretnych konwersji, w przeciwieństwie do <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> metody, która obsługuje wiele przebiegów na jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1135">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-1136">Różne wersje programu <xref:System.Text.Encoding.GetCharCount%2A> i <xref:System.Text.Encoding.GetChars%2A> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1136">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="20dad-1137">Poniżej przedstawiono pewne zagadnienia programowania do użytku z następujących metod:</span><span class="sxs-lookup"><span data-stu-id="20dad-1137">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="20dad-1138">Aplikacja może być konieczne dekodowania wielu bajtów danych wejściowych od strony kodowej i przetwarzać bajtów przy użyciu wielu wywołań.</span><span class="sxs-lookup"><span data-stu-id="20dad-1138">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="20dad-1139">W takim przypadku prawdopodobnie trzeba utrzymywać stan między wywołaniami, ponieważ sekwencji bajtów może zostać przerwane podczas przetwarzania w partiach.</span><span class="sxs-lookup"><span data-stu-id="20dad-1139">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="20dad-1140">(Na przykład część sekwencji shift ISO-2022 może kończyć się jednym <xref:System.Text.Encoding.GetChars%2A> wywołania i Kontynuuj na początku następnego <xref:System.Text.Encoding.GetChars%2A> wywołania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1140">(For example, part of an ISO-2022 shift sequence may end one <xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next <xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="20dad-1141"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> wywoła plan awaryjny tych niekompletne sekwencji, ale <xref:System.Text.Decoder> zapamiętają tych sekwencji dla następnego wywołania metody.)</span><span class="sxs-lookup"><span data-stu-id="20dad-1141"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="20dad-1142">Jeśli aplikacja obsługuje ciąg w danych wyjściowych, zalecane jest użycie <xref:System.Text.Encoding.GetString%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1142">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="20dad-1143">Ponieważ ta metoda musi sprawdzić długość ciągu i przydzielić buforu, jest nieco wolniej, ale powstałe <xref:System.String> typu, zaleca się.</span><span class="sxs-lookup"><span data-stu-id="20dad-1143">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="20dad-1144">Wersja bajtów <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> umożliwia kilka technik szybkie, zwłaszcza w przypadku wielu wywołań do dużych buforów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1144">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="20dad-1145">Mieć na uwadze, jednak, że tej wersji metoda czasami jest niebezpieczne, ponieważ wskaźniki są wymagane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1145">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="20dad-1146">Jeśli aplikacja musi przekonwertować dużej ilości danych, należy używać ponownie bufor wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1146">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="20dad-1147">W tym przypadku [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > wersji, że obsługuje danych wyjściowych znaków bufory jest najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-1147">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="20dad-1148">Należy rozważyć użycie <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> zamiast metody <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1148">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="20dad-1149">Metoda konwersji konwertuje jak najwięcej danych i zgłasza wyjątek, jeśli bufor wyjściowy jest zbyt mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-1149">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="20dad-1150">Dekodowania ciągłego strumienia, ta metoda jest często najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-1150">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1151">Poniższy przykład koduje ciąg na tablicę bajtów, a następnie dekoduje bajtów na tablicę znaków.</span><span class="sxs-lookup"><span data-stu-id="20dad-1151">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/VB/getchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-1152">
            <paramref name="bytes" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1152">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="20dad-1153">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1153">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; -&gt; int&#xA;override this.GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; -&gt; int" Usage="encoding.GetChars (bytes, chars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual char[] GetChars (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char[] GetChars(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChars (bytes As Byte(), index As Integer, count As Integer) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;char&gt; ^ GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : byte[] * int * int -&gt; char[]&#xA;override this.GetChars : byte[] * int * int -&gt; char[]" Usage="encoding.GetChars (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="20dad-1154">Tablica bajtów zawierająca sekwencji bajtów do zdekodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1154">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="20dad-1155">Indeks pierwszego bajtu do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1155">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="20dad-1156">Liczba bajtów do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1156">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1157">W przypadku przesłonięcia w klasie pochodnej, dekoduje sekwencję bajtów z tablicy określoną liczbę bajtów w zestawie znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1157">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a set of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1158">Tablica znaków, zawierającą wyniki dekodowanie określonej sekwencji bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1158">A character array containing the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1159"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> pobiera znaków z sekwencji bajtów danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="20dad-1159"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="20dad-1160"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> różni się od <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> ponieważ <xref:System.Text.Encoding> oczekuje dyskretnych konwersji, podczas gdy <xref:System.Text.Decoder> jest przeznaczony dla wielu przebiegów w jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1160"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-1161">Jeśli dane, które ma zostać przekonwertowany jest dostępna tylko w kolejnych bloków (na przykład dane odczytane ze strumienia) lub ilości danych jest tak duża, że należy ją podzielić na mniejsze bloki, należy użyć <xref:System.Text.Decoder> lub <xref:System.Text.Encoder> dostarczone przez <xref:System.Text.Encoding.GetDecoder%2A> Metoda lub <xref:System.Text.Encoding.GetEncoder%2A> metody, odpowiednio w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1161">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="20dad-1162">**Uwaga** ta metoda jest przeznaczona do pracy na znaki Unicode, a nie na dowolne dane binarne, takie jak tablice typu byte.</span><span class="sxs-lookup"><span data-stu-id="20dad-1162">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="20dad-1163">Jeśli musisz zakodować dowolne dane binarne do tekstu, należy użyć protokołu, takie jak uuencode, który jest implementowany przez metody takie jak <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1163">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="20dad-1164"><xref:System.Text.Encoding.GetCharCount%2A> Metoda określa, ile znaków spowodować dekodowanie sekwencji bajtów, a <xref:System.Text.Encoding.GetChars%2A> metoda przeprowadza rzeczywiste dekodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1164">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="20dad-1165"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Metoda oczekuje dyskretnych konwersji, w przeciwieństwie do <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> metody, która obsługuje wiele przebiegów na jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1165">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-1166">Różne wersje programu <xref:System.Text.Encoding.GetCharCount%2A> i <xref:System.Text.Encoding.GetChars%2A> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1166">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="20dad-1167">Poniżej przedstawiono pewne zagadnienia programowania do użytku z następujących metod:</span><span class="sxs-lookup"><span data-stu-id="20dad-1167">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="20dad-1168">Aplikacja może być konieczne dekodowania wielu bajtów danych wejściowych od strony kodowej i przetwarzać bajtów przy użyciu wielu wywołań.</span><span class="sxs-lookup"><span data-stu-id="20dad-1168">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="20dad-1169">W takim przypadku prawdopodobnie trzeba utrzymywać stan między wywołaniami, ponieważ sekwencji bajtów może zostać przerwane podczas przetwarzania w partiach.</span><span class="sxs-lookup"><span data-stu-id="20dad-1169">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="20dad-1170">(Na przykład część sekwencji shift ISO-2022 może kończyć się jednym <xref:System.Text.Encoding.GetChars%2A> wywołania i Kontynuuj na początku następnego <xref:System.Text.Encoding.GetChars%2A> wywołania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1170">(For example, part of an ISO-2022 shift sequence may end one <xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next <xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="20dad-1171"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> wywoła plan awaryjny tych niekompletne sekwencji, ale <xref:System.Text.Decoder> zapamiętają tych sekwencji dla następnego wywołania metody.)</span><span class="sxs-lookup"><span data-stu-id="20dad-1171"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="20dad-1172">Jeśli aplikacja obsługuje ciąg w danych wyjściowych, zalecane jest użycie <xref:System.Text.Encoding.GetString%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1172">If your app handles string outputs, it is recommended to use the <xref:System.Text.Encoding.GetString%2A> method.</span></span> <span data-ttu-id="20dad-1173">Ponieważ ta metoda musi sprawdzić długość ciągu i przydzielić buforu, jest nieco wolniej, ale powstałe <xref:System.String> typu, zaleca się.</span><span class="sxs-lookup"><span data-stu-id="20dad-1173">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="20dad-1174">Wersja bajtów <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> umożliwia kilka technik szybkie, zwłaszcza w przypadku wielu wywołań do dużych buforów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1174">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="20dad-1175">Mieć na uwadze, jednak, że tej wersji metoda czasami jest niebezpieczne, ponieważ wskaźniki są wymagane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1175">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="20dad-1176">Jeśli aplikacja musi przekonwertować dużej ilości danych, należy używać ponownie bufor wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1176">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="20dad-1177">W tym przypadku [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > wersji, że obsługuje danych wyjściowych znaków bufory jest najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-1177">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="20dad-1178">Należy rozważyć użycie <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> zamiast metody <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1178">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="20dad-1179">Metoda konwersji konwertuje jak najwięcej danych i zgłasza wyjątek, jeśli bufor wyjściowy jest zbyt mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-1179">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="20dad-1180">Dekodowania ciągłego strumienia, ta metoda jest często najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-1180">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1181">Poniższy przykład koduje ciąg na tablicę bajtów, a następnie dekoduje zakresu bajtów na tablicę znaków.</span><span class="sxs-lookup"><span data-stu-id="20dad-1181">The following example encodes a string into an array of bytes, and then decodes a range of the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CPP/getcharsic.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CS/getcharsic.cs#1)]
 [!code-vb[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/VB/getcharsic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-1182">
            <paramref name="bytes" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1182">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-1183">
            <paramref name="index" /> lub <paramref name="count" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1183">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="20dad-1184">- lub - <paramref name="index" /> i <paramref name="count" /> nie określa prawidłowego zakresu <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1184">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="20dad-1185">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1185">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int&#xA;override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="encoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="20dad-1186">Wskaźnik do pierwszego bajtu do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1186">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="20dad-1187">Liczba bajtów do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1187">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="20dad-1188">Wskaźnik do lokalizacji, w której należy rozpocząć pisanie, wynikowy zestaw znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1188">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="20dad-1189">Maksymalna liczba znaków do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1189">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1190">W przypadku przesłonięcia w klasie pochodnej, dekoduje sekwencji bajtów, zaczynając od wskaźnika określoną liczbę bajtów do zestawu znaków, które są przechowywane, zaczynając od określonego znaku wskaźnika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1190">When overridden in a derived class, decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1191">Rzeczywista liczba znaków zapisanych w lokalizacji wskazanej przez <paramref name="chars" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1191">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1192">Do obliczania tablicy dokładny rozmiar <xref:System.Text.Encoding.GetChars%2A> wymaga, aby przechowywać wynikowy znaków, należy użyć <xref:System.Text.Encoding.GetCharCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1192">To calculate the exact array size that <xref:System.Text.Encoding.GetChars%2A> requires to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="20dad-1193">Aby obliczyć maksymalny rozmiar tablicy, należy użyć <xref:System.Text.Encoding.GetMaxCharCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1193">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="20dad-1194"><xref:System.Text.Encoding.GetCharCount%2A> Metoda ogólnie Umożliwia przydzielenie mniej pamięci podczas <xref:System.Text.Encoding.GetMaxCharCount%2A> Metoda ogólnie jest wykonywany szybciej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1194">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="20dad-1195"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> pobiera znaków z sekwencji bajtów danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="20dad-1195"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="20dad-1196"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> różni się od <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> ponieważ <xref:System.Text.Encoding> oczekuje dyskretnych konwersji, podczas gdy <xref:System.Text.Decoder> jest przeznaczony dla wielu przebiegów w jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1196"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-1197">Jeśli dane do konwersji są dostępne tylko w blokach sekwencyjnych (takich jak dane odczytane ze strumienia) lub jeśli ilość danych jest tak duża, że trzeba ją podzielić na mniejsze bloki, należy użyć podanego obiektu <xref:System.Text.Decoder> lub <xref:System.Text.Encoder> odpowiednio przez metodę <xref:System.Text.Encoding.GetDecoder%2A> lub <xref:System.Text.Encoding.GetEncoder%2A> klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1197">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.Encoding.GetDecoder%2A> or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="20dad-1198">**Uwaga** ta metoda jest przeznaczona do pracy na znaki Unicode, a nie na dowolne dane binarne, takie jak tablice typu byte.</span><span class="sxs-lookup"><span data-stu-id="20dad-1198">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="20dad-1199">Jeśli musisz zakodować dowolne dane binarne do tekstu, należy użyć protokołu, takie jak uuencode, który jest implementowany przez metody takie jak <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1199">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="20dad-1200"><xref:System.Text.Encoding.GetCharCount%2A> Metoda określa, ile znaków spowodować dekodowanie sekwencji bajtów, a <xref:System.Text.Encoding.GetChars%2A> metoda przeprowadza rzeczywiste dekodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1200">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="20dad-1201"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Metoda oczekuje dyskretnych konwersji, w przeciwieństwie do <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> metody, która obsługuje wiele przebiegów na jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1201">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-1202">Różne wersje programu <xref:System.Text.Encoding.GetCharCount%2A> i <xref:System.Text.Encoding.GetChars%2A> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1202">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="20dad-1203">Poniżej przedstawiono pewne zagadnienia programowania do użytku z następujących metod:</span><span class="sxs-lookup"><span data-stu-id="20dad-1203">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="20dad-1204">Aplikacja może być konieczne dekodowania wielu bajtów danych wejściowych od strony kodowej i przetwarzać bajtów przy użyciu wielu wywołań.</span><span class="sxs-lookup"><span data-stu-id="20dad-1204">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="20dad-1205">W takim przypadku prawdopodobnie trzeba utrzymywać stan między wywołaniami, ponieważ sekwencji bajtów może zostać przerwane podczas przetwarzania w partiach.</span><span class="sxs-lookup"><span data-stu-id="20dad-1205">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="20dad-1206">(Na przykład część sekwencji shift ISO-2022 może kończyć się jednym <xref:System.Text.Encoding.GetChars%2A> wywołania i Kontynuuj na początku następnego <xref:System.Text.Encoding.GetChars%2A> wywołania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1206">(For example, part of an ISO-2022 shift sequence may end one <xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next <xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="20dad-1207"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> wywoła plan awaryjny tych niekompletne sekwencji, ale <xref:System.Text.Decoder> zapamiętają tych sekwencji dla następnego wywołania metody.)</span><span class="sxs-lookup"><span data-stu-id="20dad-1207"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="20dad-1208">Jeśli aplikacja obsługuje dane wyjściowe ciągu, <xref:System.Text.Encoding.GetString%2A> metoda jest zalecana.</span><span class="sxs-lookup"><span data-stu-id="20dad-1208">If your app handles string outputs, the <xref:System.Text.Encoding.GetString%2A> method is recommended.</span></span> <span data-ttu-id="20dad-1209">Ponieważ ta metoda musi sprawdzić długość ciągu i przydzielić buforu, jest nieco wolniej, ale powstałe <xref:System.String> typu, zaleca się.</span><span class="sxs-lookup"><span data-stu-id="20dad-1209">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="20dad-1210">Wersja bajtów <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> umożliwia kilka technik szybkie, zwłaszcza w przypadku wielu wywołań do dużych buforów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1210">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="20dad-1211">Mieć na uwadze, jednak, że tej wersji metoda czasami jest niebezpieczne, ponieważ wskaźniki są wymagane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1211">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="20dad-1212">Jeśli aplikacja musi przekonwertować dużej ilości danych, należy używać ponownie bufor wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1212">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="20dad-1213">W tym przypadku [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > wersji, że obsługuje danych wyjściowych znaków bufory jest najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-1213">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="20dad-1214">Należy rozważyć użycie <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> zamiast metody <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1214">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="20dad-1215">Metoda konwersji konwertuje jak najwięcej danych i zgłasza wyjątek, jeśli bufor wyjściowy jest zbyt mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-1215">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="20dad-1216">Dekodowania ciągłego strumienia, ta metoda jest często najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-1216">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-1217">
            <paramref name="bytes" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1217">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="20dad-1218">- lub - <paramref name="chars" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1218">-or-  <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-1219">
            <paramref name="byteCount" /> lub <paramref name="charCount" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1219">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20dad-1220">
            <paramref name="charCount" /> jest mniejsza niż wynikowa liczba znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1220">
              <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="20dad-1221">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1221">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="20dad-1222">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1222">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="20dad-1223">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1223">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public abstract int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="encoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="20dad-1224">Tablica bajtów zawierająca sekwencji bajtów do zdekodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1224">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="20dad-1225">Indeks pierwszego bajtu do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1225">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="20dad-1226">Liczba bajtów do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1226">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="20dad-1227">Tablica znaków, zawierać wynikowy zestaw znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1227">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="20dad-1228">Indeks, od której należy rozpocząć pisanie, wynikowy zestaw znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1228">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1229">W przypadku przesłonięcia w klasie pochodnej, dekoduje sekwencję bajtów z tablicy określoną liczbę bajtów na określoną tablicę znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1229">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1230">Rzeczywista liczba znaków zapisanych w <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1230">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1231">Do obliczania rozmiaru tablicy dokładnie wymagane przez <xref:System.Text.Encoding.GetChars%2A> Aby wynikowy znaków, należy użyć <xref:System.Text.Encoding.GetCharCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1231">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%2A> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="20dad-1232">Aby obliczyć maksymalny rozmiar tablicy, należy użyć <xref:System.Text.Encoding.GetMaxCharCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1232">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="20dad-1233"><xref:System.Text.Encoding.GetCharCount%2A> Metoda ogólnie Umożliwia przydzielenie mniej pamięci podczas <xref:System.Text.Encoding.GetMaxCharCount%2A> Metoda ogólnie jest wykonywany szybciej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1233">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="20dad-1234">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType > pobiera znaków z sekwencji bajtów danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="20dad-1234">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> gets characters from an input byte sequence.</span></span> <span data-ttu-id="20dad-1235">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType > różni się od <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> ponieważ <xref:System.Text.Encoding> oczekuje dyskretnych konwersje podczas <xref:System.Text.Decoder> zaprojektowano pod kątem wiele przebiegów na jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1235">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> is different than <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> because <xref:System.Text.Encoding> expects discrete conversions, while <xref:System.Text.Decoder> is designed for multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-1236">Jeśli dane, które ma zostać przekonwertowany jest dostępna tylko w kolejnych bloków (na przykład dane odczytane ze strumienia) lub ilości danych jest tak duża, że należy ją podzielić na mniejsze bloki, należy użyć <xref:System.Text.Decoder> lub <xref:System.Text.Encoder> dostarczone przez <xref:System.Text.Encoding.GetDecoder%2A> Metoda lub <xref:System.Text.Encoding.GetEncoder%2A> metody, odpowiednio w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1236">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="20dad-1237">**Uwaga** ta metoda jest przeznaczona do pracy na znaki Unicode, a nie na dowolne dane binarne, takie jak tablice typu byte.</span><span class="sxs-lookup"><span data-stu-id="20dad-1237">**Note** This method is intended to operate on Unicode characters, not on arbitrary binary data, such as byte arrays.</span></span> <span data-ttu-id="20dad-1238">Jeśli musisz zakodować dowolne dane binarne do tekstu, należy użyć protokołu, takie jak uuencode, który jest implementowany przez metody takie jak <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1238">If you need to encode arbitrary binary data into text, you should use a protocol such as uuencode, which is implemented by methods such as <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="20dad-1239"><xref:System.Text.Encoding.GetCharCount%2A> Metoda określa, ile znaków spowodować dekodowanie sekwencji bajtów, a <xref:System.Text.Encoding.GetChars%2A> metoda przeprowadza rzeczywiste dekodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1239">The <xref:System.Text.Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.Encoding.GetChars%2A> method performs the actual decoding.</span></span> <span data-ttu-id="20dad-1240"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> Metoda oczekuje dyskretnych konwersji, w przeciwieństwie do <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> metody, która obsługuje wiele przebiegów na jednym strumień wejściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1240">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> method expects discrete conversions, in contrast to the <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method, which handles multiple passes on a single input stream.</span></span>  
  
 <span data-ttu-id="20dad-1241">Różne wersje programu <xref:System.Text.Encoding.GetCharCount%2A> i <xref:System.Text.Encoding.GetChars%2A> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1241">Several versions of <xref:System.Text.Encoding.GetCharCount%2A> and <xref:System.Text.Encoding.GetChars%2A> are supported.</span></span> <span data-ttu-id="20dad-1242">Poniżej przedstawiono pewne zagadnienia programowania do użytku z następujących metod:</span><span class="sxs-lookup"><span data-stu-id="20dad-1242">The following are some programming considerations for use of these methods:</span></span>  
  
-   <span data-ttu-id="20dad-1243">Aplikacja może być konieczne dekodowania wielu bajtów danych wejściowych od strony kodowej i przetwarzać bajtów przy użyciu wielu wywołań.</span><span class="sxs-lookup"><span data-stu-id="20dad-1243">Your app might need to decode multiple input bytes from a code page and process the bytes using multiple calls.</span></span> <span data-ttu-id="20dad-1244">W takim przypadku prawdopodobnie trzeba utrzymywać stan między wywołaniami, ponieważ sekwencji bajtów może zostać przerwane podczas przetwarzania w partiach.</span><span class="sxs-lookup"><span data-stu-id="20dad-1244">In this case, you probably need to maintain state between calls, because byte sequences can be interrupted when processed in batches.</span></span> <span data-ttu-id="20dad-1245">(Na przykład część sekwencji shift ISO-2022 może kończyć się jednym [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A > wywołania i Kontynuuj na początku następnego [\], Int32, Int32, Char\<odsyłaczy : System.Text.Encoding.GetChars%2A > wywołania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1245">(For example, part of an ISO-2022 shift sequence may end one [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A> call and continue at the beginning of the next [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A> call.</span></span> <span data-ttu-id="20dad-1246">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType > wywoła plan awaryjny tych niekompletne sekwencji, ale <xref:System.Text.Decoder> zapamiętają tych sekwencji dla następnego wywołania metody.)</span><span class="sxs-lookup"><span data-stu-id="20dad-1246">[\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> will call the fallback for those incomplete sequences, but <xref:System.Text.Decoder> will remember those sequences for the next call.)</span></span>  
  
-   <span data-ttu-id="20dad-1247">Jeśli aplikacja obsługuje dane wyjściowe ciągu, <xref:System.Text.Encoding.GetString%2A> metoda jest zalecana.</span><span class="sxs-lookup"><span data-stu-id="20dad-1247">If your app handles string outputs, the <xref:System.Text.Encoding.GetString%2A> method is recommended.</span></span> <span data-ttu-id="20dad-1248">Ponieważ ta metoda musi sprawdzić długość ciągu i przydzielić buforu, jest nieco wolniej, ale powstałe <xref:System.String> typu, zaleca się.</span><span class="sxs-lookup"><span data-stu-id="20dad-1248">Since this method must check string length and allocate a buffer, it is slightly slower, but the resulting <xref:System.String> type is to be preferred.</span></span>  
  
-   <span data-ttu-id="20dad-1249">Wersja bajtów <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> umożliwia kilka technik szybkie, zwłaszcza w przypadku wielu wywołań do dużych buforów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1249">The byte version of <xref:System.Text.Encoding.GetChars%28System.Byte%2A%2CSystem.Int32%2CSystem.Char%2A%2CSystem.Int32%29> allows some fast techniques, particularly with multiple calls to large buffers.</span></span> <span data-ttu-id="20dad-1250">Mieć na uwadze, jednak, że tej wersji metoda czasami jest niebezpieczne, ponieważ wskaźniki są wymagane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1250">Bear in mind, however, that this method version is sometimes unsafe, since pointers are required.</span></span>  
  
-   <span data-ttu-id="20dad-1251">Jeśli aplikacja musi przekonwertować dużej ilości danych, należy używać ponownie bufor wyjściowy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1251">If your app must convert a large amount of data, it should reuse the output buffer.</span></span> <span data-ttu-id="20dad-1252">W tym przypadku [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29 > wersji, że obsługuje danych wyjściowych znaków bufory jest najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-1252">In this case, the [\], Int32, Int32, Char\<xref:System.Text.Encoding.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29> version that supports output character buffers is the best choice.</span></span>  
  
-   <span data-ttu-id="20dad-1253">Należy rozważyć użycie <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> zamiast metody <xref:System.Text.Encoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1253">Consider using the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method instead of <xref:System.Text.Encoding.GetCharCount%2A>.</span></span> <span data-ttu-id="20dad-1254">Metoda konwersji konwertuje jak najwięcej danych i zgłasza wyjątek, jeśli bufor wyjściowy jest zbyt mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-1254">The conversion method converts as much data as possible and throws an exception if the output buffer is too small.</span></span> <span data-ttu-id="20dad-1255">Dekodowania ciągłego strumienia, ta metoda jest często najlepszym wyborem.</span><span class="sxs-lookup"><span data-stu-id="20dad-1255">For continuous decoding of a stream, this method is often the best choice.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1256">Poniższy przykład konwertuje ciąg z jednego formatu kodowania na inny.</span><span class="sxs-lookup"><span data-stu-id="20dad-1256">The following example converts a string from one encoding to another.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Convert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CPP/convert.cpp#1)]
 [!code-csharp[System.Text.Encoding.Convert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/CS/convert.cs#1)]
 [!code-vb[System.Text.Encoding.Convert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Convert Example/VB/convert.vb#1)]  
  
 <span data-ttu-id="20dad-1257">Poniższy przykład koduje ciąg na tablicę bajtów, a następnie dekoduje zakresu bajtów na tablicę znaków.</span><span class="sxs-lookup"><span data-stu-id="20dad-1257">The following example encodes a string into an array of bytes, and then decodes a range of the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CPP/getcharsic.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/CS/getcharsic.cs#1)]
 [!code-vb[System.Text.Encoding.GetCharsIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetCharsIC/VB/getcharsic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-1258">
            <paramref name="bytes" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1258">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="20dad-1259">- lub - <paramref name="chars" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1259">-or-  <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-1260">
            <paramref name="byteIndex" /> lub <paramref name="byteCount" /> lub <paramref name="charIndex" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1260">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="20dad-1261">- lub - <paramref name="byteindex" /> i <paramref name="byteCount" /> nie określa prawidłowego zakresu <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1261">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="20dad-1262">- lub - <paramref name="charIndex" /> nie jest prawidłowym indeksem w <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1262">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20dad-1263">
            <paramref name="chars" /> nie ma za małą pojemność z <paramref name="charIndex" /> do końca tablicy, aby pomieścić wynikowy znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1263">
              <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="20dad-1264">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1264">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public virtual System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="abstract member GetDecoder : unit -&gt; System.Text.Decoder&#xA;override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="encoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1265">W przypadku przesłonięcia w klasie pochodnej, uzyskuje dekoder, który konwertuje zakodowany sekwencji bajtów na sekwencję znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1265">When overridden in a derived class, obtains a decoder that converts an encoded sequence of bytes into a sequence of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1266">A <see cref="T:System.Text.Decoder" /> konwertuje zakodowany sekwencji bajtów do sekwencji znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1266">A <see cref="T:System.Text.Decoder" /> that converts an encoded sequence of bytes into a sequence of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1267"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> Metoda konwertuje kolejnych bloków bajtów do kolejnych bloków znaków, w sposób podobny do <xref:System.Text.Encoding.GetChars%2A> metody tej klasy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1267">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.Encoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="20dad-1268">Jednak <xref:System.Text.Decoder> przechowuje informacje o stanie między wywołaniami, dzięki czemu dekoduje informacje sekwencji bajtów, które rozciągają się bloki.</span><span class="sxs-lookup"><span data-stu-id="20dad-1268">However, a <xref:System.Text.Decoder> maintains state information between calls so it correctly decodes byte sequences that span blocks.</span></span> <span data-ttu-id="20dad-1269"><xref:System.Text.Decoder> Także zachowuje końcowe bajty na końcu bloków danych i używa końcowe bajty w następnej operacji dekodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1269">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="20dad-1270">W związku z tym <xref:System.Text.Encoding.GetDecoder%2A> i <xref:System.Text.Encoding.GetEncoder%2A> są przydatne w przypadku przesyłania w sieci i operacji na plikach, ponieważ te operacje często dotyczy bloki danych, zamiast strumienia kompletne dane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1270">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="20dad-1271">
            <para>Domyślna implementacja zwraca <see cref="T:System.Text.Decoder" /> wywołująca <see cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" /> i <see cref="M:System.Text.Encoding.GetChars(System.Byte[])" /> metod bieżącego <see cref="T:System.Text.Encoding" />. Należy przesłonić tę metodę, aby zwrócić <see cref="T:System.Text.Decoder" /> , zachowuje swój stan między wywołaniami.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1271">
              <para>The default implementation returns a <see cref="T:System.Text.Decoder" /> that calls the <see cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" /> and <see cref="M:System.Text.Encoding.GetChars(System.Byte[])" /> methods of the current <see cref="T:System.Text.Encoding" />. You must override this method to return a <see cref="T:System.Text.Decoder" /> that maintains its state between calls.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="abstract member GetEncoder : unit -&gt; System.Text.Encoder&#xA;override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="encoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1272">W przypadku przesłonięcia w klasie pochodnej, uzyskuje koder, który konwertuje sekwencję znaków Unicode pod zakodowanego sekwencji bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1272">When overridden in a derived class, obtains an encoder that converts a sequence of Unicode characters into an encoded sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1273">A <see cref="T:System.Text.Encoder" /> sekwencji znaków Unicode, który konwertuje pod zakodowanego sekwencji bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1273">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into an encoded sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1274"><xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> Metoda konwertuje kolejnych bloków znaków do kolejnych bloków bajtów w sposób podobny do <xref:System.Text.Encoding.GetBytes%2A> metody tej klasy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1274">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.Encoding.GetBytes%2A> method of this class.</span></span> <span data-ttu-id="20dad-1275">Jednak <xref:System.Text.Encoder> przechowuje informacje o stanie między wywołaniami, dzięki czemu koduje jako sekwencje znaków, które rozciągają się bloki.</span><span class="sxs-lookup"><span data-stu-id="20dad-1275">However, a <xref:System.Text.Encoder> maintains state information between calls so it correctly encodes character sequences that span blocks.</span></span> <span data-ttu-id="20dad-1276"><xref:System.Text.Encoder> Również zachowuje końcowe znaki na końcu bloków danych i korzysta z nieprawidłowymi znakami w następnej operacji kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1276">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="20dad-1277">Na przykład blok danych może kończyć się niedopasowane znakiem zastępczym wysokiego poziomu, a pasujące znak zastępczy niskiego poziomu może znajdować się w następnym bloku danych.</span><span class="sxs-lookup"><span data-stu-id="20dad-1277">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="20dad-1278">W związku z tym <xref:System.Text.Encoding.GetDecoder%2A> i <xref:System.Text.Encoding.GetEncoder%2A> są przydatne w przypadku przesyłania w sieci i operacji na plikach, ponieważ te operacje często dotyczy bloki danych, zamiast strumienia kompletne dane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1278">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="20dad-1279">
            <para>Domyślna implementacja zwraca <see cref="T:System.Text.Encoder" /> wywołująca <see cref="M:System.Text.Encoding.GetByteCount(System.Char[])" /> i <see cref="M:System.Text.Encoding.GetBytes(System.Char[])" /> metod bieżącego <see cref="T:System.Text.Encoding" />. Należy przesłonić tę metodę, aby zwrócić <see cref="T:System.Text.Encoder" /> , zachowuje swój stan między wywołaniami.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1279">
              <para>The default implementation returns a <see cref="T:System.Text.Encoder" /> that calls the <see cref="M:System.Text.Encoding.GetByteCount(System.Char[])" /> and <see cref="M:System.Text.Encoding.GetBytes(System.Char[])" /> methods of the current <see cref="T:System.Text.Encoding" />. You must override this method to return a <see cref="T:System.Text.Encoder" /> that maintains its state between calls.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1280">Zwraca kodowania dla określonej strony kodowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1280">Returns an encoding for the specified code page.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberSignature Language="F#" Value="static member GetEncoding : int -&gt; System.Text.Encoding" Usage="System.Text.Encoding.GetEncoding codepage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codepage">
          <span data-ttu-id="20dad-1281">Identyfikator strony kodu preferowanych kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1281">The code page identifier of the preferred encoding.</span>
          </span>
          <span data-ttu-id="20dad-1282">Możliwe wartości są wymienione w kolumnie strony kodowej tabelę, która jest wyświetlana w <see cref="T:System.Text.Encoding" /> temat poświęcony klasie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1282">Possible values are listed in the Code Page column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span>
          </span>
          <span data-ttu-id="20dad-1283">- lub - 0 (zero), aby użyć domyślnego kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1283">-or-  0 (zero), to use the default encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1284">Zwraca kodowanie skojarzony identyfikator strony określonego kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1284">Returns the encoding associated with the specified code page identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1285">Kodowanie, które jest skojarzone z określonej strony kodowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1285">The encoding that is associated with the specified code page.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1286">Program obsługi rezerwowego zależy od typu kodowania z `codepage`.</span><span class="sxs-lookup"><span data-stu-id="20dad-1286">The fallback handler depends on the encoding type of `codepage`.</span></span> <span data-ttu-id="20dad-1287">Jeśli `codepage` (DBCS) Kodowanie zestawu znaków kodu strony lub znaków dwubajtowych, najlepszego dopasowania rezerwowego program obsługi jest używany.</span><span class="sxs-lookup"><span data-stu-id="20dad-1287">If `codepage` is a code page or double-byte character set (DBCS) encoding, a best-fit fallback handler is used.</span></span> <span data-ttu-id="20dad-1288">W przeciwnym razie program obsługi rezerwowego zastępczy jest używany.</span><span class="sxs-lookup"><span data-stu-id="20dad-1288">Otherwise, a replacement fallback handler is used.</span></span> <span data-ttu-id="20dad-1289">Te procedury rezerwowej obsługi może nie być odpowiednie dla twojej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="20dad-1289">These fallback handlers may not be appropriate for your app.</span></span> <span data-ttu-id="20dad-1290">Aby określić obsługi rezerwowego, używane przez kodowanie określone przez `codepage`, można wywołać <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="20dad-1290">To specify the fallback handler used by the encoding specified by `codepage`, you can call the <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> overload.</span></span>  
  
 <span data-ttu-id="20dad-1291"><xref:System.Text.Encoding.GetEncoding%2A> Metoda zależy od możliwości platformy do obsługi większości stron kodowych.</span><span class="sxs-lookup"><span data-stu-id="20dad-1291">The <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="20dad-1292">Program .NET Framework obsługuje natywnie niektóre kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1292">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="20dad-1293">Aby uzyskać listę stron kodowych, zobacz <xref:System.Text.Encoding> temat poświęcony klasie.</span><span class="sxs-lookup"><span data-stu-id="20dad-1293">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="20dad-1294">Ewentualnie możesz wywołać <xref:System.Text.Encoding.GetEncodings%2A> metodę, aby uzyskać tablicę <xref:System.Text.EncodingInfo> obiektów, które zawiera informacje o wszystkich kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1294">Alternatively, you can call the <xref:System.Text.Encoding.GetEncodings%2A> method to get an array of <xref:System.Text.EncodingInfo> objects that contains information about all encodings.</span></span>  
  
 <span data-ttu-id="20dad-1295">Oprócz kodowania, które wewnętrznie są obsługiwane w wersji określonej platformy .NET Framework <xref:System.Text.Encoding.GetEncoding%2A> metoda zwraca dodatkowe kodowania, które są udostępniane przez zarejestrowanie kodowań <xref:System.Text.EncodingProvider> obiektu.</span><span class="sxs-lookup"><span data-stu-id="20dad-1295">In addition to the encodings that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="20dad-1296">Jeśli w tym samym kodowaniem został zarejestrowany za pomocą wielu <xref:System.Text.EncodingProvider> obiektów, Metoda ta zwraca ostatni zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="20dad-1296">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  

<span data-ttu-id="20dad-1297">Możesz również dostarczyć wartość 0 dla `codepage` argumentu.</span><span class="sxs-lookup"><span data-stu-id="20dad-1297">You can also supply a value of 0 for the `codepage` argument.</span></span> <span data-ttu-id="20dad-1298">Dokładne zachowanie zależy od tego, czy wszystkie kodowania zostały udostępnione przez zarejestrowanie kodowań <xref:System.Text.EncodingProvider> obiektu:</span><span class="sxs-lookup"><span data-stu-id="20dad-1298">Its precise behavior depends on whether any encodings have been made available by registering an <xref:System.Text.EncodingProvider> object:</span></span>

- <span data-ttu-id="20dad-1299">Jeśli zarejestrowano co najmniej jeden dostawców kodowania, zwraca kodowanie zarejestrowanego dostawcy, który wybrał do zwrócenia, kodowanie, kiedy <xref:System.Text.Encoding.GetEncoding%2A> metody jest przekazywana `codepage` argument 0.</span><span class="sxs-lookup"><span data-stu-id="20dad-1299">If one or more encoding providers have been registered, it returns the encoding of the last registered provider that has chosen to return a encoding when the <xref:System.Text.Encoding.GetEncoding%2A> method is passed a `codepage` argument of 0.</span></span>     

- <span data-ttu-id="20dad-1300">Od programu .NET Framework, jeśli bez kodowania dostawca został zarejestrowany, jeśli <xref:System.Text.CodePagesEncodingProvider> jest zarejestrowanego dostawcy kodowania, lub jeśli nie zarejestrowanego dostawcy kodowania obsługuje `codepage` wartość 0, funkcja zwraca stronę kodową systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="20dad-1300">On the .NET Framework, if no encoding provider has been registered, if the <xref:System.Text.CodePagesEncodingProvider> is the registered encoding provider, or if no registered encoding provider handles a `codepage` value of 0, it returns the operating system's active code page.</span></span> <span data-ttu-id="20dad-1301">Aby ustalić, stronę kodową w systemach Windows, należy wywołać Windows [GetACP](http://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) funkcji z .NET Framework na pulpicie Windows.</span><span class="sxs-lookup"><span data-stu-id="20dad-1301">To determine the active code page on Windows systems, call the Windows [GetACP](http://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) function from the .NET Framework on the Windows desktop.</span></span>

- <span data-ttu-id="20dad-1302">Na platformie .NET Core, jeśli nie zarejestrowano dostawców kodowania lub jeśli nie zarejestrowanego dostawcy kodowania obsługuje `codepage` wartość 0, funkcja zwraca <xref:System.Text.UTF8Encoding>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1302">On .NET Core, if no encoding provider has been registered or if no registered encoding provider handles a `codepage` value of 0, it returns the <xref:System.Text.UTF8Encoding>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="20dad-1303">Nieobsługiwany kod strony Przyczyna <xref:System.ArgumentException> zostanie wygenerowany, inne powodować <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1303">Some unsupported code pages cause an <xref:System.ArgumentException> to be thrown, whereas others cause a <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="20dad-1304">W związku z tym, kod musi przechwytywać wszystkie wyjątki są wymienione w sekcji wyjątki.</span><span class="sxs-lookup"><span data-stu-id="20dad-1304">Therefore, your code must catch all exceptions indicated in the Exceptions section.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20dad-1305">Strony kodowe ANSI mogą być różne na różnych komputerach i można zmienić na jednym komputerze, prowadząc do uszkodzenia danych.</span><span class="sxs-lookup"><span data-stu-id="20dad-1305">The ANSI code pages can be different on different computers and can change on a single computer, leading to data corruption.</span></span> <span data-ttu-id="20dad-1306">Z tego powodu, jeśli stronę kodową jest strony kodowej ANSI, kodowania i dekodowania danych za pomocą domyślną stronę kodową zwracany przez `Encoding.GetEncoding(0)` nie jest zalecane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1306">For this reason, if the active code page is an ANSI code page, encoding and decoding data using the default code page returned by `Encoding.GetEncoding(0)` is not recommended.</span></span> <span data-ttu-id="20dad-1307">Aby uzyskać najbardziej spójne wyniki należy użyć kodowania Unicode, takiego jak UTF-8 (strona kodowa 65001) lub UTF-16, zamiast do konkretnej strony kodowej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1307">For the most consistent results, you should use a Unicode encoding, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span>  
  
 <span data-ttu-id="20dad-1308"><xref:System.Text.Encoding.GetEncoding%2A> Zwraca buforowane wystąpienie przy użyciu ustawień domyślnych.</span><span class="sxs-lookup"><span data-stu-id="20dad-1308"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="20dad-1309">Konstruktory klas pochodnych należy użyć, aby pobrać wystąpienie z różnymi ustawieniami.</span><span class="sxs-lookup"><span data-stu-id="20dad-1309">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="20dad-1310">Na przykład <xref:System.Text.UTF32Encoding> klasa zawiera konstruktora, który pozwala Ci umożliwiać wykrywanie błędów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1310">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  

   
  
## Examples  
 <span data-ttu-id="20dad-1311">Poniższy przykład pobiera dwóch wystąpień tego samego kodowania (po jednym przez stronę kodową), a drugi według nazwy i sprawdza, czy ich równości.</span><span class="sxs-lookup"><span data-stu-id="20dad-1311">The following example gets two instances of the same encoding (one by code page and another by name), and checks their equality.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-1312">
            <paramref name="codepage" /> jest mniejsza niż zero lub większy niż 65 535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1312">
              <paramref name="codepage" /> is less than zero or greater than 65535.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20dad-1313">
            <paramref name="codepage" /> nie jest obsługiwana przez podstawowej platformy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1313">
              <paramref name="codepage" /> is not supported by the underlying platform.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="20dad-1314">
            <paramref name="codepage" /> nie jest obsługiwana przez podstawowej platformy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1314">
              <paramref name="codepage" /> is not supported by the underlying platform.</span>
          </span>
        </exception>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetEncoding : string -&gt; System.Text.Encoding" Usage="System.Text.Encoding.GetEncoding name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="20dad-1315">Nazwa strony kodu preferowanych kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1315">The code page name of the preferred encoding.</span>
          </span>
          <span data-ttu-id="20dad-1316">Każda wartość zwracana przez <see cref="P:System.Text.Encoding.WebName" /> właściwość jest prawidłowa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1316">Any value returned by the <see cref="P:System.Text.Encoding.WebName" /> property is valid.</span>
          </span>
          <span data-ttu-id="20dad-1317">Możliwe wartości są wymienione w tabeli, która jest wyświetlana w kolumnie Nazwa <see cref="T:System.Text.Encoding" /> temat poświęcony klasie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1317">Possible values are listed in the Name column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1318">Zwraca kodowanie skojarzone z nazwą strony określonego kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1318">Returns the encoding associated with the specified code page name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1319">Kodowanie skojarzone z określonej strony kodowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1319">The encoding  associated with the specified code page.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1320">Program obsługi rezerwowego zależy od typu kodowania z `name`.</span><span class="sxs-lookup"><span data-stu-id="20dad-1320">The fallback handler depends on the encoding type of `name`.</span></span> <span data-ttu-id="20dad-1321">Jeśli `name` (DBCS) Kodowanie zestawu znaków kodu strony lub znaków dwubajtowych, najlepszego dopasowania rezerwowego program obsługi jest używany.</span><span class="sxs-lookup"><span data-stu-id="20dad-1321">If `name` is a code page or double-byte character set (DBCS) encoding, a best-fit fallback handler is used.</span></span> <span data-ttu-id="20dad-1322">W przeciwnym razie program obsługi rezerwowego zastępczy jest używany.</span><span class="sxs-lookup"><span data-stu-id="20dad-1322">Otherwise, a replacement fallback handler is used.</span></span> <span data-ttu-id="20dad-1323">Te procedury rezerwowej obsługi może nie być odpowiednie dla twojej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="20dad-1323">These fallback handlers may not be appropriate for your app.</span></span> <span data-ttu-id="20dad-1324">Aby określić obsługi rezerwowego, używane przez kodowanie określone przez `name`, można wywołać <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="20dad-1324">To specify the fallback handler used by the encoding specified by `name`, you can call the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> overload.</span></span>  
  
 <span data-ttu-id="20dad-1325"><xref:System.Text.Encoding.GetEncoding%2A> Metoda zależy od możliwości platformy do obsługi większości stron kodowych.</span><span class="sxs-lookup"><span data-stu-id="20dad-1325">The <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="20dad-1326">Program .NET Framework obsługuje natywnie niektóre kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1326">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="20dad-1327">Aby uzyskać listę stron kodowych, zobacz <xref:System.Text.Encoding> temat poświęcony klasie.</span><span class="sxs-lookup"><span data-stu-id="20dad-1327">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="20dad-1328">Ewentualnie możesz wywołać <xref:System.Text.Encoding.GetEncodings%2A> metodę, aby uzyskać tablicę <xref:System.Text.EncodingInfo> obiektów, które zawiera informacje o wszystkich kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1328">Alternatively, you can call the <xref:System.Text.Encoding.GetEncodings%2A> method to get an array of <xref:System.Text.EncodingInfo> objects that contains information about all encodings.</span></span> 
  
 <span data-ttu-id="20dad-1329">Oprócz kodowania, które wewnętrznie są obsługiwane w wersji określonej platformy .NET Framework <xref:System.Text.Encoding.GetEncoding%2A> metoda zwraca dodatkowe kodowania, które są udostępniane przez zarejestrowanie kodowań <xref:System.Text.EncodingProvider> obiektu.</span><span class="sxs-lookup"><span data-stu-id="20dad-1329">In addition to the encodings that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="20dad-1330">Jeśli w tym samym kodowaniem został zarejestrowany za pomocą wielu <xref:System.Text.EncodingProvider> obiektów, Metoda ta zwraca ostatni zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="20dad-1330">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  
   
> [!NOTE]
>  <span data-ttu-id="20dad-1331">Strony kodowe ANSI mogą być różne na różnych komputerach, lub można zmienić dla pojedynczego komputera, prowadząc do uszkodzenia danych.</span><span class="sxs-lookup"><span data-stu-id="20dad-1331">The ANSI code pages can be different on different computers, or can be changed for a single computer, leading to data corruption.</span></span> <span data-ttu-id="20dad-1332">Aby uzyskać najbardziej spójne wyniki należy użyć Unicode, takiego jak UTF-8 (strona kodowa 65001) lub UTF-16, zamiast do konkretnej strony kodowej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1332">For the most consistent results, you should use Unicode, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span>  
 
  
 <span data-ttu-id="20dad-1333"><xref:System.Text.Encoding.GetEncoding%2A> Zwraca buforowane wystąpienie przy użyciu ustawień domyślnych.</span><span class="sxs-lookup"><span data-stu-id="20dad-1333"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="20dad-1334">Konstruktory klas pochodnych należy użyć, aby pobrać wystąpienie z różnymi ustawieniami.</span><span class="sxs-lookup"><span data-stu-id="20dad-1334">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="20dad-1335">Na przykład <xref:System.Text.UTF32Encoding> klasa zawiera konstruktora, który pozwala Ci umożliwiać wykrywanie błędów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1335">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  
  
## Examples  
 <span data-ttu-id="20dad-1336">Poniższy przykład pobiera dwóch wystąpień tego samego kodowania (po jednym przez stronę kodową), a drugi według nazwy i sprawdza, czy ich równości.</span><span class="sxs-lookup"><span data-stu-id="20dad-1336">The following example gets two instances of the same encoding (one by code page and another by name), and checks their equality.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Text.Encoding.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Equals/CS/equals.cs#1)]
 [!code-vb[System.Text.Encoding.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20dad-1337">
            <paramref name="name" /> nie jest prawidłowy kod nazwę strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1337">
              <paramref name="name" /> is not a valid code page name.</span>
          </span>
          <span data-ttu-id="20dad-1338">- lub - stronę kodową wskazane przez <paramref name="name" /> nie jest obsługiwana przez podstawowej platformy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1338">-or-  The code page indicated by <paramref name="name" /> is not supported by the underlying platform.</span>
          </span>
        </exception>
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(int32 codepage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(int codepage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="static member GetEncoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="System.Text.Encoding.GetEncoding (codepage, encoderFallback, decoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codepage">
          <span data-ttu-id="20dad-1339">Identyfikator strony kodu preferowanych kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1339">The code page identifier of the preferred encoding.</span>
          </span>
          <span data-ttu-id="20dad-1340">Możliwe wartości są wymienione w kolumnie strony kodowej tabelę, która jest wyświetlana w <see cref="T:System.Text.Encoding" /> temat poświęcony klasie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1340">Possible values are listed in the Code Page column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span>
          </span>
          <span data-ttu-id="20dad-1341">- lub - 0 (zero), aby użyć domyślnego kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1341">-or-  0 (zero), to use the default encoding.</span>
          </span>
        </param>
        <param name="encoderFallback">
          <span data-ttu-id="20dad-1342">Obiekt, który udostępnia procedurę obsługi błędów, jeśli znak nie może zostać zakodowana przy użyciu bieżącego kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1342">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span>
          </span>
        </param>
        <param name="decoderFallback">
          <span data-ttu-id="20dad-1343">Obiekt, który udostępnia procedurę obsługi błędów podczas sekwencja bajtów nie może zostać zdekodowany przy użyciu bieżącego kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1343">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1344">Zwraca kodowanie skojarzony identyfikator strony określonego kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1344">Returns the encoding associated with the specified code page identifier.</span>
          </span>
          <span data-ttu-id="20dad-1345">Parametry określają procedurę obsługi błędów dla znaków, które nie może zostać zakodowany i sekwencje bajtów, które nie mogą zostać zdekodowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1345">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1346">Kodowanie, które jest skojarzone z określonej strony kodowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1346">The encoding that is associated with the specified code page.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="20dad-1347">Niektóre strony nieobsługiwany kod spowodować wyjątek <xref:System.ArgumentException> zostanie wygenerowany, inne powodować <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1347">Some unsupported code pages cause the exception <xref:System.ArgumentException> to be thrown, whereas others cause <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="20dad-1348">W związku z tym, kod musi przechwytywać wszystkie wyjątki są wymienione w sekcji wyjątki.</span><span class="sxs-lookup"><span data-stu-id="20dad-1348">Therefore, your code must catch all exceptions indicated in the Exceptions section.</span></span>  
  
 <span data-ttu-id="20dad-1349"><xref:System.Text.Encoding.GetEncoding%2A> Metoda zależy od możliwości platformy do obsługi większości stron kodowych.</span><span class="sxs-lookup"><span data-stu-id="20dad-1349">The <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="20dad-1350">Program .NET Framework obsługuje natywnie niektóre kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1350">However, the .NET Framework natively supports some encodings.</span></span> <span data-ttu-id="20dad-1351">Aby uzyskać listę stron kodowych, zobacz <xref:System.Text.Encoding> temat poświęcony klasie.</span><span class="sxs-lookup"><span data-stu-id="20dad-1351">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="20dad-1352">Możesz wywołać <xref:System.Text.Encoding.GetEncodings%2A> metody w pełny program .NET Framework na pulpicie Windows w celu uzyskania listy wszystkich kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1352">You can call the <xref:System.Text.Encoding.GetEncodings%2A> method in the full .NET Framework on the Windows desktop to get a list of all encodings.</span></span>   
  
 <span data-ttu-id="20dad-1353">Oprócz kodowania, które wewnętrznie są obsługiwane w wersji określonej platformy .NET Framework <xref:System.Text.Encoding.GetEncoding%2A> metoda zwraca dodatkowe kodowania, które są udostępniane przez zarejestrowanie kodowań <xref:System.Text.EncodingProvider> obiektu.</span><span class="sxs-lookup"><span data-stu-id="20dad-1353">In addition to the encodings that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span>  <span data-ttu-id="20dad-1354">Jeśli w tym samym kodowaniem został zarejestrowany za pomocą wielu <xref:System.Text.EncodingProvider> obiektów, Metoda ta zwraca ostatni zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="20dad-1354">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span>  

<span data-ttu-id="20dad-1355">Możesz również dostarczyć wartość 0 dla `codepage` argumentu.</span><span class="sxs-lookup"><span data-stu-id="20dad-1355">You can also supply a value of 0 for the `codepage` argument.</span></span> <span data-ttu-id="20dad-1356">Dokładne zachowanie zależy od tego, czy wszystkie kodowania zostały udostępnione przez zarejestrowanie kodowań <xref:System.Text.EncodingProvider> obiektu:</span><span class="sxs-lookup"><span data-stu-id="20dad-1356">Its precise behavior depends on whether any encodings have been made available by registering an <xref:System.Text.EncodingProvider> object:</span></span>

- <span data-ttu-id="20dad-1357">Jeśli zarejestrowano co najmniej jeden dostawców kodowania, zwraca kodowanie zarejestrowanego dostawcy, który wybrał do zwrócenia, kodowanie, kiedy <xref:System.Text.Encoding.GetEncoding%2A> metody jest przekazywana `codepage` argument 0.</span><span class="sxs-lookup"><span data-stu-id="20dad-1357">If one or more encoding providers have been registered, it returns the encoding of the last registered provider that has chosen to return a encoding when the <xref:System.Text.Encoding.GetEncoding%2A> method is passed a `codepage` argument of 0.</span></span>     

- <span data-ttu-id="20dad-1358">Od programu .NET Framework, jeśli bez kodowania dostawca został zarejestrowany, jeśli <xref:System.Text.CodePagesEncodingProvider> jest zarejestrowanego dostawcy kodowania, lub jeśli nie zarejestrowanego dostawcy kodowania obsługuje `codepage` wartość 0, funkcja zwraca stronę kodową.</span><span class="sxs-lookup"><span data-stu-id="20dad-1358">On the .NET Framework, if no encoding provider has been registered, if the <xref:System.Text.CodePagesEncodingProvider> is the registered encoding provider, or if no registered encoding provider handles a `codepage` value of 0, it returns the active code page.</span></span>

- <span data-ttu-id="20dad-1359">Na platformie .NET Core, jeśli nie zarejestrowano dostawców kodowania lub jeśli nie zarejestrowanego dostawcy kodowania obsługuje `codepage` wartość 0, funkcja zwraca <xref:System.Text.UTF8Encoding> kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1359">On .NET Core, if no encoding provider has been registered or if no registered encoding provider handles a `codepage` value of 0, it returns the <xref:System.Text.UTF8Encoding> encoding.</span></span>

> [!NOTE]
>  <span data-ttu-id="20dad-1360">Strony kodowe ANSI mogą być różne na różnych komputerach i można zmienić na jednym komputerze, prowadząc do uszkodzenia danych.</span><span class="sxs-lookup"><span data-stu-id="20dad-1360">The ANSI code pages can be different on different computers and can change on a single computer, leading to data corruption.</span></span> <span data-ttu-id="20dad-1361">Z tego powodu, jeśli stronę kodową jest strony kodowej ANSI, kodowania i dekodowania danych za pomocą domyślną stronę kodową zwracany przez `Encoding.GetEncoding(0)` nie jest zalecane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1361">For this reason, if the active code page is an ANSI code page, encoding and decoding data using the default code page returned by `Encoding.GetEncoding(0)` is not recommended.</span></span> <span data-ttu-id="20dad-1362">Aby uzyskać najbardziej spójne wyniki należy użyć Unicode, takiego jak UTF-8 (strona kodowa 65001) lub UTF-16, zamiast do konkretnej strony kodowej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1362">For the most consistent results, you should use Unicode, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span> 
  
 <span data-ttu-id="20dad-1363">Aby kodowanie skojarzony ze stroną kodową, albo podać wartość 0 dla `codepage` argumentu lub, jeśli kod jest uruchomiony na pełny program .NET Framework na pulpicie Windows, należy pobrać wartość <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="20dad-1363">To get the encoding associated with the active code page, you can either supply a value of 0 for the `codepage` argument or, if your code is running on the full .NET Framework on the Windows desktop, retrieve the value of the <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="20dad-1364">Aby określić bieżącej stronie kodowej aktywne, wywołania Windows [GetACP](http://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) funkcji z .NET Framework na pulpicie Windows.</span><span class="sxs-lookup"><span data-stu-id="20dad-1364">To determine the current active code page, call the Windows [GetACP](http://msdn.microsoft.com/library/windows/desktop/dd318070.aspx) function from the .NET Framework on the Windows desktop.</span></span>  
  
 <span data-ttu-id="20dad-1365"><xref:System.Text.Encoding.GetEncoding%2A> Zwraca buforowane wystąpienie przy użyciu ustawień domyślnych.</span><span class="sxs-lookup"><span data-stu-id="20dad-1365"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="20dad-1366">Konstruktory klas pochodnych należy użyć, aby pobrać wystąpienie z różnymi ustawieniami.</span><span class="sxs-lookup"><span data-stu-id="20dad-1366">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="20dad-1367">Na przykład <xref:System.Text.UTF32Encoding> klasa zawiera konstruktora, który pozwala Ci umożliwiać wykrywanie błędów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1367">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1368">W poniższym przykładzie pokazano <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1368">The following example demonstrates the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[sys.txt.fallbackEncRpl#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cpp/fallEncRpl.cpp#1)]
 [!code-csharp[sys.txt.fallbackEncRpl#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cs/fallEncRpl.cs#1)]
 [!code-vb[sys.txt.fallbackEncRpl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackEncRpl/vb/fallEncRpl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-1369">
            <paramref name="codepage" /> jest mniejsza niż zero lub większy niż 65 535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1369">
              <paramref name="codepage" /> is less than zero or greater than 65535.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20dad-1370">
            <paramref name="codepage" /> nie jest obsługiwana przez podstawowej platformy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1370">
              <paramref name="codepage" /> is not supported by the underlying platform.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="20dad-1371">
            <paramref name="codepage" /> nie jest obsługiwana przez podstawowej platformy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1371">
              <paramref name="codepage" /> is not supported by the underlying platform.</span>
          </span>
        </exception>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(string name, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(System::String ^ name, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="static member GetEncoding : string * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="System.Text.Encoding.GetEncoding (name, encoderFallback, decoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="20dad-1372">Nazwa strony kodu preferowanych kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1372">The code page name of the preferred encoding.</span>
          </span>
          <span data-ttu-id="20dad-1373">Każda wartość zwracana przez <see cref="P:System.Text.Encoding.WebName" /> właściwość jest prawidłowa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1373">Any value returned by the <see cref="P:System.Text.Encoding.WebName" /> property is valid.</span>
          </span>
          <span data-ttu-id="20dad-1374">Możliwe wartości są wymienione w tabeli, która jest wyświetlana w kolumnie Nazwa <see cref="T:System.Text.Encoding" /> temat poświęcony klasie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1374">Possible values are listed in the Name column of the table that appears in the <see cref="T:System.Text.Encoding" /> class topic.</span>
          </span>
        </param>
        <param name="encoderFallback">
          <span data-ttu-id="20dad-1375">Obiekt, który udostępnia procedurę obsługi błędów, jeśli znak nie może zostać zakodowana przy użyciu bieżącego kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1375">An object that provides an error-handling procedure when a character cannot be encoded with the current encoding.</span>
          </span>
        </param>
        <param name="decoderFallback">
          <span data-ttu-id="20dad-1376">Obiekt, który udostępnia procedurę obsługi błędów podczas sekwencja bajtów nie może zostać zdekodowany przy użyciu bieżącego kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1376">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1377">Zwraca kodowanie skojarzone z nazwą strony określonego kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1377">Returns the encoding associated with the specified code page name.</span>
          </span>
          <span data-ttu-id="20dad-1378">Parametry określają procedurę obsługi błędów dla znaków, które nie może zostać zakodowany i sekwencje bajtów, które nie mogą zostać zdekodowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1378">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1379">Kodowanie, które jest skojarzone z określonej strony kodowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1379">The encoding that is associated with the specified code page.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1380"><xref:System.Text.Encoding.GetEncoding%2A> Metoda zależy od możliwości platformy do obsługi większości stron kodowych.</span><span class="sxs-lookup"><span data-stu-id="20dad-1380">The <xref:System.Text.Encoding.GetEncoding%2A> method relies on the underlying platform to support most code pages.</span></span> <span data-ttu-id="20dad-1381">Program .NET Framework obsługuje natywnie niektóre kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1381">However, the .NET Framework natively supports some encodings.</span></span>  
  
 <span data-ttu-id="20dad-1382">Oprócz kodowania, które wewnętrznie są obsługiwane w wersji określonej platformy .NET Framework <xref:System.Text.Encoding.GetEncoding%2A> metoda zwraca dodatkowe kodowania, które są udostępniane przez zarejestrowanie kodowań <xref:System.Text.EncodingProvider> obiektu.</span><span class="sxs-lookup"><span data-stu-id="20dad-1382">In addition to the encodings that are intrinsically supported on a specific platform version of the .NET Framework, the <xref:System.Text.Encoding.GetEncoding%2A> method returns any additional encodings that are made available by registering an <xref:System.Text.EncodingProvider> object.</span></span> <span data-ttu-id="20dad-1383">Jeśli w tym samym kodowaniem został zarejestrowany za pomocą wielu <xref:System.Text.EncodingProvider> obiektów, Metoda ta zwraca ostatni zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="20dad-1383">If the same encoding has been registered by multiple <xref:System.Text.EncodingProvider> objects, this method returns the last one registered.</span></span> 
  
> [!NOTE]
>  <span data-ttu-id="20dad-1384">Strony kodowe ANSI mogą być różne na różnych komputerach i można zmienić na jednym komputerze, prowadząc do uszkodzenia danych.</span><span class="sxs-lookup"><span data-stu-id="20dad-1384">The ANSI code pages can be different on different computers and can change on a single computer, leading to data corruption.</span></span> <span data-ttu-id="20dad-1385">Aby uzyskać najbardziej spójne wyniki należy użyć kodowania Unicode, takiego jak UTF-8 (strona kodowa 65001) lub UTF-16, zamiast do konkretnej strony kodowej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1385">For the most consistent results, you should use a Unicode encoding, such as UTF-8 (code page 65001) or UTF-16, instead of a specific code page.</span></span>  
  
 <span data-ttu-id="20dad-1386">Aby uzyskać listę stron kodowych, zobacz <xref:System.Text.Encoding> temat poświęcony klasie.</span><span class="sxs-lookup"><span data-stu-id="20dad-1386">For a list of code pages, see the <xref:System.Text.Encoding> class topic.</span></span> <span data-ttu-id="20dad-1387">Możesz wywołać <xref:System.Text.Encoding.GetEncodings%2A> metody na pełny program .NET Framework na pulpicie Windows w celu uzyskania listy wszystkich kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1387">You can call the <xref:System.Text.Encoding.GetEncodings%2A> method on the full .NET Framework on the Windows desktop to get a list of all encodings.</span></span>  
  
 <span data-ttu-id="20dad-1388"><xref:System.Text.Encoding.GetEncoding%2A> Zwraca buforowane wystąpienie przy użyciu ustawień domyślnych.</span><span class="sxs-lookup"><span data-stu-id="20dad-1388"><xref:System.Text.Encoding.GetEncoding%2A> returns a cached instance with default settings.</span></span> <span data-ttu-id="20dad-1389">Konstruktory klas pochodnych należy użyć, aby pobrać wystąpienie z różnymi ustawieniami.</span><span class="sxs-lookup"><span data-stu-id="20dad-1389">You should use the constructors of derived classes to get an instance with different settings.</span></span> <span data-ttu-id="20dad-1390">Na przykład <xref:System.Text.UTF32Encoding> klasa zawiera konstruktora, który pozwala Ci umożliwiać wykrywanie błędów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1390">For example, the <xref:System.Text.UTF32Encoding> class provides a constructor that lets you enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1391">W poniższym przykładzie pokazano <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1391">The following example demonstrates the <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[sys.txt.fallbackEncRpl#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cpp/fallEncRpl.cpp#1)]
 [!code-csharp[sys.txt.fallbackEncRpl#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackEncRpl/cs/fallEncRpl.cs#1)]
 [!code-vb[sys.txt.fallbackEncRpl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackEncRpl/vb/fallEncRpl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20dad-1392">
            <paramref name="name" /> nie jest prawidłowy kod nazwę strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1392">
              <paramref name="name" /> is not a valid code page name.</span>
          </span>
          <span data-ttu-id="20dad-1393">- lub - stronę kodową wskazane przez <paramref name="name" /> nie jest obsługiwana przez podstawowej platformy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1393">-or-  The code page indicated by <paramref name="name" /> is not supported by the underlying platform.</span>
          </span>
        </exception>
        <altmember cref="P:System.Text.Encoding.EncoderFallback" />
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="M:System.Text.Encoding.GetEncodings" />
      </Docs>
    </Member>
    <Member MemberName="GetEncodings">
      <MemberSignature Language="C#" Value="public static System.Text.EncodingInfo[] GetEncodings ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.EncodingInfo[] GetEncodings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetEncodings" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncodings () As EncodingInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Text::EncodingInfo ^&gt; ^ GetEncodings();" />
      <MemberSignature Language="F#" Value="static member GetEncodings : unit -&gt; System.Text.EncodingInfo[]" Usage="System.Text.Encoding.GetEncodings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncodingInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1394">Zwraca tablicę zawierającą wszystkie kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1394">Returns an array that contains all encodings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1395">Tablica, która zawiera wszystkie kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1395">An array that contains all encodings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1396">Ta metoda zwraca listę obsługiwanych kodowań, jednoznacznie rozróżnianych na podstawie strony kodowej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1396">This method returns a list of supported encodings, uniquely distinguished by code page.</span></span> <span data-ttu-id="20dad-1397">Aby uzyskać tabelę, która zawiera obsługiwane kodowania, zobacz <xref:System.Text.Encoding> temat poświęcony klasie.</span><span class="sxs-lookup"><span data-stu-id="20dad-1397">For a table that lists the supported encodings, see the <xref:System.Text.Encoding> class topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20dad-1398">Listę obsługiwanych kodowań zwrócony przez <xref:System.Text.Encoding.GetEncodings%2A> metoda nie obejmuje wszelkie dodatkowe kodowania udostępniane przez żaden <xref:System.Text.EncodingProvider> implementacji, które zostały zarejestrowane przez wywołania <xref:System.Text.Encoding.RegisterProvider%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1398">The list of supported encodings returned by the <xref:System.Text.Encoding.GetEncodings%2A> method does not include any additional encodings made available by any <xref:System.Text.EncodingProvider> implementations that were registered by calls to the <xref:System.Text.Encoding.RegisterProvider%2A> method.</span></span>  
  
 <span data-ttu-id="20dad-1399">Kodowanie 50220 i 50222 są zarówno skojarzone z nazwą "iso-2022-jp", ale nie są identyczne.</span><span class="sxs-lookup"><span data-stu-id="20dad-1399">Encodings 50220 and 50222 are both associated with the name "iso-2022-jp", but they are not identical.</span></span> <span data-ttu-id="20dad-1400">Kodowanie 50220 konwertuje znaki Katakana połowę szerokości na znaki katakana o pełnej szerokości, kodowanie 50222, używa sekwencji shift/shift wyewidencjonowania do kodowania znaków Katakana połowę szerokości.</span><span class="sxs-lookup"><span data-stu-id="20dad-1400">Encoding 50220 converts half-width Katakana characters to full-width Katakana characters, whereas encoding 50222 uses a shift-in/shift-out sequence to encode half-width Katakana characters.</span></span> <span data-ttu-id="20dad-1401">Nazwa wyświetlana dla kodowania 50222 jest "japoński (JIS-dozwolone 1-bajtowy Kana - tak / SI)" w odróżnieniu od kodowania 50220, którego ekran ma nazwę "japoński (JIS)".</span><span class="sxs-lookup"><span data-stu-id="20dad-1401">The display name for encoding 50222 is "Japanese (JIS-Allow 1 byte Kana - SO/SI)" to distinguish it from encoding 50220, which has the display name "Japanese (JIS)".</span></span>  
  
 <span data-ttu-id="20dad-1402">Zażądanie kodowania nazwy "iso-2022-jp", zwraca .NET Framework 50220 kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1402">If you request the encoding name "iso-2022-jp", the .NET Framework returns encoding 50220.</span></span> <span data-ttu-id="20dad-1403">Kodowania, które jest odpowiednie dla twojej aplikacji zależy jednak preferowaną traktowania znakami Katakana połowę szerokości.</span><span class="sxs-lookup"><span data-stu-id="20dad-1403">However, the encoding that is appropriate for your app depends on the preferred treatment of the half-width Katakana characters.</span></span>  
  
 <span data-ttu-id="20dad-1404">Aby uzyskać specyficznym kodowaniem, należy użyć <xref:System.Text.Encoding.GetEncoding%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1404">To get a specific encoding, you should use the <xref:System.Text.Encoding.GetEncoding%2A> method.</span></span>  
  
 <span data-ttu-id="20dad-1405"><xref:System.Text.Encoding.GetEncodings%2A> Czasami służy do zaoferowania użytkownikowi listę kodowania w pliku **Zapisz jako** okno dialogowe.</span><span class="sxs-lookup"><span data-stu-id="20dad-1405"><xref:System.Text.Encoding.GetEncodings%2A> is sometimes used to present the user with a list of encodings in a File **Save as** dialog box.</span></span> <span data-ttu-id="20dad-1406">Jednak wielu innym niż Unicode kodowania są niekompletne i tłumaczyć wielu znaków na "?", lub kliknięcia różne zachowanie na różnych platformach.</span><span class="sxs-lookup"><span data-stu-id="20dad-1406">However, many non-Unicode encodings are either incomplete and translate many characters to "?", or have subtly different behavior on different platforms.</span></span> <span data-ttu-id="20dad-1407">Należy rozważyć użycie UTF-8 lub UTF-16 jako domyślny.</span><span class="sxs-lookup"><span data-stu-id="20dad-1407">Consider using UTF-8 or UTF-16 as the default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1408">Poniższy przykład sprawdza wartości właściwości logiczne każdej kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1408">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="encoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1409">Zwraca wartość skrótu dla bieżącego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1409">Returns the hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1410">Wartość skrótu dla bieżącego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1410">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public abstract int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="abstract member GetMaxByteCount : int -&gt; int" Usage="encoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount">
          <span data-ttu-id="20dad-1411">Liczba znaków do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1411">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1412">W przypadku przesłonięcia w klasie pochodnej, oblicza maksymalną liczbę bajtów, generowane przez określoną liczbę znaków kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1412">When overridden in a derived class, calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1413">Maksymalna liczba bajtów, generowane przez określoną liczbę znaków kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1413">The maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1414">`charCount` Parametru faktycznie określa liczbę <xref:System.Char> obiekty reprezentujące znaków Unicode, aby zakodować, ponieważ .NET Framework wewnętrznie używa UTF-16 do reprezentowania znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="20dad-1414">The `charCount` parameter actually specifies the number of <xref:System.Char> objects that represent the Unicode characters to encode, because the .NET Framework internally uses UTF-16 to represent Unicode characters.</span></span> <span data-ttu-id="20dad-1415">W związku z tym, znaki Unicode mogą być reprezentowane przez jeden <xref:System.Char> obiekt, ale znak Unicode, reprezentowane przez parę zastępczą, na przykład wymaga dwóch <xref:System.Char> obiektów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1415">Consequently, most Unicode characters can be represented by one <xref:System.Char> object, but a Unicode character represented by a surrogate pair, for example, requires two <xref:System.Char> objects.</span></span>  
  
 <span data-ttu-id="20dad-1416">Do obliczania rozmiaru tablicy dokładnie wymagane przez <xref:System.Text.Encoding.GetBytes%2A> Aby wynikowy bajtów, należy użyć <xref:System.Text.Encoding.GetByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1416">To calculate the exact array size required by <xref:System.Text.Encoding.GetBytes%2A> to store the resulting bytes, you should use the <xref:System.Text.Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="20dad-1417">Aby obliczyć maksymalny rozmiar tablicy, należy użyć <xref:System.Text.Encoding.GetMaxByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1417">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="20dad-1418"><xref:System.Text.Encoding.GetByteCount%2A> Metoda ogólnie Umożliwia przydzielenie mniej pamięci podczas <xref:System.Text.Encoding.GetMaxByteCount%2A> Metoda ogólnie jest wykonywany szybciej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1418">The <xref:System.Text.Encoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="20dad-1419"><xref:System.Text.Encoding.GetMaxByteCount%2A> pobiera numer najgorszego przypadku, w tym najgorszego przypadku obecnie wybranego <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1419"><xref:System.Text.Encoding.GetMaxByteCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="20dad-1420">Jeśli wybrano rezerwowe z ciągiem potencjalnie dużą <xref:System.Text.Encoding.GetMaxByteCount%2A> pobiera dużych wartościach, zwłaszcza w przypadkach, gdy najgorszego przypadku kodowanie obejmuje przełączanie trybów dla każdego znaku.</span><span class="sxs-lookup"><span data-stu-id="20dad-1420">If a fallback is chosen with a potentially large string, <xref:System.Text.Encoding.GetMaxByteCount%2A> retrieves large values, particularly in cases where the worst case for the encoding involves switching modes for every character.</span></span> <span data-ttu-id="20dad-1421">Na przykład może to nastąpić dla ISO-2022-JP.</span><span class="sxs-lookup"><span data-stu-id="20dad-1421">For example, this can happen for ISO-2022-JP.</span></span> <span data-ttu-id="20dad-1422">Aby uzyskać więcej informacji, zobacz wpis na blogu "[co to jest Encoding.GetMaxByteCount() i Encoding.GetMaxCharCount()?](http://go.microsoft.com/fwlink/?LinkId=153702)"</span><span class="sxs-lookup"><span data-stu-id="20dad-1422">For more information, see the blog entry "[What's with Encoding.GetMaxByteCount() and Encoding.GetMaxCharCount()?](http://go.microsoft.com/fwlink/?LinkId=153702)"</span></span> <span data-ttu-id="20dad-1423">(http://blogs.msdn.com/shawnste/archive/2005/03/02/383903.aspx).</span><span class="sxs-lookup"><span data-stu-id="20dad-1423">(http://blogs.msdn.com/shawnste/archive/2005/03/02/383903.aspx).</span></span>  
  
 <span data-ttu-id="20dad-1424">W większości przypadków ta metoda pobiera rozsądne wartości dla małych ciągów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1424">In most cases, this method retrieves reasonable values for small strings.</span></span> <span data-ttu-id="20dad-1425">Dla dużych ciągów trzeba wybrać między za pomocą bardzo dużych buforów i przechwytywania błędów w rzadkich przypadkach, gdy bardziej uzasadnionego bufor jest za mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-1425">For large strings, you might have to choose between using very large buffers and catching errors in the rare case when a more reasonable buffer is too small.</span></span> <span data-ttu-id="20dad-1426">Można także rozważyć użycie innego podejścia <xref:System.Text.Encoding.GetByteCount%2A> lub <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1426">You might also want to consider a different approach using <xref:System.Text.Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="20dad-1427">Korzystając z <xref:System.Text.Encoding.GetMaxByteCount%2A>, należy przydzielić bufor wyjściowy na podstawie maksymalnego rozmiaru buforu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="20dad-1427">When using <xref:System.Text.Encoding.GetMaxByteCount%2A>, you should allocate the output buffer based on the maximum size of the input buffer.</span></span> <span data-ttu-id="20dad-1428">Jeśli bufor wyjściowy jest ograniczony do rozmiaru, można użyć <xref:System.Text.Encoding.Convert%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1428">If the output buffer is constrained in size, you might use the <xref:System.Text.Encoding.Convert%2A> method.</span></span>  
  
 <span data-ttu-id="20dad-1429">Należy pamiętać, że <xref:System.Text.Encoding.GetMaxByteCount%2A> uwzględnia potencjalnych surogaty pozostałość z poprzedniej operacji dekodera.</span><span class="sxs-lookup"><span data-stu-id="20dad-1429">Note that <xref:System.Text.Encoding.GetMaxByteCount%2A> considers potential leftover surrogates from a previous decoder operation.</span></span> <span data-ttu-id="20dad-1430">Ze względu na dekoder przekazując wartość 1, do metody pobiera 2 dla kodowania pojedynczych bajtów, takich jak ASCII.</span><span class="sxs-lookup"><span data-stu-id="20dad-1430">Because of the decoder, passing a value of 1 to the method retrieves 2 for a single-byte encoding, such as ASCII.</span></span> <span data-ttu-id="20dad-1431">Należy używać <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> właściwość, jeśli te informacje są niezbędne.</span><span class="sxs-lookup"><span data-stu-id="20dad-1431">You should use the <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> property if this information is necessary.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20dad-1432">`GetMaxByteCount(N)` niekoniecznie jest taka sama wartość jak `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="20dad-1432">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1433">Poniższy przykład określa liczbę bajtów wymaganą do kodowania tablicy znaków, koduje znaki i wyświetla wynikowy bajtów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1433">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-1434">
            <paramref name="charCount" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1434">
              <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="20dad-1435">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1435">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="20dad-1436">
            <para>Wszystkie <see cref="T:System.Text.Encoding" /> implementacji należy zagwarantować, że żadne wyjątki przepełnienia buforu wystąpić, jeśli mają rozmiar buforów, zgodnie z wynikami obliczeniach tej metody.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1436">
              <para>All <see cref="T:System.Text.Encoding" /> implementations must guarantee that no buffer overflow exceptions occur if buffers are sized according to the results of this method's calculations.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Text.Encoding.GetBytes(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetByteCount(System.Char[])" />
        <altmember cref="M:System.Text.Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public abstract int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="abstract member GetMaxCharCount : int -&gt; int" Usage="encoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount">
          <span data-ttu-id="20dad-1437">Liczba bajtów do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1437">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1438">W przypadku przesłonięcia w klasie pochodnej, oblicza maksymalną liczbę znaków, generowane przez określoną liczbę bajtów do zdekodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1438">When overridden in a derived class, calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1439">Maksymalna liczba znaków, generowane przez określoną liczbę bajtów do zdekodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1439">The maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1440">Do obliczania rozmiaru tablicy dokładnie wymagane przez <xref:System.Text.Encoding.GetChars%2A> Aby wynikowy znaków, należy użyć <xref:System.Text.Encoding.GetCharCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1440">To calculate the exact array size required by <xref:System.Text.Encoding.GetChars%2A> to store the resulting characters, you should use the <xref:System.Text.Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="20dad-1441">Aby obliczyć maksymalny rozmiar tablicy, należy użyć <xref:System.Text.Encoding.GetMaxCharCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1441">To calculate the maximum array size, use the <xref:System.Text.Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="20dad-1442"><xref:System.Text.Encoding.GetCharCount%2A> Metoda ogólnie Umożliwia przydzielenie mniej pamięci podczas <xref:System.Text.Encoding.GetMaxCharCount%2A> Metoda ogólnie jest wykonywany szybciej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1442">The <xref:System.Text.Encoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="20dad-1443"><xref:System.Text.Encoding.GetMaxCharCount%2A> pobiera numer najgorszego przypadku, w tym najgorszego przypadku obecnie wybranego <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1443"><xref:System.Text.Encoding.GetMaxCharCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="20dad-1444">Jeśli wybrano rezerwowe z ciągiem potencjalnie dużą <xref:System.Text.Encoding.GetMaxCharCount%2A> pobiera dużych wartościach.</span><span class="sxs-lookup"><span data-stu-id="20dad-1444">If a fallback is chosen with a potentially large string, <xref:System.Text.Encoding.GetMaxCharCount%2A> retrieves large values.</span></span>  
  
 <span data-ttu-id="20dad-1445">W większości przypadków ta metoda pobiera uzasadnione liczby małych ciągów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1445">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="20dad-1446">Dla dużych ciągów trzeba wybrać między za pomocą bardzo dużych buforów i przechwytywania błędów w rzadkich przypadkach, bardziej uzasadnionego buforu jest za mały.</span><span class="sxs-lookup"><span data-stu-id="20dad-1446">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is too small.</span></span> <span data-ttu-id="20dad-1447">Można także rozważyć użycie innego podejścia <xref:System.Text.Encoding.GetCharCount%2A> lub <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1447">You might also want to consider a different approach using <xref:System.Text.Encoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="20dad-1448"><xref:System.Text.Encoding.GetMaxCharCount%2A> nie ma związku <xref:System.Text.Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1448"><xref:System.Text.Encoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="20dad-1449">Jeśli wymaga podobną funkcję do użycia z <xref:System.Text.Encoding.GetBytes%2A>, należy użyć <xref:System.Text.Encoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1449">If you needs a similar function to use with <xref:System.Text.Encoding.GetBytes%2A>, you should use <xref:System.Text.Encoding.GetMaxByteCount%2A>.</span></span>  
  
 <span data-ttu-id="20dad-1450">Korzystając z <xref:System.Text.Encoding.GetMaxCharCount%2A>, należy przydzielić bufor wyjściowy na podstawie maksymalnego rozmiaru buforu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="20dad-1450">When using <xref:System.Text.Encoding.GetMaxCharCount%2A>, you should allocate the output buffer based on the maximum size of the input buffer.</span></span> <span data-ttu-id="20dad-1451">Jeśli bufor wyjściowy jest ograniczony do rozmiaru, można użyć <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="20dad-1451">If the output buffer is constrained in size, you might use the <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="20dad-1452">Należy pamiętać, że <xref:System.Text.Encoding.GetMaxCharCount%2A> uwzględnia najgorszego przypadku bajtów pozostawionych przez poprzednią operację kodera.</span><span class="sxs-lookup"><span data-stu-id="20dad-1452">Note that <xref:System.Text.Encoding.GetMaxCharCount%2A> considers the worst case for leftover bytes from a previous encoder operation.</span></span> <span data-ttu-id="20dad-1453">Dla większości stron kodowych przekazując wartość 0 do tej metody pobiera wartości większe niż lub równa 1.</span><span class="sxs-lookup"><span data-stu-id="20dad-1453">For most code pages, passing a value of 0 to this method retrieves values greater than or equal to 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20dad-1454">`GetMaxCharCount(N)` niekoniecznie jest taka sama wartość jak `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="20dad-1454">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1455">Poniższy przykład koduje ciąg na tablicę bajtów, a następnie dekoduje bajtów na tablicę znaków.</span><span class="sxs-lookup"><span data-stu-id="20dad-1455">The following example encodes a string into an array of bytes, and then decodes the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetChars#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CPP/getchars.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetChars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/CS/getchars.cs#1)]
 [!code-vb[System.Text.Encoding.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetChars/VB/getchars.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-1456">
            <paramref name="byteCount" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1456">
              <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="20dad-1457">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1457">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="20dad-1458">
            <para>Wszystkie <see cref="T:System.Text.Encoding" /> implementacji należy zagwarantować, że żadne wyjątki przepełnienia buforu wystąpić, jeśli mają rozmiar buforów, zgodnie z wynikami obliczeniach tej metody.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1458">
              <para>All <see cref="T:System.Text.Encoding" /> implementations must guarantee that no buffer overflow exceptions occur if buffers are sized according to the results of this method's calculations.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetString(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public virtual byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="abstract member GetPreamble : unit -&gt; byte[]&#xA;override this.GetPreamble : unit -&gt; byte[]" Usage="encoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1459">W przypadku przesłonięcia w klasie pochodnej zwraca sekwencję bajtów, który określa sposób kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1459">When overridden in a derived class, returns a sequence of bytes that specifies the encoding used.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1460">Tablica bajtów zawierająca sekwencji bajtów, która określa sposób kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1460">A byte array containing a sequence of bytes that specifies the encoding used.</span>
          </span>
          <span data-ttu-id="20dad-1461">- lub - tablica bajtów o długości od zera, jeśli preambuła nie jest wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1461">-or-  A byte array of length zero, if a preamble is not required.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1462">Opcjonalnie <xref:System.Text.Encoding> obiekt zapewnia preambuły, który jest tablicą bajtów, które mogą być poprzedzone sekwencji bajtów wynikające z procesu kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1462">Optionally, the <xref:System.Text.Encoding> object provides a preamble that is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="20dad-1463">Jeśli Preambuła zawiera znacznik kolejności bajtów (w formacie Unicode, punkt kodowy U + FEFF), pomaga dekodera określanie kolejności bajtów i format transformacji lub UTF.</span><span class="sxs-lookup"><span data-stu-id="20dad-1463">If the preamble contains a byte order mark (in Unicode, code point U+FEFF), it helps the decoder determine the byte order and the transformation format or UTF.</span></span>  
  
 <span data-ttu-id="20dad-1464">Znacznika kolejności bajtów Unicode (BOM) jest serializowany w następujący sposób (w formacie szesnastkowym):</span><span class="sxs-lookup"><span data-stu-id="20dad-1464">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="20dad-1465">UTF-8: BF BB EF</span><span class="sxs-lookup"><span data-stu-id="20dad-1465">UTF-8: EF BB BF</span></span>  
  
-   <span data-ttu-id="20dad-1466">Kolejności bajtów big endian UTF-16: FE FF</span><span class="sxs-lookup"><span data-stu-id="20dad-1466">UTF-16 big endian byte order: FE FF</span></span>  
  
-   <span data-ttu-id="20dad-1467">Mały kolejności bajtów endian UTF-16: FF FE</span><span class="sxs-lookup"><span data-stu-id="20dad-1467">UTF-16 little endian byte order: FF FE</span></span>  
  
-   <span data-ttu-id="20dad-1468">Kolejności bajtów big endian UTF-32: 00 00 FF FE</span><span class="sxs-lookup"><span data-stu-id="20dad-1468">UTF-32 big endian byte order: 00 00 FE FF</span></span>  
  
-   <span data-ttu-id="20dad-1469">Mały kolejności bajtów endian UTF-32: FF FE 00 00</span><span class="sxs-lookup"><span data-stu-id="20dad-1469">UTF-32 little endian byte order: FF FE 00 00</span></span>  
  
 <span data-ttu-id="20dad-1470">Należy użyć znaku BOM, ponieważ zapewnia niemal niektórych Identyfikacja kodowanie plików to inaczej utracić odwołanie do <xref:System.Text.Encoding> obiektu, na przykład nieprawidłowo znacznikami danych w sieci web lub bez nich lub pliki losowego tekstu zapisana, gdy firma nie zmieniła się ma międzynarodowy problemy lub inne dane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1470">You should use the BOM, because it provides nearly certain identification of an encoding for files that otherwise have lost reference to the <xref:System.Text.Encoding> object, for example, untagged or improperly tagged web data or random text files stored when a business did not have international concerns or other data.</span></span> <span data-ttu-id="20dad-1471">Może być można uniknąć często problemów użytkowników, jeśli danych jest spójne i odpowiednio oznaczone, najlepiej w formacie UTF-8 lub UTF-16.</span><span class="sxs-lookup"><span data-stu-id="20dad-1471">Often user problems might be avoided if data is consistently and properly tagged, preferably in UTF-8 or UTF-16.</span></span>  
  
 <span data-ttu-id="20dad-1472">Pod kątem obsługi standardów, które udostępniają typ kodowania znak BOM jest nieco nadmiarowe.</span><span class="sxs-lookup"><span data-stu-id="20dad-1472">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="20dad-1473">Jednak może służyć ułatwiające serwera wysyłaj poprawny nagłówek kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1473">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="20dad-1474">Alternatywnie może służyć jako rezerwowe w przypadku, gdy kodowanie, w przeciwnym razie zostaną utracone.</span><span class="sxs-lookup"><span data-stu-id="20dad-1474">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="20dad-1475">Istnieją pewne wady za pomocą znak BOM.</span><span class="sxs-lookup"><span data-stu-id="20dad-1475">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="20dad-1476">Na przykład jak ograniczyć polach bazy danych, które używają znak BOM, wiedząc, może być trudne.</span><span class="sxs-lookup"><span data-stu-id="20dad-1476">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="20dad-1477">Łączenie plików, może to stanowić problem również, na przykład, gdy pliki są scalane w taki sposób, który znak niepotrzebne obydwie mogą znaleźć się w trakcie wykonywania danych.</span><span class="sxs-lookup"><span data-stu-id="20dad-1477">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="20dad-1478">Mimo kilku wady jednak użycie znak BOM jest zdecydowanie zaleca się.</span><span class="sxs-lookup"><span data-stu-id="20dad-1478">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="20dad-1479">Aby uzyskać więcej informacji na temat kolejności bajtów i znacznika kolejności bajtów, patrz Unicode Standard na [strony głównej Unicode](http://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="20dad-1479">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="20dad-1480">Aby upewnić się, że zakodowany bajtów są poprawnie dekodowane, powinien prefiks zakodowany bajty od preambuły.</span><span class="sxs-lookup"><span data-stu-id="20dad-1480">To ensure that the encoded bytes are decoded properly, you should prefix encoded bytes with a preamble.</span></span> <span data-ttu-id="20dad-1481">Jednak większość kodowania, nie są oferowane preambuły.</span><span class="sxs-lookup"><span data-stu-id="20dad-1481">However, most encodings do not provide a preamble.</span></span> <span data-ttu-id="20dad-1482">Aby upewnić się, że zakodowany bajtów są poprawnie dekodowane, należy użyć kodowania Unicode, oznacza to, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, lub <xref:System.Text.UTF32Encoding>, od preambuły.</span><span class="sxs-lookup"><span data-stu-id="20dad-1482">To ensure that the encoded bytes are decoded properly, you should use a Unicode encoding, that is, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding>, with a preamble.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1483">Poniższy przykład określa kolejność bajtów kodowania oparte na preambuły.</span><span class="sxs-lookup"><span data-stu-id="20dad-1483">The following example determines the byte order of the encoding based on the preamble.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetPreamble Example/CPP/preamble.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetPreamble Example/CS/preamble.cs#1)]
 [!code-vb[System.Text.Encoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetPreamble Example/VB/preamble.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetString">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1484">W przypadku przesłonięcia w klasie pochodnej, dekoduje sekwencję bajtów na ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1484">When overridden in a derived class, decodes a sequence of bytes into a string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (bytes As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="abstract member GetString : byte[] -&gt; string&#xA;override this.GetString : byte[] -&gt; string" Usage="encoding.GetString bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="20dad-1485">Tablica bajtów zawierająca sekwencji bajtów do zdekodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1485">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1486">W przypadku przesłonięcia w klasie pochodnej, dekoduje wszystkich bajtów w określonej tablicy bajtów na ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1486">When overridden in a derived class, decodes all the bytes in the specified byte array into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1487">Ciąg, który zawiera wyniki dekodowanie określonej sekwencji bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1487">A string that contains the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1488">Jeśli dane, które ma zostać przekonwertowany jest dostępna tylko w kolejnych bloków (na przykład dane odczytane ze strumienia) lub ilości danych jest tak duża, że należy ją podzielić na mniejsze bloki, należy użyć <xref:System.Text.Decoder> obiektu zwróconego przez <xref:System.Text.Encoding.GetDecoder%2A> metody klasy poch Klasa odne.</span><span class="sxs-lookup"><span data-stu-id="20dad-1488">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> object returned by the <xref:System.Text.Encoding.GetDecoder%2A> method of a derived class.</span></span>  
  
 <span data-ttu-id="20dad-1489">Zobacz sekcję Uwagi <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> temat referencyjny dotyczący dyskusję na temat dekodowania techniki i uwagi.</span><span class="sxs-lookup"><span data-stu-id="20dad-1489">See the Remarks section of the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> reference topic for a discussion of decoding techniques and considerations.</span></span>  
  
 <span data-ttu-id="20dad-1490">Należy pamiętać, że dokładne zachowanie <xref:System.Text.Encoding.GetString%2A> metoda dla określonego <xref:System.Text.Encoding> wdrożenia jest zależny od strategia rezerwowa zdefiniowane w tym <xref:System.Text.Encoding> obiektu.</span><span class="sxs-lookup"><span data-stu-id="20dad-1490">Note that the precise behavior of the <xref:System.Text.Encoding.GetString%2A> method for a particular <xref:System.Text.Encoding> implementation depends on the fallback strategy defined for that <xref:System.Text.Encoding> object.</span></span> <span data-ttu-id="20dad-1491">Aby uzyskać więcej informacji, zobacz sekcję "Wybieranie strategii powrotu" [kodowanie znaków na platformie .NET Framework](~/docs/standard/base-types/character-encoding.md) tematu.</span><span class="sxs-lookup"><span data-stu-id="20dad-1491">For more information, see the "Choosing a Fallback Strategy" section of the [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1492">Poniższy przykład odczytuje ciąg kodowany w formacie UTF-8 z plikiem binarnym, reprezentowane przez <xref:System.IO.FileStream> obiektu.</span><span class="sxs-lookup"><span data-stu-id="20dad-1492">The following example reads a UTF-8 encoded string from a binary file represented by a <xref:System.IO.FileStream> object.</span></span> <span data-ttu-id="20dad-1493">W przypadku plików, które są mniejsze niż 2048 bajtów odczytuje zawartości całego pliku do tablicy typu byte i wywołania <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%29> metodę w celu dekodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1493">For files that are smaller than 2,048 bytes, it reads the contents of the entire file into a byte array and calls the <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%29> method to perform the decoding.</span></span> <span data-ttu-id="20dad-1494">W przypadku plików większych odczytuje 2048 bajtów w czasie do tablicy typu byte, wywołania <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metodę pozwala ustalić, ile znaków są zawarte w tablicy, a następnie wywołuje <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> metodę w celu dekodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1494">For larger files, it reads 2,048 bytes at a time into a byte array, calls the <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to determine how many characters are contained in the array, and then calls the <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method to perform the decoding.</span></span>  
  
 [!code-csharp[System.Text.Encoding.GetString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetString/CS/getstring1.cs#2)]
 [!code-vb[System.Text.Encoding.GetString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetString/VB/getstring1.vb#2)]  
  
 <span data-ttu-id="20dad-1495">W przykładzie użyto następujący tekst, który powinien zostać zapisany plik zakodowany w formacie UTF-8 o nazwie Utf8Example.txt.</span><span class="sxs-lookup"><span data-stu-id="20dad-1495">The example uses the following text, which should be saved to a UTF-8 encoded file named Utf8Example.txt.</span></span>  
  
```  
  
This is a UTF-8-encoded file that contains primarily Latin text, although it   
does list the first twelve letters of the Russian (Cyrillic) alphabet:  
  
А б в г д е ё ж з и й к  
  
The goal is to save this file, then open and decode it as a binary stream.  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20dad-1496">Tablica bajtów zawiera nieprawidłowe punkty kodowe Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1496">The byte array contains invalid Unicode code points.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-1497">
            <paramref name="bytes" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1497">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="20dad-1498">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1498">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetString (bytes As ReadOnlySpan(Of Byte)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="member this.GetString : ReadOnlySpan&lt;byte&gt; -&gt; string" Usage="encoding.GetString bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="member this.GetString : nativeptr&lt;byte&gt; * int -&gt; string" Usage="encoding.GetString (bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="20dad-1499">Wskaźnik do tablicy typu byte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1499">A pointer to a byte array.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="20dad-1500">Liczba bajtów do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1500">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1501">W przypadku przesłonięcia w klasie pochodnej, dekoduje określoną liczbę bajtów w ciąg zaczynając od określonego adresu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1501">When overridden in a derived class, decodes a specified number of bytes starting at a specified address into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1502">Ciąg, który zawiera wyniki dekodowanie określonej sekwencji bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1502">A string that contains the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1503"><xref:System.Text.Encoding.GetString%2A> Metodę zaprojektowano w celu optymalizacji wydajności, gdy wskaźnik natywny do tablicy typu byte.</span><span class="sxs-lookup"><span data-stu-id="20dad-1503">The <xref:System.Text.Encoding.GetString%2A> method is designed to optimize performance when you have a native pointer to a byte array.</span></span> <span data-ttu-id="20dad-1504">Zamiast tworzenia tablicy typu byte zarządzanych, a następnie dekodowanie go, możesz zamiast tego tę metodę można wywołać bez konieczności tworzenia żadnych obiektów pośrednich.</span><span class="sxs-lookup"><span data-stu-id="20dad-1504">Instead of creating a managed byte array and then decoding it, you can instead call this method without having to create any intermediate objects.</span></span>  
  
 <span data-ttu-id="20dad-1505">Jeśli dane, które ma zostać przekonwertowany jest dostępna tylko w kolejnych bloków (na przykład dane odczytane ze strumienia) lub ilości danych jest tak duża, że należy ją podzielić na mniejsze bloki, należy użyć <xref:System.Text.Decoder> obiektu zwróconego przez <xref:System.Text.Encoding.GetDecoder%2A> metody klasy poch Klasa odne.</span><span class="sxs-lookup"><span data-stu-id="20dad-1505">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> object returned by the <xref:System.Text.Encoding.GetDecoder%2A> method of a derived class.</span></span>  
  
 <span data-ttu-id="20dad-1506">Zobacz sekcję Uwagi <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> temat referencyjny dotyczący dyskusję na temat dekodowania techniki i uwagi.</span><span class="sxs-lookup"><span data-stu-id="20dad-1506">See the Remarks section of the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> reference topic for a discussion of decoding techniques and considerations.</span></span>  
  
 <span data-ttu-id="20dad-1507">Należy pamiętać, że dokładne zachowanie <xref:System.Text.Encoding.GetString%2A> metoda dla określonego <xref:System.Text.Encoding> wdrożenia jest zależny od strategia rezerwowa zdefiniowane w tym <xref:System.Text.Encoding> obiektu.</span><span class="sxs-lookup"><span data-stu-id="20dad-1507">Note that the precise behavior of the <xref:System.Text.Encoding.GetString%2A> method for a particular <xref:System.Text.Encoding> implementation depends on the fallback strategy defined for that <xref:System.Text.Encoding> object.</span></span> <span data-ttu-id="20dad-1508">Aby uzyskać więcej informacji, zobacz sekcję "Wybieranie strategii powrotu" [kodowanie znaków na platformie .NET Framework](~/docs/standard/base-types/character-encoding.md) tematu.</span><span class="sxs-lookup"><span data-stu-id="20dad-1508">For more information, see the "Choosing a Fallback Strategy" section of the [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-1509">
            <paramref name="bytes" /> jest wskaźnikiem wartości null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1509">
              <paramref name="bytes" /> is a null pointer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-1510">
            <paramref name="byteCount" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1510">
              <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="20dad-1511">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1511">A   fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetString : byte[] * int * int -&gt; string&#xA;override this.GetString : byte[] * int * int -&gt; string" Usage="encoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="20dad-1512">Tablica bajtów zawierająca sekwencji bajtów do zdekodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1512">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="20dad-1513">Indeks pierwszego bajtu do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1513">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="20dad-1514">Liczba bajtów do odkodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1514">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1515">W przypadku przesłonięcia w klasie pochodnej, dekoduje sekwencję bajtów z tablicy określoną liczbę bajtów na ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1515">When overridden in a derived class, decodes a sequence of bytes from the specified byte array into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1516">Ciąg, który zawiera wyniki dekodowanie określonej sekwencji bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1516">A string that contains the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1517">Jeśli dane, które ma zostać przekonwertowany jest dostępna tylko w kolejnych bloków (na przykład dane odczytane ze strumienia) lub ilości danych jest tak duża, że należy ją podzielić na mniejsze bloki, należy użyć <xref:System.Text.Decoder> lub <xref:System.Text.Encoder> dostarczone przez <xref:System.Text.Encoding.GetDecoder%2A> Metoda lub <xref:System.Text.Encoding.GetEncoder%2A> metody, odpowiednio w klasie pochodnej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1517">If the data to be converted is available only in sequential blocks (such as data read from a stream) or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.Encoding.GetDecoder%2A> method or the <xref:System.Text.Encoding.GetEncoder%2A> method, respectively, of a derived class.</span></span>  
  
 <span data-ttu-id="20dad-1518">Zobacz sekcję Uwagi <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> temat referencyjny dotyczący dyskusję na temat dekodowania techniki i uwagi.</span><span class="sxs-lookup"><span data-stu-id="20dad-1518">See the Remarks section of the <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> reference topic for a discussion of decoding techniques and considerations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1519">Poniższy przykład odczytuje ciąg kodowany w formacie UTF-8 z plikiem binarnym, który jest reprezentowany przez <xref:System.IO.FileStream> obiektu.</span><span class="sxs-lookup"><span data-stu-id="20dad-1519">The following example reads a UTF-8 encoded string from a binary file that is represented by a <xref:System.IO.FileStream> object.</span></span> <span data-ttu-id="20dad-1520">W przypadku plików, które są mniejsze niż 2048 bajtów odczytuje zawartości całego pliku do tablicy typu byte i wywołania <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> metodę w celu dekodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1520">For files that are smaller than 2,048 bytes, it reads the contents of the entire file into a byte array and calls the <xref:System.Text.Encoding.GetString%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to perform the decoding.</span></span> <span data-ttu-id="20dad-1521">W przypadku plików większych odczytuje 2048 bajtów w czasie do tablicy typu byte, wywołania <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> metodę pozwala ustalić, ile znaków są zawarte w tablicy, a następnie wywołuje <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> metodę w celu dekodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1521">For larger files, it reads 2,048 bytes at a time into a byte array, calls the <xref:System.Text.Decoder.GetCharCount%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to determine how many characters are contained in the array, and then calls the <xref:System.Text.Decoder.GetChars%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method to perform the decoding.</span></span>  
  
 [!code-csharp[System.Text.Encoding.GetString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetString/CS/getstring2.cs#3)]
 [!code-vb[System.Text.Encoding.GetString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetString/VB/getstring2.vb#3)]  
  
 <span data-ttu-id="20dad-1522">W przykładzie użyto następujący tekst, który powinien zostać zapisany plik zakodowany w formacie UTF-8 o nazwie Utf8Example.txt.</span><span class="sxs-lookup"><span data-stu-id="20dad-1522">The example uses the following text, which should be saved to a UTF-8 encoded file named Utf8Example.txt.</span></span>  
  
```  
  
This is a UTF-8-encoded file that contains primarily Latin text, although it   
does list the first twelve letters of the Russian (Cyrillic) alphabet:  
  
А б в г д е ё ж з и й к  
  
The goal is to save this file, then open and decode it as a binary stream.  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="20dad-1523">Tablica bajtów zawiera nieprawidłowe punkty kodowe Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1523">The byte array contains invalid Unicode code points.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-1524">
            <paramref name="bytes" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1524">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="20dad-1525">
            <paramref name="index" /> lub <paramref name="count" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1525">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="20dad-1526">- lub - <paramref name="index" /> i <paramref name="count" /> nie określa prawidłowego zakresu <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1526">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="20dad-1527">Rezerwowe wystąpił (zobacz [kodowanie znaków w Framework](~/docs/standard/base-types/character-encoding.md) .NET dla pełne wyjaśnienie) - i - <see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1527">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.Encoding.GetChars(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetDecoder" />
        <altmember cref="M:System.Text.Encoding.GetCharCount(System.Byte[])" />
        <altmember cref="M:System.Text.Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HeaderName">
      <MemberSignature Language="C#" Value="public virtual string HeaderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.HeaderName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderName : string" Usage="System.Text.Encoding.HeaderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1528">W przypadku przesłonięcia w klasie pochodnej pobiera nazwę bieżącego kodowania, która może być używany z tagów nagłówka agent poczty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1528">When overridden in a derived class, gets a name for the current encoding that can be used with mail agent header tags.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-1529">Nazwa bieżącego <see cref="T:System.Text.Encoding" /> za pomocą tagów nagłówka agent poczty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1529">A name for the current <see cref="T:System.Text.Encoding" /> to use with mail agent header tags.</span>
          </span>
          <span data-ttu-id="20dad-1530">- lub - ciąg pusty (""), jeśli bieżący <see cref="T:System.Text.Encoding" /> nie mogą być używane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1530">-or-  An empty string (""), if the current <see cref="T:System.Text.Encoding" /> cannot be used.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1531">Jeśli potrzebujesz kodowania dla nazwy nagłówka, należy wywołać <xref:System.Text.Encoding.GetEncoding%2A> metody z <xref:System.Text.Encoding.HeaderName%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="20dad-1531">If you need an encoding for a header name, you should call the <xref:System.Text.Encoding.GetEncoding%2A> method with the <xref:System.Text.Encoding.HeaderName%2A> property.</span></span> <span data-ttu-id="20dad-1532">Często metoda pobiera inne kodowanie z kodowanie testu dostarczony w wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="20dad-1532">Often the method retrieves a different encoding from the test encoding furnished in the call.</span></span> <span data-ttu-id="20dad-1533">Zazwyczaj trzeba pobrać takie kodowania tylko aplikacji poczty e-mail.</span><span class="sxs-lookup"><span data-stu-id="20dad-1533">Generally only email applications need to retrieve such an encoding.</span></span>  
  
 <span data-ttu-id="20dad-1534">W niektórych przypadkach wartość <xref:System.Text.Encoding.BodyName%2A> właściwość odpowiada międzynarodowego standardu, który określa, że kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1534">In some cases, the value of the <xref:System.Text.Encoding.BodyName%2A> property corresponds to the international standard that defines that encoding.</span></span> <span data-ttu-id="20dad-1535">Nie oznacza to, że implementacja jest zgodna w całości z tym standardem.</span><span class="sxs-lookup"><span data-stu-id="20dad-1535">This doesn't mean that the implementation complies in full with that standard.</span></span>  
  
 <span data-ttu-id="20dad-1536">Należy pamiętać, że <xref:System.Text.Encoding.WebName%2A> zwraca nazwę do użycia w celu opisania kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1536">Note that <xref:System.Text.Encoding.WebName%2A> returns the name to use to describe an encoding.</span></span> <span data-ttu-id="20dad-1537"><xref:System.Text.Encoding.HeaderName%2A> Właściwość definiuje innego kodowania, która może działać lepiej dla aplikacji poczty e-mail, na przykład.</span><span class="sxs-lookup"><span data-stu-id="20dad-1537">The <xref:System.Text.Encoding.HeaderName%2A> property defines a different encoding that might work better for an email application, for example.</span></span> <span data-ttu-id="20dad-1538">Użycie właściwości, aby zdefiniować kodowanie nie jest zalecane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1538">However, use of the property to define the encoding is not recommended.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1539">Poniższy przykład pobiera różne nazwy dla każdego kodowania i wyświetla kodowanie z jedną lub więcej nazw, które różnią się od <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1539">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="20dad-1540">Wyświetla <xref:System.Text.Encoding.EncodingName%2A> , ale nie porównać ją.</span><span class="sxs-lookup"><span data-stu-id="20dad-1540">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.Name" />
        <altmember cref="P:System.Text.Encoding.BodyName" />
        <altmember cref="P:System.Text.Encoding.EncodingName" />
        <altmember cref="P:System.Text.Encoding.WebName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAlwaysNormalized">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1541">Pobiera wartość wskazującą, czy bieżącego kodowania zawsze jest znormalizować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1541">Gets a value indicating whether the current encoding is always normalized.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAlwaysNormalized">
      <MemberSignature Language="C#" Value="public bool IsAlwaysNormalized ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAlwaysNormalized() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.IsAlwaysNormalized" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAlwaysNormalized () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAlwaysNormalized();" />
      <MemberSignature Language="F#" Value="member this.IsAlwaysNormalized : unit -&gt; bool" Usage="encoding.IsAlwaysNormalized " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1542">Pobiera wartość wskazującą, czy bieżącego kodowania zawsze jest znormalizować, przy użyciu domyślnego formularza normalizacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1542">Gets a value indicating whether the current encoding is always normalized, using the default normalization form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1543">
            <see langword="true" /> Jeśli bieżący <see cref="T:System.Text.Encoding" /> jest zawsze znormalizowane; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1543">
              <see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> is always normalized; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="20dad-1544">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1544">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1545">Domyślnego formularza normalizacji jest <xref:System.Text.NormalizationForm.FormC>, który używa rozkład pełnej canonical, następuje zastąpienie sekwencji z ich podstawowej złożone, jeśli jest to możliwe.</span><span class="sxs-lookup"><span data-stu-id="20dad-1545">The default normalization form is <xref:System.Text.NormalizationForm.FormC>, which uses full canonical decomposition, followed by the replacement of sequences with their primary composites, if possible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.NormalizationForm" />
      </Docs>
    </Member>
    <Member MemberName="IsAlwaysNormalized">
      <MemberSignature Language="C#" Value="public virtual bool IsAlwaysNormalized (System.Text.NormalizationForm form);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAlwaysNormalized(valuetype System.Text.NormalizationForm form) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAlwaysNormalized (form As NormalizationForm) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAlwaysNormalized(System::Text::NormalizationForm form);" />
      <MemberSignature Language="F#" Value="abstract member IsAlwaysNormalized : System.Text.NormalizationForm -&gt; bool&#xA;override this.IsAlwaysNormalized : System.Text.NormalizationForm -&gt; bool" Usage="encoding.IsAlwaysNormalized form" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="form" Type="System.Text.NormalizationForm" />
      </Parameters>
      <Docs>
        <param name="form">
          <span data-ttu-id="20dad-1546">Jedną z <see cref="T:System.Text.NormalizationForm" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1546">One of the <see cref="T:System.Text.NormalizationForm" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1547">W przypadku przesłonięcia w klasie pochodnej pobiera wartość wskazującą, czy bieżącego kodowania zawsze jest znormalizować, za pomocą formularza normalizacji w określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1547">When overridden in a derived class, gets a value indicating whether the current encoding is always normalized, using the specified normalization form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="20dad-1548">
            <see langword="true" /> Jeśli bieżący <see cref="T:System.Text.Encoding" /> obiekt zawsze jest znormalizować przy użyciu określonego <see cref="T:System.Text.NormalizationForm" /> wartości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1548">
              <see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> object is always normalized using the specified <see cref="T:System.Text.NormalizationForm" /> value; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="20dad-1549">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1549">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1550">Domyślnego formularza normalizacji jest <xref:System.Text.NormalizationForm.FormC>, który używa rozkład pełnej canonical, następuje zastąpienie sekwencji z ich podstawowej złożone, jeśli jest to możliwe.</span><span class="sxs-lookup"><span data-stu-id="20dad-1550">The default normalization form is <xref:System.Text.NormalizationForm.FormC>, which uses full canonical decomposition, followed by the replacement of sequences with their primary composites, if possible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.NormalizationForm" />
      </Docs>
    </Member>
    <Member MemberName="IsBrowserDisplay">
      <MemberSignature Language="C#" Value="public virtual bool IsBrowserDisplay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBrowserDisplay" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsBrowserDisplay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsBrowserDisplay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBrowserDisplay { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBrowserDisplay : bool" Usage="System.Text.Encoding.IsBrowserDisplay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1551">W przypadku przesłonięcia w klasie pochodnej pobiera wartość wskazującą, czy bieżącego kodowania może służyć przez klientów z przeglądarki do wyświetlania zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1551">When overridden in a derived class, gets a value indicating whether the current encoding can be used by browser clients for displaying content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-1552">
            <see langword="true" /> Jeśli bieżący <see cref="T:System.Text.Encoding" /> może być używana przez klientów z przeglądarki do wyświetlania zawartości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1552">
              <see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by browser clients for displaying content; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="20dad-1553">Poniższy przykład sprawdza wartości właściwości logiczne każdej kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1553">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsBrowserSave" />
      </Docs>
    </Member>
    <Member MemberName="IsBrowserSave">
      <MemberSignature Language="C#" Value="public virtual bool IsBrowserSave { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBrowserSave" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsBrowserSave" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsBrowserSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBrowserSave { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBrowserSave : bool" Usage="System.Text.Encoding.IsBrowserSave" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1554">W przypadku przesłonięcia w klasie pochodnej pobiera wartość wskazującą, czy bieżącego kodowania może służyć przez klientów w przeglądarkach do zapisywania zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1554">When overridden in a derived class, gets a value indicating whether the current encoding can be used by browser clients for saving content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-1555">
            <see langword="true" /> Jeśli bieżący <see cref="T:System.Text.Encoding" /> może być używana przez klientów w przeglądarkach do zapisywania zawartości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1555">
              <see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by browser clients for saving content; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="20dad-1556">Poniższy przykład sprawdza wartości właściwości logiczne każdej kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1556">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsBrowserDisplay" />
      </Docs>
    </Member>
    <Member MemberName="IsMailNewsDisplay">
      <MemberSignature Language="C#" Value="public virtual bool IsMailNewsDisplay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMailNewsDisplay" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsMailNewsDisplay" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMailNewsDisplay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMailNewsDisplay { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMailNewsDisplay : bool" Usage="System.Text.Encoding.IsMailNewsDisplay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1557">W przypadku przesłonięcia w klasie pochodnej pobiera wartość wskazującą, czy bieżącego kodowania może służyć przez klientów poczty e-mail i wiadomości do wyświetlania zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1557">When overridden in a derived class, gets a value indicating whether the current encoding can be used by mail and news clients for displaying content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-1558">
            <see langword="true" /> Jeśli bieżący <see cref="T:System.Text.Encoding" /> mogą być używane przez klientów poczty e-mail i wiadomości w celu wyświetlania zawartości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1558">
              <see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by mail and news clients for displaying content; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="20dad-1559">Poniższy przykład sprawdza wartości właściwości logiczne każdej kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1559">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsMailNewsDisplay" />
      </Docs>
    </Member>
    <Member MemberName="IsMailNewsSave">
      <MemberSignature Language="C#" Value="public virtual bool IsMailNewsSave { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMailNewsSave" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsMailNewsSave" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMailNewsSave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMailNewsSave { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMailNewsSave : bool" Usage="System.Text.Encoding.IsMailNewsSave" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1560">W przypadku przesłonięcia w klasie pochodnej pobiera wartość wskazującą, czy bieżącego kodowania może służyć przez klientów poczty e-mail i wiadomości do zapisywania zawartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1560">When overridden in a derived class, gets a value indicating whether the current encoding can be used by mail and news clients for saving content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-1561">
            <see langword="true" /> Jeśli bieżący <see cref="T:System.Text.Encoding" /> mogą być używane przez klientów poczty e-mail i wiadomości do zapisywania zawartości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1561">
              <see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> can be used by mail and news clients for saving content; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="20dad-1562">Poniższy przykład sprawdza wartości właściwości logiczne każdej kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1562">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.IsMailNewsSave" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Text.Encoding.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1563">W przypadku przesłonięcia w klasie pochodnej pobiera wartość wskazującą, czy bieżącego kodowania jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1563">When overridden in a derived class, gets a value indicating whether the current encoding is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-1564">
            <see langword="true" /> Jeśli bieżący <see cref="T:System.Text.Encoding" /> jest tylko do odczytu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1564">
              <see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="20dad-1565">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1565">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSingleByte">
      <MemberSignature Language="C#" Value="public virtual bool IsSingleByte { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleByte" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.IsSingleByte" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSingleByte As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSingleByte { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSingleByte : bool" Usage="System.Text.Encoding.IsSingleByte" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1566">W przypadku przesłonięcia w klasie pochodnej pobiera wartość wskazującą, czy punkty kodowe jednobajtowe korzysta z bieżącego kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1566">When overridden in a derived class, gets a value indicating whether the current encoding uses single-byte code points.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-1567">
            <see langword="true" /> Jeśli bieżący <see cref="T:System.Text.Encoding" /> używa punkty kodowe jednobajtowe; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1567">
              <see langword="true" /> if the current <see cref="T:System.Text.Encoding" /> uses single-byte code points; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1568">Dla pojedynczych bajtów kodowania, na przykład <xref:System.Text.ASCIIEncoding>, ta właściwość umożliwia pobranie `true`.</span><span class="sxs-lookup"><span data-stu-id="20dad-1568">For a single-byte encoding, for example, <xref:System.Text.ASCIIEncoding>, this property retrieves `true`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="20dad-1569">Należy zachować ostrożność w aplikacji jest wartością dla <xref:System.Text.Encoding.IsSingleByte%2A>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1569">You should be careful in what your application does with the value for <xref:System.Text.Encoding.IsSingleByte%2A>.</span></span> <span data-ttu-id="20dad-1570">Założenie jak kodowanie będzie kontynuowana, nadal mogą być nieprawidłowe.</span><span class="sxs-lookup"><span data-stu-id="20dad-1570">An assumption of how an Encoding will proceed may still be wrong.</span></span> <span data-ttu-id="20dad-1571">Na przykład Windows-1252 ma wartość `true` dla <xref:System.Text.Encoding.IsSingleByte%2A?displayProperty=nameWithType>, ale Encoding.GetMaxByteCount(1) zwraca wartość 2.</span><span class="sxs-lookup"><span data-stu-id="20dad-1571">For example, Windows-1252 has a value of `true` for <xref:System.Text.Encoding.IsSingleByte%2A?displayProperty=nameWithType>, but Encoding.GetMaxByteCount(1) returns 2.</span></span> <span data-ttu-id="20dad-1572">Jest to spowodowane metoda uwzględnia potencjalnych surogaty pozostałość z poprzedniej operacji dekodera.</span><span class="sxs-lookup"><span data-stu-id="20dad-1572">This is because the method considers potential leftover surrogates from a previous decoder operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1573">Poniższy przykład sprawdza wartości właściwości logiczne każdej kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1573">The following example checks the values of the Boolean properties of each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.IsProps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CPP/isprops.cpp#1)]
 [!code-csharp[System.Text.Encoding.IsProps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/CS/isprops.cs#1)]
 [!code-vb[System.Text.Encoding.IsProps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.IsProps/VB/isprops.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Preamble">
      <MemberSignature Language="C#" Value="public virtual ReadOnlySpan&lt;byte&gt; Preamble { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; Preamble" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.Preamble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Preamble As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property ReadOnlySpan&lt;System::Byte&gt; Preamble { ReadOnlySpan&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Preamble : ReadOnlySpan&lt;byte&gt;" Usage="System.Text.Encoding.Preamble" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterProvider">
      <MemberSignature Language="C#" Value="public static void RegisterProvider (System.Text.EncodingProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterProvider(class System.Text.EncodingProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterProvider (provider As EncodingProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterProvider(System::Text::EncodingProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member RegisterProvider : System.Text.EncodingProvider -&gt; unit" Usage="System.Text.Encoding.RegisterProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Text.EncodingProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="20dad-1574">Podklasa klasy <see cref="T:System.Text.EncodingProvider" /> zapewniająca dostęp do kodowania znaków dodatkowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1574">A subclass of <see cref="T:System.Text.EncodingProvider" /> that provides access to additional character encodings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="20dad-1575">Rejestruje dostawcę kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1575">Registers an encoding provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1576"><xref:System.Text.Encoding.RegisterProvider%2A> Metoda umożliwia rejestrowanie klasy pochodzącej od <xref:System.Text.EncodingProvider> , sprawia, że znak dostępne na platformie, która w przeciwnym razie ich nie obsługuje kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1576">The <xref:System.Text.Encoding.RegisterProvider%2A> method allows you to register a class derived from <xref:System.Text.EncodingProvider> that makes character encodings available on a platform that does not otherwise support them.</span></span> <span data-ttu-id="20dad-1577">Po zarejestrowaniu dostawcy kodowania kodowania, które obsługuje może być pobierany przez wywołanie dowolnego <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="20dad-1577">Once the encoding provider is registered, the encodings that it supports can be retrieved by calling any <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="20dad-1578">W przypadku wielu dostawców kodowania <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> metoda podejmuje próbę pobrania określonego kodowania z każdego dostawcy, począwszy od ten, który został ostatnio zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="20dad-1578">If there are multiple encoding providers, the <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> method attempts to retrieve a specified encoding from each provider starting with the one most recently registered.</span></span>

<span data-ttu-id="20dad-1579">Rejestrowanie dostawcy kodowania za pomocą <xref:System.Text.Encoding.RegisterProvider%2A> metoda również modyfikowanie zachowania [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) i [EncodingProvider.GetEncoding (typu Int32, EncoderFallback, DecoderFallback )](xref:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)) metody, gdy przekazany argument `0`:</span><span class="sxs-lookup"><span data-stu-id="20dad-1579">Registering an encoding provider by using the <xref:System.Text.Encoding.RegisterProvider%2A> method also modifies the behavior of the [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) and [EncodingProvider.GetEncoding(Int32, EncoderFallback, DecoderFallback)](xref:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)) methods when passed an argument of `0`:</span></span>

- <span data-ttu-id="20dad-1580">Jeśli jest zarejestrowanego dostawcy <xref:System.Text.CodePagesEncodingProvider>, metoda zwraca kodowania, który odpowiada systemowa strona kodowa aktywne podczas uruchamiania w systemie operacyjnym Windows.</span><span class="sxs-lookup"><span data-stu-id="20dad-1580">If the registered provider is the <xref:System.Text.CodePagesEncodingProvider>, the method returns the encoding that matches the system active code page when running on the Windows operating system.</span></span>

- <span data-ttu-id="20dad-1581">Można wybrać niestandardowego dostawcy kodowania, kodowania, która do zwrócenia, gdy któraś z tych <xref:System.Text.Encoding.GetEncoding%2A> przeciążenia metody jest przekazywana argumentu `0`.</span><span class="sxs-lookup"><span data-stu-id="20dad-1581">A custom encoding provider can choose which encoding to return when either of these <xref:System.Text.Encoding.GetEncoding%2A> method overloads is passed an argument of `0`.</span></span> <span data-ttu-id="20dad-1582">Dostawca może także zwracać kodowania dzięki <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> zwrotu metody `null`.</span><span class="sxs-lookup"><span data-stu-id="20dad-1582">The provider can also choose to not return an encoding by having the <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> method return `null`.</span></span> 
  
 [!INCLUDE[net_v46](~/includes/net-v46-md.md)]<span data-ttu-id="20dad-1583"> zawiera jeden dostawca kodowania, <xref:System.Text.CodePagesEncodingProvider>, która sprawia, że dostępne kodowania, które znajdują się w pełny program .NET Framework, ale nie są dostępne w [!INCLUDE[net_v46](~/includes/net-v46-md.md)].</span><span class="sxs-lookup"><span data-stu-id="20dad-1583"> includes one encoding provider, <xref:System.Text.CodePagesEncodingProvider>, that makes the encodings available that are present in the full .NET Framework but are not available in [!INCLUDE[net_v46](~/includes/net-v46-md.md)].</span></span> <span data-ttu-id="20dad-1584">Domyślnie [!INCLUDE[net_v46](~/includes/net-v46-md.md)] obsługuje tylko kodowania Unicode, ASCII i stronę kodową 28591.</span><span class="sxs-lookup"><span data-stu-id="20dad-1584">By default, [!INCLUDE[net_v46](~/includes/net-v46-md.md)] only supports the Unicode encodings, ASCII, and code page 28591.</span></span>  
  
 <span data-ttu-id="20dad-1585">Jeśli ten sam dostawca kodowania jest używany w wielu wywołaniach do <xref:System.Text.Encoding.RegisterProvider%2A> metody, tylko pierwsze wywołanie metody powoduje zarejestrowanie dostawcy.</span><span class="sxs-lookup"><span data-stu-id="20dad-1585">If the same encoding provider is used in multiple calls to the <xref:System.Text.Encoding.RegisterProvider%2A> method, only the first method call registers the provider.</span></span> <span data-ttu-id="20dad-1586">Kolejne wywołania są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1586">Subsequent calls are ignored.</span></span>  
  
 <span data-ttu-id="20dad-1587">Jeśli <xref:System.Text.Encoding.RegisterProvider%2A> metoda jest wywoływana, aby zarejestrować wielu dostawców, które obsługują ten sam kodowania, ostatni zarejestrowanego dostawcy jest używany dla wszystkich kodowania i dekodowania operacji.</span><span class="sxs-lookup"><span data-stu-id="20dad-1587">If the <xref:System.Text.Encoding.RegisterProvider%2A> method is called to register multiple providers that handle the same encoding, the last registered provider is the used for all encoding and decoding operations.</span></span> <span data-ttu-id="20dad-1588">Wszelkie wcześniej zarejestrowanego dostawcy są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="20dad-1588">Any previously registered providers are ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="20dad-1589">
            <paramref name="provider" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1589">
              <paramref name="provider" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.CodePagesEncodingProvider" />
        <altmember cref="T:System.Text.EncodingProvider" />
      </Docs>
    </Member>
    <Member MemberName="Unicode">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding Unicode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding Unicode" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.Unicode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Unicode As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ Unicode { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Unicode : System.Text.Encoding" Usage="System.Text.Encoding.Unicode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1590">Pobiera kodowania dla formatu UTF-16, używając nieco kolejności bajtów endian.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1590">Gets an encoding for the UTF-16 format using the little endian byte order.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-1591">Kodowanie do formatu UTF-16, używając nieco kolejności bajtów endian.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1591">An encoding for the UTF-16 format using the little endian byte order.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1592">Aby uzyskać informacji na temat kodowania, obsługiwane przez .NET Framework i dyskusji znaków Unicode, które kodowanie do użycia, zobacz [kodowanie znaków na platformie .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="20dad-1592">For information about the encodings supported by the .NET Framework and a discussion of which Unicode encoding to use, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="20dad-1593"><xref:System.Text.UnicodeEncoding> Obiekt, który jest zwracany przez tę właściwość nie może mieć odpowiednie zachowanie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="20dad-1593">The <xref:System.Text.UnicodeEncoding> object that is returned by this property may not have the appropriate behavior for your app.</span></span> <span data-ttu-id="20dad-1594">Używa ona zastąpienie rezerwowego zastąpienia każdego ciągu, który go nie można zakodować i poszczególne bajty, które nie można go zdekodować znakiem zapytania ("?") znaków.</span><span class="sxs-lookup"><span data-stu-id="20dad-1594">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with a question mark ("?") character.</span></span> <span data-ttu-id="20dad-1595">Zamiast tego możesz wywołać <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> Konstruktor do tworzenia wystąpienia little endian <xref:System.Text.UnicodeEncoding> obiektu, którego uwierzytelniania rezerwowego jest albo <xref:System.Text.EncoderFallbackException> lub <xref:System.Text.DecoderFallbackException>, tak jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="20dad-1595">Instead, you can call the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a little endian <xref:System.Text.UnicodeEncoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.Unicode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.unicode/cs/unicode1.cs#2)]
 [!code-vb[System.Text.Encoding.Unicode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.unicode/vb/unicode1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1596">Poniższy przykład określa liczbę bajtów wymaganą do kodowania tablicy znaków, koduje znaki i wyświetla wynikowy bajtów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1596">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UnicodeEncoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
        <altmember cref="P:System.Text.Encoding.BigEndianUnicode" />
      </Docs>
    </Member>
    <Member MemberName="UTF32">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding UTF32 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding UTF32" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.UTF32" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UTF32 As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ UTF32 { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UTF32 : System.Text.Encoding" Usage="System.Text.Encoding.UTF32" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1597">Pobiera kodowania dla formatu UTF-32, używając nieco kolejności bajtów endian.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1597">Gets an encoding for the UTF-32 format using the little endian byte order.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-1598">Kodowanie obiekt do formatu UTF-32, używając nieco kolejności bajtów endian.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1598">An  encoding object for the UTF-32 format using the little endian byte order.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1599"><xref:System.Text.UTF32Encoding> Obiekt, który jest zwracany przez tę właściwość nie może mieć odpowiednie zachowanie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="20dad-1599">The <xref:System.Text.UTF32Encoding> object that is returned by this property may not have the appropriate behavior for your app.</span></span> <span data-ttu-id="20dad-1600">Aby zastąpić każdego ciągu, który go nie można zakodować i poszczególne bajty, które nie można go zdekodować znak zastępczy Unicode (U + FFFE) używa zastąpienie rezerwowego.</span><span class="sxs-lookup"><span data-stu-id="20dad-1600">It uses replacement fallback to replace each string that it cannot encode and each byte that it cannot decode with the Unicode REPLACEMENT CHARACTER (U+FFFE).</span></span> <span data-ttu-id="20dad-1601">Zamiast tego możesz wywołać <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> Konstruktor do tworzenia wystąpienia <xref:System.Text.UTF32Encoding> obiektu, którego uwierzytelniania rezerwowego jest albo <xref:System.Text.EncoderFallbackException> lub <xref:System.Text.DecoderFallbackException>, tak jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="20dad-1601">Instead, you can call the <xref:System.Text.UTF32Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a <xref:System.Text.UTF32Encoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Text.Encoding.UTF32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.utf32/cs/encoding.utf32.1.cs#1)]
 [!code-vb[System.Text.Encoding.UTF32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.utf32/vb/encoding.utf32.1.vb#1)]  
  
 <span data-ttu-id="20dad-1602">Omówienie little endian bajtów zamówienia, zobacz <xref:System.Text.Encoding> temat poświęcony klasie.</span><span class="sxs-lookup"><span data-stu-id="20dad-1602">For a discussion of little endian byte order, see the <xref:System.Text.Encoding> class topic.</span></span>  
  
 <span data-ttu-id="20dad-1603">Aby uzyskać informacji na temat kodowania, obsługiwane przez .NET Framework i dyskusji znaków Unicode, które kodowanie do użycia, zobacz [kodowanie znaków na platformie .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="20dad-1603">For information about the encodings supported by the .NET Framework and a discussion of which Unicode encoding to use, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1604">Poniższy przykład określa liczbę bajtów wymaganą do kodowania tablicy znaków, koduje znaki i wyświetla wynikowy bajtów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1604">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UTF32Encoding" />
        <altmember cref="P:System.Text.Encoding.UTF8" />
        <altmember cref="P:System.Text.Encoding.Unicode" />
        <altmember cref="P:System.Text.Encoding.BigEndianUnicode" />
      </Docs>
    </Member>
    <Member MemberName="UTF7">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding UTF7 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding UTF7" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.UTF7" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UTF7 As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ UTF7 { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UTF7 : System.Text.Encoding" Usage="System.Text.Encoding.UTF7" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1605">Pobiera kodowanie dla formatu UTF-7.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1605">Gets an encoding for the UTF-7 format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-1606">Kodowanie w formacie UTF-7.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1606">An encoding for the UTF-7 format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1607">Kodowanie UTF-7 jest używany głównie w środowiskach, które wcześniej zostały ograniczone do 7 bitów, takich jak NNTP i niektóre aplikacje poczty e-mail.</span><span class="sxs-lookup"><span data-stu-id="20dad-1607">UTF-7 encoding is used primarily in environments that historically have been restricted to 7 bits, such as NNTP and some email applications.</span></span> <span data-ttu-id="20dad-1608">Z powodu problemów z niezawodnością i zabezpieczeń nie należy używać UTF7 kodowania w środowiskach 8-bitową gdzie kodowania UTF-8 można zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="20dad-1608">Because of issues with robustness and security, you should not use UTF7 encoding in 8-bit environments where UTF-8 encoding can be used instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1609">Poniższy przykład określa liczbę bajtów wymaganą do kodowania tablicy znaków, koduje znaki i wyświetla wynikowy bajtów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1609">The following example determines the number of bytes required to encode a character array, encodes the characters, and displays the resulting bytes.</span></span>  
  
 [!code-cpp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CPP/getbytes_chararr.cpp#1)]
 [!code-csharp[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/CS/getbytes_chararr.cs#1)]
 [!code-vb[System.Text.Encoding.GetBytes_CharArr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.GetBytes_CharArr/VB/getbytes_chararr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UTF7Encoding" />
        <altmember cref="P:System.Text.Encoding.UTF8" />
      </Docs>
    </Member>
    <Member MemberName="UTF8">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding UTF8 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding UTF8" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.UTF8" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UTF8 As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Encoding ^ UTF8 { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UTF8 : System.Text.Encoding" Usage="System.Text.Encoding.UTF8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1610">Pobiera kodowanie w formacie UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1610">Gets an encoding for the UTF-8 format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-1611">Kodowanie w formacie UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1611">An encoding for the UTF-8 format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1612">Ta właściwość zwraca <xref:System.Text.UTF8Encoding> obiektu kodującej Unicode (UTF-16-kodowane) znaków do sekwencji jednej do czterech bajtów na znak, a które dekoduje na tablicę bajtów algorytmem UTF-8, Unicode (UTF-16-kodowane) znaków.</span><span class="sxs-lookup"><span data-stu-id="20dad-1612">This property returns a <xref:System.Text.UTF8Encoding> object that encodes Unicode (UTF-16-encoded) characters into a sequence of one to four bytes per character, and that decodes a UTF-8-encoded byte array to Unicode (UTF-16-encoded) characters.</span></span> <span data-ttu-id="20dad-1613">Aby uzyskać informacji na temat kodowania znaków, obsługiwane przez .NET Framework i dyskusji znaków Unicode, które kodowanie do użycia, zobacz [kodowanie znaków na platformie .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="20dad-1613">For information about the character encodings supported by the .NET Framework and a discussion of which Unicode encoding to use, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="20dad-1614"><xref:System.Text.UTF8Encoding> Obiekt, który jest zwracany przez tę właściwość może nie mieć odpowiednich zachowanie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="20dad-1614">The <xref:System.Text.UTF8Encoding> object that is returned by this property might not have the appropriate behavior for your app.</span></span>  
  
-   <span data-ttu-id="20dad-1615">Zwraca <xref:System.Text.UTF8Encoding> obiektu, który zawiera znacznik kolejności bajtów Unicode (BOM).</span><span class="sxs-lookup"><span data-stu-id="20dad-1615">It returns a <xref:System.Text.UTF8Encoding> object that provides a Unicode byte order mark (BOM).</span></span> <span data-ttu-id="20dad-1616">Do utworzenia wystąpienia UTF8 kodowania, które nie zawiera znak BOM, wywołaj wszystkie przeciążenia <xref:System.Text.UTF8Encoding.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="20dad-1616">To instantiate a UTF8 encoding that doesn't provide a BOM, call any overload of the <xref:System.Text.UTF8Encoding.%23ctor%2A> constructor.</span></span>  
  
-   <span data-ttu-id="20dad-1617">Zwraca <xref:System.Text.UTF8Encoding> obiekt, który używa zastąpienie rezerwowej w celu zastąpienia każdego ciągu, który go nie można zakodować i poszczególne bajty, które nie można go zdekodować znakiem zapytania ("?") znaków.</span><span class="sxs-lookup"><span data-stu-id="20dad-1617">It returns a <xref:System.Text.UTF8Encoding> object that uses replacement fallback to replace each string that it can't encode and each byte that it can't decode with a question mark ("?") character.</span></span> <span data-ttu-id="20dad-1618">Zamiast tego możesz wywołać <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> Konstruktor do tworzenia wystąpienia <xref:System.Text.UTF8Encoding> obiektu, którego uwierzytelniania rezerwowego jest albo <xref:System.Text.EncoderFallbackException> lub <xref:System.Text.DecoderFallbackException>, tak jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="20dad-1618">Instead, you can call the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor to instantiate a <xref:System.Text.UTF8Encoding> object whose fallback is either an <xref:System.Text.EncoderFallbackException> or a <xref:System.Text.DecoderFallbackException>, as the following example illustrates.</span></span>  
  
     [!code-csharp[System.Text.Encoding.UTF8#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.utf8/cs/encoding.utf8.1.cs#1)]
     [!code-vb[System.Text.Encoding.UTF8#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.utf8/vb/encoding.utf8.1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1619">W poniższym przykładzie zdefiniowano tablicę, która składa się z następujących znaków:</span><span class="sxs-lookup"><span data-stu-id="20dad-1619">The following example defines an array that consists of the following characters:</span></span>  
  
-   <span data-ttu-id="20dad-1620">MAŁA LITERA Z (U + 007A)</span><span class="sxs-lookup"><span data-stu-id="20dad-1620">LATIN SMALL LETTER Z (U+007A)</span></span>  
  
-   <span data-ttu-id="20dad-1621">MAŁA LITERA (U + 0061)</span><span class="sxs-lookup"><span data-stu-id="20dad-1621">LATIN SMALL LETTER A (U+0061)</span></span>  
  
-   <span data-ttu-id="20dad-1622">ŁĄCZENIE CAPPUCCINO (U + 0306)</span><span class="sxs-lookup"><span data-stu-id="20dad-1622">COMBINING BREVE (U+0306)</span></span>  
  
-   <span data-ttu-id="20dad-1623">MAŁA LITERA AE Z OSTRYCH (U + 01FD)</span><span class="sxs-lookup"><span data-stu-id="20dad-1623">LATIN SMALL LETTER AE WITH ACUTE (U+01FD)</span></span>  
  
-   <span data-ttu-id="20dad-1624">GRECKI MAŁA LITERA, BETA (U + 03B2)</span><span class="sxs-lookup"><span data-stu-id="20dad-1624">GREEK SMALL LETTER BETA (U+03B2)</span></span>  
  
-   <span data-ttu-id="20dad-1625">Para dwuskładnikowa (U + D800 U + DD54), który wchodzi w skład GRECKIM ACROPHONIC ATTIC jeden TYSIĘCY STATERS (U + 10154).</span><span class="sxs-lookup"><span data-stu-id="20dad-1625">A surrogate pair (U+D800 U+DD54) that forms GREEK ACROPHONIC ATTIC ONE THOUSAND STATERS (U+10154).</span></span>  
  
 <span data-ttu-id="20dad-1626">On wyświetla jednostki kodu UTF-16 każdego znaku i określa liczbę bajtów wymaganą przez koder UTF-8, aby zakodować tablicy znaków.</span><span class="sxs-lookup"><span data-stu-id="20dad-1626">It displays the UTF-16 code units of each character and determines the number of bytes required by a UTF-8 encoder to encode the character array.</span></span> <span data-ttu-id="20dad-1627">Następnie koduje znaki i wyświetla wynikowy algorytmem UTF-8 bajtów.</span><span class="sxs-lookup"><span data-stu-id="20dad-1627">It then encodes the characters and displays the resulting UTF-8-encoded bytes.</span></span>  
  
 [!code-csharp[System.Text.Encoding.UTF8#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.encoding.utf8/cs/example1.cs#2)]
 [!code-vb[System.Text.Encoding.UTF8#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.encoding.utf8/vb/example1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.UTF8Encoding" />
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WebName">
      <MemberSignature Language="C#" Value="public virtual string WebName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebName" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.WebName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ WebName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebName : string" Usage="System.Text.Encoding.WebName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1628">W przypadku przesłonięcia w klasie pochodnej pobiera nazwę zarejestrowany za pomocą Internet przypisane numery Authority (IANA) dla bieżącego kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1628">When overridden in a derived class, gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-1629">Nazwa organizacji IANA dla bieżącego <see cref="T:System.Text.Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1629">The IANA name for the current <see cref="T:System.Text.Encoding" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1630"><xref:System.Text.Encoding.WebName%2A> Właściwości jest taka sama jak <xref:System.Text.EncodingInfo.Name%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="20dad-1630">The <xref:System.Text.Encoding.WebName%2A> property is the same as the <xref:System.Text.EncodingInfo.Name%2A> property.</span></span>  
  
 <span data-ttu-id="20dad-1631">Należy pamiętać, że <xref:System.Text.Encoding.WebName%2A> zwraca nazwę zarejestrowana organizacja IANA kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1631">Note that <xref:System.Text.Encoding.WebName%2A> returns an IANA-registered name for the encoding.</span></span> <span data-ttu-id="20dad-1632">Gdy jej wartość jest nazwa standardu, implementacja kodowania nie mogą być zgodne w całości z tym standardem.</span><span class="sxs-lookup"><span data-stu-id="20dad-1632">When its value is the name of a standard, the implementation of the encoding might not conform in full to that standard.</span></span> <span data-ttu-id="20dad-1633"><xref:System.Text.Encoding.HeaderName%2A> Właściwość definiuje innego kodowania, która może działać lepiej w nagłówkach wiadomości e-mail.</span><span class="sxs-lookup"><span data-stu-id="20dad-1633">The <xref:System.Text.Encoding.HeaderName%2A> property defines a different encoding that might work better for email headers.</span></span> <span data-ttu-id="20dad-1634">Jednak większość aplikacje powinny używać <xref:System.Text.Encoding.WebName%2A> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="20dad-1634">However, most apps should use <xref:System.Text.Encoding.WebName%2A> instead.</span></span>  
  
 <span data-ttu-id="20dad-1635">Aby uzyskać więcej informacji na temat organizację IANA, przejdź do [www.iana.org](https://www.iana.org/).</span><span class="sxs-lookup"><span data-stu-id="20dad-1635">For more information on the IANA, go to [www.iana.org](https://www.iana.org/).</span></span>  
  
 <span data-ttu-id="20dad-1636"><xref:System.Text.Encoding.WebName%2A?displayProperty=nameWithType> Jest taka sama jak <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> zwrócone przez <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1636">The <xref:System.Text.Encoding.WebName%2A?displayProperty=nameWithType> is the same as the <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType> returned by <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="20dad-1637">Niektóre z nazwy sieci web znajdują się duplikaty; Zobacz uwagi, na <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> Aby uzyskać więcej informacji.</span><span class="sxs-lookup"><span data-stu-id="20dad-1637">Some of the web names are duplicates; see the remarks for <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1638">Poniższy przykład zawiera <xref:System.Text.Encoding.WebName%2A> w nagłówku HTML.</span><span class="sxs-lookup"><span data-stu-id="20dad-1638">The following example includes the <xref:System.Text.Encoding.WebName%2A> in an HTML header.</span></span>  
  
 [!code-cpp[System.Text.Encoding.WebName#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.WebName/CPP/webname.cpp#1)]
 [!code-csharp[System.Text.Encoding.WebName#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.WebName/CS/webname.cs#1)]
 [!code-vb[System.Text.Encoding.WebName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.WebName/VB/webname.vb#1)]  
  
 <span data-ttu-id="20dad-1639">Poniższy przykład pobiera różne nazwy dla każdego kodowania i wyświetla kodowanie z jedną lub więcej nazw, które różnią się od <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="20dad-1639">The following example retrieves the different names for each encoding and displays the encodings with one or more names that are different from <xref:System.Text.EncodingInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="20dad-1640">Wyświetla <xref:System.Text.Encoding.EncodingName%2A> , ale nie porównać ją.</span><span class="sxs-lookup"><span data-stu-id="20dad-1640">It displays <xref:System.Text.Encoding.EncodingName%2A> but does not compare against it.</span></span>  
  
 [!code-cpp[System.Text.Encoding.Names#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CPP/names.cpp#1)]
 [!code-csharp[System.Text.Encoding.Names#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.Names/CS/names.cs#1)]
 [!code-vb[System.Text.Encoding.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.Names/VB/names.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.EncodingInfo.Name" />
        <altmember cref="P:System.Text.Encoding.BodyName" />
        <altmember cref="P:System.Text.Encoding.EncodingName" />
        <altmember cref="P:System.Text.Encoding.HeaderName" />
      </Docs>
    </Member>
    <Member MemberName="WindowsCodePage">
      <MemberSignature Language="C#" Value="public virtual int WindowsCodePage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowsCodePage" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoding.WindowsCodePage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WindowsCodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WindowsCodePage { int get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowsCodePage : int" Usage="System.Text.Encoding.WindowsCodePage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="20dad-1641">Po przesłonięciu w klasie pochodnej pobiera kodowanie stronę kodową systemu operacyjnego Windows, który najlepiej odpowiada bieżącej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1641">When overridden in a derived class, gets the Windows operating system code page that most closely corresponds to the current encoding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="20dad-1642">Strona kodowa systemu operacyjnego Windows, który najlepiej odpowiada bieżącej <see cref="T:System.Text.Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="20dad-1642">The Windows operating system code page that most closely corresponds to the current <see cref="T:System.Text.Encoding" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20dad-1643">Ta właściwość jest podawany potrzeby utrzymywania zgodności z wielu języków Windows (MLang) interfejsów API, na przykład określania rodziny czcionek.</span><span class="sxs-lookup"><span data-stu-id="20dad-1643">This property is provided for compatibility with the Windows MultiLanguage (MLang) APIs, for example, in determining font families.</span></span> <span data-ttu-id="20dad-1644">Globalizacja przy użyciu jednej z kodowania Unicode zaleca się zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="20dad-1644">For globalization, using one of the Unicode encodings is recommended instead.</span></span> <span data-ttu-id="20dad-1645">Ponadto zaleca się używanie <xref:System.Text.Encoding.WebName%2A> zamiast <xref:System.Text.Encoding.WindowsCodePage%2A> do identyfikowania strony kodowej.</span><span class="sxs-lookup"><span data-stu-id="20dad-1645">It is also recommended to use <xref:System.Text.Encoding.WebName%2A> instead of <xref:System.Text.Encoding.WindowsCodePage%2A> to identify the code page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20dad-1646">Poniższy przykład określa stronę kodową Windows, która najlepiej odpowiada każdego kodowania.</span><span class="sxs-lookup"><span data-stu-id="20dad-1646">The following example determines the Windows code page that most closely corresponds to each encoding.</span></span>  
  
 [!code-cpp[System.Text.Encoding.CodePage#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoding.CodePage/CPP/codepage.cpp#1)]
 [!code-csharp[System.Text.Encoding.CodePage#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoding.CodePage/CS/codepage.cs#1)]
 [!code-vb[System.Text.Encoding.CodePage#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoding.CodePage/VB/codepage.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.CodePage" />
        <altmember cref="P:System.Text.EncodingInfo.CodePage" />
      </Docs>
    </Member>
  </Members>
</Type>