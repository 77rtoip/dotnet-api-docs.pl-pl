<Type Name="UTF8Encoding" FullName="System.Text.UTF8Encoding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="567bccf4e3679939d5849b3e1088df8da667065d" /><Meta Name="ms.sourcegitcommit" Value="74239f3977d28923e5020663db2c4e91601bea79" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/24/2019" /><Meta Name="ms.locfileid" Value="68438741" /></Metadata><TypeSignature Language="C#" Value="public class UTF8Encoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UTF8Encoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UTF8Encoding" />
  <TypeSignature Language="VB.NET" Value="Public Class UTF8Encoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UTF8Encoding : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type UTF8Encoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7b480-101">Reprezentuje kodowanie UTF-8 znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="7b480-101">Represents a UTF-8 encoding of Unicode characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-102">Kodowanie jest procesem przekształcania zestawu znaków Unicode w sekwencję bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="7b480-103">Dekodowanie jest procesem przekształcania sekwencji zakodowanych bajtów na zestaw znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="7b480-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="7b480-104">UTF-8 to kodowanie Unicode, które reprezentuje każdy punkt kodu jako sekwencję od 1 do 4 bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-104">UTF-8 is a Unicode encoding that represents each code point as a sequence of one to four bytes.</span></span> <span data-ttu-id="7b480-105">W przeciwieństwie do kodowania UTF-16 i UTF-32 kodowanie UTF-8 nie wymaga "Endian"; schemat kodowania jest taki sam, niezależnie od tego, czy procesor to big-endian czy little-endian.</span><span class="sxs-lookup"><span data-stu-id="7b480-105">Unlike the UTF-16 and UTF-32 encodings, the UTF-8 encoding does not require "endianness"; the encoding scheme is the same regardless of whether the processor is big-endian or little-endian.</span></span> <span data-ttu-id="7b480-106"><xref:System.Text.UTF8Encoding>odnosi się do strony kodowej systemu Windows 65001.</span><span class="sxs-lookup"><span data-stu-id="7b480-106"><xref:System.Text.UTF8Encoding> corresponds to the Windows code page 65001.</span></span> <span data-ttu-id="7b480-107">Aby uzyskać więcej informacji na temat UTFs i innych kodowań obsługiwanych przez <xref:System.Text>program, zobacz [kodowanie znaków w .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="7b480-107">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="7b480-108">Można utworzyć wystąpienie <xref:System.Text.UTF8Encoding> obiektu na wiele sposobów, w zależności od tego, czy chcesz udostępnić znacznik kolejności bajtów (BOM) i czy chcesz włączyć wykrywanie błędów.</span><span class="sxs-lookup"><span data-stu-id="7b480-108">You can instantiate a <xref:System.Text.UTF8Encoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM) and whether you want to enable error detection.</span></span> <span data-ttu-id="7b480-109">Poniższa tabela zawiera listę konstruktorów i <xref:System.Text.Encoding> właściwość, która <xref:System.Text.UTF8Encoding> zwraca obiekt.</span><span class="sxs-lookup"><span data-stu-id="7b480-109">The following table lists the constructors and the <xref:System.Text.Encoding> property that return a <xref:System.Text.UTF8Encoding> object.</span></span>  
  
|<span data-ttu-id="7b480-110">Element członkowski</span><span class="sxs-lookup"><span data-stu-id="7b480-110">Member</span></span>|<span data-ttu-id="7b480-111">BOM</span><span class="sxs-lookup"><span data-stu-id="7b480-111">BOM</span></span>|<span data-ttu-id="7b480-112">Wykrywanie błędów</span><span class="sxs-lookup"><span data-stu-id="7b480-112">Error detection</span></span>|  
|------------|---------|---------------------|  
|<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>|<span data-ttu-id="7b480-113">Yes</span><span class="sxs-lookup"><span data-stu-id="7b480-113">Yes</span></span>|<span data-ttu-id="7b480-114">Nie (alternatywa zamienna)</span><span class="sxs-lookup"><span data-stu-id="7b480-114">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="7b480-115">Nie</span><span class="sxs-lookup"><span data-stu-id="7b480-115">No</span></span>|<span data-ttu-id="7b480-116">Nie (alternatywa zamienna)</span><span class="sxs-lookup"><span data-stu-id="7b480-116">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="7b480-117">Możliwość konfiguracji</span><span class="sxs-lookup"><span data-stu-id="7b480-117">Configurable</span></span>|<span data-ttu-id="7b480-118">Nie (alternatywa zamienna)</span><span class="sxs-lookup"><span data-stu-id="7b480-118">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="7b480-119">Możliwość konfiguracji</span><span class="sxs-lookup"><span data-stu-id="7b480-119">Configurable</span></span>|<span data-ttu-id="7b480-120">Możliwość konfiguracji</span><span class="sxs-lookup"><span data-stu-id="7b480-120">Configurable</span></span>|  
  
 <span data-ttu-id="7b480-121">Metoda określa, ile bajtów powoduje kodowanie zestawu znaków Unicode, <xref:System.Text.UTF8Encoding.GetBytes%2A> a metoda wykonuje rzeczywiste kodowanie. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="7b480-121">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UTF8Encoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="7b480-122">Podobnie <xref:System.Text.UTF8Encoding.GetCharCount%2A> Metoda określa, ile znaków powoduje dekodowanie sekwencji bajtów, <xref:System.Text.UTF8Encoding.GetChars%2A> a metody i <xref:System.Text.UTF8Encoding.GetString%2A> wykonuje rzeczywiste dekodowanie.</span><span class="sxs-lookup"><span data-stu-id="7b480-122">Likewise, the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UTF8Encoding.GetChars%2A> and <xref:System.Text.UTF8Encoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="7b480-123">Dla kodera lub dekodera, który może zapisywać informacje o stanie podczas kodowania lub dekodowania danych obejmujących wiele bloków (takich jak ciąg znaków 1 000 000, który jest zakodowany w segmentach znaków 100 000), <xref:System.Text.UTF8Encoding.GetEncoder%2A> Użyj <xref:System.Text.UTF8Encoding.GetDecoder%2A> właściwości i piwo.</span><span class="sxs-lookup"><span data-stu-id="7b480-123">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UTF8Encoding.GetEncoder%2A> and <xref:System.Text.UTF8Encoding.GetDecoder%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="7b480-124"><xref:System.Text.UTF8Encoding> Opcjonalnie obiekt zawiera znacznik kolejności bajtów (BOM), który jest tablicą bajtów, które mogą być poprzedzone początkiem strumienia bajtów będącego wynikiem procesu kodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-124">Optionally, the <xref:System.Text.UTF8Encoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the beginning of the byte stream that results from the encoding process.</span></span> <span data-ttu-id="7b480-125">Jeśli strumień bajtów zakodowany w formacie UTF-8 jest poprzedzony znakiem kolejności bajtów (BOM), to ułatwia dekoderowi określenie kolejności bajtów i formatu przekształcenia lub UTF.</span><span class="sxs-lookup"><span data-stu-id="7b480-125">If a UTF-8 encoded byte stream is prefaced with a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF.</span></span> <span data-ttu-id="7b480-126">Należy jednak pamiętać, że standard Unicode nie wymaga ani nie zaleca BOM w kodowanych strumieniach UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7b480-126">Note, however, that the Unicode Standard neither requires nor recommends a BOM in UTF-8 encoded streams.</span></span> <span data-ttu-id="7b480-127">Aby uzyskać więcej informacji na temat kolejności bajtów i znacznika kolejności bajtów, zobacz Standard Unicode na [stronie głównej Unicode](https://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="7b480-127">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
 <span data-ttu-id="7b480-128">Jeśli koder jest skonfigurowany do dostarczania BOM, można go pobrać, wywołując <xref:System.Text.UTF8Encoding.GetPreamble%2A> metodę; w przeciwnym razie metoda zwraca pustą tablicę.</span><span class="sxs-lookup"><span data-stu-id="7b480-128">If the encoder is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="7b480-129">Należy pamiętać, że nawet jeśli <xref:System.Text.UTF8Encoding> dla obiektu jest skonfigurowany do obsługi BOM, należy uwzględnić BOM na początku strumienia zakodowanych bajtów, zgodnie z potrzebami, metody <xref:System.Text.UTF8Encoding> kodowania klasy nie są automatycznie.</span><span class="sxs-lookup"><span data-stu-id="7b480-129">Note that, even if a <xref:System.Text.UTF8Encoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UTF8Encoding> class do not do this automatically.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="7b480-130">Aby włączyć wykrywanie błędów i zapewnić bezpieczniejsze wystąpienie klasy, należy wywołać <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> konstruktora i `throwOnInvalidBytes` ustawić parametr na `true`.</span><span class="sxs-lookup"><span data-stu-id="7b480-130">To enable error detection and to make the class instance more secure, you should call the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> constructor and set the `throwOnInvalidBytes` parameter to `true`.</span></span> <span data-ttu-id="7b480-131">Po włączeniu wykrywania błędów Metoda, która wykrywa nieprawidłową sekwencję znaków lub bajtów zgłasza <xref:System.ArgumentException> wyjątek.</span><span class="sxs-lookup"><span data-stu-id="7b480-131">With error detection enabled, a method that detects an invalid sequence of characters or bytes throws an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="7b480-132">Bez wykrycia błędów nie jest zgłaszany żaden wyjątek, a Nieprawidłowa sekwencja jest zwykle ignorowana.</span><span class="sxs-lookup"><span data-stu-id="7b480-132">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7b480-133">Stan zakodowanego obiektu UTF-8 nie jest zachowywany, jeśli obiekt jest serializowany i deserializowany przy użyciu różnych wersji .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="7b480-133">The state of a UTF-8 encoded object is not preserved if the object is serialized and deserialized using different .NET Framework versions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b480-134">Poniższy przykład używa <xref:System.Text.UTF8Encoding> obiektu do kodowania ciągu znaków Unicode i zapisywania ich w tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-134">The following example uses a <xref:System.Text.UTF8Encoding> object to encode a string of Unicode characters and store them in a byte array.</span></span> <span data-ttu-id="7b480-135">Ciąg Unicode zawiera dwa znaki, PI (U + 03A0) i Sigma (U + 03A3), które znajdują się poza zakresem znaków ASCII.</span><span class="sxs-lookup"><span data-stu-id="7b480-135">The Unicode string includes two characters, Pi (U+03A0) and Sigma (U+03A3), that are outside the ASCII character range.</span></span> <span data-ttu-id="7b480-136">Gdy tablica zakodowanych bajtów jest zdekodowana z powrotem do ciągu, znaki pi i Sigma nadal są obecne.</span><span class="sxs-lookup"><span data-stu-id="7b480-136">When the encoded byte array is decoded back to a string, the Pi and Sigma characters are still present.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.UTF8Encoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/VB/snippet.vb#1)]  
  
 <span data-ttu-id="7b480-137">Poniższy przykład używa tego samego ciągu, jak w poprzednim przykładzie, z tą różnicą, że zapisuje zakodowane bajty do pliku i prefiksy strumienia bajtów przy użyciu znacznika kolejności bajtów (BOM).</span><span class="sxs-lookup"><span data-stu-id="7b480-137">The following example uses the same string as the previous example, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="7b480-138">Następnie odczytuje plik na dwa różne sposoby: jako plik tekstowy przy użyciu <xref:System.IO.StreamReader> obiektu oraz jako plik binarny.</span><span class="sxs-lookup"><span data-stu-id="7b480-138">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="7b480-139">Zgodnie z oczekiwaniami, żaden nowo odczytany ciąg nie obejmuje BOM.</span><span class="sxs-lookup"><span data-stu-id="7b480-139">As you would expect, neither newly-read string includes the BOM.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CS/bom1.cs#2)]
 [!code-vb[System.Text.UTF8Encoding Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/VB/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.Encoder" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="7b480-140">Informacje o kodowaniu</span><span class="sxs-lookup"><span data-stu-id="7b480-140">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7b480-141">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.UTF8Encoding" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7b480-141">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7b480-142">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.UTF8Encoding" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7b480-142">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-143">Ten konstruktor tworzy wystąpienie, które nie udostępnia znacznika kolejności bajtów Unicode i nie zgłasza wyjątku w przypadku wykrycia nieprawidłowego kodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-143">This constructor creates an instance that does not provide a Unicode byte order mark and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="7b480-144">Ze względów bezpieczeństwa zalecamy włączenie wykrywania błędów przez wywołanie konstruktora z `throwOnInvalidBytes` parametrem i ustawienie jego wartości na. `true`</span><span class="sxs-lookup"><span data-stu-id="7b480-144">For security reasons, we recommend that you enable error detection by calling a constructor with a `throwOnInvalidBytes` parameter and setting its value to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b480-145">Poniższy przykład tworzy nowe <xref:System.Text.UTF8Encoding> wystąpienie i wyświetla jego nazwę.</span><span class="sxs-lookup"><span data-stu-id="7b480-145">The following example creates a new <xref:System.Text.UTF8Encoding> instance and displays its name.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding (bool encoderShouldEmitUTF8Identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool encoderShouldEmitUTF8Identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoderShouldEmitUTF8Identifier As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding(bool encoderShouldEmitUTF8Identifier);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF8Encoding : bool -&gt; System.Text.UTF8Encoding" Usage="new System.Text.UTF8Encoding encoderShouldEmitUTF8Identifier" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoderShouldEmitUTF8Identifier" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoderShouldEmitUTF8Identifier"><span data-ttu-id="7b480-146"><see langword="true" />Aby określić, że <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> Metoda zwraca znacznik kolejności bajtów Unicode; w przeciwnym razie <see langword="false" />,.</span><span class="sxs-lookup"><span data-stu-id="7b480-146"><see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7b480-147">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.UTF8Encoding" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7b480-147">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span> <span data-ttu-id="7b480-148">Parametr określa, czy ma być udostępniany znacznik kolejności bajtów w formacie Unicode.</span><span class="sxs-lookup"><span data-stu-id="7b480-148">A parameter specifies whether to provide a Unicode byte order mark.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-149">Ten konstruktor tworzy wystąpienie, które nie zgłasza wyjątku, gdy wykryto nieprawidłowe kodowanie.</span><span class="sxs-lookup"><span data-stu-id="7b480-149">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="7b480-150">Ze względów bezpieczeństwa należy włączyć wykrywanie błędów, wywołując Konstruktor zawierający `throwOnInvalidBytes` parametr i ustawiając jego wartość na. `true`</span><span class="sxs-lookup"><span data-stu-id="7b480-150">For security reasons, you should enable error detection by calling a constructor that includes a `throwOnInvalidBytes` parameter and setting its value to `true`.</span></span>  
  
 <span data-ttu-id="7b480-151">Parametr steruje operacją <xref:System.Text.UTF8Encoding.GetPreamble%2A>metody. `encoderShouldEmitUTF8Identifier`</span><span class="sxs-lookup"><span data-stu-id="7b480-151">The `encoderShouldEmitUTF8Identifier` parameter controls the operation of the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="7b480-152">Jeśli `true`Metoda zwraca tablicę bajtową zawierającą znacznik kolejności bajtów Unicode (BOM) w formacie UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7b480-152">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</span></span>  <span data-ttu-id="7b480-153">Jeśli `false`zwraca tablicę bajtową o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="7b480-153">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="7b480-154">Jednak ustawienie `encoderShouldEmitUTF8Identifier` to `true` nie powoduje, aby <xref:System.Text.UTF8Encoding.GetBytes%2A> Metoda nie powodowała prefiksu BOM na początku tablicy bajtowej, ani nie powoduje, <xref:System.Text.UTF8Encoding.GetByteCount%2A> że metoda zawiera liczbę bajtów w BOM w liczniku bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-154">However, setting `encoderShouldEmitUTF8Identifier` to `true` does not cause the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b480-155">Poniższy przykład tworzy nowe <xref:System.Text.UTF8Encoding> wystąpienie i określa, że prefiks znacznika kolejności bajtów Unicode powinien być emitowany <xref:System.Text.UTF8Encoding.GetPreamble%2A> przez metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-155">The following example creates a new <xref:System.Text.UTF8Encoding> instance and specifies that a Unicode byte order mark prefix should be emitted by the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="7b480-156"><xref:System.Text.UTF8Encoding.GetPreamble%2A> Metoda następnie zwraca prefiks znacznika kolejności bajtów Unicode.</span><span class="sxs-lookup"><span data-stu-id="7b480-156">The <xref:System.Text.UTF8Encoding.GetPreamble%2A> method then returns the Unicode byte order mark prefix.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/CPP/ctor-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/CS/ctor-boolean.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/VB/ctor-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding (bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoderShouldEmitUTF8Identifier As Boolean, throwOnInvalidBytes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF8Encoding : bool * bool -&gt; System.Text.UTF8Encoding" Usage="new System.Text.UTF8Encoding (encoderShouldEmitUTF8Identifier, throwOnInvalidBytes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoderShouldEmitUTF8Identifier" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidBytes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoderShouldEmitUTF8Identifier"><span data-ttu-id="7b480-157"><see langword="true" />Aby określić, że <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> Metoda powinna zwracać znacznik kolejności bajtów Unicode; w przeciwnym razie <see langword="false" />,.</span><span class="sxs-lookup"><span data-stu-id="7b480-157"><see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method should return a Unicode byte order mark; otherwise, <see langword="false" />.</span></span></param>
        <param name="throwOnInvalidBytes"><span data-ttu-id="7b480-158"><see langword="true" />Aby zgłosić wyjątek w przypadku wykrycia nieprawidłowego kodowania; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="7b480-158"><see langword="true" /> to throw an exception when an invalid encoding is detected; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7b480-159">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.UTF8Encoding" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7b480-159">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span></span> <span data-ttu-id="7b480-160">Parametry określają, czy należy podawać znacznik kolejności bajtów Unicode i czy zgłaszać wyjątek w przypadku wykrycia nieprawidłowego kodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-160">Parameters specify whether to provide a Unicode byte order mark and whether to throw an exception when an invalid encoding is detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-161">Parametr steruje operacją <xref:System.Text.UTF8Encoding.GetPreamble%2A>metody. `encoderShouldEmitUTF8Identifier`</span><span class="sxs-lookup"><span data-stu-id="7b480-161">The `encoderShouldEmitUTF8Identifier` parameter controls the operation of the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="7b480-162">Jeśli `true`Metoda zwraca tablicę bajtową zawierającą znacznik kolejności bajtów Unicode (BOM) w formacie UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7b480-162">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</span></span>  <span data-ttu-id="7b480-163">Jeśli `false`zwraca tablicę bajtową o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="7b480-163">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="7b480-164">Jednak ustawienie `encoderShouldEmitUTF8Identifier` to `true` nie powoduje, aby <xref:System.Text.UTF8Encoding.GetBytes%2A> Metoda nie powodowała prefiksu BOM na początku tablicy bajtowej, ani nie powoduje, <xref:System.Text.UTF8Encoding.GetByteCount%2A> że metoda zawiera liczbę bajtów w BOM w liczniku bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-164">However, setting `encoderShouldEmitUTF8Identifier` to `true` does not cause the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
 <span data-ttu-id="7b480-165">Jeśli `throwOnInvalidBytes` <xref:System.ArgumentException?displayProperty=nameWithType> jest `true`, metoda, która wykrywa niepoprawną sekwencję bajtów zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="7b480-165">If `throwOnInvalidBytes` is `true`, a method that detects an invalid byte sequence throws an <xref:System.ArgumentException?displayProperty=nameWithType> exception.</span></span> <span data-ttu-id="7b480-166">W przeciwnym razie metoda nie zgłasza wyjątku, a Nieprawidłowa sekwencja jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="7b480-166">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="7b480-167">Ze względów bezpieczeństwa należy włączyć wykrywanie błędów przez wywołanie konstruktora, który zawiera `throwOnInvalidBytes` parametr i ustawienie tego parametru na. `true`</span><span class="sxs-lookup"><span data-stu-id="7b480-167">For security reasons, you should enable error detection by calling a constructor that includes a `throwOnInvalidBytes` parameter and setting that parameter to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b480-168">Poniższy przykład tworzy nowe <xref:System.Text.UTF8Encoding> wystąpienie, określając <xref:System.Text.UTF8Encoding.GetPreamble%2A> , że metoda nie powinna emitować prefiksu znacznika kolejności bajtów Unicode i należy zgłaszać wyjątek, gdy zostanie wykryte nieprawidłowe kodowanie.</span><span class="sxs-lookup"><span data-stu-id="7b480-168">The following example creates a new <xref:System.Text.UTF8Encoding> instance, specifying that the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method should not emit a Unicode byte order mark prefix, and an exception should be thrown when an invalid encoding is detected.</span></span> <span data-ttu-id="7b480-169">Zachowanie tego konstruktora jest porównywane z konstruktorem domyślnym <xref:System.Text.UTF8Encoding.%23ctor> , który nie zgłasza wyjątku w przypadku wykrycia nieprawidłowego kodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-169">The behavior of this constructor is compared to the default <xref:System.Text.UTF8Encoding.%23ctor> constructor, which does not throw an exception when an invalid encoding is detected.</span></span> <span data-ttu-id="7b480-170">Dwa <xref:System.Text.UTF8Encoding> wystąpienia kodują tablicę znakową, która zawiera dwa duże części (u + D801 i U + D802) w wierszu, który jest nieprawidłową sekwencją znaków; górny Surogat powinien zawsze poprzedzać niski Surogat.</span><span class="sxs-lookup"><span data-stu-id="7b480-170">The two <xref:System.Text.UTF8Encoding> instances encode a character array that contains two high surrogates (U+D801 and U+D802) in a row, which is an invalid character sequence; a high surrogate should always be followed by a low surrogate.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uTF8Encoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7b480-171">Obiekt do porównania z bieżącym wystąpieniem.</span><span class="sxs-lookup"><span data-stu-id="7b480-171">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="7b480-172">Określa, czy określony obiekt jest równy bieżącemu <see cref="T:System.Text.UTF8Encoding" /> obiektowi.</span><span class="sxs-lookup"><span data-stu-id="7b480-172">Determines whether the specified object is equal to the current <see cref="T:System.Text.UTF8Encoding" /> object.</span></span></summary>
        <returns><span data-ttu-id="7b480-173"><see langword="true" />Jeśli <paramref name="value" /> jest <see langword="false" />wystąpieniem i jest równe bieżącemu obiektowi; w przeciwnym razie,. <see cref="T:System.Text.UTF8Encoding" /></span><span class="sxs-lookup"><span data-stu-id="7b480-173"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF8Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-174">Dwa <xref:System.Text.UTF8Encoding> obiekty są uważane za równe, jeśli spełnione są wszystkie następujące warunki:</span><span class="sxs-lookup"><span data-stu-id="7b480-174">Two <xref:System.Text.UTF8Encoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="7b480-175">Oba obiekty zapewniają znacznik kolejności bajtów lub oba nie.</span><span class="sxs-lookup"><span data-stu-id="7b480-175">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="7b480-176">Oba obiekty używają tego samego powrotu do kodera.</span><span class="sxs-lookup"><span data-stu-id="7b480-176">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="7b480-177">Oba obiekty używają tego samego powrotu dekodera.</span><span class="sxs-lookup"><span data-stu-id="7b480-177">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b480-178">W poniższym przykładzie zastosowano <xref:System.Text.UTF8Encoding.Equals%2A> metodę, aby sprawdzić, czy <xref:System.Text.UTF8Encoding> bieżący obiekt jest równy różnemu <xref:System.Text.UTF8Encoding> obiektowi.</span><span class="sxs-lookup"><span data-stu-id="7b480-178">The following example uses the <xref:System.Text.UTF8Encoding.Equals%2A> method to test whether the current <xref:System.Text.UTF8Encoding> object is equal to a different <xref:System.Text.UTF8Encoding> object.</span></span> <span data-ttu-id="7b480-179">Cztery <xref:System.Text.UTF8Encoding> obiekty są tworzone i porównywane, a wyniki porównań są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="7b480-179">Four <xref:System.Text.UTF8Encoding> objects are created and compared and the results of the comparisons are displayed.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/CPP/equals-object.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/CS/equals-object.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/VB/equals-object.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7b480-180">Oblicza liczbę bajtów generowanych przez zakodowanie zestawu znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-180">Calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(valuetype System.ReadOnlySpan`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As ReadOnlySpan(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : ReadOnlySpan&lt;char&gt; -&gt; int" Usage="uTF8Encoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ chars);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="uTF8Encoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="7b480-181"><see cref="T:System.String" /> Zawiera zestaw znaków do kodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-181">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="7b480-182">Oblicza liczbę bajtów wytwarzanych przez zakodowanie znaków w określonym <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-182">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="7b480-183">Liczba bajtów generowanych przez kodowanie określonych znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-183">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-184">Aby obliczyć dokładne rozmiary tablicy wymagane przez <xref:System.Text.UTF8Encoding.GetBytes%2A> program do przechowywania wyników, należy <xref:System.Text.UTF8Encoding.GetByteCount%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-184">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="7b480-185">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-185">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="7b480-186">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="7b480-186">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="7b480-187">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje zgłoszenie wyjątku przez <xref:System.ArgumentException> tę metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-187">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="7b480-188">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="7b480-188">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="7b480-189">Aby upewnić się, że zakodowane bajty są zdekodowane prawidłowo, gdy są zapisywane jako plik lub jako strumień, można prefiksować strumień zakodowanych bajtów z preambułą.</span><span class="sxs-lookup"><span data-stu-id="7b480-189">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="7b480-190">Wstawianie preambuły na początku strumienia bajtów (na przykład na początku serii bajtów, które mają być zapisywane do pliku) jest odpowiedzialnością dla deweloperów, a liczba bajtów w preambule nie jest odzwierciedlana w wartości zwracanej przez <xref:System.Text.UTF8Encoding.GetByteCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-190">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b480-191">Poniższy przykład wywołuje <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> metody i <xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29> , aby obliczyć maksymalną i rzeczywistą liczbę bajtów wymaganą do zakodowania ciągu.</span><span class="sxs-lookup"><span data-stu-id="7b480-191">The following example calls the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> and <xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="7b480-192">Wyświetla również rzeczywistą liczbę bajtów wymaganą do przechowywania strumienia bajtów ze znacznikiem kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-192">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7b480-193"><paramref name="chars" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-193"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7b480-194">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może zostać zwrócona jako liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="7b480-194">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7b480-195">Wykrywanie błędów jest włączone i <paramref name="chars" /> zawiera nieprawidłową sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-195">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="7b480-196">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="7b480-196">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="7b480-197">- i -</span><span class="sxs-lookup"><span data-stu-id="7b480-197">-and-</span></span> 
 <span data-ttu-id="7b480-198"><see cref="P:System.Text.Encoding.EncoderFallback" />jest ustawiony na <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-198"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF8Encoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="7b480-199">Wskaźnik do pierwszego znaku do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-199">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="7b480-200">Liczba znaków do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-200">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="7b480-201">Oblicza liczbę bajtów wytwarzanych przez zakodowanie zestawu znaków, zaczynając od określonego wskaźnika znakowego.</span><span class="sxs-lookup"><span data-stu-id="7b480-201">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="7b480-202">Liczba bajtów generowanych przez kodowanie określonych znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-202">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-203">Aby obliczyć dokładne rozmiary tablicy wymagane przez <xref:System.Text.UTF8Encoding.GetBytes%2A> metodę do przechowywania wyników, należy <xref:System.Text.UTF8Encoding.GetByteCount%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-203">To calculate the exact array size required by the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="7b480-204">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-204">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="7b480-205">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="7b480-205">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="7b480-206">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje zgłoszenie wyjątku przez <xref:System.ArgumentException> tę metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-206">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="7b480-207">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="7b480-207">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="7b480-208">Aby upewnić się, że zakodowane bajty są zdekodowane prawidłowo, gdy są zapisywane jako plik lub jako strumień, można prefiksować strumień zakodowanych bajtów z preambułą.</span><span class="sxs-lookup"><span data-stu-id="7b480-208">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="7b480-209">Wstawianie preambuły na początku strumienia bajtów (na przykład na początku serii bajtów, które mają być zapisywane do pliku) jest odpowiedzialnością dla deweloperów, a liczba bajtów w preambule nie jest odzwierciedlana w wartości zwracanej przez <xref:System.Text.UTF8Encoding.GetByteCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-209">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7b480-210"><paramref name="chars" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-210"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7b480-211"><paramref name="count" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="7b480-211"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="7b480-212">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-212">-or-</span></span> 
<span data-ttu-id="7b480-213">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może zostać zwrócona jako liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="7b480-213">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7b480-214">Wykrywanie błędów jest włączone i <paramref name="chars" /> zawiera nieprawidłową sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-214">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="7b480-215">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać kompletne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="7b480-215">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)</span></span> 
<span data-ttu-id="7b480-216">- i -</span><span class="sxs-lookup"><span data-stu-id="7b480-216">-and-</span></span> 
 <span data-ttu-id="7b480-217"><see cref="P:System.Text.Encoding.EncoderFallback" />jest ustawiony na <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-217"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="7b480-218">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="7b480-218">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="7b480-219">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="7b480-219">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="uTF8Encoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="7b480-220">Tablica znaków zawierająca zestaw znaków do kodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-220">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="7b480-221">Indeks pierwszego znaku do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-221">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="7b480-222">Liczba znaków do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-222">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="7b480-223">Oblicza liczbę bajtów wytwarzanych przez zakodowanie zestawu znaków z określonej tablicy znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-223">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="7b480-224">Liczba bajtów generowanych przez kodowanie określonych znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-224">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-225">Aby obliczyć dokładne rozmiary tablicy wymagane przez <xref:System.Text.UTF8Encoding.GetBytes%2A> program do przechowywania bajtów, należy wywołać metodę użycia. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="7b480-225">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the uses <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="7b480-226">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-226">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="7b480-227">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="7b480-227">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="7b480-228">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje zgłoszenie wyjątku przez <xref:System.ArgumentException> tę metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-228">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="7b480-229">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="7b480-229">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="7b480-230">Aby upewnić się, że zakodowane bajty są zdekodowane prawidłowo, gdy są zapisywane jako plik lub jako strumień, można prefiksować strumień zakodowanych bajtów z preambułą.</span><span class="sxs-lookup"><span data-stu-id="7b480-230">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="7b480-231">Wstawianie preambuły na początku strumienia bajtów (na przykład na początku serii bajtów, które mają być zapisywane do pliku) jest odpowiedzialnością dla deweloperów, a liczba bajtów w preambule nie jest odzwierciedlana w wartości zwracanej przez <xref:System.Text.UTF8Encoding.GetByteCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-231">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b480-232">Poniższy przykład wypełnia tablicę wielkimi literami i małymi literami, a następnie wywołuje <xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> metodę w celu określenia liczby bajtów wymaganych do zakodowania małych liter łacińskich.</span><span class="sxs-lookup"><span data-stu-id="7b480-232">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="7b480-233">Następnie wyświetla te informacje wraz z łączną liczbą bajtów, które są niezbędne, jeśli zostanie dodany znacznik kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-233">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="7b480-234">Porównuje tę liczbę z wartością zwracaną przez <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> metodę, która wskazuje maksymalną liczbę bajtów wymaganą do kodowania małych liter.</span><span class="sxs-lookup"><span data-stu-id="7b480-234">It compares this number with the value returned by the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.UTF8Encoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7b480-235"><paramref name="chars" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-235"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7b480-236"><paramref name="index" />lub <paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="7b480-236"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="7b480-237">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-237">-or-</span></span> 
 <span data-ttu-id="7b480-238"><paramref name="index" />i <paramref name="count" /> nie należy zauważyć prawidłowego zakresu w <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-238"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="7b480-239">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-239">-or-</span></span> 
<span data-ttu-id="7b480-240">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może zostać zwrócona jako liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="7b480-240">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7b480-241">Wykrywanie błędów jest włączone i <paramref name="chars" /> zawiera nieprawidłową sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-241">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="7b480-242">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="7b480-242">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="7b480-243">- i -</span><span class="sxs-lookup"><span data-stu-id="7b480-243">-and-</span></span> 
<span data-ttu-id="7b480-244">Właściwość jest ustawiona na <see cref="T:System.Text.EncoderExceptionFallback" />. <see cref="P:System.Text.Encoding.EncoderFallback" /></span><span class="sxs-lookup"><span data-stu-id="7b480-244">The <see cref="P:System.Text.Encoding.EncoderFallback" /> property is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7b480-245">Koduje zestaw znaków w sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-245">Encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string -&gt; byte[]" Usage="uTF8Encoding.GetBytes s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7b480-246">Ciąg znaków, który ma zostać zakodowany.</span><span class="sxs-lookup"><span data-stu-id="7b480-246">The character string to encode.</span></span></param>
        <summary><span data-ttu-id="7b480-247">Koduje znaki w określonym <see cref="T:System.String" /> obiekcie w sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-247">Encodes the characters in a specified <see cref="T:System.String" /> object into a sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="7b480-248">Tablica bajtów, która zawiera zakodowane znaki w ciągu określonym przez parametr s.</span><span class="sxs-lookup"><span data-stu-id="7b480-248">A byte array that contains the encoded characters in the string specified by the s parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; -&gt; int" Usage="uTF8Encoding.GetBytes (chars, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF8Encoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charCount" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bytes" Type="System.Byte*" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteCount" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="7b480-249">Wskaźnik do pierwszego znaku do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-249">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="7b480-250">Liczba znaków do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-250">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="7b480-251">Wskaźnik do lokalizacji, w której ma zostać rozpoczęte pisanie sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-251">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="7b480-252">Maksymalna liczba bajtów do zapisania.</span><span class="sxs-lookup"><span data-stu-id="7b480-252">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="7b480-253">Koduje zestaw znaków, zaczynając od określonego wskaźnika znakowego do sekwencji bajtów, które są przechowywane, zaczynając od określonego wskaźnika bajtu.</span><span class="sxs-lookup"><span data-stu-id="7b480-253">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="7b480-254">Rzeczywista liczba bajtów zapisywana w lokalizacji wskazywanej przez <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-254">The actual number of bytes written at the location indicated by <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-255">Aby obliczyć dokładne rozmiary tablicy wymagane przez <xref:System.Text.UTF8Encoding.GetBytes%2A> program do przechowywania wyników, należy <xref:System.Text.UTF8Encoding.GetByteCount%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-255">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="7b480-256">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-256">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="7b480-257">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="7b480-257">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="7b480-258">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje zgłoszenie wyjątku przez <xref:System.ArgumentException> tę metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-258">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="7b480-259">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="7b480-259">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="7b480-260">Dane do przekonwertowania, takie jak dane odczytane ze strumienia, mogą być dostępne tylko w blokach sekwencyjnych.</span><span class="sxs-lookup"><span data-stu-id="7b480-260">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="7b480-261">W tym przypadku lub, jeśli ilość danych jest tak duża, że musi <xref:System.Text.Decoder> być podzielona na mniejsze bloki, należy użyć <xref:System.Text.Encoder> lub odpowiednio zwracany <xref:System.Text.UTF8Encoding.GetEncoder%2A> przez <xref:System.Text.UTF8Encoding.GetDecoder%2A> metodę lub metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-261">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> returned by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="7b480-262">Aby upewnić się, że zakodowane bajty są zdekodowane prawidłowo, gdy są zapisywane jako plik lub jako strumień, można prefiksować strumień zakodowanych bajtów z preambułą.</span><span class="sxs-lookup"><span data-stu-id="7b480-262">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="7b480-263">Wstawianie preambuły na początku strumienia bajtów (na przykład na początku serii bajtów, które mają być zapisywane do pliku) jest odpowiedzialnością dla deweloperów.</span><span class="sxs-lookup"><span data-stu-id="7b480-263">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="7b480-264"><xref:System.Text.UTF8Encoding.GetBytes%2A> Metoda nie dołącza preambuły do początku sekwencji zakodowanych bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-264">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7b480-265"><paramref name="chars" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-265"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="7b480-266">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-266">-or-</span></span> 
 <span data-ttu-id="7b480-267"><paramref name="bytes" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-267"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7b480-268"><paramref name="charCount" />lub <paramref name="byteCount" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="7b480-268"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7b480-269">Wykrywanie błędów jest włączone i <paramref name="chars" /> zawiera nieprawidłową sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-269">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="7b480-270">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-270">-or-</span></span> 
 <span data-ttu-id="7b480-271"><paramref name="byteCount" />jest mniejsza niż liczba bajtów będących wynikiem.</span><span class="sxs-lookup"><span data-stu-id="7b480-271"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="7b480-272">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="7b480-272">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="7b480-273">- i -</span><span class="sxs-lookup"><span data-stu-id="7b480-273">-and-</span></span> 
 <span data-ttu-id="7b480-274"><see cref="P:System.Text.Encoding.EncoderFallback" />jest ustawiony na <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-274"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="7b480-275">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="7b480-275">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="7b480-276">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="7b480-276">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="uTF8Encoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="7b480-277">Tablica znaków zawierająca zestaw znaków do kodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-277">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="7b480-278">Indeks pierwszego znaku do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-278">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="7b480-279">Liczba znaków do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-279">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="7b480-280">Tablica bajtów, która zawiera wyniki sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-280">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="7b480-281">Indeks, od którego ma zostać rozpoczęte zapisywanie wyniku sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-281">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="7b480-282">Koduje zestaw znaków z określonej tablicy znaków w określonej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-282">Encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="7b480-283">Rzeczywista liczba bajtów do <paramref name="bytes" />zapisania.</span><span class="sxs-lookup"><span data-stu-id="7b480-283">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-284">Aby obliczyć dokładne rozmiary tablicy wymagane przez <xref:System.Text.UTF8Encoding.GetBytes%2A> program do przechowywania wyników, należy <xref:System.Text.UTF8Encoding.GetByteCount%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-284">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="7b480-285">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-285">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="7b480-286">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="7b480-286">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="7b480-287">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje zgłoszenie wyjątku przez <xref:System.ArgumentException> tę metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-287">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="7b480-288">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="7b480-288">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="7b480-289">Dane do przekonwertowania, takie jak dane odczytane ze strumienia, mogą być dostępne tylko w blokach sekwencyjnych.</span><span class="sxs-lookup"><span data-stu-id="7b480-289">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="7b480-290">W tym przypadku lub, jeśli ilość danych jest tak duża, że musi <xref:System.Text.Decoder> być podzielona na mniejsze bloki, użyj <xref:System.Text.Encoder> lub <xref:System.Text.UTF8Encoding.GetDecoder%2A> odpowiednio do metody lub <xref:System.Text.UTF8Encoding.GetEncoder%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7b480-290">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="7b480-291">Aby upewnić się, że zakodowane bajty są zdekodowane prawidłowo, gdy są zapisywane jako plik lub jako strumień, można prefiksować strumień zakodowanych bajtów z preambułą.</span><span class="sxs-lookup"><span data-stu-id="7b480-291">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="7b480-292">Wstawianie preambuły na początku strumienia bajtów (na przykład na początku serii bajtów, które mają być zapisywane do pliku) jest odpowiedzialnością dla deweloperów.</span><span class="sxs-lookup"><span data-stu-id="7b480-292">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="7b480-293"><xref:System.Text.UTF8Encoding.GetBytes%2A> Metoda nie dołącza preambuły do początku sekwencji zakodowanych bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-293">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b480-294">Poniższy przykład używa <xref:System.Text.UTF8Encoding.GetBytes%2A> metody do kodowania zakresu znaków z ciągu i przechowuje zakodowane bajty w zakresie elementów w tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-294">The following example uses the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to encode a range of characters from a string and stores the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7b480-295"><paramref name="chars" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-295"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="7b480-296">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-296">-or-</span></span> 
 <span data-ttu-id="7b480-297"><paramref name="bytes" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-297"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7b480-298"><paramref name="charIndex" />lub <paramref name="charCount" />jestmniejszaod zera.<paramref name="byteIndex" /></span><span class="sxs-lookup"><span data-stu-id="7b480-298"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="7b480-299">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-299">-or-</span></span> 
 <span data-ttu-id="7b480-300"><paramref name="charIndex" />i <paramref name="charCount" /> nie należy zauważyć prawidłowego zakresu w <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-300"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="7b480-301">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-301">-or-</span></span> 
 <span data-ttu-id="7b480-302"><paramref name="byteIndex" />nie jest prawidłowym indeksem <paramref name="bytes" />w.</span><span class="sxs-lookup"><span data-stu-id="7b480-302"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7b480-303">Wykrywanie błędów jest włączone i <paramref name="chars" /> zawiera nieprawidłową sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-303">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="7b480-304">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-304">-or-</span></span> 
 <span data-ttu-id="7b480-305"><paramref name="bytes" />nie ma wystarczającej pojemności od <paramref name="byteIndex" /> do końca tablicy, aby pomieścić wyniki.</span><span class="sxs-lookup"><span data-stu-id="7b480-305"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="7b480-306">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="7b480-306">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="7b480-307">- i -</span><span class="sxs-lookup"><span data-stu-id="7b480-307">-and-</span></span> 
 <span data-ttu-id="7b480-308"><see cref="P:System.Text.Encoding.EncoderFallback" />jest ustawiony na <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-308"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="uTF8Encoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7b480-309"><see cref="T:System.String" /> Zawiera zestaw znaków do kodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-309">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="7b480-310">Indeks pierwszego znaku do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-310">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="7b480-311">Liczba znaków do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-311">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="7b480-312">Tablica bajtów, która zawiera wyniki sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-312">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="7b480-313">Indeks, od którego ma zostać rozpoczęte zapisywanie wyniku sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-313">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="7b480-314">Koduje zestaw znaków z określonego <see cref="T:System.String" /> w określonej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-314">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="7b480-315">Rzeczywista liczba bajtów do <paramref name="bytes" />zapisania.</span><span class="sxs-lookup"><span data-stu-id="7b480-315">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-316">Aby obliczyć dokładne rozmiary tablicy wymagane przez <xref:System.Text.UTF8Encoding.GetBytes%2A> program do przechowywania wyników, należy <xref:System.Text.UTF8Encoding.GetByteCount%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-316">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="7b480-317">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-317">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="7b480-318">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="7b480-318">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="7b480-319">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje zgłoszenie wyjątku przez <xref:System.ArgumentException> tę metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-319">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="7b480-320">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="7b480-320">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="7b480-321">Dane do przekonwertowania, takie jak dane odczytane ze strumienia, mogą być dostępne tylko w blokach sekwencyjnych.</span><span class="sxs-lookup"><span data-stu-id="7b480-321">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="7b480-322">W tym przypadku lub, jeśli ilość danych jest tak duża, że musi <xref:System.Text.Decoder> być podzielona na mniejsze bloki, użyj <xref:System.Text.Encoder> lub <xref:System.Text.UTF8Encoding.GetDecoder%2A> odpowiednio do metody lub <xref:System.Text.UTF8Encoding.GetEncoder%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7b480-322">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="7b480-323">Aby upewnić się, że zakodowane bajty są zdekodowane prawidłowo, gdy są zapisywane jako plik lub jako strumień, można prefiksować strumień zakodowanych bajtów z preambułą.</span><span class="sxs-lookup"><span data-stu-id="7b480-323">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="7b480-324">Wstawianie preambuły na początku strumienia bajtów (na przykład na początku serii bajtów, które mają być zapisywane do pliku) jest odpowiedzialnością dla deweloperów.</span><span class="sxs-lookup"><span data-stu-id="7b480-324">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="7b480-325"><xref:System.Text.UTF8Encoding.GetBytes%2A> Metoda nie dołącza preambuły do początku sekwencji zakodowanych bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-325">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b480-326">W poniższym przykładzie zastosowano <xref:System.Text.UTF8Encoding.GetBytes%2A> metodę w celu zakodowania zakresu elementów z tablicy znaków Unicode i zapisania zakodowanych bajtów w zakresie elementów w tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-326">The following example uses the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7b480-327"><paramref name="s" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-327"><paramref name="s" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="7b480-328">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-328">-or-</span></span> 
 <span data-ttu-id="7b480-329"><paramref name="bytes" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-329"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7b480-330"><paramref name="charIndex" />lub <paramref name="charCount" />jestmniejszaod zera.<paramref name="byteIndex" /></span><span class="sxs-lookup"><span data-stu-id="7b480-330"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="7b480-331">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-331">-or-</span></span> 
 <span data-ttu-id="7b480-332"><paramref name="charIndex" />i <paramref name="charCount" /> nie należy zauważyć prawidłowego zakresu w <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-332"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="7b480-333">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-333">-or-</span></span> 
 <span data-ttu-id="7b480-334"><paramref name="byteIndex" />nie jest prawidłowym indeksem <paramref name="bytes" />w.</span><span class="sxs-lookup"><span data-stu-id="7b480-334"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7b480-335">Wykrywanie błędów jest włączone i <paramref name="s" /> zawiera nieprawidłową sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-335">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="7b480-336">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-336">-or-</span></span> 
 <span data-ttu-id="7b480-337"><paramref name="bytes" />nie ma wystarczającej pojemności od <paramref name="byteIndex" /> do końca tablicy, aby pomieścić wyniki.</span><span class="sxs-lookup"><span data-stu-id="7b480-337"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="7b480-338">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="7b480-338">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="7b480-339">- i -</span><span class="sxs-lookup"><span data-stu-id="7b480-339">-and-</span></span> 
 <span data-ttu-id="7b480-340"><see cref="P:System.Text.Encoding.EncoderFallback" />jest ustawiony na <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-340"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7b480-341">Oblicza liczbę znaków wytworzonych przez dekodowanie sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-341">Calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : ReadOnlySpan&lt;byte&gt; -&gt; int" Usage="uTF8Encoding.GetCharCount bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF8Encoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="7b480-342">Wskaźnik do pierwszego bajtu do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-342">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="7b480-343">Liczba bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-343">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="7b480-344">Oblicza liczbę znaków wytworzonych przez dekodowanie sekwencji bajtów, zaczynając od określonego wskaźnika bajtu.</span><span class="sxs-lookup"><span data-stu-id="7b480-344">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="7b480-345">Liczba znaków wytworzonych przez odkodowanie określonej sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-345">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-346">Aby obliczyć dokładne rozmiary tablicy wymagane przez <xref:System.Text.UTF8Encoding.GetChars%2A> program do przechowywania wyników, <xref:System.Text.UTF8Encoding.GetCharCount%2A> Wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-346">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="7b480-347">Aby obliczyć maksymalny rozmiar tablicy, wywołaj <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-347">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="7b480-348">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UTF8Encoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="7b480-348">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="7b480-349">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje zgłoszenie wyjątku przez <xref:System.ArgumentException> tę metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-349">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="7b480-350">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="7b480-350">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7b480-351"><paramref name="bytes" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-351"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7b480-352"><paramref name="count" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="7b480-352"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="7b480-353">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-353">-or-</span></span> 
<span data-ttu-id="7b480-354">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może zostać zwrócona jako liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="7b480-354">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7b480-355">Wykrywanie błędów jest włączone i <paramref name="bytes" /> zawiera nieprawidłową sekwencję bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-355">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="7b480-356">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="7b480-356">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="7b480-357">- i -</span><span class="sxs-lookup"><span data-stu-id="7b480-357">-and-</span></span> 
 <span data-ttu-id="7b480-358"><see cref="P:System.Text.Encoding.DecoderFallback" />jest ustawiony na <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-358"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="7b480-359">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="7b480-359">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="7b480-360">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="7b480-360">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Text.UTF8Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="uTF8Encoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="7b480-361">Tablica bajtowa zawierająca sekwencję bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-361">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="7b480-362">Indeks pierwszego bajtu do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-362">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="7b480-363">Liczba bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-363">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="7b480-364">Oblicza liczbę znaków wytworzonych przez dekodowanie sekwencji bajtów z określonej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-364">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="7b480-365">Liczba znaków wytworzonych przez odkodowanie określonej sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-365">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-366">Aby obliczyć dokładne rozmiary tablicy wymagane przez <xref:System.Text.UTF8Encoding.GetChars%2A> program do przechowywania wyników, <xref:System.Text.UTF8Encoding.GetCharCount%2A> Wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-366">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="7b480-367">Aby obliczyć maksymalny rozmiar tablicy, wywołaj <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-367">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="7b480-368">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UTF8Encoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="7b480-368">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="7b480-369">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje zgłoszenie wyjątku przez <xref:System.ArgumentException> tę metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-369">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="7b480-370">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="7b480-370">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b480-371">W poniższym przykładzie zastosowano <xref:System.Text.UTF8Encoding.GetCharCount%2A> metodę, aby zwrócić liczbę znaków generowanych przez dekodowanie zakresu elementów w tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-371">The following example uses the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7b480-372"><paramref name="bytes" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-372"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7b480-373"><paramref name="index" />lub <paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="7b480-373"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="7b480-374">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-374">-or-</span></span> 
 <span data-ttu-id="7b480-375"><paramref name="index" />i <paramref name="count" /> nie należy zauważyć prawidłowego zakresu w <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-375"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="7b480-376">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-376">-or-</span></span> 
<span data-ttu-id="7b480-377">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może zostać zwrócona jako liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="7b480-377">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7b480-378">Wykrywanie błędów jest włączone i <paramref name="bytes" /> zawiera nieprawidłową sekwencję bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-378">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="7b480-379">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="7b480-379">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="7b480-380">- i -</span><span class="sxs-lookup"><span data-stu-id="7b480-380">-and-</span></span> 
 <span data-ttu-id="7b480-381"><see cref="P:System.Text.Encoding.DecoderFallback" />jest ustawiony na <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-381"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.UTF8Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7b480-382">Dekoduje sekwencję bajtów do zestawu znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-382">Decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="F#" Value="override this.GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; -&gt; int" Usage="uTF8Encoding.GetChars (bytes, chars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="chars">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF8Encoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteCount" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="chars" Type="System.Char*" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charCount" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="7b480-383">Wskaźnik do pierwszego bajtu do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-383">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="7b480-384">Liczba bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-384">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="7b480-385">Wskaźnik do lokalizacji, w której ma zostać rozpoczęte pisanie zestawu znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-385">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="7b480-386">Maksymalna liczba znaków do zapisania.</span><span class="sxs-lookup"><span data-stu-id="7b480-386">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="7b480-387">Dekoduje sekwencję bajtów rozpoczynającą się od określonego wskaźnika Byte do zestawu znaków, które są przechowywane, zaczynając od określonego wskaźnika znakowego.</span><span class="sxs-lookup"><span data-stu-id="7b480-387">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="7b480-388">Rzeczywista liczba znaków zapisywana w lokalizacji wskazywanej przez <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-388">The actual number of characters written at the location indicated by <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-389">Aby obliczyć dokładne rozmiary tablicy wymagane przez <xref:System.Text.UTF8Encoding.GetChars%2A> program do przechowywania wyników, <xref:System.Text.UTF8Encoding.GetCharCount%2A> Wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-389">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="7b480-390">Aby obliczyć maksymalny rozmiar tablicy, wywołaj <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-390">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="7b480-391">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UTF8Encoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="7b480-391">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="7b480-392">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje zgłoszenie wyjątku przez <xref:System.ArgumentException> tę metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-392">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="7b480-393">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="7b480-393">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="7b480-394">Jeśli zakres bajtów do zdekodowania obejmuje oznaczenie kolejności bajtów (BOM) i tablicę bajtową zwróconą przez metodę typu nieopartego na BOM, znak U + FFFE jest zawarty w tablicy znaków zwracanej przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-394">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="7b480-395">Można go usunąć, wywołując <xref:System.String.TrimStart%2A?displayProperty=nameWithType> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-395">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7b480-396">Dane do przekonwertowania, takie jak dane odczytane ze strumienia, mogą być dostępne tylko w blokach sekwencyjnych.</span><span class="sxs-lookup"><span data-stu-id="7b480-396">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="7b480-397">W tym przypadku lub, jeśli ilość danych jest tak duża, że musi <xref:System.Text.Decoder> zostać podzielona na mniejsze bloki, użyj <xref:System.Text.Encoder> lub obiektu dostarczonego odpowiednio <xref:System.Text.UTF8Encoding.GetEncoder%2A> przez <xref:System.Text.UTF8Encoding.GetDecoder%2A> metodę lub metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-397">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7b480-398"><paramref name="bytes" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-398"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="7b480-399">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-399">-or-</span></span> 
 <span data-ttu-id="7b480-400"><paramref name="chars" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-400"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7b480-401"><paramref name="byteCount" />lub <paramref name="charCount" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="7b480-401"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7b480-402">Wykrywanie błędów jest włączone i <paramref name="bytes" /> zawiera nieprawidłową sekwencję bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-402">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
<span data-ttu-id="7b480-403">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-403">-or-</span></span> 
 <span data-ttu-id="7b480-404"><paramref name="charCount" />jest mniejsza niż liczba znaków będących wynikiem.</span><span class="sxs-lookup"><span data-stu-id="7b480-404"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="7b480-405">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="7b480-405">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="7b480-406">- i -</span><span class="sxs-lookup"><span data-stu-id="7b480-406">-and-</span></span> 
 <span data-ttu-id="7b480-407"><see cref="P:System.Text.Encoding.DecoderFallback" />jest ustawiony na <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-407"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="7b480-408">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="7b480-408">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="7b480-409">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="7b480-409">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="uTF8Encoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="7b480-410">Tablica bajtowa zawierająca sekwencję bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-410">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="7b480-411">Indeks pierwszego bajtu do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-411">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="7b480-412">Liczba bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-412">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="7b480-413">Tablica znaków, która będzie zawierać zestaw znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-413">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="7b480-414">Indeks, od którego należy zacząć pisać zestaw znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-414">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="7b480-415">Dekoduje sekwencję bajtów z określonej tablicy bajtów do określonej tablicy znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-415">Decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="7b480-416">Rzeczywista liczba znaków do <paramref name="chars" />zapisania.</span><span class="sxs-lookup"><span data-stu-id="7b480-416">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-417">Aby obliczyć dokładne rozmiary tablicy wymagane przez <xref:System.Text.UTF8Encoding.GetChars%2A> program do przechowywania wyników, <xref:System.Text.UTF8Encoding.GetCharCount%2A> Wywołaj metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-417">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="7b480-418">Aby obliczyć maksymalny rozmiar tablicy, wywołaj <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-418">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="7b480-419">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UTF8Encoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="7b480-419">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="7b480-420">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje zgłoszenie wyjątku przez <xref:System.ArgumentException> tę metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-420">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="7b480-421">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="7b480-421">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="7b480-422">Jeśli zakres bajtów do zdekodowania obejmuje oznaczenie kolejności bajtów (BOM) i tablicę bajtową zwróconą przez metodę typu nieopartego na BOM, znak U + FFFE jest zawarty w tablicy znaków zwracanej przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-422">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="7b480-423">Można go usunąć, wywołując <xref:System.String.TrimStart%2A?displayProperty=nameWithType> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-423">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7b480-424">Dane do przekonwertowania, takie jak dane odczytane ze strumienia, mogą być dostępne tylko w blokach sekwencyjnych.</span><span class="sxs-lookup"><span data-stu-id="7b480-424">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="7b480-425">W tym przypadku lub, jeśli ilość danych jest tak duża, że musi <xref:System.Text.Decoder> być podzielona na mniejsze bloki, użyj <xref:System.Text.Encoder> lub <xref:System.Text.UTF8Encoding.GetDecoder%2A> odpowiednio do metody lub <xref:System.Text.UTF8Encoding.GetEncoder%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7b480-425">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b480-426">Poniższy przykład używa <xref:System.Text.UTF8Encoding.GetChars%2A> metody do dekodowania zakresu elementów w tablicy bajtów i przechowywania wyniku w tablicy znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-426">The following example uses the <xref:System.Text.UTF8Encoding.GetChars%2A> method to decode a range of elements in a byte array and store the result in a character array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7b480-427"><paramref name="bytes" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-427"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="7b480-428">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-428">-or-</span></span> 
 <span data-ttu-id="7b480-429"><paramref name="chars" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-429"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7b480-430"><paramref name="byteIndex" />lub <paramref name="byteCount" />jestmniejszaod zera.<paramref name="charIndex" /></span><span class="sxs-lookup"><span data-stu-id="7b480-430"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="7b480-431">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-431">-or-</span></span> 
 <span data-ttu-id="7b480-432"><paramref name="byteindex" />i <paramref name="byteCount" /> nie należy zauważyć prawidłowego zakresu w <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-432"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="7b480-433">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-433">-or-</span></span> 
 <span data-ttu-id="7b480-434"><paramref name="charIndex" />nie jest prawidłowym indeksem <paramref name="chars" />w.</span><span class="sxs-lookup"><span data-stu-id="7b480-434"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7b480-435">Wykrywanie błędów jest włączone i <paramref name="bytes" /> zawiera nieprawidłową sekwencję bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-435">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
<span data-ttu-id="7b480-436">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-436">-or-</span></span> 
 <span data-ttu-id="7b480-437"><paramref name="chars" />nie ma wystarczającej pojemności od <paramref name="charIndex" /> do końca tablicy, aby pomieścić wyniki.</span><span class="sxs-lookup"><span data-stu-id="7b480-437"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="7b480-438">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="7b480-438">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="7b480-439">- i -</span><span class="sxs-lookup"><span data-stu-id="7b480-439">-and-</span></span> 
 <span data-ttu-id="7b480-440"><see cref="P:System.Text.Encoding.DecoderFallback" />jest ustawiony na <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-440"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="uTF8Encoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7b480-441">Uzyskuje dekoder, który konwertuje sekwencję bajtów w formacie UTF-8 na sekwencję znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="7b480-441">Obtains a decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="7b480-442">Dekoder, który konwertuje sekwencję bajtów w formacie UTF-8 na sekwencję znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="7b480-442">A decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-443">Metoda konwertuje sekwencyjne bloki bajtów do sekwencyjnych bloków znaków w sposób podobny <xref:System.Text.UTF8Encoding.GetChars%2A> do metody tej klasy. <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7b480-443">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UTF8Encoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="7b480-444"><xref:System.Text.Decoder> Jednak utrzymuje informacje o stanie między wywołaniami, aby można było poprawnie zdekodować sekwencje bajtów, które obejmują bloki.</span><span class="sxs-lookup"><span data-stu-id="7b480-444">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="7b480-445">Zachowuje <xref:System.Text.Decoder> również końcowe bajty na końcu bloków danych i używa końcowych bajtów w następnej operacji dekodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-445">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="7b480-446">W związku z <xref:System.Text.UTF8Encoding.GetEncoder%2A> tym isąprzydatnewprzypadkuoperacjitransmisjiwsieciiplików,ponieważteoperacjeczęstozajmująsięblokamidanych,aniezpełnymstrumieniemdanych.<xref:System.Text.UTF8Encoding.GetDecoder%2A></span><span class="sxs-lookup"><span data-stu-id="7b480-446">Therefore, <xref:System.Text.UTF8Encoding.GetDecoder%2A> and <xref:System.Text.UTF8Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="7b480-447">Jeśli jest włączone wykrywanie błędów, oznacza to, `throwOnInvalidCharacters` że parametr konstruktora jest ustawiony na `true`, wykrywanie błędów <xref:System.Text.Decoder> jest również włączone w zwracanym przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-447">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="7b480-448">W przypadku włączenia wykrywania błędów i napotkania nieprawidłowej sekwencji stan dekodera jest niezdefiniowany i przetwarzanie musi zostać zatrzymane.</span><span class="sxs-lookup"><span data-stu-id="7b480-448">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b480-449">W poniższym przykładzie zastosowano <xref:System.Text.UTF8Encoding.GetDecoder%2A> metodę w celu uzyskania dekodera UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7b480-449">The following example uses the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method to obtain a UTF-8 decoder.</span></span> <span data-ttu-id="7b480-450">Dekoder konwertuje sekwencję bajtów na sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-450">The decoder converts a sequence of bytes into a sequence of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/CPP/getdecoder-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/CS/getdecoder-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/VB/getdecoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="7b480-451">Informacje o kodowaniu</span><span class="sxs-lookup"><span data-stu-id="7b480-451">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="uTF8Encoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7b480-452">Uzyskuje koder, który konwertuje sekwencję znaków Unicode na sekwencję bajtów w formacie UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7b480-452">Obtains an encoder that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="7b480-453">A <see cref="T:System.Text.Encoder" /> , która konwertuje sekwencję znaków Unicode na sekwencję bajtów w formacie UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7b480-453">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-454">Metoda konwertuje sekwencyjne bloki znaków na bloki sekwencyjne bajtów w sposób podobny <xref:System.Text.UTF8Encoding.GetBytes%2A> do metody. <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7b480-454">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.UTF8Encoding.GetBytes%2A> method.</span></span> <span data-ttu-id="7b480-455"><xref:System.Text.Encoder> Jednak utrzymuje informacje o stanie między wywołaniami, dzięki czemu mogą poprawnie kodować sekwencje znaków, które obejmują bloki.</span><span class="sxs-lookup"><span data-stu-id="7b480-455">However, a <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="7b480-456">Zachowuje <xref:System.Text.Encoder> również końcowe znaki na końcu bloków danych i używa znaków końcowych w następnej operacji kodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-456">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="7b480-457">Na przykład blok danych może kończyć się niedopasowanym surogatem, a zgodny z niską surogatem może znajdować się w następnym bloku danych.</span><span class="sxs-lookup"><span data-stu-id="7b480-457">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="7b480-458">W związku z <xref:System.Text.UTF8Encoding.GetEncoder%2A> tym isąprzydatnewprzypadkuoperacjitransmisjiwsieciiplików,ponieważteoperacjeczęstozajmująsięblokamidanych,aniezpełnymstrumieniemdanych.<xref:System.Text.UTF8Encoding.GetDecoder%2A></span><span class="sxs-lookup"><span data-stu-id="7b480-458">Therefore, <xref:System.Text.UTF8Encoding.GetDecoder%2A> and <xref:System.Text.UTF8Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="7b480-459">Jeśli jest włączone wykrywanie błędów, oznacza to, `throwOnInvalidCharacters` że parametr konstruktora jest ustawiony na `true`, wykrywanie błędów <xref:System.Text.Encoder> jest również włączone w zwracanym przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-459">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> returned by this method.</span></span> <span data-ttu-id="7b480-460">W przypadku włączenia wykrywania błędów i napotkania nieprawidłowej sekwencji stan kodera jest niezdefiniowany i przetwarzanie musi zostać zatrzymane.</span><span class="sxs-lookup"><span data-stu-id="7b480-460">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b480-461">Poniższy przykład używa metody, <xref:System.Text.UTF8Encoding.GetEncoder%2A> Aby uzyskać koder do konwersji sekwencji znaków na zakodowaną sekwencję bajtów w formacie UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7b480-461">The following example uses the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method to obtain an encoder to convert a sequence of characters into a UTF-8 encoded sequence of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/CPP/getencoder-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/CS/getencoder-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/VB/getencoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="7b480-462">Informacje o kodowaniu</span><span class="sxs-lookup"><span data-stu-id="7b480-462">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uTF8Encoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7b480-463">Zwraca kod skrótu dla bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="7b480-463">Returns the hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="7b480-464">Kod skrótu dla bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="7b480-464">The hash code for the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7b480-465">W poniższym przykładzie zastosowano <xref:System.Text.UTF8Encoding.GetHashCode%2A> metodę w celu zwrócenia kodu skrótu dla <xref:System.Text.UTF8Encoding> wystąpień.</span><span class="sxs-lookup"><span data-stu-id="7b480-465">The following example uses the <xref:System.Text.UTF8Encoding.GetHashCode%2A> method to return a hash code for <xref:System.Text.UTF8Encoding> instances.</span></span> <span data-ttu-id="7b480-466">Zwróć uwagę, że kod skrótu zwracany przez tę metodę zależy od konstruktora użytego do utworzenia <xref:System.Text.UTF8Encoding> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7b480-466">Notice that the hash code returned by this method depends on the constructor used to create the <xref:System.Text.UTF8Encoding> object.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/CPP/gethashcode-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/CS/gethashcode-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/VB/gethashcode-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="uTF8Encoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="7b480-467">Liczba znaków do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-467">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="7b480-468">Oblicza maksymalną liczbę bajtów wyprodukowanych przez zakodowanie określonej liczby znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-468">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="7b480-469">Maksymalna liczba bajtów wygenerowanych przez kodowanie określonej liczby znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-469">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-470">Aby obliczyć dokładne rozmiary tablicy wymagane przez <xref:System.Text.UTF8Encoding.GetBytes%2A> program do przechowywania wyników, należy <xref:System.Text.UTF8Encoding.GetByteCount%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-470">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="7b480-471">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-471">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="7b480-472">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UTF8Encoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="7b480-472">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="7b480-473"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>to najgorsza liczba przypadków, w tym najgorszy przypadek dla aktualnie wybranego <xref:System.Text.EncoderFallback>elementu.</span><span class="sxs-lookup"><span data-stu-id="7b480-473"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="7b480-474">W przypadku wybrania rezerwy z potencjalnie dużym ciągiem <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> może zwracać duże wartości.</span><span class="sxs-lookup"><span data-stu-id="7b480-474">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="7b480-475">W większości przypadków ta metoda zwraca rozsądne liczby dla małych ciągów.</span><span class="sxs-lookup"><span data-stu-id="7b480-475">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="7b480-476">W przypadku dużych ciągów może zajść potrzeba wyboru między użyciem bardzo dużych buforów i przechwycenia błędów w rzadkich przypadkach, gdy zostanie przekroczony bardziej rozsądny bufor.</span><span class="sxs-lookup"><span data-stu-id="7b480-476">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="7b480-477">Warto również rozważyć inne podejście przy użyciu <xref:System.Text.UTF8Encoding.GetByteCount%2A> lub. <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7b480-477">You might also want to consider a different approach using <xref:System.Text.UTF8Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7b480-478">Na przykład tekst w języku angielskim i wiele innych języków często wymaga tylko jednego bajtu UTF-8, aby reprezentować znak, ale numer <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> zwracany przez program musi zezwalać na możliwość przekonwertowania ciągu znaków, który będzie składać się wyłącznie ze znaków Wymagaj czterech bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-478">For example, text in English and many other languages often needs only one UTF-8 byte to represent a character, but the number returned by <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> has to allow for the possibility that the string to be converted will consist entirely of characters that each require four bytes.</span></span>  
  
 <span data-ttu-id="7b480-479"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>nie ma relacji do <xref:System.Text.UTF8Encoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="7b480-479"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.UTF8Encoding.GetChars%2A>.</span></span> <span data-ttu-id="7b480-480">Jeśli aplikacja wymaga użycia <xref:System.Text.UTF8Encoding.GetChars%2A>funkcji podobnej do, należy użyć. <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="7b480-480">If your application needs a similar function to use with <xref:System.Text.UTF8Encoding.GetChars%2A>, it should use <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7b480-481">`GetMaxByteCount(N)`nie musi być taka sama jak `N* GetMaxByteCount(1)`wartość.</span><span class="sxs-lookup"><span data-stu-id="7b480-481">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b480-482">W poniższym przykładzie zastosowano <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> metodę, aby zwrócić maksymalną liczbę bajtów wymaganą do zakodowania określonej liczby znaków.</span><span class="sxs-lookup"><span data-stu-id="7b480-482">The following example uses the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method to return the maximum number of bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7b480-483"><paramref name="charCount" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="7b480-483"><paramref name="charCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="7b480-484">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-484">-or-</span></span> 
<span data-ttu-id="7b480-485">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może zostać zwrócona jako liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="7b480-485">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="7b480-486">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="7b480-486">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="7b480-487">- i -</span><span class="sxs-lookup"><span data-stu-id="7b480-487">-and-</span></span> 
 <span data-ttu-id="7b480-488"><see cref="P:System.Text.Encoding.EncoderFallback" />jest ustawiony na <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-488"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="uTF8Encoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="7b480-489">Liczba bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-489">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="7b480-490">Oblicza maksymalną liczbę znaków wyprodukowanych przez dekodowanie określonej liczby bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-490">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="7b480-491">Maksymalna liczba znaków wytworzonych przez odkodowanie określonej liczby bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-491">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-492">Aby obliczyć dokładne rozmiary tablicy wymagane przez <xref:System.Text.UTF8Encoding.GetChars%2A> program do przechowywania wyników, należy <xref:System.Text.UTF8Encoding.GetCharCount%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-492">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, you call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="7b480-493">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-493">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="7b480-494">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UTF8Encoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="7b480-494">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="7b480-495"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>to najgorsza liczba przypadków, w tym najgorszy przypadek dla aktualnie wybranego <xref:System.Text.DecoderFallback>elementu.</span><span class="sxs-lookup"><span data-stu-id="7b480-495"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="7b480-496">W przypadku wybrania rezerwy z potencjalnie dużym ciągiem <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> może zwracać duże wartości.</span><span class="sxs-lookup"><span data-stu-id="7b480-496">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="7b480-497">W większości przypadków ta metoda zwraca rozsądne liczby dla małych ciągów.</span><span class="sxs-lookup"><span data-stu-id="7b480-497">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="7b480-498">W przypadku dużych ciągów może zajść potrzeba wyboru między użyciem bardzo dużych buforów i przechwycenia błędów w rzadkich przypadkach, gdy zostanie przekroczony bardziej rozsądny bufor.</span><span class="sxs-lookup"><span data-stu-id="7b480-498">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span>  <span data-ttu-id="7b480-499">Warto również rozważyć inne podejście przy użyciu <xref:System.Text.UTF8Encoding.GetCharCount%2A> lub. <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="7b480-499">You might also want to consider a different approach using <xref:System.Text.UTF8Encoding.GetCharCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7b480-500"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>nie ma relacji do <xref:System.Text.UTF8Encoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="7b480-500"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.UTF8Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="7b480-501">Jeśli aplikacja wymaga użycia <xref:System.Text.UTF8Encoding.GetBytes%2A>funkcji podobnej do, należy użyć. <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="7b480-501">If your application needs a similar function to use with <xref:System.Text.UTF8Encoding.GetBytes%2A>, it should use <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7b480-502">`GetMaxCharCount(N)`nie musi być taka sama jak `N* GetMaxCharCount(1)`wartość.</span><span class="sxs-lookup"><span data-stu-id="7b480-502">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b480-503">W poniższym przykładzie zastosowano <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> metodę, aby zwrócić maksymalną liczbę znaków wygenerowanych przez dekodowanie określonej liczby bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-503">The following example uses the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method to return the maximum number of characters produced by decoding a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7b480-504"><paramref name="byteCount" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="7b480-504"><paramref name="byteCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="7b480-505">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-505">-or-</span></span> 
<span data-ttu-id="7b480-506">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może zostać zwrócona jako liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="7b480-506">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="7b480-507">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="7b480-507">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="7b480-508">- i -</span><span class="sxs-lookup"><span data-stu-id="7b480-508">-and-</span></span> 
 <span data-ttu-id="7b480-509"><see cref="P:System.Text.Encoding.DecoderFallback" />jest ustawiony na <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-509"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="override this.GetPreamble : unit -&gt; byte[]" Usage="uTF8Encoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7b480-510">Zwraca znacznik kolejności bajtów Unicode zakodowany w formacie UTF-8, jeśli <see cref="T:System.Text.UTF8Encoding" /> obiekt kodowania jest skonfigurowany do dostarczania jednego.</span><span class="sxs-lookup"><span data-stu-id="7b480-510">Returns a Unicode byte order mark encoded in UTF-8 format, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span></span></summary>
        <returns><span data-ttu-id="7b480-511">Tablica bajtowa zawierająca znacznik kolejności bajtów Unicode, jeśli <see cref="T:System.Text.UTF8Encoding" /> obiekt kodowania jest skonfigurowany do dostarczania jednego.</span><span class="sxs-lookup"><span data-stu-id="7b480-511">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span></span> <span data-ttu-id="7b480-512">W przeciwnym razie ta metoda zwraca tablicę bajtów o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="7b480-512">Otherwise, this method returns a zero-length byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-513"><xref:System.Text.UTF8Encoding> Obiekt może dostarczyć preambułę, która jest tablicą bajtową, która może być poprzedzona sekwencją bajtów, które wynikają z procesu kodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-513">The <xref:System.Text.UTF8Encoding> object can provide a preamble, which is a byte array that can be prefixed to the sequence of bytes that result from the encoding process.</span></span> <span data-ttu-id="7b480-514">Poprzednia sekwencja zakodowanych bajtów ze znacznikiem kolejności bajtów (punkt kodu U + FEFF) pomaga dekoderowi określić kolejność bajtów i format transformacji lub UTF.</span><span class="sxs-lookup"><span data-stu-id="7b480-514">Prefacing a sequence of encoded bytes with a byte order mark (code point U+FEFF) helps the decoder determine the byte order and the transformation format, or UTF.</span></span> <span data-ttu-id="7b480-515">Znacznik kolejności bajtów (BOM) Unicode jest serializowany jako 0xEF 0xBB 0xBF.</span><span class="sxs-lookup"><span data-stu-id="7b480-515">The Unicode byte order mark (BOM) is serialized as 0xEF 0xBB 0xBF.</span></span> <span data-ttu-id="7b480-516">Należy pamiętać, że standard Unicode nie wymaga ani nie zaleca użycia BOM dla strumieni zakodowanych w formacie UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7b480-516">Note that the Unicode Standard neither requires nor recommends the use of a BOM for UTF-8 encoded streams.</span></span>  
  
 <span data-ttu-id="7b480-517">Można utworzyć wystąpienie <xref:System.Text.UTF8Encoding> obiektu, którego <xref:System.Text.UTF8Encoding.GetPreamble%2A> Metoda zwraca prawidłowy BOM w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="7b480-517">You can instantiate a <xref:System.Text.UTF8Encoding> object whose <xref:System.Text.UTF8Encoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="7b480-518">Pobierając <xref:System.Text.UTF8Encoding> obiekt zwrócony <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> przez właściwość.</span><span class="sxs-lookup"><span data-stu-id="7b480-518">By retrieving the <xref:System.Text.UTF8Encoding> object returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="7b480-519">Wywoływanie <xref:System.Text.UTF8Encoding> konstruktora `encoderShouldEmitUTF8Identifier` z parametrem i ustawienie jego wartości ustawionej na `true`.</span><span class="sxs-lookup"><span data-stu-id="7b480-519">By calling a <xref:System.Text.UTF8Encoding> constructor with a `encoderShouldEmitUTF8Identifier` parameter and setting its value set to `true`.</span></span>  
  
 <span data-ttu-id="7b480-520">Wszystkie inne <xref:System.Text.UTF8Encoding> obiekty są skonfigurowane tak, aby zwracały pustą tablicę, a nie prawidłowy BOM.</span><span class="sxs-lookup"><span data-stu-id="7b480-520">All other <xref:System.Text.UTF8Encoding> objects are configured to return an empty array rather than a valid BOM.</span></span>  
  
 <span data-ttu-id="7b480-521">BOM zapewnia niemal pewnej identyfikacji kodowania dla plików, które w przeciwnym razie utraciły odwołanie do kodowania, takie jak nieoznakowane lub niewłaściwie oznakowane dane sieci Web lub losowe pliki tekstowe przechowywane, gdy firma nie ma obaw międzynarodowych.</span><span class="sxs-lookup"><span data-stu-id="7b480-521">The BOM provide nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</span></span> <span data-ttu-id="7b480-522">Często można uniknąć problemów z użytkownikami, jeśli dane są spójne i poprawnie oznakowane.</span><span class="sxs-lookup"><span data-stu-id="7b480-522">Often user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="7b480-523">W przypadku standardów, które zapewniają typ kodowania, BOM jest nieco nadmiarowy.</span><span class="sxs-lookup"><span data-stu-id="7b480-523">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="7b480-524">Można go jednak użyć, aby ułatwić serwerowi wysyłanie poprawnego nagłówka kodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-524">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="7b480-525">Alternatywnie, może być używany jako rezerwa w przypadku, gdy kodowanie jest tracone.</span><span class="sxs-lookup"><span data-stu-id="7b480-525">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="7b480-526">Istnieją pewne wady dotyczące korzystania z BOM.</span><span class="sxs-lookup"><span data-stu-id="7b480-526">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="7b480-527">Na przykład poznanie sposobu ograniczania pól bazy danych, które używają BOM, może być trudne.</span><span class="sxs-lookup"><span data-stu-id="7b480-527">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="7b480-528">Łączenie plików może być również problemem, na przykład podczas scalania plików w taki sposób, że niezbędny znak może kończyć się w danych.</span><span class="sxs-lookup"><span data-stu-id="7b480-528">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="7b480-529">Pomimo tego, że użycie BOM jest zdecydowanie zalecane.</span><span class="sxs-lookup"><span data-stu-id="7b480-529">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="7b480-530">Aby uzyskać więcej informacji na temat kolejności bajtów i znacznika kolejności bajtów, zobacz Standard Unicode na [stronie głównej Unicode](https://go.microsoft.com/fwlink/?LinkId=37123).</span><span class="sxs-lookup"><span data-stu-id="7b480-530">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7b480-531">Aby upewnić się, że zakodowane bajty są zdekodowane prawidłowo, gdy są zapisywane jako plik lub jako strumień, można prefiksować początek strumienia zakodowanych bajtów z preambułą.</span><span class="sxs-lookup"><span data-stu-id="7b480-531">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix the beginning of a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="7b480-532">Należy zauważyć, <xref:System.Text.UTF8Encoding.GetBytes%2A> że metoda nie dołącza BOM do sekwencji zakodowanych bajtów; dostarczenie BOM na początku odpowiedniego strumienia bajtów jest odpowiedzialnością dla deweloperów.</span><span class="sxs-lookup"><span data-stu-id="7b480-532">Note that the <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>
  
## Examples  
 <span data-ttu-id="7b480-533">W poniższym przykładzie zastosowano <xref:System.Text.UTF8Encoding.GetPreamble%2A> metodę w celu zwrócenia znacznika kolejności bajtów Unicode zakodowanego w formacie UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7b480-533">The following example uses the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to return the Unicode byte order mark encoded in UTF-8 format.</span></span> <span data-ttu-id="7b480-534">Należy zauważyć, że Konstruktor bez parametrów <xref:System.Text.UTF8Encoding> dla nie zawiera preambuły.</span><span class="sxs-lookup"><span data-stu-id="7b480-534">Notice that the parameterless constructor for <xref:System.Text.UTF8Encoding> does not provide a preamble.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/CPP/getpreamble-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/CS/getpreamble-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/VB/getpreamble-.vb#1)]  
  
 <span data-ttu-id="7b480-535">W poniższym przykładzie tworzone są dwa <xref:System.Text.UTF8Encoding> obiekty, pierwsze przez wywołanie <xref:System.Text.UTF8Encoding.%23ctor> konstruktora bez parametrów, który nie zawiera BOM, a drugi przez `encoderShouldEmitUTF8Identifier` wywołanie <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29> konstruktora z argumentem ustawionym na `true`.</span><span class="sxs-lookup"><span data-stu-id="7b480-535">The following example instantiates two <xref:System.Text.UTF8Encoding> objects, the first by calling the parameterless <xref:System.Text.UTF8Encoding.%23ctor> constructor, which does not provide a BOM, and the second by calling the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29> constructor with its `encoderShouldEmitUTF8Identifier` argument set to `true`.</span></span> <span data-ttu-id="7b480-536">Następnie wywołuje <xref:System.Text.UTF8Encoding.GetPreamble%2A> metodę, aby napisać BOM do pliku przed zapisaniem ciągu zakodowanego UF8.</span><span class="sxs-lookup"><span data-stu-id="7b480-536">It then calls the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to write the BOM to a file before writing a UF8-encoded string.</span></span> <span data-ttu-id="7b480-537">Jak widać dane wyjściowe konsoli z przykładu, plik, który zapisuje bajty z drugiego kodera, ma trzy więcej bajtów niż pierwszy.</span><span class="sxs-lookup"><span data-stu-id="7b480-537">As the console output from the example shows, the file that saves the bytes from the second encoder has three more bytes than the first.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getpreamble/cs/getpreamble1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getpreamble/vb/getpreamble1.vb#1)]  
  
 <span data-ttu-id="7b480-538">Pliki można także porównać przy użyciu `fc` polecenia w oknie konsoli lub można sprawdzić pliki w edytorze tekstów zawierający tryb widoku szesnastkowego.</span><span class="sxs-lookup"><span data-stu-id="7b480-538">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="7b480-539">Należy pamiętać, że gdy plik zostanie otwarty w edytorze obsługującym kodowanie UTF-8, nie jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="7b480-539">Note that when the file is opened in an editor that supports UTF-8, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="uTF8Encoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="7b480-540">Tablica bajtowa zawierająca sekwencję bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-540">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="7b480-541">Indeks pierwszego bajtu do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-541">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="7b480-542">Liczba bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="7b480-542">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="7b480-543">Dekoduje zakres bajtów z tablicy bajtowej do ciągu.</span><span class="sxs-lookup"><span data-stu-id="7b480-543">Decodes a range of bytes from a byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="7b480-544">A <see cref="T:System.String" /> zawiera wyniki dekodowania określonej sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-544">A <see cref="T:System.String" /> containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b480-545">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje zgłoszenie wyjątku przez <xref:System.ArgumentException> tę metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-545">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="7b480-546">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="7b480-546">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="7b480-547">Jeśli zakres bajtów do zdekodowania obejmuje oznaczenie kolejności bajtów (BOM) i tablicę bajtową zwróconą przez metodę typu nieopartego na BOM, znak U + FFFE jest zawarty w tablicy znaków zwracanej przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-547">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="7b480-548">Można go usunąć, wywołując <xref:System.String.TrimStart%2A?displayProperty=nameWithType> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-548">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="7b480-549">Dane do przekonwertowania, takie jak dane odczytane ze strumienia, mogą być dostępne tylko w blokach sekwencyjnych.</span><span class="sxs-lookup"><span data-stu-id="7b480-549">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="7b480-550">W tym przypadku lub, jeśli ilość danych jest tak duża, że musi <xref:System.Text.Decoder> być podzielona na mniejsze bloki, użyj <xref:System.Text.Encoder> lub <xref:System.Text.UTF8Encoding.GetDecoder%2A> odpowiednio do metody lub <xref:System.Text.UTF8Encoding.GetEncoder%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7b480-550">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b480-551">W poniższym przykładzie jest inicjowana tablica przez wywołanie <xref:System.Text.UTF8Encoding.GetByteCount%2A> metody w celu określenia dokładnie liczby bajtów wymaganych przez zakodowany ciąg, a następnie dodania rozmiaru znacznika kolejności bajtów (BOM).</span><span class="sxs-lookup"><span data-stu-id="7b480-551">The following example initializes an array by calling the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="7b480-552">Przykład następnie wywołuje <xref:System.Text.UTF8Encoding.GetPreamble%2A> metodę w celu zapisania BOM do tablicy przed <xref:System.Text.UTF8Encoding.GetBytes%2A> wywołaniem metody w celu zapisania zakodowanych bajtów do tablicy.</span><span class="sxs-lookup"><span data-stu-id="7b480-552">The example then calls the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="7b480-553">Przykład następnie wywołuje metodę, <xref:System.Text.UTF8Encoding.GetString%2A> Aby zdekodować ciąg.</span><span class="sxs-lookup"><span data-stu-id="7b480-553">The example then calls the <xref:System.Text.UTF8Encoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/cs/getstring1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/vb/getstring1.vb#1)]  
  
 <span data-ttu-id="7b480-554">Należy zauważyć, że w tym przypadku zdekodowany ciąg różni się od oryginalnego ciągu, ponieważ zaczyna się od 16-bitowego znaku kolejności bajtów U + FFFD.</span><span class="sxs-lookup"><span data-stu-id="7b480-554">Note that in this case the decoded string differs from the original string, since it begins with a 16-bit byte order mark U+FFFD.</span></span> <span data-ttu-id="7b480-555">Oznacza to, że dwa ciągi będą porównywane jako nierówne i że jeśli ciąg jest wyprowadzany, będzie on wyświetlany jako znak zastępczy "?".</span><span class="sxs-lookup"><span data-stu-id="7b480-555">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span> <span data-ttu-id="7b480-556">Aby usunąć BOM na początku ciągu, można wywołać <xref:System.String.TrimStart%2A?displayProperty=nameWithType> metodę.</span><span class="sxs-lookup"><span data-stu-id="7b480-556">To remove the BOM at the beginning of the string, you can call the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7b480-557"><paramref name="bytes" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-557"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7b480-558"><paramref name="index" />lub <paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="7b480-558"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="7b480-559">—lub—</span><span class="sxs-lookup"><span data-stu-id="7b480-559">-or-</span></span> 
 <span data-ttu-id="7b480-560"><paramref name="index" />i <paramref name="count" /> nie należy zauważyć prawidłowego zakresu w <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-560"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7b480-561">Wykrywanie błędów jest włączone i <paramref name="bytes" /> zawiera nieprawidłową sekwencję bajtów.</span><span class="sxs-lookup"><span data-stu-id="7b480-561">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="7b480-562">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="7b480-562">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)</span></span> 
<span data-ttu-id="7b480-563">- i -</span><span class="sxs-lookup"><span data-stu-id="7b480-563">-and-</span></span> 
 <span data-ttu-id="7b480-564"><see cref="P:System.Text.Encoding.DecoderFallback" />jest ustawiony na <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="7b480-564"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Preamble">
      <MemberSignature Language="C#" Value="public override ReadOnlySpan&lt;byte&gt; Preamble { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; Preamble" />
      <MemberSignature Language="DocId" Value="P:System.Text.UTF8Encoding.Preamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Preamble As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property ReadOnlySpan&lt;System::Byte&gt; Preamble { ReadOnlySpan&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Preamble : ReadOnlySpan&lt;byte&gt;" Usage="System.Text.UTF8Encoding.Preamble" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>