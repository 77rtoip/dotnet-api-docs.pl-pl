<Type Name="UnicodeEncoding" FullName="System.Text.UnicodeEncoding">
  <TypeSignature Language="C#" Value="public class UnicodeEncoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UnicodeEncoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UnicodeEncoding" />
  <TypeSignature Language="VB.NET" Value="Public Class UnicodeEncoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnicodeEncoding : System::Text::Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6ee84-101">Reprezentuje kodowania UTF-16 znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="6ee84-101">Represents a UTF-16 encoding of Unicode characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-102">Kodowanie jest procesem przekształcania zestawu znaków Unicode do sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="6ee84-103">Dekodowanie jest procesem przekształcania sekwencję bajtów zakodowanego do zestawu znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="6ee84-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="6ee84-104">[Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) przypisuje do każdego znaku w każdej obsługiwanej skryptu punkt kodu (numer).</span><span class="sxs-lookup"><span data-stu-id="6ee84-104">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) assigns a code point (a number) to each character in every supported script.</span></span> <span data-ttu-id="6ee84-105">Format transformacji Unicode (UTF) to sposób kodowania tego punktu kodu.</span><span class="sxs-lookup"><span data-stu-id="6ee84-105">A Unicode Transformation Format (UTF) is a way to encode that code point.</span></span> <span data-ttu-id="6ee84-106">[Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) używa następujących UTFs:</span><span class="sxs-lookup"><span data-stu-id="6ee84-106">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) uses the following UTFs:</span></span>  
  
-   <span data-ttu-id="6ee84-107">UTF-8, który reprezentuje każdy punkt kodu sekwencję bajtów 1 do 4.</span><span class="sxs-lookup"><span data-stu-id="6ee84-107">UTF-8, which represents each code point as a sequence of one to four bytes.</span></span>  
  
-   <span data-ttu-id="6ee84-108">UTF-16, który reprezentuje każdy punkt kodu jako sekwencja jednej do dwóch 16-bitowych liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="6ee84-108">UTF-16, which represents each code point as a sequence of one to two 16-bit integers.</span></span>  
  
-   <span data-ttu-id="6ee84-109">UTF-32 reprezentuje każdego punktu kod jako 32-bitową liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="6ee84-109">UTF-32, which represents each code point as a 32-bit integer.</span></span>  
  
 <span data-ttu-id="6ee84-110">Aby uzyskać więcej informacji o UTFs i inne kodowanie obsługiwane przez <xref:System.Text>, zobacz [kodowania znaków w programie .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="6ee84-110">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="6ee84-111"><xref:System.Text.UnicodeEncoding> Klasa reprezentuje kodowania UTF-16.</span><span class="sxs-lookup"><span data-stu-id="6ee84-111">The <xref:System.Text.UnicodeEncoding> class represents a UTF-16 encoding.</span></span> <span data-ttu-id="6ee84-112">Koder można użyć albo kolejności bajtów big endian (najbardziej znaczący bajt pierwszy) lub little endian bajtów kolejności (najmniej znaczący bajt pierwszy).</span><span class="sxs-lookup"><span data-stu-id="6ee84-112">The encoder can use either big endian byte order (most significant byte first) or little endian byte order (least significant byte first).</span></span> <span data-ttu-id="6ee84-113">Na przykład Wielka litera (punkt kodu U + 0041) jest szeregowana jako zgodna (w formacie szesnastkowym):</span><span class="sxs-lookup"><span data-stu-id="6ee84-113">For example, the Latin Capital Letter A (code point U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="6ee84-114">Kolejności bajtów big endian: 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="6ee84-114">Big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="6ee84-115">Little endian bajtów kolejności: 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="6ee84-115">Little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="6ee84-116">Jest to zwykle wydajniejszym rozwiązaniem przechowywania znaków Unicode przy użyciu kolejność bajtów natywnej danej platformy.</span><span class="sxs-lookup"><span data-stu-id="6ee84-116">It is generally more efficient to store Unicode characters using the native byte order of a particular platform.</span></span> <span data-ttu-id="6ee84-117">Na przykład lepiej jest użycie małego kolejność endian bajtów little endian platform, takich jak komputery Intel.</span><span class="sxs-lookup"><span data-stu-id="6ee84-117">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span> <span data-ttu-id="6ee84-118"><xref:System.Text.UnicodeEncoding> Klasa odpowiada stron kodowych Windows 1200 (little endian bajtów kolejność) i 1201 (kolejności bajtów big endian).</span><span class="sxs-lookup"><span data-stu-id="6ee84-118">The <xref:System.Text.UnicodeEncoding> class corresponds to the Windows code pages 1200 (little endian byte order) and 1201 (big endian byte order).</span></span> <span data-ttu-id="6ee84-119">Można określić "kolejności bajtów" Architektura określonego przez wywołanie metody <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="6ee84-119">You can determine the "endianness" of a particular architecture by calling the <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6ee84-120">Opcjonalnie <xref:System.Text.UnicodeEncoding> obiektu zawiera znacznik kolejności bajtów (BOM), który jest tablicą bajtów, które mogą być poprzedzona do sekwencji bajtów procesu kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-120">Optionally, the <xref:System.Text.UnicodeEncoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="6ee84-121">Jeśli preambuły zawiera znacznik kolejności bajtów (BOM), pomaga dekodera określanie kolejności bajtów i format transformacji lub UTF.</span><span class="sxs-lookup"><span data-stu-id="6ee84-121">If the preamble contains a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF.</span></span>  
  
 <span data-ttu-id="6ee84-122">Jeśli <xref:System.Text.UnicodeEncoding> wystąpienie jest skonfigurowane w celu zapewnienia BOM, mogą być pobierane przez wywołanie metody <xref:System.Text.UnicodeEncoding.GetPreamble%2A> metody; w przeciwnym razie metoda zwraca pustą tablicę.</span><span class="sxs-lookup"><span data-stu-id="6ee84-122">If the <xref:System.Text.UnicodeEncoding> instance is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="6ee84-123">Należy zauważyć, że nawet jeśli <xref:System.Text.UnicodeEncoding> obiektu jest skonfigurowany na potrzeby obsługi BOM, musi zawierać BOM na początku strumień bajtów zakodowanego zależnie od potrzeb; kodowania metody <xref:System.Text.UnicodeEncoding> klasy nie należy tego robić automatycznie.</span><span class="sxs-lookup"><span data-stu-id="6ee84-123">Note that, even if a <xref:System.Text.UnicodeEncoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UnicodeEncoding> class do not do this automatically.</span></span>  
  
 <span data-ttu-id="6ee84-124">Aby włączyć wykrywanie błędów i zabezpieczyć wystąpienia klasy, należy utworzyć wystąpienia <xref:System.Text.UnicodeEncoding> obiektu przez wywołanie metody <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> Konstruktor i ustawienie jej `throwOnInvalidBytes` argument `true`.</span><span class="sxs-lookup"><span data-stu-id="6ee84-124">To enable error detection and to make the class instance more secure, you should instantiate a <xref:System.Text.UnicodeEncoding> object by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span> <span data-ttu-id="6ee84-125">Z wykrywanie błędów wykrywający nieprawidłową sekwencję znaków lub bajtów metodę <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-125">With error detection, a method that detects an invalid sequence of characters or bytes throws a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6ee84-126">Bez wykrywanie błędów nie wyjątku i Nieprawidłowa sekwencja jest brany pod uwagę.</span><span class="sxs-lookup"><span data-stu-id="6ee84-126">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
 <span data-ttu-id="6ee84-127">Można utworzyć wystąpienia <xref:System.Text.UnicodeEncoding> obiekt na kilka sposobów, w zależności od tego, czy chcesz go zapewnienie znacznika kolejności bajtów (BOM), czy ma big-endian lub little endian kodowania i określa, czy chcesz włączyć wykrywanie błędów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-127">You can instantiate a <xref:System.Text.UnicodeEncoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM), whether you want big-endian or little-endian encoding, and whether you want to enable error detection.</span></span> <span data-ttu-id="6ee84-128">W poniższej tabeli wymieniono <xref:System.Text.UnicodeEncoding> konstruktory i <xref:System.Text.Encoding> właściwości, które zwracają <xref:System.Text.UnicodeEncoding> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6ee84-128">The following table lists the <xref:System.Text.UnicodeEncoding> constructors and the <xref:System.Text.Encoding> properties that return a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
|<span data-ttu-id="6ee84-129">Element członkowski</span><span class="sxs-lookup"><span data-stu-id="6ee84-129">Member</span></span>|<span data-ttu-id="6ee84-130">Kolejności bajtów</span><span class="sxs-lookup"><span data-stu-id="6ee84-130">Endianness</span></span>|<span data-ttu-id="6ee84-131">BOM</span><span class="sxs-lookup"><span data-stu-id="6ee84-131">BOM</span></span>|<span data-ttu-id="6ee84-132">Wykrywanie błędów</span><span class="sxs-lookup"><span data-stu-id="6ee84-132">Error detection</span></span>|  
|------------|----------------|---------|---------------------|  
|<xref:System.Text.Encoding.BigEndianUnicode%2A>|<span data-ttu-id="6ee84-133">Big-endian</span><span class="sxs-lookup"><span data-stu-id="6ee84-133">Big-endian</span></span>|<span data-ttu-id="6ee84-134">Tak</span><span class="sxs-lookup"><span data-stu-id="6ee84-134">Yes</span></span>|<span data-ttu-id="6ee84-135">(Zastępczy rezerwowe nie)</span><span class="sxs-lookup"><span data-stu-id="6ee84-135">No (Replacement fallback)</span></span>|  
|<xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>|<span data-ttu-id="6ee84-136">Little endian</span><span class="sxs-lookup"><span data-stu-id="6ee84-136">Little-endian</span></span>|<span data-ttu-id="6ee84-137">Tak</span><span class="sxs-lookup"><span data-stu-id="6ee84-137">Yes</span></span>|<span data-ttu-id="6ee84-138">(Zastępczy rezerwowe nie)</span><span class="sxs-lookup"><span data-stu-id="6ee84-138">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="6ee84-139">Little endian</span><span class="sxs-lookup"><span data-stu-id="6ee84-139">Little-endian</span></span>|<span data-ttu-id="6ee84-140">Tak</span><span class="sxs-lookup"><span data-stu-id="6ee84-140">Yes</span></span>|<span data-ttu-id="6ee84-141">(Zastępczy rezerwowe nie)</span><span class="sxs-lookup"><span data-stu-id="6ee84-141">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29>|<span data-ttu-id="6ee84-142">Możliwość konfiguracji</span><span class="sxs-lookup"><span data-stu-id="6ee84-142">Configurable</span></span>|<span data-ttu-id="6ee84-143">Możliwość konfiguracji</span><span class="sxs-lookup"><span data-stu-id="6ee84-143">Configurable</span></span>|<span data-ttu-id="6ee84-144">(Zastępczy rezerwowe nie)</span><span class="sxs-lookup"><span data-stu-id="6ee84-144">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="6ee84-145">Możliwość konfiguracji</span><span class="sxs-lookup"><span data-stu-id="6ee84-145">Configurable</span></span>|<span data-ttu-id="6ee84-146">Możliwość konfiguracji</span><span class="sxs-lookup"><span data-stu-id="6ee84-146">Configurable</span></span>|<span data-ttu-id="6ee84-147">Możliwość konfiguracji</span><span class="sxs-lookup"><span data-stu-id="6ee84-147">Configurable</span></span>|  
  
 <span data-ttu-id="6ee84-148"><xref:System.Text.UnicodeEncoding.GetByteCount%2A> Metoda określa liczbę bajtów powoduje Kodowanie zestawu znaków Unicode i <xref:System.Text.UnicodeEncoding.GetBytes%2A> metoda przeprowadza rzeczywistym kodowaniem.</span><span class="sxs-lookup"><span data-stu-id="6ee84-148">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="6ee84-149">Podobnie <xref:System.Text.UnicodeEncoding.GetCharCount%2A> Metoda określa, ile znaków powoduje dekodowania sekwencję bajtów i <xref:System.Text.UnicodeEncoding.GetChars%2A> i <xref:System.Text.UnicodeEncoding.GetString%2A> metody wykonać dekodowanie rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="6ee84-149">Likewise, the <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UnicodeEncoding.GetChars%2A> and <xref:System.Text.UnicodeEncoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="6ee84-150">Koder i dekoder, który może zapisać informacji o stanie podczas kodowania lub dekodowania danych obejmującej wiele bloków (na przykład ciąg znaków 1 milion zakodowany w segmentach 100 000 znaków), użyj <xref:System.Text.UnicodeEncoding.GetEncoder%2A> i <xref:System.Text.UnicodeEncoding.GetDecoder%2A> właściwości odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="6ee84-150">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> and <xref:System.Text.UnicodeEncoding.GetDecoder%2A> properties, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ee84-151">W poniższym przykładzie pokazano sposób kodowania ciąg znaków Unicode do tablicy typu byte przy użyciu <xref:System.Text.UnicodeEncoding> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6ee84-151">The following example demonstrates how to encode a string of Unicode characters into a byte array by using a <xref:System.Text.UnicodeEncoding> object.</span></span> <span data-ttu-id="6ee84-152">Tablica bajtów jest dekodowany na ciąg, aby wykazać, że jest bez utraty danych.</span><span class="sxs-lookup"><span data-stu-id="6ee84-152">The byte array is decoded into a string to demonstrate that there is no loss of data.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/VB/snippet.vb#1)]  
  
 <span data-ttu-id="6ee84-153">W poniższym przykładzie użyto tych samych parametrach jak poprzedni, z wyjątkiem tego, który zapisuje bajty zakodowanym w pliku i prefiksy strumień bajtów z znacznika kolejności bajtów (BOM).</span><span class="sxs-lookup"><span data-stu-id="6ee84-153">The following example uses the same string as the previous one, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="6ee84-154">Następnie odczytuje plik na dwa sposoby: jako pliku tekstowego za pomocą <xref:System.IO.StreamReader> obiekt; i jako plik binarny.</span><span class="sxs-lookup"><span data-stu-id="6ee84-154">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="6ee84-155">Jak można oczekiwać w przypadku ani BOM znajduje się w ciągu nowo odczytu.</span><span class="sxs-lookup"><span data-stu-id="6ee84-155">As you would expect, in neither case is the BOM included in the newly read string.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CS/bom1.cs#2)]
 [!code-vb[System.Text.UnicodeEncoding Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/VB/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.UTF32Encoding" />
    <altmember cref="T:System.Text.UTF8Encoding" />
    <altmember cref="T:System.Text.UTF7Encoding" />
    <altmember cref="T:System.Text.ASCIIEncoding" />
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="T:System.Globalization.CharUnicodeInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6ee84-156">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.UnicodeEncoding" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="6ee84-156">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ee84-157">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.UnicodeEncoding" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="6ee84-157">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-158">Ten konstruktor tworzy wystąpienie, które używa małego kolejności bajtów endian, zawiera znacznik kolejności bajtów Unicode i nie zgłasza wyjątek po wykryciu Nieprawidłowe kodowanie.</span><span class="sxs-lookup"><span data-stu-id="6ee84-158">This constructor creates an instance that uses the little endian byte order, provides a Unicode byte order mark, and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ee84-159">Ze względów bezpieczeństwa należy włączyć wykrywanie błędów, wywołując <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> Konstruktor i ustawienie jej `throwOnInvalidBytes` argument `true`.</span><span class="sxs-lookup"><span data-stu-id="6ee84-159">For security reasons, you should enable error detection by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ee84-160">W poniższym przykładzie pokazano, jak utworzyć nową <xref:System.Text.UnicodeEncoding> wystąpień i wyświetlanie nazwy kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-160">The following example demonstrates how to create a new <xref:System.Text.UnicodeEncoding> instance and display the name of the encoding.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding (bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding(bool bigEndian, bool byteOrderMark);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="6ee84-161"><see langword="true" /> Aby użyć kolejności bajtów big endian (najbardziej znaczący bajt pierwszy), lub <see langword="false" /> do kolejność little endian bajtów (najmniej znaczący bajt pierwszy).</span><span class="sxs-lookup"><span data-stu-id="6ee84-161"><see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span></span></param>
        <param name="byteOrderMark">
          <span data-ttu-id="6ee84-162"><see langword="true" /> Aby określić, że <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> metoda zwraca znacznik kolejności bajtów Unicode; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-162"><see langword="true" /> to specify that the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6ee84-163">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.UnicodeEncoding" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="6ee84-163">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span> <span data-ttu-id="6ee84-164">Parametry określają, czy używać kolejności bajtów big endian oraz tego, czy <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> metoda zwraca znacznik kolejności bajtów Unicode.</span><span class="sxs-lookup"><span data-stu-id="6ee84-164">Parameters specify whether to use the big endian byte order and whether the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-165">Ten konstruktor tworzy wystąpienie, które nie zgłasza wyjątek po wykryciu Nieprawidłowe kodowanie.</span><span class="sxs-lookup"><span data-stu-id="6ee84-165">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ee84-166">Ze względów bezpieczeństwa należy włączyć wykrywanie błędów, wywołując <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> Konstruktor i ustawienie jej `throwOnInvalidBytes` argument `true`.</span><span class="sxs-lookup"><span data-stu-id="6ee84-166">For security reasons, you should enable error detection by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span>  
  
 <span data-ttu-id="6ee84-167">`byteOrderMark` Parametr steruje działaniem <xref:System.Text.UnicodeEncoding.GetPreamble%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6ee84-167">The `byteOrderMark` parameter controls the operation of the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="6ee84-168">Jeśli `true`, metoda zwraca tablicę bajtów zawierającą znacznika kolejności bajtów Unicode (BOM) w formacie UTF-16.</span><span class="sxs-lookup"><span data-stu-id="6ee84-168">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-16 format.</span></span>  <span data-ttu-id="6ee84-169">Jeśli `false`, zwraca tablicę bajtów o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="6ee84-169">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="6ee84-170">Jednak ustawienie `byteOrderMark` do `true` nie powoduje <xref:System.Text.UnicodeEncoding.GetBytes%2A> metodę prefiksu BOM na początku tablicy bajtów ani go powoduje <xref:System.Text.UnicodeEncoding.GetByteCount%2A> metodę w celu uwzględnienia liczba bajtów w BOM liczba bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-170">However, setting `byteOrderMark` to `true` does not cause the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ee84-171">W poniższym przykładzie pokazano, jak utworzyć nową <xref:System.Text.UnicodeEncoding> znacznik kolejności wystąpienia określająca, czy do obsługi porządkowanie little endian lub big endian bajt i bajtów Unicode.</span><span class="sxs-lookup"><span data-stu-id="6ee84-171">The following example demonstrates how to create a new <xref:System.Text.UnicodeEncoding> instance specifying whether to support little endian or big endian byte ordering and the Unicode byte order mark.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding (bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean, throwOnInvalidBytes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding(bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidBytes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian">
          <span data-ttu-id="6ee84-172"><see langword="true" /> Aby użyć kolejności bajtów big endian (najbardziej znaczący bajt pierwszy); <see langword="false" /> do kolejność little endian bajtów (najmniej znaczący bajt pierwszy).</span><span class="sxs-lookup"><span data-stu-id="6ee84-172"><see langword="true" /> to use the big endian byte order (most significant byte first); <see langword="false" /> to use the little endian byte order (least significant byte first).</span></span></param>
        <param name="byteOrderMark">
          <span data-ttu-id="6ee84-173"><see langword="true" /> Aby określić, że <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> metoda zwraca znacznik kolejności bajtów Unicode; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-173"><see langword="true" /> to specify that the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span></span></param>
        <param name="throwOnInvalidBytes">
          <span data-ttu-id="6ee84-174"><see langword="true" /> Aby określić, czy wyjątek powinien generowany po wykryciu Nieprawidłowe kodowanie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-174"><see langword="true" /> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6ee84-175">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.UnicodeEncoding" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="6ee84-175">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span> <span data-ttu-id="6ee84-176">Parametry określają, czy ma być używany w kolejności bajtów big endian, czy ma zostać udostępniona znacznika kolejności bajtów Unicode i czy należy zgłosić wyjątek, jeśli zostanie wykryte nieprawidłowe kodowanie.</span><span class="sxs-lookup"><span data-stu-id="6ee84-176">Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-177">`byteOrderMark` Parametr steruje działaniem <xref:System.Text.UnicodeEncoding.GetPreamble%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6ee84-177">The `byteOrderMark` parameter controls the operation of the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="6ee84-178">Jeśli `true`, metoda zwraca tablicę bajtów zawierającą znacznika kolejności bajtów Unicode (BOM) w formacie UTF-16.</span><span class="sxs-lookup"><span data-stu-id="6ee84-178">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-16 format.</span></span>  <span data-ttu-id="6ee84-179">Jeśli `false`, zwraca tablicę bajtów o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="6ee84-179">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="6ee84-180">Jednak ustawienie `byteOrderMark` do `true` nie powoduje <xref:System.Text.UnicodeEncoding.GetBytes%2A> metodę prefiksu BOM na początku tablicy bajtów ani go powoduje <xref:System.Text.UnicodeEncoding.GetByteCount%2A> metodę w celu uwzględnienia liczba bajtów w BOM liczba bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-180">However, setting `byteOrderMark` to `true` does not cause the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
 <span data-ttu-id="6ee84-181">Jeśli `throwOnInvalidBytes` parametr jest `true`, zgłasza metodę, która wykrywa sekwencji nieprawidłowy bajt <xref:System.ArgumentException?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-181">If the `throwOnInvalidBytes` parameter is `true`, a method that detects an invalid byte sequence throws <xref:System.ArgumentException?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6ee84-182">W przeciwnym razie metoda nie zgłasza wyjątek i Nieprawidłowa sekwencja jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="6ee84-182">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ee84-183">Ze względów bezpieczeństwa zaleca się aplikacji umożliwiają utworzenie wystąpienia tego konstruktora <xref:System.Text.UnicodeEncoding> klasy i włączyć wykrywanie błędów przez ustawienie `throwOnInvalidBytes` do `true`.</span><span class="sxs-lookup"><span data-stu-id="6ee84-183">For security reasons, your applications are recommended to use this constructor to create an instance of the <xref:System.Text.UnicodeEncoding> class and turn on error detection by setting `throwOnInvalidBytes` to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ee84-184">W poniższym przykładzie pokazano zachowanie <xref:System.Text.UnicodeEncoding>, zarówno z włączoną wykrywanie błędów i bez niego.</span><span class="sxs-lookup"><span data-stu-id="6ee84-184">The following example demonstrates the behavior of <xref:System.Text.UnicodeEncoding>, both with error detection enabled and without.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/VB/errordetection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="CharSize">
      <MemberSignature Language="C#" Value="public const int CharSize = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 CharSize = (2)" />
      <MemberSignature Language="DocId" Value="F:System.Text.UnicodeEncoding.CharSize" />
      <MemberSignature Language="VB.NET" Value="Public Const CharSize As Integer  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: int CharSize = 2;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6ee84-185">Reprezentuje wyrażony w bajtach rozmiar znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="6ee84-185">Represents the Unicode character size in bytes.</span></span> <span data-ttu-id="6ee84-186">To pole jest stałą.</span><span class="sxs-lookup"><span data-stu-id="6ee84-186">This field is a constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-187">Wartość tego pola jest stałą podpisem 32-bitowe o wartości 2.</span><span class="sxs-lookup"><span data-stu-id="6ee84-187">The value of this field is a 32-bit signed constant with a value of 2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ee84-188">W poniższym przykładzie pokazano sposób zwracania wartości <xref:System.Text.UnicodeEncoding.CharSize> i wyświetl ją.</span><span class="sxs-lookup"><span data-stu-id="6ee84-188">The following example demonstrates how to return the value of <xref:System.Text.UnicodeEncoding.CharSize> and display it.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/CPP/charsize.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/CS/charsize.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/VB/charsize.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="6ee84-189">Obiekt do porównania z bieżącym obiektem.</span><span class="sxs-lookup"><span data-stu-id="6ee84-189">The object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="6ee84-190">Określa, czy określony <see cref="T:System.Object" /> jest taki sam, jak bieżący <see cref="T:System.Text.UnicodeEncoding" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6ee84-190">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Text.UnicodeEncoding" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="6ee84-191"><see langword="true" /> Jeśli <paramref name="value" /> jest wystąpieniem <see cref="T:System.Text.UnicodeEncoding" /> i jest taki sam jak bieżący obiekt, a w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-191"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UnicodeEncoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-192">Dwa <xref:System.Text.UnicodeEncoding> obiekty są traktowane jako równe, jeśli spełnione są wszystkie poniższe warunki:</span><span class="sxs-lookup"><span data-stu-id="6ee84-192">Two <xref:System.Text.UnicodeEncoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="6ee84-193">Oba obiekty używają tej samej kolejności bajtów (little endian lub big endian).</span><span class="sxs-lookup"><span data-stu-id="6ee84-193">Both objects use the same byte order (little-endian or big-endian).</span></span>  
  
-   <span data-ttu-id="6ee84-194">Oba obiekty Podaj znacznika kolejności bajtów, lub obie nie.</span><span class="sxs-lookup"><span data-stu-id="6ee84-194">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="6ee84-195">Zarówno do obiektów, użyj tego samego kodera rezerwowego.</span><span class="sxs-lookup"><span data-stu-id="6ee84-195">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="6ee84-196">Oba obiekty Użyj tego samego dekoder rezerwowego.</span><span class="sxs-lookup"><span data-stu-id="6ee84-196">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ee84-197">W poniższym przykładzie pokazano sposób użycia <xref:System.Text.UnicodeEncoding.Equals%2A> metody do testowania czy bieżące <xref:System.Text.UnicodeEncoding> obiekt jest taki sam innej <xref:System.Text.UnicodeEncoding> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6ee84-197">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.Equals%2A> method to test whether the current <xref:System.Text.UnicodeEncoding> object is equal to a different <xref:System.Text.UnicodeEncoding> object.</span></span> <span data-ttu-id="6ee84-198">Pięć <xref:System.Text.UnicodeEncoding> obiekty są tworzone i porównać i są wyświetlane wyniki porównania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-198">Five <xref:System.Text.UnicodeEncoding> objects are created and compared, and the results of the comparisons are displayed.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6ee84-199">Oblicza liczbę bajtów wyprodukowanych przez kodowanie zestawu znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-199">Calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="6ee84-200">Ciąg, który zawiera zestaw znaków kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-200">The string that contains the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="6ee84-201">Oblicza liczbę bajtów wyprodukowanych przez kodowanie znaków w określonym ciągu.</span><span class="sxs-lookup"><span data-stu-id="6ee84-201">Calculates the number of bytes produced by encoding the characters in the specified string.</span></span></summary>
        <returns><span data-ttu-id="6ee84-202">Liczba bajtów wyprodukowanych przez kodowanie określonych znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-202">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-203">Do obliczenia rozmiaru tablicy dokładne wymagane przez <xref:System.Text.UnicodeEncoding.GetBytes%2A> do przechowywania wynikowy bajtów, należy wywołać <xref:System.Text.UnicodeEncoding.GetByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6ee84-203">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6ee84-204">Aby obliczyć rozmiaru tablicy maksymalna, należy wywołać <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6ee84-204">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6ee84-205"><xref:System.Text.UnicodeEncoding.GetByteCount%2A> Metody przydziela zazwyczaj mniej pamięci podczas <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metody zazwyczaj wykonuje szybciej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-205">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6ee84-206">Wykrywanie błędów Nieprawidłowa sekwencja powoduje, że tę metodę, aby zgłosić <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-206">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6ee84-207">Bez wykrywanie błędów nieprawidłowe sekwencje są ignorowane, a nie wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6ee84-207">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ee84-208">Aby upewnić się, że zakodowanego bajtów są prawidłowo zdekodować podczas zapisywania pliku lub strumienia, można prefiks strumień bajtów zakodowanego z preambuły.</span><span class="sxs-lookup"><span data-stu-id="6ee84-208">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6ee84-209">Wstawianie preambuły na początku strumień bajtów (takich jak na początku serię bajtów do zapisania pliku) jest odpowiedzialność i liczba bajtów w preambuły nie zostaną uwzględnione w wartości zwracanej przez <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> — metoda.</span><span class="sxs-lookup"><span data-stu-id="6ee84-209">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ee84-210">Następujące przykładowe wywołania <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> i <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> metody do obliczenia maksymalnej rzeczywista liczba bajtów potrzebna, aby zakodować ciąg.</span><span class="sxs-lookup"><span data-stu-id="6ee84-210">The following example calls the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> and <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="6ee84-211">Wyświetla rzeczywistą liczbę bajtów wymaganą do zapisania strumień bajtów z znacznik kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-211">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ee84-212"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-212"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6ee84-213">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może być zwracany w postaci liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-213">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6ee84-214">Wykrywanie błędów jest włączone, a <paramref name="s" /> zawiera nieprawidłową sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-214">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6ee84-215">Wystąpił rezerwowe (zobacz [kodowania znaków w programie .NET Framework](~/docs/standard/base-types/character-encoding.md) na pełniejsze wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="6ee84-215">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="6ee84-216">- i -</span><span class="sxs-lookup"><span data-stu-id="6ee84-216">-and-</span></span>  
  
 <span data-ttu-id="6ee84-217"><see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-217"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="6ee84-218">Wskaźnik do pierwszego znaku do kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-218">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="6ee84-219">Liczba znaków do kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-219">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="6ee84-220">Oblicza liczbę bajtów wyprodukowanych przez kodowanie zestawu znaków, zaczynając od wskaźnika określony znak.</span><span class="sxs-lookup"><span data-stu-id="6ee84-220">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="6ee84-221">Liczba bajtów wyprodukowanych przez kodowanie określonych znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-221">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-222">Do obliczenia dokładne tablicy rozmiaru <xref:System.Text.UnicodeEncoding.GetBytes%2A> wymaga do przechowywania wynikowy bajtów, należy wywołać <xref:System.Text.UnicodeEncoding.GetByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6ee84-222">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetBytes%2A> requires to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6ee84-223">Aby obliczyć rozmiaru tablicy maksymalna, należy wywołać <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6ee84-223">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6ee84-224"><xref:System.Text.UnicodeEncoding.GetByteCount%2A> Metody przydziela zazwyczaj mniej pamięci podczas <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metody zazwyczaj wykonuje szybciej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-224">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6ee84-225">Wykrywanie błędów Nieprawidłowa sekwencja powoduje, że tę metodę, aby zgłosić <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-225">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6ee84-226">Bez wykrywanie błędów nieprawidłowe sekwencje są ignorowane, a nie wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6ee84-226">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ee84-227">Aby upewnić się, że zakodowanego bajtów są prawidłowo zdekodować podczas zapisywania pliku lub strumienia, można prefiks strumień bajtów zakodowanego z preambuły.</span><span class="sxs-lookup"><span data-stu-id="6ee84-227">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6ee84-228">Wstawianie preambuły na początku strumień bajtów (takich jak na początku serię bajtów do zapisania pliku) jest odpowiedzialność i liczba bajtów w preambuły nie zostaną uwzględnione w wartości zwracanej przez <xref:System.Text.UTF8Encoding.GetByteCount%2A> — metoda.</span><span class="sxs-lookup"><span data-stu-id="6ee84-228">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ee84-229"><paramref name="chars" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-229"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6ee84-230"><paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="6ee84-230"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="6ee84-231">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-231">-or-</span></span>  
  
 <span data-ttu-id="6ee84-232">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może być zwracany w postaci liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-232">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6ee84-233">Wykrywanie błędów jest włączone i <paramref name="chars" /> zawiera nieprawidłową sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-233">Error detection is enabled and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6ee84-234">Wystąpił rezerwowe (zobacz [kodowania znaków w programie .NET Framework](~/docs/standard/base-types/character-encoding.md) na pełniejsze wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="6ee84-234">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="6ee84-235">- i -</span><span class="sxs-lookup"><span data-stu-id="6ee84-235">-and-</span></span>  
  
 <span data-ttu-id="6ee84-236"><see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-236"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6ee84-237">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6ee84-237">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="6ee84-238">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="6ee84-238">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="6ee84-239">Tablica znaków zawierający zestaw znaków kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-239">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="6ee84-240">Indeks pierwszego znaku w celu kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-240">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="6ee84-241">Liczba znaków do kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-241">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="6ee84-242">Oblicza liczbę bajtów utworzonego przez zestaw znaków z określoną tablicę znaków kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-242">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="6ee84-243">Liczba bajtów wyprodukowanych przez kodowanie określonych znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-243">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-244">Do obliczenia rozmiaru tablicy dokładne wymagane przez <xref:System.Text.UnicodeEncoding.GetBytes%2A> do przechowywania wynikowy bajtów, aplikacja używa <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-244">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="6ee84-245">Aby obliczyć rozmiaru tablicy maksymalna, należy wywołać <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6ee84-245">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6ee84-246"><xref:System.Text.UnicodeEncoding.GetByteCount%2A> Metody przydziela zazwyczaj mniej pamięci podczas <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metody zazwyczaj wykonuje szybciej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-246">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6ee84-247">Wykrywanie błędów jest włączone, nieprawidłowa sekwencja powoduje, że tę metodę, aby zgłosić <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-247">With error detection enabled, an invalid sequence causes this method to throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6ee84-248">Bez wykrywanie błędów nieprawidłowe sekwencje są ignorowane, a nie wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6ee84-248">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6ee84-249">Aby upewnić się, że zakodowanego bajtów są prawidłowo zdekodować podczas zapisywania pliku lub strumienia, można prefiks strumień bajtów zakodowanego z preambuły.</span><span class="sxs-lookup"><span data-stu-id="6ee84-249">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6ee84-250">Wstawianie preambuły na początku strumień bajtów (takich jak na początku serię bajtów do zapisania pliku) jest odpowiedzialność i liczba bajtów w preambuły nie zostaną uwzględnione w wartości zwracanej przez <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> — metoda.</span><span class="sxs-lookup"><span data-stu-id="6ee84-250">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ee84-251">Poniższy przykład powoduje wypełnienie tablicy o Latin wielkich i małych liter oraz wywołania <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> metodę, aby określić liczbę bajtów potrzebne do kodowania znaki małe litery alfabetu łacińskiego.</span><span class="sxs-lookup"><span data-stu-id="6ee84-251">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="6ee84-252">Następnie wyświetla te informacje oraz całkowita liczba bajtów, niezbędny w przypadku dodaniu znacznik kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-252">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="6ee84-253">Następuje porównanie z wartością zwróconą przez ten numer <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metodę, która określa maksymalną liczbę bajtów potrzebne do kodowania znaki małe litery alfabetu łacińskiego.</span><span class="sxs-lookup"><span data-stu-id="6ee84-253">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="6ee84-254">Poniższy przykład wypełnia tablicę z kombinacją grecki i cyrylicy, znaków i wywołania <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> metodę, aby określić liczbę bajtów potrzebne do kodowania znaków cyrylicy.</span><span class="sxs-lookup"><span data-stu-id="6ee84-254">The following example populates an array with a combination of Greek and Cyrillic characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Cyrillic characters.</span></span> <span data-ttu-id="6ee84-255">Następnie wyświetla te informacje oraz całkowita liczba bajtów, niezbędny w przypadku dodaniu znacznik kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-255">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="6ee84-256">Następuje porównanie z wartością zwróconą przez ten numer <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metodę, która określa maksymalną liczbę bajtów potrzebne do kodowania znaków cyrylicy.</span><span class="sxs-lookup"><span data-stu-id="6ee84-256">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Cyrillic characters.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.UnicodeEncoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ee84-257"><paramref name="chars" /> jest <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="6ee84-257"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6ee84-258"><paramref name="index" /> lub <paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="6ee84-258"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="6ee84-259">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-259">-or-</span></span>  
  
 <span data-ttu-id="6ee84-260"><paramref name="index" /> i <paramref name="count" /> określa nieprawidłowy zakres w <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-260"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
 <span data-ttu-id="6ee84-261">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-261">-or-</span></span>  
  
 <span data-ttu-id="6ee84-262">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może być zwracany w postaci liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-262">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6ee84-263">Wykrywanie błędów jest włączone, a <paramref name="chars" /> zawiera nieprawidłową sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-263">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6ee84-264">Wystąpił rezerwowe (zobacz [kodowania znaków w programie .NET Framework](~/docs/standard/base-types/character-encoding.md) na pełniejsze wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="6ee84-264">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="6ee84-265">- i -</span><span class="sxs-lookup"><span data-stu-id="6ee84-265">-and-</span></span>  
  
 <span data-ttu-id="6ee84-266"><see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-266"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6ee84-267">Koduje zestaw znaków w kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-267">Encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="6ee84-268">Wskaźnik do pierwszego znaku do kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-268">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="6ee84-269">Liczba znaków do kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-269">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="6ee84-270">Wskaźnik do lokalizacji, w którym należy rozpocząć pisanie wynikowa sekwencja bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-270">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="6ee84-271">Maksymalna liczba bajtów do zapisania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-271">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="6ee84-272">Koduje zestaw znaków, zaczynając od wskaźnika określony znak do sekwencji bajtów, które są przechowywane, zaczynając od wskaźnika określonym bajcie.</span><span class="sxs-lookup"><span data-stu-id="6ee84-272">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="6ee84-273">Rzeczywista liczba bajtów zapisanych w lokalizacji wskazanej przez <paramref name="bytes" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="6ee84-273">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-274">Do obliczenia dokładne tablicy rozmiaru <xref:System.Text.UnicodeEncoding.GetBytes%2A> wymaga do przechowywania wynikowy bajtów, należy wywołać <xref:System.Text.UnicodeEncoding.GetByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6ee84-274">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetBytes%2A> requires to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6ee84-275">Aby obliczyć rozmiaru tablicy maksymalna, należy wywołać <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6ee84-275">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6ee84-276"><xref:System.Text.UnicodeEncoding.GetByteCount%2A> Metody przydziela zazwyczaj mniej pamięci podczas <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metody zazwyczaj wykonuje szybciej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-276">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6ee84-277">Wykrywanie błędów Nieprawidłowa sekwencja powoduje, że tę metodę, aby zgłosić <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-277">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6ee84-278">Bez wykrywanie błędów nieprawidłowe sekwencje są ignorowane, a nie wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6ee84-278">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6ee84-279">Dane do skonwertowania, takich jak dane odczytane ze strumienia, mogą być dostępne tylko w kolejnych bloków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-279">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="6ee84-280">W tym przypadku jeśli ilości danych jest tak duża, musi zostać podzielona na mniejsze bloki, należy użyć aplikacji <xref:System.Text.Decoder> lub <xref:System.Text.Encoder> dostarczony przez obiekt <xref:System.Text.UnicodeEncoding.GetDecoder%2A> lub <xref:System.Text.UnicodeEncoding.GetEncoder%2A> metody odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="6ee84-280">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ee84-281">Aby upewnić się, że zakodowanego bajtów są prawidłowo zdekodować podczas zapisywania pliku lub strumienia, można prefiks strumień bajtów zakodowanego z preambuły.</span><span class="sxs-lookup"><span data-stu-id="6ee84-281">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6ee84-282">Wstawianie preambuły na początku strumień bajtów (takich jak na początku serię bajtów do zapisania pliku) jest odpowiedzialny za dewelopera.</span><span class="sxs-lookup"><span data-stu-id="6ee84-282">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="6ee84-283"><xref:System.Text.UnicodeEncoding.GetBytes%2A> — Metoda nie dołączy preambuły na początku sekwencji zakodowanego bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-283">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ee84-284"><paramref name="chars" /> jest <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="6ee84-284"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
 <span data-ttu-id="6ee84-285">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-285">-or-</span></span>  
  
 <span data-ttu-id="6ee84-286"><paramref name="bytes" /> jest <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="6ee84-286"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6ee84-287"><paramref name="charCount" /> lub <paramref name="byteCount" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="6ee84-287"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6ee84-288">Wykrywanie błędów jest włączone, a <paramref name="chars" /> zawiera nieprawidłową sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-288">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
 <span data-ttu-id="6ee84-289">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-289">-or-</span></span>  
  
 <span data-ttu-id="6ee84-290"><paramref name="byteCount" /> jest mniejsza niż wynikowa liczba bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-290"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6ee84-291">Wystąpił rezerwowe (zobacz [kodowania znaków w programie .NET Framework](~/docs/standard/base-types/character-encoding.md) na pełniejsze wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="6ee84-291">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="6ee84-292">- i -</span><span class="sxs-lookup"><span data-stu-id="6ee84-292">-and-</span></span>  
  
 <span data-ttu-id="6ee84-293"><see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-293"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6ee84-294">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6ee84-294">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="6ee84-295">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="6ee84-295">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="6ee84-296">Tablica znaków zawierający zestaw znaków kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-296">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="6ee84-297">Indeks pierwszego znaku w celu kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-297">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="6ee84-298">Liczba znaków do kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-298">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="6ee84-299">Tablica bajtów do zawierają wynikowa sekwencja bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-299">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="6ee84-300">Indeks w którym należy rozpocząć pisanie wynikowa sekwencja bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-300">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="6ee84-301">Koduje zestaw znaków z określoną tablicę znaków w określonej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-301">Encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="6ee84-302">Rzeczywista liczba bajtów zapisanych na <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-302">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-303">Do obliczenia rozmiaru tablicy dokładne wymagane przez <xref:System.Text.UnicodeEncoding.GetBytes%2A> do przechowywania wynikowy bajtów, należy wywołać <xref:System.Text.UnicodeEncoding.GetByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6ee84-303">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6ee84-304">Aby obliczyć rozmiaru tablicy maksymalna, należy wywołać <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6ee84-304">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6ee84-305"><xref:System.Text.UnicodeEncoding.GetByteCount%2A> Metody przydziela zazwyczaj mniej pamięci podczas <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metody zazwyczaj wykonuje szybciej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-305">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6ee84-306">Wykrywanie błędów Nieprawidłowa sekwencja powoduje, że tę metodę, aby zgłosić <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-306">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6ee84-307">Bez wykrywanie błędów nieprawidłowe sekwencje są ignorowane, a nie wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6ee84-307">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6ee84-308">Dane do skonwertowania, takich jak dane odczytane ze strumienia, mogą być dostępne tylko w kolejnych bloków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-308">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="6ee84-309">W takim przypadku lub jeśli ilość danych jest tak duża, musi zostać podzielona na mniejsze bloki, należy użyć aplikacji <xref:System.Text.Decoder> lub <xref:System.Text.Encoder> dostarczonych przez <xref:System.Text.UnicodeEncoding.GetDecoder%2A> metody lub <xref:System.Text.UnicodeEncoding.GetEncoder%2A> metody, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="6ee84-309">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ee84-310">Aby upewnić się, że zakodowanego bajtów są prawidłowo zdekodować podczas zapisywania pliku lub strumienia, można prefiks strumień bajtów zakodowanego z preambuły.</span><span class="sxs-lookup"><span data-stu-id="6ee84-310">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6ee84-311">Wstawianie preambuły na początku strumień bajtów (takich jak na początku serię bajtów do zapisania pliku) jest odpowiedzialny za dewelopera.</span><span class="sxs-lookup"><span data-stu-id="6ee84-311">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="6ee84-312"><xref:System.Text.UnicodeEncoding.GetBytes%2A> — Metoda nie dołączy preambuły na początku sekwencji zakodowanego bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-312">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ee84-313">W poniższym przykładzie pokazano sposób użycia <xref:System.Text.UnicodeEncoding.GetBytes%2A> do kodowania zakres znaków z <xref:System.String> i przechowywać zakodowanego bajtów w zakresie elementów w tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-313">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to encode a range of characters from a <xref:System.String> and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ee84-314"><paramref name="chars" /> jest <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="6ee84-314"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
 <span data-ttu-id="6ee84-315">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-315">-or-</span></span>  
  
 <span data-ttu-id="6ee84-316"><paramref name="bytes" /> jest <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="6ee84-316"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6ee84-317"><paramref name="charIndex" /> lub <paramref name="charCount" /> lub <paramref name="byteIndex" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="6ee84-317"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="6ee84-318">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-318">-or-</span></span>  
  
 <span data-ttu-id="6ee84-319"><paramref name="charIndex" /> i <paramref name="charCount" /> określa nieprawidłowy zakres w <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-319"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
 <span data-ttu-id="6ee84-320">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-320">-or-</span></span>  
  
 <span data-ttu-id="6ee84-321"><paramref name="byteIndex" /> nie jest prawidłowym indeksem w <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-321"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6ee84-322">Wykrywanie błędów jest włączone, a <paramref name="chars" /> zawiera nieprawidłową sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-322">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
 <span data-ttu-id="6ee84-323">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-323">-or-</span></span>  
  
 <span data-ttu-id="6ee84-324"><paramref name="bytes" /> nie ma wystarczającej wydajności z <paramref name="byteIndex" /> do końca tablicy, tak aby pomieścić wynikowy bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-324"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6ee84-325">Wystąpił rezerwowe (zobacz [kodowania znaków w programie .NET Framework](~/docs/standard/base-types/character-encoding.md) na pełniejsze wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="6ee84-325">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="6ee84-326">- i -</span><span class="sxs-lookup"><span data-stu-id="6ee84-326">-and-</span></span>  
  
 <span data-ttu-id="6ee84-327"><see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-327"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="6ee84-328">Ciąg zawierający zestaw znaków kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-328">The string containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="6ee84-329">Indeks pierwszego znaku w celu kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-329">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="6ee84-330">Liczba znaków do kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-330">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="6ee84-331">Tablica bajtów do zawierają wynikowa sekwencja bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-331">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="6ee84-332">Indeks w którym należy rozpocząć pisanie wynikowa sekwencja bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-332">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="6ee84-333">Koduje zestaw znaków z określonego <see cref="T:System.String" /> do określonej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-333">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="6ee84-334">Rzeczywista liczba bajtów zapisanych na <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-334">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-335">Do obliczenia rozmiaru tablicy dokładne wymagane przez <xref:System.Text.UnicodeEncoding.GetBytes%2A> do przechowywania wynikowy bajtów, należy wywołać <xref:System.Text.UnicodeEncoding.GetByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6ee84-335">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="6ee84-336">Aby obliczyć rozmiaru tablicy maksymalna, należy wywołać <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6ee84-336">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="6ee84-337"><xref:System.Text.UnicodeEncoding.GetByteCount%2A> Metody przydziela zazwyczaj mniej pamięci podczas <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metody zazwyczaj wykonuje szybciej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-337">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6ee84-338">Wykrywanie błędów Nieprawidłowa sekwencja powoduje, że tę metodę, aby zgłosić <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-338">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6ee84-339">Bez wykrywanie błędów nieprawidłowe sekwencje są ignorowane, a nie wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6ee84-339">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6ee84-340">Dane do skonwertowania, takich jak dane odczytane ze strumienia, mogą być dostępne tylko w kolejnych bloków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-340">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="6ee84-341">W takim przypadku lub jeśli ilość danych jest tak duża, musi zostać podzielona na mniejsze bloki, należy użyć aplikacji <xref:System.Text.Decoder> lub <xref:System.Text.Encoder> dostarczonych przez <xref:System.Text.UnicodeEncoding.GetDecoder%2A> metody lub <xref:System.Text.UnicodeEncoding.GetEncoder%2A> metody, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="6ee84-341">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ee84-342">Aby upewnić się, że zakodowanego bajtów są prawidłowo zdekodować podczas zapisywania pliku lub strumienia, można prefiks strumień bajtów zakodowanego z preambuły.</span><span class="sxs-lookup"><span data-stu-id="6ee84-342">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6ee84-343">Wstawianie preambuły na początku strumień bajtów (takich jak na początku serię bajtów do zapisania pliku) jest odpowiedzialny za dewelopera.</span><span class="sxs-lookup"><span data-stu-id="6ee84-343">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="6ee84-344"><xref:System.Text.UnicodeEncoding.GetBytes%2A> — Metoda nie dołączy preambuły na początku sekwencji zakodowanego bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-344">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ee84-345">W poniższym przykładzie pokazano sposób kodowania zakresu elementów z tablicy znaków Unicode i przechowywania zakodowanego bajtów w zakresie elementów w tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-345">The following example demonstrates how to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ee84-346"><paramref name="s" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-346"><paramref name="s" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="6ee84-347">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-347">-or-</span></span>  
  
 <span data-ttu-id="6ee84-348"><paramref name="bytes" /> jest <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="6ee84-348"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6ee84-349"><paramref name="charIndex" /> lub <paramref name="charCount" /> lub <paramref name="byteIndex" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="6ee84-349"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="6ee84-350">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-350">-or-</span></span>  
  
 <span data-ttu-id="6ee84-351"><paramref name="charIndex" /> i <paramref name="charCount" /> określa nieprawidłowy zakres w <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-351"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
 <span data-ttu-id="6ee84-352">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-352">-or-</span></span>  
  
 <span data-ttu-id="6ee84-353"><paramref name="byteIndex" /> nie jest prawidłowym indeksem w <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-353"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6ee84-354">Wykrywanie błędów jest włączone, a <paramref name="s" /> zawiera nieprawidłową sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-354">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span></span>  
  
 <span data-ttu-id="6ee84-355">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-355">-or-</span></span>  
  
 <span data-ttu-id="6ee84-356"><paramref name="bytes" /> nie ma wystarczającej wydajności z <paramref name="byteIndex" /> do końca tablicy, tak aby pomieścić wynikowy bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-356"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6ee84-357">Wystąpił rezerwowe (zobacz [kodowania znaków w programie .NET Framework](~/docs/standard/base-types/character-encoding.md) na pełniejsze wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="6ee84-357">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="6ee84-358">- i -</span><span class="sxs-lookup"><span data-stu-id="6ee84-358">-and-</span></span>  
  
 <span data-ttu-id="6ee84-359"><see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-359"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6ee84-360">Oblicza liczbę znaków utworzonego przez dekodowania sekwencję bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-360">Calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="6ee84-361">Wskaźnik do pierwszego bajtu zdekodować.</span><span class="sxs-lookup"><span data-stu-id="6ee84-361">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="6ee84-362">Liczba bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-362">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="6ee84-363">Oblicza liczbę znaków utworzonego przez dekodowania sekwencję bajtów, licząc od wskaźnika określonym bajcie.</span><span class="sxs-lookup"><span data-stu-id="6ee84-363">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="6ee84-364">Liczba znaków utworzone przez użytkownika do podanej sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-364">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-365">Do obliczenia dokładne tablicy rozmiaru <xref:System.Text.UnicodeEncoding.GetChars%2A> wymaga, aby przechowywać wynikowe znaki aplikacja używa <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-365">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetChars%2A> requires to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="6ee84-366">Aby obliczyć rozmiaru tablicy maksymalna, należy używać aplikacji <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-366">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="6ee84-367"><xref:System.Text.UnicodeEncoding.GetCharCount%2A> Metody przydziela zazwyczaj mniej pamięci podczas <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> metody zazwyczaj wykonuje szybciej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-367">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6ee84-368">Wykrywanie błędów Nieprawidłowa sekwencja powoduje, że tę metodę, aby zgłosić <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-368">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6ee84-369">Bez wykrywanie błędów nieprawidłowe sekwencje są ignorowane, a nie wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6ee84-369">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ee84-370"><paramref name="bytes" /> jest <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="6ee84-370"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6ee84-371"><paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="6ee84-371"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="6ee84-372">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-372">-or-</span></span>  
  
 <span data-ttu-id="6ee84-373">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może być zwracany w postaci liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-373">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6ee84-374">Wykrywanie błędów jest włączone, a <paramref name="bytes" /> zawiera nieprawidłową sekwencję bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-374">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6ee84-375">Wystąpił rezerwowe (zobacz [kodowania znaków w programie .NET Framework](~/docs/standard/base-types/character-encoding.md) na pełniejsze wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="6ee84-375">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="6ee84-376">- i -</span><span class="sxs-lookup"><span data-stu-id="6ee84-376">-and-</span></span>  
  
 <span data-ttu-id="6ee84-377"><see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-377"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6ee84-378">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6ee84-378">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="6ee84-379">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="6ee84-379">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Text.UnicodeEncoding.GetChars" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="6ee84-380">Tablica bajtów zawierająca sekwencji bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-380">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="6ee84-381">Indeks pierwszego bajtu zdekodować.</span><span class="sxs-lookup"><span data-stu-id="6ee84-381">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="6ee84-382">Liczba bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-382">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="6ee84-383">Oblicza liczbę znaków utworzonego przez dekodowania sekwencję bajtów z określonej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-383">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="6ee84-384">Liczba znaków utworzone przez użytkownika do podanej sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-384">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-385">Do obliczenia rozmiaru tablicy dokładne wymagane przez <xref:System.Text.UnicodeEncoding.GetChars%2A> do przechowywania wynikowy znaków, aplikacja używa <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-385">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="6ee84-386">Aby obliczyć rozmiaru tablicy maksymalna, należy używać aplikacji <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-386">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="6ee84-387"><xref:System.Text.UnicodeEncoding.GetCharCount%2A> Metody przydziela zazwyczaj mniej pamięci podczas <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> metody zazwyczaj wykonuje szybciej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-387">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6ee84-388">Wykrywanie błędów Nieprawidłowa sekwencja powoduje, że tę metodę, aby zgłosić <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-388">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6ee84-389">Bez wykrywanie błędów nieprawidłowe sekwencje są ignorowane, a nie wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6ee84-389">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ee84-390">W poniższym przykładzie pokazano sposób użycia <xref:System.Text.UnicodeEncoding.GetCharCount%2A> metoda zwraca liczbę znaków utworzonego przez dekodowania szereg elementów w tablicy bajtów przy użyciu <xref:System.Text.UnicodeEncoding>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-390">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array using <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ee84-391"><paramref name="bytes" /> jest <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="6ee84-391"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6ee84-392"><paramref name="index" /> lub <paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="6ee84-392"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="6ee84-393">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-393">-or-</span></span>  
  
 <span data-ttu-id="6ee84-394"><paramref name="index" /> i <paramref name="count" /> określa nieprawidłowy zakres w <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-394"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
 <span data-ttu-id="6ee84-395">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-395">-or-</span></span>  
  
 <span data-ttu-id="6ee84-396">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może być zwracany w postaci liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-396">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6ee84-397">Wykrywanie błędów jest włączone, a <paramref name="bytes" /> zawiera nieprawidłową sekwencję bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-397">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6ee84-398">Wystąpił rezerwowe (zobacz [kodowania znaków w programie .NET Framework](~/docs/standard/base-types/character-encoding.md) na pełniejsze wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="6ee84-398">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="6ee84-399">- i -</span><span class="sxs-lookup"><span data-stu-id="6ee84-399">-and-</span></span>  
  
 <span data-ttu-id="6ee84-400"><see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-400"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.UnicodeEncoding.GetChars" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6ee84-401">Dekoduje sekwencję bajtów do zestawu znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-401">Decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="6ee84-402">Wskaźnik do pierwszego bajtu zdekodować.</span><span class="sxs-lookup"><span data-stu-id="6ee84-402">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="6ee84-403">Liczba bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-403">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="6ee84-404">Wskaźnik do lokalizacji, w którym należy rozpocząć pisanie powstałe w ten sposób zestaw znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-404">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="6ee84-405">Maksymalna liczba znaków do zapisu.</span><span class="sxs-lookup"><span data-stu-id="6ee84-405">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="6ee84-406">Dekoduje sekwencję bajtów, licząc od wskaźnika określonym bajcie do zestawu znaków, które są przechowywane, zaczynając od wskaźnika określony znak.</span><span class="sxs-lookup"><span data-stu-id="6ee84-406">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="6ee84-407">Rzeczywista liczba znaków zapisany w lokalizacji wskazanej przez <paramref name="chars" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="6ee84-407">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-408">Do obliczenia dokładne tablicy rozmiaru <xref:System.Text.UnicodeEncoding.GetChars%2A> wymaga, aby przechowywać wynikowe znaki aplikacja używa <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-408">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetChars%2A> requires to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="6ee84-409">Aby obliczyć rozmiaru tablicy maksymalna, należy używać aplikacji <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-409">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="6ee84-410"><xref:System.Text.UnicodeEncoding.GetCharCount%2A> Metody przydziela zazwyczaj mniej pamięci podczas <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> metody zazwyczaj wykonuje szybciej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-410">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6ee84-411">Wykrywanie błędów Nieprawidłowa sekwencja powoduje, że tę metodę, aby zgłosić <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-411">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6ee84-412">Bez wykrywanie błędów nieprawidłowe sekwencje są ignorowane, a nie wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6ee84-412">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6ee84-413">Jeśli zakres bajtów ma być zdekodowany zawiera znacznika kolejności bajtów (BOM) i Tablica bajtów został zwrócony przez metodę typu pamiętać z systemem innym niż BOM, znak U + FFFE znajduje się w tablicy znaków zwracane przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="6ee84-413">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="6ee84-414">Można go usunąć, wywołując <xref:System.String.TrimStart%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="6ee84-414">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6ee84-415">Dane do skonwertowania, takich jak dane odczytane ze strumienia, mogą być dostępne tylko w kolejnych bloków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-415">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="6ee84-416">W tym przypadku jeśli ilości danych jest tak duża, musi zostać podzielona na mniejsze bloki, należy użyć aplikacji <xref:System.Text.Decoder> lub <xref:System.Text.Encoder> dostarczony przez obiekt <xref:System.Text.UnicodeEncoding.GetDecoder%2A> lub <xref:System.Text.UnicodeEncoding.GetEncoder%2A> metody odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="6ee84-416">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ee84-417"><paramref name="bytes" /> jest <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="6ee84-417"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
 <span data-ttu-id="6ee84-418">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-418">-or-</span></span>  
  
 <span data-ttu-id="6ee84-419"><paramref name="chars" /> jest <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="6ee84-419"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6ee84-420"><paramref name="byteCount" /> lub <paramref name="charCount" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="6ee84-420"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6ee84-421">Wykrywanie błędów jest włączone, a <paramref name="bytes" /> zawiera nieprawidłową sekwencję bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-421">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
 <span data-ttu-id="6ee84-422">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-422">-or-</span></span>  
  
 <span data-ttu-id="6ee84-423"><paramref name="charCount" /> jest mniejsza niż wynikowa liczba znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-423"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6ee84-424">Wystąpił rezerwowe (zobacz [kodowania znaków w programie .NET Framework](~/docs/standard/base-types/character-encoding.md) na pełniejsze wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="6ee84-424">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="6ee84-425">- i -</span><span class="sxs-lookup"><span data-stu-id="6ee84-425">-and-</span></span>  
  
 <span data-ttu-id="6ee84-426"><see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-426"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6ee84-427">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6ee84-427">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="6ee84-428">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="6ee84-428">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="6ee84-429">Tablica bajtów zawierająca sekwencji bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-429">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="6ee84-430">Indeks pierwszego bajtu zdekodować.</span><span class="sxs-lookup"><span data-stu-id="6ee84-430">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="6ee84-431">Liczba bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-431">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="6ee84-432">Tablica znaków zawierać wynikowy zestaw znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-432">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="6ee84-433">Indeks, w którym należy rozpocząć pisanie powstałe w ten sposób zestaw znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-433">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="6ee84-434">Dekoduje sekwencję bajtów z określonej tablicy bajtów do określoną tablicę znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-434">Decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="6ee84-435">Rzeczywista liczba znaków w zapisywane <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-435">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-436">Do obliczenia rozmiaru tablicy dokładne wymagane przez <xref:System.Text.UnicodeEncoding.GetChars%2A> do przechowywania wynikowy znaków, aplikacja używa <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-436">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="6ee84-437">Aby obliczyć rozmiaru tablicy maksymalna, należy używać aplikacji <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-437">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="6ee84-438"><xref:System.Text.UnicodeEncoding.GetCharCount%2A> Metody przydziela zazwyczaj mniej pamięci podczas <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> metody zazwyczaj wykonuje szybciej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-438">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6ee84-439">Wykrywanie błędów Nieprawidłowa sekwencja powoduje, że tę metodę, aby zgłosić <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-439">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6ee84-440">Bez wykrywanie błędów nieprawidłowe sekwencje są ignorowane, a nie wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6ee84-440">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6ee84-441">Jeśli zakres bajtów ma być zdekodowany zawiera znacznika kolejności bajtów (BOM) i Tablica bajtów został zwrócony przez metodę typu pamiętać z systemem innym niż BOM, znak U + FFFE znajduje się w tablicy znaków zwracane przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="6ee84-441">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="6ee84-442">Można go usunąć, wywołując <xref:System.String.TrimStart%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="6ee84-442">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6ee84-443">Dane do skonwertowania, takich jak dane odczytane ze strumienia, mogą być dostępne tylko w kolejnych bloków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-443">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="6ee84-444">W takim przypadku lub jeśli ilość danych jest tak duża, musi zostać podzielona na mniejsze bloki, należy użyć aplikacji <xref:System.Text.Decoder> lub <xref:System.Text.Encoder> dostarczonych przez <xref:System.Text.UnicodeEncoding.GetDecoder%2A> metody lub <xref:System.Text.UnicodeEncoding.GetEncoder%2A> metody, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="6ee84-444">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ee84-445">W poniższym przykładzie pokazano sposób użycia <xref:System.Text.UnicodeEncoding.GetChars%2A> sposób dekodowania zakresu elementów w tablicy bajtowej i zapisać wynik w tablicy znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-445">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetChars%2A> method to decode a range of elements in a byte array and store the result in a character array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ee84-446"><paramref name="bytes" /> jest <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="6ee84-446"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
 <span data-ttu-id="6ee84-447">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-447">-or-</span></span>  
  
 <span data-ttu-id="6ee84-448"><paramref name="chars" /> jest <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="6ee84-448"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6ee84-449"><paramref name="byteIndex" /> lub <paramref name="byteCount" /> lub <paramref name="charIndex" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="6ee84-449"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="6ee84-450">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-450">-or-</span></span>  
  
 <span data-ttu-id="6ee84-451"><paramref name="byteindex" /> i <paramref name="byteCount" /> określa nieprawidłowy zakres w <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-451"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
 <span data-ttu-id="6ee84-452">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-452">-or-</span></span>  
  
 <span data-ttu-id="6ee84-453"><paramref name="charIndex" /> nie jest prawidłowym indeksem w <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-453"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6ee84-454">Wykrywanie błędów jest włączone, a <paramref name="bytes" /> zawiera nieprawidłową sekwencję bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-454">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
 <span data-ttu-id="6ee84-455">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-455">-or-</span></span>  
  
 <span data-ttu-id="6ee84-456"><paramref name="chars" /> nie ma wystarczającej wydajności z <paramref name="charIndex" /> do końca tablicy, tak aby pomieścić wynikowy znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-456"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6ee84-457">Wystąpił rezerwowe (zobacz [kodowania znaków w programie .NET Framework](~/docs/standard/base-types/character-encoding.md) na pełniejsze wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="6ee84-457">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="6ee84-458">- i -</span><span class="sxs-lookup"><span data-stu-id="6ee84-458">-and-</span></span>  
  
 <span data-ttu-id="6ee84-459"><see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-459"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ee84-460">Uzyskuje dekoder, który konwertuje sekwencję zakodowane UTF-16 bajtów na sekwencję znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="6ee84-460">Obtains a decoder that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="6ee84-461">A <see cref="T:System.Text.Decoder" /> w sekwencji znaków Unicode, który konwertuje sekwencję zakodowane UTF-16 bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-461">A <see cref="T:System.Text.Decoder" /> that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-462"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> Metoda konwertuje kolejnych bloków bajtów na bloki kolejnych znaków w sposób podobny do <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-462">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span></span> <span data-ttu-id="6ee84-463">Jednak <xref:System.Text.Decoder> przechowuje informacje o stanie między wywołaniami tak on prawidłowo zdekodować sekwencji bajtów, obejmujące bloków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-463">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="6ee84-464"><xref:System.Text.Decoder> Również zachowuje bajtów końcowych na końcu bloki danych i używa bajtów końcowych w następnej operacji dekodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-464">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="6ee84-465">W związku z tym <xref:System.Text.UnicodeEncoding.GetDecoder%2A> i <xref:System.Text.UnicodeEncoding.GetEncoder%2A> są przydatne w przypadku przesyłania w sieci i operacji na plikach, ponieważ te operacje często przeciwdziałania bloków danych zamiast strumienia pełnych danych.</span><span class="sxs-lookup"><span data-stu-id="6ee84-465">Therefore, <xref:System.Text.UnicodeEncoding.GetDecoder%2A> and <xref:System.Text.UnicodeEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="6ee84-466">Jeśli wykrywanie błędów jest włączona, oznacza to, `throwOnInvalidBytes` ustawiono parametr konstruktora `true`, wykrywanie błędów również jest włączone w <xref:System.Text.Decoder> zwracane przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="6ee84-466">If error detection is enabled, that is, the `throwOnInvalidBytes` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="6ee84-467">Napotkano nieprawidłową sekwencję wykrywanie błędów jest włączone, stan dekodera jest niezdefiniowane i przetwarzania należy zatrzymać.</span><span class="sxs-lookup"><span data-stu-id="6ee84-467">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ee84-468">W poniższym przykładzie użyto koder i dekoder, aby zakodować ciąg na tablicę bajtów, a następnie dekodowania bajtów do tablicy znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-468">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/VB/encdec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ee84-469">Pobiera koder, który konwertuje sekwencji znaków Unicode do sekwencji zakodowane UTF-16 bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-469">Obtains an encoder that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="6ee84-470">A <see cref="T:System.Text.Encoder" /> obiekt, który konwertuje sekwencji znaków Unicode, UTF-16 zakodowane sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-470">A <see cref="T:System.Text.Encoder" /> object that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-471"><xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> Metoda konwertuje kolejnych bloków znaków na kolejne bloki bajtów w sposób podobny do <xref:System.Text.UnicodeEncoding.GetBytes%2A> metody tej klasy.</span><span class="sxs-lookup"><span data-stu-id="6ee84-471">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes in a manner similar to the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method of this class.</span></span> <span data-ttu-id="6ee84-472">Jednak <xref:System.Text.Encoder> obiekt przechowuje informacje o stanie między wywołaniami tak, aby ją poprawnie kodowania sekwencji znaków, które obejmują bloków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-472">However, a <xref:System.Text.Encoder> object maintains state information between calls so that it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="6ee84-473"><xref:System.Text.Encoder> Obiektu również zachowuje znakami na końcu bloki danych i używa znaki końcowe w następnej operacji kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-473">The <xref:System.Text.Encoder> object also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="6ee84-474">Na przykład blok danych może kończyć się niedopasowane zastępczym wysokiego poziomu, a pasujące dwuskładnikowego może znajdować się w następnym bloku danych.</span><span class="sxs-lookup"><span data-stu-id="6ee84-474">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="6ee84-475">W związku z tym <xref:System.Text.UnicodeEncoding.GetDecoder%2A> i <xref:System.Text.UnicodeEncoding.GetEncoder%2A> są przydatne w przypadku przesyłania w sieci i operacji na plikach, ponieważ te operacje często przeciwdziałania bloków danych zamiast strumienia pełnych danych.</span><span class="sxs-lookup"><span data-stu-id="6ee84-475">Therefore, <xref:System.Text.UnicodeEncoding.GetDecoder%2A> and <xref:System.Text.UnicodeEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="6ee84-476">Jeśli wykrywanie błędów jest włączona, czyli `throwOnInvalidBytes` ustawiono parametr konstruktora `true`, wykrywanie błędów również jest włączone w <xref:System.Text.Encoder> obiektu zwróconego przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="6ee84-476">If error detection is enabled, that is, the `throwOnInvalidBytes` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> object returned by this method.</span></span> <span data-ttu-id="6ee84-477">Napotkano nieprawidłową sekwencję wykrywanie błędów jest włączone, stan koder jest niezdefiniowane i przetwarzania należy zatrzymać.</span><span class="sxs-lookup"><span data-stu-id="6ee84-477">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ee84-478">W poniższym przykładzie użyto koder i dekoder, aby zakodować ciąg na tablicę bajtów, a następnie dekodowania bajtów do tablicy znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-478">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/VB/encdec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ee84-479">Zwraca wartość skrótu dla bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="6ee84-479">Returns the hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="6ee84-480">Wartość skrótu dla bieżącego <see cref="T:System.Text.UnicodeEncoding" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6ee84-480">The hash code for the current <see cref="T:System.Text.UnicodeEncoding" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="6ee84-481">Liczba znaków do kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-481">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="6ee84-482">Oblicza maksymalną liczbę bajtów utworzone przez określoną liczbę znaków kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-482">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="6ee84-483">Maksymalna liczba bajtów utworzone przez określoną liczbę znaków kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-483">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-484">Do obliczenia rozmiaru tablicy dokładne wymagane przez <xref:System.Text.UnicodeEncoding.GetBytes%2A> do przechowywania wynikowy bajtów, aplikacja używa <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-484">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="6ee84-485">Aby obliczyć rozmiaru tablicy maksymalna, należy używać aplikacji <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-485">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="6ee84-486"><xref:System.Text.UnicodeEncoding.GetByteCount%2A> Metody przydziela zazwyczaj mniej pamięci podczas <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metody zazwyczaj wykonuje szybciej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-486">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6ee84-487"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> pobiera najgorszych numer, tym najgorszego dla aktualnie wybranego <xref:System.Text.EncoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-487"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="6ee84-488">Jeśli wybrano rezerwowe z ciągiem potencjalnie dużą <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> może zwrócić dużej wartości.</span><span class="sxs-lookup"><span data-stu-id="6ee84-488">If a fallback is chosen with a potentially large string, <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="6ee84-489">W większości przypadków ta metoda pobiera uzasadnione numery dla małych ciągów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-489">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="6ee84-490">Dla dużych ciągów może być konieczne wybranie bufory bardzo dużych i przechwytywanie błędy w rzadkich przypadkach przekroczenie bardziej przystępne buforu.</span><span class="sxs-lookup"><span data-stu-id="6ee84-490">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="6ee84-491">Można także wziąć pod uwagę różne podejścia przy użyciu <xref:System.Text.UnicodeEncoding.GetByteCount%2A> lub <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-491">You might also want to consider a different approach using <xref:System.Text.UnicodeEncoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6ee84-492"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> nie ma związku <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-492"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span></span> <span data-ttu-id="6ee84-493">Jeśli aplikacja wymaga podobną funkcję do użycia z <xref:System.Text.UnicodeEncoding.GetChars%2A>, należy go używać <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-493">If your application needs a similar function to use with <xref:System.Text.UnicodeEncoding.GetChars%2A>, it should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ee84-494">`GetMaxByteCount(N)` nie jest zawsze taką samą wartość jak `N* GetMaxByteCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="6ee84-494">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ee84-495">W poniższym przykładzie pokazano sposób użycia <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metodę, aby zwrócić maksymalną liczbę bajtów wymaganą do kodowania określoną liczbę znaków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-495">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method to return the maximum number of bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6ee84-496"><paramref name="charCount" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="6ee84-496"><paramref name="charCount" /> is less than zero.</span></span>  
  
 <span data-ttu-id="6ee84-497">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-497">-or-</span></span>  
  
 <span data-ttu-id="6ee84-498">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może być zwracany w postaci liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-498">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="6ee84-499">Wystąpił rezerwowe (zobacz [kodowania znaków w programie .NET Framework](~/docs/standard/base-types/character-encoding.md) na pełniejsze wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="6ee84-499">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="6ee84-500">- i -</span><span class="sxs-lookup"><span data-stu-id="6ee84-500">-and-</span></span>  
  
 <span data-ttu-id="6ee84-501"><see cref="P:System.Text.Encoding.EncoderFallback" /> ustawiono <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-501"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="6ee84-502">Liczba bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-502">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="6ee84-503">Oblicza maksymalną liczbę znaków, utworzonego przez dekodowania określoną liczbę bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-503">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="6ee84-504">Maksymalna liczba znaków utworzonego przez dekodowania określoną liczbę bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-504">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-505">Do obliczenia rozmiaru tablicy dokładne wymagane przez <xref:System.Text.UnicodeEncoding.GetChars%2A> do przechowywania wynikowy znaków, aplikacja używa <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-505">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="6ee84-506">Aby obliczyć rozmiaru tablicy maksymalna, należy używać aplikacji <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-506">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="6ee84-507"><xref:System.Text.UnicodeEncoding.GetCharCount%2A> Metody przydziela zazwyczaj mniej pamięci podczas <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> metody zazwyczaj wykonuje szybciej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-507">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="6ee84-508"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> pobiera najgorszych numer, tym najgorszego dla aktualnie wybranego <xref:System.Text.DecoderFallback>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-508"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="6ee84-509">Jeśli wybrano rezerwowe z ciągiem potencjalnie dużą <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> pobiera dużej wartości.</span><span class="sxs-lookup"><span data-stu-id="6ee84-509">If a fallback is chosen with a potentially large string, <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> retrieves large values.</span></span>  
  
 <span data-ttu-id="6ee84-510">W większości przypadków ta metoda pobiera uzasadnione numery dla małych ciągów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-510">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="6ee84-511">Dla dużych ciągów może być konieczne wybranie bufory bardzo dużych i przechwytywanie błędy w rzadkich przypadkach przekroczenie bardziej przystępne buforu.</span><span class="sxs-lookup"><span data-stu-id="6ee84-511">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="6ee84-512">Można także wziąć pod uwagę różne podejścia przy użyciu <xref:System.Text.UnicodeEncoding.GetCharCount%2A> lub <xref:System.Text.Decoder.Convert%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-512">You might also want to consider a different approach using <xref:System.Text.UnicodeEncoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A>.</span></span>  
  
 <span data-ttu-id="6ee84-513"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> nie ma związku <xref:System.Text.UnicodeEncoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-513"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.UnicodeEncoding.GetBytes%2A>.</span></span> <span data-ttu-id="6ee84-514">Jeśli aplikacja wymaga podobną funkcję do użycia z <xref:System.Text.UnicodeEncoding.GetBytes%2A>, należy go używać <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-514">If your application needs a similar function to use with <xref:System.Text.UnicodeEncoding.GetBytes%2A>, it should use <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ee84-515">`GetMaxCharCount(N)` nie jest zawsze taką samą wartość jak `N* GetMaxCharCount(1)`.</span><span class="sxs-lookup"><span data-stu-id="6ee84-515">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ee84-516">W poniższym przykładzie pokazano sposób użycia <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> metodę, aby zwrócić maksymalną liczbę znaków utworzonego przez dekodowania określoną liczbę bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-516">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method to return the maximum number of characters produced by decoding a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6ee84-517"><paramref name="byteCount" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="6ee84-517"><paramref name="byteCount" /> is less than zero.</span></span>  
  
 <span data-ttu-id="6ee84-518">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-518">-or-</span></span>  
  
 <span data-ttu-id="6ee84-519">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może być zwracany w postaci liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="6ee84-519">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6ee84-520">Wystąpił rezerwowe (zobacz [kodowania znaków w programie .NET Framework](~/docs/standard/base-types/character-encoding.md) na pełniejsze wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="6ee84-520">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="6ee84-521">- i -</span><span class="sxs-lookup"><span data-stu-id="6ee84-521">-and-</span></span>  
  
 <span data-ttu-id="6ee84-522"><see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-522"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ee84-523">Zwraca znacznik kolejności bajtów Unicode zakodowane w formacie UTF-16, jeśli znacznik kolejności bajtów żąda konstruktora dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="6ee84-523">Returns a Unicode byte order mark encoded in UTF-16 format, if the constructor for this instance requests a byte order mark.</span></span></summary>
        <returns><span data-ttu-id="6ee84-524">Tablica bajtów zawierająca znacznika kolejności bajtów Unicode, jeśli <see cref="T:System.Text.UnicodeEncoding" /> obiektu jest skonfigurowany do go.</span><span class="sxs-lookup"><span data-stu-id="6ee84-524">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UnicodeEncoding" /> object is configured to supply one.</span></span> <span data-ttu-id="6ee84-525">W przeciwnym razie ta metoda zwraca tablicę bajtów o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="6ee84-525">Otherwise, this method returns a zero-length byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-526"><xref:System.Text.UnicodeEncoding> Obiektu zapewniają preambuły jest tablica bajtów, które mogą być poprzedzona do sekwencji bajtów procesu kodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-526">The <xref:System.Text.UnicodeEncoding> object can provide a preamble, which is a byte array that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="6ee84-527">Prefacing sekwencję zakodowanego bajtów z znacznika kolejności bajtów (punkt kodu U + FEFF) pomaga dekodera określanie kolejności bajtów i format transformacji lub UTF.</span><span class="sxs-lookup"><span data-stu-id="6ee84-527">Prefacing a sequence of encoded bytes with a byte order mark (code point U+FEFF) helps the decoder determine the byte order and the transformation format or UTF.</span></span> <span data-ttu-id="6ee84-528">Znacznika kolejności bajtów Unicode (BOM) jest serializowany w następujący sposób (w formacie szesnastkowym):</span><span class="sxs-lookup"><span data-stu-id="6ee84-528">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="6ee84-529">Kolejności bajtów big endian: FE FF</span><span class="sxs-lookup"><span data-stu-id="6ee84-529">Big endian byte order: FE FF</span></span>  
  
-   <span data-ttu-id="6ee84-530">Little endian bajtów kolejności: FF FE</span><span class="sxs-lookup"><span data-stu-id="6ee84-530">Little endian byte order: FF FE</span></span>  
  
 <span data-ttu-id="6ee84-531">Można utworzyć wystąpienia <xref:System.Text.UnicodeEncoding> którego <xref:System.Text.UnicodeEncoding.GetPreamble%2A> metoda zwraca prawidłowe BOM w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="6ee84-531">You can instantiate a <xref:System.Text.UnicodeEncoding> object whose <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="6ee84-532">Pobierając <xref:System.Text.UnicodeEncoding> obiektu zwróconego przez <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> lub <xref:System.Text.Encoding.BigEndianUnicode%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="6ee84-532">By retrieving the <xref:System.Text.UnicodeEncoding> object returned by the <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> or <xref:System.Text.Encoding.BigEndianUnicode%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="6ee84-533">Wywołując bez parametrów <xref:System.Text.UnicodeEncoding.%23ctor> Konstruktor do tworzenia wystąpienia <xref:System.Text.UnicodeEncoding> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6ee84-533">By calling the parameterless <xref:System.Text.UnicodeEncoding.%23ctor> constructor to instantiate a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
-   <span data-ttu-id="6ee84-534">Podając `true` jako wartość `byteOrderMark` argument <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> lub <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-534">By supplying `true` as the value of the `byteOrderMark` argument to the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> or <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructors.</span></span>  
  
 <span data-ttu-id="6ee84-535">Zaleca się, że używasz BOM, ponieważ zapewnia prawie niektórych identyfikacji kodowania plików, które w przeciwnym razie utracić odwołanie do ich kodowania, na przykład nieoznakowanego lub nieprawidłowo oznaczyć danych w sieci web lub losowego tekstu pliki przechowywane, jeśli firma nie miał międzynarodowe problemy.</span><span class="sxs-lookup"><span data-stu-id="6ee84-535">We recommended that you use the BOM, since it provides nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</span></span> <span data-ttu-id="6ee84-536">Często problemów użytkowników może można uniknąć, jeśli dane spójnie i odpowiednio oznakowane.</span><span class="sxs-lookup"><span data-stu-id="6ee84-536">Often user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="6ee84-537">Standardów, które udostępniają typ kodowania BOM jest nieco nadmiarowy.</span><span class="sxs-lookup"><span data-stu-id="6ee84-537">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="6ee84-538">Jednak można użyć ułatwiające serwer wysłał poprawne kodowania nagłówka.</span><span class="sxs-lookup"><span data-stu-id="6ee84-538">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="6ee84-539">Alternatywnie może służyć jako rezerwowe w przypadku kodowanie, w przeciwnym razie zostaną utracone.</span><span class="sxs-lookup"><span data-stu-id="6ee84-539">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="6ee84-540">Dostępne są niektóre wady przy użyciu BOM.</span><span class="sxs-lookup"><span data-stu-id="6ee84-540">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="6ee84-541">Na przykład wiedząc, jak ograniczyć pola bazy danych, które używają BOM może być trudne.</span><span class="sxs-lookup"><span data-stu-id="6ee84-541">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="6ee84-542">Łączenie plików może to stanowić problem również, na przykład, gdy pliki są scalane w taki sposób, który znak niepotrzebnych może zakończyć środku danych.</span><span class="sxs-lookup"><span data-stu-id="6ee84-542">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="6ee84-543">Mimo kilku wady jednak użycie BOM jest zdecydowanie zalecane.</span><span class="sxs-lookup"><span data-stu-id="6ee84-543">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="6ee84-544">Aby upewnić się, że zakodowanego bajtów są prawidłowo zdekodować, powinien prefiks początek strumienia bajtów zakodowanego o preambuły.</span><span class="sxs-lookup"><span data-stu-id="6ee84-544">To ensure that the encoded bytes are decoded properly, you should prefix the beginning of a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="6ee84-545">Należy pamiętać, że <xref:System.Text.UnicodeEncoding.GetBytes%2A> — metoda nie dołączy BOM do sekwencji bajtów zakodowanego; podanie BOM na początku strumień bajtów odpowiednie jest odpowiedzialność.</span><span class="sxs-lookup"><span data-stu-id="6ee84-545">Note that the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ee84-546">W poniższym przykładzie pokazano sposób użycia <xref:System.Text.UnicodeEncoding.GetPreamble%2A> metoda pobierania znacznika kolejności bajtów Unicode w big endian lub małego kolejności bajtów endian dla wystąpienia <xref:System.Text.UnicodeEncoding>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-546">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to retrieve the Unicode byte order mark in big endian or little endian byte order for an instance of a <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/CPP/getpreamble-.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/CS/getpreamble-.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/VB/getpreamble-.vb#1)]  
  
 <span data-ttu-id="6ee84-547">Poniższy przykład tworzy dwa <xref:System.Text.UnicodeEncoding> obiektów, z których pierwszy nie zapewnia BOM, a drugi z których ma.</span><span class="sxs-lookup"><span data-stu-id="6ee84-547">The following example instantiates two <xref:System.Text.UnicodeEncoding> objects, the first of which does not provide a BOM, and the second of which does.</span></span> <span data-ttu-id="6ee84-548">Następnie wywołuje <xref:System.Text.UnicodeEncoding.GetPreamble%2A> metody do zapisu pliku BOM przed zapisaniem ciąg kodowany w formacie Unicode.</span><span class="sxs-lookup"><span data-stu-id="6ee84-548">It then calls the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to write the BOM to a file before writing a Unicode-encoded string.</span></span> <span data-ttu-id="6ee84-549">Jak pokazano na dane wyjściowe z przykładu z konsoli, pliku, który zapisuje bajty z drugiego kodera ma trzy więcej bajtów niż pierwszy.</span><span class="sxs-lookup"><span data-stu-id="6ee84-549">As the console output from the example shows, the file that saves the bytes from the second encoder has three more bytes than the first.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Text.UnicodeEncoding.GetPreamble/cs/GetPreamble1.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Text.UnicodeEncoding.GetPreamble/vb/GetPreamble1.vb#1)]  
  
 <span data-ttu-id="6ee84-550">Można także porównać pliki za pomocą `fc` polecenie w oknie konsoli lub należy sprawdzić pliki w edytorze tekstu, zawierającą tryb wyświetlania szesnastkowy.</span><span class="sxs-lookup"><span data-stu-id="6ee84-550">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="6ee84-551">Należy pamiętać, że jeśli plik jest otwarty w edytorze, który obsługuje kodowania UTF-16, BOM nie jest wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="6ee84-551">Note that when the file is opened in an editor that supports UTF-16 encoding, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="6ee84-552">Tablica bajtów zawierająca sekwencji bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-552">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="6ee84-553">Indeks pierwszego bajtu zdekodować.</span><span class="sxs-lookup"><span data-stu-id="6ee84-553">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="6ee84-554">Liczba bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="6ee84-554">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="6ee84-555">Dekoduje zakresu bajtów z tablicy bajtowej na ciąg.</span><span class="sxs-lookup"><span data-stu-id="6ee84-555">Decodes a range of bytes from a byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="6ee84-556">A <see cref="T:System.String" /> obiektu zawierającego wyniki dekodowania do podanej sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-556">A <see cref="T:System.String" /> object containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ee84-557">Wykrywanie błędów Nieprawidłowa sekwencja powoduje, że tę metodę, aby zgłosić <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="6ee84-557">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="6ee84-558">Bez wykrywanie błędów nieprawidłowe sekwencje są ignorowane, a nie wyjątek.</span><span class="sxs-lookup"><span data-stu-id="6ee84-558">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="6ee84-559">Jeśli zakres bajtów ma być zdekodowany zawiera znacznika kolejności bajtów (BOM) i Tablica bajtów został zwrócony przez metodę typu pamiętać z systemem innym niż BOM, znak U + FFFE znajduje się w tablicy znaków zwracane przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="6ee84-559">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="6ee84-560">Można go usunąć, wywołując <xref:System.String.TrimStart%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="6ee84-560">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="6ee84-561">Dane do skonwertowania, takich jak dane odczytane ze strumienia, mogą być dostępne tylko w kolejnych bloków.</span><span class="sxs-lookup"><span data-stu-id="6ee84-561">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="6ee84-562">W tym przypadku jeśli ilości danych jest tak duża, musi zostać podzielona na mniejsze bloki, należy użyć aplikacji <xref:System.Text.Decoder> lub <xref:System.Text.Encoder> dostarczony przez obiekt <xref:System.Text.UnicodeEncoding.GetDecoder%2A> lub <xref:System.Text.UnicodeEncoding.GetEncoder%2A> metody odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="6ee84-562">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ee84-563">W poniższym przykładzie inicjowane tablicy przez wywołanie metody <xref:System.Text.UnicodeEncoding.GetByteCount%2A> metodę, aby określić dokładnie liczbę bajtów są wymagane dla zaszyfrowanym ciągiem, a następnie dodanie rozmiar znacznika kolejności bajtów (BOM).</span><span class="sxs-lookup"><span data-stu-id="6ee84-563">The following example initializes an array by calling the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="6ee84-564">Przykład wywołuje <xref:System.Text.UnicodeEncoding.GetPreamble%2A> przechowywania BOM do tablicy przed wywołaniem metody <xref:System.Text.Encoding.GetBytes%2A> metody do przechowywania zakodowanego bajtów do tablicy.</span><span class="sxs-lookup"><span data-stu-id="6ee84-564">The example then calls the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="6ee84-565">Przykład wywołuje <xref:System.Text.UnicodeEncoding.GetString%2A> metody zdekodować ciągu.</span><span class="sxs-lookup"><span data-stu-id="6ee84-565">The example then calls the <xref:System.Text.UnicodeEncoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/cs/getstring1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/vb/getstring1.vb#1)]  
  
 <span data-ttu-id="6ee84-566">Należy pamiętać, że w takim przypadku Dekodowany ciąg różni się od oryginalnego ciągu, ponieważ rozpoczyna się znacznik kolejności bajtów 16-bitowych U + FFFD.</span><span class="sxs-lookup"><span data-stu-id="6ee84-566">Note that in this case the decoded string differs from the original string, since it begins with a 16-bit byte order mark U+FFFD.</span></span> <span data-ttu-id="6ee84-567">Oznacza to, czy porównuje dwa ciągi jako nierównej i że ciągu w przypadku dane wyjściowe, BOM będzie wyświetlany jako znak zastępczy "?".</span><span class="sxs-lookup"><span data-stu-id="6ee84-567">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span> <span data-ttu-id="6ee84-568">Aby usunąć BOM na początku ciąg, można wywołać <xref:System.String.TrimStart%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="6ee84-568">To remove the BOM at the beginning of the string, you can call the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ee84-569"><paramref name="bytes" /> jest <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="6ee84-569"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6ee84-570"><paramref name="index" /> lub <paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="6ee84-570"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="6ee84-571">—lub—</span><span class="sxs-lookup"><span data-stu-id="6ee84-571">-or-</span></span>  
  
 <span data-ttu-id="6ee84-572"><paramref name="index" /> i <paramref name="count" /> określa nieprawidłowy zakres w <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-572"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6ee84-573">Wykrywanie błędów jest włączone, a <paramref name="bytes" /> zawiera nieprawidłową sekwencję bajtów.</span><span class="sxs-lookup"><span data-stu-id="6ee84-573">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="6ee84-574">Wystąpił rezerwowe (zobacz [kodowania znaków w programie .NET Framework](~/docs/standard/base-types/character-encoding.md) na pełniejsze wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="6ee84-574">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span>  
  
 <span data-ttu-id="6ee84-575">- i -</span><span class="sxs-lookup"><span data-stu-id="6ee84-575">-and-</span></span>  
  
 <span data-ttu-id="6ee84-576"><see cref="P:System.Text.Encoding.DecoderFallback" /> ustawiono <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="6ee84-576"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>