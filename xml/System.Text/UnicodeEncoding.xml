<Type Name="UnicodeEncoding" FullName="System.Text.UnicodeEncoding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0560812bba18045e55e3058f869e952c326d83bf" /><Meta Name="ms.sourcegitcommit" Value="37f75368be2e569ad59341f3fc6261b76b89db9d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/07/2019" /><Meta Name="ms.locfileid" Value="68819225" /></Metadata><TypeSignature Language="C#" Value="public class UnicodeEncoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UnicodeEncoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UnicodeEncoding" />
  <TypeSignature Language="VB.NET" Value="Public Class UnicodeEncoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnicodeEncoding : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type UnicodeEncoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="31070-101">Reprezentuje kodowanie UTF-16 znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="31070-101">Represents a UTF-16 encoding of Unicode characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-102">Kodowanie jest procesem przekształcania zestawu znaków Unicode w sekwencję bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="31070-103">Dekodowanie jest procesem przekształcania sekwencji zakodowanych bajtów na zestaw znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="31070-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="31070-104">[Standard Unicode](https://go.microsoft.com/fwlink/?linkid=37123) przypisuje punkt kodu (numer) do każdego znaku w każdym obsługiwanym skrypcie.</span><span class="sxs-lookup"><span data-stu-id="31070-104">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) assigns a code point (a number) to each character in every supported script.</span></span> <span data-ttu-id="31070-105">Format przekształcenia Unicode (UTF) jest sposobem kodowania tego punktu kodu.</span><span class="sxs-lookup"><span data-stu-id="31070-105">A Unicode Transformation Format (UTF) is a way to encode that code point.</span></span> <span data-ttu-id="31070-106">W [standardzie Unicode](https://go.microsoft.com/fwlink/?linkid=37123) jest stosowany następujący UTFs:</span><span class="sxs-lookup"><span data-stu-id="31070-106">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) uses the following UTFs:</span></span>  
  
-   <span data-ttu-id="31070-107">UTF-8, który reprezentuje każdy punkt kodu jako sekwencję od 1 do 4 bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-107">UTF-8, which represents each code point as a sequence of one to four bytes.</span></span>  
  
-   <span data-ttu-id="31070-108">UTF-16, który reprezentuje każdy punkt kodu jako sekwencję od 1 do 2 16-bitowych liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="31070-108">UTF-16, which represents each code point as a sequence of one to two 16-bit integers.</span></span>  
  
-   <span data-ttu-id="31070-109">UTF-32, który reprezentuje każdy punkt kodu jako 32-bitową liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="31070-109">UTF-32, which represents each code point as a 32-bit integer.</span></span>  
  
 <span data-ttu-id="31070-110">Aby uzyskać więcej informacji na temat UTFs i innych kodowań obsługiwanych przez <xref:System.Text>program, zobacz [kodowanie znaków w .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="31070-110">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="31070-111"><xref:System.Text.UnicodeEncoding> Klasa reprezentuje kodowanie UTF-16.</span><span class="sxs-lookup"><span data-stu-id="31070-111">The <xref:System.Text.UnicodeEncoding> class represents a UTF-16 encoding.</span></span> <span data-ttu-id="31070-112">Koder może korzystać z big endian kolejności bajtów (najpierw z najbardziej znaczącym bajtem) lub z kolejnością bajtów little endian (najpierw znaczący bajt).</span><span class="sxs-lookup"><span data-stu-id="31070-112">The encoder can use either big endian byte order (most significant byte first) or little endian byte order (least significant byte first).</span></span> <span data-ttu-id="31070-113">Na przykład Wielka litera A (punkt kodu U + 0041) jest serializowana w następujący sposób (w formacie szesnastkowym):</span><span class="sxs-lookup"><span data-stu-id="31070-113">For example, the Latin Capital Letter A (code point U+0041) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="31070-114">Kolejność bajtów big endian: 00 00 00 41</span><span class="sxs-lookup"><span data-stu-id="31070-114">Big endian byte order: 00 00 00 41</span></span>  
  
-   <span data-ttu-id="31070-115">Mała kolejność bajtów endian: 41 00 00 00</span><span class="sxs-lookup"><span data-stu-id="31070-115">Little endian byte order: 41 00 00 00</span></span>  
  
 <span data-ttu-id="31070-116">Zwykle bardziej wydajne jest przechowywanie znaków Unicode przy użyciu kolejności bajtów natywnych określonej platformy.</span><span class="sxs-lookup"><span data-stu-id="31070-116">It is generally more efficient to store Unicode characters using the native byte order of a particular platform.</span></span> <span data-ttu-id="31070-117">Na przykład lepiej jest używać kolejności bajtów little endian na platformach little endian, takich jak komputery Intel.</span><span class="sxs-lookup"><span data-stu-id="31070-117">For example, it is better to use the little endian byte order on little endian platforms, such as Intel computers.</span></span> <span data-ttu-id="31070-118"><xref:System.Text.UnicodeEncoding> Klasa odnosi się do stron kodowych systemu Windows 1200 (kolejność bajtów little endian) i 1201 (kolejność bajtów big endian).</span><span class="sxs-lookup"><span data-stu-id="31070-118">The <xref:System.Text.UnicodeEncoding> class corresponds to the Windows code pages 1200 (little endian byte order) and 1201 (big endian byte order).</span></span> <span data-ttu-id="31070-119">Możesz określić "przydziały" dla określonej architektury, wywołując <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-119">You can determine the "endianness" of a particular architecture by calling the <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="31070-120"><xref:System.Text.UnicodeEncoding> Opcjonalnie obiekt zawiera znacznik kolejności bajtów (BOM), który jest tablicą bajtów, które mogą być poprzedzone sekwencją bajtów w wyniku procesu kodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-120">Optionally, the <xref:System.Text.UnicodeEncoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="31070-121">Jeśli Preambuła zawiera znacznik kolejności bajtów (BOM), pomaga dekoderowi określić kolejność bajtów i format transformacji lub UTF.</span><span class="sxs-lookup"><span data-stu-id="31070-121">If the preamble contains a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF.</span></span>  
  
 <span data-ttu-id="31070-122">Jeśli wystąpienie jest skonfigurowane do dostarczania BOM, można je pobrać, <xref:System.Text.UnicodeEncoding.GetPreamble%2A> wywołując metodę; w przeciwnym razie metoda zwraca pustą tablicę. <xref:System.Text.UnicodeEncoding></span><span class="sxs-lookup"><span data-stu-id="31070-122">If the <xref:System.Text.UnicodeEncoding> instance is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="31070-123">Należy pamiętać, że nawet jeśli <xref:System.Text.UnicodeEncoding> dla obiektu jest skonfigurowany do obsługi BOM, należy uwzględnić BOM na początku strumienia zakodowanych bajtów, zgodnie z potrzebami, metody <xref:System.Text.UnicodeEncoding> kodowania klasy nie są automatycznie.</span><span class="sxs-lookup"><span data-stu-id="31070-123">Note that, even if a <xref:System.Text.UnicodeEncoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UnicodeEncoding> class do not do this automatically.</span></span>  

> [!CAUTION]
> <span data-ttu-id="31070-124">Aby włączyć wykrywanie błędów i uczynić wystąpienie klasy bardziej <xref:System.Text.UnicodeEncoding> bezpieczne, należy utworzyć wystąpienie obiektu przez <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> wywołanie konstruktora i ustawienie jego `throwOnInvalidBytes` argumentu na `true`.</span><span class="sxs-lookup"><span data-stu-id="31070-124">To enable error detection and to make the class instance more secure, you should instantiate a <xref:System.Text.UnicodeEncoding> object by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span> <span data-ttu-id="31070-125">W przypadku wykrywania błędów Metoda, która wykrywa nieprawidłową sekwencję znaków lub bajtów zgłasza <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="31070-125">With error detection, a method that detects an invalid sequence of characters or bytes throws a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="31070-126">Bez wykrycia błędów nie jest zgłaszany żaden wyjątek, a Nieprawidłowa sekwencja jest zwykle ignorowana.</span><span class="sxs-lookup"><span data-stu-id="31070-126">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
 <span data-ttu-id="31070-127">Można utworzyć wystąpienie <xref:System.Text.UnicodeEncoding> obiektu na wiele sposobów, w zależności od tego, czy chcesz udostępnić znacznik kolejności bajtów (BOM), czy ma być używane kodowanie big-endian czy little-endian, oraz czy chcesz włączyć wykrywanie błędów.</span><span class="sxs-lookup"><span data-stu-id="31070-127">You can instantiate a <xref:System.Text.UnicodeEncoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM), whether you want big-endian or little-endian encoding, and whether you want to enable error detection.</span></span> <span data-ttu-id="31070-128">Poniższa tabela zawiera listę <xref:System.Text.UnicodeEncoding> konstruktorów <xref:System.Text.Encoding> i właściwości, które zwracają <xref:System.Text.UnicodeEncoding> obiekt.</span><span class="sxs-lookup"><span data-stu-id="31070-128">The following table lists the <xref:System.Text.UnicodeEncoding> constructors and the <xref:System.Text.Encoding> properties that return a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
|<span data-ttu-id="31070-129">Element członkowski</span><span class="sxs-lookup"><span data-stu-id="31070-129">Member</span></span>|<span data-ttu-id="31070-130">Endian</span><span class="sxs-lookup"><span data-stu-id="31070-130">Endianness</span></span>|<span data-ttu-id="31070-131">BOM</span><span class="sxs-lookup"><span data-stu-id="31070-131">BOM</span></span>|<span data-ttu-id="31070-132">Wykrywanie błędów</span><span class="sxs-lookup"><span data-stu-id="31070-132">Error detection</span></span>|  
|------------|----------------|---------|---------------------|  
|<xref:System.Text.Encoding.BigEndianUnicode%2A>|<span data-ttu-id="31070-133">Big-endian</span><span class="sxs-lookup"><span data-stu-id="31070-133">Big-endian</span></span>|<span data-ttu-id="31070-134">Tak</span><span class="sxs-lookup"><span data-stu-id="31070-134">Yes</span></span>|<span data-ttu-id="31070-135">Nie (alternatywa zamienna)</span><span class="sxs-lookup"><span data-stu-id="31070-135">No (Replacement fallback)</span></span>|  
|<xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>|<span data-ttu-id="31070-136">Little-endian</span><span class="sxs-lookup"><span data-stu-id="31070-136">Little-endian</span></span>|<span data-ttu-id="31070-137">Tak</span><span class="sxs-lookup"><span data-stu-id="31070-137">Yes</span></span>|<span data-ttu-id="31070-138">Nie (alternatywa zamienna)</span><span class="sxs-lookup"><span data-stu-id="31070-138">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="31070-139">Little-endian</span><span class="sxs-lookup"><span data-stu-id="31070-139">Little-endian</span></span>|<span data-ttu-id="31070-140">Tak</span><span class="sxs-lookup"><span data-stu-id="31070-140">Yes</span></span>|<span data-ttu-id="31070-141">Nie (alternatywa zamienna)</span><span class="sxs-lookup"><span data-stu-id="31070-141">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29>|<span data-ttu-id="31070-142">Możliwość konfiguracji</span><span class="sxs-lookup"><span data-stu-id="31070-142">Configurable</span></span>|<span data-ttu-id="31070-143">Możliwość konfiguracji</span><span class="sxs-lookup"><span data-stu-id="31070-143">Configurable</span></span>|<span data-ttu-id="31070-144">Nie (alternatywa zamienna)</span><span class="sxs-lookup"><span data-stu-id="31070-144">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="31070-145">Możliwość konfiguracji</span><span class="sxs-lookup"><span data-stu-id="31070-145">Configurable</span></span>|<span data-ttu-id="31070-146">Możliwość konfiguracji</span><span class="sxs-lookup"><span data-stu-id="31070-146">Configurable</span></span>|<span data-ttu-id="31070-147">Możliwość konfiguracji</span><span class="sxs-lookup"><span data-stu-id="31070-147">Configurable</span></span>|  
  
 <span data-ttu-id="31070-148">Metoda określa, ile bajtów powoduje kodowanie zestawu znaków Unicode, <xref:System.Text.UnicodeEncoding.GetBytes%2A> a metoda wykonuje rzeczywiste kodowanie. <xref:System.Text.UnicodeEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-148">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="31070-149">Podobnie <xref:System.Text.UnicodeEncoding.GetCharCount%2A> Metoda określa, ile znaków powoduje dekodowanie sekwencji bajtów, <xref:System.Text.UnicodeEncoding.GetChars%2A> a metody i <xref:System.Text.UnicodeEncoding.GetString%2A> wykonuje rzeczywiste dekodowanie.</span><span class="sxs-lookup"><span data-stu-id="31070-149">Likewise, the <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UnicodeEncoding.GetChars%2A> and <xref:System.Text.UnicodeEncoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="31070-150">Dla kodera lub dekodera, który może zapisywać informacje o stanie podczas kodowania lub dekodowania danych obejmujących wiele bloków (takich jak ciąg znaków 1 000 000, który jest zakodowany w segmentach znaków 100 000), <xref:System.Text.UnicodeEncoding.GetEncoder%2A> Użyj <xref:System.Text.UnicodeEncoding.GetDecoder%2A> właściwości i piwo.</span><span class="sxs-lookup"><span data-stu-id="31070-150">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> and <xref:System.Text.UnicodeEncoding.GetDecoder%2A> properties, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31070-151">Poniższy przykład ilustruje sposób kodowania ciągu znaków Unicode w tablicy bajtowej przy użyciu <xref:System.Text.UnicodeEncoding> obiektu.</span><span class="sxs-lookup"><span data-stu-id="31070-151">The following example demonstrates how to encode a string of Unicode characters into a byte array by using a <xref:System.Text.UnicodeEncoding> object.</span></span> <span data-ttu-id="31070-152">Tablica bajtów jest zdekodowana do ciągu, aby udowodnić, że dane nie są tracone.</span><span class="sxs-lookup"><span data-stu-id="31070-152">The byte array is decoded into a string to demonstrate that there is no loss of data.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/VB/snippet.vb#1)]  
  
 <span data-ttu-id="31070-153">Poniższy przykład używa tego samego ciągu co poprzedni, z tą różnicą, że zapisuje zakodowane bajty do pliku i prefiksy strumienia bajtów ze znacznikiem kolejności bajtów (BOM).</span><span class="sxs-lookup"><span data-stu-id="31070-153">The following example uses the same string as the previous one, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="31070-154">Następnie odczytuje plik na dwa różne sposoby: jako plik tekstowy przy użyciu <xref:System.IO.StreamReader> obiektu oraz jako plik binarny.</span><span class="sxs-lookup"><span data-stu-id="31070-154">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="31070-155">Zgodnie z oczekiwaniami, żaden nowo odczytany ciąg nie obejmuje BOM.</span><span class="sxs-lookup"><span data-stu-id="31070-155">As you would expect, neither newly-read string includes the BOM.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/CS/bom1.cs#2)]
 [!code-vb[System.Text.UnicodeEncoding Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding Example/VB/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Encoding" />
    <altmember cref="T:System.Text.Encoder" />
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.UTF32Encoding" />
    <altmember cref="T:System.Text.UTF8Encoding" />
    <altmember cref="T:System.Text.UTF7Encoding" />
    <altmember cref="T:System.Text.ASCIIEncoding" />
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="T:System.Globalization.CharUnicodeInfo" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="31070-156">Informacje o kodowaniu</span><span class="sxs-lookup"><span data-stu-id="31070-156">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="31070-157">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.UnicodeEncoding" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="31070-157">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31070-158">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.UnicodeEncoding" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="31070-158">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-159">Ten konstruktor tworzy wystąpienie, które używa kolejności bajtów little endian, udostępnia znacznik kolejności bajtów Unicode i nie generuje wyjątku w przypadku wykrycia nieprawidłowego kodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-159">This constructor creates an instance that uses the little endian byte order, provides a Unicode byte order mark, and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="31070-160">Ze względów bezpieczeństwa należy włączyć wykrywanie błędów przez wywołanie <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> konstruktora i ustawienie jego `throwOnInvalidBytes` argumentu na `true`.</span><span class="sxs-lookup"><span data-stu-id="31070-160">For security reasons, you should enable error detection by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span>
  
## Examples  
 <span data-ttu-id="31070-161">Poniższy przykład ilustruje sposób tworzenia nowego <xref:System.Text.UnicodeEncoding> wystąpienia i wyświetlania nazwy kodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-161">The following example demonstrates how to create a new <xref:System.Text.UnicodeEncoding> instance and display the name of the encoding.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding (bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding(bool bigEndian, bool byteOrderMark);" />
      <MemberSignature Language="F#" Value="new System.Text.UnicodeEncoding : bool * bool -&gt; System.Text.UnicodeEncoding" Usage="new System.Text.UnicodeEncoding (bigEndian, byteOrderMark)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bigEndian"><span data-ttu-id="31070-162"><see langword="true" />Aby użyć kolejności bajtów big endian (najpierw najbardziej znaczącego bajtu) lub <see langword="false" /> użyć kolejności bajtów little endian (najpierw znaczący bajt).</span><span class="sxs-lookup"><span data-stu-id="31070-162"><see langword="true" /> to use the big endian byte order (most significant byte first), or <see langword="false" /> to use the little endian byte order (least significant byte first).</span></span></param>
        <param name="byteOrderMark"><span data-ttu-id="31070-163"><see langword="true" />Aby określić, że <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> Metoda zwraca znacznik kolejności bajtów Unicode; w przeciwnym razie <see langword="false" />,.</span><span class="sxs-lookup"><span data-stu-id="31070-163"><see langword="true" /> to specify that the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="31070-164">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.UnicodeEncoding" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="31070-164">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span> <span data-ttu-id="31070-165">Parametry określają, czy należy używać kolejności bajtów big endian i czy <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> Metoda zwraca znacznik kolejności bajtów Unicode.</span><span class="sxs-lookup"><span data-stu-id="31070-165">Parameters specify whether to use the big endian byte order and whether the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-166">Ten konstruktor tworzy wystąpienie, które nie zgłasza wyjątku, gdy wykryto nieprawidłowe kodowanie.</span><span class="sxs-lookup"><span data-stu-id="31070-166">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="31070-167">Ze względów bezpieczeństwa należy włączyć wykrywanie błędów przez wywołanie <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> konstruktora i ustawienie jego `throwOnInvalidBytes` argumentu na `true`.</span><span class="sxs-lookup"><span data-stu-id="31070-167">For security reasons, you should enable error detection by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructor and setting its `throwOnInvalidBytes` argument to `true`.</span></span>  
  
 <span data-ttu-id="31070-168">Parametr steruje operacją <xref:System.Text.UnicodeEncoding.GetPreamble%2A>metody. `byteOrderMark`</span><span class="sxs-lookup"><span data-stu-id="31070-168">The `byteOrderMark` parameter controls the operation of the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="31070-169">Jeśli `true`Metoda zwraca tablicę bajtową zawierającą znacznik kolejności bajtów Unicode (BOM) w formacie UTF-16.</span><span class="sxs-lookup"><span data-stu-id="31070-169">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-16 format.</span></span>  <span data-ttu-id="31070-170">Jeśli `false`zwraca tablicę bajtową o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="31070-170">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="31070-171">Jednak ustawienie `byteOrderMark` to `true` nie powoduje, aby <xref:System.Text.UnicodeEncoding.GetBytes%2A> Metoda nie powodowała prefiksu BOM na początku tablicy bajtowej, ani nie powoduje, <xref:System.Text.UnicodeEncoding.GetByteCount%2A> że metoda zawiera liczbę bajtów w BOM w liczniku bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-171">However, setting `byteOrderMark` to `true` does not cause the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31070-172">Poniższy przykład pokazuje, jak utworzyć nowe <xref:System.Text.UnicodeEncoding> wystąpienie określające, czy obsługiwać little endian, big endian porządkowanie bajtów i znacznik kolejności bajtów Unicode.</span><span class="sxs-lookup"><span data-stu-id="31070-172">The following example demonstrates how to create a new <xref:System.Text.UnicodeEncoding> instance specifying whether to support little endian or big endian byte ordering and the Unicode byte order mark.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnicodeEncoding (bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bigEndian As Boolean, byteOrderMark As Boolean, throwOnInvalidBytes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnicodeEncoding(bool bigEndian, bool byteOrderMark, bool throwOnInvalidBytes);" />
      <MemberSignature Language="F#" Value="new System.Text.UnicodeEncoding : bool * bool * bool -&gt; System.Text.UnicodeEncoding" Usage="new System.Text.UnicodeEncoding (bigEndian, byteOrderMark, throwOnInvalidBytes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bigEndian" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteOrderMark" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="throwOnInvalidBytes" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bigEndian"><span data-ttu-id="31070-173"><see langword="true" />Aby użyć kolejności bajtów big endian (najpierw najbardziej znaczący bajt); <see langword="false" /> aby użyć kolejności bajtów little endian (najpierw należy uzyskać co najmniej znaczący bajt).</span><span class="sxs-lookup"><span data-stu-id="31070-173"><see langword="true" /> to use the big endian byte order (most significant byte first); <see langword="false" /> to use the little endian byte order (least significant byte first).</span></span></param>
        <param name="byteOrderMark"><span data-ttu-id="31070-174"><see langword="true" />Aby określić, że <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> Metoda zwraca znacznik kolejności bajtów Unicode; w przeciwnym razie <see langword="false" />,.</span><span class="sxs-lookup"><span data-stu-id="31070-174"><see langword="true" /> to specify that the <see cref="M:System.Text.UnicodeEncoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span></span></param>
        <param name="throwOnInvalidBytes"><span data-ttu-id="31070-175"><see langword="true" />Aby określić, że wyjątek ma być zgłaszany w przypadku wykrycia nieprawidłowego kodowania; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="31070-175"><see langword="true" /> to specify that an exception should be thrown when an invalid encoding is detected; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="31070-176">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.UnicodeEncoding" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="31070-176">Initializes a new instance of the <see cref="T:System.Text.UnicodeEncoding" /> class.</span></span> <span data-ttu-id="31070-177">Parametry określają, czy ma być używana kolejność bajtów big endian, czy ma być podany znacznik kolejności bajtów Unicode, oraz czy zgłaszać wyjątek, gdy zostanie wykryte nieprawidłowe kodowanie.</span><span class="sxs-lookup"><span data-stu-id="31070-177">Parameters specify whether to use the big endian byte order, whether to provide a Unicode byte order mark, and whether to throw an exception when an invalid encoding is detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-178">Parametr steruje operacją <xref:System.Text.UnicodeEncoding.GetPreamble%2A>metody. `byteOrderMark`</span><span class="sxs-lookup"><span data-stu-id="31070-178">The `byteOrderMark` parameter controls the operation of the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="31070-179">Jeśli `true`Metoda zwraca tablicę bajtową zawierającą znacznik kolejności bajtów Unicode (BOM) w formacie UTF-16.</span><span class="sxs-lookup"><span data-stu-id="31070-179">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-16 format.</span></span>  <span data-ttu-id="31070-180">Jeśli `false`zwraca tablicę bajtową o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="31070-180">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="31070-181">Jednak ustawienie `byteOrderMark` to `true` nie powoduje, aby <xref:System.Text.UnicodeEncoding.GetBytes%2A> Metoda nie powodowała prefiksu BOM na początku tablicy bajtowej, ani nie powoduje, <xref:System.Text.UnicodeEncoding.GetByteCount%2A> że metoda zawiera liczbę bajtów w BOM w liczniku bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-181">However, setting `byteOrderMark` to `true` does not cause the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
 <span data-ttu-id="31070-182">Jeśli parametrem jest `true`, metoda, która wykrywa nieprawidłowe sekwencje <xref:System.ArgumentException?displayProperty=nameWithType>bajtów. `throwOnInvalidBytes`</span><span class="sxs-lookup"><span data-stu-id="31070-182">If the `throwOnInvalidBytes` parameter is `true`, a method that detects an invalid byte sequence throws <xref:System.ArgumentException?displayProperty=nameWithType>.</span></span> <span data-ttu-id="31070-183">W przeciwnym razie metoda nie zgłasza wyjątku, a Nieprawidłowa sekwencja jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="31070-183">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="31070-184">Ze względów bezpieczeństwa należy używać tego konstruktora do tworzenia wystąpienia <xref:System.Text.UnicodeEncoding> klasy i włączania wykrywania błędów przez `true`ustawienie `throwOnInvalidBytes` wartości.</span><span class="sxs-lookup"><span data-stu-id="31070-184">For security reasons, you should use this constructor to create an instance of the <xref:System.Text.UnicodeEncoding> class and turn on error detection by setting `throwOnInvalidBytes` to `true`.</span></span>  
  
## Examples  
 <span data-ttu-id="31070-185">Poniższy przykład ilustruje zachowanie programu <xref:System.Text.UnicodeEncoding>, z włączonym wykrywaniem błędów i bez.</span><span class="sxs-lookup"><span data-stu-id="31070-185">The following example demonstrates the behavior of <xref:System.Text.UnicodeEncoding>, both with error detection enabled and without.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/CPP/errordetection.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/CS/errordetection.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ErrorDetection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ErrorDetection/VB/errordetection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="CharSize">
      <MemberSignature Language="C#" Value="public const int CharSize = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 CharSize = (2)" />
      <MemberSignature Language="DocId" Value="F:System.Text.UnicodeEncoding.CharSize" />
      <MemberSignature Language="VB.NET" Value="Public Const CharSize As Integer  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: int CharSize = 2;" />
      <MemberSignature Language="F#" Value="val mutable CharSize : int" Usage="System.Text.UnicodeEncoding.CharSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="31070-186">Reprezentuje rozmiar znaku Unicode w bajtach.</span><span class="sxs-lookup"><span data-stu-id="31070-186">Represents the Unicode character size in bytes.</span></span> <span data-ttu-id="31070-187">To pole jest stałą.</span><span class="sxs-lookup"><span data-stu-id="31070-187">This field is a constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-188">Wartość tego pola jest 32-bitowej podpisanej stałej o wartości 2.</span><span class="sxs-lookup"><span data-stu-id="31070-188">The value of this field is a 32-bit signed constant with a value of 2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31070-189">W poniższym przykładzie pokazano, jak zwrócić wartość <xref:System.Text.UnicodeEncoding.CharSize> i wyświetlić ją.</span><span class="sxs-lookup"><span data-stu-id="31070-189">The following example demonstrates how to return the value of <xref:System.Text.UnicodeEncoding.CharSize> and display it.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/CPP/charsize.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/CS/charsize.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.CharSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.CharSize Example/VB/charsize.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="unicodeEncoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="31070-190">Obiekt do porównania z bieżącym obiektem.</span><span class="sxs-lookup"><span data-stu-id="31070-190">The object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="31070-191">Określa, czy określony <see cref="T:System.Object" /> element jest równy bieżącemu <see cref="T:System.Text.UnicodeEncoding" /> obiektowi.</span><span class="sxs-lookup"><span data-stu-id="31070-191">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Text.UnicodeEncoding" /> object.</span></span></summary>
        <returns><span data-ttu-id="31070-192"><see langword="true" />Jeśli <paramref name="value" /> jest <see langword="false" />wystąpieniem i jest równe bieżącemu obiektowi; w przeciwnym razie,. <see cref="T:System.Text.UnicodeEncoding" /></span><span class="sxs-lookup"><span data-stu-id="31070-192"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UnicodeEncoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-193">Dwa <xref:System.Text.UnicodeEncoding> obiekty są uważane za równe, jeśli spełnione są wszystkie następujące warunki:</span><span class="sxs-lookup"><span data-stu-id="31070-193">Two <xref:System.Text.UnicodeEncoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="31070-194">Oba obiekty używają tej samej kolejności bajtów (little-endian lub big-endian).</span><span class="sxs-lookup"><span data-stu-id="31070-194">Both objects use the same byte order (little-endian or big-endian).</span></span>  
  
-   <span data-ttu-id="31070-195">Oba obiekty zapewniają znacznik kolejności bajtów lub oba nie.</span><span class="sxs-lookup"><span data-stu-id="31070-195">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="31070-196">Oba obiekty używają tego samego powrotu do kodera.</span><span class="sxs-lookup"><span data-stu-id="31070-196">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="31070-197">Oba obiekty używają tego samego powrotu dekodera.</span><span class="sxs-lookup"><span data-stu-id="31070-197">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31070-198">Poniższy przykład ilustruje sposób użycia <xref:System.Text.UnicodeEncoding.Equals%2A> metody w celu sprawdzenia, czy bieżący <xref:System.Text.UnicodeEncoding> obiekt jest równy różnemu <xref:System.Text.UnicodeEncoding> obiektowi.</span><span class="sxs-lookup"><span data-stu-id="31070-198">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.Equals%2A> method to test whether the current <xref:System.Text.UnicodeEncoding> object is equal to a different <xref:System.Text.UnicodeEncoding> object.</span></span> <span data-ttu-id="31070-199">Pięć <xref:System.Text.UnicodeEncoding> obiektów jest tworzonych i porównywanych, a wyniki porównań są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="31070-199">Five <xref:System.Text.UnicodeEncoding> objects are created and compared, and the results of the comparisons are displayed.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.ctor2 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UnicodeEncoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="31070-200">Oblicza liczbę bajtów generowanych przez zakodowanie zestawu znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-200">Calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="unicodeEncoding.GetByteCount s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="31070-201">Ciąg, który zawiera zestaw znaków do kodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-201">The string that contains the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="31070-202">Oblicza liczbę bajtów wytwarzanych przez zakodowanie znaków w określonym ciągu.</span><span class="sxs-lookup"><span data-stu-id="31070-202">Calculates the number of bytes produced by encoding the characters in the specified string.</span></span></summary>
        <returns><span data-ttu-id="31070-203">Liczba bajtów generowanych przez kodowanie określonych znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-203">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-204">Aby obliczyć dokładne rozmiary tablicy wymagane przez <xref:System.Text.UnicodeEncoding.GetBytes%2A> program do przechowywania wyników, należy <xref:System.Text.UnicodeEncoding.GetByteCount%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-204">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="31070-205">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-205">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="31070-206">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UnicodeEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-206">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="31070-207">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje, że <xref:System.ArgumentException>ta metoda wygeneruje.</span><span class="sxs-lookup"><span data-stu-id="31070-207">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="31070-208">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="31070-208">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31070-209">Aby upewnić się, że zakodowane bajty są zdekodowane prawidłowo, gdy są zapisywane jako plik lub jako strumień, można prefiksować strumień zakodowanych bajtów z preambułą.</span><span class="sxs-lookup"><span data-stu-id="31070-209">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="31070-210">Wstawianie preambuły na początku strumienia bajtów (na przykład na początku serii bajtów, które mają być zapisywane do pliku) jest odpowiedzialnością dla deweloperów, a liczba bajtów w preambule nie jest odzwierciedlana w wartości zwracanej przez <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-210">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31070-211">Poniższy przykład wywołuje <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metody i <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> , aby obliczyć maksymalną i rzeczywistą liczbę bajtów wymaganą do zakodowania ciągu.</span><span class="sxs-lookup"><span data-stu-id="31070-211">The following example calls the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> and <xref:System.Text.UnicodeEncoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="31070-212">Wyświetla również rzeczywistą liczbę bajtów wymaganą do przechowywania strumienia bajtów ze znacznikiem kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-212">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31070-213"><paramref name="s" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="31070-213"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31070-214">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może zostać zwrócona jako liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="31070-214">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31070-215">Wykrywanie błędów jest włączone i <paramref name="s" /> zawiera nieprawidłową sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-215">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="31070-216">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="31070-216">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="31070-217">- i -</span><span class="sxs-lookup"><span data-stu-id="31070-217">-and-</span></span> 
 <span data-ttu-id="31070-218"><see cref="P:System.Text.Encoding.EncoderFallback" />jest ustawiony na <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="31070-218"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="unicodeEncoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="31070-219">Wskaźnik do pierwszego znaku do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-219">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="31070-220">Liczba znaków do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-220">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="31070-221">Oblicza liczbę bajtów wytwarzanych przez zakodowanie zestawu znaków, zaczynając od określonego wskaźnika znakowego.</span><span class="sxs-lookup"><span data-stu-id="31070-221">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="31070-222">Liczba bajtów generowanych przez kodowanie określonych znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-222">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-223">Aby obliczyć dokładny rozmiar tablicy, który <xref:System.Text.UnicodeEncoding.GetBytes%2A> jest wymagany do przechowywania powstających bajtów, należy <xref:System.Text.UnicodeEncoding.GetByteCount%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-223">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetBytes%2A> requires to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="31070-224">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-224">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="31070-225">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UnicodeEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-225">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="31070-226">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje, że <xref:System.ArgumentException>ta metoda wygeneruje.</span><span class="sxs-lookup"><span data-stu-id="31070-226">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="31070-227">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="31070-227">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31070-228">Aby upewnić się, że zakodowane bajty są zdekodowane prawidłowo, gdy są zapisywane jako plik lub jako strumień, można prefiksować strumień zakodowanych bajtów z preambułą.</span><span class="sxs-lookup"><span data-stu-id="31070-228">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="31070-229">Wstawianie preambuły na początku strumienia bajtów (na przykład na początku serii bajtów, które mają być zapisywane do pliku) jest odpowiedzialnością dla deweloperów, a liczba bajtów w preambule nie jest odzwierciedlana w wartości zwracanej przez <xref:System.Text.UTF8Encoding.GetByteCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-229">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31070-230"><paramref name="chars" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="31070-230"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31070-231"><paramref name="count" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="31070-231"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="31070-232">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-232">-or-</span></span> 
<span data-ttu-id="31070-233">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może zostać zwrócona jako liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="31070-233">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31070-234">Wykrywanie błędów jest włączone i <paramref name="chars" /> zawiera nieprawidłową sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-234">Error detection is enabled and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="31070-235">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="31070-235">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="31070-236">- i -</span><span class="sxs-lookup"><span data-stu-id="31070-236">-and-</span></span> 
 <span data-ttu-id="31070-237"><see cref="P:System.Text.Encoding.EncoderFallback" />jest ustawiony na <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="31070-237"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="31070-238">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="31070-238">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="31070-239">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="31070-239">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="unicodeEncoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="31070-240">Tablica znaków zawierająca zestaw znaków do kodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-240">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="31070-241">Indeks pierwszego znaku do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-241">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="31070-242">Liczba znaków do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-242">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="31070-243">Oblicza liczbę bajtów wytwarzanych przez zakodowanie zestawu znaków z określonej tablicy znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-243">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="31070-244">Liczba bajtów generowanych przez kodowanie określonych znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-244">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-245">W celu obliczenia dokładnego rozmiaru tablicy wymaganego <xref:System.Text.UnicodeEncoding.GetBytes%2A> w celu przechowywania powstających bajtów aplikacja będzie używać. <xref:System.Text.UnicodeEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-245">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="31070-246">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-246">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="31070-247">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UnicodeEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-247">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="31070-248">Po włączeniu wykrywania błędów Nieprawidłowa sekwencja powoduje, że <xref:System.ArgumentException>ta metoda wygeneruje.</span><span class="sxs-lookup"><span data-stu-id="31070-248">With error detection enabled, an invalid sequence causes this method to throw an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="31070-249">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="31070-249">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="31070-250">Aby upewnić się, że zakodowane bajty są zdekodowane prawidłowo, gdy są zapisywane jako plik lub jako strumień, można prefiksować strumień zakodowanych bajtów z preambułą.</span><span class="sxs-lookup"><span data-stu-id="31070-250">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="31070-251">Wstawianie preambuły na początku strumienia bajtów (na przykład na początku serii bajtów, które mają być zapisywane do pliku) jest odpowiedzialnością dla deweloperów, a liczba bajtów w preambule nie jest odzwierciedlana w wartości zwracanej przez <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-251">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble Is not reflected in the value returned by the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31070-252">Poniższy przykład wypełnia tablicę wielkimi literami i małymi literami, a następnie wywołuje <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> metodę w celu określenia liczby bajtów wymaganych do zakodowania małych liter łacińskich.</span><span class="sxs-lookup"><span data-stu-id="31070-252">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="31070-253">Następnie wyświetla te informacje wraz z łączną liczbą bajtów, które są niezbędne, jeśli zostanie dodany znacznik kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-253">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="31070-254">Porównuje tę liczbę z wartością zwracaną przez <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metodę, która wskazuje maksymalną liczbę bajtów wymaganą do kodowania małych liter.</span><span class="sxs-lookup"><span data-stu-id="31070-254">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="31070-255">Poniższy przykład wypełnia tablicę kombinacją znaków greckich i cyrylicy i wywołuje <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> metodę w celu określenia liczby bajtów wymaganych do zakodowania znaków cyrylicy.</span><span class="sxs-lookup"><span data-stu-id="31070-255">The following example populates an array with a combination of Greek and Cyrillic characters and calls the <xref:System.Text.UnicodeEncoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Cyrillic characters.</span></span> <span data-ttu-id="31070-256">Następnie wyświetla te informacje wraz z łączną liczbą bajtów, które są niezbędne, jeśli zostanie dodany znacznik kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-256">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="31070-257">Porównuje tę liczbę z wartością zwracaną przez <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metodę, która wskazuje maksymalną liczbę bajtów wymaganą do zakodowania znaków cyrylicy.</span><span class="sxs-lookup"><span data-stu-id="31070-257">It compares this number with the value returned by the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Cyrillic characters.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.UnicodeEncoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.unicodeencoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31070-258"><paramref name="chars" />is <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="31070-258"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31070-259"><paramref name="index" />lub <paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="31070-259"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="31070-260">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-260">-or-</span></span> 
 <span data-ttu-id="31070-261"><paramref name="index" />i <paramref name="count" /> nie należy zauważyć prawidłowego zakresu w <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="31070-261"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="31070-262">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-262">-or-</span></span> 
<span data-ttu-id="31070-263">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może zostać zwrócona jako liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="31070-263">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31070-264">Wykrywanie błędów jest włączone i <paramref name="chars" /> zawiera nieprawidłową sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-264">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="31070-265">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="31070-265">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="31070-266">- i -</span><span class="sxs-lookup"><span data-stu-id="31070-266">-and-</span></span> 
 <span data-ttu-id="31070-267"><see cref="P:System.Text.Encoding.EncoderFallback" />jest ustawiony na <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="31070-267"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="31070-268">Koduje zestaw znaków w sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-268">Encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string -&gt; byte[]" Usage="unicodeEncoding.GetBytes s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="unicodeEncoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="charCount" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bytes" Type="System.Byte*" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="byteCount" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="31070-269">Wskaźnik do pierwszego znaku do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-269">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="31070-270">Liczba znaków do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-270">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="31070-271">Wskaźnik do lokalizacji, w której ma zostać rozpoczęte pisanie sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-271">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="31070-272">Maksymalna liczba bajtów do zapisania.</span><span class="sxs-lookup"><span data-stu-id="31070-272">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="31070-273">Koduje zestaw znaków, zaczynając od określonego wskaźnika znakowego do sekwencji bajtów, które są przechowywane, zaczynając od określonego wskaźnika bajtu.</span><span class="sxs-lookup"><span data-stu-id="31070-273">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="31070-274">Rzeczywista liczba bajtów zapisywana w lokalizacji wskazywanej przez <paramref name="bytes" /> parametr.</span><span class="sxs-lookup"><span data-stu-id="31070-274">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-275">Aby obliczyć dokładny rozmiar tablicy, który <xref:System.Text.UnicodeEncoding.GetBytes%2A> jest wymagany do przechowywania powstających bajtów, należy <xref:System.Text.UnicodeEncoding.GetByteCount%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-275">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetBytes%2A> requires to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="31070-276">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-276">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="31070-277">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UnicodeEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-277">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="31070-278">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje, że <xref:System.ArgumentException>ta metoda wygeneruje.</span><span class="sxs-lookup"><span data-stu-id="31070-278">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="31070-279">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="31070-279">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="31070-280">Dane do przekonwertowania, takie jak dane odczytane ze strumienia, mogą być dostępne tylko w blokach sekwencyjnych.</span><span class="sxs-lookup"><span data-stu-id="31070-280">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="31070-281">W tym przypadku lub, jeśli ilość danych jest tak duża, że musi <xref:System.Text.Decoder> być podzielona na mniejsze bloki, aplikacja powinna używać <xref:System.Text.Encoder> lub obiekt <xref:System.Text.UnicodeEncoding.GetEncoder%2A> dostarczony odpowiednio przez <xref:System.Text.UnicodeEncoding.GetDecoder%2A> lub metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-281">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31070-282">Aby upewnić się, że zakodowane bajty są zdekodowane prawidłowo, gdy są zapisywane jako plik lub jako strumień, można prefiksować strumień zakodowanych bajtów z preambułą.</span><span class="sxs-lookup"><span data-stu-id="31070-282">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="31070-283">Wstawianie preambuły na początku strumienia bajtów (na przykład na początku serii bajtów, które mają być zapisywane do pliku) jest odpowiedzialnością dla deweloperów.</span><span class="sxs-lookup"><span data-stu-id="31070-283">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="31070-284"><xref:System.Text.UnicodeEncoding.GetBytes%2A> Metoda nie dołącza preambuły do początku sekwencji zakodowanych bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-284">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31070-285"><paramref name="chars" />is <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="31070-285"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="31070-286">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-286">-or-</span></span> 
 <span data-ttu-id="31070-287"><paramref name="bytes" />is <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="31070-287"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31070-288"><paramref name="charCount" />lub <paramref name="byteCount" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="31070-288"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31070-289">Wykrywanie błędów jest włączone i <paramref name="chars" /> zawiera nieprawidłową sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-289">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="31070-290">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-290">-or-</span></span> 
 <span data-ttu-id="31070-291"><paramref name="byteCount" />jest mniejsza niż liczba bajtów będących wynikiem.</span><span class="sxs-lookup"><span data-stu-id="31070-291"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="31070-292">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="31070-292">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="31070-293">- i -</span><span class="sxs-lookup"><span data-stu-id="31070-293">-and-</span></span> 
 <span data-ttu-id="31070-294"><see cref="P:System.Text.Encoding.EncoderFallback" />jest ustawiony na <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="31070-294"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="31070-295">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="31070-295">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="31070-296">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="31070-296">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="unicodeEncoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="31070-297">Tablica znaków zawierająca zestaw znaków do kodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-297">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="31070-298">Indeks pierwszego znaku do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-298">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="31070-299">Liczba znaków do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-299">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="31070-300">Tablica bajtów, która zawiera wyniki sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-300">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="31070-301">Indeks, od którego ma zostać rozpoczęte zapisywanie wyniku sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-301">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="31070-302">Koduje zestaw znaków z określonej tablicy znaków w określonej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-302">Encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="31070-303">Rzeczywista liczba bajtów do <paramref name="bytes" />zapisania.</span><span class="sxs-lookup"><span data-stu-id="31070-303">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-304">Aby obliczyć dokładne rozmiary tablicy wymagane przez <xref:System.Text.UnicodeEncoding.GetBytes%2A> program do przechowywania wyników, należy <xref:System.Text.UnicodeEncoding.GetByteCount%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-304">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="31070-305">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-305">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="31070-306">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UnicodeEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-306">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="31070-307">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje, że <xref:System.ArgumentException>ta metoda wygeneruje.</span><span class="sxs-lookup"><span data-stu-id="31070-307">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="31070-308">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="31070-308">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="31070-309">Dane do przekonwertowania, takie jak dane odczytane ze strumienia, mogą być dostępne tylko w blokach sekwencyjnych.</span><span class="sxs-lookup"><span data-stu-id="31070-309">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="31070-310">W tym przypadku lub, jeśli ilość danych jest tak duża, że musi <xref:System.Text.Decoder> być podzielona na mniejsze bloki, aplikacja powinna używać <xref:System.Text.Encoder> lub <xref:System.Text.UnicodeEncoding.GetDecoder%2A> odpowiednio do metody lub <xref:System.Text.UnicodeEncoding.GetEncoder%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="31070-310">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31070-311">Aby upewnić się, że zakodowane bajty są zdekodowane prawidłowo, gdy są zapisywane jako plik lub jako strumień, można prefiksować strumień zakodowanych bajtów z preambułą.</span><span class="sxs-lookup"><span data-stu-id="31070-311">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="31070-312">Wstawianie preambuły na początku strumienia bajtów (na przykład na początku serii bajtów, które mają być zapisywane do pliku) jest odpowiedzialnością dla deweloperów.</span><span class="sxs-lookup"><span data-stu-id="31070-312">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="31070-313"><xref:System.Text.UnicodeEncoding.GetBytes%2A> Metoda nie dołącza preambuły do początku sekwencji zakodowanych bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-313">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31070-314">Poniższy przykład ilustruje sposób użycia <xref:System.Text.UnicodeEncoding.GetBytes%2A> metody do kodowania zakresu znaków <xref:System.String> z i przechowywania zakodowanych bajtów w zakresie elementów w tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-314">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method to encode a range of characters from a <xref:System.String> and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetBytes3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes3 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31070-315"><paramref name="chars" />is <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="31070-315"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="31070-316">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-316">-or-</span></span> 
 <span data-ttu-id="31070-317"><paramref name="bytes" />is <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="31070-317"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31070-318"><paramref name="charIndex" />lub <paramref name="charCount" />jestmniejszaod zera.<paramref name="byteIndex" /></span><span class="sxs-lookup"><span data-stu-id="31070-318"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="31070-319">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-319">-or-</span></span> 
 <span data-ttu-id="31070-320"><paramref name="charIndex" />i <paramref name="charCount" /> nie należy zauważyć prawidłowego zakresu w <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="31070-320"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="31070-321">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-321">-or-</span></span> 
 <span data-ttu-id="31070-322"><paramref name="byteIndex" />nie jest prawidłowym indeksem <paramref name="bytes" />w.</span><span class="sxs-lookup"><span data-stu-id="31070-322"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31070-323">Wykrywanie błędów jest włączone i <paramref name="chars" /> zawiera nieprawidłową sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-323">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="31070-324">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-324">-or-</span></span> 
 <span data-ttu-id="31070-325"><paramref name="bytes" />nie ma wystarczającej pojemności od <paramref name="byteIndex" /> do końca tablicy, aby pomieścić wyniki.</span><span class="sxs-lookup"><span data-stu-id="31070-325"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="31070-326">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="31070-326">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="31070-327">- i -</span><span class="sxs-lookup"><span data-stu-id="31070-327">-and-</span></span> 
 <span data-ttu-id="31070-328"><see cref="P:System.Text.Encoding.EncoderFallback" />jest ustawiony na <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="31070-328"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="unicodeEncoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="31070-329">Ciąg zawierający zestaw znaków do kodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-329">The string containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="31070-330">Indeks pierwszego znaku do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-330">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="31070-331">Liczba znaków do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-331">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="31070-332">Tablica bajtów, która zawiera wyniki sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-332">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="31070-333">Indeks, od którego ma zostać rozpoczęte zapisywanie wyniku sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-333">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="31070-334">Koduje zestaw znaków z określonego <see cref="T:System.String" /> w określonej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-334">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="31070-335">Rzeczywista liczba bajtów do <paramref name="bytes" />zapisania.</span><span class="sxs-lookup"><span data-stu-id="31070-335">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-336">Aby obliczyć dokładne rozmiary tablicy wymagane przez <xref:System.Text.UnicodeEncoding.GetBytes%2A> program do przechowywania wyników, należy <xref:System.Text.UnicodeEncoding.GetByteCount%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-336">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="31070-337">Aby obliczyć maksymalny rozmiar tablicy, należy wywołać <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-337">To calculate the maximum array size, you call the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="31070-338">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UnicodeEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-338">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="31070-339">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje, że <xref:System.ArgumentException>ta metoda wygeneruje.</span><span class="sxs-lookup"><span data-stu-id="31070-339">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="31070-340">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="31070-340">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="31070-341">Dane do przekonwertowania, takie jak dane odczytane ze strumienia, mogą być dostępne tylko w blokach sekwencyjnych.</span><span class="sxs-lookup"><span data-stu-id="31070-341">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="31070-342">W tym przypadku lub, jeśli ilość danych jest tak duża, że musi <xref:System.Text.Decoder> być podzielona na mniejsze bloki, aplikacja powinna używać <xref:System.Text.Encoder> lub <xref:System.Text.UnicodeEncoding.GetDecoder%2A> odpowiednio do metody lub <xref:System.Text.UnicodeEncoding.GetEncoder%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="31070-342">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31070-343">Aby upewnić się, że zakodowane bajty są zdekodowane prawidłowo, gdy są zapisywane jako plik lub jako strumień, można prefiksować strumień zakodowanych bajtów z preambułą.</span><span class="sxs-lookup"><span data-stu-id="31070-343">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="31070-344">Wstawianie preambuły na początku strumienia bajtów (na przykład na początku serii bajtów, które mają być zapisywane do pliku) jest odpowiedzialnością dla deweloperów.</span><span class="sxs-lookup"><span data-stu-id="31070-344">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="31070-345"><xref:System.Text.UnicodeEncoding.GetBytes%2A> Metoda nie dołącza preambuły do początku sekwencji zakodowanych bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-345">The <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31070-346">W poniższym przykładzie pokazano, jak zakodować zakres elementów z tablicy znaków Unicode i przechowywać zakodowane bajty w zakresie elementów w tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-346">The following example demonstrates how to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetBytes1 Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31070-347"><paramref name="s" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="31070-347"><paramref name="s" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="31070-348">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-348">-or-</span></span> 
 <span data-ttu-id="31070-349"><paramref name="bytes" />is <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="31070-349"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31070-350"><paramref name="charIndex" />lub <paramref name="charCount" />jestmniejszaod zera.<paramref name="byteIndex" /></span><span class="sxs-lookup"><span data-stu-id="31070-350"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="31070-351">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-351">-or-</span></span> 
 <span data-ttu-id="31070-352"><paramref name="charIndex" />i <paramref name="charCount" /> nie należy zauważyć prawidłowego zakresu w <paramref name="chars" />.</span><span class="sxs-lookup"><span data-stu-id="31070-352"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="31070-353">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-353">-or-</span></span> 
 <span data-ttu-id="31070-354"><paramref name="byteIndex" />nie jest prawidłowym indeksem <paramref name="bytes" />w.</span><span class="sxs-lookup"><span data-stu-id="31070-354"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31070-355">Wykrywanie błędów jest włączone i <paramref name="s" /> zawiera nieprawidłową sekwencję znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-355">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span></span>  
  
<span data-ttu-id="31070-356">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-356">-or-</span></span> 
 <span data-ttu-id="31070-357"><paramref name="bytes" />nie ma wystarczającej pojemności od <paramref name="byteIndex" /> do końca tablicy, aby pomieścić wyniki.</span><span class="sxs-lookup"><span data-stu-id="31070-357"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="31070-358">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="31070-358">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="31070-359">- i -</span><span class="sxs-lookup"><span data-stu-id="31070-359">-and-</span></span> 
 <span data-ttu-id="31070-360"><see cref="P:System.Text.Encoding.EncoderFallback" />jest ustawiony na <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="31070-360"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="31070-361">Oblicza liczbę znaków wytworzonych przez dekodowanie sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-361">Calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="unicodeEncoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="31070-362">Wskaźnik do pierwszego bajtu do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-362">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="31070-363">Liczba bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-363">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="31070-364">Oblicza liczbę znaków wytworzonych przez dekodowanie sekwencji bajtów, zaczynając od określonego wskaźnika bajtu.</span><span class="sxs-lookup"><span data-stu-id="31070-364">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="31070-365">Liczba znaków wytworzonych przez odkodowanie określonej sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-365">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-366">Aby obliczyć dokładny rozmiar tablicy, który <xref:System.Text.UnicodeEncoding.GetChars%2A> jest wymagany do przechowywania wyników, aplikacja używa. <xref:System.Text.UnicodeEncoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-366">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetChars%2A> requires to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="31070-367">Aby obliczyć maksymalny rozmiar tablicy, aplikacja powinna użyć <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="31070-367">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="31070-368">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UnicodeEncoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-368">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="31070-369">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje, że <xref:System.ArgumentException>ta metoda wygeneruje.</span><span class="sxs-lookup"><span data-stu-id="31070-369">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="31070-370">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="31070-370">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31070-371"><paramref name="bytes" />is <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="31070-371"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31070-372"><paramref name="count" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="31070-372"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="31070-373">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-373">-or-</span></span> 
<span data-ttu-id="31070-374">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może zostać zwrócona jako liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="31070-374">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31070-375">Wykrywanie błędów jest włączone i <paramref name="bytes" /> zawiera nieprawidłową sekwencję bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-375">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="31070-376">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="31070-376">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="31070-377">- i -</span><span class="sxs-lookup"><span data-stu-id="31070-377">-and-</span></span> 
 <span data-ttu-id="31070-378"><see cref="P:System.Text.Encoding.DecoderFallback" />jest ustawiony na <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="31070-378"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="31070-379">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="31070-379">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="31070-380">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="31070-380">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Text.UnicodeEncoding.GetChars" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="unicodeEncoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="31070-381">Tablica bajtowa zawierająca sekwencję bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-381">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="31070-382">Indeks pierwszego bajtu do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-382">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="31070-383">Liczba bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-383">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="31070-384">Oblicza liczbę znaków wytworzonych przez dekodowanie sekwencji bajtów z określonej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-384">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="31070-385">Liczba znaków wytworzonych przez odkodowanie określonej sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-385">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-386">Aby obliczyć dokładny rozmiar tablicy wymagany przez <xref:System.Text.UnicodeEncoding.GetChars%2A> program do przechowywania wyników, aplikacja używa. <xref:System.Text.UnicodeEncoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-386">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="31070-387">Aby obliczyć maksymalny rozmiar tablicy, aplikacja powinna użyć <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="31070-387">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="31070-388">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UnicodeEncoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-388">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="31070-389">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje, że <xref:System.ArgumentException>ta metoda wygeneruje.</span><span class="sxs-lookup"><span data-stu-id="31070-389">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="31070-390">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="31070-390">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31070-391">Poniższy przykład ilustruje sposób użycia <xref:System.Text.UnicodeEncoding.GetCharCount%2A> metody do zwrócenia liczby znaków generowanych przez dekodowanie zakresu elementów w tablicy bajtowej przy użyciu. <xref:System.Text.UnicodeEncoding></span><span class="sxs-lookup"><span data-stu-id="31070-391">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array using <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31070-392"><paramref name="bytes" />is <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="31070-392"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31070-393"><paramref name="index" />lub <paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="31070-393"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="31070-394">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-394">-or-</span></span> 
 <span data-ttu-id="31070-395"><paramref name="index" />i <paramref name="count" /> nie należy zauważyć prawidłowego zakresu w <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="31070-395"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="31070-396">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-396">-or-</span></span> 
<span data-ttu-id="31070-397">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może zostać zwrócona jako liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="31070-397">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31070-398">Wykrywanie błędów jest włączone i <paramref name="bytes" /> zawiera nieprawidłową sekwencję bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-398">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="31070-399">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="31070-399">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="31070-400">- i -</span><span class="sxs-lookup"><span data-stu-id="31070-400">-and-</span></span> 
 <span data-ttu-id="31070-401"><see cref="P:System.Text.Encoding.DecoderFallback" />jest ustawiony na <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="31070-401"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.UnicodeEncoding.GetChars" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="31070-402">Dekoduje sekwencję bajtów do zestawu znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-402">Decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="unicodeEncoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="byteCount" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="chars" Type="System.Char*" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="charCount" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="31070-403">Wskaźnik do pierwszego bajtu do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-403">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="31070-404">Liczba bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-404">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="31070-405">Wskaźnik do lokalizacji, w której ma zostać rozpoczęte pisanie zestawu znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-405">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="31070-406">Maksymalna liczba znaków do zapisania.</span><span class="sxs-lookup"><span data-stu-id="31070-406">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="31070-407">Dekoduje sekwencję bajtów rozpoczynającą się od określonego wskaźnika Byte do zestawu znaków, które są przechowywane, zaczynając od określonego wskaźnika znakowego.</span><span class="sxs-lookup"><span data-stu-id="31070-407">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="31070-408">Rzeczywista liczba znaków zapisywana w lokalizacji wskazywanej przez <paramref name="chars" /> parametr.</span><span class="sxs-lookup"><span data-stu-id="31070-408">The actual number of characters written at the location indicated by the <paramref name="chars" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-409">Aby obliczyć dokładny rozmiar tablicy, który <xref:System.Text.UnicodeEncoding.GetChars%2A> jest wymagany do przechowywania wyników, aplikacja używa. <xref:System.Text.UnicodeEncoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-409">To calculate the exact array size that <xref:System.Text.UnicodeEncoding.GetChars%2A> requires to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="31070-410">Aby obliczyć maksymalny rozmiar tablicy, aplikacja powinna użyć <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="31070-410">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="31070-411">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UnicodeEncoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-411">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="31070-412">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje, że <xref:System.ArgumentException>ta metoda wygeneruje.</span><span class="sxs-lookup"><span data-stu-id="31070-412">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="31070-413">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="31070-413">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="31070-414">Jeśli zakres bajtów do zdekodowania obejmuje oznaczenie kolejności bajtów (BOM) i tablicę bajtową zwróconą przez metodę typu nieopartego na BOM, znak U + FFFE jest zawarty w tablicy znaków zwracanej przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-414">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="31070-415">Można go usunąć, wywołując <xref:System.String.TrimStart%2A?displayProperty=nameWithType> metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-415">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="31070-416">Dane do przekonwertowania, takie jak dane odczytane ze strumienia, mogą być dostępne tylko w blokach sekwencyjnych.</span><span class="sxs-lookup"><span data-stu-id="31070-416">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="31070-417">W tym przypadku lub, jeśli ilość danych jest tak duża, że musi <xref:System.Text.Decoder> być podzielona na mniejsze bloki, aplikacja powinna używać <xref:System.Text.Encoder> lub obiekt <xref:System.Text.UnicodeEncoding.GetEncoder%2A> dostarczony odpowiednio przez <xref:System.Text.UnicodeEncoding.GetDecoder%2A> lub metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-417">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31070-418"><paramref name="bytes" />is <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="31070-418"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="31070-419">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-419">-or-</span></span> 
 <span data-ttu-id="31070-420"><paramref name="chars" />is <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="31070-420"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31070-421"><paramref name="byteCount" />lub <paramref name="charCount" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="31070-421"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31070-422">Wykrywanie błędów jest włączone i <paramref name="bytes" /> zawiera nieprawidłową sekwencję bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-422">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
<span data-ttu-id="31070-423">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-423">-or-</span></span> 
 <span data-ttu-id="31070-424"><paramref name="charCount" />jest mniejsza niż liczba znaków będących wynikiem.</span><span class="sxs-lookup"><span data-stu-id="31070-424"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="31070-425">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="31070-425">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="31070-426">- i -</span><span class="sxs-lookup"><span data-stu-id="31070-426">-and-</span></span> 
 <span data-ttu-id="31070-427"><see cref="P:System.Text.Encoding.DecoderFallback" />jest ustawiony na <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="31070-427"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="31070-428">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="31070-428">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="31070-429">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="31070-429">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="unicodeEncoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="31070-430">Tablica bajtowa zawierająca sekwencję bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-430">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="31070-431">Indeks pierwszego bajtu do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-431">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="31070-432">Liczba bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-432">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="31070-433">Tablica znaków, która będzie zawierać zestaw znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-433">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="31070-434">Indeks, od którego należy zacząć pisać zestaw znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-434">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="31070-435">Dekoduje sekwencję bajtów z określonej tablicy bajtów do określonej tablicy znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-435">Decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="31070-436">Rzeczywista liczba znaków do <paramref name="chars" />zapisania.</span><span class="sxs-lookup"><span data-stu-id="31070-436">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-437">Aby obliczyć dokładny rozmiar tablicy wymagany przez <xref:System.Text.UnicodeEncoding.GetChars%2A> program do przechowywania wyników, aplikacja używa. <xref:System.Text.UnicodeEncoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-437">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="31070-438">Aby obliczyć maksymalny rozmiar tablicy, aplikacja powinna użyć <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="31070-438">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="31070-439">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UnicodeEncoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-439">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="31070-440">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje, że <xref:System.ArgumentException>ta metoda wygeneruje.</span><span class="sxs-lookup"><span data-stu-id="31070-440">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="31070-441">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="31070-441">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="31070-442">Jeśli zakres bajtów do zdekodowania obejmuje oznaczenie kolejności bajtów (BOM) i tablicę bajtową zwróconą przez metodę typu nieopartego na BOM, znak U + FFFE jest zawarty w tablicy znaków zwracanej przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-442">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="31070-443">Można go usunąć, wywołując <xref:System.String.TrimStart%2A?displayProperty=nameWithType> metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-443">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="31070-444">Dane do przekonwertowania, takie jak dane odczytane ze strumienia, mogą być dostępne tylko w blokach sekwencyjnych.</span><span class="sxs-lookup"><span data-stu-id="31070-444">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="31070-445">W tym przypadku lub, jeśli ilość danych jest tak duża, że musi <xref:System.Text.Decoder> być podzielona na mniejsze bloki, aplikacja powinna używać <xref:System.Text.Encoder> lub <xref:System.Text.UnicodeEncoding.GetDecoder%2A> odpowiednio do metody lub <xref:System.Text.UnicodeEncoding.GetEncoder%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="31070-445">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> method or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31070-446">Poniższy przykład ilustruje sposób używania <xref:System.Text.UnicodeEncoding.GetChars%2A> metody do dekodowania zakresu elementów w tablicy bajtów i przechowywania wyniku w tablicy znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-446">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetChars%2A> method to decode a range of elements in a byte array and store the result in a character array.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31070-447"><paramref name="bytes" />is <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="31070-447"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>  
  
<span data-ttu-id="31070-448">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-448">-or-</span></span> 
 <span data-ttu-id="31070-449"><paramref name="chars" />is <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="31070-449"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31070-450"><paramref name="byteIndex" />lub <paramref name="byteCount" />jestmniejszaod zera.<paramref name="charIndex" /></span><span class="sxs-lookup"><span data-stu-id="31070-450"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="31070-451">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-451">-or-</span></span> 
 <span data-ttu-id="31070-452"><paramref name="byteindex" />i <paramref name="byteCount" /> nie należy zauważyć prawidłowego zakresu w <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="31070-452"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="31070-453">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-453">-or-</span></span> 
 <span data-ttu-id="31070-454"><paramref name="charIndex" />nie jest prawidłowym indeksem <paramref name="chars" />w.</span><span class="sxs-lookup"><span data-stu-id="31070-454"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31070-455">Wykrywanie błędów jest włączone i <paramref name="bytes" /> zawiera nieprawidłową sekwencję bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-455">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span>  
  
<span data-ttu-id="31070-456">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-456">-or-</span></span> 
 <span data-ttu-id="31070-457"><paramref name="chars" />nie ma wystarczającej pojemności od <paramref name="charIndex" /> do końca tablicy, aby pomieścić wyniki.</span><span class="sxs-lookup"><span data-stu-id="31070-457"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="31070-458">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="31070-458">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="31070-459">- i -</span><span class="sxs-lookup"><span data-stu-id="31070-459">-and-</span></span> 
 <span data-ttu-id="31070-460"><see cref="P:System.Text.Encoding.DecoderFallback" />jest ustawiony na <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="31070-460"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="unicodeEncoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31070-461">Uzyskuje dekoder, który konwertuje zakodowaną sekwencję bajtów UTF-16 na sekwencję znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="31070-461">Obtains a decoder that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="31070-462"><see cref="T:System.Text.Decoder" /> , Który konwertuje zakodowaną sekwencję bajtów UTF-16 na sekwencję znaków Unicode.</span><span class="sxs-lookup"><span data-stu-id="31070-462">A <see cref="T:System.Text.Decoder" /> that converts a UTF-16 encoded sequence of bytes into a sequence of Unicode characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-463">Metoda konwertuje sekwencyjne bloki bajtów do sekwencyjnych bloków znaków w sposób podobny <xref:System.Text.UnicodeEncoding.GetChars%2A>do. <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="31070-463">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span></span> <span data-ttu-id="31070-464"><xref:System.Text.Decoder> Jednak utrzymuje informacje o stanie między wywołaniami, aby można było poprawnie zdekodować sekwencje bajtów, które obejmują bloki.</span><span class="sxs-lookup"><span data-stu-id="31070-464">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="31070-465">Zachowuje <xref:System.Text.Decoder> również końcowe bajty na końcu bloków danych i używa końcowych bajtów w następnej operacji dekodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-465">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="31070-466">W związku z <xref:System.Text.UnicodeEncoding.GetEncoder%2A> tym isąprzydatnewprzypadkuoperacjitransmisjiwsieciiplików,ponieważteoperacjeczęstozajmująsięblokamidanych,aniezpełnymstrumieniemdanych.<xref:System.Text.UnicodeEncoding.GetDecoder%2A></span><span class="sxs-lookup"><span data-stu-id="31070-466">Therefore, <xref:System.Text.UnicodeEncoding.GetDecoder%2A> and <xref:System.Text.UnicodeEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="31070-467">Jeśli jest włączone wykrywanie błędów, oznacza to, `throwOnInvalidBytes` że parametr konstruktora jest ustawiony na `true`, wykrywanie błędów <xref:System.Text.Decoder> jest również włączone w zwracanym przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-467">If error detection is enabled, that is, the `throwOnInvalidBytes` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="31070-468">W przypadku włączenia wykrywania błędów i napotkania nieprawidłowej sekwencji stan dekodera jest niezdefiniowany i przetwarzanie musi zostać zatrzymane.</span><span class="sxs-lookup"><span data-stu-id="31070-468">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31070-469">Poniższy przykład używa kodera i dekodera do kodowania ciągu do tablicy bajtów, a następnie dekodowanie bajtów do tablicy znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-469">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/VB/encdec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="31070-470">Informacje o kodowaniu</span><span class="sxs-lookup"><span data-stu-id="31070-470">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="unicodeEncoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31070-471">Uzyskuje koder, który konwertuje sekwencję znaków Unicode na sekwencję bajtów w formacie UTF-16.</span><span class="sxs-lookup"><span data-stu-id="31070-471">Obtains an encoder that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="31070-472"><see cref="T:System.Text.Encoder" /> Obiekt, który konwertuje sekwencję znaków Unicode na sekwencję bajtów w formacie UTF-16.</span><span class="sxs-lookup"><span data-stu-id="31070-472">A <see cref="T:System.Text.Encoder" /> object that converts a sequence of Unicode characters into a UTF-16 encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-473">Metoda konwertuje sekwencyjne bloki znaków na bloki sekwencyjne bajtów w sposób podobny <xref:System.Text.UnicodeEncoding.GetBytes%2A> do metody tej klasy. <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="31070-473">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes in a manner similar to the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method of this class.</span></span> <span data-ttu-id="31070-474"><xref:System.Text.Encoder> Jednak obiekt przechowuje informacje o stanie między wywołaniami, dzięki czemu może poprawnie kodować sekwencje znaków, które obejmują bloki.</span><span class="sxs-lookup"><span data-stu-id="31070-474">However, a <xref:System.Text.Encoder> object maintains state information between calls so that it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="31070-475"><xref:System.Text.Encoder> Obiekt zachowuje również końcowe znaki na końcu bloków danych i używa znaków końcowych w następnej operacji kodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-475">The <xref:System.Text.Encoder> object also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="31070-476">Na przykład blok danych może kończyć się niedopasowanym surogatem, a zgodny z niską surogatem może znajdować się w następnym bloku danych.</span><span class="sxs-lookup"><span data-stu-id="31070-476">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="31070-477">W związku z <xref:System.Text.UnicodeEncoding.GetEncoder%2A> tym isąprzydatnewprzypadkuoperacjitransmisjiwsieciiplików,ponieważteoperacjeczęstozajmująsięblokamidanych,aniezpełnymstrumieniemdanych.<xref:System.Text.UnicodeEncoding.GetDecoder%2A></span><span class="sxs-lookup"><span data-stu-id="31070-477">Therefore, <xref:System.Text.UnicodeEncoding.GetDecoder%2A> and <xref:System.Text.UnicodeEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="31070-478">Jeśli jest włączone wykrywanie błędów, oznacza to, `throwOnInvalidBytes` że parametr konstruktora jest ustawiony na `true`, wykrywanie błędów <xref:System.Text.Encoder> jest również włączone w obiekcie zwracanym przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-478">If error detection is enabled, that is, the `throwOnInvalidBytes` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> object returned by this method.</span></span> <span data-ttu-id="31070-479">W przypadku włączenia wykrywania błędów i napotkania nieprawidłowej sekwencji stan kodera jest niezdefiniowany i przetwarzanie musi zostać zatrzymane.</span><span class="sxs-lookup"><span data-stu-id="31070-479">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31070-480">Poniższy przykład używa kodera i dekodera do kodowania ciągu do tablicy bajtów, a następnie dekodowanie bajtów do tablicy znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-480">The following example uses an encoder and a decoder to encode a string into an array of bytes, and then decode the bytes into an array of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CPP/encdec.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/CS/encdec.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.EncDec#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.EncDec/VB/encdec.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="31070-481">Informacje o kodowaniu</span><span class="sxs-lookup"><span data-stu-id="31070-481">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="unicodeEncoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31070-482">Zwraca kod skrótu dla bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="31070-482">Returns the hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="31070-483">Kod skrótu dla bieżącego <see cref="T:System.Text.UnicodeEncoding" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="31070-483">The hash code for the current <see cref="T:System.Text.UnicodeEncoding" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="unicodeEncoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="31070-484">Liczba znaków do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-484">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="31070-485">Oblicza maksymalną liczbę bajtów wyprodukowanych przez zakodowanie określonej liczby znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-485">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="31070-486">Maksymalna liczba bajtów wygenerowanych przez kodowanie określonej liczby znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-486">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-487">W celu obliczenia dokładnego rozmiaru tablicy wymaganego <xref:System.Text.UnicodeEncoding.GetBytes%2A> w celu przechowywania powstających bajtów aplikacja będzie używać. <xref:System.Text.UnicodeEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-487">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.UnicodeEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="31070-488">Aby obliczyć maksymalny rozmiar tablicy, aplikacja powinna użyć <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="31070-488">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="31070-489">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UnicodeEncoding.GetByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-489">The <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="31070-490"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>Pobiera najgorszą liczbę przypadków, w tym najgorszy przypadek dla aktualnie wybranego <xref:System.Text.EncoderFallback>elementu.</span><span class="sxs-lookup"><span data-stu-id="31070-490"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="31070-491">W przypadku wybrania rezerwy z potencjalnie dużym ciągiem <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> może zwracać duże wartości.</span><span class="sxs-lookup"><span data-stu-id="31070-491">If a fallback is chosen with a potentially large string, <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="31070-492">W większości przypadków ta metoda pobiera rozsądne liczby dla małych ciągów.</span><span class="sxs-lookup"><span data-stu-id="31070-492">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="31070-493">W przypadku dużych ciągów może zajść potrzeba wyboru między użyciem bardzo dużych buforów i przechwycenia błędów w rzadkich przypadkach, gdy zostanie przekroczony bardziej rozsądny bufor.</span><span class="sxs-lookup"><span data-stu-id="31070-493">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="31070-494">Warto również rozważyć inne podejście przy użyciu <xref:System.Text.UnicodeEncoding.GetByteCount%2A> lub. <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="31070-494">You might also want to consider a different approach using <xref:System.Text.UnicodeEncoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="31070-495"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>nie ma relacji do <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span><span class="sxs-lookup"><span data-stu-id="31070-495"><xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.UnicodeEncoding.GetChars%2A>.</span></span> <span data-ttu-id="31070-496">Jeśli aplikacja wymaga użycia <xref:System.Text.UnicodeEncoding.GetChars%2A>funkcji podobnej do, należy użyć. <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-496">If your application needs a similar function to use with <xref:System.Text.UnicodeEncoding.GetChars%2A>, it should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31070-497">`GetMaxByteCount(N)`nie musi być taka sama jak `N* GetMaxByteCount(1)`wartość.</span><span class="sxs-lookup"><span data-stu-id="31070-497">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31070-498">Poniższy przykład ilustruje sposób użycia <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> metody do zwrócenia maksymalnej liczby bajtów wymaganych do zakodowania określonej liczby znaków.</span><span class="sxs-lookup"><span data-stu-id="31070-498">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A> method to return the maximum number of bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetMaxByteCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31070-499"><paramref name="charCount" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="31070-499"><paramref name="charCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="31070-500">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-500">-or-</span></span> 
<span data-ttu-id="31070-501">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może zostać zwrócona jako liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="31070-501">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="31070-502">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="31070-502">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="31070-503">- i -</span><span class="sxs-lookup"><span data-stu-id="31070-503">-and-</span></span> 
 <span data-ttu-id="31070-504"><see cref="P:System.Text.Encoding.EncoderFallback" />jest ustawiony na <see cref="T:System.Text.EncoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="31070-504"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="unicodeEncoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="31070-505">Liczba bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-505">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="31070-506">Oblicza maksymalną liczbę znaków wyprodukowanych przez dekodowanie określonej liczby bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-506">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="31070-507">Maksymalna liczba znaków wytworzonych przez odkodowanie określonej liczby bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-507">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-508">Aby obliczyć dokładny rozmiar tablicy wymagany przez <xref:System.Text.UnicodeEncoding.GetChars%2A> program do przechowywania wyników, aplikacja używa. <xref:System.Text.UnicodeEncoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-508">To calculate the exact array size required by <xref:System.Text.UnicodeEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.UnicodeEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="31070-509">Aby obliczyć maksymalny rozmiar tablicy, aplikacja powinna użyć <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="31070-509">To calculate the maximum array size, the application should use <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="31070-510">Metoda ogólnie przydziela mniejszą ilość pamięci, podczas gdy metoda <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> zazwyczaj wykonuje się szybciej. <xref:System.Text.UnicodeEncoding.GetCharCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-510">The <xref:System.Text.UnicodeEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="31070-511"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>Pobiera najgorszą liczbę przypadków, w tym najgorszy przypadek dla aktualnie wybranego <xref:System.Text.DecoderFallback>elementu.</span><span class="sxs-lookup"><span data-stu-id="31070-511"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="31070-512">W przypadku wybrania rezerwy z potencjalnie dużym ciągiem <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> pobiera duże wartości.</span><span class="sxs-lookup"><span data-stu-id="31070-512">If a fallback is chosen with a potentially large string, <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> retrieves large values.</span></span>  
  
 <span data-ttu-id="31070-513">W większości przypadków ta metoda pobiera rozsądne liczby dla małych ciągów.</span><span class="sxs-lookup"><span data-stu-id="31070-513">In most cases, this method retrieves reasonable numbers for small strings.</span></span> <span data-ttu-id="31070-514">W przypadku dużych ciągów może zajść potrzeba wyboru między użyciem bardzo dużych buforów i przechwycenia błędów w rzadkich przypadkach, gdy zostanie przekroczony bardziej rozsądny bufor.</span><span class="sxs-lookup"><span data-stu-id="31070-514">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="31070-515">Warto również rozważyć inne podejście przy użyciu <xref:System.Text.UnicodeEncoding.GetCharCount%2A> lub. <xref:System.Text.Decoder.Convert%2A></span><span class="sxs-lookup"><span data-stu-id="31070-515">You might also want to consider a different approach using <xref:System.Text.UnicodeEncoding.GetCharCount%2A> or <xref:System.Text.Decoder.Convert%2A>.</span></span>  
  
 <span data-ttu-id="31070-516"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A>nie ma relacji do <xref:System.Text.UnicodeEncoding.GetBytes%2A>.</span><span class="sxs-lookup"><span data-stu-id="31070-516"><xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.UnicodeEncoding.GetBytes%2A>.</span></span> <span data-ttu-id="31070-517">Jeśli aplikacja wymaga użycia <xref:System.Text.UnicodeEncoding.GetBytes%2A>funkcji podobnej do, należy użyć. <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A></span><span class="sxs-lookup"><span data-stu-id="31070-517">If your application needs a similar function to use with <xref:System.Text.UnicodeEncoding.GetBytes%2A>, it should use <xref:System.Text.UnicodeEncoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31070-518">`GetMaxCharCount(N)`nie musi być taka sama jak `N* GetMaxCharCount(1)`wartość.</span><span class="sxs-lookup"><span data-stu-id="31070-518">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31070-519">Poniższy przykład ilustruje sposób użycia <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> metody do zwrócenia maksymalnej liczby znaków wygenerowanych przez dekodowanie określonej liczby bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-519">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetMaxCharCount%2A> method to return the maximum number of characters produced by decoding a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31070-520"><paramref name="byteCount" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="31070-520"><paramref name="byteCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="31070-521">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-521">-or-</span></span> 
<span data-ttu-id="31070-522">Wynikowa liczba bajtów jest większa niż maksymalna liczba, która może zostać zwrócona jako liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="31070-522">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="31070-523">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="31070-523">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="31070-524">- i -</span><span class="sxs-lookup"><span data-stu-id="31070-524">-and-</span></span> 
 <span data-ttu-id="31070-525"><see cref="P:System.Text.Encoding.DecoderFallback" />jest ustawiony na <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="31070-525"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="override this.GetPreamble : unit -&gt; byte[]" Usage="unicodeEncoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31070-526">Zwraca znacznik kolejności bajtów Unicode zakodowany w formacie UTF-16, jeśli Konstruktor dla tego wystąpienia żąda znacznika kolejności bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-526">Returns a Unicode byte order mark encoded in UTF-16 format, if the constructor for this instance requests a byte order mark.</span></span></summary>
        <returns><span data-ttu-id="31070-527">Tablica bajtowa zawierająca znacznik kolejności bajtów Unicode, jeśli <see cref="T:System.Text.UnicodeEncoding" /> obiekt jest skonfigurowany do dostarczania jednego.</span><span class="sxs-lookup"><span data-stu-id="31070-527">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UnicodeEncoding" /> object is configured to supply one.</span></span> <span data-ttu-id="31070-528">W przeciwnym razie ta metoda zwraca tablicę bajtów o zerowej długości.</span><span class="sxs-lookup"><span data-stu-id="31070-528">Otherwise, this method returns a zero-length byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-529"><xref:System.Text.UnicodeEncoding> Obiekt może dostarczyć preambułę, która jest tablicą bajtową, która może być poprzedzona sekwencją bajtów w wyniku procesu kodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-529">The <xref:System.Text.UnicodeEncoding> object can provide a preamble, which is a byte array that can be prefixed to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="31070-530">Poprzednia sekwencja zakodowanych bajtów ze znacznikiem kolejności bajtów (punkt kodu U + FEFF) pomaga dekoderowi określić kolejność bajtów i format transformacji lub UTF.</span><span class="sxs-lookup"><span data-stu-id="31070-530">Prefacing a sequence of encoded bytes with a byte order mark (code point U+FEFF) helps the decoder determine the byte order and the transformation format or UTF.</span></span> <span data-ttu-id="31070-531">Znacznik kolejności bajtów (BOM) Unicode jest serializowany w następujący sposób (w formacie szesnastkowym):</span><span class="sxs-lookup"><span data-stu-id="31070-531">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="31070-532">Kolejność bajtów big endian: FE FF</span><span class="sxs-lookup"><span data-stu-id="31070-532">Big endian byte order: FE FF</span></span>  
  
-   <span data-ttu-id="31070-533">Mała kolejność bajtów endian: FRF FE</span><span class="sxs-lookup"><span data-stu-id="31070-533">Little endian byte order: FF FE</span></span>  
  
 <span data-ttu-id="31070-534">Można utworzyć wystąpienie <xref:System.Text.UnicodeEncoding> obiektu, którego <xref:System.Text.UnicodeEncoding.GetPreamble%2A> Metoda zwraca prawidłowy BOM w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="31070-534">You can instantiate a <xref:System.Text.UnicodeEncoding> object whose <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="31070-535">Pobierając <xref:System.Text.UnicodeEncoding> obiekt zwrócony <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> przez lub <xref:System.Text.Encoding.BigEndianUnicode%2A?displayProperty=nameWithType> właściwość.</span><span class="sxs-lookup"><span data-stu-id="31070-535">By retrieving the <xref:System.Text.UnicodeEncoding> object returned by the <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> or <xref:System.Text.Encoding.BigEndianUnicode%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="31070-536">Wywołując <xref:System.Text.UnicodeEncoding.%23ctor> Konstruktor bez parametrów, aby <xref:System.Text.UnicodeEncoding> utworzyć wystąpienie obiektu.</span><span class="sxs-lookup"><span data-stu-id="31070-536">By calling the parameterless <xref:System.Text.UnicodeEncoding.%23ctor> constructor to instantiate a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
-   <span data-ttu-id="31070-537">Dostarczając `true` jako wartość `byteOrderMark` argumentu <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> lub konstruktorów.<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29></span><span class="sxs-lookup"><span data-stu-id="31070-537">By supplying `true` as the value of the `byteOrderMark` argument to the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> or <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructors.</span></span>  
  
 <span data-ttu-id="31070-538">Zalecamy korzystanie z BOM, ponieważ zapewnia niemal pewne identyfikatory kodowania dla plików, które w przeciwnym razie utraciły odwołanie do kodowania, takie jak nieoznakowane lub niewłaściwie oznakowane dane sieci Web lub losowe pliki tekstowe przechowywane, gdy firma nie miała zagadnienia międzynarodowe.</span><span class="sxs-lookup"><span data-stu-id="31070-538">We recommended that you use the BOM, since it provides nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</span></span> <span data-ttu-id="31070-539">Często można uniknąć problemów z użytkownikami, jeśli dane są spójne i poprawnie oznakowane.</span><span class="sxs-lookup"><span data-stu-id="31070-539">Often user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="31070-540">W przypadku standardów, które zapewniają typ kodowania, BOM jest nieco nadmiarowy.</span><span class="sxs-lookup"><span data-stu-id="31070-540">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="31070-541">Można go jednak użyć, aby ułatwić serwerowi wysyłanie poprawnego nagłówka kodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-541">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="31070-542">Alternatywnie, może być używany jako rezerwa w przypadku, gdy kodowanie jest tracone.</span><span class="sxs-lookup"><span data-stu-id="31070-542">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="31070-543">Istnieją pewne wady dotyczące korzystania z BOM.</span><span class="sxs-lookup"><span data-stu-id="31070-543">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="31070-544">Na przykład poznanie sposobu ograniczania pól bazy danych, które używają BOM, może być trudne.</span><span class="sxs-lookup"><span data-stu-id="31070-544">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="31070-545">Łączenie plików może być również problemem, na przykład podczas scalania plików w taki sposób, że niezbędny znak może kończyć się w danych.</span><span class="sxs-lookup"><span data-stu-id="31070-545">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="31070-546">Pomimo tego, że użycie BOM jest zdecydowanie zalecane.</span><span class="sxs-lookup"><span data-stu-id="31070-546">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31070-547">Aby upewnić się, że zakodowane bajty są zdekodowane prawidłowo, należy prefiksować początek strumienia zakodowanych bajtów z preambuły.</span><span class="sxs-lookup"><span data-stu-id="31070-547">To ensure that the encoded bytes are decoded properly, you should prefix the beginning of a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="31070-548">Należy zauważyć, <xref:System.Text.UnicodeEncoding.GetBytes%2A> że metoda nie dołącza BOM do sekwencji zakodowanych bajtów; dostarczenie BOM na początku odpowiedniego strumienia bajtów jest odpowiedzialnością dla deweloperów.</span><span class="sxs-lookup"><span data-stu-id="31070-548">Note that the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31070-549">Poniższy przykład ilustruje sposób użycia <xref:System.Text.UnicodeEncoding.GetPreamble%2A> metody do pobierania znacznika kolejności bajtów Unicode w big endian lub little endian kolejności bajtów dla wystąpienia <xref:System.Text.UnicodeEncoding>obiektu.</span><span class="sxs-lookup"><span data-stu-id="31070-549">The following example demonstrates how to use the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to retrieve the Unicode byte order mark in big endian or little endian byte order for an instance of a <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 [!code-cpp[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/CPP/getpreamble-.cpp#1)]
 [!code-csharp[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/CS/getpreamble-.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UnicodeEncoding.GetPreamble Example/VB/getpreamble-.vb#1)]  
  
 <span data-ttu-id="31070-550">W poniższym przykładzie tworzone są dwa <xref:System.Text.UnicodeEncoding> obiekty, z których pierwszy nie zawiera BOM, a drugi to.</span><span class="sxs-lookup"><span data-stu-id="31070-550">The following example instantiates two <xref:System.Text.UnicodeEncoding> objects, the first of which does not provide a BOM, and the second of which does.</span></span> <span data-ttu-id="31070-551">Następnie wywołuje <xref:System.Text.UnicodeEncoding.GetPreamble%2A> metodę, aby napisać BOM do pliku przed zapisaniem ciągu zakodowanego w formacie Unicode.</span><span class="sxs-lookup"><span data-stu-id="31070-551">It then calls the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to write the BOM to a file before writing a Unicode-encoded string.</span></span> <span data-ttu-id="31070-552">Jak widać dane wyjściowe konsoli z przykładu, plik, który zapisuje bajty z drugiego kodera, ma trzy więcej bajtów niż pierwszy.</span><span class="sxs-lookup"><span data-stu-id="31070-552">As the console output from the example shows, the file that saves the bytes from the second encoder has three more bytes than the first.</span></span>  
  
 [!code-csharp[System.Text.UnicodeEncoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Text.UnicodeEncoding.GetPreamble/cs/GetPreamble1.cs#1)]
 [!code-vb[System.Text.UnicodeEncoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Text.UnicodeEncoding.GetPreamble/vb/GetPreamble1.vb#1)]  
  
 <span data-ttu-id="31070-553">Pliki można także porównać przy użyciu `fc` polecenia w oknie konsoli lub można sprawdzić pliki w edytorze tekstów zawierający tryb widoku szesnastkowego.</span><span class="sxs-lookup"><span data-stu-id="31070-553">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="31070-554">Należy pamiętać, że gdy plik zostanie otwarty w edytorze, który obsługuje kodowanie UTF-16, nie jest wyświetlany BOM.</span><span class="sxs-lookup"><span data-stu-id="31070-554">Note that when the file is opened in an editor that supports UTF-16 encoding, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="unicodeEncoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="31070-555">Tablica bajtowa zawierająca sekwencję bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-555">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="31070-556">Indeks pierwszego bajtu do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-556">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="31070-557">Liczba bajtów do zdekodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-557">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="31070-558">Dekoduje zakres bajtów z tablicy bajtowej do ciągu.</span><span class="sxs-lookup"><span data-stu-id="31070-558">Decodes a range of bytes from a byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="31070-559"><see cref="T:System.String" /> Obiekt zawierający wyniki dekodowania określonej sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-559">A <see cref="T:System.String" /> object containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-560">W przypadku wykrywania błędów Nieprawidłowa sekwencja powoduje, że <xref:System.ArgumentException>ta metoda wygeneruje.</span><span class="sxs-lookup"><span data-stu-id="31070-560">With error detection, an invalid sequence causes this method to throw a <xref:System.ArgumentException>.</span></span> <span data-ttu-id="31070-561">Bez wykrywania błędów nieprawidłowe sekwencje są ignorowane i nie jest zgłaszany żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="31070-561">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="31070-562">Jeśli zakres bajtów do zdekodowania obejmuje oznaczenie kolejności bajtów (BOM) i tablicę bajtową zwróconą przez metodę typu nieopartego na BOM, znak U + FFFE jest zawarty w tablicy znaków zwracanej przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-562">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="31070-563">Można go usunąć, wywołując <xref:System.String.TrimStart%2A?displayProperty=nameWithType> metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-563">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="31070-564">Dane do przekonwertowania, takie jak dane odczytane ze strumienia, mogą być dostępne tylko w blokach sekwencyjnych.</span><span class="sxs-lookup"><span data-stu-id="31070-564">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="31070-565">W tym przypadku lub, jeśli ilość danych jest tak duża, że musi <xref:System.Text.Decoder> być podzielona na mniejsze bloki, aplikacja powinna używać <xref:System.Text.Encoder> lub obiekt <xref:System.Text.UnicodeEncoding.GetEncoder%2A> dostarczony odpowiednio przez <xref:System.Text.UnicodeEncoding.GetDecoder%2A> lub metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-565">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UnicodeEncoding.GetDecoder%2A> or the <xref:System.Text.UnicodeEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31070-566">W poniższym przykładzie jest inicjowana tablica przez wywołanie <xref:System.Text.UnicodeEncoding.GetByteCount%2A> metody w celu określenia dokładnie liczby bajtów wymaganych przez zakodowany ciąg, a następnie dodania rozmiaru znacznika kolejności bajtów (BOM).</span><span class="sxs-lookup"><span data-stu-id="31070-566">The following example initializes an array by calling the <xref:System.Text.UnicodeEncoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="31070-567">Przykład następnie wywołuje <xref:System.Text.UnicodeEncoding.GetPreamble%2A> metodę w celu zapisania BOM do tablicy przed <xref:System.Text.Encoding.GetBytes%2A> wywołaniem metody w celu zapisania zakodowanych bajtów do tablicy.</span><span class="sxs-lookup"><span data-stu-id="31070-567">The example then calls the <xref:System.Text.UnicodeEncoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="31070-568">Przykład następnie wywołuje metodę, <xref:System.Text.UnicodeEncoding.GetString%2A> Aby zdekodować ciąg.</span><span class="sxs-lookup"><span data-stu-id="31070-568">The example then calls the <xref:System.Text.UnicodeEncoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/cs/getstring1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/vb/getstring1.vb#1)]  
  
 <span data-ttu-id="31070-569">Należy zauważyć, że w tym przypadku zdekodowany ciąg różni się od oryginalnego ciągu, ponieważ zaczyna się od 16-bitowego znaku kolejności bajtów U + FFFD.</span><span class="sxs-lookup"><span data-stu-id="31070-569">Note that in this case the decoded string differs from the original string, since it begins with a 16-bit byte order mark U+FFFD.</span></span> <span data-ttu-id="31070-570">Oznacza to, że dwa ciągi będą porównywane jako nierówne i że jeśli ciąg jest wyprowadzany, będzie on wyświetlany jako znak zastępczy "?".</span><span class="sxs-lookup"><span data-stu-id="31070-570">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span> <span data-ttu-id="31070-571">Aby usunąć BOM na początku ciągu, można wywołać <xref:System.String.TrimStart%2A?displayProperty=nameWithType> metodę.</span><span class="sxs-lookup"><span data-stu-id="31070-571">To remove the BOM at the beginning of the string, you can call the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31070-572"><paramref name="bytes" />is <see langword="null" /> (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="31070-572"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31070-573"><paramref name="index" />lub <paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="31070-573"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="31070-574">—lub—</span><span class="sxs-lookup"><span data-stu-id="31070-574">-or-</span></span> 
 <span data-ttu-id="31070-575"><paramref name="index" />i <paramref name="count" /> nie należy zauważyć prawidłowego zakresu w <paramref name="bytes" />.</span><span class="sxs-lookup"><span data-stu-id="31070-575"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31070-576">Wykrywanie błędów jest włączone i <paramref name="bytes" /> zawiera nieprawidłową sekwencję bajtów.</span><span class="sxs-lookup"><span data-stu-id="31070-576">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="31070-577">Wystąpiła rezerwa (zobacz [kodowanie znaków w .NET Framework,](~/docs/standard/base-types/character-encoding.md) Aby uzyskać pełne wyjaśnienie)</span><span class="sxs-lookup"><span data-stu-id="31070-577">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for fuller explanation)</span></span> 
<span data-ttu-id="31070-578">- i -</span><span class="sxs-lookup"><span data-stu-id="31070-578">-and-</span></span> 
 <span data-ttu-id="31070-579"><see cref="P:System.Text.Encoding.DecoderFallback" />jest ustawiony na <see cref="T:System.Text.DecoderExceptionFallback" />.</span><span class="sxs-lookup"><span data-stu-id="31070-579"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetDecoder" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Preamble">
      <MemberSignature Language="C#" Value="public override ReadOnlySpan&lt;byte&gt; Preamble { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; Preamble" />
      <MemberSignature Language="DocId" Value="P:System.Text.UnicodeEncoding.Preamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Preamble As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property ReadOnlySpan&lt;System::Byte&gt; Preamble { ReadOnlySpan&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Preamble : ReadOnlySpan&lt;byte&gt;" Usage="System.Text.UnicodeEncoding.Preamble" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31070-580">Pobiera znacznik kolejności bajtów Unicode zakodowany w formacie UTF-16, jeśli ten obiekt jest skonfigurowany do jego dostarczania.</span><span class="sxs-lookup"><span data-stu-id="31070-580">Gets a Unicode byte order mark encoded in UTF-16 format, if this object is configured to supply one.</span></span></summary>
        <value><span data-ttu-id="31070-581">Zakres bajtów zawierający znacznik kolejności bajtów Unicode, jeśli ten obiekt jest skonfigurowany do jego dostarczania; w przeciwnym razie domyślnym zakresem.</span><span class="sxs-lookup"><span data-stu-id="31070-581">A byte span containing the Unicode byte order mark, if this object is configured to supply one; otherwise, the default span.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31070-582"><xref:System.Text.UnicodeEncoding> Obiekt może dostarczyć preambuły, który jest zakresem bajtów, który można dołączać do sekwencji bajtów wynikających z procesu kodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-582">The <xref:System.Text.UnicodeEncoding> object can provide a preamble, which is a byte span that can be prepended to the sequence of bytes resulting from the encoding process.</span></span> <span data-ttu-id="31070-583">Poprzednia sekwencja zakodowanych bajtów ze znacznikiem kolejności bajtów (punkt `U+FEFF`kodowy) pomaga dekoderowi określić kolejność bajtów i format transformacji lub UTF.</span><span class="sxs-lookup"><span data-stu-id="31070-583">Prefacing a sequence of encoded bytes with a byte order mark (code point `U+FEFF`) helps the decoder determine the byte order and the transformation format or UTF.</span></span> <span data-ttu-id="31070-584">Znacznik kolejności bajtów (BOM) Unicode jest serializowany w następujący sposób (w formacie szesnastkowym):</span><span class="sxs-lookup"><span data-stu-id="31070-584">The Unicode byte order mark (BOM) is serialized as follows (in hexadecimal):</span></span>  
  
-   <span data-ttu-id="31070-585">Kolejność bajtów big endian:`FE FF`</span><span class="sxs-lookup"><span data-stu-id="31070-585">Big endian byte order: `FE FF`</span></span>  
  
-   <span data-ttu-id="31070-586">Mała kolejność bajtów endian:`FF FE`</span><span class="sxs-lookup"><span data-stu-id="31070-586">Little endian byte order: `FF FE`</span></span>  
  
 <span data-ttu-id="31070-587">Można utworzyć wystąpienie <xref:System.Text.UnicodeEncoding> obiektu, którego <xref:System.Text.UnicodeEncoding.Preamble> jest prawidłowym BOM w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="31070-587">You can instantiate a <xref:System.Text.UnicodeEncoding> object whose <xref:System.Text.UnicodeEncoding.Preamble> is a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="31070-588">Pobierając <xref:System.Text.UnicodeEncoding> obiekt zwrócony <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> przez lub <xref:System.Text.Encoding.BigEndianUnicode%2A?displayProperty=nameWithType> właściwość.</span><span class="sxs-lookup"><span data-stu-id="31070-588">By retrieving the <xref:System.Text.UnicodeEncoding> object returned by the <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> or <xref:System.Text.Encoding.BigEndianUnicode%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="31070-589">Wywołując <xref:System.Text.UnicodeEncoding.%23ctor> Konstruktor bez parametrów, aby <xref:System.Text.UnicodeEncoding> utworzyć wystąpienie obiektu.</span><span class="sxs-lookup"><span data-stu-id="31070-589">By calling the parameterless <xref:System.Text.UnicodeEncoding.%23ctor> constructor to instantiate a <xref:System.Text.UnicodeEncoding> object.</span></span>  
  
-   <span data-ttu-id="31070-590">Dostarczając `true` jako wartość `byteOrderMark` argumentu <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> lub konstruktorów.<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29></span><span class="sxs-lookup"><span data-stu-id="31070-590">By supplying `true` as the value of the `byteOrderMark` argument to the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> or <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%2CSystem.Boolean%29> constructors.</span></span>  
  
 <span data-ttu-id="31070-591">Zalecamy korzystanie z BOM, ponieważ zapewnia niemal pewne identyfikatory kodowania dla plików, które w przeciwnym razie utraciły odwołanie do kodowania, takie jak nieoznakowane lub niewłaściwie oznakowane dane sieci Web lub losowe pliki tekstowe przechowywane, gdy firma nie miała zagadnienia międzynarodowe.</span><span class="sxs-lookup"><span data-stu-id="31070-591">We recommended that you use the BOM, since it provides nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</span></span> <span data-ttu-id="31070-592">Często można uniknąć problemów z użytkownikami, jeśli dane są spójne i poprawnie oznakowane.</span><span class="sxs-lookup"><span data-stu-id="31070-592">Often user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="31070-593">W przypadku standardów, które zapewniają typ kodowania, BOM jest nieco nadmiarowy.</span><span class="sxs-lookup"><span data-stu-id="31070-593">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="31070-594">Można go jednak użyć, aby ułatwić serwerowi wysyłanie poprawnego nagłówka kodowania.</span><span class="sxs-lookup"><span data-stu-id="31070-594">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="31070-595">Alternatywnie, może być używany jako rezerwa w przypadku, gdy kodowanie jest tracone.</span><span class="sxs-lookup"><span data-stu-id="31070-595">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="31070-596">Istnieją pewne wady dotyczące korzystania z BOM.</span><span class="sxs-lookup"><span data-stu-id="31070-596">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="31070-597">Na przykład poznanie sposobu ograniczania pól bazy danych, które używają BOM, może być trudne.</span><span class="sxs-lookup"><span data-stu-id="31070-597">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="31070-598">Łączenie plików może być również problemem, na przykład podczas scalania plików w taki sposób, że niezbędny znak może kończyć się w danych.</span><span class="sxs-lookup"><span data-stu-id="31070-598">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="31070-599">Pomimo tego, że użycie BOM jest zdecydowanie zalecane.</span><span class="sxs-lookup"><span data-stu-id="31070-599">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31070-600">Aby upewnić się, że zakodowane bajty są zdekodowane prawidłowo, należy prefiksować początek strumienia zakodowanych bajtów z preambuły.</span><span class="sxs-lookup"><span data-stu-id="31070-600">To ensure that the encoded bytes are decoded properly, you should prefix the beginning of a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="31070-601">Należy zauważyć, <xref:System.Text.UnicodeEncoding.GetBytes%2A> że metoda nie dołącza BOM do sekwencji zakodowanych bajtów; dostarczenie BOM na początku odpowiedniego strumienia bajtów jest odpowiedzialnością dla deweloperów.</span><span class="sxs-lookup"><span data-stu-id="31070-601">Note that the <xref:System.Text.UnicodeEncoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
