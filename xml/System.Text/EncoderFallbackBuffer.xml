<Type Name="EncoderFallbackBuffer" FullName="System.Text.EncoderFallbackBuffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e141f420e0edf6d758c8945e920a86ecdb9ac315" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58721556" /></Metadata><TypeSignature Language="C#" Value="public abstract class EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallbackBuffer abstract" />
  <TypeSignature Language="F#" Value="type EncoderFallbackBuffer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cfe40-101">Udostępnia bufor, umożliwiająca rezerwowego obsługi do zwrócenia ciągu alternatywne do kodera, jeśli go nie można zakodować wprowadzanych znaków.</span><span class="sxs-lookup"><span data-stu-id="cfe40-101">Provides a buffer that allows a fallback handler to return an alternate string to an encoder when it cannot encode an input character.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe40-102">Kodowanie definiuje mapowanie między znaków Unicode i zakodowany sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="cfe40-102">An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</span></span> <span data-ttu-id="cfe40-103">Kodowanie operacji, która konwertuje wprowadzanych znaków do sekwencji bajtów danych wyjściowych, kończy się niepowodzeniem, jeśli nie zdefiniowano żadnego mapowania dla określonego znaku.</span><span class="sxs-lookup"><span data-stu-id="cfe40-103">An encoding operation, which converts an input character to an output byte sequence, fails if no mapping is defined for a particular character.</span></span>  
  
 <span data-ttu-id="cfe40-104">.NET Framework zawiera błąd obsługi mechanizmu, o nazwie rezerwowe, jeśli nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="cfe40-104">The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</span></span> <span data-ttu-id="cfe40-105">Wszystkie programy obsługi rezerwowego kodera należy zaimplementować następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="cfe40-105">All encoder fallback handlers must implement the following:</span></span>  
  
-   <span data-ttu-id="cfe40-106">Koder rezerwowy, który jest reprezentowany przez klasę pochodną <xref:System.Text.EncoderFallback> klasy.</span><span class="sxs-lookup"><span data-stu-id="cfe40-106">An encoder fallback, which is represented by a class derived from the <xref:System.Text.EncoderFallback> class.</span></span>  
  
-   <span data-ttu-id="cfe40-107">Koder bufora rezerwowy, która jest reprezentowana przez typ pochodzący od <xref:System.Text.EncoderFallbackBuffer> klasę, która może zwracać ciąg do operacji konwersji.</span><span class="sxs-lookup"><span data-stu-id="cfe40-107">An encoder fallback buffer, which is represented by a type derived from the <xref:System.Text.EncoderFallbackBuffer> class that can return a string to the conversion operation.</span></span>  
  
 <span data-ttu-id="cfe40-108">Planów awaryjnych służą trzy strategie do obsługi błędów konwersji:</span><span class="sxs-lookup"><span data-stu-id="cfe40-108">Fallbacks can use three strategies to handle conversion failures:</span></span>  
  
-   <span data-ttu-id="cfe40-109">Mapowanie najlepszego dopasowania.</span><span class="sxs-lookup"><span data-stu-id="cfe40-109">Best-fit mapping.</span></span> <span data-ttu-id="cfe40-110">Bufora rezerwowy kodera może zwracać ciąg reprezentujący bliskie zbliżenia do wprowadzanych znaków.</span><span class="sxs-lookup"><span data-stu-id="cfe40-110">The encoder fallback buffer can return a string that represents a close approximation to the input character.</span></span> <span data-ttu-id="cfe40-111">.NET Framework nie udostępnia publiczny najlepszego dopasowania <xref:System.Text.EncoderFallbackBuffer> implementacji.</span><span class="sxs-lookup"><span data-stu-id="cfe40-111">The .NET Framework does not provide a public best-fit <xref:System.Text.EncoderFallbackBuffer> implementation.</span></span>  
  
-   <span data-ttu-id="cfe40-112">Zastąpienie.</span><span class="sxs-lookup"><span data-stu-id="cfe40-112">Replacement.</span></span> <span data-ttu-id="cfe40-113">Bufora rezerwowy kodera może zwrócić ciągu, takich jak znak zapytania ("?"), który wskazuje, że znak nie może być kodowany.</span><span class="sxs-lookup"><span data-stu-id="cfe40-113">The encoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a character could not be encoded.</span></span> <span data-ttu-id="cfe40-114">W .NET Framework <xref:System.Text.EncoderReplacementFallback> i <xref:System.Text.EncoderReplacementFallbackBuffer> klasy zapewniają implementacji bufora rezerwowy zastąpienie publicznych.</span><span class="sxs-lookup"><span data-stu-id="cfe40-114">In the .NET Framework, the <xref:System.Text.EncoderReplacementFallback> and <xref:System.Text.EncoderReplacementFallbackBuffer> classes provide a public replacement fallback buffer implementation.</span></span> <span data-ttu-id="cfe40-115">Konstruktor obiektu <xref:System.Text.EncoderReplacementFallback> klasy pozwala zdefiniować ciąg zamienny.</span><span class="sxs-lookup"><span data-stu-id="cfe40-115">The constructor of the <xref:System.Text.EncoderReplacementFallback> class enables you to define the replacement string.</span></span>  
  
-   <span data-ttu-id="cfe40-116">Wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cfe40-116">Exception.</span></span> <span data-ttu-id="cfe40-117"><xref:System.Text.EncoderFallbackBuffer> Implementacja zwraca wyjątek, który wskazuje, że znak nie może zostać zakodowany i zakończy operację kodowania.</span><span class="sxs-lookup"><span data-stu-id="cfe40-117">The <xref:System.Text.EncoderFallbackBuffer> implementation throws an exception, which indicates that a character cannot be encoded, and terminates the encoding operation.</span></span> <span data-ttu-id="cfe40-118">W takim przypadku należy podać obsługi rezerwowego <xref:System.Text.EncoderFallbackBuffer> implementacji, mimo że nie zwraca ciąg do kodera.</span><span class="sxs-lookup"><span data-stu-id="cfe40-118">In this case, the fallback handler must provide an <xref:System.Text.EncoderFallbackBuffer> implementation, although it does not return a string to the encoder.</span></span> <span data-ttu-id="cfe40-119">W .NET Framework <xref:System.Text.EncoderExceptionFallback> i <xref:System.Text.EncoderExceptionFallbackBuffer> klasy zapewniają publicznych wyjątek implementacji rezerwowej, która zgłasza <xref:System.Text.EncoderFallbackException> po znaku nie może być zakodowany.</span><span class="sxs-lookup"><span data-stu-id="cfe40-119">In the .NET Framework, the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.EncoderExceptionFallbackBuffer> classes provide a public exception fallback implementation that throws an <xref:System.Text.EncoderFallbackException> when a character cannot be encoded.</span></span>  
  
 <span data-ttu-id="cfe40-120">Bufor w <xref:System.Text.EncoderFallbackBuffer> implementacji reprezentuje cały ciąg zwracany do kodera w odpowiedzi na koder rezerwowego.</span><span class="sxs-lookup"><span data-stu-id="cfe40-120">The buffer in an <xref:System.Text.EncoderFallbackBuffer> implementation represents the entire string to be returned to the encoder in response to an encoder fallback.</span></span> <span data-ttu-id="cfe40-121">Ogólnie rzecz biorąc implementacje również obejmować informacje o stanie, takie jak indeks następnego znaku, aby powrócić do kodera i liczbę pozostałych znaków, które mają zostać zwrócone.</span><span class="sxs-lookup"><span data-stu-id="cfe40-121">Generally, implementations also include state information, such as the index of the next character to return to the encoder and the number of remaining characters to be returned.</span></span> <span data-ttu-id="cfe40-122">Ponieważ <xref:System.Text.EncoderFallbackBuffer> jest klasą abstrakcyjną wymaga klasy pochodne, aby zaimplementować następujące elementy Członkowskie co najmniej:</span><span class="sxs-lookup"><span data-stu-id="cfe40-122">Because <xref:System.Text.EncoderFallbackBuffer> is an abstract class, it requires derived classes to implement the following members at a minimum:</span></span>  
  
-   <span data-ttu-id="cfe40-123">Przeciążone <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> metody, która jest wywoływana przez koder, gdy nie można zakodować, znak.</span><span class="sxs-lookup"><span data-stu-id="cfe40-123">The overloaded <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method, which is called by the encoder when it cannot encode a character.</span></span> <span data-ttu-id="cfe40-124">Koder przekazuje informacje do implementacji rezerwowej buforu: znak lub para zastępcza, który nie może być kodowany i indeks znaku w danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="cfe40-124">The encoder passes two pieces of information to the fallback buffer implementation: the character or surrogate pair that could not be encoded and the index of the character in the input.</span></span> <span data-ttu-id="cfe40-125">W obsłudze wyjątków rezerwowego kodera wyjątek jest zgłaszany w przypadku tej metody.</span><span class="sxs-lookup"><span data-stu-id="cfe40-125">In an encoder fallback exception handler, the exception is thrown in this method.</span></span> <span data-ttu-id="cfe40-126">W przeciwnym razie metoda zwraca `true` zapewnia rezerwowe, lub `false` Jeśli tak nie jest.</span><span class="sxs-lookup"><span data-stu-id="cfe40-126">Otherwise, the method returns `true` if it provides a fallback, or `false` if it does not.</span></span>  
  
-   <span data-ttu-id="cfe40-127"><xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> Metody, która jest wywoływana, wielokrotnie przez koder Jeśli <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> metoda zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="cfe40-127">The <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method, which is called repeatedly by the encoder if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`.</span></span> <span data-ttu-id="cfe40-128">W kolejnych wywołaniach procedura obsługi powinna zwrócić każdego znaku w buforze jej.</span><span class="sxs-lookup"><span data-stu-id="cfe40-128">In successive calls, the handler should return each character in its buffer.</span></span> <span data-ttu-id="cfe40-129">Gdy zostanie on zwrócony wszystkie znaki, powinien zostać zwrócony U + 0000.</span><span class="sxs-lookup"><span data-stu-id="cfe40-129">When it has returned all characters, it should return U+0000.</span></span> <span data-ttu-id="cfe40-130">Program obsługi wyjątku zawsze zwraca wartość U + 0000.</span><span class="sxs-lookup"><span data-stu-id="cfe40-130">An exception handler always returns U+0000.</span></span>  
  
-   <span data-ttu-id="cfe40-131"><xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> Metody, która podejmuje próbę Przesuń wskaźnik do poprzedniej pozycji w buforze i wskazuje, czy przeniesienie zakończyło się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="cfe40-131">The <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</span></span> <span data-ttu-id="cfe40-132">Zawsze zwraca program obsługi wyjątku `false`.</span><span class="sxs-lookup"><span data-stu-id="cfe40-132">An exception handler always returns `false`.</span></span>  
  
-   <span data-ttu-id="cfe40-133"><xref:System.Text.EncoderFallbackBuffer.Remaining%2A> Właściwość, która wskazuje liczbę pozostałych znaków do zwrócenia do kodera.</span><span class="sxs-lookup"><span data-stu-id="cfe40-133">The <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> property, which indicates the number of remaining characters to be returned to the encoder.</span></span> <span data-ttu-id="cfe40-134">Do obsługi rezerwowego wyjątku zawsze zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="cfe40-134">An exception fallback handler always returns zero.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallback" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="cfe40-135">Kodowanie znaków w programie .NET Framework</span><span class="sxs-lookup"><span data-stu-id="cfe40-135">Character Encoding in the .NET Framework</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Cyrillic-to-Roman-f7e88b29"><span data-ttu-id="cfe40-136">Przykład: Cyrilice do narzędzia Transliterację litery rzymskie</span><span class="sxs-lookup"><span data-stu-id="cfe40-136">Sample: Cyrillic to Roman Transliteration Utility</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfe40-137">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.EncoderFallbackBuffer" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="cfe40-137">Initializes a new instance of the <see cref="T:System.Text.EncoderFallbackBuffer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cfe40-138">Wskazuje, czy ciąg zastępczy jest dostępny, jeśli oryginalne dane wejściowe nie mogą być kodowane, czy mają być ignorowane oryginalne dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="cfe40-138">Indicates whether a substitute string is available when the original input cannot be encoded, or whether the original input should be ignored.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknown, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown"><span data-ttu-id="cfe40-139">Wprowadzanych znaków.</span><span class="sxs-lookup"><span data-stu-id="cfe40-139">An input character.</span></span></param>
        <param name="index"><span data-ttu-id="cfe40-140">Pozycja indeksu znaku w buforze wejściowym.</span><span class="sxs-lookup"><span data-stu-id="cfe40-140">The index position of the character in the input buffer.</span></span></param>
        <summary><span data-ttu-id="cfe40-141">W przypadku przesłonięcia w klasie pochodnej, przygotowuje rezerwowego buforu do obsługi określonego wprowadzanych znaków.</span><span class="sxs-lookup"><span data-stu-id="cfe40-141">When overridden in a derived class, prepares the fallback buffer to handle the specified input character.</span></span></summary>
        <returns><span data-ttu-id="cfe40-142"><see langword="true" /> Jeśli bufora rezerwowy może przetwarzać <paramref name="charUnknown" />; <see langword="false" /> Jeśli ignoruje bufora rezerwowy <paramref name="charUnknown" />.</span><span class="sxs-lookup"><span data-stu-id="cfe40-142"><see langword="true" /> if the fallback buffer can process <paramref name="charUnknown" />; <see langword="false" /> if the fallback buffer ignores <paramref name="charUnknown" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe40-143"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> i <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> wywołanie metody <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> w momencie napotkania nieznany znak danych wejściowych, który nie może być zakodowany.</span><span class="sxs-lookup"><span data-stu-id="cfe40-143">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> if they encounter an unknown input character that cannot be encoded.</span></span> <span data-ttu-id="cfe40-144">Zwracana wartość wynosząca `true` wskazuje, że bufora rezerwowy może przetwarzać znak wejścia, co powoduje, że wywoływania metody do wywołania <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> metodę, aby uzyskać każdy znak z bufora rezerwowy.</span><span class="sxs-lookup"><span data-stu-id="cfe40-144">A return value of `true` indicates that the fallback buffer can process the input character, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span> <span data-ttu-id="cfe40-145">Ponieważ nie przetwarza pojedyncze znaki, <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> zgłasza wyjątek, metoda w rezerwowej program obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="cfe40-145">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknownHigh, charUnknownLow, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh"><span data-ttu-id="cfe40-146">Znakiem zastępczym wysokiego poziomu pary danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="cfe40-146">The high surrogate of the input pair.</span></span></param>
        <param name="charUnknownLow"><span data-ttu-id="cfe40-147">Znak zastępczy niskiego poziomu pary danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="cfe40-147">The low surrogate of the input pair.</span></span></param>
        <param name="index"><span data-ttu-id="cfe40-148">Pozycja indeksu Para dwuskładnikowa w buforze wejściowym.</span><span class="sxs-lookup"><span data-stu-id="cfe40-148">The index position of the surrogate pair in the input buffer.</span></span></param>
        <summary><span data-ttu-id="cfe40-149">W przypadku przesłonięcia w klasie pochodnej, przygotowuje rezerwowego buforu do obsługi para zastępcza określony.</span><span class="sxs-lookup"><span data-stu-id="cfe40-149">When overridden in a derived class, prepares the fallback buffer to handle the specified surrogate pair.</span></span></summary>
        <returns><span data-ttu-id="cfe40-150"><see langword="true" /> Jeśli bufora rezerwowy może przetwarzać <paramref name="charUnknownHigh" /> i <paramref name="charUnknownLow" />; <see langword="false" /> Jeśli bufora rezerwowy ignoruje para zastępcza.</span><span class="sxs-lookup"><span data-stu-id="cfe40-150"><see langword="true" /> if the fallback buffer can process <paramref name="charUnknownHigh" /> and <paramref name="charUnknownLow" />; <see langword="false" /> if the fallback buffer ignores the surrogate pair.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe40-151"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> i <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> wywołanie metody <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> w momencie napotkania para zastępcza w danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="cfe40-151">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> if they encounter a surrogate pair in their input.</span></span> <span data-ttu-id="cfe40-152">Zwracana wartość wynosząca `true` wskazuje, że bufora rezerwowy może przetwarzać para zastępcza, co powoduje, że wywoływania metody do wywołania <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> metodę, aby uzyskać każdy znak z bufora rezerwowy.</span><span class="sxs-lookup"><span data-stu-id="cfe40-152">A return value of `true` indicates that the fallback buffer can process the surrogate pair, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span>  <span data-ttu-id="cfe40-153">Ponieważ nie przetwarza pojedyncze znaki, <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> zgłasza wyjątek, metoda w rezerwowej program obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="cfe40-153">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberSignature Language="F#" Value="abstract member GetNextChar : unit -&gt; char" Usage="encoderFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfe40-154">Po przesłonięciu w klasie pochodnej pobiera następny znak w buforze rezerwowego.</span><span class="sxs-lookup"><span data-stu-id="cfe40-154">When overridden in a derived class, retrieves the next character in the fallback buffer.</span></span></summary>
        <returns><span data-ttu-id="cfe40-155">Następny znak w buforze rezerwowego.</span><span class="sxs-lookup"><span data-stu-id="cfe40-155">The next character in the fallback buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe40-156">Wywołuje operację kodowania <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> metody, jeśli operacja napotkał nieznany znak lub Para dwuskładnikowa w danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="cfe40-156">An encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method if the operation encounters an unknown character or surrogate pair in the input.</span></span> <span data-ttu-id="cfe40-157">Na przykład w przypadku rezerwową, jeśli zastąpienie <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> metoda zwraca `true`, istnieje Zastąp ciąg, który można zakodować zamiast nieznany danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="cfe40-157">For example, in the case of a replacement fallback, if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`, a substitute string exists that can be encoded instead of the unknown input.</span></span> <span data-ttu-id="cfe40-158">Kodowanie wywołania operacji <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> metoda wielokrotnie i uzyskuje ciągu zastępuje jeden znak w danym momencie.</span><span class="sxs-lookup"><span data-stu-id="cfe40-158">The encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method repeatedly and obtains the substitute string one character at a time.</span></span> <span data-ttu-id="cfe40-159">W przypadku wszystkich znaków w buforze rezerwowym zostały zwrócone z koderem <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> metoda powinna zwrócić U + 0000.</span><span class="sxs-lookup"><span data-stu-id="cfe40-159">When all characters in the fallback buffer have been returned to the encoder, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 <span data-ttu-id="cfe40-160">Do obsługi rezerwowego wyjątków <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> metoda powinna zwrócić U + 0000.</span><span class="sxs-lookup"><span data-stu-id="cfe40-160">For an exception fallback handler, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberSignature Language="F#" Value="abstract member MovePrevious : unit -&gt; bool" Usage="encoderFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfe40-161">W przypadku przesłonięcia w klasie pochodnej, powoduje, że następne wywołanie <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> metodę, aby uzyskać dostęp pozycji znaku buforów danych, niż bieżąca pozycja znaku.</span><span class="sxs-lookup"><span data-stu-id="cfe40-161">When overridden in a derived class, causes the next call to the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method to access the data buffer character position that is prior to the current character position.</span></span></summary>
        <returns><span data-ttu-id="cfe40-162"><see langword="true" /> Jeśli <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> operacja zakończyła się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cfe40-162"><see langword="true" /> if the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> operation was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe40-163">Do obsługi rezerwowego wyjątku powinien zwrócić `false`.</span><span class="sxs-lookup"><span data-stu-id="cfe40-163">An exception fallback handler should return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfe40-164">W przypadku przesłonięcia w klasie pochodnej pobiera liczbę znaków w bieżącym <see cref="T:System.Text.EncoderFallbackBuffer" /> obiekt, który dokończenia przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="cfe40-164">When overridden in a derived class, gets the number of characters in the current <see cref="T:System.Text.EncoderFallbackBuffer" /> object that remain to be processed.</span></span></summary>
        <value><span data-ttu-id="cfe40-165">Liczba znaków w bieżącym buforze rezerwowy, które nie zostały jeszcze przetworzone.</span><span class="sxs-lookup"><span data-stu-id="cfe40-165">The number of characters in the current fallback buffer that have not yet been processed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe40-166"><xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Metoda zwraca `true` Jeśli <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> jest wartość różną od zera.</span><span class="sxs-lookup"><span data-stu-id="cfe40-166">The <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true` if <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> is a nonzero value.</span></span>  
  
 <span data-ttu-id="cfe40-167">Do obsługi rezerwowego wyjątków <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> metoda powinna zwrócić zero.</span><span class="sxs-lookup"><span data-stu-id="cfe40-167">For an exception fallback handler, the <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> method should return zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="encoderFallbackBuffer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfe40-168">Inicjuje wszystkie dane i informacje o stanie odnoszących się do tego buforu rezerwowego.</span><span class="sxs-lookup"><span data-stu-id="cfe40-168">Initializes all data and state information pertaining to this fallback buffer.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="cfe40-169">Po wywołaniu <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> metody <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> właściwość powinna zwracać 0, <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> metoda powinna zwrócić U + 0000 i <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> metoda powinna zwrócić <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cfe40-169">After calling the <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> method, the <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> property should return 0, the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method should return U+0000, and the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> method should return <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>