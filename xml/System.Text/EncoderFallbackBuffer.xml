<Type Name="EncoderFallbackBuffer" FullName="System.Text.EncoderFallbackBuffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36d20c01a10df1ac3b8d9349072ea2049fe240af" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69144640" /></Metadata><TypeSignature Language="C#" Value="public abstract class EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallbackBuffer abstract" />
  <TypeSignature Language="F#" Value="type EncoderFallbackBuffer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia bufor, który umożliwia procedury obsługi rezerwowej zwraca alternatywny ciąg do kodera, gdy nie może zakodować znaku wejściowego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kodowanie definiuje mapowanie między znakiem Unicode i zakodowaną sekwencją bajtów. Operacja kodowania, która konwertuje znak wejściowy na sekwencję bajtów wyjściowych, kończy się niepowodzeniem, jeśli nie zdefiniowano mapowania dla określonego znaku.  
  
 .NET Framework zapewnia mechanizm obsługi niepowodzeń o nazwie Fallback, jeśli nie można wykonać konwersji. Wszystkie programy obsługi powrotu do kodera muszą implementować następujące elementy:  
  
-   Powrotu do kodera, która jest reprezentowana przez klasę pochodną <xref:System.Text.EncoderFallback> klasy.  
  
-   Bufor rezerwowy kodera, który jest reprezentowany przez typ pochodny <xref:System.Text.EncoderFallbackBuffer> klasy, która może zwrócić ciąg do operacji konwersji.  
  
 Elementy powrotu mogą wykorzystywać trzy strategie do obsługi błędów konwersji:  
  
-   Najlepsze dopasowanie mapowania. Bufor rezerwowy kodera może zwrócić ciąg, który reprezentuje bliskie przybliżenie do znaku wejściowego. .NET Framework nie zapewnia publicznej implementacji najlepszego dopasowania <xref:System.Text.EncoderFallbackBuffer> .  
  
-   Zastępc. Bufor rezerwowy kodera może zwrócić ciąg, taki jak znak zapytania ("?"), który wskazuje, że nie można zakodować znaku. W .NET Framework <xref:System.Text.EncoderReplacementFallback> klasy i <xref:System.Text.EncoderReplacementFallbackBuffer> zapewniają publiczną implementację buforu rezerwowego. Konstruktor <xref:System.Text.EncoderReplacementFallback> klasy pozwala zdefiniować ciąg zamienny.  
  
-   Oprócz. <xref:System.Text.EncoderFallbackBuffer> Implementacja zgłasza wyjątek, co oznacza, że nie można zakodować znaku i kończy operację kodowania. W takim przypadku program obsługi rezerwowej musi dostarczyć <xref:System.Text.EncoderFallbackBuffer> implementację, chociaż nie zwraca ciągu do kodera. W .NET Framework <xref:System.Text.EncoderExceptionFallback> klasy i <xref:System.Text.EncoderExceptionFallbackBuffer> zapewniają publiczną implementację <xref:System.Text.EncoderFallbackException> rezerwy wyjątku, która zgłasza, kiedy nie można zakodować znaku.  
  
 Bufor w <xref:System.Text.EncoderFallbackBuffer> implementacji reprezentuje cały ciąg, który ma zostać zwrócony do kodera w odpowiedzi na rezerwę kodera. Ogólnie mówiąc, implementacje obejmują również informacje o stanie, takie jak indeks następnego znaku do zwrócenia do kodera i liczba pozostałych znaków do zwrócenia. Ponieważ <xref:System.Text.EncoderFallbackBuffer> jest klasą abstrakcyjną, wymaga klasy pochodnej do implementowania następujących elementów członkowskich jako minimum:  
  
-   Przeciążona <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Metoda, która jest wywoływana przez koder, gdy nie może zakodować znaku. Koder przekazuje dwie informacje do implementacji buforu rezerwowego: para znaków lub surogatu, której nie można zakodować i indeks znaku w danych wejściowych. W procedurze obsługi wyjątku rezerwowego kodera w tej metodzie jest zgłaszany wyjątek. W przeciwnym razie metoda zwraca `true` wartość, jeśli zawiera rezerwę, `false` lub jeśli nie.  
  
-   Metoda, która jest wywoływana wielokrotnie przez koder, <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Jeśli metoda zwraca `true`. <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> W kolejnych wywołaniach procedura obsługi powinna zwrócić każdy znak w buforze. Gdy zwróci wszystkie znaki, powinna zwrócić U + 0000. Procedura obsługi wyjątków zawsze zwraca wartość U + 0000.  
  
-   <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> Metoda, która próbuje przenieść wskaźnik do poprzedniego położenia w buforze i wskazuje, czy przeniesienie zakończyło się pomyślnie. Program obsługi wyjątków zawsze zwraca `false`wartość.  
  
-   <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> Właściwość, która wskazuje liczbę pozostałych znaków do zwrócenia do kodera. Procedura obsługi powrotu wyjątku zawsze zwraca wartość zero.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallback" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md">Kodowanie znaków w programie .NET Framework</related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Cyrillic-to-Roman-f7e88b29">Northwind Narzędzie transliteracji cyrylicy na łacińskie</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.EncoderFallbackBuffer" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wskazuje, czy zastępczy ciąg jest dostępny, gdy oryginalne dane wejściowe nie mogą być zakodowane lub czy oryginalne dane wejściowe powinny być ignorowane.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknown, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown">Znak wejściowy.</param>
        <param name="index">Pozycja indeksu znaku w buforze wejściowym.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, przygotowuje bufor rezerwowy, aby obsłużyć określony znak wejściowy.</summary>
        <returns><see langword="true" />Jeśli bufor rezerwowy może przetworzyć <paramref name="charUnknown" />; Jeśli bufor rezerwowy jest ignorowany <paramref name="charUnknown" />. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metody <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> i <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> są wywoływane<xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> , Jeśli napotkają nieznany znak wejściowy, którego nie można zakodować. Zwracana wartość `true` wskazuje, że bufor rezerwowy może przetwarzać znak wejściowy, co powoduje <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> wywołanie metody wywołującej metodę w celu uzyskania każdego znaku buforu rezerwowego. Ponieważ nie przetwarza pojedynczych znaków, <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Metoda w procedurze obsługi powrotu wyjątku zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknownHigh, charUnknownLow, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh">Górny Surogat pary wejściowej.</param>
        <param name="charUnknownLow">Dolny Surogat pary wejściowej.</param>
        <param name="index">Pozycja indeksu pary zastępczej w buforze wejściowym.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, przygotowuje bufor rezerwowy do obsługi określonej pary zastępczej.</summary>
        <returns><see langword="true" />Jeśli bufor rezerwowy może <paramref name="charUnknownHigh" /> przetwarzać <paramref name="charUnknownLow" />i; <see langword="false" /> Jeśli bufor rezerwowy ignoruje parę zastępczą.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metody <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> i <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> są wywoływane<xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> , Jeśli napotkają parę zastępczą w danych wejściowych. Zwracana wartość `true` wskazuje, że bufor rezerwowy może przetwarzać parę surogatów, co powoduje <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> wywołanie metody wywołującej metodę w celu uzyskania każdego znaku buforu rezerwowego.  Ponieważ nie przetwarza pojedynczych znaków, <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Metoda w procedurze obsługi powrotu wyjątku zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberSignature Language="F#" Value="abstract member GetNextChar : unit -&gt; char" Usage="encoderFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, pobiera następny znak w buforze rezerwowym.</summary>
        <returns>Następny znak w buforze rezerwowym.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Operacja kodowania wywołuje metodę, <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Jeśli operacja napotka nieznany znak lub parę zastępczą w danych wejściowych. Na przykład, w przypadku powrotu zastępczej, jeśli <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Metoda zwraca `true`, istnieje ciąg zastępczy, który może być zakodowany zamiast nieznanego danych wejściowych. Operacja kodowania wywołuje <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> metodę wielokrotnie i uzyskuje zastępczy ciąg jeden znak w danym momencie. Gdy wszystkie znaki w buforze powrotu zostały zwrócone do kodera, <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> Metoda powinna zwrócić U + 0000.  
  
 Dla procedury obsługi <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> rezerwowej wyjątku Metoda powinna zwrócić U + 0000.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberSignature Language="F#" Value="abstract member MovePrevious : unit -&gt; bool" Usage="encoderFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, powoduje następne wywołanie <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> metody, aby uzyskać dostęp do pozycji znaku bufora danych przed bieżącą pozycją znaku.</summary>
        <returns><see langword="true" />Jeśli operacja <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> zakończyła się pomyślnie; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Procedura obsługi powrotu wyjątku powinna zwrócić `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, pobiera liczbę znaków w bieżącym <see cref="T:System.Text.EncoderFallbackBuffer" /> obiekcie, która pozostanie do przetworzenia.</summary>
        <value>Liczba znaków w bieżącym buforze rezerwowym, które nie zostały jeszcze przetworzone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> zwraca `true` wartość, <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> jeśli jest wartością różną od zera.  
  
 Dla procedury obsługi <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> rezerwowej wyjątku Metoda powinna zwracać zero.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="encoderFallbackBuffer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje wszystkie dane i informacje o stanie odnoszące się do tego buforu rezerwowego.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> Po wywołaniu metody <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> Właściwość <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> <see langword="false" />powinna zwracać 0, MetodapowinnazwrócićU+0000,ametodapowinnazwrócić.<see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
