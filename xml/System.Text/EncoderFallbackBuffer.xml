<Type Name="EncoderFallbackBuffer" FullName="System.Text.EncoderFallbackBuffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36d20c01a10df1ac3b8d9349072ea2049fe240af" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69144640" /></Metadata><TypeSignature Language="C#" Value="public abstract class EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallbackBuffer abstract" />
  <TypeSignature Language="F#" Value="type EncoderFallbackBuffer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bd69d-101">Udostępnia bufor, który umożliwia procedury obsługi rezerwowej zwraca alternatywny ciąg do kodera, gdy nie może zakodować znaku wejściowego.</span><span class="sxs-lookup"><span data-stu-id="bd69d-101">Provides a buffer that allows a fallback handler to return an alternate string to an encoder when it cannot encode an input character.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd69d-102">Kodowanie definiuje mapowanie między znakiem Unicode i zakodowaną sekwencją bajtów.</span><span class="sxs-lookup"><span data-stu-id="bd69d-102">An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</span></span> <span data-ttu-id="bd69d-103">Operacja kodowania, która konwertuje znak wejściowy na sekwencję bajtów wyjściowych, kończy się niepowodzeniem, jeśli nie zdefiniowano mapowania dla określonego znaku.</span><span class="sxs-lookup"><span data-stu-id="bd69d-103">An encoding operation, which converts an input character to an output byte sequence, fails if no mapping is defined for a particular character.</span></span>  
  
 <span data-ttu-id="bd69d-104">.NET Framework zapewnia mechanizm obsługi niepowodzeń o nazwie Fallback, jeśli nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="bd69d-104">The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</span></span> <span data-ttu-id="bd69d-105">Wszystkie programy obsługi powrotu do kodera muszą implementować następujące elementy:</span><span class="sxs-lookup"><span data-stu-id="bd69d-105">All encoder fallback handlers must implement the following:</span></span>  
  
-   <span data-ttu-id="bd69d-106">Powrotu do kodera, która jest reprezentowana przez klasę pochodną <xref:System.Text.EncoderFallback> klasy.</span><span class="sxs-lookup"><span data-stu-id="bd69d-106">An encoder fallback, which is represented by a class derived from the <xref:System.Text.EncoderFallback> class.</span></span>  
  
-   <span data-ttu-id="bd69d-107">Bufor rezerwowy kodera, który jest reprezentowany przez typ pochodny <xref:System.Text.EncoderFallbackBuffer> klasy, która może zwrócić ciąg do operacji konwersji.</span><span class="sxs-lookup"><span data-stu-id="bd69d-107">An encoder fallback buffer, which is represented by a type derived from the <xref:System.Text.EncoderFallbackBuffer> class that can return a string to the conversion operation.</span></span>  
  
 <span data-ttu-id="bd69d-108">Elementy powrotu mogą wykorzystywać trzy strategie do obsługi błędów konwersji:</span><span class="sxs-lookup"><span data-stu-id="bd69d-108">Fallbacks can use three strategies to handle conversion failures:</span></span>  
  
-   <span data-ttu-id="bd69d-109">Najlepsze dopasowanie mapowania.</span><span class="sxs-lookup"><span data-stu-id="bd69d-109">Best-fit mapping.</span></span> <span data-ttu-id="bd69d-110">Bufor rezerwowy kodera może zwrócić ciąg, który reprezentuje bliskie przybliżenie do znaku wejściowego.</span><span class="sxs-lookup"><span data-stu-id="bd69d-110">The encoder fallback buffer can return a string that represents a close approximation to the input character.</span></span> <span data-ttu-id="bd69d-111">.NET Framework nie zapewnia publicznej implementacji najlepszego dopasowania <xref:System.Text.EncoderFallbackBuffer> .</span><span class="sxs-lookup"><span data-stu-id="bd69d-111">The .NET Framework does not provide a public best-fit <xref:System.Text.EncoderFallbackBuffer> implementation.</span></span>  
  
-   <span data-ttu-id="bd69d-112">Zastępc.</span><span class="sxs-lookup"><span data-stu-id="bd69d-112">Replacement.</span></span> <span data-ttu-id="bd69d-113">Bufor rezerwowy kodera może zwrócić ciąg, taki jak znak zapytania ("?"), który wskazuje, że nie można zakodować znaku.</span><span class="sxs-lookup"><span data-stu-id="bd69d-113">The encoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a character could not be encoded.</span></span> <span data-ttu-id="bd69d-114">W .NET Framework <xref:System.Text.EncoderReplacementFallback> klasy i <xref:System.Text.EncoderReplacementFallbackBuffer> zapewniają publiczną implementację buforu rezerwowego.</span><span class="sxs-lookup"><span data-stu-id="bd69d-114">In the .NET Framework, the <xref:System.Text.EncoderReplacementFallback> and <xref:System.Text.EncoderReplacementFallbackBuffer> classes provide a public replacement fallback buffer implementation.</span></span> <span data-ttu-id="bd69d-115">Konstruktor <xref:System.Text.EncoderReplacementFallback> klasy pozwala zdefiniować ciąg zamienny.</span><span class="sxs-lookup"><span data-stu-id="bd69d-115">The constructor of the <xref:System.Text.EncoderReplacementFallback> class enables you to define the replacement string.</span></span>  
  
-   <span data-ttu-id="bd69d-116">Oprócz.</span><span class="sxs-lookup"><span data-stu-id="bd69d-116">Exception.</span></span> <span data-ttu-id="bd69d-117"><xref:System.Text.EncoderFallbackBuffer> Implementacja zgłasza wyjątek, co oznacza, że nie można zakodować znaku i kończy operację kodowania.</span><span class="sxs-lookup"><span data-stu-id="bd69d-117">The <xref:System.Text.EncoderFallbackBuffer> implementation throws an exception, which indicates that a character cannot be encoded, and terminates the encoding operation.</span></span> <span data-ttu-id="bd69d-118">W takim przypadku program obsługi rezerwowej musi dostarczyć <xref:System.Text.EncoderFallbackBuffer> implementację, chociaż nie zwraca ciągu do kodera.</span><span class="sxs-lookup"><span data-stu-id="bd69d-118">In this case, the fallback handler must provide an <xref:System.Text.EncoderFallbackBuffer> implementation, although it does not return a string to the encoder.</span></span> <span data-ttu-id="bd69d-119">W .NET Framework <xref:System.Text.EncoderExceptionFallback> klasy i <xref:System.Text.EncoderExceptionFallbackBuffer> zapewniają publiczną implementację <xref:System.Text.EncoderFallbackException> rezerwy wyjątku, która zgłasza, kiedy nie można zakodować znaku.</span><span class="sxs-lookup"><span data-stu-id="bd69d-119">In the .NET Framework, the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.EncoderExceptionFallbackBuffer> classes provide a public exception fallback implementation that throws an <xref:System.Text.EncoderFallbackException> when a character cannot be encoded.</span></span>  
  
 <span data-ttu-id="bd69d-120">Bufor w <xref:System.Text.EncoderFallbackBuffer> implementacji reprezentuje cały ciąg, który ma zostać zwrócony do kodera w odpowiedzi na rezerwę kodera.</span><span class="sxs-lookup"><span data-stu-id="bd69d-120">The buffer in an <xref:System.Text.EncoderFallbackBuffer> implementation represents the entire string to be returned to the encoder in response to an encoder fallback.</span></span> <span data-ttu-id="bd69d-121">Ogólnie mówiąc, implementacje obejmują również informacje o stanie, takie jak indeks następnego znaku do zwrócenia do kodera i liczba pozostałych znaków do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="bd69d-121">Generally, implementations also include state information, such as the index of the next character to return to the encoder and the number of remaining characters to be returned.</span></span> <span data-ttu-id="bd69d-122">Ponieważ <xref:System.Text.EncoderFallbackBuffer> jest klasą abstrakcyjną, wymaga klasy pochodnej do implementowania następujących elementów członkowskich jako minimum:</span><span class="sxs-lookup"><span data-stu-id="bd69d-122">Because <xref:System.Text.EncoderFallbackBuffer> is an abstract class, it requires derived classes to implement the following members at a minimum:</span></span>  
  
-   <span data-ttu-id="bd69d-123">Przeciążona <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Metoda, która jest wywoływana przez koder, gdy nie może zakodować znaku.</span><span class="sxs-lookup"><span data-stu-id="bd69d-123">The overloaded <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method, which is called by the encoder when it cannot encode a character.</span></span> <span data-ttu-id="bd69d-124">Koder przekazuje dwie informacje do implementacji buforu rezerwowego: para znaków lub surogatu, której nie można zakodować i indeks znaku w danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="bd69d-124">The encoder passes two pieces of information to the fallback buffer implementation: the character or surrogate pair that could not be encoded and the index of the character in the input.</span></span> <span data-ttu-id="bd69d-125">W procedurze obsługi wyjątku rezerwowego kodera w tej metodzie jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="bd69d-125">In an encoder fallback exception handler, the exception is thrown in this method.</span></span> <span data-ttu-id="bd69d-126">W przeciwnym razie metoda zwraca `true` wartość, jeśli zawiera rezerwę, `false` lub jeśli nie.</span><span class="sxs-lookup"><span data-stu-id="bd69d-126">Otherwise, the method returns `true` if it provides a fallback, or `false` if it does not.</span></span>  
  
-   <span data-ttu-id="bd69d-127">Metoda, która jest wywoływana wielokrotnie przez koder, <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Jeśli metoda zwraca `true`. <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A></span><span class="sxs-lookup"><span data-stu-id="bd69d-127">The <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method, which is called repeatedly by the encoder if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`.</span></span> <span data-ttu-id="bd69d-128">W kolejnych wywołaniach procedura obsługi powinna zwrócić każdy znak w buforze.</span><span class="sxs-lookup"><span data-stu-id="bd69d-128">In successive calls, the handler should return each character in its buffer.</span></span> <span data-ttu-id="bd69d-129">Gdy zwróci wszystkie znaki, powinna zwrócić U + 0000.</span><span class="sxs-lookup"><span data-stu-id="bd69d-129">When it has returned all characters, it should return U+0000.</span></span> <span data-ttu-id="bd69d-130">Procedura obsługi wyjątków zawsze zwraca wartość U + 0000.</span><span class="sxs-lookup"><span data-stu-id="bd69d-130">An exception handler always returns U+0000.</span></span>  
  
-   <span data-ttu-id="bd69d-131"><xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> Metoda, która próbuje przenieść wskaźnik do poprzedniego położenia w buforze i wskazuje, czy przeniesienie zakończyło się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="bd69d-131">The <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</span></span> <span data-ttu-id="bd69d-132">Program obsługi wyjątków zawsze zwraca `false`wartość.</span><span class="sxs-lookup"><span data-stu-id="bd69d-132">An exception handler always returns `false`.</span></span>  
  
-   <span data-ttu-id="bd69d-133"><xref:System.Text.EncoderFallbackBuffer.Remaining%2A> Właściwość, która wskazuje liczbę pozostałych znaków do zwrócenia do kodera.</span><span class="sxs-lookup"><span data-stu-id="bd69d-133">The <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> property, which indicates the number of remaining characters to be returned to the encoder.</span></span> <span data-ttu-id="bd69d-134">Procedura obsługi powrotu wyjątku zawsze zwraca wartość zero.</span><span class="sxs-lookup"><span data-stu-id="bd69d-134">An exception fallback handler always returns zero.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallback" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="bd69d-135">Kodowanie znaków w programie .NET Framework</span><span class="sxs-lookup"><span data-stu-id="bd69d-135">Character Encoding in the .NET Framework</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Cyrillic-to-Roman-f7e88b29"><span data-ttu-id="bd69d-136">Northwind Narzędzie transliteracji cyrylicy na łacińskie</span><span class="sxs-lookup"><span data-stu-id="bd69d-136">Sample: Cyrillic to Roman Transliteration Utility</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bd69d-137">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.EncoderFallbackBuffer" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="bd69d-137">Initializes a new instance of the <see cref="T:System.Text.EncoderFallbackBuffer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bd69d-138">Wskazuje, czy zastępczy ciąg jest dostępny, gdy oryginalne dane wejściowe nie mogą być zakodowane lub czy oryginalne dane wejściowe powinny być ignorowane.</span><span class="sxs-lookup"><span data-stu-id="bd69d-138">Indicates whether a substitute string is available when the original input cannot be encoded, or whether the original input should be ignored.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknown, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown"><span data-ttu-id="bd69d-139">Znak wejściowy.</span><span class="sxs-lookup"><span data-stu-id="bd69d-139">An input character.</span></span></param>
        <param name="index"><span data-ttu-id="bd69d-140">Pozycja indeksu znaku w buforze wejściowym.</span><span class="sxs-lookup"><span data-stu-id="bd69d-140">The index position of the character in the input buffer.</span></span></param>
        <summary><span data-ttu-id="bd69d-141">Gdy jest zastępowany w klasie pochodnej, przygotowuje bufor rezerwowy, aby obsłużyć określony znak wejściowy.</span><span class="sxs-lookup"><span data-stu-id="bd69d-141">When overridden in a derived class, prepares the fallback buffer to handle the specified input character.</span></span></summary>
        <returns><span data-ttu-id="bd69d-142"><see langword="true" />Jeśli bufor rezerwowy może przetworzyć <paramref name="charUnknown" />; Jeśli bufor rezerwowy jest ignorowany <paramref name="charUnknown" />. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="bd69d-142"><see langword="true" /> if the fallback buffer can process <paramref name="charUnknown" />; <see langword="false" /> if the fallback buffer ignores <paramref name="charUnknown" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd69d-143">Metody <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> i <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> są wywoływane<xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> , Jeśli napotkają nieznany znak wejściowy, którego nie można zakodować.</span><span class="sxs-lookup"><span data-stu-id="bd69d-143">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> if they encounter an unknown input character that cannot be encoded.</span></span> <span data-ttu-id="bd69d-144">Zwracana wartość `true` wskazuje, że bufor rezerwowy może przetwarzać znak wejściowy, co powoduje <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> wywołanie metody wywołującej metodę w celu uzyskania każdego znaku buforu rezerwowego.</span><span class="sxs-lookup"><span data-stu-id="bd69d-144">A return value of `true` indicates that the fallback buffer can process the input character, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span> <span data-ttu-id="bd69d-145">Ponieważ nie przetwarza pojedynczych znaków, <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Metoda w procedurze obsługi powrotu wyjątku zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="bd69d-145">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknownHigh, charUnknownLow, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh"><span data-ttu-id="bd69d-146">Górny Surogat pary wejściowej.</span><span class="sxs-lookup"><span data-stu-id="bd69d-146">The high surrogate of the input pair.</span></span></param>
        <param name="charUnknownLow"><span data-ttu-id="bd69d-147">Dolny Surogat pary wejściowej.</span><span class="sxs-lookup"><span data-stu-id="bd69d-147">The low surrogate of the input pair.</span></span></param>
        <param name="index"><span data-ttu-id="bd69d-148">Pozycja indeksu pary zastępczej w buforze wejściowym.</span><span class="sxs-lookup"><span data-stu-id="bd69d-148">The index position of the surrogate pair in the input buffer.</span></span></param>
        <summary><span data-ttu-id="bd69d-149">Gdy jest zastępowany w klasie pochodnej, przygotowuje bufor rezerwowy do obsługi określonej pary zastępczej.</span><span class="sxs-lookup"><span data-stu-id="bd69d-149">When overridden in a derived class, prepares the fallback buffer to handle the specified surrogate pair.</span></span></summary>
        <returns><span data-ttu-id="bd69d-150"><see langword="true" />Jeśli bufor rezerwowy może <paramref name="charUnknownHigh" /> przetwarzać <paramref name="charUnknownLow" />i; <see langword="false" /> Jeśli bufor rezerwowy ignoruje parę zastępczą.</span><span class="sxs-lookup"><span data-stu-id="bd69d-150"><see langword="true" /> if the fallback buffer can process <paramref name="charUnknownHigh" /> and <paramref name="charUnknownLow" />; <see langword="false" /> if the fallback buffer ignores the surrogate pair.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd69d-151">Metody <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> i <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> są wywoływane<xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> , Jeśli napotkają parę zastępczą w danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="bd69d-151">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> if they encounter a surrogate pair in their input.</span></span> <span data-ttu-id="bd69d-152">Zwracana wartość `true` wskazuje, że bufor rezerwowy może przetwarzać parę surogatów, co powoduje <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> wywołanie metody wywołującej metodę w celu uzyskania każdego znaku buforu rezerwowego.</span><span class="sxs-lookup"><span data-stu-id="bd69d-152">A return value of `true` indicates that the fallback buffer can process the surrogate pair, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span>  <span data-ttu-id="bd69d-153">Ponieważ nie przetwarza pojedynczych znaków, <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Metoda w procedurze obsługi powrotu wyjątku zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="bd69d-153">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberSignature Language="F#" Value="abstract member GetNextChar : unit -&gt; char" Usage="encoderFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bd69d-154">Gdy jest zastępowany w klasie pochodnej, pobiera następny znak w buforze rezerwowym.</span><span class="sxs-lookup"><span data-stu-id="bd69d-154">When overridden in a derived class, retrieves the next character in the fallback buffer.</span></span></summary>
        <returns><span data-ttu-id="bd69d-155">Następny znak w buforze rezerwowym.</span><span class="sxs-lookup"><span data-stu-id="bd69d-155">The next character in the fallback buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd69d-156">Operacja kodowania wywołuje metodę, <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Jeśli operacja napotka nieznany znak lub parę zastępczą w danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="bd69d-156">An encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method if the operation encounters an unknown character or surrogate pair in the input.</span></span> <span data-ttu-id="bd69d-157">Na przykład, w przypadku powrotu zastępczej, jeśli <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Metoda zwraca `true`, istnieje ciąg zastępczy, który może być zakodowany zamiast nieznanego danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="bd69d-157">For example, in the case of a replacement fallback, if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`, a substitute string exists that can be encoded instead of the unknown input.</span></span> <span data-ttu-id="bd69d-158">Operacja kodowania wywołuje <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> metodę wielokrotnie i uzyskuje zastępczy ciąg jeden znak w danym momencie.</span><span class="sxs-lookup"><span data-stu-id="bd69d-158">The encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method repeatedly and obtains the substitute string one character at a time.</span></span> <span data-ttu-id="bd69d-159">Gdy wszystkie znaki w buforze powrotu zostały zwrócone do kodera, <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> Metoda powinna zwrócić U + 0000.</span><span class="sxs-lookup"><span data-stu-id="bd69d-159">When all characters in the fallback buffer have been returned to the encoder, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 <span data-ttu-id="bd69d-160">Dla procedury obsługi <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> rezerwowej wyjątku Metoda powinna zwrócić U + 0000.</span><span class="sxs-lookup"><span data-stu-id="bd69d-160">For an exception fallback handler, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberSignature Language="F#" Value="abstract member MovePrevious : unit -&gt; bool" Usage="encoderFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bd69d-161">Gdy jest zastępowany w klasie pochodnej, powoduje następne wywołanie <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> metody, aby uzyskać dostęp do pozycji znaku bufora danych przed bieżącą pozycją znaku.</span><span class="sxs-lookup"><span data-stu-id="bd69d-161">When overridden in a derived class, causes the next call to the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method to access the data buffer character position that is prior to the current character position.</span></span></summary>
        <returns><span data-ttu-id="bd69d-162"><see langword="true" />Jeśli operacja <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> zakończyła się pomyślnie; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="bd69d-162"><see langword="true" /> if the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> operation was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd69d-163">Procedura obsługi powrotu wyjątku powinna zwrócić `false`.</span><span class="sxs-lookup"><span data-stu-id="bd69d-163">An exception fallback handler should return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bd69d-164">Gdy jest zastępowany w klasie pochodnej, pobiera liczbę znaków w bieżącym <see cref="T:System.Text.EncoderFallbackBuffer" /> obiekcie, która pozostanie do przetworzenia.</span><span class="sxs-lookup"><span data-stu-id="bd69d-164">When overridden in a derived class, gets the number of characters in the current <see cref="T:System.Text.EncoderFallbackBuffer" /> object that remain to be processed.</span></span></summary>
        <value><span data-ttu-id="bd69d-165">Liczba znaków w bieżącym buforze rezerwowym, które nie zostały jeszcze przetworzone.</span><span class="sxs-lookup"><span data-stu-id="bd69d-165">The number of characters in the current fallback buffer that have not yet been processed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bd69d-166">Metoda <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> zwraca `true` wartość, <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> jeśli jest wartością różną od zera.</span><span class="sxs-lookup"><span data-stu-id="bd69d-166">The <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true` if <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> is a nonzero value.</span></span>  
  
 <span data-ttu-id="bd69d-167">Dla procedury obsługi <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> rezerwowej wyjątku Metoda powinna zwracać zero.</span><span class="sxs-lookup"><span data-stu-id="bd69d-167">For an exception fallback handler, the <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> method should return zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="encoderFallbackBuffer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bd69d-168">Inicjuje wszystkie dane i informacje o stanie odnoszące się do tego buforu rezerwowego.</span><span class="sxs-lookup"><span data-stu-id="bd69d-168">Initializes all data and state information pertaining to this fallback buffer.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="bd69d-169"><see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> Po wywołaniu metody <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> Właściwość <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> <see langword="false" />powinna zwracać 0, MetodapowinnazwrócićU+0000,ametodapowinnazwrócić.<see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /></span><span class="sxs-lookup"><span data-stu-id="bd69d-169">After calling the <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> method, the <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> property should return 0, the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method should return U+0000, and the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> method should return <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
