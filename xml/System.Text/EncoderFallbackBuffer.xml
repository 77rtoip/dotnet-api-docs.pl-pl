<Type Name="EncoderFallbackBuffer" FullName="System.Text.EncoderFallbackBuffer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="116c4743750d62c78bf7a85e6e5dff453828390b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30579259" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallbackBuffer abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a9c14-101">Udostępnia bufor umożliwiający rezerwowy obsługi powrócić do kodera ciągu alternatywne, gdy nie można zakodować znak wejściowy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a9c14-101">Provides a buffer that allows a fallback handler to return an alternate string to an encoder when it cannot encode an input character.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9c14-102">Kodowanie definiuje mapowanie między znaków Unicode i zakodowanego sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="a9c14-102">An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</span></span> <span data-ttu-id="a9c14-103">Operację kodowania, który konwertuje znak wejściowy do sekwencji bajtów wyjściowych, kończy się niepowodzeniem, jeśli nie jest zdefiniowany dla określonego znaku.</span><span class="sxs-lookup"><span data-stu-id="a9c14-103">An encoding operation, which converts an input character to an output byte sequence, fails if no mapping is defined for a particular character.</span></span>  
  
 <span data-ttu-id="a9c14-104">.NET Framework zapewnia awarii mechanizmu wywołuje rezerwowe, jeśli nie można wykonać konwersji obsługi.</span><span class="sxs-lookup"><span data-stu-id="a9c14-104">The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</span></span> <span data-ttu-id="a9c14-105">Wszystkie programy obsługi rezerwowego kodera musi implementować następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="a9c14-105">All encoder fallback handlers must implement the following:</span></span>  
  
-   <span data-ttu-id="a9c14-106">Koder rezerwowej, która jest reprezentowana przez klasę pochodną <xref:System.Text.EncoderFallback> klasy.</span><span class="sxs-lookup"><span data-stu-id="a9c14-106">An encoder fallback, which is represented by a class derived from the <xref:System.Text.EncoderFallback> class.</span></span>  
  
-   <span data-ttu-id="a9c14-107">Koder buforze rezerwowym, która jest reprezentowana przez typ pochodny typu <xref:System.Text.EncoderFallbackBuffer> klasy, która może zwracać ciąg do operacji konwersji.</span><span class="sxs-lookup"><span data-stu-id="a9c14-107">An encoder fallback buffer, which is represented by a type derived from the <xref:System.Text.EncoderFallbackBuffer> class that can return a string to the conversion operation.</span></span>  
  
 <span data-ttu-id="a9c14-108">Przejścia służą trzy strategie do obsługi błędów konwersji:</span><span class="sxs-lookup"><span data-stu-id="a9c14-108">Fallbacks can use three strategies to handle conversion failures:</span></span>  
  
-   <span data-ttu-id="a9c14-109">Mapowanie najlepszego dopasowania.</span><span class="sxs-lookup"><span data-stu-id="a9c14-109">Best-fit mapping.</span></span> <span data-ttu-id="a9c14-110">Koder buforze rezerwowym może zwracać ciąg reprezentujący Zamknij zbliżenia się znak wejściowy.</span><span class="sxs-lookup"><span data-stu-id="a9c14-110">The encoder fallback buffer can return a string that represents a close approximation to the input character.</span></span> <span data-ttu-id="a9c14-111">.NET Framework nie ma najlepszego dopasowania publiczny <xref:System.Text.EncoderFallbackBuffer> implementacji.</span><span class="sxs-lookup"><span data-stu-id="a9c14-111">The .NET Framework does not provide a public best-fit <xref:System.Text.EncoderFallbackBuffer> implementation.</span></span>  
  
-   <span data-ttu-id="a9c14-112">Zastąpienie.</span><span class="sxs-lookup"><span data-stu-id="a9c14-112">Replacement.</span></span> <span data-ttu-id="a9c14-113">Koder buforze rezerwowym może zwrócić typu string, takie jak znak zapytania ("?"), który wskazuje znak nie może zostać zakodowany.</span><span class="sxs-lookup"><span data-stu-id="a9c14-113">The encoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a character could not be encoded.</span></span> <span data-ttu-id="a9c14-114">W programie .NET Framework <xref:System.Text.EncoderReplacementFallback> i <xref:System.Text.EncoderReplacementFallbackBuffer> klasy udostępnić implementację buforze rezerwowym publicznego zastąpienia.</span><span class="sxs-lookup"><span data-stu-id="a9c14-114">In the .NET Framework, the <xref:System.Text.EncoderReplacementFallback> and <xref:System.Text.EncoderReplacementFallbackBuffer> classes provide a public replacement fallback buffer implementation.</span></span> <span data-ttu-id="a9c14-115">Konstruktor obiektu <xref:System.Text.EncoderReplacementFallback> klasa umożliwia zdefiniowanie ciąg zastępczy.</span><span class="sxs-lookup"><span data-stu-id="a9c14-115">The constructor of the <xref:System.Text.EncoderReplacementFallback> class enables you to define the replacement string.</span></span>  
  
-   <span data-ttu-id="a9c14-116">Wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a9c14-116">Exception.</span></span> <span data-ttu-id="a9c14-117"><xref:System.Text.EncoderFallbackBuffer> Implementacja zwraca wyjątek, który wskazuje, że znak nie może zostać zakodowany i zakończy operację kodowania.</span><span class="sxs-lookup"><span data-stu-id="a9c14-117">The <xref:System.Text.EncoderFallbackBuffer> implementation throws an exception, which indicates that a character cannot be encoded, and terminates the encoding operation.</span></span> <span data-ttu-id="a9c14-118">W takim przypadku należy zapewnić obsługi rezerwowego <xref:System.Text.EncoderFallbackBuffer> implementacji, chociaż nie zwrócił ciągu do kodera.</span><span class="sxs-lookup"><span data-stu-id="a9c14-118">In this case, the fallback handler must provide an <xref:System.Text.EncoderFallbackBuffer> implementation, although it does not return a string to the encoder.</span></span> <span data-ttu-id="a9c14-119">W programie .NET Framework <xref:System.Text.EncoderExceptionFallback> i <xref:System.Text.EncoderExceptionFallbackBuffer> klasy Podaj implementacji rezerwowy publicznego wyjątek, który zgłasza <xref:System.Text.EncoderFallbackException> gdy znak nie może zostać zakodowany.</span><span class="sxs-lookup"><span data-stu-id="a9c14-119">In the .NET Framework, the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.EncoderExceptionFallbackBuffer> classes provide a public exception fallback implementation that throws an <xref:System.Text.EncoderFallbackException> when a character cannot be encoded.</span></span>  
  
 <span data-ttu-id="a9c14-120">Bufor w <xref:System.Text.EncoderFallbackBuffer> implementacji reprezentuje cały ciąg ma zostać zwrócona do kodera w odpowiedzi na kodera rezerwowego.</span><span class="sxs-lookup"><span data-stu-id="a9c14-120">The buffer in an <xref:System.Text.EncoderFallbackBuffer> implementation represents the entire string to be returned to the encoder in response to an encoder fallback.</span></span> <span data-ttu-id="a9c14-121">Ogólnie rzecz biorąc występujące implementacje to również informacje o stanie, takie jak indeks następny znak, aby powrócić do kodera i liczbę pozostałych znaków, które ma zostać zwrócona.</span><span class="sxs-lookup"><span data-stu-id="a9c14-121">Generally, implementations also include state information, such as the index of the next character to return to the encoder and the number of remaining characters to be returned.</span></span> <span data-ttu-id="a9c14-122">Ponieważ <xref:System.Text.EncoderFallbackBuffer> jest klasą abstrakcyjną, wymaga klas pochodnych do implementacji co najmniej następujące elementy:</span><span class="sxs-lookup"><span data-stu-id="a9c14-122">Because <xref:System.Text.EncoderFallbackBuffer> is an abstract class, it requires derived classes to implement the following members at a minimum:</span></span>  
  
-   <span data-ttu-id="a9c14-123">Przeciążone <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> metodę, która jest wywoływana przez koder, gdy nie można zakodować znak.</span><span class="sxs-lookup"><span data-stu-id="a9c14-123">The overloaded <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method, which is called by the encoder when it cannot encode a character.</span></span> <span data-ttu-id="a9c14-124">Koder przekazuje informacje do realizacji buforze rezerwowym: znak lub para zastępcza, który nie może być kodowany i indeks znaku w danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="a9c14-124">The encoder passes two pieces of information to the fallback buffer implementation: the character or surrogate pair that could not be encoded and the index of the character in the input.</span></span> <span data-ttu-id="a9c14-125">W program obsługi wyjątku rezerwowy kodera wyjątku w ramach tej metody.</span><span class="sxs-lookup"><span data-stu-id="a9c14-125">In an encoder fallback exception handler, the exception is thrown in this method.</span></span> <span data-ttu-id="a9c14-126">W przeciwnym razie metoda zwraca `true` Jeśli zapewnia rezerwowe, lub `false` jeśli jej nie ma.</span><span class="sxs-lookup"><span data-stu-id="a9c14-126">Otherwise, the method returns `true` if it provides a fallback, or `false` if it does not.</span></span>  
  
-   <span data-ttu-id="a9c14-127"><xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> Metodę, która jest często nazywana przez koder Jeśli <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> metoda zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="a9c14-127">The <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method, which is called repeatedly by the encoder if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`.</span></span> <span data-ttu-id="a9c14-128">W kolejnych wywołaniach program obsługi ma zwracać każdego znaku w swoim buforze.</span><span class="sxs-lookup"><span data-stu-id="a9c14-128">In successive calls, the handler should return each character in its buffer.</span></span> <span data-ttu-id="a9c14-129">Po jego zwróceniem wszystkie znaki, powinien on zwrócić 0000 U +.</span><span class="sxs-lookup"><span data-stu-id="a9c14-129">When it has returned all characters, it should return U+0000.</span></span> <span data-ttu-id="a9c14-130">Program obsługi wyjątku zawsze zwraca wartość U + 0000.</span><span class="sxs-lookup"><span data-stu-id="a9c14-130">An exception handler always returns U+0000.</span></span>  
  
-   <span data-ttu-id="a9c14-131"><xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> Metodę, która podejmuje próbę Przesuń wskaźnik poprzedniej pozycji w buforze i wskazuje, czy została pomyślnie przeniesiona.</span><span class="sxs-lookup"><span data-stu-id="a9c14-131">The <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</span></span> <span data-ttu-id="a9c14-132">Zawsze zwraca program obsługi wyjątku `false`.</span><span class="sxs-lookup"><span data-stu-id="a9c14-132">An exception handler always returns `false`.</span></span>  
  
-   <span data-ttu-id="a9c14-133"><xref:System.Text.EncoderFallbackBuffer.Remaining%2A> Właściwość, która wskazuje liczbę pozostałych znaków do zwrócenia do kodera.</span><span class="sxs-lookup"><span data-stu-id="a9c14-133">The <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> property, which indicates the number of remaining characters to be returned to the encoder.</span></span> <span data-ttu-id="a9c14-134">Program obsługi wyjątku rezerwowy zawsze zwraca zero.</span><span class="sxs-lookup"><span data-stu-id="a9c14-134">An exception fallback handler always returns zero.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a9c14-135">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.EncoderFallbackBuffer" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9c14-135">Initializes a new instance of the <see cref="T:System.Text.EncoderFallbackBuffer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9c14-136">Wskazuje, czy ciąg zastępczy jest dostępny, gdy oryginalne dane wejściowe nie może zostać zakodowany, czy oryginalne dane wejściowe powinny być ignorowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9c14-136">Indicates whether a substitute string is available when the original input cannot be encoded, or whether the original input should be ignored.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknown, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown">
          <span data-ttu-id="a9c14-137">Znak wejściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9c14-137">An input character.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="a9c14-138">Indeks znaku w buforze wejściowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9c14-138">The index position of the character in the input buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9c14-139">W przypadku przesłonięcia w klasie pochodnej, przygotowuje buforze rezerwowym obsłużyć określony znak wejściowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9c14-139">When overridden in a derived class, prepares the fallback buffer to handle the specified input character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9c14-140">
            <see langword="true" /> Jeśli w buforze rezerwowym może przetwarzać <paramref name="charUnknown" />; <see langword="false" /> Jeśli ignoruje buforze rezerwowym <paramref name="charUnknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9c14-140">
              <see langword="true" /> if the fallback buffer can process <paramref name="charUnknown" />; <see langword="false" /> if the fallback buffer ignores <paramref name="charUnknown" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9c14-141"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> i <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> wywołania metody <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> w momencie napotkania nieznany znak wejściowy, który nie może zostać zakodowany.</span><span class="sxs-lookup"><span data-stu-id="a9c14-141">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> if they encounter an unknown input character that cannot be encoded.</span></span> <span data-ttu-id="a9c14-142">Zwracana wartość `true` wskazuje, że w buforze rezerwowym może przetwarzać wprowadzany znak, co powoduje, że wywołanie metody do wywołania <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> metodę, aby uzyskać każdego znaku w buforze rezerwowym.</span><span class="sxs-lookup"><span data-stu-id="a9c14-142">A return value of `true` indicates that the fallback buffer can process the input character, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span> <span data-ttu-id="a9c14-143">Ponieważ nie przetwarza poszczególnych znaków <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> metody rezerwowej program obsługi wyjątku zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a9c14-143">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh">
          <span data-ttu-id="a9c14-144">Zastępczym wysokiego poziomu wejściowego pary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9c14-144">The high surrogate of the input pair.</span>
          </span>
        </param>
        <param name="charUnknownLow">
          <span data-ttu-id="a9c14-145">Dwuskładnikowego pary wejściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9c14-145">The low surrogate of the input pair.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="a9c14-146">Indeks para zastępcza w buforze wejściowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9c14-146">The index position of the surrogate pair in the input buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9c14-147">W przypadku przesłonięcia w klasie pochodnej, przygotowuje buforze rezerwowym do obsługi para zastępcza określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9c14-147">When overridden in a derived class, prepares the fallback buffer to handle the specified surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9c14-148">
            <see langword="true" /> Jeśli w buforze rezerwowym może przetwarzać <paramref name="charUnknownHigh" /> i <paramref name="charUnknownLow" />; <see langword="false" /> Jeśli para zastępcza ignoruje buforze rezerwowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9c14-148">
              <see langword="true" /> if the fallback buffer can process <paramref name="charUnknownHigh" /> and <paramref name="charUnknownLow" />; <see langword="false" /> if the fallback buffer ignores the surrogate pair.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9c14-149"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> i <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> wywołania metody <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> w momencie napotkania para zastępcza w danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="a9c14-149">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> if they encounter a surrogate pair in their input.</span></span> <span data-ttu-id="a9c14-150">Zwracana wartość `true` wskazuje, że w buforze rezerwowym może przetwarzać para zastępcza, co powoduje, że wywołanie metody do wywołania <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> metodę, aby uzyskać każdego znaku w buforze rezerwowym.</span><span class="sxs-lookup"><span data-stu-id="a9c14-150">A return value of `true` indicates that the fallback buffer can process the surrogate pair, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span>  <span data-ttu-id="a9c14-151">Ponieważ nie przetwarza poszczególnych znaków <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> metody rezerwowej program obsługi wyjątku zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a9c14-151">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a9c14-152">W przypadku przesłonięcia w klasie pochodnej pobiera następny znak w buforze rezerwowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9c14-152">When overridden in a derived class, retrieves the next character in the fallback buffer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9c14-153">Następny znak w buforze rezerwowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9c14-153">The next character in the fallback buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9c14-154">Wywołuje operację kodowania <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> metody, jeśli operacja napotkał nieznany znak lub para zastępcza w danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="a9c14-154">An encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method if the operation encounters an unknown character or surrogate pair in the input.</span></span> <span data-ttu-id="a9c14-155">Na przykład w przypadku z rezerwowego, jeśli zastąpienie <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> metoda zwraca `true`, ciąg zastępczy istnieje, która może zostać zakodowany zamiast wprowadzania nieznany.</span><span class="sxs-lookup"><span data-stu-id="a9c14-155">For example, in the case of a replacement fallback, if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`, a substitute string exists that can be encoded instead of the unknown input.</span></span> <span data-ttu-id="a9c14-156">Kodowania wywołania operacji <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> metody wielokrotnie i uzyskuje ciąg zastępczy o jeden znak w czasie.</span><span class="sxs-lookup"><span data-stu-id="a9c14-156">The encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method repeatedly and obtains the substitute string one character at a time.</span></span> <span data-ttu-id="a9c14-157">W przypadku wszystkich znaków w buforze rezerwowym zostały zwrócone do kodera, <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> metoda powinna zwrócić 0000 U +.</span><span class="sxs-lookup"><span data-stu-id="a9c14-157">When all characters in the fallback buffer have been returned to the encoder, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 <span data-ttu-id="a9c14-158">Do obsługi rezerwowego wyjątków <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> metoda powinna zwrócić 0000 U +.</span><span class="sxs-lookup"><span data-stu-id="a9c14-158">For an exception fallback handler, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a9c14-159">W przypadku przesłonięcia w klasie pochodnej, powoduje, że następne wywołanie <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> metodę dostępu pozycji znaku buforu danych, która jest przed bieżącego położenia znaku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9c14-159">When overridden in a derived class, causes the next call to the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method to access the data buffer character position that is prior to the current character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9c14-160">
            <see langword="true" /> Jeśli <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> operacja zakończyła się pomyślnie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9c14-160">
              <see langword="true" /> if the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> operation was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9c14-161">Rezerwowy program obsługi wyjątku powinien zwrócić `false`.</span><span class="sxs-lookup"><span data-stu-id="a9c14-161">An exception fallback handler should return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9c14-162">W przypadku przesłonięcia w klasie pochodnej pobiera liczbę znaków w bieżącym <see cref="T:System.Text.EncoderFallbackBuffer" /> obiekt, który ma być przetwarzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9c14-162">When overridden in a derived class, gets the number of characters in the current <see cref="T:System.Text.EncoderFallbackBuffer" /> object that remain to be processed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9c14-163">Liczba znaków w bieżącym buforze rezerwowym, które nie zostały przetworzone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9c14-163">The number of characters in the current fallback buffer that have not yet been processed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9c14-164"><xref:System.Text.EncoderFallbackBuffer.Fallback%2A> Metoda zwraca `true` Jeśli <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> ma wartość niezerową.</span><span class="sxs-lookup"><span data-stu-id="a9c14-164">The <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true` if <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> is a nonzero value.</span></span>  
  
 <span data-ttu-id="a9c14-165">Do obsługi rezerwowego wyjątków <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> metoda powinna zwracać zera.</span><span class="sxs-lookup"><span data-stu-id="a9c14-165">For an exception fallback handler, the <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> method should return zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a9c14-166">Inicjuje wszystkie dane i stan informacje dotyczące tego buforze rezerwowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9c14-166">Initializes all data and state information pertaining to this fallback buffer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a9c14-167">Po wywołaniu <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> metody <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> właściwość powinna zwrócić 0, <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> metoda powinna zwrócić U + 0000 i <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> metoda powinna zwrócić <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a9c14-167">After calling the <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> method, the <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> property should return 0, the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method should return U+0000, and the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> method should return <see langword="false" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>