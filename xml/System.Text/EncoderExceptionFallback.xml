<Type Name="EncoderExceptionFallback" FullName="System.Text.EncoderExceptionFallback">
  <TypeSignature Language="C#" Value="public sealed class EncoderExceptionFallback : System.Text.EncoderFallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EncoderExceptionFallback extends System.Text.EncoderFallback" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderExceptionFallback" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncoderExceptionFallback&#xA;Inherits EncoderFallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderExceptionFallback sealed : System::Text::EncoderFallback" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.EncoderFallback</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="21aea-101">Udostępnia mechanizm obsługi błędu, nazywane rezerwowe, wejściowych znaku, której nie można przekonwertować do sekwencji bajtów danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="21aea-101">Provides a failure-handling mechanism, called a fallback, for an input character that cannot be converted to an output byte sequence.</span></span> <span data-ttu-id="21aea-102">Rezerwa zgłasza wyjątek, jeśli znak wejściowy nie może przekonwertować do sekwencji bajtów danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="21aea-102">The fallback throws an exception if an input character cannot be converted to an output byte sequence.</span></span> <span data-ttu-id="21aea-103">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="21aea-103">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21aea-104">Kodowanie mapuje znaku Unicode zakodowanego sekwencji bajtów, które następnie mogą być przenoszone na nośniku fizycznym, np. dysku lub za pośrednictwem łącza komunikacji.</span><span class="sxs-lookup"><span data-stu-id="21aea-104">An encoding maps a Unicode character to an encoded sequence of bytes, which can subsequently be transferred to a physical medium, such as a disk, or over a communications link.</span></span> <span data-ttu-id="21aea-105">Znaki mogą być mapowane na różne sposoby, a konkretnego kodowanie jest reprezentowana przez typ pochodny typu <xref:System.Text.Encoding> klasy.</span><span class="sxs-lookup"><span data-stu-id="21aea-105">Characters can be mapped in various ways, and a particular encoding is represented by a type derived from the <xref:System.Text.Encoding> class.</span></span> <span data-ttu-id="21aea-106">W szczególności kodowania typu `GetBytes` metoda koduje znak do sekwencji bajtów i `GetChars` metody dekoduje sekwencję bajtów na znak.</span><span class="sxs-lookup"><span data-stu-id="21aea-106">Specifically, the encoding type's `GetBytes` method encodes a character to a byte sequence, and the `GetChars` method decodes a byte sequence to a character.</span></span>  
  
 <span data-ttu-id="21aea-107">Operacja kodowania może zakończyć się niepowodzeniem, jeśli znak wejściowy nie może być reprezentowany przez kodowania.</span><span class="sxs-lookup"><span data-stu-id="21aea-107">An encoding operation can fail if the input character cannot be represented by the encoding.</span></span> <span data-ttu-id="21aea-108">Na przykład <xref:System.Text.ASCIIEncoding> obiektu nie można zakodować znak, który daje w wyniku wartość punkt kodu Unicode, która jest poza zakresem 0000 U + do U + 007F.</span><span class="sxs-lookup"><span data-stu-id="21aea-108">For example, a <xref:System.Text.ASCIIEncoding> object cannot encode a character that yields a Unicode code point value that is outside the range U+0000 to U+007F.</span></span>  
  
 <span data-ttu-id="21aea-109">W przypadkach, gdy nie można przeprowadzić konwersji kodowania lub dekodowania programu .NET Framework zapewnia mechanizm obsługi błędu o nazwie rezerwowe.</span><span class="sxs-lookup"><span data-stu-id="21aea-109">In cases where an encoding or decoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback.</span></span> <span data-ttu-id="21aea-110">Aplikacja może użyć wstępnie zdefiniowanych rezerwowy kodera .NET Framework lub można utworzyć niestandardowego kodera rezerwowy pochodną <xref:System.Text.EncoderFallback> i <xref:System.Text.EncoderFallbackBuffer> klasy.</span><span class="sxs-lookup"><span data-stu-id="21aea-110">Your application can use the predefined .NET Framework encoder fallback, or it can create a custom encoder fallback derived from the <xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> classes.</span></span>  
  
 <span data-ttu-id="21aea-111">.NET Framework zapewnia dwa wstępnie zdefiniowanych klas, które implementują różne strategie powrotu do obsługi błędów Konwersja kodowania.</span><span class="sxs-lookup"><span data-stu-id="21aea-111">The .NET Framework provides two predefined classes that implement different fallback strategies for handling encoding conversion failures.</span></span> <span data-ttu-id="21aea-112"><xref:System.Text.EncoderReplacementFallback> Klasy zastępuje ciąg podany dla znaków, której nie można przekonwertować danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="21aea-112">The <xref:System.Text.EncoderReplacementFallback> class substitutes a string provided for any input character that cannot be converted.</span></span> <span data-ttu-id="21aea-113">Ciąg zastępczy jest zakodowany zamiast nieprawidłowy znak, i kontynuuje operację kodowania na konwertowanie pozostałej części danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="21aea-113">The substitute string is encoded in place of the invalid character, and then the encoding operation continues converting the remainder of the input.</span></span> <span data-ttu-id="21aea-114">Z kolei <xref:System.Text.EncoderExceptionFallback> klasy zgłasza <xref:System.Text.EncoderFallbackException> po napotkano nieprawidłowy znak.</span><span class="sxs-lookup"><span data-stu-id="21aea-114">In contrast, the <xref:System.Text.EncoderExceptionFallback> class throws a <xref:System.Text.EncoderFallbackException> when an invalid character is encountered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21aea-115">Poniższy przykład kodu pokazuje <xref:System.Text.EncoderExceptionFallback> i <xref:System.Text.EncoderFallbackException> klasy.</span><span class="sxs-lookup"><span data-stu-id="21aea-115">The following code example demonstrates the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.EncoderFallbackException> classes.</span></span>  
  
 [!code-cpp[sys.txt.fallbackEncExc#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackEncExc/cpp/fallEncExc.cpp#1)]
 [!code-csharp[sys.txt.fallbackEncExc#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackEncExc/cs/fallEncExc.cs#1)]
 [!code-vb[sys.txt.fallbackEncExc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackEncExc/vb/fallEncExc.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderExceptionFallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderExceptionFallback();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21aea-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.EncoderExceptionFallback" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="21aea-116">Initializes a new instance of the <see cref="T:System.Text.EncoderExceptionFallback" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFallbackBuffer">
      <MemberSignature Language="C#" Value="public override System.Text.EncoderFallbackBuffer CreateFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.EncoderFallbackBuffer CreateFallbackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.CreateFallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateFallbackBuffer () As EncoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::EncoderFallbackBuffer ^ CreateFallbackBuffer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21aea-117">Zwraca moduł kodera rezerwowy bufor tego zgłasza wyjątek Jeśli sekwencja znaków nie może przekonwertować do sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="21aea-117">Returns an encoder fallback buffer that throws an exception if it cannot convert a character sequence to a byte sequence.</span></span></summary>
        <returns><span data-ttu-id="21aea-118">Buforze rezerwowym kodera, który zgłasza wyjątek, gdy nie można zakodować sekwencja znaków.</span><span class="sxs-lookup"><span data-stu-id="21aea-118">An encoder fallback buffer that throws an exception when it cannot encode a character sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21aea-119">Koder buforze rezerwowym jest odpowiedzialny za otrzymywanie i obsługę znaki, które kodera nie można przekonwertować do sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="21aea-119">An encoder fallback buffer is responsible for receiving and handling characters that an encoder cannot convert to a byte sequence.</span></span> <span data-ttu-id="21aea-120">Ta metoda zwraca wystąpienie klasy <xref:System.Text.EncoderExceptionFallbackBuffer> klasy, która może być podklasą klasy z <xref:System.Text.EncoderFallbackBuffer> klasy.</span><span class="sxs-lookup"><span data-stu-id="21aea-120">This method returns an instance of the <xref:System.Text.EncoderExceptionFallbackBuffer> class, which is a subclass of  the <xref:System.Text.EncoderFallbackBuffer> class.</span></span> <span data-ttu-id="21aea-121"><xref:System.Text.EncoderExceptionFallbackBuffer> Obiekt zgłasza <xref:System.Text.EncoderFallbackException> wyjątek przy każdym znaki są przekazywane do jego <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="21aea-121">An <xref:System.Text.EncoderExceptionFallbackBuffer> object throws an <xref:System.Text.EncoderFallbackException> exception whenever characters are passed to its <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21aea-122">Obiekt, który jest pochodną <see cref="T:System.Text.EncoderExceptionFallback" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="21aea-122">An object that derives from the <see cref="T:System.Text.EncoderExceptionFallback" /> class.</span></span></param>
        <summary><span data-ttu-id="21aea-123">Wskazuje, czy bieżący <see cref="T:System.Text.EncoderExceptionFallback" /> obiektu oraz określony obiekt są równe.</span><span class="sxs-lookup"><span data-stu-id="21aea-123">Indicates whether the current <see cref="T:System.Text.EncoderExceptionFallback" /> object and a specified object are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="21aea-124"><see langword="true" /> Jeśli <paramref name="value" /> nie jest <see langword="null" /> (<see langword="Nothing" /> w języku Visual Basic .NET) i jest <see cref="T:System.Text.EncoderExceptionFallback" /> obiektu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21aea-124"><see langword="true" /> if <paramref name="value" /> is not <see langword="null" /> (<see langword="Nothing" /> in Visual Basic .NET) and is a <see cref="T:System.Text.EncoderExceptionFallback" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21aea-125">Pobiera wartość skrótu dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="21aea-125">Retrieves the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="21aea-126">Zwracana wartość jest zawsze tej samej wartości dowolnego i ma specjalnego znaczenia.</span><span class="sxs-lookup"><span data-stu-id="21aea-126">The return value is always the same arbitrary value, and has no special significance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21aea-127">Ponieważ <xref:System.Text.EncoderExceptionFallback.GetHashCode%2A> metoda zawsze zwraca tę samą wartość, aplikacja nie należy używać tej wartości do odróżnienia jednego wystąpienia <xref:System.Text.EncoderExceptionFallback> klasy z innej.</span><span class="sxs-lookup"><span data-stu-id="21aea-127">Because the <xref:System.Text.EncoderExceptionFallback.GetHashCode%2A> method always returns the same value, the application should not use this value to distinguish one instance of the <xref:System.Text.EncoderExceptionFallback> class from another.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharCount">
      <MemberSignature Language="C#" Value="public override int MaxCharCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCharCount" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderExceptionFallback.MaxCharCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxCharCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxCharCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21aea-128">Pobiera maksymalną liczbę znaków, które może zwracać tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="21aea-128">Gets the maximum number of characters this instance can return.</span></span></summary>
        <value><span data-ttu-id="21aea-129">Zwracana wartość jest zawsze zero.</span><span class="sxs-lookup"><span data-stu-id="21aea-129">The return value is always zero.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>