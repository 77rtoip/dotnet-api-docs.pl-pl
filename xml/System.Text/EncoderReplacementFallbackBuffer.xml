<Type Name="EncoderReplacementFallbackBuffer" FullName="System.Text.EncoderReplacementFallbackBuffer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f20e114624268b06937dc43b95e370821e02281" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30579136" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EncoderReplacementFallbackBuffer : System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncoderReplacementFallbackBuffer extends System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderReplacementFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncoderReplacementFallbackBuffer&#xA;Inherits EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderReplacementFallbackBuffer sealed : System::Text::EncoderFallbackBuffer" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.EncoderFallbackBuffer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje ciąg wejściowy substitute używany, gdy oryginalne znak wejściowy nie może zostać zakodowany. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie może być można konwertować znak sekwencji równoważne zakodowanego bajtów, jeśli istnieje bez odpowiedniego kodowania. Kodowanie niepowodzenie typową przyczyną jest Jeśli operacji konwersji używa stronę kodową, która nie zawiera znaku do kodowania.  
  
 Jeśli nie można przekonwertować wprowadzany znak sekwencji bajtów wyjściowych <xref:System.Text.EncoderReplacementFallback?displayProperty=nameWithType> obiektu zawiera ciąg zastępczy, który zostanie zastąpiony oryginalnego znak wejściowy. Ciąg zastępczy inicjuje wartość <xref:System.Text.EncoderReplacementFallback> obiektu, a wartość <xref:System.Text.EncoderReplacementFallback> wartość inicjuje obiekt <xref:System.Text.EncoderReplacementFallbackBuffer> obiektu. Wartość <xref:System.Text.EncoderReplacementFallbackBuffer> obiektu jest wywoływana w buforze rezerwowym zastąpienia. Operacja konwersji koduje buforze rezerwowym zastępczy zamiast oryginalnej znak wejściowy, a następnie kontynuuje przetwarzanie reszta danych wejściowych.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderReplacementFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderReplacementFallbackBuffer (System.Text.EncoderReplacementFallback fallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.EncoderReplacementFallback fallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.#ctor(System.Text.EncoderReplacementFallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fallback As EncoderReplacementFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderReplacementFallbackBuffer(System::Text::EncoderReplacementFallback ^ fallback);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fallback" Type="System.Text.EncoderReplacementFallback" />
      </Parameters>
      <Docs>
        <param name="fallback">A <see cref="T:System.Text.EncoderReplacementFallback" /> obiektu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.EncoderReplacementFallbackBuffer" /> przy użyciu wartości <see cref="T:System.Text.EncoderReplacementFallback" /> obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przygotowuje buforze rezerwowym zastępczy do użycia bieżącego ciąg zastępczy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Fallback(char charUnknown, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown">Znak wejściowy. Ten parametr jest ignorowany w tej operacji, o ile nie jest zgłaszany wyjątek.</param>
        <param name="index">Indeks znaku w buforze wejściowym. Ten parametr jest ignorowany w tej operacji.</param>
        <summary>Przygotowuje buforze rezerwowym zastępczy do użycia bieżącego ciąg zastępczy.</summary>
        <returns>
          <see langword="true" /> Jeśli ciąg zastępczy nie jest pusty; <see langword="false" /> Jeśli ciąg zastępczy jest pusta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Text.Encoding.GetBytes%2A> i <xref:System.Text.Encoder.Convert%2A> wywołania metody <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> w momencie napotkania nieznany znak w danych wejściowych. Jeśli wartość zwracana <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> jest `true`, można wywołać metody wywołującej <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A> metodę, aby uzyskać każdego znaku w buforze rezerwowym zastąpienia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ta metoda jest wywoływana ponownie przed <see cref="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" /> metoda ma odczytu wszystkich znaków w buforze rezerwowym zastąpienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public override bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh">Zastępczym wysokiego poziomu wejściowego pary.</param>
        <param name="charUnknownLow">Dwuskładnikowego pary wejściowego.</param>
        <param name="index">Indeks para zastępcza w buforze wejściowym.</param>
        <summary>Wskazuje, czy ciąg zastępczy mogą być używane podczas wprowadzania zastępczego, który nie może zostać zakodowany pary lub czy para zastępcza można zignorować. Parametry określają para zastępcza i indeks pary w danych wejściowych.</summary>
        <returns>
          <see langword="true" /> Jeśli ciąg zastępczy nie jest pusty; <see langword="false" /> Jeśli ciąg zastępczy jest pusta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Text.Encoding.GetBytes%2A> i <xref:System.Text.Encoder.Convert%2A> wywołania metody <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> w momencie napotkania nieznany znak w danych wejściowych. Jeśli wartość zwracana <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> jest `true`, można wywołać metody wywołującej <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A> metodę, aby uzyskać każdego znaku w buforze rezerwowym zastąpienia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ta metoda jest wywoływana ponownie przed <see cref="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" /> metody zapoznał wszystkie zastąpienia znaków ciągu.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość <paramref name="charUnknownHigh" /> jest mniejsza niż U + D800 lub większa niż U + D8FF.  
  
 —lub—  
  
 Wartość <paramref name="charUnknownLow" /> jest mniejsza niż U + DC00 lub większa niż U + DFFF.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public override char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetNextChar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera następny znak w buforze rezerwowym zastąpienia.</summary>
        <returns>Następny znak Unicode w buforze rezerwowym zastąpienia, który można zakodować aplikacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Text.Encoding.GetBytes%2A> i <xref:System.Text.Encoder.Convert%2A> wywołania metody <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> w momencie napotkania para zastępcza nieznany lub znak w danych wejściowych. Jeśli wartość zwracana <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> jest `true`, można wywołać metody wywołującej <xref:System.Text.EncoderReplacementFallbackBuffer.GetNextChar%2A> uzyskanie każdego znaku w buforze rezerwowym zastąpienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public override bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MovePrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje, że następne wywołanie <see cref="M:System.Text.EncoderReplacementFallbackBuffer.GetNextChar" /> metodę dostępu pozycja znaku w buforze rezerwowym zastępczy przed bieżącego położenia znaku.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="M:System.Text.EncoderReplacementFallbackBuffer.MovePrevious" /> operacja zakończyła się pomyślnie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public override int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderReplacementFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Remaining { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę znaków w buforze rezerwowym zastępczy dokończenia przetwarzania.</summary>
        <value>Liczba znaków w buforze rezerwowym zastąpienia, które nie zostały przetworzone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Text.EncoderReplacementFallbackBuffer.Fallback%2A> Metoda zwraca `true` Jeśli <xref:System.Text.EncoderReplacementFallbackBuffer.Remaining%2A> właściwości jest różna od zera.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderReplacementFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje wszystkie informacje stan wewnętrzny i dane w tym wystąpieniu programu <see cref="T:System.Text.EncoderReplacementFallbackBuffer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Text.EncoderReplacementFallbackBuffer.Reset%2A> Metody spowoduje usunięcie wszelkich stanu utrwalonego informacje i dane, które będą zarządzały sposobem emitowanie ciąg zastępczy. Wystąpić nieprzewidywalne skutki, jeśli operację kodowania kontynuowana po <xref:System.Text.EncoderReplacementFallbackBuffer.Reset%2A> wywołania metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>