<Type Name="DecoderFallbackBuffer" FullName="System.Text.DecoderFallbackBuffer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="334e4a94e0c09dca04227f373df6acb3a69c9b91" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30579283" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DecoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DecoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.DecoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DecoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DecoderFallbackBuffer abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia bufor umożliwiający rezerwowy programu obsługi powrócić do dekodera ciągu alternatywne, gdy nie można zdekodować sekwencji bajtów wejściowych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kodowanie definiuje mapowanie między znaków Unicode i zakodowanego sekwencji bajtów. Operacja dekodowania, konwertuje sekwencji bajtów wejściowych znak dane wyjściowe, nie powiedzie się, jeśli zdefiniowano mapowania dla określonego typu byte sekwencji.  
  
 .NET Framework zapewnia awarii mechanizmu wywołuje rezerwowe, jeśli nie można wykonać konwersji obsługi. Wszystkie programy obsługi rezerwowego dekodera musi implementować następujące czynności:  
  
-   Dekoder rezerwowej, która jest reprezentowana przez klasę pochodną <xref:System.Text.DecoderFallback> klasy.  
  
-   Dekoder buforze rezerwowym, która jest reprezentowana przez typ pochodny typu <xref:System.Text.DecoderFallbackBuffer> klasy, która może zwracać ciąg do operacji konwersji.  
  
 Przejścia służą trzy strategie do obsługi błędów konwersji:  
  
-   Mapowanie najlepszego dopasowania. Buforze rezerwowym dekodera może zwracać ciąg reprezentujący Zamknij zbliżenia do sekwencji bajtów wejściowych. .NET Framework nie ma najlepszego dopasowania publiczny <xref:System.Text.DecoderFallbackBuffer> implementacji.  
  
-   Zastąpienie. Buforze rezerwowym dekodera może zwrócić typu string, takie jak znak zapytania ("?"), który wskazuje, że nie można zdekodować sekwencji bajtów. W programie .NET Framework <xref:System.Text.DecoderReplacementFallback> i <xref:System.Text.DecoderReplacementFallbackBuffer> klasy udostępnić implementację buforze rezerwowym publicznego zastąpienia. Konstruktor obiektu <xref:System.Text.DecoderReplacementFallback> klasa umożliwia zdefiniowanie ciąg zastępczy.  
  
-   Wyjątek. <xref:System.Text.DecoderFallbackBuffer> Implementacja zwraca wyjątek, który wskazuje, że nie można dekodować sekwencji bajtów i kończy działanie dekodowania. W takim przypadku należy zapewnić obsługi rezerwowego <xref:System.Text.DecoderFallbackBuffer> implementacji, chociaż nie zwrócił ciągu do dekodera. W programie .NET Framework <xref:System.Text.DecoderExceptionFallback> i <xref:System.Text.DecoderExceptionFallbackBuffer> klasy Podaj implementacji rezerwowy publicznego wyjątek, który zgłasza <xref:System.Text.DecoderFallbackException> gdy nie można dekodować sekwencji bajtów.  
  
 Bufor w <xref:System.Text.DecoderFallbackBuffer> implementacji reprezentuje cały ciąg, który ma zostać zwrócona do dekodera w odpowiedzi na dekodera rezerwowego. Ogólnie rzecz biorąc występujące implementacje to również informacje o stanie, takie jak indeks następny znak, aby powrócić do dekodera i liczbę pozostałych znaków, które ma zostać zwrócona. Ponieważ <xref:System.Text.DecoderFallbackBuffer> jest klasą abstrakcyjną, wymaga klas pochodnych do implementacji co najmniej następujące elementy:  
  
-   <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> Metodę, która jest wywoływana przez dekoder, gdy nie można zdekodować sekwencji bajtów. Dekoder przekazuje informacje do realizacji buforze rezerwowym: tablica zawierająca bajty, których nie można zdekodować i indeks pierwszego bajtu w wejściowej tablicy bajtów. W obsłudze wyjątków rezerwowy dekodera wyjątku w ramach tej metody. W przeciwnym razie metoda zwraca `true` Jeśli zapewnia rezerwowe, lub `false` jeśli jej nie ma.  
  
-   <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> Metodę, która wywołuje wielokrotnie dekoder Jeśli <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> metoda zwraca `true`. W kolejnych wywołaniach program obsługi ma zwracać każdego znaku w swoim buforze. Po jego zwróceniem wszystkie znaki, powinien on zwrócić 0000 U +. Program obsługi wyjątku rezerwowy zawsze zwraca 0000 U +.  
  
-   <xref:System.Text.DecoderFallbackBuffer.MovePrevious%2A> Metodę, która podejmuje próbę Przesuń wskaźnik poprzedniej pozycji w buforze i wskazuje, czy została pomyślnie przeniesiona. Zawsze zwraca program obsługi wyjątku `false`.  
  
-   <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> Właściwość, która wskazuje liczbę pozostałych znaków do zwrócenia do dekodera. Program obsługi wyjątku rezerwowy zawsze zwraca zero.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.DecoderFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DecoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DecoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.DecoderFallbackBuffer" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (byte[] bytesUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(unsigned int8[] bytesUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (bytesUnknown As Byte(), index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(cli::array &lt;System::Byte&gt; ^ bytesUnknown, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytesUnknown" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytesUnknown">Wejściowej tablicy bajtów.</param>
        <param name="index">Indeks typu byte w <c>bytesUnknown</c>.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, przygotowuje buforze rezerwowym do obsługi sekwencji określonym bajcie wejściowego.</summary>
        <returns>
          <see langword="true" /> Jeśli w buforze rezerwowym może przetwarzać <paramref name="bytesUnknown" />; <see langword="false" /> Jeśli ignoruje buforze rezerwowym <paramref name="bytesUnknown" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType>, <xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType>, I <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> wywołania metody <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> w momencie napotkania sekwencji nieznany bajtów wejściowych, która nie może zostać zdekodowane. Zwracana wartość `true` wskazuje, że w buforze rezerwowym może przetwarzać sekwencji wejściowych bajtów, co powoduje, że wywołanie metody do wywołania <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> metodę, aby uzyskać każdego znaku w buforze rezerwowym. Ponieważ nie przetwarza poszczególnych bajtach <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> metody rezerwowej program obsługi wyjątku zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej pobiera następny znak w buforze rezerwowym.</summary>
        <returns>Następny znak w buforze rezerwowym.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołuje operację dekodowania <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> metodę, jeśli operacja napotka sekwencji nieznany bajtów w danych wejściowych. Jeśli <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> metoda zwraca `true`, ciąg zastępczy umożliwiającą można wstawiać w danych wyjściowych zamiast dekodowania nieznany danych wejściowych. Dekodowania wywołania operacji <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> metody wielokrotnie i uzyskuje ciąg zastępczy o jeden znak w czasie. W przypadku wszystkich znaków w buforze rezerwowym zwrócono dekoder, metoda powinna zwrócić 0000 U +.  
  
 Do obsługi rezerwowego wyjątków <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> metoda powinna zwrócić 0000 U +.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, powoduje, że następne wywołanie <see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /> metodę dostępu pozycji znaku buforu danych, która jest przed bieżącego położenia znaku.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /> operacja zakończyła się pomyślnie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rezerwowy program obsługi wyjątku powinien zwrócić `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.DecoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej pobiera liczbę znaków w bieżącym <see cref="T:System.Text.DecoderFallbackBuffer" /> obiekt, który ma być przetwarzane.</summary>
        <value>Liczba znaków w bieżącym buforze rezerwowym, które nie zostały przetworzone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> Metoda zwraca `true` Jeśli <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> ma wartość niezerową.  
  
 Do obsługi rezerwowego wyjątków <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> metoda powinna zwracać zera.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje wszystkie dane i stan informacje dotyczące tego buforze rezerwowym.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Po wywołaniu <see cref="M:System.Text.DecoderFallbackBuffer.Reset" /> metody <see cref="P:System.Text.DecoderFallbackBuffer.Remaining" /> właściwość powinna zwrócić 0, <see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /> metoda powinna zwrócić U + 0000 i <see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /> metoda powinna zwrócić <see langword="false" />.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>