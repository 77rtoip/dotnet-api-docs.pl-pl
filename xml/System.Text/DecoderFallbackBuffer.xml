<Type Name="DecoderFallbackBuffer" FullName="System.Text.DecoderFallbackBuffer">
  <TypeSignature Language="C#" Value="public abstract class DecoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DecoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.DecoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DecoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DecoderFallbackBuffer abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="735af-101">Udostępnia bufor umożliwiający rezerwowy programu obsługi powrócić do dekodera ciągu alternatywne, gdy nie można zdekodować sekwencji bajtów wejściowych.</span><span class="sxs-lookup"><span data-stu-id="735af-101">Provides a buffer that allows a fallback handler to return an alternate string to a decoder when it cannot decode an input byte sequence.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735af-102">Kodowanie definiuje mapowanie między znaków Unicode i zakodowanego sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="735af-102">An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</span></span> <span data-ttu-id="735af-103">Operacja dekodowania, konwertuje sekwencji bajtów wejściowych znak dane wyjściowe, nie powiedzie się, jeśli zdefiniowano mapowania dla określonego typu byte sekwencji.</span><span class="sxs-lookup"><span data-stu-id="735af-103">A decoding operation, which converts an input byte sequence to an output character, fails if no mapping is defined for a particular byte sequence.</span></span>  
  
 <span data-ttu-id="735af-104">.NET Framework zapewnia awarii mechanizmu wywołuje rezerwowe, jeśli nie można wykonać konwersji obsługi.</span><span class="sxs-lookup"><span data-stu-id="735af-104">The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</span></span> <span data-ttu-id="735af-105">Wszystkie programy obsługi rezerwowego dekodera musi implementować następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="735af-105">All decoder fallback handlers must implement the following:</span></span>  
  
-   <span data-ttu-id="735af-106">Dekoder rezerwowej, która jest reprezentowana przez klasę pochodną <xref:System.Text.DecoderFallback> klasy.</span><span class="sxs-lookup"><span data-stu-id="735af-106">A decoder fallback, which is represented by a class derived from the <xref:System.Text.DecoderFallback> class.</span></span>  
  
-   <span data-ttu-id="735af-107">Dekoder buforze rezerwowym, która jest reprezentowana przez typ pochodny typu <xref:System.Text.DecoderFallbackBuffer> klasy, która może zwracać ciąg do operacji konwersji.</span><span class="sxs-lookup"><span data-stu-id="735af-107">A decoder fallback buffer, which is represented by a type derived from the <xref:System.Text.DecoderFallbackBuffer> class that can return a string to the conversion operation.</span></span>  
  
 <span data-ttu-id="735af-108">Przejścia służą trzy strategie do obsługi błędów konwersji:</span><span class="sxs-lookup"><span data-stu-id="735af-108">Fallbacks can use three strategies to handle conversion failures:</span></span>  
  
-   <span data-ttu-id="735af-109">Mapowanie najlepszego dopasowania.</span><span class="sxs-lookup"><span data-stu-id="735af-109">Best-fit mapping.</span></span> <span data-ttu-id="735af-110">Buforze rezerwowym dekodera może zwracać ciąg reprezentujący Zamknij zbliżenia do sekwencji bajtów wejściowych.</span><span class="sxs-lookup"><span data-stu-id="735af-110">The decoder fallback buffer can return a string that represents a close approximation to the input byte sequence.</span></span> <span data-ttu-id="735af-111">.NET Framework nie ma najlepszego dopasowania publiczny <xref:System.Text.DecoderFallbackBuffer> implementacji.</span><span class="sxs-lookup"><span data-stu-id="735af-111">The .NET Framework does not provide a public best-fit <xref:System.Text.DecoderFallbackBuffer> implementation.</span></span>  
  
-   <span data-ttu-id="735af-112">Zastąpienie.</span><span class="sxs-lookup"><span data-stu-id="735af-112">Replacement.</span></span> <span data-ttu-id="735af-113">Buforze rezerwowym dekodera może zwrócić typu string, takie jak znak zapytania ("?"), który wskazuje, że nie można zdekodować sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="735af-113">The decoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a byte sequence could not be decoded.</span></span> <span data-ttu-id="735af-114">W programie .NET Framework <xref:System.Text.DecoderReplacementFallback> i <xref:System.Text.DecoderReplacementFallbackBuffer> klasy udostępnić implementację buforze rezerwowym publicznego zastąpienia.</span><span class="sxs-lookup"><span data-stu-id="735af-114">In the .NET Framework, the <xref:System.Text.DecoderReplacementFallback> and <xref:System.Text.DecoderReplacementFallbackBuffer> classes provide a public replacement fallback buffer implementation.</span></span> <span data-ttu-id="735af-115">Konstruktor obiektu <xref:System.Text.DecoderReplacementFallback> klasa umożliwia zdefiniowanie ciąg zastępczy.</span><span class="sxs-lookup"><span data-stu-id="735af-115">The constructor of the <xref:System.Text.DecoderReplacementFallback> class enables you to define the replacement string.</span></span>  
  
-   <span data-ttu-id="735af-116">Wyjątek.</span><span class="sxs-lookup"><span data-stu-id="735af-116">Exception.</span></span> <span data-ttu-id="735af-117"><xref:System.Text.DecoderFallbackBuffer> Implementacja zwraca wyjątek, który wskazuje, że nie można dekodować sekwencji bajtów i kończy działanie dekodowania.</span><span class="sxs-lookup"><span data-stu-id="735af-117">The <xref:System.Text.DecoderFallbackBuffer> implementation throws an exception, which indicates that a byte sequence cannot be decoded, and terminates the decoding operation.</span></span> <span data-ttu-id="735af-118">W takim przypadku należy zapewnić obsługi rezerwowego <xref:System.Text.DecoderFallbackBuffer> implementacji, chociaż nie zwrócił ciągu do dekodera.</span><span class="sxs-lookup"><span data-stu-id="735af-118">In this case, the fallback handler must provide a <xref:System.Text.DecoderFallbackBuffer> implementation, although it does not return a string to the decoder.</span></span> <span data-ttu-id="735af-119">W programie .NET Framework <xref:System.Text.DecoderExceptionFallback> i <xref:System.Text.DecoderExceptionFallbackBuffer> klasy Podaj implementacji rezerwowy publicznego wyjątek, który zgłasza <xref:System.Text.DecoderFallbackException> gdy nie można dekodować sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="735af-119">In the .NET Framework, the <xref:System.Text.DecoderExceptionFallback> and <xref:System.Text.DecoderExceptionFallbackBuffer> classes provide a public exception fallback implementation that throws a <xref:System.Text.DecoderFallbackException> when a byte sequence cannot be decoded.</span></span>  
  
 <span data-ttu-id="735af-120">Bufor w <xref:System.Text.DecoderFallbackBuffer> implementacji reprezentuje cały ciąg, który ma zostać zwrócona do dekodera w odpowiedzi na dekodera rezerwowego.</span><span class="sxs-lookup"><span data-stu-id="735af-120">The buffer in a <xref:System.Text.DecoderFallbackBuffer> implementation represents the entire string to be returned to the decoder in response to a decoder fallback.</span></span> <span data-ttu-id="735af-121">Ogólnie rzecz biorąc występujące implementacje to również informacje o stanie, takie jak indeks następny znak, aby powrócić do dekodera i liczbę pozostałych znaków, które ma zostać zwrócona.</span><span class="sxs-lookup"><span data-stu-id="735af-121">Generally, implementations also include state information, such as the index of the next character to return to the decoder and the number of remaining characters to be returned.</span></span> <span data-ttu-id="735af-122">Ponieważ <xref:System.Text.DecoderFallbackBuffer> jest klasą abstrakcyjną, wymaga klas pochodnych do implementacji co najmniej następujące elementy:</span><span class="sxs-lookup"><span data-stu-id="735af-122">Because <xref:System.Text.DecoderFallbackBuffer> is an abstract class, it requires derived classes to implement the following members at a minimum:</span></span>  
  
-   <span data-ttu-id="735af-123"><xref:System.Text.DecoderFallbackBuffer.Fallback%2A> Metodę, która jest wywoływana przez dekoder, gdy nie można zdekodować sekwencji bajtów.</span><span class="sxs-lookup"><span data-stu-id="735af-123">The <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> method, which is called by the decoder when it cannot decode a byte sequence.</span></span> <span data-ttu-id="735af-124">Dekoder przekazuje informacje do realizacji buforze rezerwowym: tablica zawierająca bajty, których nie można zdekodować i indeks pierwszego bajtu w wejściowej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="735af-124">The decoder passes two pieces of information to the fallback buffer implementation: an array containing the bytes that could not be decoded and the index of the first byte in the input byte array.</span></span> <span data-ttu-id="735af-125">W obsłudze wyjątków rezerwowy dekodera wyjątku w ramach tej metody.</span><span class="sxs-lookup"><span data-stu-id="735af-125">In a decoder fallback exception handler, the exception is thrown in this method.</span></span> <span data-ttu-id="735af-126">W przeciwnym razie metoda zwraca `true` Jeśli zapewnia rezerwowe, lub `false` jeśli jej nie ma.</span><span class="sxs-lookup"><span data-stu-id="735af-126">Otherwise, the method returns `true` if it provides a fallback, or `false` if it does not.</span></span>  
  
-   <span data-ttu-id="735af-127"><xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> Metodę, która wywołuje wielokrotnie dekoder Jeśli <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> metoda zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="735af-127">The <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> method, which is called repeatedly by the decoder if the <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> method returns `true`.</span></span> <span data-ttu-id="735af-128">W kolejnych wywołaniach program obsługi ma zwracać każdego znaku w swoim buforze.</span><span class="sxs-lookup"><span data-stu-id="735af-128">In successive calls, the handler should return each character in its buffer.</span></span> <span data-ttu-id="735af-129">Po jego zwróceniem wszystkie znaki, powinien on zwrócić 0000 U +.</span><span class="sxs-lookup"><span data-stu-id="735af-129">When it has returned all characters, it should return U+0000.</span></span> <span data-ttu-id="735af-130">Program obsługi wyjątku rezerwowy zawsze zwraca 0000 U +.</span><span class="sxs-lookup"><span data-stu-id="735af-130">An exception fallback handler always returns U+0000.</span></span>  
  
-   <span data-ttu-id="735af-131"><xref:System.Text.DecoderFallbackBuffer.MovePrevious%2A> Metodę, która podejmuje próbę Przesuń wskaźnik poprzedniej pozycji w buforze i wskazuje, czy została pomyślnie przeniesiona.</span><span class="sxs-lookup"><span data-stu-id="735af-131">The <xref:System.Text.DecoderFallbackBuffer.MovePrevious%2A> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</span></span> <span data-ttu-id="735af-132">Zawsze zwraca program obsługi wyjątku `false`.</span><span class="sxs-lookup"><span data-stu-id="735af-132">An exception handler always returns `false`.</span></span>  
  
-   <span data-ttu-id="735af-133"><xref:System.Text.DecoderFallbackBuffer.Remaining%2A> Właściwość, która wskazuje liczbę pozostałych znaków do zwrócenia do dekodera.</span><span class="sxs-lookup"><span data-stu-id="735af-133">The <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> property, which indicates the number of remaining characters to be returned to the decoder.</span></span> <span data-ttu-id="735af-134">Program obsługi wyjątku rezerwowy zawsze zwraca zero.</span><span class="sxs-lookup"><span data-stu-id="735af-134">An exception fallback handler always returns zero.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.DecoderFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DecoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DecoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="735af-135">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.DecoderFallbackBuffer" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="735af-135">Initializes a new instance of the <see cref="T:System.Text.DecoderFallbackBuffer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (byte[] bytesUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(unsigned int8[] bytesUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (bytesUnknown As Byte(), index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(cli::array &lt;System::Byte&gt; ^ bytesUnknown, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytesUnknown" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytesUnknown"><span data-ttu-id="735af-136">Wejściowej tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="735af-136">An input array of bytes.</span></span></param>
        <param name="index"><span data-ttu-id="735af-137">Indeks typu byte w <c>bytesUnknown</c>.</span><span class="sxs-lookup"><span data-stu-id="735af-137">The index position of a byte in <c>bytesUnknown</c>.</span></span></param>
        <summary><span data-ttu-id="735af-138">W przypadku przesłonięcia w klasie pochodnej, przygotowuje buforze rezerwowym do obsługi sekwencji określonym bajcie wejściowego.</span><span class="sxs-lookup"><span data-stu-id="735af-138">When overridden in a derived class, prepares the fallback buffer to handle the specified input byte sequence.</span></span></summary>
        <returns>
          <span data-ttu-id="735af-139"><see langword="true" /> Jeśli w buforze rezerwowym może przetwarzać <paramref name="bytesUnknown" />; <see langword="false" /> Jeśli ignoruje buforze rezerwowym <paramref name="bytesUnknown" />.</span><span class="sxs-lookup"><span data-stu-id="735af-139"><see langword="true" /> if the fallback buffer can process <paramref name="bytesUnknown" />; <see langword="false" /> if the fallback buffer ignores <paramref name="bytesUnknown" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735af-140"><xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType>, <xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType>, I <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> wywołania metody <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> w momencie napotkania sekwencji nieznany bajtów wejściowych, która nie może zostać zdekodowane.</span><span class="sxs-lookup"><span data-stu-id="735af-140">The <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType>, <xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType>, and <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> if they encounter an unknown input byte sequence that cannot be decoded.</span></span> <span data-ttu-id="735af-141">Zwracana wartość `true` wskazuje, że w buforze rezerwowym może przetwarzać sekwencji wejściowych bajtów, co powoduje, że wywołanie metody do wywołania <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> metodę, aby uzyskać każdego znaku w buforze rezerwowym.</span><span class="sxs-lookup"><span data-stu-id="735af-141">A return value of `true` indicates that the fallback buffer can process the input byte sequence, which causes the calling method to call the <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span> <span data-ttu-id="735af-142">Ponieważ nie przetwarza poszczególnych bajtach <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> metody rezerwowej program obsługi wyjątku zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="735af-142">Because it does not process individual bytes, the <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="735af-143">W przypadku przesłonięcia w klasie pochodnej pobiera następny znak w buforze rezerwowym.</span><span class="sxs-lookup"><span data-stu-id="735af-143">When overridden in a derived class, retrieves the next character in the fallback buffer.</span></span></summary>
        <returns><span data-ttu-id="735af-144">Następny znak w buforze rezerwowym.</span><span class="sxs-lookup"><span data-stu-id="735af-144">The next character in the fallback buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735af-145">Wywołuje operację dekodowania <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> metodę, jeśli operacja napotka sekwencji nieznany bajtów w danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="735af-145">A decoding operation calls the <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> method if the operation encounters an unknown byte sequence in the input.</span></span> <span data-ttu-id="735af-146">Jeśli <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> metoda zwraca `true`, ciąg zastępczy umożliwiającą można wstawiać w danych wyjściowych zamiast dekodowania nieznany danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="735af-146">If the <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> method returns `true`, a substitute string exists that can be inserted in the output instead of decoding the unknown input.</span></span> <span data-ttu-id="735af-147">Dekodowania wywołania operacji <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> metody wielokrotnie i uzyskuje ciąg zastępczy o jeden znak w czasie.</span><span class="sxs-lookup"><span data-stu-id="735af-147">The decoding operation calls the <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> method repeatedly and obtains the substitute string one character at a time.</span></span> <span data-ttu-id="735af-148">W przypadku wszystkich znaków w buforze rezerwowym zwrócono dekoder, metoda powinna zwrócić 0000 U +.</span><span class="sxs-lookup"><span data-stu-id="735af-148">When all characters in the fallback buffer have been returned to the decoder, the method should return U+0000.</span></span>  
  
 <span data-ttu-id="735af-149">Do obsługi rezerwowego wyjątków <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> metoda powinna zwrócić 0000 U +.</span><span class="sxs-lookup"><span data-stu-id="735af-149">For an exception fallback handler, the <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="735af-150">W przypadku przesłonięcia w klasie pochodnej, powoduje, że następne wywołanie <see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /> metodę dostępu pozycji znaku buforu danych, która jest przed bieżącego położenia znaku.</span><span class="sxs-lookup"><span data-stu-id="735af-150">When overridden in a derived class, causes the next call to the <see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /> method to access the data buffer character position that is prior to the current character position.</span></span></summary>
        <returns>
          <span data-ttu-id="735af-151"><see langword="true" /> Jeśli <see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /> operacja zakończyła się pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="735af-151"><see langword="true" /> if the <see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /> operation was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735af-152">Rezerwowy program obsługi wyjątku powinien zwrócić `false`.</span><span class="sxs-lookup"><span data-stu-id="735af-152">An exception fallback handler should return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.DecoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="735af-153">W przypadku przesłonięcia w klasie pochodnej pobiera liczbę znaków w bieżącym <see cref="T:System.Text.DecoderFallbackBuffer" /> obiekt, który ma być przetwarzane.</span><span class="sxs-lookup"><span data-stu-id="735af-153">When overridden in a derived class, gets the number of characters in the current <see cref="T:System.Text.DecoderFallbackBuffer" /> object that remain to be processed.</span></span></summary>
        <value><span data-ttu-id="735af-154">Liczba znaków w bieżącym buforze rezerwowym, które nie zostały przetworzone.</span><span class="sxs-lookup"><span data-stu-id="735af-154">The number of characters in the current fallback buffer that have not yet been processed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="735af-155"><xref:System.Text.DecoderFallbackBuffer.Fallback%2A> Metoda zwraca `true` Jeśli <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> ma wartość niezerową.</span><span class="sxs-lookup"><span data-stu-id="735af-155">The <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> method returns `true` if <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> is a nonzero value.</span></span>  
  
 <span data-ttu-id="735af-156">Do obsługi rezerwowego wyjątków <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> metoda powinna zwracać zera.</span><span class="sxs-lookup"><span data-stu-id="735af-156">For an exception fallback handler, the <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> method should return zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="735af-157">Inicjuje wszystkie dane i stan informacje dotyczące tego buforze rezerwowym.</span><span class="sxs-lookup"><span data-stu-id="735af-157">Initializes all data and state information pertaining to this fallback buffer.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="735af-158">Po wywołaniu <see cref="M:System.Text.DecoderFallbackBuffer.Reset" /> metody <see cref="P:System.Text.DecoderFallbackBuffer.Remaining" /> właściwość powinna zwrócić 0, <see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /> metoda powinna zwrócić U + 0000 i <see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /> metoda powinna zwrócić <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="735af-158">After calling the <see cref="M:System.Text.DecoderFallbackBuffer.Reset" /> method, the <see cref="P:System.Text.DecoderFallbackBuffer.Remaining" /> property should return 0, the <see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /> method should return U+0000, and the <see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /> method should return <see langword="false" />.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>