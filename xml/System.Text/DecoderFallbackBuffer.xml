<Type Name="DecoderFallbackBuffer" FullName="System.Text.DecoderFallbackBuffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4164b04f7092a2fe2379e78521e8ccb10b11c8e9" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52234310" /></Metadata><TypeSignature Language="C#" Value="public abstract class DecoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DecoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.DecoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DecoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DecoderFallbackBuffer abstract" />
  <TypeSignature Language="F#" Value="type DecoderFallbackBuffer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia bufor, umożliwiająca rezerwowego obsługi do zwrócenia ciągu alternatywne do dekodera, jeśli nie można go zdekodować sekwencja bajtów danych wejściowych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kodowanie definiuje mapowanie między znaków Unicode i zakodowany sekwencji bajtów. Dekodowania operacji, która konwertuje sekwencji wejściowych bajtów na znak danych wyjściowych, kończy się niepowodzeniem, jeśli nie zdefiniowano żadnego mapowania bajtów określonej sekwencji.  
  
 .NET Framework zawiera błąd obsługi mechanizmu, o nazwie rezerwowe, jeśli nie można wykonać konwersji. Wszystkie programy obsługi rezerwowego dekodera należy zaimplementować następujące czynności:  
  
-   Dekoder rezerwowy, który jest reprezentowany przez klasę pochodną <xref:System.Text.DecoderFallback> klasy.  
  
-   Dekodera bufora rezerwowy, która jest reprezentowana przez typ pochodzący od <xref:System.Text.DecoderFallbackBuffer> klasę, która może zwracać ciąg do operacji konwersji.  
  
 Planów awaryjnych służą trzy strategie do obsługi błędów konwersji:  
  
-   Mapowanie najlepszego dopasowania. Dekoder bufora rezerwowy może zwracać ciąg reprezentujący bliskie zbliżenia sekwencji bajtów danych wejściowych. .NET Framework nie udostępnia publiczny najlepszego dopasowania <xref:System.Text.DecoderFallbackBuffer> implementacji.  
  
-   Zastąpienie. Dekoder bufora rezerwowy może zwrócić ciągu, takich jak znak zapytania ("?"), oznacza to, że sekwencja bajtów SE Nedal dekódovat. W .NET Framework <xref:System.Text.DecoderReplacementFallback> i <xref:System.Text.DecoderReplacementFallbackBuffer> klasy zapewniają implementacji bufora rezerwowy zastąpienie publicznych. Konstruktor obiektu <xref:System.Text.DecoderReplacementFallback> klasy pozwala zdefiniować ciąg zamienny.  
  
-   Wyjątek. <xref:System.Text.DecoderFallbackBuffer> Implementacja zwraca wyjątek, który wskazuje, że sekwencja bajtów nie mogą zostać zdekodowane i kończy się operacja dekodowania. W takim przypadku należy podać obsługi rezerwowego <xref:System.Text.DecoderFallbackBuffer> implementacji, mimo że nie zwraca ciąg do dekodera. W .NET Framework <xref:System.Text.DecoderExceptionFallback> i <xref:System.Text.DecoderExceptionFallbackBuffer> klasy zapewniają publicznych wyjątek implementacji rezerwowej, która zgłasza <xref:System.Text.DecoderFallbackException> po nie mogą zostać zdekodowane sekwencja bajtów.  
  
 Bufor w <xref:System.Text.DecoderFallbackBuffer> implementacji reprezentuje cały ciąg zwracany do dekodera w odpowiedzi na dekodera rezerwowego. Ogólnie rzecz biorąc implementacje również obejmować informacje o stanie, takie jak indeks następnego znaku, aby powrócić do dekodera i liczbę pozostałych znaków, które mają zostać zwrócone. Ponieważ <xref:System.Text.DecoderFallbackBuffer> jest klasą abstrakcyjną wymaga klasy pochodne, aby zaimplementować następujące elementy Członkowskie co najmniej:  
  
-   <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> Metody, która jest wywoływana przez dekoder, gdy nie można go zdekodować sekwencja bajtów. Dekoder przekazuje informacje do implementacji rezerwowej buforu: tablica zawierająca bajty, których nie można zdekodować i indeks pierwszego bajtu w wejściowej tablicy bajtów. W obsłudze wyjątków rezerwowego dekodera wyjątek jest zgłaszany w przypadku tej metody. W przeciwnym razie metoda zwraca `true` zapewnia rezerwowe, lub `false` Jeśli tak nie jest.  
  
-   <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> Metody, która jest wywoływana, wielokrotnie przez dekoder Jeśli <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> metoda zwraca `true`. W kolejnych wywołaniach procedura obsługi powinna zwrócić każdego znaku w buforze jej. Gdy zostanie on zwrócony wszystkie znaki, powinien zostać zwrócony U + 0000. Do obsługi rezerwowego wyjątku zawsze zwraca wartość U + 0000.  
  
-   <xref:System.Text.DecoderFallbackBuffer.MovePrevious%2A> Metody, która podejmuje próbę Przesuń wskaźnik do poprzedniej pozycji w buforze i wskazuje, czy przeniesienie zakończyło się pomyślnie. Zawsze zwraca program obsługi wyjątku `false`.  
  
-   <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> Właściwość, która wskazuje liczbę pozostałych znaków do zwrócenia do dekodera. Do obsługi rezerwowego wyjątku zawsze zwraca wartość zero.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.DecoderFallback" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md">Kodowanie znaków w programie .NET Framework</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DecoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DecoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.DecoderFallbackBuffer" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (byte[] bytesUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(unsigned int8[] bytesUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (bytesUnknown As Byte(), index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(cli::array &lt;System::Byte&gt; ^ bytesUnknown, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : byte[] * int -&gt; bool" Usage="decoderFallbackBuffer.Fallback (bytesUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytesUnknown" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytesUnknown">Tablica wejściowa bajtów.</param>
        <param name="index">Indeks bajtu w <paramref name="bytesUnknown" />.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, przygotowuje rezerwowego buforu do obsługi sekwencji określoną liczbę bajtów danych wejściowych.</summary>
        <returns><see langword="true" /> Jeśli bufora rezerwowy może przetwarzać <paramref name="bytesUnknown" />; <see langword="false" /> Jeśli ignoruje bufora rezerwowy <paramref name="bytesUnknown" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType>, <xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType>, I <xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType> wywołanie metody <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> w momencie napotkania sekwencji bajtów wejściowych nieznany, która nie mogą zostać zdekodowane. Zwracana wartość wynosząca `true` wskazuje, że bufora rezerwowy może przetwarzać sekwencji wejściowych bajtów, co powoduje, że wywoływania metody do wywołania <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> metodę, aby uzyskać każdy znak z bufora rezerwowy. Ponieważ nie przetwarza poszczególne bajty <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> zgłasza wyjątek, metoda w rezerwowej program obsługi wyjątków.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberSignature Language="F#" Value="abstract member GetNextChar : unit -&gt; char" Usage="decoderFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Po przesłonięciu w klasie pochodnej pobiera następny znak w buforze rezerwowego.</summary>
        <returns>Następny znak w buforze rezerwowego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Operacja dekodowania wywołuje <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> metodę, jeśli operacja napotka sekwencja nieznany bajtów w danych wejściowych. Jeśli <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> metoda zwraca `true`, istnieje Zastąp ciąg, który mogą być wstawiane w danych wyjściowych zamiast dekodowanie nieznany danych wejściowych. Dekodowania wywołania operacji <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> metoda wielokrotnie i uzyskuje ciągu zastępuje jeden znak w danym momencie. W przypadku wszystkich znaków w buforze rezerwowym zostały zwrócone do dekodera, metoda powinna zwrócić U + 0000.  
  
 Do obsługi rezerwowego wyjątków <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A> metoda powinna zwrócić U + 0000.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberSignature Language="F#" Value="abstract member MovePrevious : unit -&gt; bool" Usage="decoderFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, powoduje, że następne wywołanie <see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /> metodę, aby uzyskać dostęp pozycji znaku buforów danych, niż bieżąca pozycja znaku.</summary>
        <returns><see langword="true" /> Jeśli <see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /> operacja zakończyła się pomyślnie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Do obsługi rezerwowego wyjątku powinien zwrócić `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.DecoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.DecoderFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej pobiera liczbę znaków w bieżącym <see cref="T:System.Text.DecoderFallbackBuffer" /> obiekt, który dokończenia przetwarzania.</summary>
        <value>Liczba znaków w bieżącym buforze rezerwowy, które nie zostały jeszcze przetworzone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Text.DecoderFallbackBuffer.Fallback%2A> Metoda zwraca `true` Jeśli <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> jest wartość różną od zera.  
  
 Do obsługi rezerwowego wyjątków <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> metoda powinna zwrócić zero.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="decoderFallbackBuffer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje wszystkie dane i informacje o stanie odnoszących się do tego buforu rezerwowego.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Po wywołaniu <see cref="M:System.Text.DecoderFallbackBuffer.Reset" /> metody <see cref="P:System.Text.DecoderFallbackBuffer.Remaining" /> właściwość powinna zwracać 0, <see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /> metoda powinna zwrócić U + 0000 i <see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /> metoda powinna zwrócić <see langword="false" />.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>