<Type Name="EncoderFallback" FullName="System.Text.EncoderFallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="441a9abdda3baaf6b1b6bd11d140c5d87eee9364" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30579043" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncoderFallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EncoderFallback extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallback" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallback abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia mechanizm obsługi błędu, nazywane rezerwowe, wprowadzania znaku, której nie można przekonwertować do sekwencji bajtów zakodowanego wyjścia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kodowanie mapuje znaku Unicode zakodowanego sekwencji bajtów. Określonego kodowania jest reprezentowana przez typ, który jest pochodną <xref:System.Text.Encoding> klasy. W szczególności zakodowane znak do sekwencji bajtów, wywołując typ kodowania <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> — metoda i kolejność bajtów jest zdekodować tablicy znaków lub ciąg przez wywołanie metody <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType> lub <xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType> metody.  
  
 Operacja kodowania może zakończyć się niepowodzeniem, jeśli znak wejściowy nie może być reprezentowany przez kodowania. Na przykład <xref:System.Text.ASCIIEncoding> obiektu nie można zakodować znak, którego wartość punkt kodu Unicode jest poza zakresem 0000 U + do U + 007F.  
  
 Gdy nie można przeprowadzić konwersji kodowania, .NET Framework zapewnia mechanizm obsługi błędu o nazwie rezerwowe. Aplikacja może użyć wstępnie zdefiniowanych przejścia kodera .NET Framework lub można utworzyć niestandardowego kodera rezerwowy pochodną <xref:System.Text.EncoderFallback> i <xref:System.Text.EncoderFallbackBuffer> klasy.  
  
 <xref:System.Text.EncoderFallback> i <xref:System.Text.EncoderFallbackBuffer> klasy podstawowe dla wszystkich kodowania rezerwowy obsługi w programie .NET Framework. Obsługuje trzy rodzaje powrotu mechanizmów obsługi:  
  
-   Rezerwa najlepszego dopasowania, który mapuje prawidłowych znaków Unicode, które nie może zostać zakodowany na równoważny przybliżonej. Na przykład najlepszego dopasowania obsługi rezerwowego dla <xref:System.Text.ASCIIEncoding> klasy mogą być mapowane Æ (U + 00 C 6) do AE (U + 0041 + U + 0045). Najlepszego dopasowania obsługi rezerwowego może wprowadzone, aby transliterate jeden alfabetu (na przykład cyrylicy) do innego (na przykład Łacińska lub łaciński). .NET Framework nie ma publicznego najlepszego dopasowania implementacje rezerwowego.  
  
-   Zastąpienie rezerwowej, która zastępuje każdy znak nie może zostać zakodowany z ciągiem wstępnie zdefiniowane. .NET Framework zapewnia obsługi rezerwowego zastępczy wstępnie zdefiniowane. <xref:System.Text.EncoderReplacementFallback> Klasy zamienia każdego sekwencji bajtów, która nie może zostać odczytany na znak zapytania ("?", lub U + 003F) lub znak zastępczy (U + FFFD). Ciąg zastępczy można dostosować, określając zastępuje w wywołaniu <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> konstruktora. Po wysyłanego ciągu zastępuje operację kodowania nadal konwertowanie pozostałej części danych wejściowych.  
  
-   Wyjątek rezerwowej, która zgłasza wyjątek, jeśli znak nie może zostać zakodowany. .NET Framework zapewnia obsługi rezerwowego wstępnie zdefiniowany wyjątek. <xref:System.Text.EncoderExceptionFallback> Klasy zgłasza <xref:System.Text.EncoderFallbackException> po napotkano nieprawidłowy znak i zakończy operację kodowania.  
  
 Jeśli wybierzesz do wdrożenia rozwiązania niestandardowe, konieczne jest przesłonięcie następujących abstrakcyjne elementy członkowskie <xref:System.Text.EncoderFallback> klasy:  
  
-   <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> Metodę, która zwraca wystąpienie klasy pochodnej z <xref:System.Text.EncoderFallbackBuffer>. W zależności od typu rezerwowy obsługi, które tworzysz <xref:System.Text.EncoderFallbackBuffer> implementacja jest odpowiedzialna za wykonywanie mapowania lub zastąpienia lub do generowania wyjątku.  
  
-   <xref:System.Text.EncoderFallback.MaxCharCount%2A> Właściwość, która zwraca maksymalną liczbę znaków, zwracających rezerwowy implementacji. Do obsługi rezerwowego wyjątków jego wartość powinna wynosić zero.  
  
 Aby uzyskać więcej informacji o kodowania, dekodowania i strategii rezerwowej, zobacz [kodowania znaków w programie .NET Framework](~/docs/standard/base-types/character-encoding.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallbackBuffer" />
    <altmember cref="T:System.Text.EncoderReplacementFallback" />
    <altmember cref="T:System.Text.EncoderExceptionFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallback ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallback.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallback();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.EncoderFallback" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFallbackBuffer">
      <MemberSignature Language="C#" Value="public abstract System.Text.EncoderFallbackBuffer CreateFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.EncoderFallbackBuffer CreateFallbackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallback.CreateFallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateFallbackBuffer () As EncoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::EncoderFallbackBuffer ^ CreateFallbackBuffer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej inicjuje nowe wystąpienie klasy <see cref="T:System.Text.EncoderFallbackBuffer" /> klasy.</summary>
        <returns>Obiekt, który zapewnia buforze rezerwowym kodera.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca obiekt pochodzący od <xref:System.Text.EncoderFallbackBuffer> jest odpowiedzialny za wykonywanie operacji rezerwowego. Na przykład z wstępnie zdefiniowane <xref:System.Text.EncoderFallback> implementacji w programie .NET Framework <xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType> metoda zwraca <xref:System.Text.EncoderReplacementFallbackBuffer> obiektu i <xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType> metoda zwraca <xref:System.Text.EncoderExceptionFallbackBuffer> obiektu.  
  
 <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> Metoda jest wywoływana przez koder po napotkaniu pierwszego znaku, który nie jest w stanie do kodowania. <xref:System.Text.EncoderFallbackBuffer> Obiektu zwróconego przez tę metodę zawiera rezerwowy implementacji i jest odpowiedzialny za zwrócenie tablicy bajtowej, która zastępuje znak lub znaków, które nie może być zaszyfrowana.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.DecoderFallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionFallback">
      <MemberSignature Language="C#" Value="public static System.Text.EncoderFallback ExceptionFallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncoderFallback ExceptionFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.ExceptionFallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ExceptionFallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncoderFallback ^ ExceptionFallback { System::Text::EncoderFallback ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który zgłasza wyjątek, gdy znak wejściowy nie może zostać zakodowany.</summary>
        <value>Typ pochodny <see cref="T:System.Text.EncoderFallback" /> klasy. Wartość domyślna to <see cref="T:System.Text.EncoderExceptionFallback" /> obiektu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharCount">
      <MemberSignature Language="C#" Value="public abstract int MaxCharCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCharCount" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.MaxCharCount" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MaxCharCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int MaxCharCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej pobiera maksymalną liczbę znaków bieżącego <see cref="T:System.Text.EncoderFallback" /> może zwracać obiektu.</summary>
        <value>Maksymalna liczba znaków bieżącego <see cref="T:System.Text.EncoderFallback" /> może zwracać obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Do obsługi rezerwowego wyjątków ta właściwość powinna zwrócić zero.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacementFallback">
      <MemberSignature Language="C#" Value="public static System.Text.EncoderFallback ReplacementFallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncoderFallback ReplacementFallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallback.ReplacementFallback" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ReplacementFallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncoderFallback ^ ReplacementFallback { System::Text::EncoderFallback ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który generuje ciąg zastępczy zamiast wprowadzania znak, który nie może zostać zakodowany.</summary>
        <value>Typ pochodny <see cref="T:System.Text.EncoderFallback" /> klasy. Wartość domyślna to <see cref="T:System.Text.EncoderReplacementFallback" /> obiekt, który zastępuje wprowadzanie znaków nieznany znak zapytania ("?", U + 003F).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>