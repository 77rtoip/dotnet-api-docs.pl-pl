<Type Name="NormalizationForm" FullName="System.Text.NormalizationForm">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8a5d73a49b8ae41178a5bbdec5985c690b09b2b6" /><Meta Name="ms.sourcegitcommit" Value="3f21796619d6e69ad383c958cc013ce44c0678de" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/11/2019" /><Meta Name="ms.locfileid" Value="56062994" /></Metadata><TypeSignature Language="C#" Value="public enum NormalizationForm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed NormalizationForm extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Text.NormalizationForm" />
  <TypeSignature Language="VB.NET" Value="Public Enum NormalizationForm" />
  <TypeSignature Language="C++ CLI" Value="public enum class NormalizationForm" />
  <TypeSignature Language="F#" Value="type NormalizationForm = " />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2d8ca-101">Definiuje typ normalizacji do wykonania.</span><span class="sxs-lookup"><span data-stu-id="2d8ca-101">Defines the type of normalization to perform.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d8ca-102">Niektóre sekwencje Unicode są uważane za równoważne, ponieważ stanowią one takiego samego znaku.</span><span class="sxs-lookup"><span data-stu-id="2d8ca-102">Some Unicode sequences are considered equivalent because they represent the same character.</span></span> <span data-ttu-id="2d8ca-103">Na przykład że są uważane za równoważne ponieważ któregoś z powyższych może służyć do reprezentowania "ắ":</span><span class="sxs-lookup"><span data-stu-id="2d8ca-103">For example, the following are considered equivalent because any of these can be used to represent "ắ":</span></span>  
  
-   <span data-ttu-id="2d8ca-104">"\u1EAF"</span><span class="sxs-lookup"><span data-stu-id="2d8ca-104">"\u1EAF"</span></span>  
  
-   <span data-ttu-id="2d8ca-105">"\u0103\u0301"</span><span class="sxs-lookup"><span data-stu-id="2d8ca-105">"\u0103\u0301"</span></span>  
  
-   <span data-ttu-id="2d8ca-106">"\u0061\u0306\u0301"</span><span class="sxs-lookup"><span data-stu-id="2d8ca-106">"\u0061\u0306\u0301"</span></span>  
  
 <span data-ttu-id="2d8ca-107">Jednak porządkową, czyli porównania binarne, należy wziąć pod uwagę te sekwencje różnych ponieważ zawierają one różne wartości kodu Unicode.</span><span class="sxs-lookup"><span data-stu-id="2d8ca-107">However, ordinal, that is, binary, comparisons consider these sequences different because they contain different Unicode code values.</span></span> <span data-ttu-id="2d8ca-108">Przed przystąpieniem do wykonywania porównania liczb porządkowych, aplikacje muszą normalizacji te ciągi do rozkładania je do swoich podstawowych składników.</span><span class="sxs-lookup"><span data-stu-id="2d8ca-108">Before performing ordinal comparisons, applications must normalize these strings to decompose them into their basic components.</span></span>  
  
 <span data-ttu-id="2d8ca-109">Każdy złożonych znaków Unicode jest zamapowana na bardziej podstawową sekwencji jednego lub większej liczby znaków.</span><span class="sxs-lookup"><span data-stu-id="2d8ca-109">Each composite Unicode character is mapped to a more basic sequence of one or more characters.</span></span> <span data-ttu-id="2d8ca-110">Proces rozkładu zastępuje złożonych znaków w ciągu ich bardziej podstawową mapowań.</span><span class="sxs-lookup"><span data-stu-id="2d8ca-110">The process of decomposition replaces composite characters in a string with their more basic mappings.</span></span> <span data-ttu-id="2d8ca-111">Rekursywnie dekompozycji pełną wykonuje ta zastępowania, dopóki żaden ze znaków w ciągu znaków może być rozłożone dalszych.</span><span class="sxs-lookup"><span data-stu-id="2d8ca-111">A full decomposition recursively performs this replacement until none of the characters in the string can be decomposed further.</span></span>  
  
 <span data-ttu-id="2d8ca-112">Unicode definiuje dwa rodzaje decompositions: dekompozycji zgodności i canonical dekompozycji.</span><span class="sxs-lookup"><span data-stu-id="2d8ca-112">Unicode defines two types of decompositions: compatibility decomposition and canonical decomposition.</span></span> <span data-ttu-id="2d8ca-113">W rozkład zgodności informacje o formatowaniu mogą zostać utracone.</span><span class="sxs-lookup"><span data-stu-id="2d8ca-113">In compatibility decomposition, formatting information might be lost.</span></span> <span data-ttu-id="2d8ca-114">W rozkład canonical, która jest podzbiorem dekompozycji zgodności, informacje o formatowaniu są zachowywane.</span><span class="sxs-lookup"><span data-stu-id="2d8ca-114">In canonical decomposition, which is a subset of compatibility decomposition, formatting information is preserved.</span></span>  
  
 <span data-ttu-id="2d8ca-115">Dwa zestawy znaków jest uznawany za canonical równoważności, jeśli ich pełne canonical decompositions są identyczne.</span><span class="sxs-lookup"><span data-stu-id="2d8ca-115">Two sets of characters are considered to have canonical equivalence if their full canonical decompositions are identical.</span></span> <span data-ttu-id="2d8ca-116">Podobnie dwóch zestawów znaków są traktowane jako mają równoważności zgodności, jeśli ich decompositions pełnej zgodności są identyczne.</span><span class="sxs-lookup"><span data-stu-id="2d8ca-116">Likewise, two sets of characters are considered to have compatibility equivalence if their full compatibility decompositions are identical.</span></span>  
  
 <span data-ttu-id="2d8ca-117">Aby uzyskać więcej informacji na temat normalizacji, decompositions i równoważności, zobacz [Unicode Standard załącznika 15: Form normalizacji Unicode](https://unicode.org/reports/tr15/) na stronie unicode.org.</span><span class="sxs-lookup"><span data-stu-id="2d8ca-117">For more information about normalization, decompositions and equivalence, see [Unicode Standard Annex #15: Unicode Normalization Forms](https://unicode.org/reports/tr15/) at unicode.org.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Text.Encoding.IsAlwaysNormalized" />
    <altmember cref="M:System.String.Normalize" />
    <altmember cref="M:System.String.IsNormalized" />
  </Docs>
  <Members>
    <Member MemberName="FormC">
      <MemberSignature Language="C#" Value="FormC" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.NormalizationForm FormC = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Text.NormalizationForm.FormC" />
      <MemberSignature Language="VB.NET" Value="FormC" />
      <MemberSignature Language="C++ CLI" Value="FormC" />
      <MemberSignature Language="F#" Value="FormC = 1" Usage="System.Text.NormalizationForm.FormC" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.NormalizationForm</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d8ca-118">Wskazuje, że ciąg Unicode jest znormalizować przy użyciu pełnej canonical rozkład, następuje zastąpienie sekwencji z ich podstawowej złożone, jeśli jest to możliwe.</span><span class="sxs-lookup"><span data-stu-id="2d8ca-118">Indicates that a Unicode string is normalized using full canonical decomposition, followed by the replacement of sequences with their primary composites, if possible.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FormD">
      <MemberSignature Language="C#" Value="FormD" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.NormalizationForm FormD = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Text.NormalizationForm.FormD" />
      <MemberSignature Language="VB.NET" Value="FormD" />
      <MemberSignature Language="C++ CLI" Value="FormD" />
      <MemberSignature Language="F#" Value="FormD = 2" Usage="System.Text.NormalizationForm.FormD" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.NormalizationForm</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d8ca-119">Wskazuje ciąg Unicode jest znormalizować, przy użyciu pełnej canonical dekompozycji.</span><span class="sxs-lookup"><span data-stu-id="2d8ca-119">Indicates that a Unicode string is normalized using full canonical decomposition.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FormKC">
      <MemberSignature Language="C#" Value="FormKC" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.NormalizationForm FormKC = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Text.NormalizationForm.FormKC" />
      <MemberSignature Language="VB.NET" Value="FormKC" />
      <MemberSignature Language="C++ CLI" Value="FormKC" />
      <MemberSignature Language="F#" Value="FormKC = 5" Usage="System.Text.NormalizationForm.FormKC" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.NormalizationForm</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d8ca-120">Wskazuje, że ciąg Unicode jest znormalizować przy użyciu rozkładu pełną zgodność, następuje zastąpienie sekwencji z ich podstawowej złożone, jeśli jest to możliwe.</span><span class="sxs-lookup"><span data-stu-id="2d8ca-120">Indicates that a Unicode string is normalized using full compatibility decomposition, followed by the replacement of sequences with their primary composites, if possible.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FormKD">
      <MemberSignature Language="C#" Value="FormKD" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.NormalizationForm FormKD = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Text.NormalizationForm.FormKD" />
      <MemberSignature Language="VB.NET" Value="FormKD" />
      <MemberSignature Language="C++ CLI" Value="FormKD" />
      <MemberSignature Language="F#" Value="FormKD = 6" Usage="System.Text.NormalizationForm.FormKD" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.NormalizationForm</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2d8ca-121">Wskazuje, czy ciąg Unicode jest znormalizować przy użyciu rozkładu pełnej zgodności z.</span><span class="sxs-lookup"><span data-stu-id="2d8ca-121">Indicates that a Unicode string is normalized using full compatibility decomposition.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>