<Type Name="EncodingProvider" FullName="System.Text.EncodingProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3dd8164857fc0ee882ea5619b0174b55570de658" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36407727" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncodingProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncodingProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncodingProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncodingProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncodingProvider abstract" />
  <TypeSignature Language="F#" Value="type EncodingProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia klasę podstawową dla dostawcy kodowania, która dostarcza kodowania, które nie są dostępne na konkretnej platformy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostawca kodowania dostarcza kodowania, które nie są dostępne na platformie określonego elementu docelowego.  
  
 .NET Framework na pulpicie systemu Windows obsługuje dużą liczbę znaków kodowania i kodu strony. Na pulpicie systemu Windows można uzyskać pełną listę kodowania dostępnych w programie .NET Framework, wywołując <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> metody. Oprogramowanie .NET core z drugiej strony, domyślnie obsługuje tylko następujące rodzaje kodowania:  
  
-   ASCII (strona kodowa 20127), który jest zwracany przez <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> właściwości.  
  
-   ISO 8859-1 (strona kodowa 28591).  
  
-   UTF-7 (strona kodowa 65000), który jest zwracany przez <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> właściwości.  
  
-   UTF-8 (strona kodowa 65001), który jest zwracany przez <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> właściwości.  
  
-   UTF-16 i UTF-16LE (strona kodowa 1200), który jest zwracany przez <xref:System.Text.Encoding.Unicode%2A> właściwości.  
  
-   UTF-16BE (strona kodowa 1201), który zostanie uruchomiony przez wywołanie metody <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> lub <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> konstruktora z `bigEndian` wartość `true`.  
  
-   UTF-32 i UTF-32LE (strona kodowa 12000), który jest zwracany przez <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> właściwości.  
  
-   UTF-32BE (strona kodowa 12001), który zostanie uruchomiony przez wywołanie metody <xref:System.Text.UTF32Encoding> konstruktora, który ma `bigEndian` parametr i wartość z `true` w wywołaniu metody.  
  
 W programie .NET Framework 4.6 <xref:System.Text.EncodingProvider> jest klasą podstawową, która powoduje, że w przeciwnym razie kodowania dostępne dla programu .NET Framework. Obejmuje to następujące czynności:  
  
1.  Zdefiniuj podklasą <xref:System.Text.EncodingProvider> który zastępuje dwóch abstract <xref:System.Text.EncodingProvider.GetEncoding%2A> przeciążenia, <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> i <xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>. Te przeciążenia zwracać inaczej nieobsługiwane kodowanie przez identyfikator strony kod i nazwę. Należy pamiętać, że można również zwrócić domyślne kodowanie, jeśli <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> metoda jest wywoływana z argumentem 0.  
  
2.  Opcjonalnie można zastąpić wirtualnego <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> i <xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> metody. W większości przypadków nie jest to konieczne, ponieważ klasa podstawowa udostępnia domyślną implementację.  
  
3.  Przekaż <xref:System.Text.EncodingProvider> wystąpienie do <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> metody, aby kodowania dostarczonych przez <xref:System.Text.EncodingProvider> obiektu dostępne środowisko uruchomieniowe języka wspólnego.  
  
4.  Wywołanie <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> przeciążenia pobrać kodowania. <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> Metoda wywoła odpowiadający mu <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> ustalenie, czy go dostarczyć żądany kodowania.  
  
 Biblioteka klas programu .NET Framework zapewnia jedną właściwość statyczna, <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>, która zwraca <xref:System.Text.EncodingProvider> obiekt, który udostępnia pełen zestaw kodowania dostępne na pulpicie Biblioteka klas programu .NET Framework [!INCLUDE[net_core](~/includes/net-core-md.md)] aplikacji. Ponadto może pochodzić od <xref:System.Text.EncodingProvider> klasę, aby udostępnić własny kodowania.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncodingProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncodingProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.EncodingProvider" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca kodowania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : int -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding codepage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codepage">Identyfikator strony kod żądanego kodowania.</param>
        <summary>Zwraca kodowanie skojarzonych z identyfikatorem strony określony kod.</summary>
        <returns>Kodowanie, który jest skojarzony z określona strona kodowa, lub <see langword="null" /> Jeśli <see cref="T:System.Text.EncodingProvider" /> nie może zwracać prawidłowym kodowaniem umożliwiająca <paramref name="codepage" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks

### <a name="notes-to-inheritors"></a>Uwagi dotyczące dziedziczenia

Można zastąpić [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) metodę, aby powrócić do kodowania lub kodowania obsługiwane przez użytkownika <xref:System.Text.EncodingProvider> podklasy. Jeśli kod użytkownika podejmie próbę pobrania, kodowania, wywołując [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) metody, metoda przekazuje `codepage` identyfikator co zarejestrowanego dostawcy kodowania, dopóki jeden zwraca prawidłowym kodowaniem. Jeśli żaden zwraca prawidłowym kodowaniem, [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) metoda próbuje pobrać kodowanie pamięci podręcznej, którego identyfikator strony kodu jest `codepage`. W związku z tym jeśli `codepage` nie jest kod strony identyfikator kodowania obsługujące możesz, metoda powinna zwrócić `null`; go nigdy nie powinien zgłosić wyjątek.
        
Należy pamiętać, że można również zwrócić domyślną stronę kodową, jeśli wartość `codepage` argument ma wartość 0.

## <a name="notes-to-callers"></a>Uwagi dotyczące obiektów wywołujących
        
Ta metoda jest wywoływana przez [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) metody. Powinny nie wywoływać bezpośrednio z kodu użytkownika.

        ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Można zastąpić <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> metodę, aby powrócić do kodowania lub kodowania obsługiwane przez użytkownika <see cref="T:System.Text.EncodingProvider" /> podklasy. Jeśli kod użytkownika podejmie próbę pobrania, kodowania, wywołując <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> metody, metoda przekazuje <paramref name="codepage" /> identyfikator co zarejestrowanego dostawcy kodowania, dopóki jeden zwraca prawidłowym kodowaniem. Jeśli żaden zwraca prawidłowym kodowaniem, <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> metoda próbuje pobrać kodowanie pamięci podręcznej, którego identyfikator strony kodu jest <paramref name="codepage" />. W związku z tym jeśli <paramref name="codepage" /> nie jest kod strony identyfikator kodowania obsługujące możesz, metoda powinna zwrócić <see langword="null" />; go nigdy nie powinien zgłosić wyjątek.</para>
        </block>
        <block subset="none" type="usage">
          <para>Ta metoda jest wywoływana przez <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> metody. Powinny nie wywoływać bezpośrednio z kodu użytkownika.</para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : string -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa żądanego kodowania.</param>
        <summary>Zwraca kodowanie o określonej nazwie.</summary>
        <returns>Kodowanie, który jest skojarzony z określoną nazwą, lub <see langword="null" /> Jeśli <see cref="T:System.Text.EncodingProvider" /> nie może zwracać prawidłowym kodowaniem umożliwiająca <paramref name="name" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 
      
## <a name="notes-to-inheritors"></a>Uwagi dotyczące dziedziczenia 
                  
Można zastąpić [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) metodę, aby powrócić do kodowania lub kodowania obsługiwane przez użytkownika <xref:System.Text.EncodingProvider> podklasy. Jeśli kod użytkownika podejmie próbę pobrania, kodowania, wywołując [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) metody, metoda przekazuje `name` argument co zarejestrowanego dostawcy kodowania, dopóki jeden zwraca prawidłowym kodowaniem. Jeśli żaden zwraca prawidłowym kodowaniem, [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) metoda próbuje pobrać kodowanie pamięci podręcznej, którego nazwa jest `name`. W związku z tym jeśli `name` nie jest nazwą kodowania, które można obsługiwać, metoda powinna zwrócić `null`. Jest tylko wówczas, w którym metody powinien zgłosić wyjątek, jeśli `name` jest `null`.

## <a name="notes-to-callers"></a>Uwagi dotyczące obiektów wywołujących

Ta metoda jest wywoływana przez [Encoding.GetEncoding(String)](<xref:System.Text.Encoding.GetEncoding(System.String)>) metody. Powinny nie wywoływać bezpośrednio z kodu użytkownika.
        ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Można zastąpić <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> metodę, aby powrócić do kodowania lub kodowania obsługiwane przez użytkownika <see cref="T:System.Text.EncodingProvider" /> podklasy. Jeśli kod użytkownika podejmie próbę pobrania, kodowania, wywołując <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> metody, metoda przekazuje <paramref name="name" /> argument co zarejestrowanego dostawcy kodowania, dopóki jeden zwraca prawidłowym kodowaniem. Jeśli żaden zwraca prawidłowym kodowaniem, <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> metoda próbuje pobrać kodowanie pamięci podręcznej, którego nazwa jest <paramref name="name" />. W związku z tym jeśli <paramref name="name" /> nie jest nazwą kodowania, które można obsługiwać, metoda powinna zwrócić <see langword="null" />. Jest tylko wówczas, w którym metody powinien zgłosić wyjątek, jeśli <paramref name="name" /> jest <see langword="null" />.</para>
        </block>
        <block subset="none" type="usage">
          <para>Ta metoda jest wywoływana przez <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> metody. Powinny nie wywoływać bezpośrednio z kodu użytkownika.</para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoding ^ GetEncoding(int codepage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding&#xA;override this.GetEncoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding (codepage, encoderFallback, decoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codepage">Identyfikator strony kod żądanego kodowania.</param>
        <param name="encoderFallback">Obiekt, który udostępnia procedury obsługi błędów, gdy znak nie może być zakodowane za pomocą ten typ kodowania.</param>
        <param name="decoderFallback">Obiekt zawierający procedurę obsługi błędów podczas sekwencji bajtów nie może zostać zdekodowane. Ten typ kodowania.</param>
        <summary>Zwraca kodowanie skojarzonych z identyfikatorem strony określony kod. Parametry określają program obsługi błędów dla znaków, które nie może zostać zakodowany i sekwencji bajtów, które nie mogą zostać zdekodowane.</summary>
        <returns>Kodowanie, który jest skojarzony z określona strona kodowa, lub <see langword="null" /> Jeśli <see cref="T:System.Text.EncodingProvider" /> nie może zwracać prawidłowym kodowaniem umożliwiająca <paramref name="codepage" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `encoderFallback` i `decoderFallback` parametry są obiektami, które określają strategia rezerwowa używane w przypadku gdy koder nie można przekonwertować znak do sekwencji bajtów lub dekoder nie może przekonwertować znak sekwencji bajtów. Platforma .NET Framework zapewnia rezerwowy następujących mechanizmów:  
  
-   Wyjątek rezerwowego. Jeśli `encoderFallback` argument jest wystąpieniem <xref:System.Text.EncoderExceptionFallback>, lub `decoderExceptionFallback` argument jest wystąpieniem <xref:System.Text.DecoderExceptionFallback>, metodę kodowania zgłasza wyjątek, jeśli znaków nie może zostać zakodowany i dekodowania metoda zgłasza wyjątek, jeśli typu byte Nie można dekodować sekwencji.  
  
-   Zastąpienie rezerwowego. Jeśli `encoderFallback` argument jest wystąpieniem <xref:System.Text.EncoderReplacementFallback>, lub `decoderExceptionFallback` argument jest wystąpieniem <xref:System.Text.DecoderReplacementFallback>, kodowania i dekodowania metodach zastępuje zastępujący ciąg znaków, które nie może zostać zakodowany i nie może być sekwencji bajtów odczytany. Jeśli wystąpienia obiektu rezerwowy zastąpienia przez wywołanie konstruktora domyślnego znakiem zastępującym jest "?". Jeśli należy wywołać <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> lub <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> konstruktora, można określić ciąg zastępczy.  
  
-   Rezerwa najlepszego dopasowania. Może pochodzić od <xref:System.Text.EncoderFallback> lub <xref:System.Text.DecoderFallback> klasy do zaimplementowania mechanizm wymiany najlepszego dopasowania.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ponieważ implementacji używać wywołania do tej metody <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> metody, nie trzeba jej zastąpienie. Jeśli kod użytkownika podejmie próbę pobrania, kodowania, wywołując <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> metody, metoda przekazuje <paramref name="codepage" /> identyfikator co zarejestrowanego dostawcy kodowania, dopóki jeden zwraca prawidłowym kodowaniem. Jeśli żaden zwraca prawidłowym kodowaniem, <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> metoda próbuje pobrać kodowanie pamięci podręcznej, którego identyfikator strony kodu jest <paramref name="codepage" />. W związku z tym jeśli chcesz przesłonić <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> metoda, zastąpienia powinna zwrócić <see langword="null" /> Jeśli <paramref name="codepage" /> nie jest identyfikatorem strony kodu kodowania czy obsługiwanych; go nigdy nie powinien zgłosić wyjątek.</para>
        </block>
        <block subset="none" type="usage">
          <para>Ta metoda jest wywoływana przez <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> metody. Powinny nie wywoływać bezpośrednio z kodu użytkownika.</para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoding ^ GetEncoding(System::String ^ name, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : string * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding&#xA;override this.GetEncoding : string * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding (name, encoderFallback, decoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa preferowaną metodę kodowania.</param>
        <param name="encoderFallback">Obiekt, który udostępnia procedury obsługi błędów, gdy znak nie może być zakodowane za pomocą ten typ kodowania.</param>
        <param name="decoderFallback">Obiekt, który udostępnia procedurę obsługi błędów podczas sekwencji bajtów nie może zostać odczytany z bieżącego kodowania.</param>
        <summary>Zwraca kodowanie skojarzone z określoną nazwą. Parametry określają program obsługi błędów dla znaków, które nie może zostać zakodowany i sekwencji bajtów, które nie mogą zostać zdekodowane.</summary>
        <returns>Kodowanie, który jest skojarzony z określoną nazwą, lub <see langword="null" /> Jeśli <see cref="T:System.Text.EncodingProvider" /> nie może zwracać prawidłowym kodowaniem umożliwiająca <paramref name="name" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `encoderFallback` i `decoderFallback` parametry są obiektami, które określają strategia rezerwowa używane w przypadku gdy koder nie można przekonwertować znak do sekwencji bajtów lub dekoder nie może przekonwertować znak sekwencji bajtów. Platforma .NET Framework zapewnia rezerwowy następujących mechanizmów:  
  
-   Wyjątek rezerwowego. Jeśli `encoderFallback` argument jest wystąpieniem <xref:System.Text.EncoderExceptionFallback>, lub `decoderExceptionFallback` argument jest wystąpieniem <xref:System.Text.DecoderExceptionFallback>, metodę kodowania zgłasza wyjątek, jeśli znaków nie może zostać zakodowany i dekodowania metoda zgłasza wyjątek, jeśli typu byte Nie można dekodować sekwencji.  
  
-   Zastąpienie rezerwowego. Jeśli `encoderFallback` argument jest wystąpieniem <xref:System.Text.EncoderReplacementFallback>, lub `decoderExceptionFallback` argument jest wystąpieniem <xref:System.Text.DecoderReplacementFallback>, kodowania i dekodowania metodach zastępuje zastępujący ciąg znaków, które nie może zostać zakodowany i nie może być sekwencji bajtów odczytany. Jeśli wystąpienia obiektu rezerwowy zastąpienia przez wywołanie konstruktora domyślnego znakiem zastępującym jest "?". Jeśli należy wywołać <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> lub <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> konstruktora, można określić ciąg zastępczy.  
  
-   Rezerwa najlepszego dopasowania. Może pochodzić od <xref:System.Text.EncoderFallback> lub <xref:System.Text.DecoderFallback> klasy do zaimplementowania mechanizm wymiany najlepszego dopasowania.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ponieważ implementacji używać wywołania do tej metody <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> metody, nie trzeba jej zastąpienie. Jeśli kod użytkownika podejmie próbę pobrania, kodowania, wywołując <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> metody, metoda przekazuje <paramref name="codepage" /> identyfikator co zarejestrowanego dostawcy kodowania, dopóki jeden zwraca prawidłowym kodowaniem. Jeśli żaden zwraca prawidłowym kodowaniem, <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> metoda próbuje pobrać kodowanie pamięci podręcznej, którego identyfikator strony kodu jest <paramref name="codepage" />. W związku z tym jeśli chcesz przesłonić <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> metoda, zastąpienia powinna zwrócić <see langword="null" /> Jeśli <paramref name="codepage" /> nie jest identyfikatorem strony kodu kodowania czy obsługiwanych; go nigdy nie powinien zgłosić wyjątek.</para>
        </block>
        <block subset="none" type="usage">
          <para>Ta metoda jest wywoływana przez <see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> metody. Powinny nie wywoływać bezpośrednio z kodu użytkownika.</para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
  </Members>
</Type>