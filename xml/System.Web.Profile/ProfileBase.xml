<Type Name="ProfileBase" FullName="System.Web.Profile.ProfileBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22d95658de48ddc5b87e057e44efe4033884a8c3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36598314" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProfileBase : System.Configuration.SettingsBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProfileBase extends System.Configuration.SettingsBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileBase&#xA;Inherits SettingsBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileBase : System::Configuration::SettingsBase" />
  <TypeSignature Language="F#" Value="type ProfileBase = class&#xA;    inherit SettingsBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia nieuwzględniające typów wartości właściwości profilu i informacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program ASP.NET używa <xref:System.Web.Profile.ProfileBase> klasy w celu utworzenia klasy używane w profilu użytkownika. Po uruchomieniu aplikacji, która ma włączone profilu użytkownika ASP.NET tworzy nową klasę typu `ProfileCommon`, który dziedziczy z <xref:System.Web.Profile.ProfileBase> klasy. Silnie typizowane metody dostępu są dodawane do `ProfileCommon` klasy dla każdej właściwości zdefiniowane w sekcji konfiguracji. Silnie typizowane metody dostępu z `ProfileCommon` klasy wywołania <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> i <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> metody <xref:System.Web.Profile.ProfileBase> klasy, aby pobrać i ustawić wartości właściwości profilu odpowiednio podstawowej. Wystąpienie `ProfileCommon` klasy jest ustawiona jako wartość <xref:System.Web.HttpContext.Profile%2A> właściwości dla aplikacji ASP.NET.  
  
 Aby utworzyć wystąpienie profilu użytkownika w aplikacji ASP.NET, zaleca się używanie <xref:System.Web.Profile.ProfileBase.Create%2A> metody.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia plik Web.config, który określa profil użytkownika, który zawiera `ZipCode` właściwości typu `string` i `RecentSearchList` właściwości typu <xref:System.Collections.Specialized.StringCollection>. Wygenerowany <xref:System.Web.HttpContext.Profile%2A> właściwości bieżącego <xref:System.Web.HttpContext> będzie silnie typizowane metody dostępu dla każdej określonej właściwości.  
  
```  
<configuration>  
  <system.web>  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="SqlProvider" >  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="RecentSearchList"  
          type="System.Collections.Specialized.StringCollection"  
          serializeAs="Xml"  
          allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 Poniższy przykład kodu pokazuje strony platformy ASP.NET, który będzie odczytywać i ustawia `ZipCode` właściwość określona dla profilu użytkownika. Przed podjęciem próby wykonania uruchomić ten kod, dostawca domyślną wartość `AspNetSqlProvider` w ustawieniach konfiguracji ASP.NET dla witryny sieci Web.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 Poniższy przykładowy kod definiuje klasę, która dziedziczy po <xref:System.Web.Profile.ProfileBase> klasy w celu utworzenia niestandardowego profilu. Typ niestandardowy profil jest określona w `inherits` atrybut elementu konfiguracji w pliku Web.config aplikacji.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[System.Web.Profile.ProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/CS/employeeprofile.cs#1)]
 [!code-vb[System.Web.Profile.ProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/VB/employeeprofile.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Możesz utworzyć implementacji niestandardowego profilu, która dziedziczy <see cref="T:System.Web.Profile.ProfileBase" /> klasę abstrakcyjną i definiuje właściwości profilu użytkownika, które nie są określone w elemencie konfiguracji. Można określić typ niestandardowy profil użytkownika w pliku Web.config <see langword="inherits" /> atrybut elementu konfiguracji, jak pokazano w poniższym przykładzie. The code for the <c>EmployeeProfile</c> class is included in the Example section of this topic.  ``` &lt;profile inherits="Samples.AspNet.Profile.EmployeeProfile" defaultProvider="SqlProvider"&gt; &lt;providers&gt; &lt;clear /&gt; &lt;add name="SqlProvider" type="System.Web.Profile.SqlProfileProvider" connectionStringName="SqlServices" description="SQL Profile Provider for Sample"/&gt; &lt;add name="EmployeeInfoProvider" type="System.Web.Profile.SqlProfileProvider" connectionStringName="SqlServices" description="SQL Profile Provider for Employee Info"/&gt; &lt;/providers&gt;  &lt;properties&gt; &lt;add name="GarmentSize" /&gt; &lt;/properties&gt; &lt;/profile&gt;  
```</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProfileBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Tworzy wystąpienie <see cref="T:System.Web.Profile.ProfileBase" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program ASP.NET używa <xref:System.Web.Profile.ProfileBase> klasy w celu utworzenia klasy używane w profilu użytkownika. Po uruchomieniu aplikacji, która ma włączone profilu użytkownika ASP.NET tworzy nową klasę typu `ProfileCommon`, który dziedziczy z <xref:System.Web.Profile.ProfileBase> klasy. Silnie typizowane metody dostępu są dodawane do `ProfileCommon` klasy dla każdej właściwości zdefiniowane w sekcji konfiguracji. Silnie typizowane metody dostępu z `ProfileCommon` klasy wywołania <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> i <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> metody <xref:System.Web.Profile.ProfileBase> klasy, aby pobrać i ustawić wartości właściwości profilu odpowiednio podstawowej. Wystąpienie `ProfileCommon` klasy jest ustawiona jako wartość <xref:System.Web.HttpContext.Profile%2A> właściwości dla aplikacji ASP.NET.  
  
> [!NOTE]
>  Klasa podstawowa służący do generowania klasy przechowywane w <xref:System.Web.HttpContext.Profile%2A> właściwość można zastąpić przy użyciu `inherits` atrybut sekcji pliku konfiguracji. W takim przypadku należy określić niestandardowej klasy, która dziedziczy <xref:System.Web.Profile.ProfileBase> klasy podstawowej.  
  
 Ten konstruktor nie jest przeznaczony do użycia w kodzie aplikacji. Aby utworzyć wystąpienie profilu użytkownika, należy użyć <xref:System.Web.Profile.ProfileBase.Create%2A> metody.  
  
   
  
## Examples  
 Następujący plik Web.config określa profil użytkownika, który zawiera `ZipCode` właściwości typu `string` i `RecentSearchList` właściwości typu <xref:System.Collections.Specialized.StringCollection>. Wygenerowany <xref:System.Web.HttpContext.Profile%2A> właściwości bieżącego <xref:System.Web.HttpContext> będzie silnie typizowane metody dostępu dla każdej określonej właściwości.  
  
```  
<configuration>  
   <connectionStrings>  
       <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
   </connectionStrings>  
  
  <system.web>  
   <anonymousIdentification enabled="true" />  
  
   <profile defaultProvider="SqlProvider" >  
     <providers>  
       <add  
         name="SqlProvider"  
         connectionStringName="SqlServices"  
         applicationName="ProfileBaseApplication"  
         type="System.Web.Profile.SqlProfileProvider" />  
     </providers>  
  
     <properties>  
       <add name="ZipCode" allowAnonymous="true" />  
       <add name="RecentSearchList"  
            type="System.Collections.Specialized.StringCollection"  
            serializeAs="Xml"  
            allowAnonymous="true" />  
      </properties>  
    </profile>  
   </system.web>  
</configuration>  
```  
  
 Następująca strona ASP.NET odczytuje i ustawia `ZipCode` właściwość określona dla profilu użytkownika.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see langword="enabled" /> Atrybut sekcji w pliku Web.config jest <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Nie można utworzyć typu właściwości określone w sekcji w pliku Web.config.  - lub - <see langword="allowAnonymous" /> atrybutu dla właściwości w sekcji w pliku Web.config jest ustawiony na <see langword="true" /> i <see langword="enabled" /> ustawiono atrybut elementu <see langword="false" />.  - lub - <see langword="serializeAs" /> atrybutu dla właściwości w sekcji w pliku Web.config jest ustawiony na <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> i <see cref="P:System.Type.IsSerializable" /> właściwości określonego <see langword="type" /> zwraca <see langword="false" />.  - lub - nazwę dostawcy, określić przy użyciu <see langword="provider" /> nie można odnaleźć atrybutu właściwości profilu w <see cref="P:System.Web.Profile.ProfileManager.Providers" /> kolekcji.  - lub - <see langword="type" /> określona dla właściwości profilu nie można znaleźć.  - lub - właściwość profilu została określona o nazwie, który odpowiada nazwie właściwości dla klasy podstawowej, określona w <see langword="inherits" /> atrybut sekcji.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy wystąpienie profilu użytkownika.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileBase Create (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileBase Create(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (username As String) As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileBase ^ Create(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Web.Profile.ProfileBase" Usage="System.Web.Profile.ProfileBase.Create username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika, aby utworzyć profil.</param>
        <summary>Używanych przez platformę ASP.NET, aby utworzyć wystąpienie profil dla określonej nazwy użytkownika.</summary>
        <returns>
          <see cref="T:System.Web.Profile.ProfileBase" /> Reprezentujący profilu dla określonego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileBase.Create%2A> Metoda tworzy i inicjuje nowe wystąpienie profilu i jest przydatne dla aplikacji, które używają profilu niestandardowego obiektu lub Zarządzanie profilami użytkowników w środowisku ASP.NET z systemem innym niż.  
  
 To przeciążenie metody <xref:System.Web.Profile.ProfileBase.Create%2A> metody zakłada, że podana nazwa użytkownika uwierzytelnionego użytkownika.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy wystąpienie obiektu profilu niestandardowego, ustawia właściwość i zapisuje profilu w źródle danych.  
  
 [!code-csharp[System.Web.Profile.ProfileBase.Create#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/CS/profileBaseCreatecs.aspx.cs#1)]
 [!code-vb[System.Web.Profile.ProfileBase.Create#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/VB/profileBaseCreatevb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see langword="enabled" /> Atrybut sekcji w pliku Web.config jest <see langword="false" />.</exception>
        <exception cref="T:System.Web.HttpException">Bieżący poziom uprawnień hostingu jest mniejsza niż <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Nie można utworzyć typu właściwości określone w sekcji w pliku Web.config.  - lub - <see langword="allowAnonymous" /> atrybutu dla właściwości w sekcji w pliku Web.config jest ustawiony na <see langword="true" /> i <see langword="enabled" /> ustawiono atrybut elementu <see langword="false" />.  - lub - <see langword="serializeAs" /> atrybutu dla właściwości w sekcji w pliku Web.config jest ustawiony na <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> i <see cref="P:System.Type.IsSerializable" /> właściwości określonego <see langword="type" /> zwraca <see langword="false" />.  - lub - nazwę dostawcy, określić przy użyciu <see langword="provider" /> nie można odnaleźć atrybutu właściwości profilu w <see cref="P:System.Web.Profile.ProfileManager.Providers" /> kolekcji.  - lub - <see langword="type" /> określona dla właściwości profilu nie można znaleźć.  - lub - właściwość profilu została określona o nazwie, który odpowiada nazwie właściwości dla klasy podstawowej, określona w <see langword="inherits" /> atrybut sekcji.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileBase Create (string username, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileBase Create(string username, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (username As String, isAuthenticated As Boolean) As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileBase ^ Create(System::String ^ username, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="static member Create : string * bool -&gt; System.Web.Profile.ProfileBase" Usage="System.Web.Profile.ProfileBase.Create (username, isAuthenticated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika, aby utworzyć profil.</param>
        <param name="isAuthenticated">
          <see langword="true" /> Wskazuje, że użytkownik jest uwierzytelniony; <see langword="false" /> wskaż, użytkownik jest anonimowy.</param>
        <summary>Używanych przez platformę ASP.NET, aby utworzyć wystąpienie profil dla określonej nazwy użytkownika. Przyjmuje parametr wskazującą, czy użytkownik jest uwierzytelnieni lub anonimowi.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileBase" /> obiekt, który reprezentuje profilu dla określonego użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileBase.Create%2A> Metoda tworzy i inicjuje nowe wystąpienie profilu i jest przydatne dla aplikacji, które używają profilu niestandardowego obiektu lub Zarządzanie profilami użytkowników w środowisku ASP.NET z systemem innym niż.  
  
 To przeciążenie metody <xref:System.Web.Profile.ProfileBase.Create%2A> metody można użyć do tworzenia profilu dla użytkownika uwierzytelnionego lub użytkownik anonimowy.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy wystąpienie obiektu profilu niestandardowego, ustawia właściwość i zapisuje profilu w źródle danych.  
  
 [!code-csharp[System.Web.Profile.ProfileBase.Create#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/CS/profileBaseCreatecs.aspx.cs#2)]
 [!code-vb[System.Web.Profile.ProfileBase.Create#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/VB/profileBaseCreatevb.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see langword="enabled" /> Atrybut sekcji w pliku Web.config jest <see langword="false" />.</exception>
        <exception cref="T:System.Web.HttpException">Bieżący poziom uprawnień hostingu jest mniejsza niż <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Nie można utworzyć typu właściwości określone w sekcji w pliku Web.config.  - lub - <see langword="allowAnonymous" /> atrybutu dla właściwości w sekcji w pliku Web.config jest ustawiony na <see langword="true" /> i <see langword="enabled" /> ustawiono atrybut elementu <see langword="false" />.  - lub - <see langword="serializeAs" /> atrybutu dla właściwości w sekcji w pliku Web.config jest ustawiony na <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> i <see cref="P:System.Type.IsSerializable" /> właściwości określonego <see langword="type" /> zwraca <see langword="false" />.  - lub - nazwę dostawcy, określić przy użyciu <see langword="provider" /> nie można odnaleźć atrybutu właściwości profilu w <see cref="P:System.Web.Profile.ProfileManager.Providers" /> kolekcji.  - lub - <see langword="type" /> określona dla właściwości profilu nie można znaleźć.  - lub - właściwość profilu została określona o nazwie, który odpowiada nazwie właściwości dla klasy podstawowej, określona w <see langword="inherits" /> atrybut sekcji.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProfileGroup">
      <MemberSignature Language="C#" Value="public System.Web.Profile.ProfileGroupBase GetProfileGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Profile.ProfileGroupBase GetProfileGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.GetProfileGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProfileGroup (groupName As String) As ProfileGroupBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Profile::ProfileGroupBase ^ GetProfileGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.GetProfileGroup : string -&gt; System.Web.Profile.ProfileGroupBase" Usage="profileBase.GetProfileGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileGroupBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Nazwa grupy właściwości.</param>
        <summary>Pobiera grupy właściwości identyfikowane przez nazwę grupy.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileGroupBase" /> obiektu grupy właściwości skonfigurowane o nazwie określonej grupy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości profilu można podzielić na grupy dla zapewnienia lepszej organizacji. <xref:System.Web.Profile.ProfileBase.GetProfileGroup%2A> Właściwości można pobrać grupy właściwości nazwę grupy. Można także przejść do właściwości profilu, w grupie, określając nazwę grupy jako członka `Profile` właściwość jest dostępna na każdej stronie. Na przykład `ZipCode` właściwości, które jest członkiem profilu `Address` grupy profilów można uzyskać dostęp za pomocą `Profile.Address.ZipCode`.  
  
   
  
## Examples  
 Następujący plik Web.config określa profil użytkownika, który zawiera grupy właściwości o nazwie grupy `Address`. Właściwości grupowanych wygenerowany dla <xref:System.Web.HttpContext.Profile%2A> właściwości bieżącego <xref:System.Web.HttpContext> poprzedzona nazwą grupy. Na przykład `Profile.Address.Street`.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <authorization>  
      <deny users="?" />  
    </authorization>  
  
    <membership defaultProvider="SqlProvider"   
      userIsOnlineTimeWindow="15">  
      <providers>  
        <clear />  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"   
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          applicationName="MyApplication" />  
      </providers>  
    </membership>  
  
    <profile defaultProvider="SqlProvider">  
      <providers>  
        <add  
          name="SqlProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          type="System.Web.Profile.SqlProfileProvider" />  
  
      </providers>  
  
      <properties>  
        <add name="ZipCode" />  
        <group name="Address">  
          <add name="Street" />  
          <add name="City" />  
          <add name="State" />  
          <add name="CountryOrRegion" />  
        </group>  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 Następująca strona ASP.NET odczytuje i ustawia właściwości grupowanych określony dla profilu użytkownika.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileGroupBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileGroupBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileGroupBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileGroupBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">W sekcji konfiguracji nie znaleziono nazwy grupy właściwości określonego profilu.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public object GetPropertyValue (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyValue(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyValue(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; obj" Usage="profileBase.GetPropertyValue propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nazwa właściwości profilu.</param>
        <summary>Pobiera wartość właściwości profilu.</summary>
        <returns>Wartości właściwości określonego profilu typu <see langword="object" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program ASP.NET używa <xref:System.Web.Profile.ProfileBase> klasy w celu utworzenia klasy używane w profilu użytkownika. Po uruchomieniu aplikacji, która ma włączone profilu użytkownika ASP.NET tworzy nową klasę typu `ProfileCommon`, który dziedziczy z <xref:System.Web.Profile.ProfileBase> klasy. Silnie typizowane metody dostępu są dodawane do `ProfileCommon` klasy dla każdej właściwości zdefiniowane w sekcji konfiguracji. Silnie typizowane metody dostępu z `ProfileCommon` klasy wywołania <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> metoda pobierania nieuwzględniające typów wartości z <xref:System.Web.Profile.ProfileProvider> wygenerowane metody dostępu, a następnie rzutuje jako określony typ i zwraca jako wartość właściwości.  
  
 Można użyć <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> metoda pobierania wartości właściwości profilu użytkownika dla aplikacji według nazwy. Wartości zwracane są wyrażeniami bez typu, a musi być rzutowane jako typ określonego obiektu po pobraniu. Jednoznacznie dostępu do wartości właściwości profilu, są dostępne właściwości według nazwy jako element członkowski właściwości profilu dostępny na każdej stronie, na przykład `Profile.CustomerAddress`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje strony platformy ASP.NET, który będzie odczytywać i ustawia `ZipCode` właściwość określona dla profilu użytkownika. Na przykład plik Web.config, który określa właściwości profilu użytkownika, zobacz przykład przewidzianych <xref:System.Web.Profile.ProfileBase> klasy.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Próbowano ustawić wartości właściwości dla anonimowego profilu gdzie właściwości <see langword="allowAnonymous" /> atrybutu <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Nie ma żadnych właściwości zdefiniowane dla bieżącego profilu.  - lub - nazwa właściwości określonego profilu nie istnieje w bieżącym profilu.  - lub - dostawcy dla właściwości określonego profilu nie rozpoznał określonej właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (string username, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize(string username, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (username As String, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::String ^ username, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="member this.Initialize : string * bool -&gt; unit" Usage="profileBase.Initialize (username, isAuthenticated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika w profilu inicjowania.</param>
        <param name="isAuthenticated">
          <see langword="true" /> Wskazuje, że użytkownik jest uwierzytelniony; <see langword="false" /> wskaż, użytkownik jest anonimowy.</param>
        <summary>Inicjuje wartości właściwości profilu i informacje o bieżącym użytkowniku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie jest przeznaczona do użycia w kodzie. Użyj jednej z <xref:System.Web.Profile.ProfileBase.Create%2A> przeciążenia do utworzenia wystąpienia profilu użytkownika.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnonymous { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAnonymous : bool" Usage="System.Web.Profile.ProfileBase.IsAnonymous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy profil użytkownika jest przeznaczony dla użytkownika anonimowego.</summary>
        <value>
          <see langword="true" /> Jeśli profil użytkownika jest przeznaczony dla użytkownika anonimowego; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostęp anonimowy do profilu użytkownika jest włączona, użycie sekcji konfiguracji i `allowAnonymous` atrybut elementu konfiguracji, służy do określania właściwości profilu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Web.Profile.ProfileBase.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dowolne z właściwości profilu zostały zmodyfikowane.</summary>
        <value>
          <see langword="true" /> Jeśli zostały zmodyfikowane właściwości profilu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileBase.IsDirty%2A> Właściwość może być używana przez dostawcę profilu podczas <xref:System.Configuration.SettingsBase.Save%2A> metodę, aby ustalić, czy właściwości składają się z typy pierwotne, ciągi, lub <xref:System.DateTime> obiekty zostały zmienione. Zmiany właściwości następnie są aktualizowane przez dostawcę profilu w <xref:System.Configuration.SettingsBase.Save%2A> metody. <xref:System.Configuration.SettingsBase.Save%2A> Metoda jest wywoływana automatycznie po zakończeniu wykonywania strony, jeśli <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> jest właściwość `true`  
  
 Dostawca profilu, w <xref:System.Configuration.SettingsBase.Save%2A> — metoda nie może jawnie określić, czy właściwość profilu z typem niestandardowej klasy lub typu złożonego, na przykład przy użyciu kolekcji został zmieniony. Można użyć <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> zdarzenia do określenia, czy niestandardowego obiektu został zmieniony i kontynuować automatyczne zapisywanie zmodyfikowanych obiektów lub Anuluj automatycznego zapisywania, jeśli żadne obiekty nie zostały zmodyfikowane. Domyślne zachowanie <xref:System.Web.Profile.ProfileBase> klasy jest skonfigurowanie <xref:System.Web.Profile.ProfileBase.IsDirty%2A> właściwości `true` właściwości, które są typu niestandardowych lub złożonych pierwszy raz właściwość jest dostępna.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.Profile.ProfileBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nazwa właściwości profilu.</param>
        <summary>Pobiera lub ustawia wartość właściwości profilu indeksowane według nazwy właściwości.</summary>
        <value>Wartości właściwości określonego profilu typu <see langword="object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do pobierania lub ustawiania wartości właściwości profilu użytkownika dla aplikacji według nazwy. Wartości zwracane są wpisywane jako `object` i musi być rzutowane jako typ określonego obiektu po pobraniu. Jednoznacznie dostępu do wartości właściwości profilu, są dostępne właściwości według nazwy jako element członkowski `Profile` właściwość jest dostępna na każdej stronie, na przykład `Profile.CustomerAddress`.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla listę nazw właściwości w profilu użytkownika przez powiązanie <xref:System.Configuration.SettingsProperty.Name%2A> właściwość z statycznych <xref:System.Web.Profile.ProfileBase.Properties%2A> Kolekcja <xref:System.Configuration.SettingsProperty> obiekty do <xref:System.Web.UI.WebControls.GridView> formantu. Wartość wybranej właściwości jest pobierana za pomocą nazwy <xref:System.Web.Profile.ProfileBase.Item%2A> kolekcji. Na przykład plik Web.config, który określa właściwości profilu użytkownika, zobacz przykład przewidzianych <xref:System.Web.Profile.ProfileBase> klasy.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/ViewProfilecs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/ViewProfilevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Próbowano ustawić wartości właściwości dla anonimowego profilu gdzie właściwości <see langword="allowAnonymous" /> atrybutu <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Nie ma żadnych właściwości zdefiniowane dla bieżącego profilu.  - lub - nazwa właściwości określonego profilu nie istnieje w bieżącym profilu.  - lub - dostawcy dla właściwości określonego profilu nie rozpoznał określonej właściwości.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">Próbowano ustawić wartość właściwości, która została oznaczona jako tylko do odczytu.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">Nastąpiła próba można przypisać wartości do właściwości przy użyciu niezgodny typ.</exception>
      </Docs>
    </Member>
    <Member MemberName="LastActivityDate">
      <MemberSignature Language="C#" Value="public DateTime LastActivityDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastActivityDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.LastActivityDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastActivityDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastActivityDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.LastActivityDate : DateTime" Usage="System.Web.Profile.ProfileBase.LastActivityDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera najbardziej aktualną datę i godzinę odczytywać lub modyfikować profil.</summary>
        <value>Najnowsze Data i godzina, odczytać lub modyfikowany przez domyślnego dostawcy profilu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość tej właściwości jest zmodyfikowany tylko przez domyślnego dostawcy profilu. Zmiany właściwości profilu przez dostawcę innego niż domyślny dostawca profilu nie wpływają na wartość <xref:System.Web.Profile.ProfileBase.LastActivityDate%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastUpdatedDate">
      <MemberSignature Language="C#" Value="public DateTime LastUpdatedDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastUpdatedDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.LastUpdatedDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastUpdatedDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastUpdatedDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.LastUpdatedDate : DateTime" Usage="System.Web.Profile.ProfileBase.LastUpdatedDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera najbardziej aktualną datę i godzinę profil został zmodyfikowany.</summary>
        <value>Najnowsze Data i godzina profil został zmodyfikowany przez domyślny dostawca.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość tej właściwości jest zmodyfikowany tylko przez domyślnego dostawcy profilu. Zmiany właściwości profilu przez dostawcę innego niż domyślny dostawca profilu nie wpływają na wartość <xref:System.Web.Profile.ProfileBase.LastUpdatedDate%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public static System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.SettingsPropertyCollection" Usage="System.Web.Profile.ProfileBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Configuration.SettingsProperty" /> obiektów dla każdej właściwości w profilu.</summary>
        <value>A <see cref="T:System.Configuration.SettingsPropertyCollection" /> z <see cref="T:System.Configuration.SettingsProperty" /> obiektów dla każdej właściwości w profilu aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do uzyskania informacji na temat skonfigurowane dla aplikacji, w tym nazw właściwości i typów właściwości profilu. Można także odwoływać <xref:System.Web.Profile.ProfileProvider> każdej właściwości. A <xref:System.Web.Profile.ProfileProvider> zarządza przechowywanie i pobieranie wartości właściwości do i z źródła danych.  
  
   
  
## Examples  
 Poniższy przykład kodu wyświetla listę nazw właściwości w profilu użytkownika przez powiązanie <xref:System.Configuration.SettingsProperty.Name%2A> właściwość z statycznych <xref:System.Web.Profile.ProfileBase.Properties%2A> Kolekcja <xref:System.Configuration.SettingsProperty> obiekty do <xref:System.Web.UI.WebControls.GridView> formantu. Wartość wybranej właściwości jest pobierana za pomocą nazwy <xref:System.Web.Profile.ProfileBase.Item%2A> kolekcji. Na przykład plik Web.config, który określa właściwości profilu użytkownika, zobacz przykład przewidzianych <xref:System.Web.Profile.ProfileBase> klasy.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/ViewProfilecs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/ViewProfilevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Nie można utworzyć typu właściwości określone w sekcji w pliku Web.config.  - lub - <see langword="allowAnonymous" /> atrybutu dla właściwości w sekcji w pliku Web.config jest ustawiony na <see langword="true" /> i <see langword="enabled" /> ustawiono atrybut elementu <see langword="false" />.  - lub - <see langword="serializeAs" /> atrybutu dla właściwości w sekcji w pliku Web.config jest ustawiony na <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> i <see cref="P:System.Type.IsSerializable" /> właściwości określonego <see langword="type" /> zwraca <see langword="false" />.  - lub - nazwę dostawcy, określić przy użyciu <see langword="provider" /> nie można odnaleźć atrybutu właściwości profilu w <see cref="P:System.Web.Profile.ProfileManager.Providers" /> kolekcji.  - lub - <see langword="type" /> określona dla właściwości profilu nie można znaleźć.  - lub - właściwość profilu została określona o nazwie, który odpowiada nazwie właściwości dla klasy podstawowej, określona w <see langword="inherits" /> atrybut sekcji.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberSignature Language="F#" Value="abstract member Save : unit -&gt; unit&#xA;override this.Save : unit -&gt; unit" Usage="profileBase.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualizacje źródła danych profilu z wartościami właściwości profilu zmienione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileBase.Save%2A> — Metoda zapisuje profil modyfikacji wartości właściwości ze źródłem danych. Dostawcy profilu można zmniejszyć liczbę aktywności w źródle danych, wykonując aktualizacje tylko wtedy, gdy <xref:System.Web.Profile.ProfileBase.IsDirty%2A> właściwość jest ustawiona na `true`. Jest to wartość domyślna w przypadku <xref:System.Web.Profile.SqlProfileProvider>. Po <xref:System.Web.Profile.ProfileBase.Save%2A> metody zapisał wartości właściwości w źródle danych <xref:System.Web.Profile.ProfileBase.IsDirty%2A> ma ustawioną wartość `false`.  
  
 Można użyć <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> zdarzenie, aby zaimplementować logiki niestandardowej, która określa, czy właściwość profilu niestandardowego typu lub typu złożonego został zmieniony i kontynuować automatyczne zapisywanie zmodyfikowanych obiektów lub anulować automatyczne zapisywanie, jeśli żadne obiekty nie mają został zmodyfikowany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="public void SetPropertyValue (string propertyName, object propertyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPropertyValue(string propertyName, object propertyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPropertyValue (propertyName As String, propertyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPropertyValue(System::String ^ propertyName, System::Object ^ propertyValue);" />
      <MemberSignature Language="F#" Value="member this.SetPropertyValue : string * obj -&gt; unit" Usage="profileBase.SetPropertyValue (propertyName, propertyValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nazwa właściwości do ustawienia.</param>
        <param name="propertyValue">Wartość do przypisania do właściwości.</param>
        <summary>Ustawia wartości właściwości profilu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program ASP.NET używa <xref:System.Web.Profile.ProfileBase> klasy w celu utworzenia klasy używane w profilu użytkownika. Po uruchomieniu aplikacji, która ma włączone profilu użytkownika ASP.NET tworzy nową klasę typu `ProfileCommon`, który dziedziczy z <xref:System.Web.Profile.ProfileBase> klasy. Silnie typizowane metody dostępu są dodawane do `ProfileCommon` klasy dla każdej właściwości zdefiniowane w sekcji konfiguracji. Silnie typizowane metody dostępu z `ProfileCommon` klasy wywołania <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> można przekazać właściwości wartości do <xref:System.Web.Profile.ProfileProvider> mają być przechowywane w źródle danych.  
  
 Można użyć <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> metodę przypisania wartości właściwości w profilu użytkownika dla aplikacji według nazwy. Wartości są wyrażeniami bez typu, i sprawdzanie typu będzie odbywać się w czasie wykonywania, a nie w czasie kompilacji. Jednoznacznie dostępu do wartości właściwości profilu, są dostępne właściwości według nazwy jako element członkowski `Profile` właściwość, która jest dostępna na każdej stronie, na przykład `Profile.CustomerAddress`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje strony platformy ASP.NET, który będzie odczytywać i ustawia `ZipCode` właściwość określona dla profilu użytkownika. Na przykład plik Web.config, który określa właściwości profilu użytkownika, zobacz przykład przewidzianych <xref:System.Web.Profile.ProfileBase> klasy.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Próbowano ustawić wartości właściwości dla anonimowego profilu gdzie właściwości <see langword="allowAnonymous" /> atrybutu <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Nie ma żadnych właściwości zdefiniowane dla bieżącego profilu.  - lub - nazwa właściwości określonego profilu nie istnieje w bieżącym profilu.  - lub - dostawcy dla właściwości określonego profilu nie rozpoznał określonej właściwości.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">Próbowano ustawić wartość wartości dla właściwości, która została oznaczona jako tylko do odczytu.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">Nastąpiła próba można przypisać wartości do właściwości przy użyciu niezgodny typ.</exception>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.UserName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string" Usage="System.Web.Profile.ProfileBase.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę użytkownika dla profilu.</summary>
        <value>Nazwa użytkownika dla profilu lub identyfikator użytkownika anonimowego przypisane do tego profilu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Profile.ProfileBase.UserName%2A> Właściwość zwraca nazwę uwierzytelnionego użytkownika, który profil jest skojarzony z lub przypisane do tego profilu, jeśli identyfikator użytkownika anonimowego <xref:System.Web.Profile.ProfileBase.IsAnonymous%2A> jest właściwość `true`.  
  
 Dostęp anonimowy do profilu użytkownika jest włączona, użycie sekcji konfiguracji i `allowAnonymous` atrybut elementu konfiguracji, służy do określania właściwości profilu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>