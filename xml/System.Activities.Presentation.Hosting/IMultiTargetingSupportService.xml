<Type Name="IMultiTargetingSupportService" FullName="System.Activities.Presentation.Hosting.IMultiTargetingSupportService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="45152876284512f879336a32d2b5999b56f370d1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69324396" /></Metadata><TypeSignature Language="C#" Value="public interface IMultiTargetingSupportService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMultiTargetingSupportService" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Hosting.IMultiTargetingSupportService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMultiTargetingSupportService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMultiTargetingSupportService" />
  <TypeSignature Language="F#" Value="type IMultiTargetingSupportService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Zapewnia wiele elementów docelowych dla hostów z systemem Windows Projektant przepływu pracy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 *Wiele elementów docelowych* to możliwość znalezienia właściwej wersji załadowanego zestawu odpowiadającego wersji docelowej [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] bieżącego projektu przepływu pracy w programie. [!INCLUDE[vs2010](~/includes/vs2010-md.md)]  
  
 Ten interfejs jest implementowany i używany wewnętrznie [!INCLUDE[wf1](~/includes/wf1-md.md)] przez składniki projektanta do [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] rozpoznawania zestawów w sposób [!INCLUDE[vs2010](~/includes/vs2010-md.md)] nieświadomy w aplikacji hostingowej. Składniki projektanta używają implementacji tego interfejsu tylko wtedy, gdy dodatkowe zestawy muszą być ładowane dynamicznie do edycji `AppDomain`. [!INCLUDE[wf1](~/includes/wf1-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetReflectionAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetReflectionAssembly (System.Reflection.AssemblyName targetAssemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetReflectionAssembly(class System.Reflection.AssemblyName targetAssemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionAssembly (targetAssemblyName As AssemblyName) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetReflectionAssembly(System::Reflection::AssemblyName ^ targetAssemblyName);" />
      <MemberSignature Language="F#" Value="abstract member GetReflectionAssembly : System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="iMultiTargetingSupportService.GetReflectionAssembly targetAssemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetAssemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="targetAssemblyName">Nazwa zestawu.</param>
        <summary>Zwraca załadowany zestaw z nazwą zestawu.</summary>
        <returns>Aktualnie załadowany zestaw podaną nazwą zestawu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public Type GetRuntimeType (Type reflectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetRuntimeType(class System.Type reflectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeType (reflectionType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetRuntimeType(Type ^ reflectionType);" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeType : Type -&gt; Type" Usage="iMultiTargetingSupportService.GetRuntimeType reflectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reflectionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="reflectionType">Typ, dla którego ma zostać pobrany typ środowiska uruchomieniowego.</param>
        <summary>Pobiera typ środowiska uruchomieniowego, który odpowiada określonemu typowi.</summary>
        <returns>Typ środowiska uruchomieniowego, który odpowiada określonemu typowi.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedType">
      <MemberSignature Language="C#" Value="public bool IsSupportedType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupportedType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSupportedType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsSupportedType : Type -&gt; bool" Usage="iMultiTargetingSupportService.IsSupportedType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Typ do sprawdzenia.</param>
        <summary>Zwraca wartość wskazującą, czy określony typ jest obsługiwany.</summary>
        <returns><see langword="true" />Jeśli określony typ jest obsługiwany; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
