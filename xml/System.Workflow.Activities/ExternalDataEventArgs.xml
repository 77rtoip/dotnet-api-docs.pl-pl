<Type Name="ExternalDataEventArgs" FullName="System.Workflow.Activities.ExternalDataEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5d4ddc0748ef3b182e7d12175b07e6198579009f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36453806" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExternalDataEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ExternalDataEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.ExternalDataEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ExternalDataEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExternalDataEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ExternalDataEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje dane wysyłany, gdy zdarzenie jest wywoływane przy użyciu <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> działania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Interfejs lokalnej komunikacji z oznaczeniem <xref:System.Workflow.Activities.ExternalDataExchangeAttribute> musi zadeklarować typu pochodzącego od <xref:System.Workflow.Activities.ExternalDataEventArgs> w definicji interfejsu dla odpowiednie zdarzenie, które mają być obsługiwane w przepływie pracy z <xref:System.Workflow.Activities.HandleExternalEventActivity> działania.  
  
   
  
## Examples  
 Klasa zdarzenia, która dziedziczy <xref:System.Workflow.Activities.ExternalDataEventArgs> musi implementować konstruktora, który używa `:base(instanceId)` konstruktora. Ponadto nowa klasa zdarzeń muszą być oznaczone jako `Serializable` jak pokazano w poniższym kodzie.  
  
```csharp  
[Serializable]  
public class TaskEventArgs : ExternalDataEventArgs  
{  
    private string orderName;  
  
    public TaskEventArgs(Guid instanceId, string id)  
        :base(instanceId)  
    {  
        orderName = id;  
    }  
  
    public string Id  
    {  
        get { return orderName; }  
        set { orderName = value; }  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób wywołania bazie <xref:System.Workflow.Activities.ExternalDataEventArgs> konstruktora z konstruktora klasy pochodnej. W tym przykładzie pochodzi z porządkowanie stanu maszyna przykład zestawu SDK. Aby uzyskać więcej informacji, zobacz [porządkowanie próbki maszyny stanu](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).  
  
 [!code-csharp[wf_samples#121](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#121)]
 [!code-vb[wf_samples#121](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#121)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExternalDataEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExternalDataEventArgs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExternalDataEventArgs (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExternalDataEventArgs(Guid instanceId);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.ExternalDataEventArgs : Guid -&gt; System.Workflow.Activities.ExternalDataEventArgs" Usage="new System.Workflow.Activities.ExternalDataEventArgs instanceId" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identyfikator wystąpienia przepływu pracy dla wystąpienia przepływu pracy, który zawiera <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> z oczekiwaniami, obsłuż zdarzenie.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" /> przy użyciu identyfikatora wystąpienia przepływu pracy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExternalDataEventArgs (Guid instanceId, System.Workflow.Runtime.IPendingWork workHandler, object workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid instanceId, class System.Workflow.Runtime.IPendingWork workHandler, object workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Guid, workHandler As IPendingWork, workItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExternalDataEventArgs(Guid instanceId, System::Workflow::Runtime::IPendingWork ^ workHandler, System::Object ^ workItem);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.ExternalDataEventArgs : Guid * System.Workflow.Runtime.IPendingWork * obj -&gt; System.Workflow.Activities.ExternalDataEventArgs" Usage="new System.Workflow.Activities.ExternalDataEventArgs (instanceId, workHandler, workItem)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="workHandler" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identyfikator wystąpienia przepływu pracy dla wystąpienia przepływu pracy, który zawiera <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> z oczekiwaniami, obsłuż zdarzenie.</param>
        <param name="workHandler">
          <see cref="T:System.Workflow.Runtime.IPendingWork" /> Do zewnętrznego kodu, wywołująca zdarzenie, aby uczestniczyć w partii.</param>
        <param name="workItem">Obiekt, który zawiera kod zewnętrzny, który wywołuje zdarzenie.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExternalDataEventArgs (Guid instanceId, System.Workflow.Runtime.IPendingWork workHandler, object workItem, bool waitForIdle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid instanceId, class System.Workflow.Runtime.IPendingWork workHandler, object workItem, bool waitForIdle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Guid, workHandler As IPendingWork, workItem As Object, waitForIdle As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExternalDataEventArgs(Guid instanceId, System::Workflow::Runtime::IPendingWork ^ workHandler, System::Object ^ workItem, bool waitForIdle);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.ExternalDataEventArgs : Guid * System.Workflow.Runtime.IPendingWork * obj * bool -&gt; System.Workflow.Activities.ExternalDataEventArgs" Usage="new System.Workflow.Activities.ExternalDataEventArgs (instanceId, workHandler, workItem, waitForIdle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="workHandler" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
        <Parameter Name="waitForIdle" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identyfikator wystąpienia przepływu pracy dla wystąpienia przepływu pracy, który zawiera <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> z oczekiwaniami, obsłuż zdarzenie.</param>
        <param name="workHandler">
          <see cref="T:System.Workflow.Runtime.IPendingWork" /> Do zewnętrznego kodu, który wywołuje zdarzenie brać udziału w partii.</param>
        <param name="workItem">Obiekt, który zawiera kod zewnętrzny, który wywołuje zdarzenie.</param>
        <param name="waitForIdle">Wartość, która wskazuje, czy przepływ pracy powinien przejść bezczynności przed wywołaniem zdarzenia; w przeciwnym razie <see langword="false" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public string Identity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Identity" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ExternalDataEventArgs.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Property Identity As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Identity { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Identity : string with get, set" Usage="System.Workflow.Activities.ExternalDataEventArgs.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tożsamość użytkownika, który wywołał zdarzenie.</summary>
        <value>Tożsamość użytkownika, który wywołuje zdarzenie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest oceniana przez <xref:System.Workflow.Activities.HandleExternalEventActivity> działania. Jeśli wartość jest ustawiana w <xref:System.Workflow.Activities.HandleExternalEventActivity.Roles%2A> właściwości tego działania nie pasuje do żadnej z ról skojarzone z tożsamością użytkownika, nie można wykonać działania.  
  
 Jednostka, która wywołuje zdarzenie może być osoby lub komputera.  
  
 Tożsamość jest używany przez funkcji ról, aby zapewnić, że ta tożsamość jest zezwolenie na przesyłanie danych do tego przepływu pracy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public Guid InstanceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid InstanceId { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceId : Guid with get, set" Usage="System.Workflow.Activities.ExternalDataEventArgs.InstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator wystąpienia przepływu pracy dla wystąpienia przepływu pracy, który zawiera <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> z oczekiwaniami, obsłuż zdarzenie.</summary>
        <value>Identyfikator wystąpienia przepływu pracy dla wystąpienia przepływu pracy, który zawiera <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> z oczekiwaniami, obsłuż zdarzenie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest wymagana.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForIdle">
      <MemberSignature Language="C#" Value="public bool WaitForIdle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WaitForIdle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ExternalDataEventArgs.WaitForIdle" />
      <MemberSignature Language="VB.NET" Value="Public Property WaitForIdle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WaitForIdle { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WaitForIdle : bool with get, set" Usage="System.Workflow.Activities.ExternalDataEventArgs.WaitForIdle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy zdarzenie zostanie zgłoszony natychmiast lub jeśli przepływ pracy powinien przejść bezczynności przed wywołaniem zdarzenia.</summary>
        <value>
          <see langword="true" /> Jeśli przepływ pracy powinien znajdować się w stanie bezczynności przed wywołaniem zdarzenia; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna to `false`.  
  
 Wartość `true` wskazuje, że dane zostało przesłane do przepływu pracy przy użyciu <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A>. Wartość `false` wskazuje, że dane zostało przesłane do przepływu pracy przy użyciu <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkHandler">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.IPendingWork WorkHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.IPendingWork WorkHandler" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ExternalDataEventArgs.WorkHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkHandler As IPendingWork" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Runtime::IPendingWork ^ WorkHandler { System::Workflow::Runtime::IPendingWork ^ get(); void set(System::Workflow::Runtime::IPendingWork ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WorkHandler : System.Workflow.Runtime.IPendingWork with get, set" Usage="System.Workflow.Activities.ExternalDataEventArgs.WorkHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.IPendingWork</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Workflow.Runtime.IPendingWork" /> do zewnętrznego kodu, wywołująca zdarzenie, aby uczestniczyć w partii.</summary>
        <value>
          <see cref="T:System.Workflow.Runtime.IPendingWork" /> Do zewnętrznego kodu, wywołująca zdarzenie, aby uczestniczyć w partii.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Workflow.Runtime.IPendingWork" />
      </Docs>
    </Member>
    <Member MemberName="WorkItem">
      <MemberSignature Language="C#" Value="public object WorkItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WorkItem" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ExternalDataEventArgs.WorkItem" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WorkItem { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WorkItem : obj with get, set" Usage="System.Workflow.Activities.ExternalDataEventArgs.WorkItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który zawiera kod zewnętrzny, który wywołuje zdarzenie.</summary>
        <value>Obiekt, który zawiera kod zewnętrzny, który wywołuje zdarzenie.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Workflow.Runtime.IPendingWork" />
      </Docs>
    </Member>
  </Members>
</Type>