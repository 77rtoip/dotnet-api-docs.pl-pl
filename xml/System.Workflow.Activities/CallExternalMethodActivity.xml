<Type Name="CallExternalMethodActivity" FullName="System.Workflow.Activities.CallExternalMethodActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="abc4e7d4a257da4713c36a098123ae1b2df6597d" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51895512" /></Metadata><TypeSignature Language="C#" Value="public class CallExternalMethodActivity : System.Workflow.ComponentModel.Activity, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallExternalMethodActivity extends System.Workflow.ComponentModel.Activity implements class System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.CallExternalMethodActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class CallExternalMethodActivity&#xA;Inherits Activity&#xA;Implements IDynamicPropertyTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallExternalMethodActivity : System::Workflow::ComponentModel::Activity, System::Workflow::ComponentModel::IDynamicPropertyTypeProvider" />
  <TypeSignature Language="F#" Value="type CallExternalMethodActivity = class&#xA;    inherit Activity&#xA;    interface IDynamicPropertyTypeProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IDynamicPropertyTypeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("MethodInvoking")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.CallExternalMethodActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.CallExternalMethodActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="790b7-101">Definiuje działanie komunikacji przepływu pracy, które służy do wywoływania metody lokalnej usługi.</span><span class="sxs-lookup"><span data-stu-id="790b7-101">Defines a workflow communication activity that is used to call a method on a local service.</span></span> <span data-ttu-id="790b7-102">To działanie służy do przesyłania danych z przepływu pracy do hosta przy użyciu lokalnej usługi.</span><span class="sxs-lookup"><span data-stu-id="790b7-102">This activity is used to send data from the workflow to the host through the local service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="790b7-103">Usługa lokalna jest klasa, która implementuje interfejs Usługa lokalna (interfejs, który jest oznaczony przy użyciu <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) i jest dodawany do <xref:System.Workflow.Activities.ExternalDataExchangeService>.</span><span class="sxs-lookup"><span data-stu-id="790b7-103">A local service is a class that implements a local service interface (an interface that is marked with <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) and is added to the <xref:System.Workflow.Activities.ExternalDataExchangeService>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="790b7-104">Wszystkie parametry metody są klonowane, gdy wywoływana jest metoda zewnętrznych.</span><span class="sxs-lookup"><span data-stu-id="790b7-104">When the external method is called all parameters of the method are cloned.</span></span> <span data-ttu-id="790b7-105">Jeśli typy parametrów wdrożenia <xref:System.ICloneable> `Clone` metoda jest wywoływana lub są one serializacji i deserializacji za pomocą <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span><span class="sxs-lookup"><span data-stu-id="790b7-105">If the parameter types implement <xref:System.ICloneable> the `Clone` method is called or they are serialized and deserialized with a <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="790b7-106">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Workflow.Activities.CallExternalMethodActivity> w niestandardowe działanie, aby wywołać metody zewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="790b7-106">The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity> in a custom activity to call an external method.</span></span> <span data-ttu-id="790b7-107">Ten przykład kodu jest częścią przykładowe nasłuchiwania zestawu SDK z pliku PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="790b7-107">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="790b7-108">Aby uzyskać więcej informacji, zobacz [nasłuchiwania przykładowe](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="790b7-108">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#213](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#213)]
 [!code-vb[wf_samples#213](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#213)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="790b7-109">Przy użyciu działania CallExternalMethod</span><span class="sxs-lookup"><span data-stu-id="790b7-109">Using the CallExternalMethod Activity</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="790b7-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="790b7-110">Initializes a new instance of the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="790b7-111">Poniższy przykład pokazuje, jak utworzyć wystąpienie `CallExternalMethodActivity` klasy.</span><span class="sxs-lookup"><span data-stu-id="790b7-111">The following example shows how to create an instance of the `CallExternalMethodActivity` class.</span></span>  <span data-ttu-id="790b7-112">W tym przykładzie pochodzi z przykładu PersistenceHost zestawu SDK z pliku DocumentApprovalWorkflow.designer.cs.</span><span class="sxs-lookup"><span data-stu-id="790b7-112">This example is from the PersistenceHost SDK sample, from the DocumentApprovalWorkflow.designer.cs file.</span></span> <span data-ttu-id="790b7-113">Aby uzyskać więcej informacji, zobacz [przykład hosta trwałości](https://msdn.microsoft.com/library/8ba72a8f-eb95-410f-bb00-180f3c35f251).</span><span class="sxs-lookup"><span data-stu-id="790b7-113">For more information, see [Persistence Host Sample](https://msdn.microsoft.com/library/8ba72a8f-eb95-410f-bb00-180f3c35f251).</span></span>  
  
 [!code-csharp[wf_samples#278](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#278)]
 [!code-vb[wf_samples#278](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#278)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="790b7-114">Przy użyciu działania CallExternalMethod</span><span class="sxs-lookup"><span data-stu-id="790b7-114">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallExternalMethodActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallExternalMethodActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="790b7-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="790b7-115">Initializes a new instance of the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="790b7-116">W poniższym przykładzie kodu pokazano jak zainicjować nowe wystąpienie klasy <xref:System.Workflow.Activities.CallExternalMethodActivity>.</span><span class="sxs-lookup"><span data-stu-id="790b7-116">The following code example shows how initialize a new instance of the <xref:System.Workflow.Activities.CallExternalMethodActivity>.</span></span> <span data-ttu-id="790b7-117">Kod również inicjuje nowe wystąpienia <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.EventDrivenActivity>, <xref:System.Workflow.Activities.HandleExternalEventActivity>, <xref:System.Workflow.Activities.DelayActivity> i <xref:System.Workflow.Activities.CodeActivity> klasy.</span><span class="sxs-lookup"><span data-stu-id="790b7-117">The code also initializes new instances of the <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.EventDrivenActivity>, <xref:System.Workflow.Activities.HandleExternalEventActivity>, <xref:System.Workflow.Activities.DelayActivity> and <xref:System.Workflow.Activities.CodeActivity> classes.</span></span> <span data-ttu-id="790b7-118">Ten przykład kodu jest częścią przykładowe nasłuchiwania zestawu SDK z pliku PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="790b7-118">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="790b7-119">Aby uzyskać więcej informacji, zobacz [nasłuchiwania przykładowe](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="790b7-119">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#214](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#214)]
 [!code-vb[wf_samples#214](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#214)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallExternalMethodActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallExternalMethodActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.CallExternalMethodActivity : string -&gt; System.Workflow.Activities.CallExternalMethodActivity" Usage="new System.Workflow.Activities.CallExternalMethodActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="790b7-120">Zdefiniowana przez użytkownika nazwa działania, używany do inicjowania właściwości nazwę działania.</span><span class="sxs-lookup"><span data-stu-id="790b7-120">The user-defined name of the activity, used to initialize the activity name property.</span></span></param>
        <summary><span data-ttu-id="790b7-121">Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> klasy przy użyciu nazwy działania.</span><span class="sxs-lookup"><span data-stu-id="790b7-121">Initializes a new instance of the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> class using the name of the activity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationToken">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.CorrelationToken CorrelationToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CorrelationToken As CorrelationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Workflow::Runtime::CorrelationToken ^ CorrelationToken { System::Workflow::Runtime::CorrelationToken ^ get(); void set(System::Workflow::Runtime::CorrelationToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationToken : System.Workflow.Runtime.CorrelationToken with get, set" Usage="System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.CorrelationTokenTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.CorrelationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="790b7-122">Pobiera lub ustawia <see cref="T:System.Workflow.Runtime.CorrelationToken" /> w metodzie zewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="790b7-122">Gets or sets the <see cref="T:System.Workflow.Runtime.CorrelationToken" /> for the external method.</span></span></summary>
        <value><span data-ttu-id="790b7-123">Token korelace w metodzie zewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="790b7-123">The correlation token for the external method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="790b7-124">Ta właściwość określa której <xref:System.Workflow.Activities.CallExternalMethodActivity> wywołanie metody zewnętrznej danego pochodzi z działania.</span><span class="sxs-lookup"><span data-stu-id="790b7-124">This property defines which specific <xref:System.Workflow.Activities.CallExternalMethodActivity> activity a given external method call comes from.</span></span> <span data-ttu-id="790b7-125">Ta wartość może następnie służyć w ładunku zdarzenia usługi lokalnej komunikacji do kierowania tego zdarzenia do prawidłowego <xref:System.Workflow.Activities.HandleExternalEventActivity> działania.</span><span class="sxs-lookup"><span data-stu-id="790b7-125">This value can then be used in the payload of a local communication service event to direct that event to the correct <xref:System.Workflow.Activities.HandleExternalEventActivity> activity.</span></span>  
  
 <span data-ttu-id="790b7-126">Na przykład korelacji zobacz [skorelowane lokalnych usług — przykład](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="790b7-126">For an example of correlation, see the [Correlated Local Service Sample](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="790b7-127">Poniższy przykład pokazuje, jak uzyskać dostęp do `CorrelationToken` właściwość `CallExternalMethodActivity` obiektu.</span><span class="sxs-lookup"><span data-stu-id="790b7-127">The following sample shows how to access the `CorrelationToken` property of a `CallExternalMethodActivity` object.</span></span> <span data-ttu-id="790b7-128">W tym przykładzie pochodzi z przykładu zestawu SDK skorelowane lokalnej usługi z pliku CorrelatedLocalServiceWorkflow.designer.cs.</span><span class="sxs-lookup"><span data-stu-id="790b7-128">This sample is from the Correlated Local Service SDK sample, from the CorrelatedLocalServiceWorkflow.designer.cs file.</span></span> <span data-ttu-id="790b7-129">Aby uzyskać więcej informacji, zobacz [skorelowane lokalnych usług — przykład](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="790b7-129">For more information, see [Correlated Local Service Sample](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[wf_samples#200](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#200)]
 [!code-vb[wf_samples#200](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#200)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="790b7-130">Przy użyciu działania CallExternalMethod</span><span class="sxs-lookup"><span data-stu-id="790b7-130">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CorrelationTokenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CorrelationTokenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CorrelationTokenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CorrelationTokenProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="790b7-131">Reprezentuje <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> przeznaczonego <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="790b7-131">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="790b7-132">Przy użyciu działania CallExternalMethod</span><span class="sxs-lookup"><span data-stu-id="790b7-132">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="callExternalMethodActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="790b7-133"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> Zawierający środowiska wykonawczego, w którym ma być uruchamiany <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />.</span><span class="sxs-lookup"><span data-stu-id="790b7-133">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that contains the execution environment in which to run the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />.</span></span></param>
        <summary><span data-ttu-id="790b7-134">Próbuje uruchomić <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> z określonym <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</span><span class="sxs-lookup"><span data-stu-id="790b7-134">Tries to run the <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> with the specified <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</span></span></summary>
        <returns><span data-ttu-id="790b7-135">Jedną z <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="790b7-135">One of the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="790b7-136">To <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> jest odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="790b7-136">This <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="790b7-137"><paramref name="executionContext" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="790b7-137"><paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="790b7-138">Obiekt usługi dla <paramref name="executionContext" /> jest odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="790b7-138">The service object for the <paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="790b7-139">Przy użyciu działania CallExternalMethod</span><span class="sxs-lookup"><span data-stu-id="790b7-139">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberSignature Language="F#" Value="override this.InitializeProperties : unit -&gt; unit" Usage="callExternalMethodActivity.InitializeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="790b7-140">Dokonuje inicjowania właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="790b7-140">Performs initialization on dependency properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="790b7-141">Ta metoda inicjuje <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A> sprawdza właściwości <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> i <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> właściwości są ustawiane i sprawdza, czy zdarzenie do którego odwołuje się <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> właściwości można znaleźć w interfejsie, do którego odwołuje się <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> Właściwość.</span><span class="sxs-lookup"><span data-stu-id="790b7-141">This method initializes the <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A> property, verifies the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> and <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> properties are set and verifies that the event referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property can be found in the interface referenced in the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="790b7-142">Przy użyciu działania CallExternalMethodActivity</span><span class="sxs-lookup"><span data-stu-id="790b7-142">Using the CallExternalMethodActivity Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public virtual Type InterfaceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ InterfaceType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type with get, set" Usage="System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.TypeBrowserEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Workflow.ComponentModel.Design.TypeFilterProvider(typeof(System.Workflow.Activities.ExternalDataExchangeInterfaceTypeFilterProvider))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="790b7-143">Pobiera lub ustawia metody zewnętrznej przez zadeklarowanie interfejsu, który ma <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="790b7-143">Gets or sets an external method's declaring interface that has the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span></span></summary>
        <value><span data-ttu-id="790b7-144">Metoda zewnętrzna przez zadeklarowanie interfejsu, który ma <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="790b7-144">The external method's declaring interface that has the <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="790b7-145">Poniższy przykład kodu pokazuje, jak ustawić <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="790b7-145">The following code example shows how to set the <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property.</span></span> <span data-ttu-id="790b7-146">Musi mieć atrybut typu interfejsu <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="790b7-146">The interface type must be attributed with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span></span> <span data-ttu-id="790b7-147">Ten przykład kodu jest częścią przykładowe nasłuchiwania zestawu SDK z pliku PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="790b7-147">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="790b7-148">Aby uzyskać więcej informacji, zobacz [nasłuchiwania przykładowe](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="790b7-148">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="790b7-149">Przy użyciu działania CallExternalMethod</span><span class="sxs-lookup"><span data-stu-id="790b7-149">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InterfaceTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InterfaceTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable InterfaceTypeProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="790b7-150">Reprezentuje <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> przeznaczonego <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="790b7-150">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="790b7-151"><xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> Właściwość odpowiada nazwa interfejsu, oznaczoną jako zaniechana <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="790b7-151">The <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> property corresponds to the name of the interface that was marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="790b7-152">Przy użyciu działania CallExternalMethod</span><span class="sxs-lookup"><span data-stu-id="790b7-152">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MethodInvoking">
      <MemberSignature Language="C#" Value="public event EventHandler MethodInvoking;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MethodInvoking" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MethodInvoking As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MethodInvoking;" />
      <MemberSignature Language="F#" Value="member this.MethodInvoking : EventHandler " Usage="member this.MethodInvoking : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="790b7-153">Występuje przed wywołaniem metody.</span><span class="sxs-lookup"><span data-stu-id="790b7-153">Occurs before invoking the method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="790b7-154">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> zdarzenie, aby ustawić metodę do wywołania przed wywołaniem metody zewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="790b7-154">The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event to set the method to call before invoking the external method.</span></span> <span data-ttu-id="790b7-155">Ten przykład kodu jest częścią przykładowe nasłuchiwania zestawu SDK z pliku PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="790b7-155">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="790b7-156">Aby uzyskać więcej informacji, zobacz [nasłuchiwania przykładowe](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="790b7-156">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="790b7-157">Przy użyciu działania CallExternalMethod</span><span class="sxs-lookup"><span data-stu-id="790b7-157">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MethodInvokingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty MethodInvokingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty MethodInvokingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MethodInvokingEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ MethodInvokingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MethodInvokingEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="790b7-158">Reprezentuje <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> przeznaczonego <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="790b7-158">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="790b7-159"><xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> Zdarzeń definiuje delegata zdarzenia, która zostanie wykonana zanim działania wywołuje metodę zewnętrznych w lokalnej usłudze.</span><span class="sxs-lookup"><span data-stu-id="790b7-159">The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> event defines an event delegate that is executed before the activity invokes the external method on the local service.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="790b7-160">Przy użyciu działania CallExternalMethod</span><span class="sxs-lookup"><span data-stu-id="790b7-160">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public virtual string MethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string with get, set" Usage="System.Workflow.Activities.CallExternalMethodActivity.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.Common.PropertyValueProviderTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.Design.PropertyValueProviderTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="790b7-161">Pobiera lub ustawia nazwę metody, które ma być wywołane na lokalnej usługi, które są zarejestrowane w usłudze <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</span><span class="sxs-lookup"><span data-stu-id="790b7-161">Gets or sets the name of the method to be called on the local service registered with the <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</span></span></summary>
        <value><span data-ttu-id="790b7-162">Nazwa metody <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="790b7-162">The method name of the <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="790b7-163">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> właściwości ustaw nazwę metody metody zewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="790b7-163">The following code example shows how to use the <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property to set the method name of the external method.</span></span> <span data-ttu-id="790b7-164">Ten przykład kodu jest częścią przykładowe nasłuchiwania zestawu SDK z pliku PurchaseOrderWorkflow.Designer.cs.</span><span class="sxs-lookup"><span data-stu-id="790b7-164">This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file.</span></span> <span data-ttu-id="790b7-165">Aby uzyskać więcej informacji, zobacz [nasłuchiwania przykładowe](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="790b7-165">For more information, see [Listen Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="790b7-166">Przy użyciu działania CallExternalMethod</span><span class="sxs-lookup"><span data-stu-id="790b7-166">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MethodNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty MethodNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty MethodNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MethodNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ MethodNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MethodNameProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="790b7-167">Reprezentuje <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> przeznaczonego <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="790b7-167">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="790b7-168"><xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> Właściwość odnosi się do nazwy metody zawarty w interfejsie, która jest oznaczona za pomocą <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="790b7-168">The <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> property corresponds to the name of a method contained on an interface that is marked with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</span></span>  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="790b7-169">Przy użyciu działania CallExternalMethod</span><span class="sxs-lookup"><span data-stu-id="790b7-169">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMethodInvoked">
      <MemberSignature Language="C#" Value="protected virtual void OnMethodInvoked (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMethodInvoked(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMethodInvoked (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMethodInvoked(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMethodInvoked : EventArgs -&gt; unit&#xA;override this.OnMethodInvoked : EventArgs -&gt; unit" Usage="callExternalMethodActivity.OnMethodInvoked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="790b7-170"><see cref="T:System.EventArgs" /> Zawierający dane <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="790b7-170">An <see cref="T:System.EventArgs" /> that contains the data for the <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> event.</span></span></param>
        <summary><span data-ttu-id="790b7-171">Udostępnia hook klas pochodnych do wyodrębniania wartości poza i zwrotu z <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span><span class="sxs-lookup"><span data-stu-id="790b7-171">Provides a hook for derived classes to extract out and return values from the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span></span> <span data-ttu-id="790b7-172">Ta metoda jest wywoływana po uruchomieniu metody zewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="790b7-172">This method is called just after the external method is run.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="790b7-173">W poniższym przykładzie pokazano implementację `OnMethodInvoked` metody.</span><span class="sxs-lookup"><span data-stu-id="790b7-173">The following example shows an implementation of the `OnMethodInvoked` method.</span></span>  
  
 [!code-csharp[wf_samples#1](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#1)]
 [!code-vb[wf_samples#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="790b7-174">Przy użyciu działania CallExternalMethod</span><span class="sxs-lookup"><span data-stu-id="790b7-174">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnMethodInvoking">
      <MemberSignature Language="C#" Value="protected virtual void OnMethodInvoking (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMethodInvoking(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMethodInvoking (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMethodInvoking(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMethodInvoking : EventArgs -&gt; unit&#xA;override this.OnMethodInvoking : EventArgs -&gt; unit" Usage="callExternalMethodActivity.OnMethodInvoking e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="790b7-175"><see cref="T:System.EventArgs" /> Zawierający dane <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="790b7-175">An <see cref="T:System.EventArgs" /> that contains the data for the <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> event.</span></span></param>
        <summary><span data-ttu-id="790b7-176">Udostępnia hook klas pochodnych ustawić <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span><span class="sxs-lookup"><span data-stu-id="790b7-176">Provides a hook for derived classes to set <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</span></span> <span data-ttu-id="790b7-177">Ta metoda jest wywoływana po prostu, przed uruchomieniem metody zewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="790b7-177">This method is called just before the external method is run.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="790b7-178">W poniższym przykładzie pokazano implementację `OnMethodInvoking` metody.</span><span class="sxs-lookup"><span data-stu-id="790b7-178">The following example demonstrates an implementation of the `OnMethodInvoking` method.</span></span> <span data-ttu-id="790b7-179">W tym przykładzie pochodzi z przykładu zestawu SDK skorelowane lokalnej usługi z pliku CreateTask.cs.</span><span class="sxs-lookup"><span data-stu-id="790b7-179">This example is from the Correlated Local Service SDK sample, from the CreateTask.cs file.</span></span> <span data-ttu-id="790b7-180">Aby uzyskać więcej informacji, zobacz [skorelowane lokalnych usług — przykład](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span><span class="sxs-lookup"><span data-stu-id="790b7-180">For more information, see [Correlated Local Service Sample](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).</span></span>  
  
 [!code-csharp[wf_samples#207](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#207)]
 [!code-vb[wf_samples#207](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#207)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="790b7-181">Przy użyciu działania CallExternalMethod</span><span class="sxs-lookup"><span data-stu-id="790b7-181">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterBindings : System.Workflow.ComponentModel.WorkflowParameterBindingCollection" Usage="System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="790b7-182">Pobiera kolekcję możliwej do wiązania parametrów, tak jak w programie zewnętrzną metodę formalnej listy parametrów.</span><span class="sxs-lookup"><span data-stu-id="790b7-182">Gets the collection of bindable parameters as found in the external method's formal parameter list.</span></span></summary>
        <value><span data-ttu-id="790b7-183"><see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> Parametrów można powiązać.</span><span class="sxs-lookup"><span data-stu-id="790b7-183">The <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> of parameters to bind to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="790b7-184">Poniższy przykład pokazuje, jak dodać wiązanie parametru do kolekcji powiązania parametrów.</span><span class="sxs-lookup"><span data-stu-id="790b7-184">The following example shows how to add a parameter binding to the parameter bindings collection.</span></span> <span data-ttu-id="790b7-185">W tym przykładzie pochodzi z przykładu SDK komunikacji hosta z pliku VotingServiceWorkflow.designer.cs.</span><span class="sxs-lookup"><span data-stu-id="790b7-185">This example is from the Host Communication SDK sample, from the VotingServiceWorkflow.designer.cs file.</span></span> <span data-ttu-id="790b7-186">Aby uzyskać więcej informacji, zobacz [przykład komunikacji hosta](https://msdn.microsoft.com/library/ce4b0b8c-bfa3-4c24-b85a-5835a440ea8f).</span><span class="sxs-lookup"><span data-stu-id="790b7-186">For more information, see [Host Communication Sample](https://msdn.microsoft.com/library/ce4b0b8c-bfa3-4c24-b85a-5835a440ea8f).</span></span>  
  
 [!code-csharp[WF_Samples#301](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets38.cs#301)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="790b7-187">Przy użyciu działania CallExternalMethod</span><span class="sxs-lookup"><span data-stu-id="790b7-187">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindingsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParameterBindingsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ParameterBindingsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ParameterBindingsProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="790b7-188">Reprezentuje <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> przeznaczonego <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="790b7-188">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)"><span data-ttu-id="790b7-189">Przy użyciu działania CallExternalMethod</span><span class="sxs-lookup"><span data-stu-id="790b7-189">Using the CallExternalMethod Activity</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.Compiler.AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAccessType (serviceProvider As IServiceProvider, propertyName As String) As AccessTypes Implements IDynamicPropertyTypeProvider.GetAccessType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Workflow::ComponentModel::Compiler::AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetAccessType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.AccessTypes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="790b7-190">Obiekt, który implementuje <see cref="T:System.IServiceProvider" /> zapewniać dostęp do usługi czasu projektowania, jeśli są one wymagane.</span><span class="sxs-lookup"><span data-stu-id="790b7-190">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span></span></param>
        <param name="propertyName"><span data-ttu-id="790b7-191">Nazwa właściwości.</span><span class="sxs-lookup"><span data-stu-id="790b7-191">The name of the property.</span></span></param>
        <summary><span data-ttu-id="790b7-192">Zwraca typ dostępu dla określonej właściwości.</span><span class="sxs-lookup"><span data-stu-id="790b7-192">Returns the access type for the specified property.</span></span></summary>
        <returns><span data-ttu-id="790b7-193"><see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> Wartości wyliczenia, która oznacza poziom dostępu właściwości.</span><span class="sxs-lookup"><span data-stu-id="790b7-193">An <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> enumeration value that denotes the access level of the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="790b7-194">Używane w czasie kompilacji, aby sprawdzić, czy właściwości są poprawnie powiązane ze sobą.</span><span class="sxs-lookup"><span data-stu-id="790b7-194">Used at compile time to validate whether the properties are correctly bound to one another.</span></span> <span data-ttu-id="790b7-195">Bez tego interfejsu informacja ta wynika bezpośrednio z metody pobierającej/metod ustawiających właściwości.</span><span class="sxs-lookup"><span data-stu-id="790b7-195">Without this interface this information is inferred directly from property getter/setters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType">
      <MemberSignature Language="C#" Value="Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetPropertyType (serviceProvider As IServiceProvider, propertyName As String) As Type Implements IDynamicPropertyTypeProvider.GetPropertyType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetPropertyType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="790b7-196">Obiekt, który implementuje <see cref="T:System.IServiceProvider" /> zapewniać dostęp do usługi czasu projektowania, jeśli są one wymagane.</span><span class="sxs-lookup"><span data-stu-id="790b7-196">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are required.</span></span></param>
        <param name="propertyName"><span data-ttu-id="790b7-197">Nazwa właściwości.</span><span class="sxs-lookup"><span data-stu-id="790b7-197">The name of the property.</span></span></param>
        <summary><span data-ttu-id="790b7-198">Zwraca <see cref="T:System.Type" /> określonej właściwości.</span><span class="sxs-lookup"><span data-stu-id="790b7-198">Returns the <see cref="T:System.Type" /> of the specified property.</span></span></summary>
        <returns><span data-ttu-id="790b7-199"><see cref="T:System.Type" /> Dla właściwości, których nazwa jest przekazywany jako <paramref name="propertyName" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="790b7-199">The <see cref="T:System.Type" /> for the property whose name is passed as the <paramref name="propertyName" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="790b7-200">Używane w czasie kompilacji, aby sprawdzić, czy właściwości są prawidłowo powiązane ze sobą.</span><span class="sxs-lookup"><span data-stu-id="790b7-200">Used at compile time to validate whether the properties are correctly bound to one other.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>