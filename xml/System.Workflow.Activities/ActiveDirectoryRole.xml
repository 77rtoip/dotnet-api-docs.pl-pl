<Type Name="ActiveDirectoryRole" FullName="System.Workflow.Activities.ActiveDirectoryRole">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8c9d6241548f19cb3fe368c2dcb16cbb6960a65a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69443324" /></Metadata><TypeSignature Language="C#" Value="public sealed class ActiveDirectoryRole : System.Workflow.Activities.WorkflowRole, IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ActiveDirectoryRole extends System.Workflow.Activities.WorkflowRole implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.ActiveDirectoryRole" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActiveDirectoryRole&#xA;Inherits WorkflowRole&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveDirectoryRole sealed : System::Workflow::Activities::WorkflowRole, IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type ActiveDirectoryRole = class&#xA;    inherit WorkflowRole&#xA;    interface ISerializable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Activities.WorkflowRole</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje rolę Active Directory w środowisku hostingu Windows Workflow Foundation. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Zwykle magazyn Active Directory jest używany do przechowywania informacji o organizacji dla personelu. Głównym celem dla programu <xref:System.Workflow.Activities.ActiveDirectoryRole> jest tworzenie zapytań dotyczących takich informacji o organizacji z przyczyn związanych z działalnością biznesową.  
  
 Role Active Directory zwykle odpowiadają funkcji zadania, tytułowi lub umiejętnościom zadania w ramach organizacji.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" />
  </Docs>
  <Members>
    <Member MemberName="GetAllReports">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetAllReports ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetAllReports() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllReports () As ActiveDirectoryRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::ActiveDirectoryRole ^ GetAllReports();" />
      <MemberSignature Language="F#" Value="member this.GetAllReports : unit -&gt; System.Workflow.Activities.ActiveDirectoryRole" Usage="activeDirectoryRole.GetAllReports " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> Zwraca wartość zawierającą wszystkie role, które są zgłaszane do bieżącej roli bezpośrednio lub pośrednio.</summary>
        <returns>A <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> , który zawiera wszystkie role, które bezpośrednio lub pośrednio raportują bieżącą rolę.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A>zwraca wszystkie węzły poniżej bieżącego węzła. Użyj <xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A> , aby zwrócić tylko węzły, które znajdują się bezpośrednio pod bieżącym węzłem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectReports">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetDirectReports ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetDirectReports() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectReports () As ActiveDirectoryRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::ActiveDirectoryRole ^ GetDirectReports();" />
      <MemberSignature Language="F#" Value="member this.GetDirectReports : unit -&gt; System.Workflow.Activities.ActiveDirectoryRole" Usage="activeDirectoryRole.GetDirectReports " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> Zwraca wartość zawierającą wszystkie role, które raportują bezpośrednio do bieżącej roli.</summary>
        <returns><see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> Zawiera wszystkie role bezpośrednio raportowane do bieżącej roli.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A>zwraca tylko te węzły, które znajdują się bezpośrednio pod bieżącym węzłem. Aby zwrócić wszystkie węzły poniżej bieżącego węzła, użyj <xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntries">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.DirectoryServices.DirectoryEntry&gt; GetEntries ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.DirectoryServices.DirectoryEntry&gt; GetEntries() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetEntries" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntries () As ICollection(Of DirectoryEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::DirectoryServices::DirectoryEntry ^&gt; ^ GetEntries();" />
      <MemberSignature Language="F#" Value="member this.GetEntries : unit -&gt; System.Collections.Generic.ICollection&lt;System.DirectoryServices.DirectoryEntry&gt;" Usage="activeDirectoryRole.GetEntries " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.DirectoryServices.DirectoryEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kolekcję ogólną, która zawiera wszystkie <see cref="T:System.DirectoryServices.DirectoryEntry" /> obiekty skojarzone z bieżącym. <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /></summary>
        <returns>Ogólna <see cref="T:System.DirectoryServices.DirectoryEntry" /> kolekcja, która jest skojarzona z bieżącym <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rolą może być ogólna kolekcja obiektów zabezpieczeń. W związku z tym rola może zawierać wiele tożsamości, na przykład <xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A> w celu zwrócenia wszystkich obiektów katalogu skojarzonych z rolą.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIdentities">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;string&gt; GetIdentities ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetIdentities() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetIdentities" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetIdentities () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetIdentities();" />
      <MemberSignature Language="F#" Value="override this.GetIdentities : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="activeDirectoryRole.GetIdentities " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera ogólną listę kont systemu Windows NT skojarzonych z <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</summary>
        <returns>Ogólna lista wartości, które reprezentują konta systemu Windows NT skojarzone z <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ActiveDirectoryRole.GetIdentities%2A>uzyskuje wszystkie <xref:System.Security.Principal.SecurityIdentifier> obiekty skojarzone <xref:System.Workflow.Activities.ActiveDirectoryRole> z i konwertuje każdą z nich na wartość ciągu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManager">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetManager" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManager () As ActiveDirectoryRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::ActiveDirectoryRole ^ GetManager();" />
      <MemberSignature Language="F#" Value="member this.GetManager : unit -&gt; System.Workflow.Activities.ActiveDirectoryRole" Usage="activeDirectoryRole.GetManager " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca rolę Active Directory, która zawiera informacje o Menedżerze bieżącej <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</summary>
        <returns><see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> Zawiera informacje o Menedżerze bieżącej roli.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>zwraca Menedżera bezpośredniego dla bieżącej roli. Aby zwrócić wszystkie role powyżej bieżącego węzła, użyj <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagerialChain">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetManagerialChain ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetManagerialChain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManagerialChain () As ActiveDirectoryRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::ActiveDirectoryRole ^ GetManagerialChain();" />
      <MemberSignature Language="F#" Value="member this.GetManagerialChain : unit -&gt; System.Workflow.Activities.ActiveDirectoryRole" Usage="activeDirectoryRole.GetManagerialChain " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca rolę Active Directory, która zawiera informacje o łańcuchu kierowniczym skojarzonym z <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />bieżącym.</summary>
        <returns><see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> Zawiera informacje o łańcuchu kierowniczym skojarzonym z bieżącą rolą.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A>zwraca wszystkie węzły powyżej bieżącej roli. Aby zwrócić tylko Menedżera bezpośredniego dla bieżącej roli, użyj <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeers">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ActiveDirectoryRole GetPeers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Activities.ActiveDirectoryRole GetPeers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetPeers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPeers () As ActiveDirectoryRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Activities::ActiveDirectoryRole ^ GetPeers();" />
      <MemberSignature Language="F#" Value="member this.GetPeers : unit -&gt; System.Workflow.Activities.ActiveDirectoryRole" Usage="activeDirectoryRole.GetPeers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ActiveDirectoryRole</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca rolę Active Directory, która zawiera informacje o wszystkich operacjach katalogu nadzorowanych przez Menedżera bieżących <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</summary>
        <returns>A <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> , który zawiera informacje o wszystkich operacjach katalogowych, które są nadzorowane przez Menedżera bieżącej <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />usługi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ActiveDirectoryRole> Zwrócony program zawiera informacje ze wszystkich obiektów zarządzanych przez Menedżera tej roli, ale nie zawiera tych informacji z bieżącej roli.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityIdentifiers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Security.Principal.SecurityIdentifier&gt; GetSecurityIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Security.Principal.SecurityIdentifier&gt; GetSecurityIdentifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSecurityIdentifiers () As IList(Of SecurityIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Security::Principal::SecurityIdentifier ^&gt; ^ GetSecurityIdentifiers();" />
      <MemberSignature Language="F#" Value="member this.GetSecurityIdentifiers : unit -&gt; System.Collections.Generic.IList&lt;System.Security.Principal.SecurityIdentifier&gt;" Usage="activeDirectoryRole.GetSecurityIdentifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Security.Principal.SecurityIdentifier&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ogólną listę <see cref="T:System.Security.Principal.SecurityIdentifier" /> obiektów skojarzonych z bieżącym <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</summary>
        <returns>Ogólna lista <see cref="T:System.Security.Principal.SecurityIdentifier" /> obiektów skojarzonych z bieżącym <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers%2A>sprawdza każde <xref:System.DirectoryServices.DirectoryEntry> zwrócone <xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A> przez metodę, aby sprawdzić, czy wpis ma identyfikator zabezpieczeń w swojej <xref:System.DirectoryServices.DirectoryEntry.Properties%2A> kolekcji. Jeśli ma taką właściwość, dodaje <xref:System.Security.Principal.SecurityIdentifier> do <xref:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers%2A> listy, która zwraca. <xref:System.DirectoryServices.DirectoryEntry>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludesIdentity">
      <MemberSignature Language="C#" Value="public override bool IncludesIdentity (string identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IncludesIdentity(string identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IncludesIdentity (identity As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IncludesIdentity(System::String ^ identity);" />
      <MemberSignature Language="F#" Value="override this.IncludesIdentity : string -&gt; bool" Usage="activeDirectoryRole.IncludesIdentity identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity">Tożsamość do wyszukania.</param>
        <summary>Zwraca wartość wskazującą, czy <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> zawiera określoną tożsamość.</summary>
        <returns><see langword="true" />, <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> <paramref name="identity" /> Abywskazać,żejestzawartyw;wprzeciwnymrazie.<see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ rola jest generalizacją co najmniej jednego obiektu, wiele tożsamości może być opisywanych przez jedną rolę. Użyj <xref:System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity%2A> , aby sprawdzić, czy określona tożsamość jest uwzględniona w tej roli.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ActiveDirectoryRole.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Workflow.Activities.ActiveDirectoryRole.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę roli Active Directory.</summary>
        <value>Nazwa roli Active Directory.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj nazwy, aby opisać rolę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootEntry">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry RootEntry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryEntry RootEntry" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ActiveDirectoryRole.RootEntry" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootEntry As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryEntry ^ RootEntry { System::DirectoryServices::DirectoryEntry ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootEntry : System.DirectoryServices.DirectoryEntry" Usage="System.Workflow.Activities.ActiveDirectoryRole.RootEntry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera główny węzeł Active Directory skojarzony z <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />.</summary>
        <value>Reprezentujący główny węzeł Active Directory skojarzony <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />z. <see cref="T:System.DirectoryServices.DirectoryEntry" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wpis główny to rola łańcucha ról, które nie mają Menedżera.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszystkie zasoby używane przez <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />program.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Do wypełnienia danymi.</param>
        <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext" /> Miejsce docelowe dla tej serializacji.</param>
        <summary><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Wypełnia dane wymagane do serializacji obiektu docelowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementacja <xref:System.Workflow.Activities.ActiveDirectoryRole.System%23Runtime%23Serialization%23ISerializable%23GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)> zezwala na serializacja tego obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
