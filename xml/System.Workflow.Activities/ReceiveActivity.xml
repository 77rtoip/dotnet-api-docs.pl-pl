<Type Name="ReceiveActivity" FullName="System.Workflow.Activities.ReceiveActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="74c5404b88c2bc1f7d0e4ab4c9ee07ecd1f9e600" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53498984" /></Metadata><TypeSignature Language="C#" Value="public sealed class ReceiveActivity : System.Workflow.Activities.SequenceActivity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ReceiveActivity extends System.Workflow.Activities.SequenceActivity implements class System.Workflow.Activities.IEventActivity, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.ReceiveActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReceiveActivity&#xA;Inherits SequenceActivity&#xA;Implements IActivityEventListener(Of QueueEventArgs), IEventActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReceiveActivity sealed : System::Workflow::Activities::SequenceActivity, System::Workflow::Activities::IEventActivity, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt;" />
  <TypeSignature Language="F#" Value="type ReceiveActivity = class&#xA;    inherit SequenceActivity&#xA;    interface IEventActivity&#xA;    interface IActivityEventListener&lt;QueueEventArgs&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Activities.SequenceActivity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.Activities.IEventActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.ReceiveActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.ReceiveActivity), "Design.Resources.ReceiveActivity.png")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.ReceiveActivityValidator))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Działanie usługi, która implementuje operację zdefiniowaną przez kontraktu usługi Windows Communication Foundation (WCF).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <xref:System.Workflow.Activities.ReceiveActivity> Działania jest używana podczas przepływu pracy implementuje operację zdefiniowaną w kontraktu usługi WCF. <xref:System.Workflow.Activities.ReceiveActivity> Można zaimplementować operacje z już zdefiniowanym Umowa serwisowa lub można zdefiniować kontrakt usługi i operacji w obrębie samego przepływu pracy. Drugim jest określany jako kontrakt pierwszego przepływu pracy.  
  
 <xref:System.Workflow.Activities.ReceiveActivity> Działanie obsługuje zestaw wzorców exchange wstępnie zdefiniowaną wiadomość. Wzorce te obejmują:  
  
-   Jednokierunkowa odbierania  
  
     Klient, który wysyła wiadomość nie oczekuje usługi do wysłania odpowiedzi. Operacja kontraktu powinny mieć zwracać typ void.  
  
-   Odbierać żądania — wysyła odpowiedź  
  
     Po komunikat jest odbierany i przetwarzany przez <xref:System.Workflow.Activities.ReceiveActivity> działania, odpowiedź jest wysyłana do klienta. Podczas operacji kontraktu ma zwracać typ void, potwierdzenie są odsyłane do działania wysyłania.  
  
-   Odbierać żądania — błędów wysyłania  
  
     Po komunikat jest odbierany i przetwarzany przez <xref:System.Workflow.Activities.ReceiveActivity> działanie, odpowiedź lub awarii jest wysyłane z powrotem do klienta.  
  
> [!NOTE]
>  W celu zapewnienia, że trwałości wykonuje prawidłowo i nie utrwala przejściowy wiadomości, upewnij się, że podrzędnych działania <xref:System.Workflow.Activities.ReceiveActivity> nie są zachowywane przez siebie. Taka sytuacja może wystąpić, jeśli działania podrzędne bezczynności po dostawcy stanów trwałych został utworzony za pomocą `UnloadOnIdle` równa `true`, np.  
  
> [!NOTE]
>  To działanie jest częścią [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]. Równoważne działania w [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], zobacz <xref:System.ServiceModel.Activities.Receive>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Workflow.Activities.SendActivity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.ReceiveActivity" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ReceiveActivity> Konstruktor jest zazwyczaj wywoływana w pliku kodu obok utworzone przez projektanta przepływu pracy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReceiveActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReceiveActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.ReceiveActivity" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ReceiveActivity> Konstruktor jest zazwyczaj wywoływana w pliku kodu obok utworzone przez projektanta przepływu pracy.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć nowe wystąpienie klasy <xref:System.Workflow.Activities.ReceiveActivity> klasy.  Ten kod został napisany `Conversations` SDK próbki z `ShipperWorkflow.designer.cs` pliku.  
  
 [!code-csharp[ReceiveActivity#11](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReceiveActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReceiveActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.ReceiveActivity : string -&gt; System.Workflow.Activities.ReceiveActivity" Usage="new System.Workflow.Activities.ReceiveActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa do przypisania do wystąpienia działania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.ReceiveActivity" /> klasy, inicjowanie jego <see cref="P:System.Workflow.ComponentModel.Activity.Name" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ReceiveActivity> Konstruktor jest zazwyczaj wywoływana w pliku kodu obok utworzone przez projektanta przepływu pracy.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak utworzyć nowe wystąpienie klasy <xref:System.Workflow.Activities.ReceiveActivity> klasy.  
  
 [!code-csharp[ReceiveActivity#12](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Cancel(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Cancel (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Cancel(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Cancel : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="receiveActivity.Cancel executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateInstance">
      <MemberSignature Language="C#" Value="public bool CanCreateInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCreateInstance" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.CanCreateInstance" />
      <MemberSignature Language="VB.NET" Value="Public Property CanCreateInstance As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanCreateInstance { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanCreateInstance : bool with get, set" Usage="System.Workflow.Activities.ReceiveActivity.CanCreateInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia informację, czy operacja powoduje, że nowe wystąpienie usługi przepływu pracy ma zostać utworzony.</summary>
        <value><see langword="true" /> Jeśli tworzone jest nowe wystąpienie przepływu pracy; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Workflow.Activities.ReceiveActivity> działania, który ma <xref:System.Workflow.Activities.ReceiveActivity.CanCreateInstance%2A> równa `true` reprezentuje operacje obsługi, gdy jest wywoływany przez klienta usługi nie są częścią konwersacji, powoduje, że nowe wystąpienie przepływu pracy usługi ma zostać utworzony.  
  
 Usługa przepływów pracy, które nie mają <xref:System.Workflow.Activities.ReceiveActivity> działanie przy użyciu <xref:System.Workflow.Activities.ReceiveActivity.CanCreateInstance%2A> równa `true` nie można utworzyć wystąpienia przez klienta za pomocą wywołania operacji usługi. Takie przepływy pracy mogą być tworzone za pomocą <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> metoda skojarzonego <xref:System.Workflow.Runtime.WorkflowRuntime> obiektu.  
  
 Wartość domyślna tej właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak ustawić `CanCreateInstance` właściwości. Ten kod został napisany `Conversations` SDK próbki z `ShipperWorkflow.designer.cs` pliku.  
  
 [!code-csharp[ReceiveActivity#0](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Context" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Context { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.ReceiveActivity.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera informacje kontekstu dla tego działania.</summary>
        <value>A <see cref="T:System.Collections.Generic.IDictionary`2" /> obiekt, który zawiera informacje o kontekście dla tego działania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informacje o kontekście jest używany do komunikacji między klientem a usługą komunikuje się klient i zawiera takie elementy, jak identyfikator korelacji.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak uzyskać dostęp do `Context` właściwości.  
  
 [!code-csharp[ReceiveActivity#17](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextToken">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ContextToken ContextToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.ContextToken ContextToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.ContextToken" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextToken As ContextToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::ContextToken ^ ContextToken { System::Workflow::Activities::ContextToken ^ get(); void set(System::Workflow::Activities::ContextToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextToken : System.Workflow.Activities.ContextToken with get, set" Usage="System.Workflow.Activities.ReceiveActivity.ContextToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.ContextTokenTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ContextToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje token, który może służyć do określenia kontekstu, które mają być używane w celu skorelowania wymiany między <see cref="T:System.Workflow.Activities.ReceiveActivity" /> działania i klienta, który komunikuje się działanie.</summary>
        <value>A <see cref="T:System.Workflow.Activities.ContextToken" /> mogą służyć do korelacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy <xref:System.Workflow.Activities.ReceiveActivity.ContextToken%2A> jest zdefiniowany w zakresie działania właściciela. Użytkownicy mogą modelu dwa tokeny distinct kontekst o takiej samej nazwie, ale zakresy innego właściciela. Wartość konteksty skojarzone z tych tokenów w kontekście różnią się w czasie wykonywania.  
  
 Domyślnie każdy przepływ pracy ma tokenu kontekstu niejawnego głównego zakresu na głównym poziomie działania. Nazwa głównego tokenu kontekstu jest (RootContext) i <xref:System.Workflow.Activities.ContextToken.OwnerActivityName%2A> jest `null`. Jeśli <xref:System.Workflow.Activities.ReceiveActivity> działanie nie musi <xref:System.Workflow.Activities.ReceiveActivity.ContextToken%2A> skojarzonych z nim, główny token kontekstu jest używana.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak uzyskać dostęp do `ContextToken` właściwości. W tym przykładzie kodu są zaczerpnięte z `Conversations` SDK próbki z `SupplierWorkflow.Designer.cs` pliku.  
  
 [!code-csharp[ReceiveActivity#1](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="receiveActivity.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="receiveActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FaultMessage">
      <MemberSignature Language="C#" Value="public System.ServiceModel.FaultException FaultMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.FaultException FaultMessage" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.FaultMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property FaultMessage As FaultException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::FaultException ^ FaultMessage { System::ServiceModel::FaultException ^ get(); void set(System::ServiceModel::FaultException ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FaultMessage : System.ServiceModel.FaultException with get, set" Usage="System.Workflow.Activities.ReceiveActivity.FaultMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.FaultException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wyjątek, który jest zwracany, jeśli działanie receive kończy wykonywanie.</summary>
        <value>A <see cref="T:System.ServiceModel.FaultException" /> obiekt, który zawiera tekst komunikatu błędu i szczegółowe informacje.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> właściwość jest ustawiona na wystąpienie typu <xref:System.ServiceModel.FaultException>, błąd jest zwracany do klienta po zakończeniu.  
  
 Jeśli wyjątek zostanie zgłoszony podczas wykonywania działania i <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> właściwość jest ustawiona, a następnie określony błąd jest zwracany do klienta. Jeśli wyjątek zostanie zgłoszony podczas wykonywania działania i <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> właściwość jest ustawiona, a skojarzona operacja ma <xref:System.ServiceModel.FaultContractAttribute> atrybut, który określa typ usterki, które są zgodne z <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> właściwości, a następnie kanał nie jest błędne. i będzie mógł nadal komunikować się z serwerem. Jeśli <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> właściwość nie jest ustawiona, zgłoszony wyjątek jest zwracany jako błąd do klienta.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób uzyskiwania dostępu do `FaultMessage` właściwości.  
  
 [!code-csharp[ReceiveActivity#2](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FaultMessageProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty FaultMessageProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty FaultMessageProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.ReceiveActivity.FaultMessageProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FaultMessageProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ FaultMessageProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FaultMessageProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.ReceiveActivity.FaultMessageProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> przeznaczonego <see cref="P:System.Workflow.Activities.ReceiveActivity.FaultMessage" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zależności można skonfigurować powiązania między działania odbierania <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> właściwość i przepływu pracy publiczny właściwości/pola typu <xref:System.ServiceModel.FaultException> lub innego działania publiczny właściwości/pola tego samego typu.  
  
 Ta właściwość zależności można także ustawić wartość skojarzoną z <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> właściwość <xref:System.Workflow.Activities.ReceiveActivity> działania.  
  
 Ta właściwość zależności można także uzyskać powiązanie lub wartości skojarzone z <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> właściwość <xref:System.Workflow.Activities.ReceiveActivity> działania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetContext">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca słownik zawierający informacje o kontekście używane do komunikacji między klientem a usługą przepływu pracy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informacje o kontekście jest używany do komunikacji między klientem a usługą komunikuje się klient i zawiera takie elementy, jak identyfikator korelacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ContextToken contextToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext(class System.Workflow.ComponentModel.Activity activity, class System.Workflow.Activities.ContextToken contextToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext(System::Workflow::ComponentModel::Activity ^ activity, System::Workflow::Activities::ContextToken ^ contextToken);" />
      <MemberSignature Language="F#" Value="static member GetContext : System.Workflow.ComponentModel.Activity * System.Workflow.Activities.ContextToken -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.ReceiveActivity.GetContext (activity, contextToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="contextToken" Type="System.Workflow.Activities.ContextToken" />
      </Parameters>
      <Docs>
        <param name="activity">Wystąpienie działania, które informacje kontekstu żądania.</param>
        <param name="contextToken">Token kontekstu używane przez działanie.</param>
        <summary>Metoda statyczna zwraca informacje o kontekście danego wystąpienia działania i token kontekstu.</summary>
        <returns>Słownik na podstawie kolekcji, która zawiera <see cref="T:System.Xml.XmlQualifiedName" /> kluczy i ich skojarzone <see cref="T:System.String" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informacje o kontekście jest używany do komunikacji między klientem a usługą komunikuje się klient i zawiera takie elementy, jak identyfikator korelacji.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać `GetContext` metody.  
  
 [!code-csharp[ReceiveActivity#13](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext (System.Workflow.ComponentModel.Activity activity, string contextName, string ownerActivityName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext(class System.Workflow.ComponentModel.Activity activity, string contextName, string ownerActivityName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ contextName, System::String ^ ownerActivityName);" />
      <MemberSignature Language="F#" Value="static member GetContext : System.Workflow.ComponentModel.Activity * string * string -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.ReceiveActivity.GetContext (activity, contextName, ownerActivityName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="contextName" Type="System.String" />
        <Parameter Name="ownerActivityName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="activity">Wystąpienie działania, które informacje kontekstu żądania.</param>
        <param name="contextName">Nazwa tokenu kontekstu używane przez działanie.</param>
        <param name="ownerActivityName">Nazwa właściciela Nazwa działania.</param>
        <summary>Metoda statyczna zwraca informacje o kontekście danego wystąpienia działania i token kontekstu.</summary>
        <returns>Słownik na podstawie kolekcji, która zawiera <see cref="T:System.Xml.XmlQualifiedName" /> kluczy i ich skojarzone <see cref="T:System.String" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informacje o kontekście jest używany do komunikacji między klientem a usługą komunikuje się klient i zawiera takie elementy, jak identyfikator korelacji.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać `GetContext` metody.  
  
 [!code-csharp[ReceiveActivity#15](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRootContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetRootContext (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetRootContext(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetRootContext(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="static member GetRootContext : System.Workflow.ComponentModel.Activity -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.ReceiveActivity.GetRootContext activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">Wystąpienie działania podrzędne.</param>
        <summary>Metoda statyczna zwraca informacje o kontekście dla kontekstu główny skojarzony z wystąpieniem danego działania. Informacje o kontekście jest używany do komunikacji między aplikacją hosta usługi przepływu pracy.</summary>
        <returns>Słownik na podstawie kolekcji, która zawiera <see cref="T:System.Xml.XmlQualifiedName" /> kluczy i ich skojarzone <see cref="T:System.String" /> wartości, które reprezentują informacje o kontekście dla kontekstu głównego. Jeśli logika tworzenia niestandardowego wystąpienia wiadomość, która powoduje utworzenie nowego wystąpienia zostaje odebrana w kontekście głównego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informacje o kontekście jest używany do komunikacji między klientem a usługą komunikuje się klient i zawiera takie elementy, jak identyfikator korelacji.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać `GetRootContext` metody.  
  
 [!code-csharp[ReceiveActivity#16](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowServiceAttributes">
      <MemberSignature Language="C#" Value="public static object GetWorkflowServiceAttributes (object dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetWorkflowServiceAttributes(object dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWorkflowServiceAttributes (dependencyObject As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetWorkflowServiceAttributes(System::Object ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetWorkflowServiceAttributes : obj -&gt; obj" Usage="System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">Obiekt, który można pobrać atrybutów usługi z.</param>
        <summary>Zwraca <see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" /> atrybuty usługi implementowany przez <see cref="T:System.Workflow.Activities.ReceiveActivity" /> działania. Te atrybuty obejmują elementy, takie jak <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode" />, <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName" />, <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults" />oraz czy ma być objęte szczegóły wyjątku wszystkie błędy, które są zwracane z <see cref="T:System.Workflow.Activities.ReceiveActivity" /> działania.</summary>
        <returns>A <see cref="T:System.Object" /> reprezentujący <see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" /> obiekt, który zawiera dane atrybutu usługi.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> Właściwość jest właściwością dołączonych zależności zdefiniowane przez <xref:System.Workflow.Activities.ReceiveActivity> działania. Ta właściwość zależności jest dołączona do głównego przepływu pracy, który zawiera <xref:System.Workflow.Activities.ReceiveActivity> przy użyciu działania <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> wywołania metody w czasie projektowania.  
  
 <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> Właściwość jest używana do definiowania atrybutów zachowania poziomu usług, które są stosowane do usługi przepływu pracy, podczas uruchamiania. Te nie można modyfikować w czasie wykonywania.  
  
> [!NOTE]
>  Jeśli bieżącego przepływu pracy, który rozpoczyna się inny przepływ pracy przy użyciu <xref:System.Workflow.Activities.InvokeWorkflowActivity> działania wywołanego przepływu pracy nie dziedziczy atrybuty usługi powinny być przekazywane wywołującemu przepływu pracy.  
  
> [!NOTE]
>  Jeśli usługa atrybuty są ustawione dla niestandardowych działań i działania znajduje się w przepływie pracy, są używane atrybuty te usługi. Atrybuty usługi są używane tylko dla działań niestandardowych, jeśli działanie niestandardowe, sama jest uruchamiane jako przepływ pracy.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać `GetWorkflowServiceAttributes` metody.  
  
 [!code-csharp[ReceiveActivity#5](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleFault">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus HandleFault(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="override this.HandleFault : System.Workflow.ComponentModel.ActivityExecutionContext * Exception -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="receiveActivity.HandleFault (executionContext, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <param name="exception">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.Initialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.Initialize : IServiceProvider -&gt; unit" Usage="receiveActivity.Initialize provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberSignature Language="F#" Value="override this.InitializeProperties : unit -&gt; unit" Usage="receiveActivity.InitializeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSequenceComplete">
      <MemberSignature Language="C#" Value="protected override void OnSequenceComplete (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSequenceComplete(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSequenceComplete (executionContext As ActivityExecutionContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSequenceComplete(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.OnSequenceComplete : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; unit" Usage="receiveActivity.OnSequenceComplete executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationValidation">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.OperationValidationEventArgs&gt; OperationValidation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.OperationValidationEventArgs&gt; OperationValidation" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.ReceiveActivity.OperationValidation" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OperationValidation As EventHandler(Of OperationValidationEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::OperationValidationEventArgs ^&gt; ^ OperationValidation;" />
      <MemberSignature Language="F#" Value="member this.OperationValidation : EventHandler&lt;System.Workflow.Activities.OperationValidationEventArgs&gt; " Usage="member this.OperationValidation : System.EventHandler&lt;System.Workflow.Activities.OperationValidationEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.SRCategory("Handlers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.OperationValidationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wiadomość zostaje odebrana w operacji i weryfikacja jest wymagana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To jest program obsługi zdarzeń opcjonalne, które jest wywoływane, gdy <xref:System.Workflow.Activities.ReceiveActivity> działania zostanie wyświetlony komunikat. Skojarzony program obsługi może służyć do sprawdzania zabezpieczeń opartych na zestawie oświadczeń autoryzacji klienta wywołania operacji usługi implementowany przez <xref:System.Workflow.Activities.ReceiveActivity> działania.  
  
 Ustawienie <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=nameWithType> do `false` w zdarzeniu obsługi odrzuca wywołania operacji usługi i klient odbierze <xref:System.ServiceModel.FaultException>. Jeśli <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=nameWithType> jest ustawiona na `true`, następnie wywołania operacji usługi zakończy się pomyślnie i <xref:System.Workflow.Activities.ReceiveActivity> działania odbiera i przetwarza wiadomości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać `OperationValidation` zdarzeń.  
  
 [!code-csharp[ReceiveActivity#7](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationValidationEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty OperationValidationEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty OperationValidationEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.ReceiveActivity.OperationValidationEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OperationValidationEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ OperationValidationEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable OperationValidationEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.ReceiveActivity.OperationValidationEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> przeznaczonego <see cref="E:System.Workflow.Activities.ReceiveActivity.OperationValidation" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zdarzenia zależności może służyć do powiązania działań receive <xref:System.Workflow.Activities.ReceiveActivity.OperationValidation> zdarzenia w celu obsługi publicznej zdarzenia w klasie przepływu pracy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterBindings : System.Workflow.ComponentModel.WorkflowParameterBindingCollection" Usage="System.Workflow.Activities.ReceiveActivity.ParameterBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję możliwej do wiązania parametrów, tak jak w programie service formalnej listy parametrów.</summary>
        <value><see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> Parametrów można powiązać.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ReceiveActivity.ParameterBindings%2A> może służyć do określenia powiązania między parametrami operacji usługi i publiczne pola/właściwości przepływu pracy, które zawierają <xref:System.Workflow.Activities.ReceiveActivity> działania. Gdy klient wywołuje operację, odpowiednie wartości parametrów są zapisywane na powiązane właściwości przepływu pracy podczas wykonywania działania odbierania.  
  
 <xref:System.Workflow.Activities.ReceiveActivity.ParameterBindings%2A> można również przez działania podrzędne działania przyjęcie wartości parametru przekazanego przez wywołania klienta. Można użyć działania podrzędne <xref:System.Workflow.Activities.ReceiveActivity.ParameterBindings%2A> kolekcji można ustawić wartość zwracaną przez nadrzędne <xref:System.Workflow.Activities.ReceiveActivity> działania.  
  
 Wszystkie parametry kontraktu usługi powinny być uwzględnione w `ParameterBindings` właściwości. Niezwiązane parametry powodują ostrzeżenia kompilatora podczas kompilacji i może wystąpić wyjątek podczas <xref:System.Workflow.Activities.ReceiveActivity> zwraca tę wiadomość do klienta.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak uzyskać dostęp do `ParameterBindings` właściwości. Ten kod został napisany `Conversations` SDK próbki z `ShipperWorkflow.designer.cs` pliku.  
  
 [!code-csharp[ReceiveActivity#3](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceOperationInfo">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.OperationInfoBase ServiceOperationInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.OperationInfoBase ServiceOperationInfo" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceOperationInfo As OperationInfoBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::OperationInfoBase ^ ServiceOperationInfo { System::Workflow::Activities::OperationInfoBase ^ get(); void set(System::Workflow::Activities::OperationInfoBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceOperationInfo : System.Workflow.Activities.OperationInfoBase with get, set" Usage="System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.OperationInfoBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Definiuje operacji kontraktu i usługi, <see cref="T:System.Workflow.Activities.ReceiveActivity" /> implementuje działania.</summary>
        <value><see cref="T:System.Workflow.Activities.OperationInfoBase" /> Obiekt, który zawiera nazwę kontraktu, typ kontraktu, operacja name, (które mogą się różnić od nazwy metody), czy operacja jest Operacja jednokierunkowa i parametry o operacji w tym informacje o metodzie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo%2A> Właściwość można ustawić na wystąpienie typu <xref:System.Workflow.Activities.TypedOperationInfo> lub <xref:System.Workflow.Activities.OperationInfo>. <xref:System.Workflow.Activities.TypedOperationInfo> można skonfigurować działanie receive, za pomocą istniejący kontrakt usługi Windows Communication Foundation (WCF).  
  
 Wystąpienie <xref:System.Workflow.Activities.OperationInfo> można skonfigurować działanie odbioru w scenariuszu kontraktu pierwszego przepływu pracy.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak uzyskać dostęp do `ServiceOperationInfo` właściwości. Ten kod został napisany `Conversations` SDK próbki z `ShipperWorkflow.designer.cs` pliku.  
  
 [!code-csharp[ReceiveActivity#4](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorkflowServiceAttributes">
      <MemberSignature Language="C#" Value="public static void SetWorkflowServiceAttributes (object dependencyObject, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWorkflowServiceAttributes(object dependencyObject, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetWorkflowServiceAttributes (dependencyObject As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetWorkflowServiceAttributes(System::Object ^ dependencyObject, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member SetWorkflowServiceAttributes : obj * obj -&gt; unit" Usage="System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes (dependencyObject, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">Obiekt, który można zastosować atrybuty usługi.</param>
        <param name="value"><see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" /> Obiekt, który zawiera dane atrybutu usługi do zastosowania.</param>
        <summary>Ustawia atrybuty usługi implementowany przez <see cref="T:System.Workflow.Activities.ReceiveActivity" /> działania. Te atrybuty obejmują elementy, takie jak <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode" />, <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName" />oraz czy ma być objęte szczegóły wyjątku wszystkie błędy, które są zwracane z <see cref="T:System.Workflow.Activities.ReceiveActivity" /> działania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> Właściwość jest właściwością dołączonych zależności zdefiniowane przez <xref:System.Workflow.Activities.ReceiveActivity> działania. Ta właściwość zależności jest dołączona do głównego przepływu pracy, który zawiera <xref:System.Workflow.Activities.ReceiveActivity> przy użyciu działania <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> wywołania metody w czasie projektowania.  
  
 <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> Właściwość jest używana do definiowania atrybutów zachowania poziomu usług, które są stosowane do usługi przepływu pracy, podczas uruchamiania. Te nie można modyfikować w czasie wykonywania.  
  
> [!NOTE]
>  Jeśli bieżącego przepływu pracy, który rozpoczyna się inny przepływ pracy przy użyciu <xref:System.Workflow.Activities.InvokeWorkflowActivity> działania wywołanego przepływu pracy nie dziedziczy atrybuty usługi powinny być przekazywane wywołującemu przepływu pracy.  
  
> [!NOTE]
>  Jeśli usługa atrybuty są ustawione dla niestandardowych działań i działania znajduje się w przepływie pracy, te atrybuty usługi nie jest używana. Atrybuty usługi są używane tylko w niestandardowych działań, jeśli działanie niestandardowe, sama jest uruchamiane jako przepływ pracy.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać `SetWorkflowServiceAttributes` metody.  
  
 [!code-csharp[ReceiveActivity#6](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.QueueName">
      <MemberSignature Language="C#" Value="IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IComparable System.Workflow.Activities.IEventActivity.QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property QueueName As IComparable Implements IEventActivity.QueueName" />
      <MemberSignature Language="C++ CLI" Value="property IComparable ^ System::Workflow::Activities::IEventActivity::QueueName { IComparable ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Workflow.Activities.IEventActivity.QueueName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.Activities.IEventActivity.QueueName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IComparable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> na której działanie oczekuje na dane do odbierania.</summary>
        <value>Nazwa <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> na której działanie oczekuje na dane do odbierania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.Subscribe">
      <MemberSignature Language="C#" Value="void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Activities.IEventActivity.Subscribe(class System.Workflow.ComponentModel.ActivityExecutionContext parentContext, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Sub Subscribe (parentContext As ActivityExecutionContext, parentEventHandler As IActivityEventListener(Of QueueEventArgs)) Implements IEventActivity.Subscribe" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Activities.IEventActivity.Subscribe(System::Workflow::ComponentModel::ActivityExecutionContext ^ parentContext, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ parentEventHandler) = System::Workflow::Activities::IEventActivity::Subscribe;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="parentEventHandler" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="parentContext"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> Reprezentujący środowiska wykonywania <see cref="T:System.Workflow.Activities.ReceiveActivity" /> działania.</param>
        <param name="parentEventHandler"><see cref="T:System.EventHandler" /> Obsługująca zdarzenia. Ta procedura obsługi zdarzeń jest właścicielem przez działanie nadrzędne.</param>
        <summary>Tworzy subskrypcję o <see cref="T:System.Workflow.Activities.ReceiveActivity" /> działania do zdarzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.Unsubscribe">
      <MemberSignature Language="C#" Value="void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Activities.IEventActivity.Unsubscribe(class System.Workflow.ComponentModel.ActivityExecutionContext parentContext, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Sub Unsubscribe (parentContext As ActivityExecutionContext, parentEventHandler As IActivityEventListener(Of QueueEventArgs)) Implements IEventActivity.Unsubscribe" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Activities.IEventActivity.Unsubscribe(System::Workflow::ComponentModel::ActivityExecutionContext ^ parentContext, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ parentEventHandler) = System::Workflow::Activities::IEventActivity::Unsubscribe;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="parentEventHandler" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="parentContext"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> Reprezentujący środowiska wykonywania <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> działania.</param>
        <param name="parentEventHandler"><see cref="T:System.EventHandler" /> Obsługująca zdarzenia. Ta procedura obsługi zdarzeń jest właścicielem przez działanie nadrzędne.</param>
        <summary>Anulowanie subskrypcji <see cref="T:System.Workflow.ComponentModel.Activity" /> ze zdarzeniem.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent">
      <MemberSignature Language="C#" Value="void IActivityEventListener&lt;QueueEventArgs&gt;.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent(object sender, class System.Workflow.ComponentModel.QueueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener&lt;System#Workflow#ComponentModel#QueueEventArgs&gt;#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnEvent (sender As Object, e As QueueEventArgs) Implements IActivityEventListener(Of QueueEventArgs).OnEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent(System::Object ^ sender, System::Workflow::ComponentModel::QueueEventArgs ^ e) = System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt;::OnEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Workflow.ComponentModel.QueueEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Obiekt, który spowodował zdarzenie.</param>
        <param name="e">Argumenty zdarzeń wcześniej wpisane.</param>
        <summary>Definiuje procedury przetwarzania po wystąpieniu zdarzenia do subskrypcji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowServiceAttributesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty WorkflowServiceAttributesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty WorkflowServiceAttributesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WorkflowServiceAttributesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ WorkflowServiceAttributesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WorkflowServiceAttributesProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> przeznaczonego <see cref="P:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> Właściwość jest właściwością dołączonych zależności zdefiniowane przez <xref:System.Workflow.Activities.ReceiveActivity> działania. Ta właściwość zależności jest dołączona do głównego przepływu pracy, który zawiera <xref:System.Workflow.Activities.ReceiveActivity> przy użyciu działania <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> wywołania metody w czasie projektowania.  
  
 <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> Właściwość jest używana do definiowania atrybutów zachowania poziomu usług, które są stosowane do usługi przepływu pracy, podczas uruchamiania. Te nie można modyfikować w czasie wykonywania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>