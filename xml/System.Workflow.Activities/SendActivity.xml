<Type Name="SendActivity" FullName="System.Workflow.Activities.SendActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9238f0f551f2efdea9af6b538562421b793067a0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69443062" /></Metadata><TypeSignature Language="C#" Value="public sealed class SendActivity : System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SendActivity extends System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.SendActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SendActivity&#xA;Inherits Activity" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendActivity sealed : System::Workflow::ComponentModel::Activity" />
  <TypeSignature Language="F#" Value="type SendActivity = class&#xA;    inherit Activity" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.SendActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.SendActivity), "Design.Resources.SendActivity.png")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.SendActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e5df5-101">Aktywność klienta, która modeluje synchroniczne wywołanie operacji usługi Windows Communication Foundation (WCF).</span><span class="sxs-lookup"><span data-stu-id="e5df5-101">Client activity that models the synchronous invocation of a Windows Communication Foundation (WCF) service operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="e5df5-102"><xref:System.Workflow.Activities.SendActivity> Działanie umożliwia uczestnictwo w konwersacji z usługą WCF przy użyciu wstępnie zdefiniowanego wzorca wymiany komunikatów.</span><span class="sxs-lookup"><span data-stu-id="e5df5-102">The <xref:System.Workflow.Activities.SendActivity> activity enables you to participate in a conversation with a WCF service using a predefined message exchange pattern.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5df5-103"><xref:System.Workflow.Activities.SendActivity> Działanie jest działaniem blokującym, co oznacza, że wykonywanie przepływu pracy jest blokowane do momentu zakończenia wykonywania działania.</span><span class="sxs-lookup"><span data-stu-id="e5df5-103">The <xref:System.Workflow.Activities.SendActivity> activity is a blocking activity, meaning that workflow execution is blocked until the activity completes execution.</span></span>  
  
 <span data-ttu-id="e5df5-104">Wzorce wymiany komunikatów obsługiwane przez <xref:System.Workflow.Activities.SendActivity> działanie obejmują:</span><span class="sxs-lookup"><span data-stu-id="e5df5-104">The message exchange patterns supported by the <xref:System.Workflow.Activities.SendActivity> activity include:</span></span>  
  
-   <span data-ttu-id="e5df5-105">Jednokierunkowa wiadomość wysyłania</span><span class="sxs-lookup"><span data-stu-id="e5df5-105">One-way Send Message</span></span>  
  
     <span data-ttu-id="e5df5-106"><xref:System.Workflow.Activities.SendActivity> Działanie wysyła komunikat, ale nie oczekuje odpowiedzi z usługi.</span><span class="sxs-lookup"><span data-stu-id="e5df5-106">The <xref:System.Workflow.Activities.SendActivity> activity sends a message but does not expect a response from the service.</span></span>  
  
-   <span data-ttu-id="e5df5-107">Wyślij żądanie — odbierz odpowiedź</span><span class="sxs-lookup"><span data-stu-id="e5df5-107">Send Request - Receive Reply</span></span>  
  
     <span data-ttu-id="e5df5-108"><xref:System.Workflow.Activities.SendActivity> Działanie wysyła komunikat i czeka na odebranie odpowiedzi z usługi.</span><span class="sxs-lookup"><span data-stu-id="e5df5-108">The <xref:System.Workflow.Activities.SendActivity> activity sends a message and waits until a response is received from the service.</span></span>  
  
-   <span data-ttu-id="e5df5-109">Żądanie wysłania — błąd odbierania</span><span class="sxs-lookup"><span data-stu-id="e5df5-109">Send Request - Receive Fault</span></span>  
  
     <span data-ttu-id="e5df5-110"><xref:System.Workflow.Activities.SendActivity> Działanie wysyła komunikat i czeka na odpowiedź lub odebranie błędu z usługi.</span><span class="sxs-lookup"><span data-stu-id="e5df5-110">The <xref:System.Workflow.Activities.SendActivity> activity sends a message and waits until a response or a fault is received from the service.</span></span> <span data-ttu-id="e5df5-111">Podczas wykonywania działanie Send zgłasza wszystkie błędy, które zostały odebrane z serwera.</span><span class="sxs-lookup"><span data-stu-id="e5df5-111">During execution, the send activity throws all of the faults that were received from the server.</span></span> <span data-ttu-id="e5df5-112"><xref:System.Workflow.ComponentModel.FaultHandlerActivity>działania mogą służyć do obsługi błędów w przepływie pracy klienta.</span><span class="sxs-lookup"><span data-stu-id="e5df5-112"><xref:System.Workflow.ComponentModel.FaultHandlerActivity> activities can be used to handle the faults in the client workflow.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5df5-113">To działanie jest częścią [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span><span class="sxs-lookup"><span data-stu-id="e5df5-113">This activity is part of [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span></span> <span data-ttu-id="e5df5-114">Aby uzyskać równoważną aktywność [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]w programie <xref:System.ServiceModel.Activities.Send>, zobacz.</span><span class="sxs-lookup"><span data-stu-id="e5df5-114">For the equivalent activity in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], see <xref:System.ServiceModel.Activities.Send>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Workflow.Activities.ReceiveActivity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e5df5-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.SendActivity" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e5df5-115">Initializes a new instance of the <see cref="T:System.Workflow.Activities.SendActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-116"><xref:System.Workflow.Activities.SendActivity> Konstruktor jest zazwyczaj wywoływany w pliku znajdującym się obok kodu utworzonym przez projektanta przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="e5df5-116">The <xref:System.Workflow.Activities.SendActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5df5-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.SendActivity" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e5df5-117">Initializes a new instance of the <see cref="T:System.Workflow.Activities.SendActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-118"><xref:System.Workflow.Activities.SendActivity> Konstruktor jest zazwyczaj wywoływany w pliku znajdującym się obok kodu utworzonym przez projektanta przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="e5df5-118">The <xref:System.Workflow.Activities.SendActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5df5-119">Poniższy przykład pokazuje, jak utworzyć nowe wystąpienie <xref:System.Workflow.Activities.SendActivity> klasy.</span><span class="sxs-lookup"><span data-stu-id="e5df5-119">The following example shows how to create a new instance of the <xref:System.Workflow.Activities.SendActivity> class.</span></span>  <span data-ttu-id="e5df5-120">Ten przykład został dostosowany z `Conversations` przykładu zestawu SDK.</span><span class="sxs-lookup"><span data-stu-id="e5df5-120">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#16](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.SendActivity : string -&gt; System.Workflow.Activities.SendActivity" Usage="new System.Workflow.Activities.SendActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e5df5-121">Wartość przypisana do <see cref="P:System.Workflow.ComponentModel.Activity.Name" /> momentu zainicjowania działania.</span><span class="sxs-lookup"><span data-stu-id="e5df5-121">The value assigned to <see cref="P:System.Workflow.ComponentModel.Activity.Name" /> when the activity is initialized.</span></span></param>
        <summary><span data-ttu-id="e5df5-122">Inicjuje nowe wystąpienie <see cref="T:System.Workflow.Activities.SendActivity" /> klasy z określoną <see langword="name" /> właściwością.</span><span class="sxs-lookup"><span data-stu-id="e5df5-122">Initializes a new instance of the <see cref="T:System.Workflow.Activities.SendActivity" /> class with the specified <see langword="name" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-123"><xref:System.Workflow.Activities.SendActivity> Konstruktor jest zazwyczaj wywoływany w pliku znajdującym się obok kodu utworzonym przez projektanta przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="e5df5-123">The <xref:System.Workflow.Activities.SendActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5df5-124">Poniższy przykład pokazuje, jak utworzyć nowe wystąpienie <xref:System.Workflow.Activities.SendActivity> klasy.</span><span class="sxs-lookup"><span data-stu-id="e5df5-124">The following example shows how to create a new instance of the <xref:System.Workflow.Activities.SendActivity> class.</span></span>  
  
 [!code-csharp[SendActivity#17](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterResponse">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; AfterResponse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.SendActivityEventArgs&gt; AfterResponse" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.SendActivity.AfterResponse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterResponse As EventHandler(Of SendActivityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::SendActivityEventArgs ^&gt; ^ AfterResponse;" />
      <MemberSignature Language="F#" Value="member this.AfterResponse : EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; " Usage="member this.AfterResponse : System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5df5-125">Występuje po odebraniu odpowiedzi z usługi.</span><span class="sxs-lookup"><span data-stu-id="e5df5-125">Occurs after the response has been received from the service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-126">Ta procedura obsługi zdarzeń skojarzona z tym zdarzeniem może służyć do odczytywania wartości zwracanej z wywołanej operacji usługi.</span><span class="sxs-lookup"><span data-stu-id="e5df5-126">This event handler associated with this event can be used to read the return value from the service operation invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5df5-127">Poniższy przykład pokazuje, `AfterResponse` jak używać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e5df5-127">The following example shows how to use the `AfterResponse` event.</span></span>  
  
 [!code-csharp[SendActivity#2](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterResponseEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty AfterResponseEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty AfterResponseEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.AfterResponseEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AfterResponseEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ AfterResponseEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable AfterResponseEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.SendActivity.AfterResponseEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5df5-128"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> Reprezentuje obiekt<see cref="E:System.Workflow.Activities.SendActivity.AfterResponse" /> docelowy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e5df5-128">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.SendActivity.AfterResponse" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-129">Ta właściwość zdarzenia zależności może służyć do powiązania <xref:System.Workflow.Activities.SendActivity.AfterResponse> zdarzenia wysłania działania z publicznym programem obsługi zdarzeń w klasie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="e5df5-129">This dependency event property can be used to bind the send activity's <xref:System.Workflow.Activities.SendActivity.AfterResponse> event to a public event handler on the workflow class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeSend">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; BeforeSend;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.SendActivityEventArgs&gt; BeforeSend" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.SendActivity.BeforeSend" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeSend As EventHandler(Of SendActivityEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::SendActivityEventArgs ^&gt; ^ BeforeSend;" />
      <MemberSignature Language="F#" Value="member this.BeforeSend : EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; " Usage="member this.BeforeSend : System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.SendActivityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5df5-130">Występuje, zanim <see cref="T:System.Workflow.Activities.SendActivity" /> działanie wyśle wiadomość do usługi.</span><span class="sxs-lookup"><span data-stu-id="e5df5-130">Occurs before the <see cref="T:System.Workflow.Activities.SendActivity" /> activity sends the message to the service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-131">Ta procedura obsługi zdarzeń skojarzona z tym zdarzeniem może służyć do ustawiania wartości parametrów dla wywoływanej operacji usługi.</span><span class="sxs-lookup"><span data-stu-id="e5df5-131">This event handler associated with this event can be used to set the parameter values for the service operation being invoked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5df5-132">Kontekstu elementu <xref:System.Workflow.Activities.SendActivity> nie można ustawić w tym obsłudze zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e5df5-132">The context of a <xref:System.Workflow.Activities.SendActivity> cannot be set in this event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5df5-133">Poniższy przykład pokazuje, `BeforeSend` jak używać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e5df5-133">The following example shows how to use the `BeforeSend` event.</span></span> <span data-ttu-id="e5df5-134">Ten przykład został dostosowany z `Conversations` przykładu zestawu SDK.</span><span class="sxs-lookup"><span data-stu-id="e5df5-134">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#3](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeSendEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty BeforeSendEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty BeforeSendEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.BeforeSendEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BeforeSendEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ BeforeSendEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable BeforeSendEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.SendActivity.BeforeSendEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5df5-135"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> Reprezentuje obiekt<see cref="E:System.Workflow.Activities.SendActivity.BeforeSend" /> docelowy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="e5df5-135">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.SendActivity.BeforeSend" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-136">Ta właściwość zdarzenia zależności może służyć do powiązania <xref:System.Workflow.Activities.SendActivity.BeforeSend> zdarzenia wysłania działania z publicznym programem obsługi zdarzeń w klasie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="e5df5-136">This dependency event property can be used to bind the send activity's <xref:System.Workflow.Activities.SendActivity.BeforeSend> event to a public event handler on the workflow class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelToken">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ChannelToken ChannelToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.ChannelToken ChannelToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.ChannelToken" />
      <MemberSignature Language="VB.NET" Value="Public Property ChannelToken As ChannelToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::ChannelToken ^ ChannelToken { System::Workflow::Activities::ChannelToken ^ get(); void set(System::Workflow::Activities::ChannelToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ChannelToken : System.Workflow.Activities.ChannelToken with get, set" Usage="System.Workflow.Activities.SendActivity.ChannelToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ChannelToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5df5-137"><see cref="T:System.Workflow.Activities.ChannelToken" />używane przez <see cref="T:System.Workflow.Activities.SendActivity" /> program do skojarzenia z kanałem klienta.</span><span class="sxs-lookup"><span data-stu-id="e5df5-137"><see cref="T:System.Workflow.Activities.ChannelToken" /> used by the <see cref="T:System.Workflow.Activities.SendActivity" /> to associate itself with a client channel.</span></span></summary>
        <value><span data-ttu-id="e5df5-138">Definiowanie kanału klienta <see cref="T:System.Workflow.Activities.SendActivity" /> , którego używa do komunikacji z usługą. <see cref="T:System.Workflow.Activities.ChannelToken" /></span><span class="sxs-lookup"><span data-stu-id="e5df5-138">A <see cref="T:System.Workflow.Activities.ChannelToken" /> defining a client channel that a <see cref="T:System.Workflow.Activities.SendActivity" /> uses to communicate with a service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-139">Token kanału określa nazwę kanału, zakres kanału oraz nazwę konfiguracji punktu końcowego, która ma zostać użyta podczas ustanawiania kanału.</span><span class="sxs-lookup"><span data-stu-id="e5df5-139">A channel token specifies the name of the channel, the scope of the channel, and the endpoint configuration name to be used in establishing the channel.</span></span> <span data-ttu-id="e5df5-140">Nazwa punktu końcowego w pliku konfiguracji zawiera informacje dotyczące adresu, powiązania i kontraktu dla usługi, z którą <xref:System.Workflow.Activities.SendActivity> komunikuje się działanie.</span><span class="sxs-lookup"><span data-stu-id="e5df5-140">The endpoint name in the configuration file has the address, binding, and contract information for a service that the <xref:System.Workflow.Activities.SendActivity> activity communicates with.</span></span>  
  
 <span data-ttu-id="e5df5-141">Token kanału określa również unikatową nazwę kanału i nazwę działania właściciela dla tokenu.</span><span class="sxs-lookup"><span data-stu-id="e5df5-141">The channel token also specifies a unique channel name and an owner activity name for the token.</span></span> <span data-ttu-id="e5df5-142">Token kanału może być współużytkowany przez wiele działań wysyłających, które chcą korzystać z tego samego punktu końcowego w celu komunikowania się z usługą.</span><span class="sxs-lookup"><span data-stu-id="e5df5-142">A channel token can be shared between multiple send activities that want to use the same endpoint to communicate with a service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5df5-143">Poniższy przykład pokazuje, `ChannelToken` jak uzyskać dostęp do właściwości.</span><span class="sxs-lookup"><span data-stu-id="e5df5-143">The following example shows how to access the `ChannelToken` property.</span></span> <span data-ttu-id="e5df5-144">Ten przykład został dostosowany z `CalculatorClient` przykładu zestawu SDK.</span><span class="sxs-lookup"><span data-stu-id="e5df5-144">This example was adapted from the `CalculatorClient` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#7](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Context" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Context { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); void set(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Collections.Generic.IDictionary&lt;string, string&gt; with get, set" Usage="System.Workflow.Activities.SendActivity.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5df5-145">Zwraca słownik zawierający kontekst używany do komunikacji między klientem a usługą, z którą komunikuje się, w tym takie elementy jak identyfikacja korelacji.</span><span class="sxs-lookup"><span data-stu-id="e5df5-145">Returns a dictionary that contains the context used for communication between the client and the service it is communicating with, including such things as identification for correlation.</span></span></summary>
        <value><span data-ttu-id="e5df5-146">Kolekcja zawierająca <see cref="T:System.Xml.XmlQualifiedName" /> klucze i skojarzone <see cref="T:System.String" /> z nimi wartości.</span><span class="sxs-lookup"><span data-stu-id="e5df5-146">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-147">Informacje kontekstu są używane na potrzeby komunikacji między klientem a usługą, z którą komunikują się, i zawierają takie elementy jak identyfikacja korelacji.</span><span class="sxs-lookup"><span data-stu-id="e5df5-147">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5df5-148">Poniższy przykład pokazuje, `Context` jak uzyskać dostęp do właściwości.</span><span class="sxs-lookup"><span data-stu-id="e5df5-148">The following example shows how to access the `Context` property.</span></span> <span data-ttu-id="e5df5-149">Ten przykład został dostosowany z `CalculatorClient` przykładu zestawu SDK.</span><span class="sxs-lookup"><span data-stu-id="e5df5-149">This example was adapted from the `CalculatorClient` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#8](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAddress">
      <MemberSignature Language="C#" Value="public string CustomAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomAddress" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.CustomAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomAddress : string with get, set" Usage="System.Workflow.Activities.SendActivity.CustomAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5df5-150">Pobiera lub ustawia niestandardowy adres używany do komunikacji z usługą.</span><span class="sxs-lookup"><span data-stu-id="e5df5-150">Gets or sets the custom address used to communicate with a service.</span></span></summary>
        <value><span data-ttu-id="e5df5-151">Wartość ciągu, której wartością jest adres, na którym nasłuchuje usługa.</span><span class="sxs-lookup"><span data-stu-id="e5df5-151">String value whose value is the address a service is listening on.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-152">Jeśli jest obecny, ta wartość jest używana do definiowania adresu punktu końcowego dla operacji.</span><span class="sxs-lookup"><span data-stu-id="e5df5-152">If present, this value is used to define the endpoint address for the operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5df5-153">Poniższy przykład pokazuje, `CustomAddress` jak uzyskać dostęp do właściwości.</span><span class="sxs-lookup"><span data-stu-id="e5df5-153">The following example shows how to access the `CustomAddress` property.</span></span> <span data-ttu-id="e5df5-154">Ten przykład został dostosowany z `CalculatorClient` przykładu zestawu SDK.</span><span class="sxs-lookup"><span data-stu-id="e5df5-154">This example was adapted from the `CalculatorClient` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#9](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAddressProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CustomAddressProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CustomAddressProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.CustomAddressProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomAddressProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CustomAddressProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomAddressProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.SendActivity.CustomAddressProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5df5-155"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> Reprezentuje<see cref="P:System.Workflow.Activities.SendActivity.CustomAddress" /> dla właściwości.</span><span class="sxs-lookup"><span data-stu-id="e5df5-155">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> for the <see cref="P:System.Workflow.Activities.SendActivity.CustomAddress" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-156">Jeśli jest obecny, ta wartość jest używana do definiowania adresu punktu końcowego dla operacji.</span><span class="sxs-lookup"><span data-stu-id="e5df5-156">If present, this value is used to define the endpoint address for the operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="sendActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetContext">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e5df5-157">Zwraca słownik zawierający kontekst używany do komunikacji między klientem a usługą, z którą komunikuje się, w tym takie elementy jak identyfikacja korelacji.</span><span class="sxs-lookup"><span data-stu-id="e5df5-157">Returns a dictionary that contains the context used for communication between the client and the service it is communicating with, including such things as identification for correlation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-158">Informacje kontekstu są używane na potrzeby komunikacji między klientem a usługą, z którą komunikują się, i zawierają takie elementy jak identyfikacja korelacji.</span><span class="sxs-lookup"><span data-stu-id="e5df5-158">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ChannelToken endpoint, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext(class System.Workflow.ComponentModel.Activity activity, class System.Workflow.Activities.ChannelToken endpoint, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext(System::Workflow::ComponentModel::Activity ^ activity, System::Workflow::Activities::ChannelToken ^ endpoint, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="static member GetContext : System.Workflow.ComponentModel.Activity * System.Workflow.Activities.ChannelToken * Type -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.SendActivity.GetContext (activity, endpoint, contractType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpoint" Type="System.Workflow.Activities.ChannelToken" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="e5df5-159">Działanie, którego informacje kontekstu są wymagane.</span><span class="sxs-lookup"><span data-stu-id="e5df5-159">Activity whose context information is required.</span></span></param>
        <param name="endpoint"><span data-ttu-id="e5df5-160">Informacje o punkcie końcowym korelacji z usługą.</span><span class="sxs-lookup"><span data-stu-id="e5df5-160">Endpoint information for correlation with a service.</span></span></param>
        <param name="contractType"><span data-ttu-id="e5df5-161"><see cref="T:System.Type" /> Umowa zaimplementowana przez usługę.</span><span class="sxs-lookup"><span data-stu-id="e5df5-161">The <see cref="T:System.Type" /> of the contract implemented by a service.</span></span></param>
        <summary><span data-ttu-id="e5df5-162">Pobiera lub ustawia informacje kontekstu dla operacji wysyłania.</span><span class="sxs-lookup"><span data-stu-id="e5df5-162">Gets or sets the context information for a send operation.</span></span></summary>
        <returns><span data-ttu-id="e5df5-163">Kolekcja zawierająca <see cref="T:System.Xml.XmlQualifiedName" /> klucze i skojarzone <see cref="T:System.String" /> z nimi wartości.</span><span class="sxs-lookup"><span data-stu-id="e5df5-163">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-164">Informacje kontekstu są używane na potrzeby komunikacji między klientem a usługą, z którą komunikują się, i zawierają takie elementy jak identyfikacja korelacji.</span><span class="sxs-lookup"><span data-stu-id="e5df5-164">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5df5-165">Poniższy przykład pokazuje, `GetContext` jak używać metody.</span><span class="sxs-lookup"><span data-stu-id="e5df5-165">The following example shows how to use the `GetContext` method.</span></span>  
  
 [!code-csharp[SendActivity#12](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext (System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext(class System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ endpointName, System::String ^ ownerActivityName, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="static member GetContext : System.Workflow.ComponentModel.Activity * string * string * Type -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.SendActivity.GetContext (activity, endpointName, ownerActivityName, contractType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="ownerActivityName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="e5df5-166">Działanie, którego informacje kontekstu są wymagane.</span><span class="sxs-lookup"><span data-stu-id="e5df5-166">Activity whose context information is required.</span></span></param>
        <param name="endpointName"><span data-ttu-id="e5df5-167">Nazwa punktu końcowego służącego do korelacji z usługą.</span><span class="sxs-lookup"><span data-stu-id="e5df5-167">Name of the endpoint used for correlation with a service.</span></span></param>
        <param name="ownerActivityName"><span data-ttu-id="e5df5-168">Nazwa działania będącego właścicielem.</span><span class="sxs-lookup"><span data-stu-id="e5df5-168">The name of the owning activity.</span></span></param>
        <param name="contractType"><span data-ttu-id="e5df5-169"><see cref="T:System.Type" /> Umowa zaimplementowana przez usługę.</span><span class="sxs-lookup"><span data-stu-id="e5df5-169">The <see cref="T:System.Type" /> of the contract implemented by a service.</span></span></param>
        <summary><span data-ttu-id="e5df5-170">Metoda statyczna zwracająca informacje kontekstu danego wystąpienia działania, nazwa punktu końcowego używana przez to działanie, nazwę działania właściciela oraz <see cref="T:System.Type" /> obiekt, który reprezentuje typ kontraktu.</span><span class="sxs-lookup"><span data-stu-id="e5df5-170">Static method that returns context information given an activity instance, an endpoint name used by that activity, the name of the owner activity, and a <see cref="T:System.Type" /> object that represents the type of the contract.</span></span></summary>
        <returns><span data-ttu-id="e5df5-171">Kolekcja zawierająca <see cref="T:System.Xml.XmlQualifiedName" /> klucze i skojarzone <see cref="T:System.String" /> z nimi wartości.</span><span class="sxs-lookup"><span data-stu-id="e5df5-171">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-172">Informacje kontekstu są używane na potrzeby komunikacji między klientem a usługą, z którą komunikują się, i zawierają takie elementy jak identyfikacja korelacji.</span><span class="sxs-lookup"><span data-stu-id="e5df5-172">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5df5-173">Poniższy przykład pokazuje, `GetContext` jak używać metody.</span><span class="sxs-lookup"><span data-stu-id="e5df5-173">The following example shows how to use the `GetContext` method.</span></span>  
  
 [!code-csharp[SendActivity#15](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberSignature Language="F#" Value="override this.InitializeProperties : unit -&gt; unit" Usage="sendActivity.InitializeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterBindings : System.Workflow.ComponentModel.WorkflowParameterBindingCollection" Usage="System.Workflow.Activities.SendActivity.ParameterBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5df5-174">Pobiera kolekcję parametrów możliwych do powiązania, które znajdują się na liście formalnych parametrów usługi Windows Communication Foundation (WCF).</span><span class="sxs-lookup"><span data-stu-id="e5df5-174">Gets the collection of bindable parameters as found in the Windows Communication Foundation (WCF) service's formal parameter list.</span></span></summary>
        <value><span data-ttu-id="e5df5-175"><see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> Parametry do powiązania.</span><span class="sxs-lookup"><span data-stu-id="e5df5-175">The <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> of parameters to bind to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-176"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A>może służyć do określania powiązań między parametrami operacji usługi i polem publicznym i właściwościami przepływu pracy <xref:System.Workflow.Activities.SendActivity> zawierającym działanie.</span><span class="sxs-lookup"><span data-stu-id="e5df5-176"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> can be used to specify bindings between the service operation parameters and public field and properties of the workflow that contains the <xref:System.Workflow.Activities.SendActivity> activity.</span></span> <span data-ttu-id="e5df5-177"><xref:System.Workflow.Activities.SendActivity> Gdy działanie jest wykonywane, odpowiednie wartości parametrów są odczytywane z właściwości przepływu pracy, do których są one powiązane i są wysyłane do usługi jako parametry operacji usługi.</span><span class="sxs-lookup"><span data-stu-id="e5df5-177">When the <xref:System.Workflow.Activities.SendActivity> activity executes, the corresponding parameter values are read from the workflow properties they are bound to and are sent to the service as service operation parameters.</span></span>  
  
 <span data-ttu-id="e5df5-178"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A>można go również użyć do pobrania wartości zwracanych z operacji usługi.</span><span class="sxs-lookup"><span data-stu-id="e5df5-178"><xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> can also be used to retrieve the return values from a service operation.</span></span>  
  
 <span data-ttu-id="e5df5-179">Wszystkie parametry operacji usługi powinny być powiązane.</span><span class="sxs-lookup"><span data-stu-id="e5df5-179">All parameters of the service operation should be bound.</span></span> <span data-ttu-id="e5df5-180">Niepowiązane parametry operacji usługi generują ostrzeżenia kompilatora i wartości domyślne parametru są wysyłane po <xref:System.Workflow.Activities.SendActivity> wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="e5df5-180">Unbound service operation parameters produce compiler warnings and the default values of the parameter are sent when the <xref:System.Workflow.Activities.SendActivity> is invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5df5-181">Poniższy przykład pokazuje, `ParameterBindings` jak uzyskać dostęp do właściwości.</span><span class="sxs-lookup"><span data-stu-id="e5df5-181">The following example shows how to access the `ParameterBindings` property.</span></span> <span data-ttu-id="e5df5-182">Ten przykład został dostosowany z `Conversations` przykładu zestawu SDK.</span><span class="sxs-lookup"><span data-stu-id="e5df5-182">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#0](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnValuePropertyName">
      <MemberSignature Language="C#" Value="public const string ReturnValuePropertyName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ReturnValuePropertyName" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.SendActivity.ReturnValuePropertyName" />
      <MemberSignature Language="VB.NET" Value="Public Const ReturnValuePropertyName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ReturnValuePropertyName;" />
      <MemberSignature Language="F#" Value="val mutable ReturnValuePropertyName : string" Usage="System.Workflow.Activities.SendActivity.ReturnValuePropertyName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5df5-183">Nazwa właściwości, która jest używana dla wartości zwracanej przez usługę, z którą <see langword="SendActivity" /> komunikuje się działanie.</span><span class="sxs-lookup"><span data-stu-id="e5df5-183">Name of the property that is used for the return value sent by the service that the <see langword="SendActivity" /> activity is communicating with.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-184">Ten ciąg może służyć do pobierania wartości zwracanej z <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> <xref:System.Workflow.Activities.SendActivity> działania skojarzonego z działaniem w <xref:System.Workflow.Activities.SendActivity.AfterResponse> obsłudze zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="e5df5-184">This string can be used to retrieve the return value from the <xref:System.Workflow.Activities.SendActivity.ParameterBindings%2A> associated with the <xref:System.Workflow.Activities.SendActivity> activity in the <xref:System.Workflow.Activities.SendActivity.AfterResponse> event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5df5-185">Poniższy przykład pokazuje, `ReturnValuePropertyName` jak uzyskać dostęp do pola.</span><span class="sxs-lookup"><span data-stu-id="e5df5-185">The following example shows how to access the `ReturnValuePropertyName` field.</span></span>  
  
 [!code-csharp[SendActivity#6](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceOperationInfo">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.TypedOperationInfo ServiceOperationInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.TypedOperationInfo ServiceOperationInfo" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.SendActivity.ServiceOperationInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceOperationInfo As TypedOperationInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::TypedOperationInfo ^ ServiceOperationInfo { System::Workflow::Activities::TypedOperationInfo ^ get(); void set(System::Workflow::Activities::TypedOperationInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceOperationInfo : System.Workflow.Activities.TypedOperationInfo with get, set" Usage="System.Workflow.Activities.SendActivity.ServiceOperationInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.TypedOperationInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5df5-186">Definiuje kontrakt i działanie usługi, z którą <see langword="SendActivity" /> komunikuje się działanie.</span><span class="sxs-lookup"><span data-stu-id="e5df5-186">Defines the contract and operation of the service that the <see langword="SendActivity" /> activity communicates with.</span></span></summary>
        <value><span data-ttu-id="e5df5-187"><see cref="T:System.Workflow.Activities.TypedOperationInfo" /> Obiekt, który zawiera nazwę kontraktu, typ kontraktu, nazwę operacji (która może różnić się od rzeczywistej nazwy metody), czy operacja jest operacją jednokierunkową, oraz informacje o metodzie, w tym parametry dotyczące operacji.</span><span class="sxs-lookup"><span data-stu-id="e5df5-187">A <see cref="T:System.Workflow.Activities.TypedOperationInfo" /> object that contains the contract name, the contract type, the operation name, (which may be distinct from the actual method name), whether the operation is a one-way operation, and method information including parameters about the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-188"><xref:System.Workflow.Activities.SendActivity> Działanie zawsze odwołuje się do istniejącego kontraktu i jego zdefiniowanych operacji.</span><span class="sxs-lookup"><span data-stu-id="e5df5-188">The <xref:System.Workflow.Activities.SendActivity> activity always refers to an existing contract and its defined operations.</span></span> <span data-ttu-id="e5df5-189">Nie istnieje możliwość <xref:System.Workflow.Activities.SendActivity> zdefiniowania kontraktu.</span><span class="sxs-lookup"><span data-stu-id="e5df5-189">There is no provision that allows a <xref:System.Workflow.Activities.SendActivity> activity to define a contract itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5df5-190">Poniższy przykład pokazuje, `ServiceOperationInfo` jak uzyskać dostęp do właściwości.</span><span class="sxs-lookup"><span data-stu-id="e5df5-190">The following example shows how to access the `ServiceOperationInfo` property.</span></span> <span data-ttu-id="e5df5-191">Ten przykład został dostosowany z `Conversations` przykładu zestawu SDK.</span><span class="sxs-lookup"><span data-stu-id="e5df5-191">This example was adapted from the `Conversations` SDK sample.</span></span>  
  
 [!code-csharp[SendActivity#1](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetContext">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e5df5-192">Ustawia informacje kontekstu dla <see cref="T:System.Workflow.Activities.SendActivity" /> działania.</span><span class="sxs-lookup"><span data-stu-id="e5df5-192">Sets context information for a <see cref="T:System.Workflow.Activities.SendActivity" /> activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-193">Informacje kontekstu są używane na potrzeby komunikacji między klientem a usługą, z którą komunikują się, i zawierają takie elementy jak identyfikacja korelacji.</span><span class="sxs-lookup"><span data-stu-id="e5df5-193">Context information is used for communication between the client and the service it is communicating and includes such things as identification for correlation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public static void SetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ChannelToken endpoint, Type contractType, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetContext(class System.Workflow.ComponentModel.Activity activity, class System.Workflow.Activities.ChannelToken endpoint, class System.Type contractType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ChannelToken,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetContext(System::Workflow::ComponentModel::Activity ^ activity, System::Workflow::Activities::ChannelToken ^ endpoint, Type ^ contractType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="static member SetContext : System.Workflow.ComponentModel.Activity * System.Workflow.Activities.ChannelToken * Type * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="System.Workflow.Activities.SendActivity.SetContext (activity, endpoint, contractType, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpoint" Type="System.Workflow.Activities.ChannelToken" />
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="e5df5-194">Wystąpienie działania umożliwiające skojarzenie informacji kontekstu z.</span><span class="sxs-lookup"><span data-stu-id="e5df5-194">The Activity instance to associate the context information with.</span></span></param>
        <param name="endpoint"><span data-ttu-id="e5df5-195">Punkt końcowy używany do korelacji z usługą.</span><span class="sxs-lookup"><span data-stu-id="e5df5-195">The endpoint used for correlation with a service.</span></span></param>
        <param name="contractType"><span data-ttu-id="e5df5-196"><see cref="T:System.Type" /> Umowa zaimplementowana przez usługę.</span><span class="sxs-lookup"><span data-stu-id="e5df5-196">The <see cref="T:System.Type" /> of the contract implemented by a service.</span></span></param>
        <param name="context"><span data-ttu-id="e5df5-197">Informacje kontekstowe do ustawienia.</span><span class="sxs-lookup"><span data-stu-id="e5df5-197">The context information to set.</span></span></param>
        <summary><span data-ttu-id="e5df5-198">Metoda statyczna, która ustawia informacje kontekstu dla <see cref="T:System.Workflow.Activities.SendActivity" /> działania, w danym wystąpieniu działania, punkt końcowy używany przez to działanie <see cref="T:System.Type" /> , obiekt, który reprezentuje typ kontraktu i sama informacje kontekstowe.</span><span class="sxs-lookup"><span data-stu-id="e5df5-198">A static method that sets context information for a <see cref="T:System.Workflow.Activities.SendActivity" /> activity, given an activity instance, an endpoint used by that activity, a <see cref="T:System.Type" /> object that represents the type of the contract, and the context information itself.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5df5-199">Informacje kontekstu są używane na potrzeby komunikacji między klientem a usługą, z którą komunikują się, i zawierają takie elementy jak identyfikacja korelacji.</span><span class="sxs-lookup"><span data-stu-id="e5df5-199">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5df5-200">Poniższy przykład pokazuje, `SetContext` jak używać metody.</span><span class="sxs-lookup"><span data-stu-id="e5df5-200">The following example shows how to use the `SetContext` method.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public static void SetContext (System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, Type contractType, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetContext(class System.Workflow.ComponentModel.Activity activity, string endpointName, string ownerActivityName, class System.Type contractType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.SendActivity.SetContext(System.Workflow.ComponentModel.Activity,System.String,System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetContext(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ endpointName, System::String ^ ownerActivityName, Type ^ contractType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="static member SetContext : System.Workflow.ComponentModel.Activity * string * string * Type * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="System.Workflow.Activities.SendActivity.SetContext (activity, endpointName, ownerActivityName, contractType, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="ownerActivityName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="e5df5-201">Wystąpienie działania umożliwiające skojarzenie informacji kontekstu z.</span><span class="sxs-lookup"><span data-stu-id="e5df5-201">The Activity instance to associate the context information with.</span></span></param>
        <param name="endpointName"><span data-ttu-id="e5df5-202">Nazwa punktu końcowego służącego do korelacji z usługą.</span><span class="sxs-lookup"><span data-stu-id="e5df5-202">The name of an endpoint used for correlation with a service.</span></span></param>
        <param name="ownerActivityName"><span data-ttu-id="e5df5-203">Nazwa działania będącego właścicielem</span><span class="sxs-lookup"><span data-stu-id="e5df5-203">The name of the owning activity</span></span></param>
        <param name="contractType"><span data-ttu-id="e5df5-204"><see cref="T:System.Type" /> Umowa zaimplementowana przez usługę.</span><span class="sxs-lookup"><span data-stu-id="e5df5-204">The <see cref="T:System.Type" /> of the contract implemented by a service.</span></span></param>
        <param name="context"><span data-ttu-id="e5df5-205">Informacje kontekstowe do ustawienia.</span><span class="sxs-lookup"><span data-stu-id="e5df5-205">The context information to set.</span></span></param>
        <summary><span data-ttu-id="e5df5-206">Metoda statyczna, która ustawia informacje kontekstu dla <see cref="T:System.Workflow.Activities.SendActivity" /> działania, dane wystąpienie działania, nazwę punktu końcowego używanego przez to działanie, nazwę działania właściciela <see cref="T:System.Type" /> , obiekt, który reprezentuje typ kontraktu i kontekst same informacje.</span><span class="sxs-lookup"><span data-stu-id="e5df5-206">A static method that sets context information for a <see cref="T:System.Workflow.Activities.SendActivity" /> activity, given an activity instance, an endpoint name used by that activity, the name of the owner activity, a <see cref="T:System.Type" /> object that represents the type of the contract, and the context information itself.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e5df5-207">Poniższy przykład pokazuje, `SetContext` jak używać metody.</span><span class="sxs-lookup"><span data-stu-id="e5df5-207">The following example shows how to use the `SetContext` method.</span></span>  
  
 [!code-csharp[SendActivity#15](~/samples/snippets/csharp/VS_Snippets_CFX/sendactivity/cs/snippets.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
