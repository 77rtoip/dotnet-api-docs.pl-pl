<Type Name="EventDrivenActivity" FullName="System.Workflow.Activities.EventDrivenActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7520665f5f985267100001dd8cea33c3e8890eb" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69431766" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventDrivenActivity : System.Workflow.Activities.SequenceActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventDrivenActivity extends System.Workflow.Activities.SequenceActivity" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.EventDrivenActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventDrivenActivity&#xA;Inherits SequenceActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventDrivenActivity sealed : System::Workflow::Activities::SequenceActivity" />
  <TypeSignature Language="F#" Value="type EventDrivenActivity = class&#xA;    inherit SequenceActivity" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Activities.SequenceActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.EventDrivenDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.EventDrivenActivity), "Resources.EventDriven.png")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.EventDrivenValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawija, <see cref="T:System.Workflow.ComponentModel.Activity" /> którego wykonywanie jest inicjowane przez zdarzenie. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Jest <xref:System.Workflow.ComponentModel.CompositeActivity> to, który jest używany do obsługi zdarzenia; zazwyczaj może zostać zgłoszony z hosta lub przez środowisko uruchomieniowe w odpowiedzi na czasomierz opóźnienia. <xref:System.Workflow.Activities.EventDrivenActivity>jest Dziedziczony z <xref:System.Workflow.Activities.SequenceActivity>; w związku z tym jest sekwencją, która ma dodatkowe ograniczenie, które powinno <xref:System.Workflow.Activities.IEventActivity>być pierwszym działaniem.  
  
 Jest to, co oznacza <xref:System.Workflow.Activities.EventDrivenActivity> , że mogą zawierać inne działania. <xref:System.Workflow.ComponentModel.CompositeActivity> <xref:System.Workflow.Activities.EventDrivenActivity> <xref:System.Workflow.Activities.EventDrivenActivity> Jest podobny<xref:System.Workflow.Activities.SequenceActivity> do działania z niektórymi dodatkowymi cechami.  
  
 Musi mieć element nadrzędny <xref:System.Workflow.Activities.ListenActivity>, który ma wartość, <xref:System.Workflow.Activities.StateActivity>lub <xref:System.Workflow.Activities.StateMachineWorkflowActivity>. <xref:System.Workflow.Activities.EventDrivenActivity>  
  
 Pierwszym elementem podrzędnym <xref:System.Workflow.Activities.EventDrivenActivity> działania musi być działanie, które dziedziczy po <xref:System.Workflow.Activities.IEventActivity>elemencie. Wszystkie kolejne elementy podrzędne mogą być działaniami dowolnego typu. <xref:System.Workflow.Activities.IEventActivity> Bloki i czeka na oczekujące wystąpienia niektórych zdarzeń, takie jak uruchomienie czasomierza lub nadejście komunikatu. Po wystąpieniu zdarzenia <xref:System.Workflow.Activities.IEventActivity> kończy działanie, a następnie wykonywane są wszystkie kolejne działania.  
  
 <xref:System.Workflow.Activities.StateMachineWorkflowActivity> Gdy zawiera,<xref:System.Workflow.Activities.EventDrivenActivity>mapewneograniczenia: <xref:System.Workflow.Activities.EventDrivenActivity>  
  
-   Może zawierać jeden i tylko jedno działanie typu <xref:System.Workflow.Activities.IEventActivity>. <xref:System.Workflow.Activities.EventDrivenActivity>  
  
-   Wartość <xref:System.Workflow.Activities.HandleExternalEventActivity> musi być pierwszym działaniem podrzędnym. Nie może znajdować się w obsłudze zdarzeń dla działania podrzędnego i nie może być elementem <xref:System.Workflow.Activities.EventDrivenActivity> podrzędnym <xref:System.Workflow.Activities.HandleExternalEventActivity> elementu, jeśli nie jest pierwszym elementem podrzędnym. <xref:System.Workflow.Activities.HandleExternalEventActivity>  
  
-   Tak długo <xref:System.Workflow.Activities.HandleExternalEventActivity>, jak pierwsze działanie to, program obsługi zdarzeń może zawierać wszystkie działania. Jeśli działanie inne niż <xref:System.Workflow.Activities.HandleExternalEventActivity> jest zawarte w <xref:System.Workflow.Activities.EventDrivenActivity>, to działanie nie może mieć programu obsługi zdarzeń.  
  
 Na przykład działanie obsługujące obsługę zdarzeń może być używane wewnątrz, <xref:System.Workflow.Activities.EventDrivenActivity> ale działanie nie może być dołączone do samego siebie obsługi zdarzeń.  
  
 Innym przykładem jest to <xref:System.Workflow.Activities.EventDrivenActivity> <xref:System.Workflow.Activities.ConditionedActivityGroup>, że może zawierać, ale <xref:System.Workflow.Activities.ConditionedActivityGroup> nie może zawierać żadnych <xref:System.Workflow.Activities.HandleExternalEventActivity> klas.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak za pomocą programu <xref:System.Workflow.Activities.EventDrivenActivity> wykonać przejścia stanu komputera. Ten przykład kodu jest częścią przykładu zestawu SDK SimpleStateMachineWorkflow z pliku StateMachineWorkflow.cs. Aby uzyskać więcej informacji, zobacz temat [prosta automat State](https://msdn.microsoft.com/library/1974edbd-253d-4e01-9095-38ff9c3e749e).  
  
 [!code-csharp[wf_samples#185](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#185)]
 [!code-vb[wf_samples#185](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#185)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734657(v=vs.90)">Korzystanie z działania EventDriven</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.EventDrivenActivity" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventDrivenActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.EventDrivenActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventDrivenActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.EventDrivenActivity" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć nowe wystąpienie <xref:System.Workflow.Activities.EventDrivenActivity> klasy.  Ten przykład kodu jest częścią przykładu zestawu SDK SimpleStateMachineWorkflow z pliku StateMachineWorkflow.cs. Aby uzyskać więcej informacji, zobacz temat [prosta automat State](https://msdn.microsoft.com/library/1974edbd-253d-4e01-9095-38ff9c3e749e).  
  
 [!code-csharp[wf_samples#187](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#187)]
 [!code-vb[wf_samples#187](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#187)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734657(v=vs.90)">Korzystanie z działania EventDriven</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventDrivenActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventDrivenActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.EventDrivenActivity : string -&gt; System.Workflow.Activities.EventDrivenActivity" Usage="new System.Workflow.Activities.EventDrivenActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Zdefiniowana przez użytkownika nazwa działania.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Workflow.Activities.EventDrivenActivity" /> klasy przy użyciu nazwy działania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventActivity">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.IEventActivity EventActivity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.IEventActivity EventActivity" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.EventDrivenActivity.EventActivity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventActivity As IEventActivity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::IEventActivity ^ EventActivity { System::Workflow::Activities::IEventActivity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventActivity : System.Workflow.Activities.IEventActivity" Usage="System.Workflow.Activities.EventDrivenActivity.EventActivity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.IEventActivity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera działanie zdarzenia, które kieruje zmianę.</summary>
        <value>Działanie zdarzenia, które steruje zmianą.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734657(v=vs.90)">Korzystanie z działania EventDriven</related>
      </Docs>
    </Member>
  </Members>
</Type>
