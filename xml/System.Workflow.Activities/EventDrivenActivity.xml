<Type Name="EventDrivenActivity" FullName="System.Workflow.Activities.EventDrivenActivity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ba80b43cd3f4735027f698f140dcc624ea89b606" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
    <Meta Name="ms.locfileid" Value="32090192" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventDrivenActivity : System.Workflow.Activities.SequenceActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventDrivenActivity extends System.Workflow.Activities.SequenceActivity" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.EventDrivenActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventDrivenActivity&#xA;Inherits SequenceActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventDrivenActivity sealed : System::Workflow::Activities::SequenceActivity" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Activities.SequenceActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.EventDrivenDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.EventDrivenActivity), "Resources.EventDriven.png")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.EventDrivenValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Opakowuje <see cref="T:System.Workflow.ComponentModel.Activity" /> których wykonywania jest inicjowany przez zdarzenie. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Jest <xref:System.Workflow.ComponentModel.CompositeActivity> używany do obsługi zdarzenia; zazwyczaj może zostać wywołane z hosta lub w czasie wykonywania w odpowiedzi na czasomierz opóźnienie wygasa. <xref:System.Workflow.Activities.EventDrivenActivity> jest odziedziczone <xref:System.Workflow.Activities.SequenceActivity>; w związku z tym jest sekwencję, która ma dodatkowe ograniczenie, który ma być pierwsze działanie <xref:System.Workflow.Activities.IEventActivity>.  
  
 <xref:System.Workflow.Activities.EventDrivenActivity> Jest <xref:System.Workflow.ComponentModel.CompositeActivity>, co oznacza, że <xref:System.Workflow.Activities.EventDrivenActivity> może zawierać innych działań. <xref:System.Workflow.Activities.EventDrivenActivity> Jest podobny do <xref:System.Workflow.Activities.SequenceActivity> działania, o niektórych dodatkowych właściwości.  
  
 <xref:System.Workflow.Activities.EventDrivenActivity> Musi mieć element nadrzędny, który jest albo <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.StateActivity>, lub <xref:System.Workflow.Activities.StateMachineWorkflowActivity>.  
  
 Pierwszy element podrzędny elementu <xref:System.Workflow.Activities.EventDrivenActivity> działanie musi być działanie, które dziedziczy <xref:System.Workflow.Activities.IEventActivity>. Wszystkie kolejne elementy podrzędne można działania dowolnego typu. <xref:System.Workflow.Activities.IEventActivity> Blokuje i czeka na wystąpienie oczekujące niektóre zdarzenia, takie jak uruchamianie czasomierza lub nadejściu wiadomości. Po wystąpieniu zdarzenia, <xref:System.Workflow.Activities.IEventActivity> zakończeniu uruchomiona, a następnie wszystkie kolejne działania są wykonywane.  
  
 Gdy <xref:System.Workflow.Activities.StateMachineWorkflowActivity> zawiera <xref:System.Workflow.Activities.EventDrivenActivity>, <xref:System.Workflow.Activities.EventDrivenActivity> ma pewne ograniczenia:  
  
-   <xref:System.Workflow.Activities.EventDrivenActivity> Może zawierać jeden i tylko jeden działania typu <xref:System.Workflow.Activities.IEventActivity>.  
  
-   <xref:System.Workflow.Activities.HandleExternalEventActivity> Musi być pierwsze działanie podrzędne. <xref:System.Workflow.Activities.HandleExternalEventActivity> Nie może być zdarzeń programu obsługi dla działania podrzędne i nie może być elementem podrzędnym do <xref:System.Workflow.Activities.EventDrivenActivity> Jeśli <xref:System.Workflow.Activities.HandleExternalEventActivity> nie jest pierwszym elementem podrzędnym.  
  
-   Tak długo, jak jest pierwsze działanie <xref:System.Workflow.Activities.HandleExternalEventActivity>, program obsługi zdarzeń może zawierać żadnych działań. Jeśli działanie innych niż <xref:System.Workflow.Activities.HandleExternalEventActivity> znajduje się w <xref:System.Workflow.Activities.EventDrivenActivity>, że działanie nie może mieć program obsługi zdarzeń.  
  
 Na przykład to działanie, które obsługuje obsługi zdarzeń może być używany w <xref:System.Workflow.Activities.EventDrivenActivity> , ale działanie nie może być dołączone do samego siebie programów obsługi zdarzeń.  
  
 Innym przykładem jest to, że <xref:System.Workflow.Activities.EventDrivenActivity> może zawierać <xref:System.Workflow.Activities.ConditionedActivityGroup>, ale <xref:System.Workflow.Activities.ConditionedActivityGroup> sam nie może zawierać żadnego <xref:System.Workflow.Activities.HandleExternalEventActivity> klasy.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia <xref:System.Workflow.Activities.EventDrivenActivity> do wykonania przejścia stanów polecenie maszyny. Ten przykładowy kod jest częścią zestawu SDK SimpleStateMachineWorkflow próbki z pliku StateMachineWorkflow.cs. Aby uzyskać więcej informacji, zobacz [proste automatu stanów](http://msdn.microsoft.com/library/1974edbd-253d-4e01-9095-38ff9c3e749e).  
  
 [!code-csharp[wf_samples#185](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#185)]
 [!code-vb[wf_samples#185](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#185)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.EventDrivenActivity" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventDrivenActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.EventDrivenActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventDrivenActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.EventDrivenActivity" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć nowe wystąpienie klasy <xref:System.Workflow.Activities.EventDrivenActivity> klasy.  Ten przykładowy kod jest częścią zestawu SDK SimpleStateMachineWorkflow próbki z pliku StateMachineWorkflow.cs. Aby uzyskać więcej informacji, zobacz [proste automatu stanów](http://msdn.microsoft.com/library/1974edbd-253d-4e01-9095-38ff9c3e749e).  
  
 [!code-csharp[wf_samples#187](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#187)]
 [!code-vb[wf_samples#187](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#187)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventDrivenActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventDrivenActivity(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Określone przez użytkownika nazwa działania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.EventDrivenActivity" /> przy użyciu nazwy działania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventActivity">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.IEventActivity EventActivity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.IEventActivity EventActivity" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.EventDrivenActivity.EventActivity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventActivity As IEventActivity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::IEventActivity ^ EventActivity { System::Workflow::Activities::IEventActivity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.IEventActivity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera działanie zdarzeń, które dyski zmiany.</summary>
        <value>Działanie zdarzenia dyski zmiany.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>