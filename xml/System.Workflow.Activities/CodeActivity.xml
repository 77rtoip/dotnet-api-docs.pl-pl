<Type Name="CodeActivity" FullName="System.Workflow.Activities.CodeActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba7bddbf572fe90dd51ef2647077610b99d474d6" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55345072" /></Metadata><TypeSignature Language="C#" Value="public sealed class CodeActivity : System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CodeActivity extends System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.CodeActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CodeActivity&#xA;Inherits Activity" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeActivity sealed : System::Workflow::ComponentModel::Activity" />
  <TypeSignature Language="F#" Value="type CodeActivity = class&#xA;    inherit Activity" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ExecuteCode")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.CodeDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.CodeActivity), "Resources.code.png")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.CodeActivity/CodeActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Uruchamia metodę obok kodu skojarzonych z działaniem. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Obok kodu metody wywoływane przez <xref:System.Workflow.Activities.CodeActivity> są wykonywane w sposób synchroniczne. <xref:System.Workflow.Activities.CodeActivity> nie przekazuje jego wątku zakończenie wątku. W związku z tym wykonywanie metody obok kodu powinien być wykonywane i nie powinny blokować z zależnością od niektórych zasobów zewnętrznych. Na przykład kod obok należy zwykle nie wywołania metody usługi sieci Web.  
  
 Typowym zastosowaniem <xref:System.Workflow.Activities.CodeActivity> jest badanie stanu wystąpienia przepływu pracy i zmienić zmienne lokalne i komunikatów.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734415(v=vs.90)">Przy użyciu działania kodu</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.CodeActivity" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CodeActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.CodeActivity" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć nowe wystąpienie klasy <xref:System.Workflow.Activities.CodeActivity> klasy.  Przykładowy kod tworzy także nowe wystąpienia <xref:System.Workflow.Activities.CodeCondition> i <xref:System.Workflow.Activities.ConditionedActivityGroup> klasy. Ten przykład kodu jest częścią zestawu SDK grupy ConditionedActivityGroup próbki z pliku SimpleCAGWorkflow.designer.cs. Aby uzyskać więcej informacji, zobacz [przy użyciu grupy ConditionedActivityGroup](https://msdn.microsoft.com/library/5a0b7e9e-def5-46b2-acbb-0005e1aff984).  
  
```csharp  
private ConditionedActivityGroup BookingCAG;  
private CodeActivity Car;  
private CodeActivity Airline;  
  
this.CanModifyActivities = true;  
CodeCondition codecondition1 = new CodeCondition();  
CodeCondition codecondition2 = new CodeCondition();  
this.BookingCAG = new ConditionedActivityGroup();  
this.Car = new CodeActivity();  
this.Airline = new CodeActivity();  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734415(v=vs.90)">Przy użyciu działania kodu</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CodeActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.CodeActivity : string -&gt; System.Workflow.Activities.CodeActivity" Usage="new System.Workflow.Activities.CodeActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Zdefiniowana przez użytkownika nazwa działania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Activities.CodeActivity" /> klasy przy użyciu nazwy działania.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734415(v=vs.90)">Przy użyciu działania kodu</related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CodeActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="codeActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCode">
      <MemberSignature Language="C#" Value="public event EventHandler ExecuteCode;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ExecuteCode" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.CodeActivity.ExecuteCode" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ExecuteCode As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ExecuteCode;" />
      <MemberSignature Language="F#" Value="member this.ExecuteCode : EventHandler " Usage="member this.ExecuteCode : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Workflow.Activities.CodeActivity" /> rozpoczyna się.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy kod ilustruje sposób używania <xref:System.Workflow.Activities.CodeActivity.ExecuteCode> zdarzeń. Ten przykład kodu jest częścią przykładowe SDK odszkodowania z pliku PurchaseOrder.cs. Aby uzyskać więcej informacji, zobacz [odszkodowania za pomocą](https://msdn.microsoft.com/library/c847a694-9978-46af-aa80-5bd1833f813b).  
  
 [!code-csharp[WF_Samples#155](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#155)]
 [!code-vb[WF_Samples#155](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#155)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734415(v=vs.90)">Przy użyciu działania kodu</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCodeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ExecuteCodeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ExecuteCodeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CodeActivity.ExecuteCodeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExecuteCodeEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ExecuteCodeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExecuteCodeEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CodeActivity.ExecuteCodeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> przeznaczonego <see cref="E:System.Workflow.Activities.CodeActivity.ExecuteCode" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć nowe wystąpienie klasy <xref:System.Workflow.Activities.CodeActivity> i określ Obsługa <xref:System.Workflow.Activities.CodeActivity.ExecuteCode> zdarzeń.  
  
 [!code-csharp[WF_Samples#311](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets38.cs#311)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734415(v=vs.90)">Przy użyciu działania kodu</related>
      </Docs>
    </Member>
  </Members>
</Type>