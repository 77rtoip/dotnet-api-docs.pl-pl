<Type Name="WebService" FullName="System.Web.Services.WebService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="98f929cd9afc4e38125d09e5d11fc4a420dc5aad" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69256994" /></Metadata><TypeSignature Language="C#" Value="public class WebService : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebService extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebService" />
  <TypeSignature Language="VB.NET" Value="Public Class WebService&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebService : System::ComponentModel::MarshalByValueComponent" />
  <TypeSignature Language="F#" Value="type WebService = class&#xA;    inherit MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiuje opcjonalną klasę bazową dla usług sieci Web XML, która zapewnia bezpośredni dostęp do wspólnych obiektów ASP.NET, takich jak aplikacja i stan sesji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie potrzebujesz dostępu do wspólnych obiektów ASP.NET, nadal możesz utworzyć usługę sieci Web XML bez wyznaczania z <xref:System.Web.Services.WebService>programu. Do dodatkowych obiektów ASP.NET można uzyskać dostęp <xref:System.Web.Services.WebService.Context%2A>za poorednictwem.  
  
 Metody usługi sieci Web XML, które <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> mają właściwość <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> lub <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> ustawioną na `true`, nie mają dostępu do ich <xref:System.Web.HttpContext>. W związku z tym uzyskiwanie dostępu do dowolnych właściwości <xref:System.Web.Services.WebService> klasy z poziomu tej metody usługi sieci Web XML zwraca `null`wartość.  
  
 W przypadku korzystania z metod usługi sieci Web .NET Framework w wersji 1,0 XML, do których <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> zastosowano atrybut lub <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> , z właściwością ustawioną na `true`, nie ma dostępu do ich <xref:System.Web.HttpContext> przy użyciu Właściwość <xref:System.Web.HttpContext.Current%2A> statyczna. Aby uzyskać dostęp <xref:System.Web.HttpContext>do programu, należy utworzyć klasę implementującą metodę usługi sieci <xref:System.Web.Services.WebService> Web XML z <xref:System.Web.Services.WebService.Context%2A> i uzyskać dostęp do właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie zostanie utworzona usługa sieci Web XML, która wyprowadza <xref:System.Web.Services.WebService>z programu, aby można było <xref:System.Web.Services.WebService.Context%2A> użyć właściwości w celu uzyskania czasu żądania na serwerze.  
  
 [!code-aspx-csharp[Classic WebService Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebService Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic WebService Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebService Example/VB/sourcevb.asmx)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Services.WebService" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Application { System::Web::HttpApplicationState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : System.Web.HttpApplicationState" Usage="System.Web.Services.WebService.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("The ASP.NET application object for the current request.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt aplikacji dla bieżącego żądania HTTP.</summary>
        <value><see cref="T:System.Web.HttpApplicationState" /> Obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usługi sieci Web XML mogą używać zarówno stanu aplikacji, jak i stanu sesji. Stan aplikacji jest obsługiwany przez wszystkie sesje uzyskujący dostęp do usługi sieci Web XML niezależnie od tego, czy stan sesji jest wyłączony dla metody (za pomocą <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> właściwości <xref:System.Web.Services.WebMethodAttribute>).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano licznik trafień zwiększający liczbę za każdym razem, gdy przeglądarka wywołuje metodę usługi sieci Web XML.  
  
 [!code-aspx-csharp[Classic WebService.Application Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebService.Application Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic WebService.Application Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebService.Application Example/VB/sourcevb.asmx)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpApplicationState" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Web.HttpContext" Usage="System.Web.Services.WebService.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ASP.NET <see cref="T:System.Web.HttpContext" /> dla bieżącego żądania, który hermetyzuje wszystkie konteksty specyficzne dla protokołu HTTP używane przez serwer HTTP do przetwarzania żądań sieci Web.</summary>
        <value>ASP.NET <see cref="T:System.Web.HttpContext" /> dla bieżącego żądania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metody usługi sieci Web XML, do których <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> zastosowano atrybut lub <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> , z właściwością ustawioną na `true`, nie mają dostępu do ich <xref:System.Web.HttpContext> przy użyciu właściwości statycznej <xref:System.Web.HttpContext.Current%2A> . Aby uzyskać dostęp <xref:System.Web.HttpContext>do programu, należy utworzyć klasę implementującą metodę usługi sieci <xref:System.Web.Services.WebService> Web XML z <xref:System.Web.Services.WebService.Context%2A> i uzyskać dostęp do właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Web.Services.WebService.Context%2A> właściwość, aby uzyskać godzinę żądania na serwerze.  
  
 [!code-aspx-csharp[Classic WebService Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebService Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic WebService Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebService Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><paramref name="Context" />jest <see langword="null" />.</exception>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Web.HttpServerUtility Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtility Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As HttpServerUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpServerUtility ^ Server { System::Web::HttpServerUtility ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Web.HttpServerUtility" Usage="System.Web.Services.WebService.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.HttpServerUtility" /> Pobiera dla bieżącego żądania.</summary>
        <value><see cref="T:System.Web.HttpServerUtility" /> Obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa zawiera kilka metod, które mogą być używane podczas przetwarzania żądań sieci Web, w tym <xref:System.Web.HttpServerUtility.CreateObject%2A> (dla tworzenia wystąpień obiektów com). <xref:System.Web.HttpServerUtility>  
  
   
  
## Examples  
 Poniższy przykład zwraca nazwę komputera serwera sieci Web przy użyciu <xref:System.Web.Services.WebService.Server%2A> właściwości.  
  
 [!code-aspx-csharp[Classic WebService.Server Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebService.Server Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic WebService.Server Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebService.Server Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpServerUtility" />
        <altmember cref="M:System.Web.HttpServerUtility.CreateObject(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Session { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Session : System.Web.SessionState.HttpSessionState" Usage="System.Web.Services.WebService.Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.SessionState.HttpSessionState" /> Pobiera wystąpienie dla bieżącego żądania.</summary>
        <value><see cref="T:System.Web.SessionState.HttpSessionState" /> Reprezentujący obiekt stanu sesji ASP.NET dla bieżącej sesji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład używa stanu sesji, aby określić, ile razy dana sesja uzyskuje dostęp do metody `SessionHitCounter`usługi sieci Web XML. W tym przykładzie <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> Właściwość <xref:System.Web.Services.WebMethodAttribute> obiektu ma ustawioną wartość `true` w celu uzyskania dostępu do stanu sesji.  
  
 [!code-aspx-csharp[Classic WebMethodAttribute.EnableSession Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebMethodAttribute.EnableSession Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic WebMethodAttribute.EnableSession Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebMethodAttribute.EnableSession Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.SessionState.HttpSessionState" />
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); };" />
      <MemberSignature Language="F#" Value="member this.SoapVersion : System.Web.Services.Protocols.SoapProtocolVersion" Usage="System.Web.Services.WebService.SoapVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wersję protokołu SOAP służącą do żądania protokołu SOAP do usługi sieci Web XML.</summary>
        <value>Jedna z <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> wartości. Wartość domyślna to <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli protokół SOAP nie był używany do komunikowania się z usługą sieci Web XML, taką jak HTTP-GET lub http-post, wartość <xref:System.Web.Services.WebService.SoapVersion%2A> właściwości to. <xref:System.Web.Services.Protocols.SoapProtocolVersion.Default>  
  
 W przypadku usług sieci Web XML, które nie pochodzą <xref:System.Web.Services.WebService> z klasy, wersja protokołu SOAP użyta do przeprowadzenia żądania protokołu SOAP do usługi sieci Web XML może być również dostępna przy użyciu wpisu <xref:System.Web.HttpContext.Items%2A?displayProperty=nameWithType> "WebServiceSoapVersion" właściwości. Ten wpis jest typu <xref:System.Web.Services.Protocols.SoapProtocolVersion>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />
        <altmember cref="P:System.Web.HttpContext.Items" />
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.IPrincipal" Usage="System.Web.Services.WebService.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt serwera <see cref="P:System.Web.HttpContext.User" /> ASP.NET. Może służyć do uwierzytelniania, czy użytkownik jest autoryzowany do wykonania żądania.</summary>
        <value>Reprezentujący obiekt serwera <see cref="P:System.Web.HttpContext.User" /> ASP.NET. <see cref="T:System.Security.Principal.IPrincipal" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby <xref:System.Web.Services.WebService.User%2A> Właściwość była zrozumiała, należy skonfigurować zarówno Internet Information Services (IIS), jak i .NET Framework. Uwierzytelnianie to proces akceptowania poświadczeń od użytkownika i weryfikowania poświadczeń względem niektórych urzędów. Jeśli poświadczenia są prawidłowe, masz uwierzytelnioną tożsamość. Uwierzytelnianie w .NET Framework jest konfigurowane przez umieszczenie wpisów w pliku Web. config.  
  
 Poniższy przykład ilustruje wpisy umieszczane w pliku Web. config w celu włączenia uwierzytelniania systemu Windows.  
  
```xml
<security>  
 <authentication mode="Windows"> <!-- Mode Options are Windows, Cookie, Passport and None or Empty String -->  
 </authentication>  
 </security>  
```  
  
 Aby uzyskać więcej informacji na temat konfigurowania zabezpieczeń dla usługi sieci Web XML, zobacz [Zabezpieczanie usług sieci Web XML utworzonych za pomocą ASP.NET](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w67h0dw7(v=vs.100)).  
  
   
  
## Examples  
 Poniższy przykład wyszukuje nazwę uwierzytelnionego użytkownika i zwraca tę nazwę.  
  
 [!code-aspx-csharp[Classic WebService.User Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebService.User Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic WebService.User Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebService.User Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w67h0dw7(v=vs.100)">Zabezpieczanie usług sieci Web XML utworzonych za pomocą ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
