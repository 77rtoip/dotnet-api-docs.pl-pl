<Type Name="WebMethodAttribute" FullName="System.Web.Services.WebMethodAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fbb32fe86838ce711647b8159774d6ab966929a3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36594407" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebMethodAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebMethodAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebMethodAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebMethodAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type WebMethodAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dodanie tego atrybutu do metody w ramach XML sieci Web usługi utworzonych w programie ASP.NET sprawia, że metodę można wywołać z klientów zdalnych w sieci Web. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metody w klasie mających ten atrybut wartości są nazywane metod usługi XML sieci Web. Metoda i klasa musi być publiczny i działa w aplikacji sieci Web ASP.NET.  
  
   
  
## Examples  
 W przykładzie poniżej metody `GetMachineName` można zdalnie wywołać w sieci Web, ponieważ ma ona <xref:System.Web.Services.WebMethodAttribute>. `GetUserName` Nie można wywołać zdalnie, ponieważ nie ma <xref:System.Web.Services.WebMethodAttribute>, nawet jeśli komputer jest `public`.  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EnterpriseServices.TransactionOption" />
    <altmember cref="T:System.Web.Services.WebService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Services.WebMethodAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Services.WebMethodAttribute" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enableSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute enableSession" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">Inicjuje, czy stan sesji jest włączony dla metody usług XML sieci Web.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Services.WebMethodAttribute" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.EnterpriseServices.TransactionOption -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
      </Parameters>
      <Docs>
        <param name="enableSession">Inicjuje, czy stan sesji jest włączony dla metody usług XML sieci Web.</param>
        <param name="transactionOption">Inicjuje obsługę transakcji metod usługi XML sieci Web.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Services.WebMethodAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie usługi sieci web może być tylko głównego transakcji, ze względu na specyfikę bezstanowego protokołu HTTP. Oznacza to, że następujące dwa ustawienia są równoważne, przy każdym wywołaniu tworzenia nowej transakcji:  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 Oznacza to również, że wszystkie poniższe ustawienia są równoważne; co oznacza brak obsługi transakcji:  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.Web.Services.TransactionOption -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption, int32 cacheDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.EnterpriseServices.TransactionOption * int -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enableSession">Inicjuje, czy stan sesji jest włączony dla metody usług XML sieci Web.</param>
        <param name="transactionOption">Inicjuje obsługę transakcji metod usługi XML sieci Web.</param>
        <param name="cacheDuration">Inicjuje liczbę sekund, które są buforowane odpowiedzi.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Services.WebMethodAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie usługi sieci web może być tylko głównego transakcji, ze względu na specyfikę bezstanowego protokołu HTTP.  Oznacza to, że następujące dwa ustawienia są równoważne, przy każdym wywołaniu tworzenia nowej transakcji:  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 Oznacza to również, że wszystkie poniższe ustawienia są równoważne; co oznacza brak obsługi transakcji:  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption, int32 cacheDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption, int cacheDuration);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.Web.Services.TransactionOption * int -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <param name="cacheDuration">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.EnterpriseServices.TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.EnterpriseServices.TransactionOption transactionOption, int32 cacheDuration, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::EnterpriseServices::TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.EnterpriseServices.TransactionOption * int * bool -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration, bufferResponse)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.EnterpriseServices.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
        <Parameter Name="bufferResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">Inicjuje, czy stan sesji jest włączony dla metody usług XML sieci Web.</param>
        <param name="transactionOption">Inicjuje obsługę transakcji metod usługi XML sieci Web.</param>
        <param name="cacheDuration">Inicjuje liczbę sekund, które są buforowane odpowiedzi.</param>
        <param name="bufferResponse">Inicjuje, czy są buforowane odpowiedzi dla tego żądania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Services.WebMethodAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie usługi sieci web może być tylko głównego transakcji, ze względu na specyfikę bezstanowego protokołu HTTP.  Oznacza to, że następujące dwa ustawienia są równoważne, przy każdym wywołaniu tworzenia nowej transakcji:  
  
```  
[WebMethod(TransactionOption = TransactionOption.Required)]  
[WebMethod(TransactionOption = TransactionOption.RequiresNew)]  
```  
  
 Oznacza to również, że wszystkie poniższe ustawienia są równoważne; co oznacza brak obsługi transakcji:  
  
```  
[WebMethod] // TransactionOption.Disabled is the default  
[WebMethod(TransactionOption = TransactionOption.Disabled)]  
[WebMethod(TransactionOption = Transaction.NotSupported)]  
[WebMethod(TransactionOption = Transaction.Supported)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebMethodAttribute (bool enableSession, System.Web.Services.TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableSession, valuetype System.Web.Services.TransactionOption transactionOption, int32 cacheDuration, bool bufferResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.Web.Services.TransactionOption,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebMethodAttribute(bool enableSession, System::Web::Services::TransactionOption transactionOption, int cacheDuration, bool bufferResponse);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.WebMethodAttribute : bool * System.Web.Services.TransactionOption * int * bool -&gt; System.Web.Services.WebMethodAttribute" Usage="new System.Web.Services.WebMethodAttribute (enableSession, transactionOption, cacheDuration, bufferResponse)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enableSession" Type="System.Boolean" />
        <Parameter Name="transactionOption" Type="System.Web.Services.TransactionOption" />
        <Parameter Name="cacheDuration" Type="System.Int32" />
        <Parameter Name="bufferResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableSession">To be added.</param>
        <param name="transactionOption">To be added.</param>
        <param name="cacheDuration">To be added.</param>
        <param name="bufferResponse">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferResponse">
      <MemberSignature Language="C#" Value="public bool BufferResponse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BufferResponse" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.BufferResponse" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferResponse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BufferResponse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BufferResponse : bool with get, set" Usage="System.Web.Services.WebMethodAttribute.BufferResponse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia, czy są buforowane odpowiedzi dla tego żądania.</summary>
        <value>
          <see langword="true" /> Jeśli odpowiedzi na to żądanie jest buforowana; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> do `true`, serializuje odpowiedzi metody usługi XML sieci Web w buforze pamięci, aż do odpowiedzi jest całkowicie serializowany lub bufor jest pełna. Po odpowiedzi są buforowane, jest zwracana do klienta usługi XML sieci Web za pośrednictwem sieci. Gdy <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> jest `false`, odpowiedź do metody usług XML sieci Web jest wysyłana do klienta, jak serializowany jest. Ogólnie rzecz biorąc, tylko chcesz ustawić <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> do `false`, jeśli wiadomo, że metoda usługi XML sieci Web zwraca dużych ilości danych do klienta. W przypadku mniejszych ilości danych wydajności usługi XML sieci Web jest lepszym rozwiązaniem z <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> do `true`.  
  
 Gdy <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> jest `false`, rozszerzenia SOAP są wyłączone dla metody usług XML sieci Web.  
  
   
  
## Examples  
 Poniższy kod przykładzie <xref:System.Web.Services.WebMethodAttribute.BufferResponse%2A> właściwości `false` i obsługuje strumieniowe przesyłanie pliku tekstowego z powrotem do klienta. Przykładowy kod przedstawia sposób strumienia duża część danych do klienta przy użyciu klasy, która implementuje <xref:System.Collections.IEnumerable> interfejsu.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.Services.WebMethodAttribute.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę sekund, przez które odpowiedzi powinien być przechowywany w pamięci podręcznej.</summary>
        <value>Liczba sekund, przez które odpowiedzi powinien być przechowywany w pamięci podręcznej. Wartość domyślna to 0, co oznacza, że nie są buforowane odpowiedzi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy włączone jest buforowanie żądań i odpowiedzi są przechowywane w pamięci na serwerze dla co najmniej czas buforowania tak ostrożność musi być używany, gdy żądań lub odpowiedzi bardzo duże lub oczekiwać żądania różnią.  
  
 Istnieją dwie kwestie, które mogą wpłynąć na buforowanie danych wyjściowych w aplikacji usługi sieci Web ASP.NET 2.0.  
  
 W programie ASP.NET 2.0 HTTP metody strona testowa został zmieniony z GET POST. Jednak wpisów nie są zwykle buforowane. Jeśli zmienisz UZYSKAĆ stronę testową w aplikacji usługi sieci Web programu ASP.NET 2.0, buforowanie działa prawidłowo.  
  
 Ponadto HTTP wskazuje, czy agent użytkownika (przeglądarki lub aplikacja wywołująca) powinno być możliwe zastąpienie serwera pamięci podręcznej przez ustawienie "Cache-Control" do "no-cache". Aplikacji programu ASP.NET, w związku z tym zignorować buforowane wyniki znajduje się nagłówka "no-cache".  
  
   
  
## Examples  
 Poniższy przykład umieszcza wynik wywołania `ServiceUsage` metody usługi XML sieci Web w pamięci podręcznej przez 60 sekund. Wtedy wykonuje klient usługi sieci Web XML `ServiceUsage` metody usługi XML sieci Web w tym samym czasie, zwracany jest ten sam rezultat.  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.Services.WebMethodAttribute.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Komunikat opisowy z opisem metody usługi XML sieci Web.</summary>
        <value>Komunikat opisowy z opisem metody usługi XML sieci Web. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Komunikat opisowy zostanie wyświetlone potencjalnego korzystającym z usług XML sieci Web podczas generowania dokumentów opisu usługi XML sieci Web, takie jak strona pomocy opisu usługi i usługi.  
  
   
  
## Examples  
 W przykładzie poniżej ciąg `Obtains the Server Computer Name` jest używany do opisu metody usługi XML sieci Web w opisie usługi i na stronie pomocy usługi dla usługi XML sieci Web.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EnableSession">
      <MemberSignature Language="C#" Value="public bool EnableSession { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.EnableSession" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSession { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSession : bool with get, set" Usage="System.Web.Services.WebMethodAttribute.EnableSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy stan sesji jest włączony dla metody usług XML sieci Web.</summary>
        <value>
          <see langword="true" /> Jeśli stan sesji jest włączony dla metody usług XML sieci Web. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby przechowywać stan sesji w ASP.NET <xref:System.Web.SessionState.HttpSessionState> obiektu, usługi XML sieci Web musi dziedziczyć z <xref:System.Web.Services.WebService> i <xref:System.Web.Services.WebMethodAttribute> zastosować do metody usług XML sieci Web, ustawienie <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A> właściwości `true`. Jeśli stan sesji nie jest wymagany dla metody usługi XML sieci Web, następnie wyłączenie go może zwiększyć wydajność.  
  
 Klient usługi XML sieci Web jest unikatowo identyfikowana przez pliku cookie HTTP zwrócony przez usługi XML sieci Web. Aby usługi XML sieci Web do zarządzania stanem sesji dla klienta klient muszą zostać zachowane pliku cookie. Klienci mogą odbierać pliku cookie HTTP, tworząc nowe wystąpienie klasy <xref:System.Net.CookieContainer> i że w celu przypisywania <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> właściwość klasy serwera proxy przed wywołaniem metody usług XML sieci Web. Jeśli chcesz zachować stanu sesji poza, gdy wystąpienie klasy serwera proxy wykracza poza zakres klienta muszą zostać zachowane pliku cookie HTTP między wywołaniami do usług XML sieci Web. Na przykład klient formularzy sieci Web może się powtarzać, pliku cookie HTTP przez zapisywanie <xref:System.Net.CookieContainer> w stanie sesji. Ponieważ nie wszystkie usługi XML sieci Web przy użyciu stanu sesji, a w związku z tym klienci nie zawsze muszą używać <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> właściwości serwera proxy klienta, w dokumentacji usługi XML sieci Web powinny prezentować czy stan sesji jest używana.  
  
   
  
## Examples  
 Przykład poniżej używa stanu sesji, aby określić, ile razy określonej sesji uzyskuje dostęp do metody usługi sieci Web XML `SessionHitCounter`.  
  
  
  
 Poniższy przykładowy kod jest klientem formularzy sieci Web usługi XML sieci Web, która używa stanu sesji. Klient będzie nadal występował pliku cookie HTTP, który unikatowo identyfikuje sesji przez zapisanie jej w stan sesji klienta.  
  
 [!code-aspx-csharp[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/CS/serverusageclientcs.aspx#1)]
 [!code-aspx-vb[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/VB/serverusageclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer" />
      </Docs>
    </Member>
    <Member MemberName="MessageName">
      <MemberSignature Language="C#" Value="public string MessageName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.MessageName" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageName : string with get, set" Usage="System.Web.Services.WebMethodAttribute.MessageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nazwa używana dla metody usług XML sieci Web w dane przekazane do i zwrócony z metody usług XML sieci Web.</summary>
        <value>Nazwa używana dla metody usług XML sieci Web w danych przekazanych do i z metody usług XML sieci Web. Wartość domyślna to nazwa metody usługi XML sieci Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> Właściwości może służyć do aliasu nazwy metody lub właściwości. Najczęściej używane <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> właściwość będzie do unikatowego identyfikowania polimorficznych metody. Domyślnie <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> jest ustawiona na nazwę metody usługi XML sieci Web. W związku z tym, jeśli usługi XML sieci Web zawiera dwa lub więcej metod usługi XML sieci Web o tej samej nazwie, użytkownik może jednoznacznie zidentyfikować poszczególne metody usług XML sieci Web przez ustawienie <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> na nazwę unikatowa w ramach usługi XML sieci Web bez zmiana nazwy Nazwa metody rzeczywiste w kodzie.  
  
 Gdy dane są przekazywane do usługi XML sieci Web jest wysyłana w żądaniu i jest zwracany jest wysyłany w odpowiedzi. W ramach żądania i odpowiedzi, nazwę używaną dla metody usług XML sieci Web jest jej <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> właściwości.  
  
 Nazwa komunikatu skojarzonych z metodą usługi XML sieci Web musi być unikatowa w ramach usługi XML sieci Web.  
  
 Jeśli nowa metoda usługi XML sieci Web z tej samej nazwy, ale różne parametry jest dodawany po oryginalnej metody wywoływania klientów, należy podać nazwę inny komunikat dla nowej metody, ale oryginalna nazwa wiadomości powinna pozostać, jak ma na celu zapewnienie zgodności z istniejących klientów.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Web.Services.WebMethodAttribute.MessageName%2A> służy do odróżniania dwóch `Add` metody.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.WebMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TransactionOption">
      <MemberSignature Language="C#" Value="public System.EnterpriseServices.TransactionOption TransactionOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.EnterpriseServices.TransactionOption TransactionOption" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebMethodAttribute.TransactionOption" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionOption As TransactionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::EnterpriseServices::TransactionOption TransactionOption { System::EnterpriseServices::TransactionOption get(); void set(System::EnterpriseServices::TransactionOption value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionOption : System.EnterpriseServices.TransactionOption with get, set" Usage="System.Web.Services.WebMethodAttribute.TransactionOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, Obsługa transakcji metod usługi XML sieci Web.</summary>
        <value>Obsługa transakcji metod usługi XML sieci Web. Wartość domyślna to <see cref="F:System.EnterpriseServices.TransactionOption.Disabled" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metody usług XML sieci Web mogą uczestniczyć tylko jako główny obiekt w transakcji, ze względu na specyfikę bezstanowego protokołu HTTP. Metody usług XML sieci Web może wywołać obiektów COM, które uczestniczą w tej samej transakcji jako metoda usługi XML sieci Web, jeśli obiekt COM nie jest oznaczony do uruchomienia w ramach transakcji za pomocą narzędzia administracyjnego usług składowych. Jeśli metoda usługi XML sieci Web z <xref:System.Web.Services.WebMethodAttribute.TransactionOption%2A> właściwość `Required` lub `RequiresNew` wywołuje innej metody usług XML sieci Web z <xref:System.Web.Services.WebMethodAttribute.TransactionOption%2A> właściwość `Required` lub `RequiresNew`, każda metoda usług XML sieci Web uczestniczy w jego własnej transakcji, ponieważ metoda usługi XML sieci Web tylko może działać jako obiekt główny w transakcji.  
  
|Element|Opis|  
|----------|-----------------|  
|Wyłączone|Wskazuje, że metoda usługi XML sieci Web nie działa w zakresie transakcji. Podczas przetwarzania żądania metody usługi XML sieci Web jest wykonywane bez transakcji.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.Disabled`)]|  
|NotSupported|Wskazuje, że metoda usługi XML sieci Web nie działa w zakresie transakcji. Podczas przetwarzania żądania metody usługi XML sieci Web jest wykonywane bez transakcji.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.NotSupported`)]|  
|Obsługiwane|Wskazuje, że metoda usługi XML sieci Web nie działa w zakresie transakcji. Podczas przetwarzania żądania usługi XML sieci Web jest tworzona bez transakcji.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.Supported`)]|  
|Wymagane|Wskazuje, że metody usługi XML sieci Web wymaga transakcji. Ponieważ metody usług XML sieci Web mogą uczestniczyć tylko jako główny obiekt w transakcji, nowej transakcji zostaną utworzone dla metody usługi XML sieci Web.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.Required`)]|  
|RequiresNew|Oznacza, że metoda usługi XML sieci Web wymaga nowej transakcji. Podczas przetwarzania żądania usługi XML sieci Web jest tworzona w ramach nowej transakcji.<br /><br /> [WebMethod (TransactionOption = `TransactionOption.RequiresNew`)]|  
  
 Jeśli wyjątek zgłoszony z lub nie są objęte metody usług XML sieci Web, transakcja została automatycznie przerwana. Jeśli żadne wyjątki występują transakcja jest automatycznie zatwierdzone, chyba że jawnie wywołuje metodę `SetAbort`.  
  
   
  
## Examples  
 W poniższym przykładzie rozpoczyna nową transakcję po `Transfer` metoda jest wywoływana.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EnterpriseServices.TransactionOption" />
      </Docs>
    </Member>
  </Members>
</Type>