<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BigInteger.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57d0dcda34bb31112c320daec112f3dd4b818dc43.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d0dcda34bb31112c320daec112f3dd4b818dc43</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Represents an arbitrarily large signed integer.</source>
          <target state="translated">Reprezentuje dowolnie dużą liczbę całkowitą ze znakiem.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> type is an immutable type that represents an arbitrarily large integer whose value in theory has no upper or lower bounds.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> Typ jest niezmiennego typu, który reprezentuje dowolnie dużą liczbą całkowitą, którego wartość teoretycznie nie ma żadnych granic górnej i dolnej.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The members of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> type closely parallel those of other integral types (the <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.Int64&gt;</ph>, <ph id="ph6">&lt;xref:System.SByte&gt;</ph>, <ph id="ph7">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt32&gt;</ph>, and <ph id="ph9">&lt;xref:System.UInt64&gt;</ph> types).</source>
          <target state="translated">Elementy członkowskie <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> typu ściśle równoległe tych innych typów całkowitych ( <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.Int64&gt;</ph>, <ph id="ph6">&lt;xref:System.SByte&gt;</ph>, <ph id="ph7">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt32&gt;</ph>, i <ph id="ph9">&lt;xref:System.UInt64&gt;</ph> typy).</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>This type differs from the other integral types in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, which have a range indicated by their <ph id="ph2">`MinValue`</ph> and <ph id="ph3">`MaxValue`</ph> properties.</source>
          <target state="translated">Ten typ różni się od innych typów całkowitych w <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, które mają zakres wskazywany przez ich <ph id="ph2">`MinValue`</ph> i <ph id="ph3">`MaxValue`</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> type is immutable (see <bpt id="p1">[</bpt>Mutability and the BigInteger Structure<ept id="p1">](#mutability)</ept>) and because it has no upper or lower bounds, an <ph id="ph2">&lt;xref:System.OutOfMemoryException&gt;</ph> can be thrown for any operation that causes a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to grow too large.</source>
          <target state="translated">Ponieważ <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> typu nie można modyfikować (zobacz <bpt id="p1">[</bpt>zmienność i struktura BigInteger<ept id="p1">](#mutability)</ept>) i dlatego nie ma ona żadnych granic górnego i dolnego <ph id="ph2">&lt;xref:System.OutOfMemoryException&gt;</ph> może zostać zgłoszony do żadnej operacji, która powoduje występowanie <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość do zwiększenia zbyt duża.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Instantiating a BigInteger Object</source>
          <target state="translated">Utworzenie wystąpienia obiektu BigInteger</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object in several ways:</source>
          <target state="translated">Można utworzyć wystąpienia <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiekt na kilka sposobów:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can use the <ph id="ph1">`new`</ph> keyword and provide any integral or floating-point value as a parameter to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> constructor.</source>
          <target state="translated">Można użyć <ph id="ph1">`new`</ph> — słowo kluczowe i podaj wartości całkowitych i zmiennoprzecinkowych jako parametr <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> konstruktora.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>(Floating-point values are truncated before they are assigned to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>.) The following example illustrates how to use the <ph id="ph2">`new`</ph> keyword to instantiate <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">(Wartości zmiennoprzecinkowe są obcinane przed są przypisane do <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>.) Poniższy przykład przedstawia sposób użycia <ph id="ph2">`new`</ph> — słowo kluczowe można utworzyć wystąpienia <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can declare a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable and assign it a value just as you would any numeric type, as long as that value is an integral type.</source>
          <target state="translated">Można zadeklarować <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> zmienną i przypisz wartości podobnie jak miałoby to dowolnego typu liczbowego, dopóki ta wartość jest typem całkowitym.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example uses assignment to create a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value from an <ph id="ph2">&lt;xref:System.Int64&gt;</ph>.</source>
          <target state="translated">W poniższym przykładzie użyto przypisania, aby utworzyć <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość z <ph id="ph2">&lt;xref:System.Int64&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can assign a decimal or floating-point value to a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object if you cast the value or convert it first.</source>
          <target state="translated">Można przypisać wartość dziesiętną lub zmiennoprzecinkowe <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiekt można rzutować wartości lub przekonwertować ją najpierw.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example explicitly casts (in C#) or converts (in Visual Basic) a <ph id="ph1">&lt;xref:System.Double&gt;</ph> and a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated">Poniższy przykład jawnie rzutuje (w języku C#) lub konwertuje (w języku Visual Basic) <ph id="ph1">&lt;xref:System.Double&gt;</ph> i <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> do wartości <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>These methods enable you to instantiate a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object whose value is in the range of one of the existing numeric types only.</source>
          <target state="translated">Te metody umożliwiają utworzenie wystąpienia <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu, którego wartość jest w zakresie istniejących liczbowe tylko typy.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object whose value can exceed the range of the existing numeric types in one of three ways:</source>
          <target state="translated">Można utworzyć wystąpienia <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu, którego wartość może przekroczyć istniejących typów numerycznych w jeden z trzech sposobów:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can use the <ph id="ph1">`new`</ph> keyword and provide a byte array of any size to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">Można użyć <ph id="ph1">`new`</ph> — słowo kluczowe i podaj tablica bajtów o dowolnym rozmiarze <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType&gt;</ph> konstruktora.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>For example:</source>
          <target state="translated">Na przykład:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%2A&gt;</ph> methods to convert the string representation of a number to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated">Możesz wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> lub <ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%2A&gt;</ph> metod do konwertowania reprezentację liczby <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>For example:</source>
          <target state="translated">Na przykład:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can call a <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> method that performs some operation on a numeric expression and returns a calculated <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> result.</source>
          <target state="translated">Możesz wywołać <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> w języku Visual Basic) <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> metodę, która wykonuje pewne operacje na wyrażenia liczbowego i zwraca obliczeniowego <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> wynik.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example does this by cubing <ph id="ph1">&lt;xref:System.UInt64.MaxValue?displayProperty=nameWithType&gt;</ph> and assigning the result to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated">Poniższy przykład robi to przez cubing <ph id="ph1">&lt;xref:System.UInt64.MaxValue?displayProperty=nameWithType&gt;</ph> i przypisywanie wynik, który ma <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The uninitialized value of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> is <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Zero%2A&gt;</ph>.</source>
          <target state="translated">Wartość niezainicjowanej <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> jest <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Zero%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Performing Operations on BigInteger Values</source>
          <target state="translated">Wykonywanie operacji na wartościach typu BigInteger</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can use a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> instance as you would use any other integral type.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wystąpienie, jak w przypadku innych typ całkowity.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> overloads the standard numeric operators to enable you to perform basic mathematical operations such as addition, subtraction, division, multiplication, subtraction, negation, and unary negation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> Overloads standardowych operatorów liczbowych i umożliwiają wykonywanie podstawowych operacji matematycznych, takich jak dodawanie, odejmowania, dzielenia, mnożenia, odejmowania, negacji i negacji jednoargumentowy.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can also use the standard numeric operators to compare two <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values with each other.</source>
          <target state="translated">Umożliwia także standardowych operatorów liczbowe do porównania dwóch <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości ze sobą.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Like the other integral types, <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> also supports the bitwise <ph id="ph2">`And`</ph>, <ph id="ph3">`Or`</ph>, <ph id="ph4">`XOr`</ph>, left shift, and right shift operators.</source>
          <target state="translated">Inne typy całkowite, takich jak <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obsługuje również operatora testu koniunkcji <ph id="ph2">`And`</ph>, <ph id="ph3">`Or`</ph>, <ph id="ph4">`XOr`</ph>, lewego shift i operatory przesunięcia w prawo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>For languages that do not support custom operators, the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure also provides equivalent methods for performing mathematical operations.</source>
          <target state="translated">Dla języków, które nie obsługują niestandardowych operatory <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> struktury udostępnia również równoważne metody służące do wykonywania operacji matematycznych.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>These include <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph>, and several others.</source>
          <target state="translated">Obejmują one <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph>i kilka innych.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Many members of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure correspond directly to members of the other integral types.</source>
          <target state="translated">Wiele elementów członkowskich z <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> struktury odpowiada bezpośrednio do elementów członkowskich innych typów całkowitych.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>In addition, <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> adds members such as the following:</source>
          <target state="translated">Ponadto <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> dodaje elementy członkowskie, takie jak następujące:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Sign%2A&gt;</ph>, which returns a value that indicates the sign of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Sign%2A&gt;</ph>, która zwraca wartość wskazującą znak <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Abs%2A&gt;</ph>, which returns the absolute value of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Abs%2A&gt;</ph>, która zwraca wartość bezwzględną liczby <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source><ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph>, which returns both the quotient and remainder of a division operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph>, która zwraca iloraz i pozostałej części operacji dzielenia.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source><ph id="ph1">&lt;xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A&gt;</ph>, which returns the greatest common divisor of two <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A&gt;</ph>, która zwraca największy wspólny dzielnik dwóch <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Many of these additional members correspond to the members of the <ph id="ph1">&lt;xref:System.Math&gt;</ph> class, which provides the functionality to work with the primitive numeric types.</source>
          <target state="translated">Wiele z tych dodatkowych elementów członkowskich odpowiadają członków <ph id="ph1">&lt;xref:System.Math&gt;</ph> klasy, która udostępnia funkcje do pracy z liczbowych typów pierwotnych.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Mutability and the BigInteger Structure</source>
          <target state="translated">Zmienność i struktura BigInteger</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object and then increments its value by one.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu i następnie zwiększa jedną wartość.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Although this example appears to modify the value of the existing object, this is not the case.</source>
          <target state="translated">Aby zmodyfikować wartość istniejący obiekt jest wyświetlany w tym przykładzie, ale nie jest to to.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects are immutable, which means that internally, the common language runtime actually creates a new <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object and assigns it a value one greater than its previous value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiekty są niezmienne, co oznacza, że wewnętrznie, środowisko uruchomieniowe języka wspólnego faktycznie tworzy nową <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektów i przypisuje jej wartość jeden większa niż poprzednia wartość.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>This new object is then returned to the caller.</source>
          <target state="translated">Ten nowy obiekt jest następnie zwracany do obiektu wywołującego.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The other numeric types in the .NET Framework are also immutable.</source>
          <target state="translated">Inne typy liczbowe w programie .NET Framework również są niezmienne.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>However, because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> type has no upper or lower bounds, its values can grow extremely large and have a measurable impact on performance.</source>
          <target state="translated">Jednak ponieważ <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> typ nie ma żadnych granic górny lub niższy, jego wartości można zwiększyć bardzo duże lub ma zauważalnego wpływu na wydajność.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Although this process is transparent to the caller, it does incur a performance penalty.</source>
          <target state="translated">Mimo że ten proces jest niewidoczny dla obiekt wywołujący, jego pociągnąć za sobą zmniejszenie wydajności.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>In some cases, especially when repeated operations are performed in a loop on very large <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values, that performance penalty can be significant.</source>
          <target state="translated">W niektórych przypadkach, szczególnie gdy powtarzane operacje są wykonywane w pętli na bardzo dużych <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości, może być znaczny wpływ na wydajność.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>For example, in the following example, an operation is performed repetitively up to a million times, and a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is incremented by one every time the operation succeeds.</source>
          <target state="translated">Na przykład w poniższym przykładzie jest wykonywane kilkukrotnie do milionów razy, a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest zwiększany o jeden za każdym razem operacja się powiodła.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>In such a case, you can improve performance by performing all intermediate assignments to an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> variable.</source>
          <target state="translated">W takim przypadku można poprawić wydajność, wykonując wszystkie pośrednie przypisania do <ph id="ph1">&lt;xref:System.Int32&gt;</ph> zmiennej.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The final value of the variable can then be assigned to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object when the loop exits.</source>
          <target state="translated">Następnie można przypisać końcowa wartość zmiennej do <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu, gdy kończy pętli.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example provides an illustration.</source>
          <target state="translated">Poniższy przykład stanowi ilustrację.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Working with Byte Arrays and Hexadecimal Strings</source>
          <target state="translated">Praca z tablicami bajtowymi i ciągami znaków szesnastkowych</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>If you convert <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values to byte arrays, or if you convert byte arrays to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values, you must consider the order of bytes.</source>
          <target state="translated">W przypadku przekonwertowania <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości tablice typu byte, lub jeśli Konwertuj tablice typu byte do <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości, należy rozważyć kolejności bajtów.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure expects the individual bytes in a byte array to appear in little-endian order (that is, the lower-order bytes of the value precede the higher-order bytes).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> Struktury oczekuje poszczególnych bajtów w tablicy bajtowej pojawią się w kolejności little endian (czyli kolejność małą liczbę bajtów wartość poprzedzać bajtów wyższego rzędu).</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can round-trip a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value by calling the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph> method and then passing the resulting byte array to the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor, as the following example shows.</source>
          <target state="translated">Można wyrównana <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość wywołując <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph> metody, a następnie przekazywanie wynikowy bajtów tablicy do <ph id="ph3">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> konstruktora, jak przedstawiono na poniższym przykładzie.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>To instantiate a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value from a byte array that represents a value of some other integral type, you can pass the integral value to the <ph id="ph2">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method, and then pass the resulting byte array to the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor.</source>
          <target state="translated">Można utworzyć wystąpienia <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości z tablicy bajtów reprezentujący wartość całkowitą typu, można przekazać wartości całkowite <ph id="ph2">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> metody, a następnie przekaż tablica wynikowa bajtów do <ph id="ph3">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> konstruktora.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value from a byte array that represents an <ph id="ph2">&lt;xref:System.Int16&gt;</ph> value.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości z tablicy bajtów reprezentujący <ph id="ph2">&lt;xref:System.Int16&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure assumes that negative values are stored by using two's complement representation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> Struktury przyjęto założenie, że wartości ujemne są przechowywane przy użyciu dwóch jego reprezentacja dopełnienia.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure represents a numeric value with no fixed length, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor always interprets the most significant bit of the last byte in the array as a sign bit.</source>
          <target state="translated">Ponieważ <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> struktury reprezentuje wartość numeryczną z brak stałej długości <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> Konstruktor zawsze interpretuje najbardziej znaczącego bitu ostatniego bajtu w tablicy jako bitem znaku.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>To prevent the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor from confusing the two's complement representation of a negative value with the sign and magnitude representation of a positive value, positive values in which the most significant bit of the last byte in the byte array would ordinarily be set should include an additional byte whose value is 0.</source>
          <target state="translated">Aby zapobiec <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> konstruktora z skomplikowana dwie firmy dopełnienia reprezentacja wartości ujemnej z logowania i wielkości reprezentację dodatnią wartość dodatnią wartości w którym najbardziej znaczącego bitu ostatniego bajtu w tablicy bajtów normalnie jest zestaw powinny zawierać dodatkowe bajt, którego wartość jest równa 0.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>For example, 0xC0 0xBD 0xF0 0xFF is the little-endian hexadecimal representation of either -1,000,000 or 4,293,967,296.</source>
          <target state="translated">Na przykład 0xC0 0xBD 0xF0 0xFF jest szesnastkową reprezentację little endian-1,000,000 lub 4,293,967,296.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Because the most significant bit of the last byte in this array is on, the value of the byte array would be interpreted by the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor as -1,000,000.</source>
          <target state="translated">Ponieważ najbardziej znaczącego bitu w tej macierzy ostatniego bajtu na wartość tablicy bajtów może zostać zinterpretowany przez <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> Konstruktor jako-1,000,000.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>To instantiate a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> whose value is positive, a byte array whose elements are 0xC0 0xBD 0xF0 0xFF 0x00 must be passed to the constructor.</source>
          <target state="translated">Można utworzyć wystąpienia <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> którego wartość jest dodatnia, której elementy są 0xC0 tablicy bajtów 0xBD 0xF0 0xFF 0x00 musi zostać przekazany do konstruktora.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example illustrates this.</source>
          <target state="translated">Ilustruje to poniższy przykład.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Byte arrays created by the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph> method from positive values include this extra zero-value byte.</source>
          <target state="translated">Tablice typu byte utworzone przez <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph> metody z wartości dodatnie obejmują bajt bardzo wartość zero.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure can successfully round-trip values by assigning them to, and then restoring them from, byte arrays, as the following example shows.</source>
          <target state="translated">W związku z tym <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> struktury może pomyślnie obustronne wartości przez przypisywanie ich do i przywracania ich z tablice typu byte, jak przedstawiono na poniższym przykładzie.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>However, you may need to add this additional zero-value byte to byte arrays that are created dynamically by the developer or that are returned by methods that convert unsigned integers to byte arrays (such as <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">Może jednak może być konieczne dodanie dodatkowych bajt wartość zero do tablice typu byte, które są tworzone dynamicznie przez dewelopera lub który są zwracane przez metody, które przekonwertować tablic bajtowych liczb całkowitych bez znaku (takie jak <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType&gt;</ph>, i <ph id="ph3">&lt;xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>When parsing a hexadecimal string, the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> methods assume that if the most significant bit of the first byte in the string is set, or if the first hexadecimal digit of the string represents the lower four bits of a byte value, the value is represented by using two's complement representation.</source>
          <target state="translated">Podczas analizowania ciągiem szesnastkowym <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> metod przyjęto założenie, że jeśli ustawiono najbardziej znaczącego bitu pierwszego bajtu w ciągu lub jeśli cyfry szesnastkowe ciąg reprezentuje niższe cztery bity wartość bajtu, wartość to przedstawić przy użyciu dwóch jego reprezentacja dopełnienia.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>For example, both "FF01" and "F01" represent the decimal value -255.</source>
          <target state="translated">Na przykład zarówno "FF01" i "F01" reprezentują-255 wartości dziesiętnych.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>To differentiate positive from negative values, positive values should include a leading zero.</source>
          <target state="translated">Rozróżnianie dodatnią z wartości ujemnych, liczbę wartości dodatnich powinna zawierać zerem.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The relevant overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, when they are passed the "X" format string, add a leading zero to the returned hexadecimal string for positive values.</source>
          <target state="translated">Odpowiednie przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> metody, gdy są one przekazywane ciąg formatu "X", dodać zera do zwracany ciąg szesnastkowy dla wartości dodatnie.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>This makes it possible to round-trip <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values by using the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> methods, as the following example shows.</source>
          <target state="translated">Dzięki temu przesyłania danych <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości przy użyciu <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> i <ph id="ph3">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> metody, jak przedstawiono w następującym przykładzie.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>However, the hexadecimal strings created by calling the <ph id="ph1">`ToString`</ph> methods of the other integral types or the overloads of the <ph id="ph2">&lt;xref:System.Convert.ToString%2A&gt;</ph> method that include a <ph id="ph3">`toBase`</ph> parameter do not indicate the sign of the value or the source data type from which the hexadecimal string was derived.</source>
          <target state="translated">Jednak ciągów szesnastkowych utworzona przez wywołanie metody <ph id="ph1">`ToString`</ph> metod innych typów całkowitych lub przeciążeń <ph id="ph2">&lt;xref:System.Convert.ToString%2A&gt;</ph> — metoda, która zawiera <ph id="ph3">`toBase`</ph> parametr wskazuje znak wartość lub źródłowego typu danych, z którego ciąg szesnastkowy został uzyskany.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Successfully instantiating a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value from such a string requires some additional logic.</source>
          <target state="translated">Pomyślnie tworzenia wystąpienia <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> dodatkowe logikę wymaga wartości z tych parametrów.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example provides one possible implementation.</source>
          <target state="translated">W poniższym przykładzie przedstawiono jeden wdrażanych.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> struktury.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>An array of byte values in little-endian order.</source>
          <target state="translated">Tablica wartości bajtu w kolejności little endian.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using the values in a byte array.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> struktury, używając wartości z tablicy bajtów.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The individual bytes in the <ph id="ph1">`value`</ph> array should be in little-endian order, from lowest-order byte to highest-order byte.</source>
          <target state="translated">Poszczególne bajty <ph id="ph1">`value`</ph> tablicy powinna być w kolejności little endian z najniższą kolejności bajtów do najwyższej kolejności bajtów.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>For example, the numeric value 1,000,000,000,000 is represented as shown in the following table:</source>
          <target state="translated">Na przykład wartość liczbowa 1,000,000,000,000 odpowiada, jak pokazano w poniższej tabeli:</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Hexadecimal string</source>
          <target state="translated">Ciąg szesnastkowy</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>E8D4A51000</source>
          <target state="translated">E8D4A51000</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Byte array (lowest index first)</source>
          <target state="translated">Tablica bajtów (najniższy indeksu najpierw)</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>00 10 A5 D4 E8 00</source>
          <target state="translated">00 10 A5 D4 E8 00</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Most methods that convert numeric values to byte arrays, such as <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph>, return byte arrays in little-endian order.</source>
          <target state="translated">Większości metod, które Konwertuj wartości liczbowych na tablice typu byte, takich jak <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph>, zwraca tablice typu byte w kolejności little endian.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The constructor expects positive values in the byte array to use sign-and-magnitude representation, and negative values to use two's complement representation.</source>
          <target state="translated">Konstruktor oczekuje wartości dodatnie w tablicy bajtów na potrzeby użyj dwóch jego reprezentacja dopełnienia reprezentacja logowania i wielkości i wartości ujemnych.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>In other words, if the highest-order bit of the highest-order byte in <ph id="ph1">`value`</ph> is set, the resulting <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is negative.</source>
          <target state="translated">Innymi słowy Jeśli najwyższej kolejności bit bajtu najwyższej kolejności w <ph id="ph1">`value`</ph> ustawiono powstałe w ten sposób <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest liczbą ujemną.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Depending on the source of the byte array, this may cause a positive value to be misinterpreted as a negative value.</source>
          <target state="translated">W zależności od źródła tablicy bajtów może to spowodować wartość dodatnią zostać błędnie zinterpretowane jako wartość ujemną.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Byte arrays are typically generated in the following ways:</source>
          <target state="translated">Tablice typu byte są zwykle generowane w następujący sposób:</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>By calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Wywołując <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Because this method returns a byte array with the highest-order bit of the highest-order byte in the array set to zero for positive values, there is no chance of misinterpreting a positive value as negative.</source>
          <target state="translated">Ta metoda zwraca tablicę bajtów z bitowego najwyższej kolejności o najwyższej kolejności bajtów w zestawie tablicy równą zero dla wartości dodatnie, nie istnieje wystąpienia misinterpreting dodatnią jako ujemne.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Unmodified byte arrays created by the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph> method always successfully round-trip when they are passed to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor.</source>
          <target state="translated">Niezmodyfikowane tablice typu byte utworzone przez <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph> zawsze pomyślnie wykonywać Rundy, gdy są one przekazywane do metody <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> konstruktora.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>By calling the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method and passing it a signed integer as a parameter.</source>
          <target state="translated">Wywołując <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> — metoda i przekazaniem go całkowita jako parametr.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Because signed integers handle both sign-and-magnitude representation and two's complement representation, there is no chance of misinterpreting a positive value as negative.</source>
          <target state="translated">Liczb całkowitych ze znakiem obsługiwać reprezentacja logowania i wielkości i dwa jego reprezentacja dopełnienia, nie istnieje wystąpienia misinterpreting dodatnią jako ujemne.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>By calling the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method and passing it an unsigned integer as a parameter.</source>
          <target state="translated">Wywołując <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> — metoda i przekazaniem go całkowitą bez znaku jako parametr.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Because unsigned integers are represented by their magnitude only, positive values can be misinterpreted as negative values.</source>
          <target state="translated">Ponieważ liczb całkowitych bez znaku są reprezentowane przez ich znaczenie tylko, liczbę wartości dodatnich może być błędnie zinterpretowana jako wartości ujemnych.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>To prevent this misinterpretation, you can add a zero-byte value to the end of the array.</source>
          <target state="translated">Aby uniknąć tego błędnej interpretacji, można dodać zera bajtową wartość do końca tablicy.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The example in the next section provides an illustration.</source>
          <target state="translated">W przykładzie w następnej sekcji przedstawiono ilustracji.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>By creating a byte array either dynamically or statically without necessarily calling any of the previous methods, or by modifying an existing byte array.</source>
          <target state="translated">Tworząc tablicę bajtów albo dynamicznie lub statycznie bez niekoniecznie wywoływanie jednego z poprzednich metod lub przez zmodyfikowanie istniejącej tablicy bajtów.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>To prevent positive values from being misinterpreted as negative values, you can add a zero-byte value to the end of the array.</source>
          <target state="translated">Aby zapobiec jest nieprawidłowo interpretowane jako wartości ujemnych wartości dodatnie, można dodać zera bajtową wartość do końca tablicy.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>If <ph id="ph1">`value`</ph> is an empty <ph id="ph2">&lt;xref:System.Byte&gt;</ph> array, the new <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> object is initialized to a value of <ph id="ph4">&lt;xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`value`</ph> jest pusta <ph id="ph2">&lt;xref:System.Byte&gt;</ph> tablicy, nowa <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu jest ustawiana na wartość <ph id="ph4">&lt;xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the constructor throws an <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`value`</ph> jest <ph id="ph2">`null`</ph>, zgłasza konstruktora <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object from a 5-element byte array whose value is {5, 4, 3, 2, 1}.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu z tablicą bajtów elementu 5, którego wartość wynosi {5, 4, 3, 2, 1}.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>It then displays the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, represented as both decimal and hexadecimal numbers, to the console.</source>
          <target state="translated">Następnie wyświetla <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> reprezentowaną jako zarówno dziesiętną, a szesnastkową liczby, w konsoli.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>A comparison of the input array with the text output makes it clear why this overload of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> class constructor creates a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object whose value is 4328719365 (or 0x102030405).</source>
          <target state="translated">Porównanie wartości tablicy wejściowej z tekst wyjściowy ułatwia wyczyść dlaczego tego przeciążenia <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> tworzy konstruktora klasy <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu, którego wartość jest 4328719365 (lub 0x102030405).</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The first element of the byte array, whose value is 5, defines the value of the lowest-order byte of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object, which is 0x05.</source>
          <target state="translated">Pierwszy element tablicy bajtów, którego wartość to 5, definiuje wartość bajtu najniższy kolejności <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu, który jest 0x05.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The second element of the byte array, whose value is 4, defines the value of the second byte of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object, which is 0x04, and so on.</source>
          <target state="translated">Drugi element tablicy bajtów, którego wartość wynosi 4, definiuje wartość bajtu drugi <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu, który jest 0x04 i tak dalej.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The following example instantiates a positive and a negative <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, passes them to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph> method, and then restores the original <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values from the resulting byte array.</source>
          <target state="translated">Poniższy przykład tworzy dodatnie i ujemne <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość, przekazuje je do <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph> metody, a następnie przywrócenie oryginalnej <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości wynikowej tablicy bajtów.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Note that the two values are represented by identical byte arrays.</source>
          <target state="translated">Należy pamiętać, że te dwie wartości są reprezentowane przez tablice typu byte identyczne.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The only difference between them is in the most significant bit of the last element in the byte array.</source>
          <target state="translated">Jedyną różnicą między nimi jest najbardziej znaczącego bitu ostatniego elementu w tablicy bajtów.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>This bit is set (the value of the byte is 0xFF) if the array is created from a negative <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">Ten bit jest ustawiony (wartość bajtu to 0xFF), jeśli tablicy jest tworzona na podstawie ujemny <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The bit is not set (the value of the byte is zero), if the array is created from a positive <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">Bit nie zdefiniowano (wartość bajtu wynosi zero), jeśli tablica jest tworzona na podstawie dodatnią <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The following example illustrates how to make sure that a positive value is not incorrectly instantiated as a negative value by adding a byte whose value is zero to the end of the array.</source>
          <target state="translated">Poniższy przykład przedstawia sposób upewnić się, że wartość dodatnią jest nie niepoprawnie wystąpienia jako wartość ujemną, dodając którego wartość wynosi zero do końca tablicy typu byte.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>A decimal number.</source>
          <target state="translated">Liczba dziesiętna.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> struktury, za pomocą <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>The result of calling this constructor is identical to explicitly assigning a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable.</source>
          <target state="translated">Wynikiem wywołania tego konstruktora jest taki sam jak przypisywanie jawnie <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> do wartości <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> zmiennej.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>Calling this constructor can cause data loss; any fractional part of <ph id="ph1">`value`</ph> is truncated when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">Wywołanie konstruktora może spowodować utratę danych; wszystkie części ułamkowej <ph id="ph1">`value`</ph> zostały obcięte podczas tworzenia wystąpienia <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29&gt;</ph> constructor to instantiate a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">Poniższy przykład przedstawia użycie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29&gt;</ph> Konstruktor do tworzenia wystąpienia <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>It defines an array of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values, and then passes each value to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29&gt;</ph> constructor.</source>
          <target state="translated">Definiuje tablicę <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> wartości, a następnie przekazuje każdej wartości <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29&gt;</ph> konstruktora.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>Note that the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value is truncated instead of rounded when it is assigned to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">Należy pamiętać, że <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> wartość zostanie obcięta zamiast zaokrąglona, gdy jest przypisany do <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>A double-precision floating-point value.</source>
          <target state="translated">Wartość zmiennoprzecinkową podwójnej precyzji.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using a double-precision floating-point value.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> struktury przy użyciu wartości zmiennoprzecinkowej podwójnej precyzji.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>Any fractional part of the <ph id="ph1">`value`</ph> parameter is truncated when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">Wszystkie części ułamkowej <ph id="ph1">`value`</ph> parametru zostały obcięte podczas tworzenia wystąpienia <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>Because of the lack of precision of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type, calling this constructor can cause data loss.</source>
          <target state="translated">Ze względu na brak dokładności <ph id="ph1">&lt;xref:System.Double&gt;</ph> typu danych, wywoływania ten konstruktor może spowodować utratę danych.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from calling this constructor is identical to the value that results from explicitly assigning a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> Wartość będącą wynikiem wywołania tego konstruktora jest taka sama jak wartość będącą wynikiem jawnie przypisywanie <ph id="ph2">&lt;xref:System.Double&gt;</ph> do wartości <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Double%29&gt;</ph> constructor to instantiate a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">Poniższy przykład przedstawia użycie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Double%29&gt;</ph> Konstruktor do tworzenia wystąpienia <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>It also illustrates the loss of precision that may occur when you use the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type.</source>
          <target state="translated">Również dwie utratę dokładności, który może wystąpić, gdy używasz <ph id="ph1">&lt;xref:System.Double&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>A <ph id="ph1">&lt;xref:System.Double&gt;</ph> is assigned a large value, which is then assigned to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Double&gt;</ph> przypisano duża wartość, która jest następnie przypisana do <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>As the output shows, this assignment involves a loss of precision.</source>
          <target state="translated">Jak pokazano na dane wyjściowe, to przypisanie pociąga za sobą zmniejszenie precyzji.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>Both values are then incremented by one.</source>
          <target state="translated">Obie wartości są następnie zwiększany o jeden.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>The output shows that the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object reflects the changed value, whereas the <ph id="ph2">&lt;xref:System.Double&gt;</ph> object does not.</source>
          <target state="translated">Dane wyjściowe wskazuje, że <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu odzwierciedla zmieniona wartość, podczas gdy <ph id="ph2">&lt;xref:System.Double&gt;</ph> obiektu nie.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>A 32-bit signed integer.</source>
          <target state="translated">Całkowita 32-bitowych.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using a 32-bit signed integer value.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> struktury przy użyciu wartości 32-bitowej liczby całkowitej ze znakiem.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>There is no loss of precision when instantiating a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object by using this constructor.</source>
          <target state="translated">Nie są tracone dokładności podczas tworzenia wystąpienia <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu za pomocą tego konstruktora.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from calling this constructor is identical to the value that results from assigning an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> Wartość będącą wynikiem wywołania tego konstruktora jest taka sama jak wartość będącą wynikiem przypisywanie <ph id="ph2">&lt;xref:System.Int32&gt;</ph> do wartości <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure does not include constructors with a parameter of type <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.SByte&gt;</ph>, or <ph id="ph5">&lt;xref:System.UInt16&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> Struktury nie ma konstruktorów z parametrem typu <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.SByte&gt;</ph>, lub <ph id="ph5">&lt;xref:System.UInt16&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>However, the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> type supports the implicit conversion of 8-bit and 16-bit signed and unsigned integers to signed 32-bit integers.</source>
          <target state="translated">Jednak <ph id="ph1">&lt;xref:System.Int32&gt;</ph> typu obsługuje niejawnej konwersji wartości 8-bitowych i 16-bitowych znakiem i bez znaku liczb całkowitych liczb całkowitych ze znakiem 32-bitowych.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>As a result, this constructor is called if <ph id="ph1">`value`</ph> is any one of these four integral types.</source>
          <target state="translated">W związku z tym ten konstruktor jest wywoływana, gdy <ph id="ph1">`value`</ph> jest jednym z tych czterech typów całkowitych.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29&gt;</ph> constructor to instantiate <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values from an array of 32-bit integers.</source>
          <target state="translated">Następujące przykładowe wywołania <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29&gt;</ph> Konstruktor do tworzenia wystąpienia <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości z tablicy 32-bitowych liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>It also uses implicit conversion to assign each 32-bit integer value to a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable.</source>
          <target state="translated">Niejawna konwersja go używa również przypisać każdej wartości 32-bitową liczbę całkowitą <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> zmiennej.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>It then compares the two values to establish that the resulting <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values are the same.</source>
          <target state="translated">Następnie porównuje dwie wartości ustalenie, czy powstałe w ten sposób <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości są takie same.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>A 64-bit signed integer.</source>
          <target state="translated">Całkowita 64-bitowych.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using a 64-bit signed integer value.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> struktury przy użyciu wartości 64-bitowej podpisanej liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>There is no loss of precision when instantiating a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object by using this constructor.</source>
          <target state="translated">Nie są tracone dokładności podczas tworzenia wystąpienia <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu za pomocą tego konstruktora.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from calling this constructor is identical to the value that results from assigning an <ph id="ph2">&lt;xref:System.Int64&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> Wartość będącą wynikiem wywołania tego konstruktora jest taka sama jak wartość będącą wynikiem przypisywanie <ph id="ph2">&lt;xref:System.Int64&gt;</ph> do wartości <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29&gt;</ph> constructor to instantiate <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values from an array of 64-bit integers.</source>
          <target state="translated">Następujące przykładowe wywołania <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29&gt;</ph> Konstruktor do tworzenia wystąpienia <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości z tablicy 64-bitowych liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>It also uses implicit conversion to assign each 64-bit integer value to a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable.</source>
          <target state="translated">Niejawna konwersja go używa również przypisać każdej wartości 64-bitową liczbę całkowitą <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> zmiennej.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>It then compares the two values to establish that the resulting <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values are the same.</source>
          <target state="translated">Następnie porównuje dwie wartości ustalenie, czy powstałe w ten sposób <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości są takie same.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>A single-precision floating-point value.</source>
          <target state="translated">Wartość zmiennoprzecinkową o pojedynczej dokładności.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using a single-precision floating-point value.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> struktury przy użyciu wartości zmiennoprzecinkowej pojedynczej precyzji.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>Any fractional part of the <ph id="ph1">`value`</ph> parameter is truncated when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">Wszystkie części ułamkowej <ph id="ph1">`value`</ph> parametru zostały obcięte podczas tworzenia wystąpienia <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>Because of the lack of precision of the <ph id="ph1">&lt;xref:System.Single&gt;</ph> data type, calling this constructor can result in data loss.</source>
          <target state="translated">Ze względu na brak dokładności <ph id="ph1">&lt;xref:System.Single&gt;</ph> typu danych, wywoływania ten konstruktor może spowodować utratę danych.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from calling this constructor is identical to the value that results from explicitly assigning a <ph id="ph2">&lt;xref:System.Single&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> Wartość będącą wynikiem wywołania tego konstruktora jest taka sama jak wartość będącą wynikiem jawnie przypisywanie <ph id="ph2">&lt;xref:System.Single&gt;</ph> do wartości <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Single%29&gt;</ph> constructor to instantiate a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">Poniższy przykład przedstawia użycie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Single%29&gt;</ph> Konstruktor do tworzenia wystąpienia <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>It also illustrates the loss of precision that may occur when you use the <ph id="ph1">&lt;xref:System.Single&gt;</ph> data type.</source>
          <target state="translated">Również dwie utratę dokładności, który może wystąpić, gdy używasz <ph id="ph1">&lt;xref:System.Single&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>A <ph id="ph1">&lt;xref:System.Single&gt;</ph> is assigned a large negative value, which is then assigned to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Single&gt;</ph> przypisano duża wartość ujemną, która jest następnie przypisana do <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>As the output shows, this assignment involves a loss of precision.</source>
          <target state="translated">Jak pokazano na dane wyjściowe, to przypisanie pociąga za sobą zmniejszenie precyzji.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>Both values are then incremented by one.</source>
          <target state="translated">Obie wartości są następnie zwiększany o jeden.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>The output shows that the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object reflects the changed value, whereas the <ph id="ph2">&lt;xref:System.Single&gt;</ph> object does not.</source>
          <target state="translated">Dane wyjściowe wskazuje, że <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu odzwierciedla zmieniona wartość, podczas gdy <ph id="ph2">&lt;xref:System.Single&gt;</ph> obiektu nie.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
          <source>An unsigned 32-bit integer value.</source>
          <target state="translated">Wartość liczby całkowitej bez znaku 32-bitowych.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using an unsigned 32-bit integer value.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> struktury przy użyciu wartości bez znaku 32-bitowej liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
          <source>There is no loss of precision when instantiating a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> using this constructor.</source>
          <target state="translated">Nie są tracone dokładności podczas tworzenia wystąpienia <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> za pomocą tego konstruktora.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from calling this constructor is identical to the value that results from assigning a <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> Wartość będącą wynikiem wywołania tego konstruktora jest taka sama jak wartość będącą wynikiem przypisywanie <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> do wartości <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29&gt;</ph> constructor and an assignment statement to initialize <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values from an array of unsigned 32-bit integers.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29&gt;</ph> Konstruktor i instrukcji przypisania, aby zainicjować <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości z tablicy liczb całkowitych bez znaku 32-bitowych.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
          <source>It then compares the two values to demonstrate that the two methods of initializing a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value produce identical results.</source>
          <target state="translated">Następnie porównuje dwie wartości i Wykaż, że te dwie metody inicjowania <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość tworzy identycznych wyników.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
          <source>An unsigned 64-bit integer.</source>
          <target state="translated">64-bitowa liczba całkowita bez znaku.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure with an unsigned 64-bit integer value.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> struktury z wartością całkowitą 64-bitowych unsigned.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
          <source>There is no loss of precision when instantiating a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> using this constructor.</source>
          <target state="translated">Nie są tracone dokładności podczas tworzenia wystąpienia <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> za pomocą tego konstruktora.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from calling this constructor is identical to the value that results from assigning a <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> Wartość będącą wynikiem wywołania tego konstruktora jest taka sama jak wartość będącą wynikiem przypisywanie <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> do wartości <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29&gt;</ph> constructor to instantiate a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object whose value is equal to <ph id="ph3">&lt;xref:System.UInt64.MaxValue&gt;</ph>.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29&gt;</ph> Konstruktor do tworzenia wystąpienia <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu, którego wartość jest równa <ph id="ph3">&lt;xref:System.UInt64.MaxValue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>A number.</source>
          <target state="translated">Liczba.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>Gets the absolute value of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object.</source>
          <target state="translated">Pobiera wartość bezwzględną liczby <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>The absolute value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Wartość bezwzględna <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>The absolute value of a number is that number without its sign, as shown in the following table.</source>
          <target state="translated">Wartość bezwzględna liczby jest ten numer bez znaku, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source><ph id="ph1">`value`</ph> parameter</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>Return value</source>
          <target state="translated">Wartość zwracana</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source><ph id="ph1">`value`</ph> &gt;= 0</source>
          <target state="translated"><ph id="ph1">`value`</ph> &gt;= 0</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source><ph id="ph1">`value`</ph> &lt; 0</source>
          <target state="translated"><ph id="ph1">`value`</ph> &lt; 0</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source><ph id="ph1">`value`</ph> * -1</source>
          <target state="translated"><ph id="ph1">`value`</ph> * -1</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Abs%2A&gt;</ph> method is equivalent to the <ph id="ph2">&lt;xref:System.Math.Abs%2A?displayProperty=nameWithType&gt;</ph> method for the primitive numeric types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Abs%2A&gt;</ph> Metoda jest odpowiednikiem <ph id="ph2">&lt;xref:System.Math.Abs%2A?displayProperty=nameWithType&gt;</ph> metody dla typów pierwotnych liczbowych.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Abs%2A&gt;</ph> method to convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value from two's complement representation to sign-and-magnitude representation before serializing it to a file.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Abs%2A&gt;</ph> metodę, aby przekonwertować <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość z reprezentacji dopełnienia dwóch w reprezentacji logowania i wielkości przed szeregując go do pliku.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>Data in the file is then deserialized and assigned to a new <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">Dane w pliku jest następnie zdeserializować i przypisana do nowej <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to add.</source>
          <target state="translated">Pierwsza wartość do dodania.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to add.</source>
          <target state="translated">Druga wartość do dodania.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Adds two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values and returns the result.</source>
          <target state="translated">Dodaje dwa <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości i zwraca wynik.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The sum of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Suma <ph id="ph1">&lt;paramref name="left" /&gt;</ph> i <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support operator overloading or custom operators can use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph> method to perform addition using <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">Języki, które nie obsługują przeładowania operatora lub operatory niestandardowych można używać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph> metodę w celu dodania przy użyciu <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph> method is a useful substitute for the addition operator when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable by assigning it a sum that results from addition, as shown in the following example.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph> Metoda jest przydatna zamiast operatora dodawania podczas tworzenia wystąpienia <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> zmiennej przypisać sum, będące wynikiem dodania, jak pokazano w poniższym przykładzie.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Compares two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values and returns an integer that indicates whether the first value is less than, equal to, or greater than the second value.</source>
          <target state="translated">Porównuje dwa <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości i zwraca liczbę całkowitą, która wskazuje, czy pierwsza wartość jest mniejsza niż równa lub większa od drugiej wartości.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>A signed integer that indicates the relative values of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">Całkowita wskazująca wartości <ph id="ph1">&lt;paramref name="left" /&gt;</ph> i <ph id="ph2">&lt;paramref name="right" /&gt;</ph>, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Wartość</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Warunek</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph4">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="left" /&gt;</ph> jest mniejsza niż <ph id="ph4">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="left" /&gt;</ph> equals <ph id="ph4">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="left" /&gt;</ph> Equals <ph id="ph4">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Większa niż zero</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph4">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="left" /&gt;</ph> jest większa niż <ph id="ph4">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Although the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> type has no fixed range, comparisons of <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values are not characterized by the lack of precision that characterizes the comparison of floating-point numbers.</source>
          <target state="translated">Mimo że <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> typ ma zakres stałej nie porównania <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości nie charakteryzują się brak dokładności, która charakteryzuje porównanie liczb zmiennoprzecinkowych.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example compares two <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values that differ by one and that each have 1,896 digits.</source>
          <target state="translated">Poniższy przykład porównuje dwa <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości, które różnią się jeden i że każdy ma 1,896 cyfr.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph> method correctly reports that the two values are not equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph> — Metoda prawidłowo informuje, czy dwie wartości nie są takie same.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Compares the value of this instance with another value and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the other value.</source>
          <target state="translated">Porównuje wartość tego wystąpienia z inną wartość i zwraca liczbę całkowitą, która wskazuje, czy wartość tego wystąpienia jest mniejszy, równy lub większy niż inne wartości.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source>The signed 64-bit integer to compare.</source>
          <target state="translated">Całkowita 64-bitowa do porównania.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source>Compares this instance to a signed 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the signed 64-bit integer.</source>
          <target state="translated">Porównuje tego wystąpienia całkowita 64-bitowa i zwraca liczbę całkowitą, która wskazuje, czy wartość tego wystąpienia jest mniejsza niż, równa lub większa niż wartość całkowita 64-bitowa.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source>A signed integer value that indicates the relationship of this instance to <ph id="ph1">&lt;paramref name="other" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">Wartość całkowita, która wskazuje relacji tego wystąpienia <ph id="ph1">&lt;paramref name="other" /&gt;</ph>, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Wartość zwracana</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Opis elementu</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is less than <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Bieżące wystąpienie jest mniejsza niż <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance equals <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Bieżące wystąpienie jest równe <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Większa niż zero</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is greater than <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Bieżące wystąpienie jest większa niż <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source>If <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the <ph id="ph9">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29&gt;</ph> method is called.</source>
          <target state="translated">Jeśli <ph id="ph1">`other`</ph> jest <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, lub <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> wartości on jest niejawnie przekonwertowana na <ph id="ph8">&lt;xref:System.Int64&gt;</ph> wartość przy <ph id="ph9">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29&gt;</ph> metoda jest wywoływana.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source>The following example illustrates the result of calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29&gt;</ph> method with integral values.</source>
          <target state="translated">Poniższy przykład przedstawia wyniku wywołania metody <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29&gt;</ph> metody o wartości całkowitej.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>The object to compare.</source>
          <target state="translated">Obiekt do porównania.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>Compares this instance to a second <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</source>
          <target state="translated">Porównuje to wystąpienie do drugiej <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> i zwraca liczbę całkowitą, która wskazuje, czy wartość tego wystąpienia jest mniejszy, równa lub większa niż wartość określonego obiektu.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>A signed integer value that indicates the relationship of this instance to <ph id="ph1">&lt;paramref name="other" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">Wartość całkowita, która wskazuje relacji tego wystąpienia <ph id="ph1">&lt;paramref name="other" /&gt;</ph>, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Wartość zwracana</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Opis elementu</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is less than <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Bieżące wystąpienie jest mniejsza niż <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance equals <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Bieżące wystąpienie jest równe <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Większa niż zero</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is greater than <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Bieżące wystąpienie jest większa niż <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%2A&gt;</ph> method implements the <ph id="ph2">&lt;xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">To przeciążenie metody <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%2A&gt;</ph> implementuje metody <ph id="ph2">&lt;xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>It is used by generic collection objects to order the items in the collection.</source>
          <target state="translated">Jest używany przez obiekty kolekcji ogólnej porządkowania elementów w kolekcji.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29&gt;</ph> method to order a list of <ph id="ph2">`StarInfo`</ph> objects.</source>
          <target state="translated">Poniższy przykład przedstawia użycie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29&gt;</ph> metody, aby uporządkować listę <ph id="ph2">`StarInfo`</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>Each <ph id="ph1">`StarInfo`</ph> object provides information about a star's name and its distance from the Earth in miles.</source>
          <target state="translated">Każdy <ph id="ph1">`StarInfo`</ph> obiektu zawiera informacje o nazwie gwiazdy i jego odległości od Earth w milach.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">`StarInfo`</ph> implements the <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> interface, which enables <ph id="ph3">`StarInfo`</ph> objects to be sorted by generic collection classes.</source>
          <target state="translated"><ph id="ph1">`StarInfo`</ph> implementuje <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> interfejsu, które umożliwia <ph id="ph3">`StarInfo`</ph> obiektów, które mają być sortowane według klasy rodzajowej kolekcji.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>Its <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementation just wraps a call to <ph id="ph2">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29&gt;</ph>.</source>
          <target state="translated">Jego <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementacji opakowuje tylko wywołania <ph id="ph2">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>The following code then instantiates four <ph id="ph1">`StarInfo`</ph> objects and stores them in a generic <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object.</source>
          <target state="translated">Poniższy kod tworzy następnie cztery <ph id="ph1">`StarInfo`</ph> obiekty i przechowuje je w ogólnej metodzie <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>After the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType&gt;</ph> method is called, <ph id="ph2">`StarInfo`</ph> objects are displayed in order of their distance from the Earth.</source>
          <target state="translated">Po <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType&gt;</ph> metoda jest wywoływana, <ph id="ph2">`StarInfo`</ph> obiekty są wyświetlane w kolejności ich odległość od ziemi.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>The object to compare.</source>
          <target state="translated">Obiekt do porównania.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</source>
          <target state="translated">Porównuje tego wystąpienia określonego obiektu i zwraca liczbę całkowitą, która wskazuje, czy wartość tego wystąpienia jest mniejszy, równa lub większa niż wartość określonego obiektu.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>A signed integer that indicates the relationship of the current instance to the <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> parameter, as shown in the following table.</source>
          <target state="translated">Całkowita wskazująca relacji do bieżącego wystąpienia <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> parametru, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Wartość zwracana</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Opis elementu</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is less than <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Bieżące wystąpienie jest mniejsza niż <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance equals <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Bieżące wystąpienie jest równe <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Większa niż zero</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is greater than <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>, or the <ph id="ph4">&lt;paramref name="obj" /&gt;</ph> parameter is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Bieżące wystąpienie jest większa niż <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>, lub <ph id="ph4">&lt;paramref name="obj" /&gt;</ph> parametr jest <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%2A&gt;</ph> method implements the <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">To przeciążenie metody <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%2A&gt;</ph> implementuje metody <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>It is used by non-generic collection objects to order the items in the collection.</source>
          <target state="translated">Jest używany przez obiekty kolekcja nierodzajową porządkowania elementów w kolekcji.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>The <ph id="ph1">`obj`</ph> parameter must be one of the following:</source>
          <target state="translated"><ph id="ph1">`obj`</ph> Parametr musi mieć jedną z następujących czynności:</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>An object whose run-time type is <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated">Obiekt o typie środowiska wykonawczego <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>An <ph id="ph1">&lt;xref:System.Object&gt;</ph> variable whose value is <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object&gt;</ph> Zmiennej, którego wartość jest <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>If the value of the <ph id="ph1">`obj`</ph> parameter is <ph id="ph2">`null`</ph>, the method returns 1, which indicates that that the current instance is greater than <ph id="ph3">`obj`</ph>.</source>
          <target state="translated">Jeśli wartość <ph id="ph1">`obj`</ph> parametr jest <ph id="ph2">`null`</ph>, metoda zwraca wartość 1, która wskazuje, czy bieżące wystąpienie jest większa niż <ph id="ph3">`obj`</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Object%29&gt;</ph> method to compare a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value with each element in an object array</source>
          <target state="translated">Następujące przykładowe wywołania <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Object%29&gt;</ph> metody do porównania <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości z każdego elementu w tablicy obiektów</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> nie jest <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source>The unsigned 64-bit integer to compare.</source>
          <target state="translated">64-bitowa liczba całkowita bez znaku do porównania.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source>Compares this instance to an unsigned 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the unsigned 64-bit integer.</source>
          <target state="translated">Porównuje tego wystąpienia na liczbę całkowitą bez znaku 64-bitowe i zwraca liczbę całkowitą, która wskazuje, czy wartość tego wystąpienia jest mniejszy, równa lub większa niż wartość liczby całkowitej bez znaku 64-bitowych.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source>A signed integer that indicates the relative value of this instance and <ph id="ph1">&lt;paramref name="other" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">Całkowita wskazująca względna wartość tego wystąpienia i <ph id="ph1">&lt;paramref name="other" /&gt;</ph>, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Wartość zwracana</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Opis elementu</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is less than <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Bieżące wystąpienie jest mniejsza niż <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance equals <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Bieżące wystąpienie jest równe <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Większa niż zero</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is greater than <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Bieżące wystąpienie jest większa niż <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to be divided.</source>
          <target state="translated">Wartość podział.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to divide by.</source>
          <target state="translated">Wartość do dzielenia przez.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Divides one <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value by another and returns the result.</source>
          <target state="translated">Dzieli jedną <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> przez inną wartość i zwraca wynik.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The quotient of the division.</source>
          <target state="translated">Iloraz z dzielenia.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method performs integer division; any remainder that results from the division is discarded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> Metoda przeprowadza dzielenie liczby całkowitej; reszta będącą wynikiem podziału zostaną odrzucone.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>To perform integer division while preserving the remainder, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> method.</source>
          <target state="translated">Aby wykonać dzielenie liczby całkowitej przy zachowaniu pozostałą, należy wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>To retrieve only the remainder, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph> method.</source>
          <target state="translated">Aby pobrać tylko resztę, należy wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method can be used by languages that do not support operator overloading.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> Metody mogą być używane przez języki, które nie obsługują przeładowania operatora.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Its behavior is identical to division using the division operator.</source>
          <target state="translated">Jego zachowanie jest identyczne dzielenia przy użyciu operatora dzielenia.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">Poniższy przykład tworzy tablicę <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It then uses each element as the quotient in a division operation that uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method, the division operator (/), and the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> method.</source>
          <target state="translated">Następnie używa każdy element jako iloraz w operacji dzielenia, która używa <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> — metoda, operator dzielenia (/) i <ph id="ph2">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> to 0 (zero).</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>The value to be divided.</source>
          <target state="translated">Wartość podział.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>The value to divide by.</source>
          <target state="translated">Wartość do dzielenia przez.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>When this method returns, contains a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value that represents the remainder from the division.</source>
          <target state="translated">Po powrocie z tej metody zawiera <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość, która reprezentuje resztę z dzielenia.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Ten parametr jest przekazywany niezainicjowany.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>Divides one <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value by another, returns the result, and returns the remainder in an output parameter.</source>
          <target state="translated">Dzieli jedną <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości i zwraca wynik i zwraca resztę do parametru output.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>The quotient of the division.</source>
          <target state="translated">Iloraz z dzielenia.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>This method preserves both the quotient and the remainder that results from integer division.</source>
          <target state="translated">Ta metoda umożliwia zachowanie zarówno iloraz i pozostałej, będącą wynikiem dzielenie liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>If you are not interested in the remainder, use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method or the division operator; if you are only interested in the remainder, use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph> method.</source>
          <target state="translated">Jeśli nie jest konieczne w pozostałej, użyj <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> metody lub operator dzielenia; w przypadku jedynie zainteresowani pozostałą, użyć <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>The sign of the returned <ph id="ph1">`remainder`</ph> value is the same as the sign of the <ph id="ph2">`dividend`</ph> parameter.</source>
          <target state="translated">Znak zwracana <ph id="ph1">`remainder`</ph> wartość jest taka sama jak znak <ph id="ph2">`dividend`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>The behavior of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> method is identical to that of the <ph id="ph2">&lt;xref:System.Math.DivRem%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Zachowanie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> metoda jest identyczna ze <ph id="ph2">&lt;xref:System.Math.DivRem%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">Poniższy przykład tworzy tablicę <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>It then uses each element as the quotient in a division operation that uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method, the division operator (/), and the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> method.</source>
          <target state="translated">Następnie używa każdy element jako iloraz w operacji dzielenia, która używa <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> — metoda, operator dzielenia (/) i <ph id="ph2">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> to 0 (zero).</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether two numeric values are equal.</source>
          <target state="translated">Zwraca wartość wskazującą, czy dwie wartości liczbowe są takie same.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>The signed 64-bit integer value to compare.</source>
          <target state="translated">Całkowita 64-bitowa wartość do porównania.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy bieżące wystąpienie i całkowita 64-bitowa mają taką samą wartość.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signed 64-bit integer and the current instance have the same value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli całkowita 64-bitowa i bieżącego wystąpienia mają taką samą wartość; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>If <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the method is called.</source>
          <target state="translated">Jeśli <ph id="ph1">`other`</ph> jest <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, lub <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> wartości on jest niejawnie przekonwertowana na <ph id="ph8">&lt;xref:System.Int64&gt;</ph> wartości podczas wywoływania metody.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>To determine the relationship between the two objects instead of just testing for equality, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Aby określić relacji między tymi dwoma obiektami, a nie tylko testowanie pod kątem równości, należy wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object from each integral type except <ph id="ph2">&lt;xref:System.UInt64&gt;</ph>.</source>
          <target state="translated">Poniższy przykład tworzy <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu z każdego typu całkowitego, z wyjątkiem <ph id="ph2">&lt;xref:System.UInt64&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29&gt;</ph> method to compare the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value with the original integer value that was passed to the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> constructor.</source>
          <target state="translated">Następnie wywołuje <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29&gt;</ph> metody do porównania <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości z oryginalnej wartości całkowitej, który został przekazany do <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> konstruktora.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>As the output shows, the values are equal in each case.</source>
          <target state="translated">Jak pokazano na dane wyjściowe, wartości są równe, w każdym przypadku.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source>The object to compare.</source>
          <target state="translated">Obiekt do porównania.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether the current instance and a specified <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object have the same value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy bieżące wystąpienie i określonej <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektu mają taką samą wartość.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektu i <ph id="ph3">&lt;paramref name="other" /&gt;</ph> mają taką samą wartość; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> interface and performs slightly better than <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Equals%28System.Object%29&gt;</ph> because it does not have to convert the <ph id="ph3">`other`</ph> parameter to a <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">Ta metoda implementuje <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> interfejsu i wykonuje nieco większą niż <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Equals%28System.Object%29&gt;</ph> , ponieważ nie muszą być konwertowane <ph id="ph3">`other`</ph> parametr <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source>To determine the relationship between the two <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects instead of just testing for equality, call the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Można określić relacji między tymi dwoma <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektów, a nie tylko testowanie pod kątem równości, wywołaj <ph id="ph2">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source>The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</source>
          <target state="translated">Poniższy przykład porównuje przybliżonej odległość kilka gwiazdy z ziemi z odległość Wskazywan Epsilon z ziemi, aby sprawdzić, czy są równe.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source>The example uses each overload of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%2A&gt;</ph> method to test for equality.</source>
          <target state="translated">W przykładzie użyto każdego przeciążenia <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%2A&gt;</ph> metody do testowania pod kątem równości.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>The object to compare.</source>
          <target state="translated">Obiekt do porównania.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>Returns a value that indicates whether the current instance and a specified object have the same value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy bieżące wystąpienie oraz określony obiekt mają taką samą wartość.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> argument is a <ph id="ph3">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object, and its value is equal to the value of the current <ph id="ph4">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> instance; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> argument jest <ph id="ph3">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiekt i jego wartość jest równa wartości bieżącego <ph id="ph4">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wystąpienia; w przeciwnym razie <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>If the <ph id="ph1">`obj`</ph> argument is not a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, the method returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`obj`</ph> argument nie jest <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości, metoda zwraca <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>The method returns <ph id="ph1">`true`</ph> only if <ph id="ph2">`obj`</ph> is a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> instance whose value is equal to the current instance.</source>
          <target state="translated">Metoda zwraca <ph id="ph1">`true`</ph> tylko wtedy, gdy <ph id="ph2">`obj`</ph> jest <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> wystąpienie, którego wartość jest równa bieżącego wystąpienia.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>To determine the relationship between the two objects instead of just testing for equality, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Object%29&gt;</ph> method.</source>
          <target state="translated">Aby określić relacji między tymi dwoma obiektami, a nie tylko testowanie pod kątem równości, należy wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Object%29&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>The following example defines parallel <ph id="ph1">&lt;xref:System.Object&gt;</ph> and <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> arrays.</source>
          <target state="translated">W poniższym przykładzie zdefiniowano równoległe <ph id="ph1">&lt;xref:System.Object&gt;</ph> i <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> tablic.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>Each element of one array has the same value as the corresponding element of the second array.</source>
          <target state="translated">Każdy element tablicy ma taką samą wartość jak odpowiadający mu element w tablicy drugiego.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>As the output from the example shows, the instance in the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> array is considered to be equal to the instance in the <ph id="ph2">&lt;xref:System.Object&gt;</ph> array only if the latter is a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> and their values are equal.</source>
          <target state="translated">Jako dane wyjściowe w przykładzie pokazano, wystąpienie w <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> tablicy jest uznawany za taki sam jak wystąpienie w <ph id="ph2">&lt;xref:System.Object&gt;</ph> tablicy tylko wtedy, gdy jest on <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> i ich wartości są równe.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.UInt64)">
          <source>The unsigned 64-bit integer to compare.</source>
          <target state="translated">64-bitowa liczba całkowita bez znaku do porównania.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.UInt64)">
          <source>Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy bieżące wystąpienie i całkowitą bez znaku 64-bitowych mają taką samą wartość.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance and the unsigned 64-bit integer have the same value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli bieżące wystąpienie i liczbę całkowitą bez znaku 64-bitowych mają taką samą wartość; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.UInt64)">
          <source>To determine the relationship between the two objects instead of just testing for equality, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Aby określić relacji między tymi dwoma obiektami, a nie tylko testowanie pod kątem równości, należy wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.UInt64)">
          <source>The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</source>
          <target state="translated">Poniższy przykład porównuje przybliżonej odległość kilka gwiazdy z ziemi z odległość Wskazywan Epsilon z ziemi, aby sprawdzić, czy są równe.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.UInt64)">
          <source>The example uses each overload of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%2A&gt;</ph> method to test for equality.</source>
          <target state="translated">W przykładzie użyto każdego przeciążenia <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%2A&gt;</ph> metody do testowania pod kątem równości.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.GetHashCode">
          <source>Returns the hash code for the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object.</source>
          <target state="translated">Zwraca wartość skrótu dla bieżącego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value.</source>
          <target state="translated">Pierwsza wartość.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value.</source>
          <target state="translated">Druga wartość.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Finds the greatest common divisor of two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">Wyszukuje największy wspólny dzielnik dwóch <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The greatest common divisor of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Największy wspólny dzielnik <ph id="ph1">&lt;paramref name="left" /&gt;</ph> i <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The greatest common divisor is the largest number into which the two <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values can be divided without returning a remainder.</source>
          <target state="translated">Największy wspólny dzielnik jest największą liczbę, do którego dwa <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości można podzielić bez reszty powrotu.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>If the <ph id="ph1">`left`</ph> and <ph id="ph2">`right`</ph> parameters are non-zero numbers, the method always returns at least a value of 1 because all numbers can be divided by 1.</source>
          <target state="translated">Jeśli <ph id="ph1">`left`</ph> i <ph id="ph2">`right`</ph> parametry są liczbami zera, metoda zawsze zwraca co najmniej wartość 1, ponieważ wszystkie numery można podzielić się o 1.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>If either parameter is zero, the method returns the absolute value of the non-zero parameter.</source>
          <target state="translated">Jeśli albo parametr ma wartość zero, metoda zwraca wartość bezwzględną liczby parametrów inną niż zero.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>If both values are zero, the method returns zero.</source>
          <target state="translated">Jeśli obie wartości zero, metoda zwraca wartość zero.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Computing the greatest common divisor of very large values of <ph id="ph1">`left`</ph> and <ph id="ph2">`right`</ph> can be a very time-consuming operation.</source>
          <target state="translated">Obliczanie największy wspólny dzielnik bardzo dużej wartości <ph id="ph1">`left`</ph> i <ph id="ph2">`right`</ph> może być bardzo czasochłonna operacja.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value returned by the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A&gt;</ph> method is always positive regardless of the sign of the <ph id="ph2">`left`</ph> and <ph id="ph3">`right`</ph> parameters.</source>
          <target state="translated">Wartość zwrócona przez <ph id="ph1">&lt;xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A&gt;</ph> metody zawsze jest dodatnia, niezależnie od jej znaku <ph id="ph2">`left`</ph> i <ph id="ph3">`right`</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example illustrates a call to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A&gt;</ph> method and the exception handling necessary to provide useful information about an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</source>
          <target state="translated">Poniższy przykład przedstawia wywołanie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A&gt;</ph> metody i obsługi konieczne dostarczające przydatnych informacji na temat wyjątków <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result indicates that the greatest common divisor of these two numbers is 1.</source>
          <target state="translated">Wynik wskazuje, że te dwie liczb największy wspólny dzielnik jest 1.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.IsEven">
          <source>Indicates whether the value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is an even number.</source>
          <target state="translated">Wskazuje, czy wartość bieżącej klasy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektu jest liczbą parzystą.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsEven">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is an even number; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli wartość <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektu jest liczbą parzystą; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsEven">
          <source>This property is a convenience feature that indicates whether a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is evenly divisible by two.</source>
          <target state="translated">Ta właściwość jest wygody, która wskazuje, czy <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest podzielna przez dwa.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsEven">
          <source>It is equivalent to the following expression:</source>
          <target state="translated">Jest odpowiednikiem następującego wyrażenia:</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsEven">
          <source>If the value of the current <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object is <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType&gt;</ph>, the property returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Jeśli wartość bieżącej klasy <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiekt jest <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType&gt;</ph>, zwraca właściwość <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.IsOne">
          <source>Indicates whether the value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is <ph id="ph2">&lt;see cref="P:System.Numerics.BigInteger.One" /&gt;</ph>.</source>
          <target state="translated">Wskazuje, czy wartość bieżącej klasy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiekt jest <ph id="ph2">&lt;see cref="P:System.Numerics.BigInteger.One" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsOne">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is <ph id="ph3">&lt;see cref="P:System.Numerics.BigInteger.One" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli wartość <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiekt jest <ph id="ph3">&lt;see cref="P:System.Numerics.BigInteger.One" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsOne">
          <source>This property offers significantly better performance than other comparisons with one, such as <ph id="ph1">`thisBigInteger.Equals(BigInteger.One)`</ph>.</source>
          <target state="translated">Ta właściwość oferuje znacznie większą wydajność niż pozostałych porównań z jednym, takich jak <ph id="ph1">`thisBigInteger.Equals(BigInteger.One)`</ph>.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.IsPowerOfTwo">
          <source>Indicates whether the value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is a power of two.</source>
          <target state="translated">Wskazuje, czy wartość bieżącej klasy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiekt jest potęgą liczby dwa.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsPowerOfTwo">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is a power of two; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli wartość <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiekt jest potęgą liczby dwa; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsPowerOfTwo">
          <source>This property determines whether a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value has a single non-zero bit set.</source>
          <target state="translated">Ta właściwość określa, czy <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość ma jeden bit niezerową wartość.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsPowerOfTwo">
          <source>This means that it returns <ph id="ph1">`true`</ph> if the value of the current <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object is 1 (that is, 2<bpt id="p1">&lt;sup&gt;</bpt>0<ept id="p1">&lt;/sup&gt;</ept>) or any greater power of two.</source>
          <target state="translated">Oznacza to, że zwraca <ph id="ph1">`true`</ph> Jeśli wartość bieżącej klasy <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiekt jest 1 (czyli 2<bpt id="p1">&lt;sup&gt;</bpt>0<ept id="p1">&lt;/sup&gt;</ept>) lub dowolnego większa potęgą liczby dwa.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsPowerOfTwo">
          <source>It returns <ph id="ph1">`false`</ph> if the value of the current <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object is 0.</source>
          <target state="translated">Zwraca <ph id="ph1">`false`</ph> Jeśli wartość bieżącej klasy <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu wynosi 0.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.IsZero">
          <source>Indicates whether the value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is <ph id="ph2">&lt;see cref="P:System.Numerics.BigInteger.Zero" /&gt;</ph>.</source>
          <target state="translated">Wskazuje, czy wartość bieżącej klasy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiekt jest <ph id="ph2">&lt;see cref="P:System.Numerics.BigInteger.Zero" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsZero">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is <ph id="ph3">&lt;see cref="P:System.Numerics.BigInteger.Zero" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli wartość <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiekt jest <ph id="ph3">&lt;see cref="P:System.Numerics.BigInteger.Zero" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsZero">
          <source>This property offers significantly better performance than <ph id="ph1">`BigInteger.Equals(BigInteger.Zero)`</ph>.</source>
          <target state="translated">Ta właściwość zapewnia znacznie większą wydajność niż <ph id="ph1">`BigInteger.Equals(BigInteger.Zero)`</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns the logarithm of a specified number.</source>
          <target state="translated">Zwraca wartość logarytmu określonej liczby.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The number whose logarithm is to be found.</source>
          <target state="translated">Liczba, której logarytm ma zostać znaleziona.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Returns the natural (base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) logarithm of a specified number.</source>
          <target state="translated">Zwraca fizyczna (podstawowy <ph id="ph1">&lt;see langword="e" /&gt;</ph>) logarytm o podstawie określonej liczby.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The natural (base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) logarithm of <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, as shown in the table in the Remarks section.</source>
          <target state="translated">Fizyczna (podstawowy <ph id="ph1">&lt;see langword="e" /&gt;</ph>) logarytm <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, jak pokazano w tabeli w sekcji uwag.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">`value`</ph> parameter is specified as a base 10 number.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr jest określony jako podstawowy numer 10.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The precise return value of this method depends on the sign of <ph id="ph1">`value`</ph>, as the following table shows.</source>
          <target state="translated">Dokładne zwrócić wartość ta metoda zależy od jej znaku <ph id="ph1">`value`</ph>, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Sign of <ph id="ph1">`value`</ph> parameter</source>
          <target state="translated">Zaloguj się z <ph id="ph1">`value`</ph> parametru</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Return value</source>
          <target state="translated">Wartość zwracana</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Positive</source>
          <target state="translated">Dodatnie</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The natural logarithm of <ph id="ph1">`value`</ph>; that is, ln <ph id="ph2">`value`</ph>, or log e<ph id="ph3">`value`</ph>.</source>
          <target state="translated">Logarytm naturalny <ph id="ph1">`value`</ph>; oznacza to, ln <ph id="ph2">`value`</ph>, lub dziennika e<ph id="ph3">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Zero</source>
          <target state="translated">Zero</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Negative</source>
          <target state="translated">Ujemne</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>To calculate the base 10 logarithm of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, call the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Log10%2A&gt;</ph> method.</source>
          <target state="translated">Aby obliczyć logarytm 10 z <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości, należy wywołać <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Log10%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>To calculate the logarithm of a number in another base, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29&gt;</ph> method.</source>
          <target state="translated">Aby obliczyć logarytm liczby w innej bazie, należy wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>You can find the square root of a number by calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%2A&gt;</ph> method along with the <ph id="ph2">&lt;xref:System.Math.Exp%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pierwiastek kwadratowy liczby można znaleźć wywołując <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%2A&gt;</ph> metody wraz z programem <ph id="ph2">&lt;xref:System.Math.Exp%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Note that the result is <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> if the result is greater than <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Należy zauważyć, że wynik <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> Jeśli wynik jest większa niż <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The following example calculates the square root of each element in an array of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">W poniższym przykładzie oblicza pierwiastek kwadratowy każdego elementu w tablicy <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType&gt;</ph> method for the primitive numeric types.</source>
          <target state="translated">Ta metoda odpowiada <ph id="ph1">&lt;xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType&gt;</ph> metody dla typów pierwotnych liczbowych.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The natural log of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is out of range of the <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> data type.</source>
          <target state="translated">Logarytm naturalny z <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest poza zakresem <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>A number whose logarithm is to be found.</source>
          <target state="translated">Liczba, której logarytm ma zostać znaleziona.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>The base of the logarithm.</source>
          <target state="translated">Podstawa logarytmu.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>Returns the logarithm of a specified number in a specified base.</source>
          <target state="translated">Zwraca logarytm o określonej liczby w określonej podstawy.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>The base <ph id="ph1">&lt;paramref name="baseValue" /&gt;</ph> logarithm of <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, as shown in the table in the Remarks section.</source>
          <target state="translated">Podstawowym <ph id="ph1">&lt;paramref name="baseValue" /&gt;</ph> logarytm <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, jak pokazano w tabeli w sekcji uwag.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>The <ph id="ph1">`value`</ph> and <ph id="ph2">`baseValue`</ph> parameters are specified as base 10 numbers.</source>
          <target state="translated"><ph id="ph1">`value`</ph> i <ph id="ph2">`baseValue`</ph> parametry są określane jako podstawowa 10 cyfr.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>The precise return value of the method depends on the sign of <ph id="ph1">`value`</ph> and on the sign and value of <ph id="ph2">`baseValue`</ph>, as the following table shows.</source>
          <target state="translated">Dokładne zwrócić wartość metody zależy od jej znaku <ph id="ph1">`value`</ph> logowania i wartość <ph id="ph2">`baseValue`</ph>, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> parameter</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`baseValue`</ph> parameter</source>
          <target state="translated"><ph id="ph1">`baseValue`</ph> Parametr</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>Return value</source>
          <target state="translated">Wartość zwracana</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> &gt; 0</source>
          <target state="translated"><ph id="ph1">`value`</ph> &gt; 0</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>(0 &lt; <ph id="ph1">`baseValue`</ph> &lt; 1) -or-(<ph id="ph2">`baseValue`</ph> &gt; 1)</source>
          <target state="translated">(0 &lt; <ph id="ph1">`baseValue`</ph> &lt; 1) - lub -(<ph id="ph2">`baseValue`</ph> &gt; 1)</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>logbaseValue(<ph id="ph1">`value`</ph>)</source>
          <target state="translated">logbaseValue (<ph id="ph1">`value`</ph>)</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> &lt; 0</source>
          <target state="translated"><ph id="ph1">`value`</ph> &lt; 0</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>(any value)</source>
          <target state="translated">(dowolna wartość)</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>(any value)</source>
          <target state="translated">(dowolna wartość)</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`baseValue`</ph> &lt; 0</source>
          <target state="translated"><ph id="ph1">`baseValue`</ph> &lt; 0</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> != 1</source>
          <target state="translated"><ph id="ph1">`value`</ph> != 1</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`baseValue`</ph> = 0</source>
          <target state="translated"><ph id="ph1">`baseValue`</ph> = 0</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> != 1</source>
          <target state="translated"><ph id="ph1">`value`</ph> != 1</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>(any value)</source>
          <target state="translated">(dowolna wartość)</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>(any value)</source>
          <target state="translated">(dowolna wartość)</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`baseValue`</ph> = 1</source>
          <target state="translated"><ph id="ph1">`baseValue`</ph> = 1</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> = 0</source>
          <target state="translated"><ph id="ph1">`value`</ph> = 0</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>0 &lt; <ph id="ph1">`baseValue`</ph> &lt; 1</source>
          <target state="translated">0 &lt; <ph id="ph1">`baseValue`</ph> &lt; 1</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> = 0</source>
          <target state="translated"><ph id="ph1">`value`</ph> = 0</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`baseValue`</ph> &gt; 1</source>
          <target state="translated"><ph id="ph1">`baseValue`</ph> &gt; 1</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> = 1</source>
          <target state="translated"><ph id="ph1">`value`</ph> = 1</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`baseValue`</ph> = 0</source>
          <target state="translated"><ph id="ph1">`baseValue`</ph> = 0</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> = 1</source>
          <target state="translated"><ph id="ph1">`value`</ph> = 1</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>To calculate the base 10 logarithm of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, call the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Log10%2A&gt;</ph> method.</source>
          <target state="translated">Aby obliczyć logarytm 10 z <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości, należy wywołać <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Log10%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>To calculate the natural logarithm of a number, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29&gt;</ph> method.</source>
          <target state="translated">Aby obliczyć logarytm naturalny liczby, należy wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Log%2A?displayProperty=nameWithType&gt;</ph> method for the primitive numeric types.</source>
          <target state="translated">Ta metoda odpowiada <ph id="ph1">&lt;xref:System.Math.Log%2A?displayProperty=nameWithType&gt;</ph> metody dla typów pierwotnych liczbowych.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>The log of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is out of range of the <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> data type.</source>
          <target state="translated">Dziennik <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest poza zakresem <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>A number whose logarithm is to be found.</source>
          <target state="translated">Liczba, której logarytm ma zostać znaleziona.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>Returns the base 10 logarithm of a specified number.</source>
          <target state="translated">Zwraca logarytm 10 podanej liczby.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>The base 10 logarithm of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, as shown in the table in the Remarks section.</source>
          <target state="translated">Logarytm 10 z <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, jak pokazano w tabeli w sekcji uwag.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">`value`</ph> parameter is specified as a base 10 number.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr jest określony jako podstawowy numer 10.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>The precise return value of the method depends on the sign of <ph id="ph1">`value`</ph>, as the following table shows.</source>
          <target state="translated">Dokładne zwrócić wartość metody zależy od jej znaku <ph id="ph1">`value`</ph>, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>Sign of value parameter</source>
          <target state="translated">Znak, wartość parametru</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>Return value</source>
          <target state="translated">Wartość zwracana</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>Positive</source>
          <target state="translated">Dodatnie</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>The base 10 log of <ph id="ph1">`value`</ph>; that is, log10<ph id="ph2">`value`</ph>.</source>
          <target state="translated">Dziennik podstawowej 10 <ph id="ph1">`value`</ph>; oznacza to, że log10<ph id="ph2">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>Zero</source>
          <target state="translated">Zero</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>Negative</source>
          <target state="translated">Ujemne</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>To calculate the natural logarithm of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, call the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Aby obliczyć logarytm naturalny <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości, należy wywołać <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>To calculate the logarithm of a number in another base, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Aby obliczyć logarytm liczby w innej bazie, należy wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Log10%2A?displayProperty=nameWithType&gt;</ph> method for the primitive numeric types.</source>
          <target state="translated">Ta metoda odpowiada <ph id="ph1">&lt;xref:System.Math.Log10%2A?displayProperty=nameWithType&gt;</ph> metody dla typów pierwotnych liczbowych.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>The base 10 log of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is out of range of the <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> data type.</source>
          <target state="translated">Dziennik podstawowej 10 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest poza zakresem <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns the larger of two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">Zwraca większej liczby dwa <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> parameter, whichever is larger.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> Lub <ph id="ph2">&lt;paramref name="right" /&gt;</ph> parametru, w zależności od jest większy.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Max%2A?displayProperty=nameWithType&gt;</ph> method for primitive numeric types.</source>
          <target state="translated">Ta metoda odpowiada <ph id="ph1">&lt;xref:System.Math.Max%2A?displayProperty=nameWithType&gt;</ph> metody dla typów pierwotnych liczbowych.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Max%2A&gt;</ph> method to select the largest number in an array of <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Max%2A&gt;</ph> metoda, aby wybrać największa liczba w tablicy <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns the smaller of two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">Zwraca mniejszy z dwóch <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> parameter, whichever is smaller.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> Lub <ph id="ph2">&lt;paramref name="right" /&gt;</ph> parametru, w zależności od jest mniejsza.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Min%2A?displayProperty=nameWithType&gt;</ph> method for primitive numeric types.</source>
          <target state="translated">Ta metoda odpowiada <ph id="ph1">&lt;xref:System.Math.Min%2A?displayProperty=nameWithType&gt;</ph> metody dla typów pierwotnych liczbowych.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Min%2A&gt;</ph> method to select the smallest number in an array of <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Min%2A&gt;</ph> metoda, aby wybrać najmniejszą wartość w tablicy <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.MinusOne">
          <source>Gets a value that represents the number negative one (-1).</source>
          <target state="translated">Pobiera wartość reprezentującą liczbę minus (-1).</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.MinusOne">
          <source>An integer whose value is negative one (-1).</source>
          <target state="translated">Liczba całkowita, którego wartość jest ujemna (-1).</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.MinusOne">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.MinusOne%2A&gt;</ph> property is used to compare a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to -1 or to assign -1 to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.MinusOne%2A&gt;</ph> Właściwość jest używana do porównania <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość -1 lub -1, aby przypisać <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The number to raise to the <bpt id="p1">&lt;c&gt;</bpt>exponent<ept id="p1">&lt;/c&gt;</ept> power.</source>
          <target state="translated">Numer, do której zostaną podniesione <bpt id="p1">&lt;c&gt;</bpt>wykładnik<ept id="p1">&lt;/c&gt;</ept> zasilania.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The exponent to raise <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> by.</source>
          <target state="translated">Wykładnik, aby podnieść <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept> przez.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The number by which to divide <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> raised to the <bpt id="p2">&lt;c&gt;</bpt>exponent<ept id="p2">&lt;/c&gt;</ept> power.</source>
          <target state="translated">Liczbę, przez którą chcesz podzielić <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept> do <bpt id="p2">&lt;c&gt;</bpt>wykładnik<ept id="p2">&lt;/c&gt;</ept> zasilania.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Performs modulus division on a number raised to the power of another number.</source>
          <target state="translated">Wykonuje dzielenie modulo na liczbę podniesioną do potęgi równej innej liczbie.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The remainder after dividing <ph id="ph1">&lt;paramref name="value" /&gt;</ph><bpt id="p1">&lt;sup&gt;</bpt>exponent<ept id="p1">&lt;/sup&gt;</ept> by <ph id="ph2">&lt;paramref name="modulus" /&gt;</ph>.</source>
          <target state="translated">Resztę po podzieleniu <ph id="ph1">&lt;paramref name="value" /&gt;</ph> <bpt id="p1">&lt;sup&gt;</bpt>wykładnik<ept id="p1">&lt;/sup&gt;</ept> przez <ph id="ph2">&lt;paramref name="modulus" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ModPow%2A&gt;</ph> method evaluates the following expression:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.ModPow%2A&gt;</ph> Metody oblicza wyrażenie następujące:</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>(baseValue ^ exponent) Mod modulus</source>
          <target state="translated">(baseValue ^ wykładnik) Mod modulo</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>To perform exponentiation on <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values without modulus division, use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Pow%2A&gt;</ph> method.</source>
          <target state="translated">Do przeprowadzenia potęgowania na <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> Użyj wartości bez dzielenie modulo <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Pow%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example provides a simple illustration of calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ModPow%2A&gt;</ph> method.</source>
          <target state="translated">W poniższym przykładzie przedstawiono prosty ilustracji wywołania metody <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ModPow%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;paramref name="modulus" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="modulus" /&gt;</ph> wynosi zero.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;paramref name="exponent" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="exponent" /&gt;</ph> jest ujemna.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first number to multiply.</source>
          <target state="translated">Pierwszy liczbę Aby pomnożyć.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second number to multiply.</source>
          <target state="translated">Druga liczba do wielokrotnie.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns the product of two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">Zwraca iloczyn dwóch <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The product of the <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph> parameters.</source>
          <target state="translated">Iloczyn <ph id="ph1">&lt;paramref name="left" /&gt;</ph> i <ph id="ph2">&lt;paramref name="right" /&gt;</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph> method is implemented for languages that do not support operator overloading.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph> Metoda została zaimplementowana dla języków, które nie obsługują przeładowania operatora.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Its behavior is identical to multiplication using the multiplication operator.</source>
          <target state="translated">Jego zachowanie jest identyczne mnożenia przy użyciu operatora mnożenia.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph> method is a useful substitute for the multiplication operator when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable by assigning it a product that results from multiplication, as shown in the following example.</source>
          <target state="translated">Ponadto <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph> metoda jest przydatna zastępuje operator mnożenia podczas tworzenia wystąpienia <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> zmiennej przypisać produkt, który jest wynikiem mnożenia, jak pokazano w poniższym przykładzie.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>If necessary, this method automatically performs implicit conversion of other integral types to <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects.</source>
          <target state="translated">Jeśli to konieczne, ta metoda automatycznie wykonuje niejawna konwersja z innych typów całkowitych do <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>This is illustrated in the example in the next section, where the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph> method is passed two <ph id="ph2">&lt;xref:System.Int64&gt;</ph> values.</source>
          <target state="translated">Jest to zilustrowane w przykładzie w następnej sekcji, gdzie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph> metody jest przekazywany dwa <ph id="ph2">&lt;xref:System.Int64&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example tries to perform multiplication with two long integers.</source>
          <target state="translated">Poniższy przykład próbuje wykonać mnożenia z dwóch długich liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Because the result exceeds the range of a long integer, an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> is thrown, and the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph> method is called to handle the multiplication.</source>
          <target state="translated">Ponieważ wynik przekracza zakres długich liczb całkowitych <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> jest zgłaszany i <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph> wywoływana jest metoda obsługi mnożenia.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Note that C# requires that you use either the <ph id="ph1">`checked`</ph> keyword (as in this example) or the <ph id="ph2">`/checked+`</ph> compiler option to make sure an exception is thrown on a numeric overflow.</source>
          <target state="translated">Należy pamiętać, że C# wymaga użycia albo <ph id="ph1">`checked`</ph> — słowo kluczowe (jak w poniższym przykładzie) lub <ph id="ph2">`/checked+`</ph> opcję kompilatora, aby upewnić się na przepełnienie liczbowe jest zgłaszany wyjątek.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>The value to negate.</source>
          <target state="translated">Wartość do wskazania ujemnej.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>Negates a specified <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Negacja określonej <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>The result of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter multiplied by negative one (-1).</source>
          <target state="translated">Wynik <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru pomnożona przez wartość ujemną (-1).</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>Negation obtains the additive inverse of a number.</source>
          <target state="translated">Negacja uzyskuje odwrotność dodatku dla danej liczby.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>The additive inverse of a number is a number that produces a value of zero when it is added to the original number.</source>
          <target state="translated">Odwrotność dodatku liczby jest liczba, która tworzy wartość zero, gdy jest ona dodawana do liczby.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph> method is implemented for languages that do not support custom operators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph> Metoda została zaimplementowana dla języków, które nie obsługują niestandardowych operatorów.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>Its behavior is identical to negation using the unary negation operator.</source>
          <target state="translated">Jego zachowanie jest identyczne negacji przy użyciu Jednoargumentowy operator negacji.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph> method is a useful substitute for the negation operator when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable, as shown in the following example.</source>
          <target state="translated">Ponadto <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph> metoda jest przydatna zastępuje operator negacji podczas tworzenia wystąpienia <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> zmiennej, jak pokazano w poniższym przykładzie.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>The following example illustrates three ways to negate the value of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">Poniższy przykład przedstawia trzy sposoby negate — wartość <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.One">
          <source>Gets a value that represents the number one (1).</source>
          <target state="translated">Pobiera wartość, która reprezentuje liczby jeden (1).</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.One">
          <source>An object whose value is one (1).</source>
          <target state="translated">Obiekt, którego wartość jest jeden (1).</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.One">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.One%2A&gt;</ph> property is usually used to compare a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to 1 or to assign 1 to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.One%2A&gt;</ph> Jest zwykle używana do porównania <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość 1 lub 1, aby przypisać <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to add.</source>
          <target state="translated">Pierwsza wartość do dodania.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to add.</source>
          <target state="translated">Druga wartość do dodania.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Adds the values of two specified <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> objects.</source>
          <target state="translated">Dodaje dwa określone wartości <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The sum of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Suma <ph id="ph1">&lt;paramref name="left" /&gt;</ph> i <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Addition%2A&gt;</ph> method defines the addition operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Addition%2A&gt;</ph> Metoda definiuje operacji dodawania dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value.</source>
          <target state="translated">Pierwsza wartość.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value.</source>
          <target state="translated">Druga wartość.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Performs a bitwise <ph id="ph1">&lt;see langword="And" /&gt;</ph> operation on two <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">Wykonuje bitowej <ph id="ph1">&lt;see langword="And" /&gt;</ph> operacji na dwóch <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result of the bitwise <ph id="ph1">&lt;see langword="And" /&gt;</ph> operation.</source>
          <target state="translated">Wynik operatora testu koniunkcji <ph id="ph1">&lt;see langword="And" /&gt;</ph> operacji.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseAnd%2A&gt;</ph> method defines the bitwise <ph id="ph2">`And`</ph> operation for <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseAnd%2A&gt;</ph> Metoda definiuje operatora testu koniunkcji <ph id="ph2">`And`</ph> operacji <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The bitwise <ph id="ph1">`And`</ph> operation sets a result bit only if the corresponding bits in <ph id="ph2">`left`</ph> and <ph id="ph3">`right`</ph> are also set, as shown in the following table.</source>
          <target state="translated">Bitowe <ph id="ph1">`And`</ph> operacji Ustawia wynik bit tylko wtedy, gdy odpowiednich bitów w <ph id="ph2">`left`</ph> i <ph id="ph3">`right`</ph> również są ustawione, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit in <ph id="ph1">`left`</ph></source>
          <target state="translated">Bit w <ph id="ph1">`left`</ph></target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit in <ph id="ph1">`right`</ph></source>
          <target state="translated">Bit w <ph id="ph1">`right`</ph></target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit in result</source>
          <target state="translated">Bit w wyniku</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseAnd%2A&gt;</ph> method enables code such as the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseAnd%2A&gt;</ph> Metoda umożliwia następującego kodu:</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseAnd%2A&gt;</ph> method performs the bitwise <ph id="ph2">`And`</ph> operation on two <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values as if they were both in two's complement representation with virtual sign extension.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseAnd%2A&gt;</ph> Metoda wykonuje logiczną <ph id="ph2">`And`</ph> operacji na dwóch <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości, tak jakby były to zarówno w dwóch jego dopełnienia reprezentacji z rozszerzeniem wirtualnego logowania.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value.</source>
          <target state="translated">Pierwsza wartość.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value.</source>
          <target state="translated">Druga wartość.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Performs a bitwise <ph id="ph1">&lt;see langword="Or" /&gt;</ph> operation on two <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">Wykonuje bitowej <ph id="ph1">&lt;see langword="Or" /&gt;</ph> operacji na dwóch <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result of the bitwise <ph id="ph1">&lt;see langword="Or" /&gt;</ph> operation.</source>
          <target state="translated">Wynik operatora testu koniunkcji <ph id="ph1">&lt;see langword="Or" /&gt;</ph> operacji.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseOr%2A&gt;</ph> method defines the bitwise <ph id="ph2">`Or`</ph> operation for <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseOr%2A&gt;</ph> Metoda definiuje operatora testu koniunkcji <ph id="ph2">`Or`</ph> operacji <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The bitwise <ph id="ph1">`Or`</ph> operation sets a result bit only if either or both of the corresponding bits in <ph id="ph2">`left`</ph> and <ph id="ph3">`right`</ph> are set, as shown in the following table.</source>
          <target state="translated">Bitowe <ph id="ph1">`Or`</ph> operacji Ustawia wynik bit tylko wtedy, gdy jednego lub obu odpowiednich bitów w <ph id="ph2">`left`</ph> i <ph id="ph3">`right`</ph> są ustawione, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit in <ph id="ph1">`left`</ph></source>
          <target state="translated">Bit w <ph id="ph1">`left`</ph></target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit in <ph id="ph1">`right`</ph></source>
          <target state="translated">Bit w <ph id="ph1">`right`</ph></target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit in result</source>
          <target state="translated">Bit w wyniku</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseOr%2A&gt;</ph> method enables code such as the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseOr%2A&gt;</ph> Metoda umożliwia następującego kodu:</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseOr%2A&gt;</ph> method performs the bitwise <ph id="ph2">`Or`</ph> operation on two <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values as if they were both in two's complement representation with virtual sign extension.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseOr%2A&gt;</ph> Metoda wykonuje logiczną <ph id="ph2">`Or`</ph> operacji na dwóch <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości, tak jakby były to zarówno w dwóch jego dopełnienia reprezentacji z rozszerzeniem wirtualnego logowania.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>The value to decrement.</source>
          <target state="translated">Wartość, aby zmniejszyć.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>Decrements a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value by 1.</source>
          <target state="translated">Zmniejsza <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość 1.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>The value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter decremented by 1.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru zmniejszana o 1.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Decrement%2A&gt;</ph> method defines the decrement operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Decrement%2A&gt;</ph> Metoda definiuje operacji dekrementacji dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>For example:</source>
          <target state="translated">Na przykład:</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>Because <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects are immutable, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.op_Decrement%2A&gt;</ph> operator creates a new <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> object whose value is one less than the <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> object represented by <ph id="ph5">`value`</ph>.</source>
          <target state="translated">Ponieważ <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiekty są niezmienne, <ph id="ph2">&lt;xref:System.Numerics.BigInteger.op_Decrement%2A&gt;</ph> tworzy nowy operator <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu, którego wartość jest jeden mniejszej niż <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu reprezentowanego przez <ph id="ph5">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>This means that repeated calls to <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Decrement%2A&gt;</ph> may be expensive.</source>
          <target state="translated">Oznacza to, że powtarzane wywołania <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Decrement%2A&gt;</ph> może być kosztowne.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to be divided.</source>
          <target state="translated">Wartość podział.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to divide by.</source>
          <target state="translated">Wartość do dzielenia przez.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Divides a specified <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value by another specified <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value by using integer division.</source>
          <target state="translated">Dzieli określonej <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości przez inny określony <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość przy użyciu dzielenie liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The integral result of the division.</source>
          <target state="translated">Całkowite wyniku podziału.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Division%2A&gt;</ph> method defines the division operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Division%2A&gt;</ph> Metoda definiuje operacji dzielenia dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators and operator overloading can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatory i przeładowania operatora można wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Jest równoważne metodę dla tego operatora <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">Poniższy przykład tworzy tablicę <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It then uses each element as the quotient in a division operation that uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method, the division operator (/), and the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> method.</source>
          <target state="translated">Następnie używa każdy element jako iloraz w operacji dzielenia, która używa <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> — metoda, operator dzielenia (/) i <ph id="ph2">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> to 0 (zero).</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether two values are equal.</source>
          <target state="translated">Zwraca wartość wskazującą, czy dwie wartości są równe.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a signed long integer value and a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value are equal.</source>
          <target state="translated">Zwraca wartość wskazującą, czy wartość całkowita długie i a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości są równe.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> i <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parametry mają taką samą wartość; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> method defines the equality comparison operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> Metoda definiuje operacji porównania równości dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph> instance method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph> zamiast tego wystąpienia metody.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>If <ph id="ph1">`left`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">Jeśli <ph id="ph1">`left`</ph> jest <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, lub <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> wartości on jest niejawnie przekonwertowana na <ph id="ph8">&lt;xref:System.Int64&gt;</ph> wartości podczas wykonywania operacji.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value and a signed long integer value are equal.</source>
          <target state="translated">Zwraca wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości i podpisem długich liczb całkowitych są takie same.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> i <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parametry mają taką samą wartość; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> method defines the equality comparison operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> Metoda definiuje operacji porównania równości dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph> instance method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph> zamiast tego wystąpienia metody.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>If <ph id="ph1">`right`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">Jeśli <ph id="ph1">`right`</ph> jest <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, lub <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> wartości on jest niejawnie przekonwertowana na <ph id="ph8">&lt;xref:System.Int64&gt;</ph> wartości podczas wykonywania operacji.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether the values of two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> objects are equal.</source>
          <target state="translated">Zwraca wartość wskazującą, czy wartości dwu <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiekty są takie same.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> i <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parametry mają taką samą wartość; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> method defines the operation of the equality operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> Metoda definiuje operacji operatora równości dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> instance method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> zamiast tego wystąpienia metody.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value and an unsigned long integer value are equal.</source>
          <target state="translated">Zwraca wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości i wartości bez znaku długich liczb całkowitych są takie same.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> i <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parametry mają taką samą wartość; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> method defines the equality comparison operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> Metoda definiuje operacji porównania równości dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> instance method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> zamiast tego wystąpienia metody.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether an unsigned long integer value and a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value are equal.</source>
          <target state="translated">Zwraca wartość wskazującą, czy wartość bez znaku długich liczb całkowitych i a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości są równe.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> i <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parametry mają taką samą wartość; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> method defines the equality comparison operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> Metoda definiuje operacji porównania równości dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> instance method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> zamiast tego wystąpienia metody.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value.</source>
          <target state="translated">Pierwsza wartość.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value.</source>
          <target state="translated">Druga wartość.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Performs a bitwise exclusive <ph id="ph1">&lt;see langword="Or" /&gt;</ph> (<ph id="ph2">&lt;see langword="XOr" /&gt;</ph>) operation on two <ph id="ph3">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">Operator wyłączny wykonuje <ph id="ph1">&lt;see langword="Or" /&gt;</ph> (<ph id="ph2">&lt;see langword="XOr" /&gt;</ph>) operacji na dwóch <ph id="ph3">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result of the bitwise <ph id="ph1">&lt;see langword="Or" /&gt;</ph> operation.</source>
          <target state="translated">Wynik operatora testu koniunkcji <ph id="ph1">&lt;see langword="Or" /&gt;</ph> operacji.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result of a bitwise exclusive <ph id="ph1">`Or`</ph> operation is <ph id="ph2">`true`</ph> if the values of the two bits are different; otherwise, it is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wynik operator wyłączny <ph id="ph1">`Or`</ph> operacji <ph id="ph2">`true`</ph> w przypadku różnych; w przeciwnym razie wartości dwa bity jest <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following table illustrates the exclusive <ph id="ph1">`Or`</ph> operation.</source>
          <target state="translated">W poniższej tabeli przedstawiono wyłączne <ph id="ph1">`Or`</ph> operacji.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit x in <ph id="ph1">`left`</ph></source>
          <target state="translated">Bit x <ph id="ph1">`left`</ph></target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit x in <ph id="ph1">`right`</ph></source>
          <target state="translated">Bit x <ph id="ph1">`right`</ph></target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Return value</source>
          <target state="translated">Wartość zwracana</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_ExclusiveOr%2A&gt;</ph> method enables code such as the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_ExclusiveOr%2A&gt;</ph> Metoda umożliwia następującego kodu:</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_ExclusiveOr%2A&gt;</ph> method performs the bitwise exclusive <ph id="ph2">`Or`</ph> operation on two <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values as if they were both in two's complement representation with virtual sign extension.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_ExclusiveOr%2A&gt;</ph> Metoda przeprowadza operator wyłączny <ph id="ph2">`Or`</ph> operacji na dwóch <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości, tak jakby były to zarówno w dwóch jego dopełnienia reprezentacji z rozszerzeniem wirtualnego logowania.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Defines an explicit conversion between a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object and another type.</source>
          <target state="translated">Definiuje jawnej konwersji między <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektu i innego typu.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">Wartość do przekonwertowania na <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object to a <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Definiuje jawna konwersja <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> do obiektu <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>Any fractional part of the <ph id="ph1">`value`</ph> parameter is truncated before conversion.</source>
          <target state="translated">Wszystkie części ułamkowej <ph id="ph1">`value`</ph> parametr został obcięty przed konwersją.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> można przekonwertować obiektu.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>Because the conversion from <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> can involve truncating any fractional part of <ph id="ph3">`value`</ph>, language compilers do not perform this conversion automatically.</source>
          <target state="translated">Ponieważ konwersja z <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> do <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> może pociągać za sobą żadnych części ułamkowej obcinanie <ph id="ph3">`value`</ph>, Kompilatory języka nie wykonaj tę konwersję automatycznie.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> in Visual Basic) is used.</source>
          <target state="translated">Zamiast tego wykonują konwersji tylko wtedy, gdy operator rzutowania (w języku C#) lub funkcji konwersji (takich jak <ph id="ph1">`CType`</ph> w języku Visual Basic) jest używany.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">W przeciwnym razie wystąpi błąd kompilatora wyświetlane.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>For languages that do not support custom operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Dla języków, które nie obsługują niestandardowych operatory alternatywną metodą jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>The following example converts the individual elements in an array of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects, and then displays the result of each conversion.</source>
          <target state="translated">Poniższy przykład konwertuje poszczególnych elementów w tablicy <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> wartości do <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektów, a następnie wyświetla wynik każdego konwersji.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>Note that any fractional part of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value is truncated during the conversion.</source>
          <target state="translated">Należy pamiętać, że jakaś ułamkową część <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> wartość zostanie obcięta podczas konwersji.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">Wartość do przekonwertowania na <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value to a <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Definiuje jawna konwersja <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> do wartości <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>Any fractional part of the <ph id="ph1">`value`</ph> parameter is truncated before conversion.</source>
          <target state="translated">Wszystkie części ułamkowej <ph id="ph1">`value`</ph> parametr został obcięty przed konwersją.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> można przekonwertować obiektu.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>Because the conversion from <ph id="ph1">&lt;xref:System.Double&gt;</ph> to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> can involve truncating any fractional part of <ph id="ph3">`value`</ph>, language compilers do not perform this conversion automatically.</source>
          <target state="translated">Ponieważ konwersja z <ph id="ph1">&lt;xref:System.Double&gt;</ph> do <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> może pociągać za sobą żadnych części ułamkowej obcinanie <ph id="ph3">`value`</ph>, Kompilatory języka nie wykonaj tę konwersję automatycznie.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> in Visual Basic) is used.</source>
          <target state="translated">Zamiast tego wykonują konwersji tylko wtedy, gdy operator rzutowania (w języku C#) lub funkcji konwersji (takich jak <ph id="ph1">`CType`</ph> w języku Visual Basic) jest używany.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">W przeciwnym razie wystąpi błąd kompilatora wyświetlane.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>For languages that do not support custom operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Dla języków, które nie obsługują niestandardowych operatory alternatywną metodą jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>The following example converts the individual elements in an array of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects, and then displays the result of each conversion.</source>
          <target state="translated">Poniższy przykład konwertuje poszczególnych elementów w tablicy <ph id="ph1">&lt;xref:System.Double&gt;</ph> wartości do <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektów, a następnie wyświetla wynik każdego konwersji.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>Note that any fractional part of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value is truncated during the conversion.</source>
          <target state="translated">Należy pamiętać, że jakaś ułamkową część <ph id="ph1">&lt;xref:System.Double&gt;</ph> wartość zostanie obcięta podczas konwersji.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated">Wartość do przekonwertowania na <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to an unsigned byte value.</source>
          <target state="translated">Definiuje jawna konwersja <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektu do wartości bajtu bez znaku.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> można przekonwertować obiektu.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">Kompilatory języka nie wykonaj tę konwersję automatycznie, ponieważ może obejmować utraty danych.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CByte`</ph> in Visual Basic) is used.</source>
          <target state="translated">Zamiast tego wykonują konwersji tylko wtedy, gdy operator rzutowania (w języku C#) lub funkcji konwersji (takich jak <ph id="ph1">`CType`</ph> lub <ph id="ph2">`CByte`</ph> w języku Visual Basic) jest używany.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">W przeciwnym razie wystąpi błąd kompilatora wyświetlane.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Byte&gt;</ph> data type.</source>
          <target state="translated">Ponieważ ta operacja definiuje konwersji zawężającej, może zgłosić <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> na czas wykonywania Jeśli <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph3">&lt;xref:System.Byte&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">Nie są tracone dokładności powstałe w ten sposób <ph id="ph1">&lt;xref:System.Byte&gt;</ph> wartość, jeśli konwersja zakończy się pomyślnie.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">Poniższy przykład przedstawia konwersji <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> do <ph id="ph2">&lt;xref:System.Byte&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Byte&gt;</ph> data type.</source>
          <target state="translated">Umożliwia on również obsługę <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> który jest generowany, gdy <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph3">&lt;xref:System.Byte&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest mniejsza niż <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest większa niż <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">Wartość do przekonwertowania na <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">Definiuje jawna konwersja <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> do obiektu <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> można przekonwertować obiektu.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">Kompilatory języka nie wykonaj tę konwersję automatycznie, ponieważ może obejmować utraty danych.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CDec`</ph> in Visual Basic) is used.</source>
          <target state="translated">Zamiast tego wykonują konwersji tylko wtedy, gdy operator rzutowania (w języku C#) lub funkcji konwersji (takich jak <ph id="ph1">`CType`</ph> lub <ph id="ph2">`CDec`</ph> w języku Visual Basic) jest używany.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> data type.</source>
          <target state="translated">Ponieważ ta operacja definiuje konwersji zawężającej, może zgłosić <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> na czas wykonywania Jeśli <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">Poniższy przykład przedstawia konwersji <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> do <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> data type.</source>
          <target state="translated">Umożliwia on również obsługę <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> który jest generowany, gdy <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest mniejsza niż <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest większa niż <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">Wartość do przekonwertowania na <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">Definiuje jawna konwersja <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> do obiektu <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> można przekonwertować obiektu.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">Kompilatory języka nie wykonaj tę konwersję automatycznie, ponieważ może obejmować utraty danych.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CDbl`</ph> in Visual Basic) is used.</source>
          <target state="translated">Zamiast tego wykonują konwersji tylko wtedy, gdy operator rzutowania (w języku C#) lub funkcji konwersji (takich jak <ph id="ph1">`CType`</ph> lub <ph id="ph2">`CDbl`</ph> w języku Visual Basic) jest używany.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>Because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value can be outside the range of the <ph id="ph2">&lt;xref:System.Double&gt;</ph> data type, this operation is a narrowing conversion.</source>
          <target state="translated">Ponieważ <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> możliwe wartości spoza zakresu <ph id="ph2">&lt;xref:System.Double&gt;</ph> typ danych, ta operacja jest konwersji zawężającej.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>If the conversion is unsuccessful, it does not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Jeśli konwersja zakończy się niepowodzeniem, nie generują <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>Instead, if the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is less than <ph id="ph2">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph>, the resulting <ph id="ph3">&lt;xref:System.Double&gt;</ph> value is <ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Zamiast tego Jeśli <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest mniejsza niż <ph id="ph2">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph>, powstałe w ten sposób <ph id="ph3">&lt;xref:System.Double&gt;</ph> wartość jest <ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>If the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is greater than <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>, the resulting <ph id="ph3">&lt;xref:System.Double&gt;</ph> value is <ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest większa niż <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>, powstałe w ten sposób <ph id="ph3">&lt;xref:System.Double&gt;</ph> wartość jest <ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>The conversion of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> may involve a loss of precision.</source>
          <target state="translated">Konwersja typu <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> do <ph id="ph2">&lt;xref:System.Double&gt;</ph> może pociągać za sobą zmniejszenie precyzji.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph2">&lt;xref:System.Double&gt;</ph> data type.</source>
          <target state="translated">W niektórych przypadkach utratę dokładności może spowodować powodzenie operacji rzutowania lub konwersji nawet wtedy, gdy <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph2">&lt;xref:System.Double&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>The following example provides an illustration.</source>
          <target state="translated">Poniższy przykład stanowi ilustrację.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>It assigns the maximum value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> to two <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variables, increments one <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable by 9.999e291, and tests the two variables for equality.</source>
          <target state="translated">Przypisuje wartość maksymalna <ph id="ph1">&lt;xref:System.Double&gt;</ph> do dwóch <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> zmiennych, co zwiększa <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> zmiennej 9.999e291, a testy dwie zmienne pod kątem równości.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>As expected, the call to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> method shows that they are unequal.</source>
          <target state="translated">Zgodnie z oczekiwaniami, wywołanie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> metody pokazuje, czy są one nierówne.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>However, the conversion of the larger <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value back to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> succeeds, although the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value now exceeds <ph id="ph4">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Jednak konwersji większy <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości z powrotem do <ph id="ph2">&lt;xref:System.Double&gt;</ph> zakończy się powodzeniem, mimo że <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> teraz przekracza wartość <ph id="ph4">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">Poniższy przykład przedstawia konwersji <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> do <ph id="ph2">&lt;xref:System.Double&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>The value to convert to a 16-bit signed integer.</source>
          <target state="translated">Wartość do przekonwertowania na 16-bitową liczbę całkowitą ze znakiem.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a 16-bit signed integer value.</source>
          <target state="translated">Definiuje jawna konwersja <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektu na wartość 16-bitową liczbę całkowitą ze znakiem.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> można przekonwertować obiektu.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">Kompilatory języka nie wykonaj tę konwersję automatycznie, ponieważ może obejmować utraty danych.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CShort`</ph> in Visual Basic) is used.</source>
          <target state="translated">Zamiast tego wykonują konwersji tylko wtedy, gdy operator rzutowania (w języku C#) lub funkcji konwersji (takich jak <ph id="ph1">`CType`</ph> lub <ph id="ph2">`CShort`</ph> w języku Visual Basic) jest używany.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">W przeciwnym razie wystąpi błąd kompilatora wyświetlane.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Int16&gt;</ph> data type.</source>
          <target state="translated">Ponieważ ta operacja definiuje konwersji zawężającej, może zgłosić <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> na czas wykonywania Jeśli <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph3">&lt;xref:System.Int16&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.Int16&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">Nie są tracone dokładności powstałe w ten sposób <ph id="ph1">&lt;xref:System.Int16&gt;</ph> wartość, jeśli konwersja zakończy się pomyślnie.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Int16&gt;</ph> values.</source>
          <target state="translated">Poniższy przykład przedstawia konwersji <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> do <ph id="ph2">&lt;xref:System.Int16&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Int16&gt;</ph> data type.</source>
          <target state="translated">Umożliwia on również obsługę <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> który jest generowany, gdy <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph3">&lt;xref:System.Int16&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest mniejsza niż <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest większa niż <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>The value to convert to a 32-bit signed integer.</source>
          <target state="translated">Wartość do przekonwertowania na 32-bitowej podpisanej liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a 32-bit signed integer value.</source>
          <target state="translated">Definiuje jawna konwersja <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektu wartości 32-bitowej liczby całkowitej ze znakiem.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> można przekonwertować obiektu.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">Kompilatory języka nie wykonaj tę konwersję automatycznie, ponieważ może obejmować utraty danych.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CInt`</ph> in Visual Basic) is used.</source>
          <target state="translated">Zamiast tego wykonują konwersji tylko wtedy, gdy operator rzutowania (w języku C#) lub funkcji konwersji (takich jak <ph id="ph1">`CType`</ph> lub <ph id="ph2">`CInt`</ph> w języku Visual Basic) jest używany.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">W przeciwnym razie wystąpi błąd kompilatora wyświetlane.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Int32&gt;</ph> data type.</source>
          <target state="translated">Ponieważ ta operacja definiuje konwersji zawężającej, może zgłosić <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> na czas wykonywania Jeśli <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph3">&lt;xref:System.Int32&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.Int16&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">Nie są tracone dokładności powstałe w ten sposób <ph id="ph1">&lt;xref:System.Int16&gt;</ph> wartość, jeśli konwersja zakończy się pomyślnie.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Int32&gt;</ph> values.</source>
          <target state="translated">Poniższy przykład przedstawia konwersji <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> do <ph id="ph2">&lt;xref:System.Int32&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Int32&gt;</ph> data type.</source>
          <target state="translated">Umożliwia on również obsługę <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> który jest generowany, gdy <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph3">&lt;xref:System.Int32&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest mniejsza niż <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest większa niż <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>The value to convert to a 64-bit signed integer.</source>
          <target state="translated">Wartość do przekonwertowania na 64-bitowej podpisanej liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a 64-bit signed integer value.</source>
          <target state="translated">Definiuje jawna konwersja <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektu na wartość 64-bitowej podpisanej liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> można przekonwertować obiektu.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">Kompilatory języka nie wykonaj tę konwersję automatycznie, ponieważ może obejmować utraty danych.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CLng`</ph> in Visual Basic) is used.</source>
          <target state="translated">Zamiast tego wykonują konwersji tylko wtedy, gdy operator rzutowania (w języku C#) lub funkcji konwersji (takich jak <ph id="ph1">`CType`</ph> lub <ph id="ph2">`CLng`</ph> w języku Visual Basic) jest używany.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">W przeciwnym razie wystąpi błąd kompilatora wyświetlane.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Int64&gt;</ph> data type.</source>
          <target state="translated">Ponieważ ta operacja definiuje konwersji zawężającej, może zgłosić <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> na czas wykonywania Jeśli <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph3">&lt;xref:System.Int64&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Int64&gt;</ph> values.</source>
          <target state="translated">Poniższy przykład przedstawia konwersji <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> do <ph id="ph2">&lt;xref:System.Int64&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Int64&gt;</ph> data type.</source>
          <target state="translated">Umożliwia on również obsługę <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> który jest generowany, gdy <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph3">&lt;xref:System.Int64&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest mniejsza niż <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest większa niż <ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>The value to convert to a signed 8-bit value.</source>
          <target state="translated">Wartość do przekonwertowania na podpisem 8-bitową wartość.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a signed 8-bit value.</source>
          <target state="translated">Definiuje jawna konwersja <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektu podpisem wartości 8-bitowych.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Ten interfejs API nie jest zgodny ze specyfikacją CLS.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</source>
          <target state="translated">Alternatywa zgodna ze standardem jest <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> można przekonwertować obiektu.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">Kompilatory języka nie wykonaj tę konwersję automatycznie, ponieważ może obejmować utraty danych.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CSByte`</ph> in Visual Basic) is used.</source>
          <target state="translated">Zamiast tego wykonują konwersji tylko wtedy, gdy operator rzutowania (w języku C#) lub funkcji konwersji (takich jak <ph id="ph1">`CType`</ph> lub <ph id="ph2">`CSByte`</ph> w języku Visual Basic) jest używany.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">W przeciwnym razie wystąpi błąd kompilatora wyświetlane.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.SByte&gt;</ph> data type.</source>
          <target state="translated">Ponieważ ta operacja definiuje konwersji zawężającej, może zgłosić <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> na czas wykonywania Jeśli <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph3">&lt;xref:System.SByte&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.SByte&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">Nie są tracone dokładności powstałe w ten sposób <ph id="ph1">&lt;xref:System.SByte&gt;</ph> wartość, jeśli konwersja zakończy się pomyślnie.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.SByte&gt;</ph> values.</source>
          <target state="translated">Poniższy przykład przedstawia konwersji <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> do <ph id="ph2">&lt;xref:System.SByte&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.SByte&gt;</ph> data type.</source>
          <target state="translated">Umożliwia on również obsługę <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> który jest generowany, gdy <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph3">&lt;xref:System.SByte&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest mniejsza niż <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest większa niż <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>The value to convert to a single-precision floating-point value.</source>
          <target state="translated">Wartość do przekonwertowania na wartość zmiennoprzecinkową o pojedynczej dokładności.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a single-precision floating-point value.</source>
          <target state="translated">Definiuje jawna konwersja <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektu do wartości zmiennoprzecinkowych pojedynczej precyzji.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>An object that contains the closest possible representation of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający najbliższego reprezentacja możliwe <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> można przekonwertować obiektu.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss or a loss of precision.</source>
          <target state="translated">Kompilatory języka nie wykonaj tę konwersję automatycznie, ponieważ może obejmować, utrata danych lub utratę dokładności.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CSng`</ph> in Visual Basic) is used.</source>
          <target state="translated">Zamiast tego wykonują konwersji tylko wtedy, gdy operator rzutowania (w języku C#) lub funkcji konwersji (takich jak <ph id="ph1">`CType`</ph> lub <ph id="ph2">`CSng`</ph> w języku Visual Basic) jest używany.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">W przeciwnym razie wystąpi błąd kompilatora wyświetlane.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>Because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value can be outside the range of the <ph id="ph2">&lt;xref:System.Single&gt;</ph> data type, this operation is a narrowing conversion.</source>
          <target state="translated">Ponieważ <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> możliwe wartości spoza zakresu <ph id="ph2">&lt;xref:System.Single&gt;</ph> typ danych, ta operacja jest konwersji zawężającej.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>If the conversion is unsuccessful, it does not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Jeśli konwersja zakończy się niepowodzeniem, nie generują <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>Instead, if the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is less than <ph id="ph2">&lt;xref:System.Single.MinValue?displayProperty=nameWithType&gt;</ph>, the resulting <ph id="ph3">&lt;xref:System.Single&gt;</ph> value is <ph id="ph4">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Zamiast tego Jeśli <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest mniejsza niż <ph id="ph2">&lt;xref:System.Single.MinValue?displayProperty=nameWithType&gt;</ph>, powstałe w ten sposób <ph id="ph3">&lt;xref:System.Single&gt;</ph> wartość jest <ph id="ph4">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>If the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is greater than <ph id="ph2">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph>, the resulting <ph id="ph3">&lt;xref:System.Single&gt;</ph> value is <ph id="ph4">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest większa niż <ph id="ph2">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph>, powstałe w ten sposób <ph id="ph3">&lt;xref:System.Single&gt;</ph> wartość jest <ph id="ph4">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>The conversion of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to a <ph id="ph2">&lt;xref:System.Single&gt;</ph> may involve a loss of precision.</source>
          <target state="translated">Konwersja typu <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> do <ph id="ph2">&lt;xref:System.Single&gt;</ph> może pociągać za sobą zmniejszenie precyzji.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph2">&lt;xref:System.Single&gt;</ph> data type.</source>
          <target state="translated">W niektórych przypadkach utratę dokładności może spowodować powodzenie operacji rzutowania lub konwersji nawet wtedy, gdy <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph2">&lt;xref:System.Single&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>The following example provides an illustration.</source>
          <target state="translated">Poniższy przykład stanowi ilustrację.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>It assigns the maximum value of a <ph id="ph1">&lt;xref:System.Single&gt;</ph> to two <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variables, increments one <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable by 9.999e291, and tests the two variables for equality.</source>
          <target state="translated">Przypisuje wartość maksymalna <ph id="ph1">&lt;xref:System.Single&gt;</ph> do dwóch <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> zmiennych, co zwiększa <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> zmiennej 9.999e291, a testy dwie zmienne pod kątem równości.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>As expected, the call to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> method shows that they are unequal.</source>
          <target state="translated">Zgodnie z oczekiwaniami, wywołanie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> metody pokazuje, czy są one nierówne.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>However, the conversion of the larger <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value back to a <ph id="ph2">&lt;xref:System.Single&gt;</ph> succeeds, although the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value now exceeds <ph id="ph4">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Jednak konwersji większy <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości z powrotem do <ph id="ph2">&lt;xref:System.Single&gt;</ph> zakończy się powodzeniem, mimo że <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> teraz przekracza wartość <ph id="ph4">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated">Poniższy przykład przedstawia konwersji <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> do <ph id="ph2">&lt;xref:System.Single&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>The value to convert to an unsigned 16-bit integer.</source>
          <target state="translated">Wartość do przekonwertowania na liczbę całkowitą bez znaku 16-bitowych.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to an unsigned 16-bit integer value.</source>
          <target state="translated">Definiuje jawna konwersja <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektu niepodpisane 16-bitową liczbę całkowitą.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Ten interfejs API nie jest zgodny ze specyfikacją CLS.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">Alternatywa zgodna ze standardem jest <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> można przekonwertować obiektu.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">Kompilatory języka nie wykonaj tę konwersję automatycznie, ponieważ może obejmować utraty danych.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CUShort`</ph> in Visual Basic) is used.</source>
          <target state="translated">Zamiast tego wykonują konwersji tylko wtedy, gdy operator rzutowania (w języku C#) lub funkcji konwersji (takich jak <ph id="ph1">`CType`</ph> lub <ph id="ph2">`CUShort`</ph> w języku Visual Basic) jest używany.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">W przeciwnym razie wystąpi błąd kompilatora wyświetlane.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.UInt16&gt;</ph> data type.</source>
          <target state="translated">Ponieważ ta operacja definiuje konwersji zawężającej, może zgłosić <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> na czas wykonywania Jeśli <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph3">&lt;xref:System.UInt16&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">Nie są tracone dokładności powstałe w ten sposób <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> wartość, jeśli konwersja zakończy się pomyślnie.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> values.</source>
          <target state="translated">Poniższy przykład przedstawia konwersji <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> do <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.UInt16&gt;</ph> data type.</source>
          <target state="translated">Umożliwia on również obsługę <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> który jest generowany, gdy <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph3">&lt;xref:System.UInt16&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest mniejsza niż <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest większa niż <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>The value to convert to an unsigned 32-bit integer.</source>
          <target state="translated">Wartość do przekonwertowania na liczbę całkowitą bez znaku 32-bitowych.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to an unsigned 32-bit integer value.</source>
          <target state="translated">Definiuje jawna konwersja <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektu wartości bez znaku 32-bitowej liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Ten interfejs API nie jest zgodny ze specyfikacją CLS.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">Alternatywa zgodna ze standardem jest <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> można przekonwertować obiektu.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">Kompilatory języka nie wykonaj tę konwersję automatycznie, ponieważ może obejmować utraty danych.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CUInt`</ph> in Visual Basic) is used.</source>
          <target state="translated">Zamiast tego wykonują konwersji tylko wtedy, gdy operator rzutowania (w języku C#) lub funkcji konwersji (takich jak <ph id="ph1">`CType`</ph> lub <ph id="ph2">`CUInt`</ph> w języku Visual Basic) jest używany.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">W przeciwnym razie wystąpi błąd kompilatora wyświetlane.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.UInt32&gt;</ph> data type.</source>
          <target state="translated">Ponieważ ta operacja definiuje konwersji zawężającej, może zgłosić <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> na czas wykonywania Jeśli <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph3">&lt;xref:System.UInt32&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">Nie są tracone dokładności powstałe w ten sposób <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> wartość, jeśli konwersja zakończy się pomyślnie.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> values.</source>
          <target state="translated">Poniższy przykład przedstawia konwersji <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> do <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.UInt32&gt;</ph> data type.</source>
          <target state="translated">Umożliwia on również obsługę <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> który jest generowany, gdy <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph3">&lt;xref:System.UInt32&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest mniejsza niż <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest większa niż <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>The value to convert to an unsigned 64-bit integer.</source>
          <target state="translated">Wartość do przekonwertowania na liczbę całkowitą bez znaku 64-bitowych.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to an unsigned 64-bit integer value.</source>
          <target state="translated">Definiuje jawna konwersja <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektu na wartość całkowitą 64-bitowych unsigned.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Ten interfejs API nie jest zgodny ze specyfikacją CLS.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">Alternatywa zgodna ze standardem jest <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> można przekonwertować obiektu.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">Kompilatory języka nie wykonaj tę konwersję automatycznie, ponieważ może obejmować utraty danych.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CULng`</ph> in Visual Basic) is used.</source>
          <target state="translated">Zamiast tego wykonują konwersji tylko wtedy, gdy operator rzutowania (w języku C#) lub funkcji konwersji (takich jak <ph id="ph1">`CType`</ph> lub <ph id="ph2">`CULng`</ph> w języku Visual Basic) jest używany.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">W przeciwnym razie wystąpi błąd kompilatora wyświetlane.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.UInt64&gt;</ph> data type.</source>
          <target state="translated">Ponieważ ta operacja definiuje konwersji zawężającej, może zgłosić <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> na czas wykonywania Jeśli <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph3">&lt;xref:System.UInt64&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">Nie są tracone dokładności powstałe w ten sposób <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> wartość, jeśli konwersja zakończy się pomyślnie.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> values.</source>
          <target state="translated">Poniższy przykład przedstawia konwersji <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> do <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.UInt64&gt;</ph> data type.</source>
          <target state="translated">Umożliwia on również obsługę <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> który jest generowany, gdy <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest poza zakresem <ph id="ph3">&lt;xref:System.UInt64&gt;</ph> — typ danych.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest mniejsza niż <ph id="ph2">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest większa niż <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">Wartość do przekonwertowania na <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value to a <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Definiuje jawna konwersja <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> do wartości <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>Any fractional part of the <ph id="ph1">`value`</ph> parameter is truncated before conversion.</source>
          <target state="translated">Wszystkie części ułamkowej <ph id="ph1">`value`</ph> parametr został obcięty przed konwersją.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> można przekonwertować obiektu.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>Because the conversion from <ph id="ph1">&lt;xref:System.Single&gt;</ph> to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> can involve truncating any fractional part of <ph id="ph3">`value`</ph>, language compilers do not perform this conversion automatically.</source>
          <target state="translated">Ponieważ konwersja z <ph id="ph1">&lt;xref:System.Single&gt;</ph> do <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> może pociągać za sobą żadnych części ułamkowej obcinanie <ph id="ph3">`value`</ph>, Kompilatory języka nie wykonaj tę konwersję automatycznie.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> in Visual Basic) is used.</source>
          <target state="translated">Zamiast tego wykonują konwersji tylko wtedy, gdy operator rzutowania (w języku C#) lub funkcji konwersji (takich jak <ph id="ph1">`CType`</ph> w języku Visual Basic) jest używany.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">W przeciwnym razie wystąpi błąd kompilatora wyświetlane.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>For languages that do not support custom operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Dla języków, które nie obsługują niestandardowych operatory alternatywną metodą jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>The following example converts the individual elements in an array of <ph id="ph1">&lt;xref:System.Single&gt;</ph> values to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects, and then displays the result of each conversion.</source>
          <target state="translated">Poniższy przykład konwertuje poszczególnych elementów w tablicy <ph id="ph1">&lt;xref:System.Single&gt;</ph> wartości do <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektów, a następnie wyświetla wynik każdego konwersji.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>Note that any fractional part of a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value is truncated during the conversion.</source>
          <target state="translated">Należy pamiętać, że jakaś ułamkową część <ph id="ph1">&lt;xref:System.Single&gt;</ph> wartość zostanie obcięta podczas konwersji.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether a specified value is greater than another specified value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy określona wartość jest większa niż innego określona wartość.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit signed integer is greater than a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy całkowita 64-bitowego jest większy niż <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest większa niż <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> Metoda definiuje operację większym niż operator <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> instance method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> zamiast tego wystąpienia metody.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">W przypadku niektórych języków może także wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>If <ph id="ph1">`left`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">Jeśli <ph id="ph1">`left`</ph> jest <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, lub <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> wartości on jest niejawnie przekonwertowana na <ph id="ph8">&lt;xref:System.Int64&gt;</ph> wartości podczas wykonywania operacji.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> is greater than a 64-bit signed integer value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> jest większa niż wartość 64-bitowej podpisanej liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest większa niż <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> Metoda definiuje operację większym niż operator <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">W przypadku niektórych języków może także wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>If <ph id="ph1">`right`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">Jeśli <ph id="ph1">`right`</ph> jest <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, lub <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> wartości on jest niejawnie przekonwertowana na <ph id="ph8">&lt;xref:System.Int64&gt;</ph> wartości podczas wykonywania operacji.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is greater than another <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość jest większa niż innego <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest większa niż <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> Metoda definiuje operację większym niż operator <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Można również wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is greater than a 64-bit unsigned integer.</source>
          <target state="translated">Zwraca wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość jest większa niż 64-bitowej liczby całkowitej bez znaku.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest większa niż <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> Metoda definiuje operację większym niż operator <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">W przypadku niektórych języków może także wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is greater than a 64-bit unsigned integer.</source>
          <target state="translated">Zwraca wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość jest większa niż 64-bitowej liczby całkowitej bez znaku.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest większa niż <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> Metoda definiuje operację większym niż operator <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">W przypadku niektórych języków może także wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether a specified value is greater than or equal to another specified value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy określona wartość jest większa niż lub równe innego określona wartość.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy 64-bitowych całkowita jest większa niż lub równa <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest większa niż <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> Metoda definiuje operację większa niż lub równa operatora dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">W przypadku niektórych języków może także wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>If <ph id="ph1">`left`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">Jeśli <ph id="ph1">`left`</ph> jest <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, lub <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> wartości on jest niejawnie przekonwertowana na <ph id="ph8">&lt;xref:System.Int64&gt;</ph> wartości podczas wykonywania operacji.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is greater than or equal to a 64-bit signed integer value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość jest większa lub równa wartości 64-bitowej podpisanej liczby całkowitej.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest większa niż <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> Metoda definiuje operację większa niż lub równa operatora dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">W przypadku niektórych języków może także wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>If <ph id="ph1">`right`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">Jeśli <ph id="ph1">`right`</ph> jest <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, lub <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> wartości on jest niejawnie przekonwertowana na <ph id="ph8">&lt;xref:System.Int64&gt;</ph> wartości podczas wykonywania operacji.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is greater than or equal to another <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość jest większa niż lub równa innej <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest większa niż <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> Metoda definiuje operację większa niż lub równa operatora dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">W przypadku niektórych języków może także wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is greater than or equal to a 64-bit unsigned integer value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość jest większa lub równa wartości 64-bitowej liczby całkowitej bez znaku.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest większa niż <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> Metoda definiuje operację większa niż lub równa operatora dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">W przypadku niektórych języków może także wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy 64-bitowej liczby całkowitej bez znaku jest większa niż lub równa <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest większa niż <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> Metoda definiuje operację większa niż lub równa operatora dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">W przypadku niektórych języków może także wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Defines an implicit conversion between a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object and another type.</source>
          <target state="translated">Definiuje niejawna konwersja między <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektu i innego typu.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">Wartość do przekonwertowania na <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of an unsigned byte to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Definiuje niejawnej konwersji wartości bajtu bez znaku do <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>Any fractional part of the <ph id="ph1">`value`</ph> parameter is truncated before conversion.</source>
          <target state="translated">Wszystkie części ułamkowej <ph id="ph1">`value`</ph> parametr został obcięty przed konwersją.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">W przypadku języków, które nie obsługują operatory niejawnej alternatywną metodą jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego kompilatora może automatycznie przekonwertować <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość bez jawnego rzutowania operator (C#) lub wywołanie funkcji konwersji (w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Są one rozszerzanie konwersji, nie obejmują utraty danych, które nie zgłaszają <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">To przeciążenie umożliwia kompilatora obsługiwać konwersję z <ph id="ph1">&lt;xref:System.Byte&gt;</ph> do wartości <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość, jak przedstawiono w następującym przykładzie.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">Wartość do przekonwertowania na <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of a signed 16-bit integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Definiuje niejawnej konwersji wartości 16-bitową liczbę całkowitą ze znakiem do <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">W przypadku języków, które nie obsługują operatory niejawnej alternatywną metodą jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego kompilatora może automatycznie przekonwertować <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość bez jawnego rzutowania operator (C#) lub wywołanie funkcji konwersji (w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Są one rozszerzanie konwersji, nie obejmują utraty danych, które nie zgłaszają <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Int16&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">To przeciążenie umożliwia kompilatora obsługiwać konwersję z <ph id="ph1">&lt;xref:System.Int16&gt;</ph> do wartości <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość, jak przedstawiono w następującym przykładzie.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">Wartość do przekonwertowania na <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of a signed 32-bit integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Definiuje niejawna konwersja całkowita 32-bitowa do <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">W przypadku języków, które nie obsługują operatory niejawnej alternatywną metodą jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego kompilatora może automatycznie przekonwertować <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość bez jawnego rzutowania operator (C#) lub wywołanie funkcji konwersji (w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Są one rozszerzanie konwersji, nie obejmują utraty danych, które nie zgłaszają <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Int32&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">To przeciążenie umożliwia kompilatora obsługiwać konwersję z <ph id="ph1">&lt;xref:System.Int32&gt;</ph> do wartości <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość, jak przedstawiono w następującym przykładzie.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">Wartość do przekonwertowania na <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of a signed 64-bit integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Definiuje niejawna konwersja całkowita 64-bitowa do <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">W przypadku języków, które nie obsługują operatory niejawnej alternatywną metodą jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego kompilatora może automatycznie przekonwertować <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość bez jawnego rzutowania operator (C#) lub wywołanie funkcji konwersji (w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Są one rozszerzanie konwersji, nie obejmują utraty danych, które nie zgłaszają <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Int64&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">To przeciążenie umożliwia kompilatora obsługiwać konwersję z <ph id="ph1">&lt;xref:System.Int64&gt;</ph> do wartości <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość, jak przedstawiono w następującym przykładzie.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">Wartość do przekonwertowania na <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of an 8-bit signed integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Definiuje niejawnej konwersji wartości 8-bitową liczbę całkowitą ze znakiem do <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Ten interfejs API nie jest zgodny ze specyfikacją CLS.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" /&gt;</ph>.</source>
          <target state="translated">Alternatywa zgodna ze standardem jest <ph id="ph1">&lt;see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">W przypadku języków, które nie obsługują operatory niejawnej alternatywną metodą jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego kompilatora może automatycznie przekonwertować <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość bez jawnego rzutowania operator (C#) lub wywołanie funkcji konwersji (w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Są one rozszerzanie konwersji, nie obejmują utraty danych, które nie zgłaszają <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.SByte&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">To przeciążenie umożliwia kompilatora obsługiwać konwersję z <ph id="ph1">&lt;xref:System.SByte&gt;</ph> do wartości <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość, jak przedstawiono w następującym przykładzie.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">Wartość do przekonwertowania na <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of a 16-bit unsigned integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Definiuje niejawnej konwersji wartości 16-bitową liczbę całkowitą bez znaku do <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Ten interfejs API nie jest zgodny ze specyfikacją CLS.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">Alternatywa zgodna ze standardem jest <ph id="ph1">&lt;see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">W przypadku języków, które nie obsługują operatory niejawnej alternatywną metodą jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego kompilatora może automatycznie przekonwertować <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość bez jawnego rzutowania operator (C#) lub wywołanie funkcji konwersji (w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Są one rozszerzanie konwersji, nie obejmują utraty danych, które nie zgłaszają <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">To przeciążenie umożliwia kompilatora obsługiwać konwersję z <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> do wartości <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość, jak przedstawiono w następującym przykładzie.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">Wartość do przekonwertowania na <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of a 32-bit unsigned integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Definiuje niejawna konwersja z 32-bitowa liczba całkowita bez znaku do <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Ten interfejs API nie jest zgodny ze specyfikacją CLS.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">Alternatywa zgodna ze standardem jest <ph id="ph1">&lt;see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">W przypadku języków, które nie obsługują operatory niejawnej alternatywną metodą jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego kompilatora może automatycznie przekonwertować <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość bez jawnego rzutowania operator (C#) lub wywołanie funkcji konwersji (w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Są one rozszerzanie konwersji, nie obejmują utraty danych, które nie zgłaszają <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">To przeciążenie umożliwia kompilatora obsługiwać konwersję z <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> do wartości <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość, jak przedstawiono w następującym przykładzie.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">Wartość do przekonwertowania na <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of a 64-bit unsigned integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Definiuje niejawna konwersja 64-bitową nieznakowaną liczbą całkowitą do <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Ten interfejs API nie jest zgodny ze specyfikacją CLS.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">Alternatywa zgodna ze standardem jest <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Obiekt zawierający wartości <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">W przypadku języków, które nie obsługują operatory niejawnej alternatywną metodą jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Przeciążeń <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> metody Definiowanie typów, do którego lub z którego kompilatora może automatycznie przekonwertować <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość bez jawnego rzutowania operator (C#) lub wywołanie funkcji konwersji (w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Są one rozszerzanie konwersji, nie obejmują utraty danych, które nie zgłaszają <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">To przeciążenie umożliwia kompilatora obsługiwać konwersję z <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> do wartości <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość, jak przedstawiono w następującym przykładzie.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>The value to increment.</source>
          <target state="translated">Wartość do zwiększenia.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>Increments a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value by 1.</source>
          <target state="translated">Zwiększa <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość 1.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>The value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter incremented by 1.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru zwiększana o 1.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph> method defines the increment operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph> Metoda definiuje operacji przyrostu <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>Some languages (such as Visual Basic) that lack an increment operator or do not support operator overloading can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Niektóre języki (na przykład w języku Visual Basic), które mają operatora inkrementacji lub nie obsługują przeładowanie operatora można wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>Because <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects are immutable, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph> operator creates a new <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> object whose value is one more than the <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> object represented by <ph id="ph5">`value`</ph>.</source>
          <target state="translated">Ponieważ <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiekty są niezmienne, <ph id="ph2">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph> tworzy nowy operator <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu, którego wartość jest jeden więcej niż <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu reprezentowanego przez <ph id="ph5">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>Therefore, repeated calls to <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph> may be expensive.</source>
          <target state="translated">W związku z tym powtarzane wywołania <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph> może być kosztowne.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether two numeric values are not equal.</source>
          <target state="translated">Zwraca wartość wskazującą, czy dwie wartości liczbowe nie są takie same.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit signed integer and a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value are not equal.</source>
          <target state="translated">Zwraca wartość wskazującą, czy 64-bitowej podpisanej liczby całkowitej i a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości nie są takie same.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> i <ph id="ph3">&lt;paramref name="right" /&gt;</ph> nie są równe; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> Metoda definiuje operacji operator nierówności <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can test for inequality by using one of the following techniques:</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatory można sprawdzić pod kątem nierówności przy użyciu jednej z następujących metod:</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> instance method, which indicates the relationship between a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> and a signed long integer value.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> wystąpienia metody, która wskazuje relację między <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> i wartość podpisem długich liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph> instance method and reversing its value.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph> wystąpienia metody i cofania jej wartość.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>If <ph id="ph1">`left`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">Jeśli <ph id="ph1">`left`</ph> jest <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, lub <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> wartości on jest niejawnie przekonwertowana na <ph id="ph8">&lt;xref:System.Int64&gt;</ph> wartości podczas wykonywania operacji.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value and a 64-bit signed integer are not equal.</source>
          <target state="translated">Zwraca wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość i całkowita 64-bitowe nie są takie same.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> i <ph id="ph3">&lt;paramref name="right" /&gt;</ph> nie są równe; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> Metoda definiuje operacji operator nierówności <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>Languages that do not support custom operators can test for inequality by using one of the following techniques:</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatory można sprawdzić pod kątem nierówności przy użyciu jednej z następujących metod:</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method, which indicates the relationship between a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> and a signed long integer value.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> metodę, która wskazuje relację między <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> i wartość podpisem długich liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method and reversing its value.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph> — metoda i jego wartość cofania.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>If <ph id="ph1">`right`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">Jeśli <ph id="ph1">`right`</ph> jest <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, lub <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> wartości on jest niejawnie przekonwertowana na <ph id="ph8">&lt;xref:System.Int64&gt;</ph> wartości podczas wykonywania operacji.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> objects have different values.</source>
          <target state="translated">Zwraca wartość wskazującą, czy dwa <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiekty mają różne wartości.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> i <ph id="ph3">&lt;paramref name="right" /&gt;</ph> nie są równe; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> Metoda definiuje operacji operator nierówności <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can test for inequality by using one of the following techniques:</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatory można sprawdzić pod kątem nierówności przy użyciu jednej z następujących metod:</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType&gt;</ph> method, which indicates the relationship between two <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType&gt;</ph> metodę, która wskazuje relację między dwiema <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> method and reversing its value.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> — metoda i jego wartość cofania.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value and a 64-bit unsigned integer are not equal.</source>
          <target state="translated">Zwraca wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> nie są takie same wartości i 64-bitowej liczby całkowitej bez znaku.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> i <ph id="ph3">&lt;paramref name="right" /&gt;</ph> nie są równe; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> Metoda definiuje operacji operator nierówności <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>Languages that do not support custom operators can test for inequality by using one of the following techniques:</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatory można sprawdzić pod kątem nierówności przy użyciu jednej z następujących metod:</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method, which indicates the relationship between a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> and an unsigned long integer value.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> metodę, która wskazuje relację między <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> i wartości bez znaku długich liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method and reversing its value.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> — metoda i jego wartość cofania.</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit unsigned integer and a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value are not equal.</source>
          <target state="translated">Zwraca wartość wskazującą, czy 64-bitowej liczby całkowitej bez znaku i a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości nie są takie same.</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> i <ph id="ph3">&lt;paramref name="right" /&gt;</ph> nie są równe; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> Metoda definiuje operacji operator nierówności <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can test for inequality by using one of the following techniques:</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatory można sprawdzić pod kątem nierówności przy użyciu jednej z następujących metod:</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method, which indicates the relationship between a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> and an unsigned long integer value.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> metodę, która wskazuje relację między <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> i wartości bez znaku długich liczb całkowitych.</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method and reversing its value.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> — metoda i jego wartość cofania.</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>The value whose bits are to be shifted.</source>
          <target state="translated">Wartość, której bity są lekkie.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>The number of bits to shift <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> to the left.</source>
          <target state="translated">Liczba bitów, które mają zostać przesunięte <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept> po lewej stronie.</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>Shifts a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value a specified number of bits to the left.</source>
          <target state="translated">Zmiany <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość określoną liczbę bitów w lewo.</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>A value that has been shifted to the left by the specified number of bits.</source>
          <target state="translated">Wartość, która ma zostać przesunięty w lewo przez określoną liczbę bitów.</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LeftShift%2A&gt;</ph> method defines the operation of the bitwise left-shift operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LeftShift%2A&gt;</ph> Metoda definiuje operację z bitowego operator przesunięcia w lewo <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>Unlike the bitwise left-shift operation with integer primitives, the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LeftShift%2A&gt;</ph> method preserves the sign of the original <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">W przeciwieństwie do operacji przesunięcia w lewo z podstawowych całkowitą <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LeftShift%2A&gt;</ph> metody zachowuje znak oryginalnej <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>Languages that do not support custom operators can perform a bitwise left-shift operation by multiplying <ph id="ph1">`value`</ph> by <ph id="ph2">`BigInteger.Pow(2, shift)`</ph>.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatory można wykonać operacji przesunięcia w lewo przez pomnożenie <ph id="ph1">`value`</ph> przez <ph id="ph2">`BigInteger.Pow(2, shift)`</ph>.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>The following example shows that the results are identical to the results of using this operator.</source>
          <target state="translated">W poniższym przykładzie pokazano, że wyniki są takie same jak wyniki za pomocą tego operatora.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether a specified value is less than a second specified value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy określona wartość jest mniejsza niż drugi określoną wartość.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit signed integer is less than a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy 64-bitowych całkowita jest mniej niż a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest mniejsza niż <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> Metoda definiuje operację mniejszej niż operator <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">W przypadku niektórych języków może także wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>If <ph id="ph1">`left`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">Jeśli <ph id="ph1">`left`</ph> jest <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, lub <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> wartości on jest niejawnie przekonwertowana na <ph id="ph8">&lt;xref:System.Int64&gt;</ph> wartości podczas wykonywania operacji.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is less than a 64-bit signed integer.</source>
          <target state="translated">Zwraca wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość jest mniejsza niż całkowita 64-bitowych.</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest mniejsza niż <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> Metoda definiuje operację mniejszej niż operator <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">W przypadku niektórych języków może także wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>If <ph id="ph1">`right`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">Jeśli <ph id="ph1">`right`</ph> jest <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, lub <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> wartości on jest niejawnie przekonwertowana na <ph id="ph8">&lt;xref:System.Int64&gt;</ph> wartości podczas wykonywania operacji.</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is less than another <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość jest mniejsza niż innego <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest mniejsza niż <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> Metoda definiuje operację mniejszej niż operator <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">W przypadku niektórych języków może także wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is less than a 64-bit unsigned integer.</source>
          <target state="translated">Zwraca wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość jest mniejsza niż 64-bitowej liczby całkowitej bez znaku.</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest mniejsza niż <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> Metoda definiuje operację mniejszej niż operator <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Można również wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit unsigned integer is less than a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy 64-bitowej liczby całkowitej bez znaku jest mniej niż a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest mniejsza niż <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> Metoda definiuje operację mniejszej niż operator <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Można również wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether a specified value is less than or equal to another specified value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy określona wartość jest mniejsza niż lub równe inną określoną wartość.</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit signed integer is less than or equal to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy całkowita 64-bitowych jest mniejsza niż lub równe <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest mniejsza niż lub równa <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> Metoda definiuje działania mniejsze niż lub równe operatora dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Można również wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>If <ph id="ph1">`left`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">Jeśli <ph id="ph1">`left`</ph> jest <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, lub <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> wartości on jest niejawnie przekonwertowana na <ph id="ph8">&lt;xref:System.Int64&gt;</ph> wartości podczas wykonywania operacji.</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is less than or equal to a 64-bit signed integer.</source>
          <target state="translated">Zwraca wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość jest mniejsza niż całkowita 64-bitowych.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest mniejsza niż lub równa <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> Metoda definiuje działania mniejsze niż lub równe operatora dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Można również wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>If <ph id="ph1">`right`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">Jeśli <ph id="ph1">`right`</ph> jest <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, lub <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> wartości on jest niejawnie przekonwertowana na <ph id="ph8">&lt;xref:System.Int64&gt;</ph> wartości podczas wykonywania operacji.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is less than or equal to another <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość jest mniejsza niż lub równa do innego <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest mniejsza niż lub równa <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> Metoda definiuje działania mniejsze niż lub równe operatora dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Można również wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is less than or equal to a 64-bit unsigned integer.</source>
          <target state="translated">Zwraca wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość jest mniejsza niż 64-bitowej liczby całkowitej bez znaku.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest mniejsza niż lub równa <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> Metoda definiuje działania mniejsze niż lub równe operatora dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Można również wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">Pierwsza wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">Druga wartość do porównania.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Zwraca wartość wskazującą, czy 64-bitowej liczby całkowitej bez znaku jest mniejsza lub równa <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="left" /&gt;</ph> jest mniejsza niż lub równa <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> Metoda definiuje działania mniejsze niż lub równe operatora dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">Można również wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> metody bezpośrednio, jak w poniższym przykładzie przedstawiono.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to be divided.</source>
          <target state="translated">Wartość podział.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to divide by.</source>
          <target state="translated">Wartość do dzielenia przez.</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns the remainder that results from division with two specified <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">Zwraca resztę, będącą wynikiem dzielenia przy użyciu dwóch określony <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The remainder that results from the division.</source>
          <target state="translated">Pozostałe będącą wynikiem podziału.</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Modulus%2A&gt;</ph> method defines the operation of the modulus operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Modulus%2A&gt;</ph> Metoda definiuje operacji operator modulo <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The sign of the value returned by the modulus operation depends on the sign of <ph id="ph1">`dividend`</ph>: If <ph id="ph2">`dividend`</ph> is positive, the modulus operation returns a positive result; if it is negative, the modulus operation returns a negative result.</source>
          <target state="translated">Znak wartości zwróconej przez operację modulo zależy od jej znaku <ph id="ph1">`dividend`</ph>: Jeśli <ph id="ph2">`dividend`</ph> jest dodatnia, Operacja modulo zwraca wyników pozytywnych; Jeśli jest ujemna, Operacja modulo zwraca wynik ujemny.</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The behavior of the modulus operation with <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values is identical to the modulus operation with other integral types.</source>
          <target state="translated">Zachowanie działania modulo z <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości jest taka sama jak operację modulo z innych typów całkowitych.</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> to 0 (zero).</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to multiply.</source>
          <target state="translated">Pierwsza wartość wielokrotnie.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to multiply.</source>
          <target state="translated">Druga wartość używana w wielokrotnie.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Multiplies two specified <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">Mnoży dwie określone <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The product of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Iloczyn <ph id="ph1">&lt;paramref name="left" /&gt;</ph> i <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Multiply%2A&gt;</ph> method defines the operation of the multiplication operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Multiply%2A&gt;</ph> Metoda definiuje operacji operator mnożenia <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>An integer value.</source>
          <target state="translated">Wartość całkowita.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>Returns the bitwise one's complement of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Zwraca operatora testu koniunkcji, jeden dla uzupełnienia z <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>The bitwise one's complement of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Bitowe co do uzupełnienia z <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_OnesComplement%2A&gt;</ph> method defines the operation of the bitwise one's complement operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_OnesComplement%2A&gt;</ph> Metoda definiuje operację z bitowego przez jeden operator dopełnienia jednostkowego dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>The bitwise one's complement operator reverses each bit in a numeric value.</source>
          <target state="translated">Bitowe odwraca operatorem dopełnienia osoby, każdy bit w wartość liczbową.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>That is, bits in <ph id="ph1">`value`</ph> that are 0 are set to 1 in the result, and bits that are 1 are set to 0 in the result.</source>
          <target state="translated">Oznacza to, że usługa bits w <ph id="ph1">`value`</ph> , które są 0 są ustawione na 1, w wyniku i bitów, które są 1 są ustawione na 0 w wyniku.</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_OnesComplement%2A&gt;</ph> method enables code such as the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_OnesComplement%2A&gt;</ph> Metoda umożliwia następującego kodu:</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators may be able to call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_OnesComplement%2A&gt;</ph> method directly to perform a bitwise one's complement operation.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatory może być możliwe do wywołania <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_OnesComplement%2A&gt;</ph> metody bezpośrednio do wykonania bitowej, osoby uzupełniają operacji.</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>For example:</source>
          <target state="translated">Na przykład:</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>The value whose bits are to be shifted.</source>
          <target state="translated">Wartość, której bity są lekkie.</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>The number of bits to shift <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> to the right.</source>
          <target state="translated">Liczba bitów, które mają zostać przesunięte <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept> z prawej strony.</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>Shifts a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value a specified number of bits to the right.</source>
          <target state="translated">Zmiany <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość określoną liczbę bitów w prawo.</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>A value that has been shifted to the right by the specified number of bits.</source>
          <target state="translated">Wartość przesunięcia w prawo o określoną liczbę bitów.</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_RightShift%2A&gt;</ph> method defines the operation of the bitwise right-shift operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_RightShift%2A&gt;</ph> Metoda definiuje operację z bitowego operator przesunięcia w prawo <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>Languages that do not support custom operators can perform a bitwise right-shift operation by dividing <ph id="ph1">`value`</ph> by <ph id="ph2">`BigInteger.Pow(2, shift)`</ph> and subtracting 1 times <ph id="ph3">`shift`</ph> for negative values.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatory można wykonać operacji przesunięcia w prawo, dzieląc <ph id="ph1">`value`</ph> przez <ph id="ph2">`BigInteger.Pow(2, shift)`</ph> i odejmowanie 1 godziny <ph id="ph3">`shift`</ph> dla wartości ujemnych.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>The following example shows that the results are identical to the results of using this operator.</source>
          <target state="translated">W poniższym przykładzie pokazano, że wyniki są takie same jak wyniki za pomocą tego operatora.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>If <ph id="ph1">`shift`</ph> is greater than or equal to the number of bits in a positive <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, the result of the right-shift operation is <ph id="ph3">&lt;xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`shift`</ph> jest większa lub równa liczbie bitów dodatnią <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość, wynik operacji przesunięcia w prawo jest <ph id="ph3">&lt;xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>If <ph id="ph1">`shift`</ph> is greater than the number of bits in a negative <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, the result of the right-shift operation is <ph id="ph3">&lt;xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`shift`</ph> jest większa niż liczba bitów ujemny <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość, wynik operacji przesunięcia w prawo jest <ph id="ph3">&lt;xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to subtract from (the minuend).</source>
          <target state="translated">Wartość, którą chcesz odjąć od (minuend).</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to subtract (the subtrahend).</source>
          <target state="translated">Wartość do odejmowania (subtrahend).</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Subtracts a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value from another <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Odejmuje <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości z innej <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result of subtracting <ph id="ph1">&lt;paramref name="right" /&gt;</ph> from <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</source>
          <target state="translated">Wynik odejmowania <ph id="ph1">&lt;paramref name="right" /&gt;</ph> z <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Subtraction%2A&gt;</ph> method defines the operation of the subtraction operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Subtraction%2A&gt;</ph> Metoda definiuje operacji operator odejmowania <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">Umożliwia stosowanie kodu takiego jak następujący:</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Metoda równoważne tego operatora jest <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>The value to negate.</source>
          <target state="translated">Wartość do wskazania ujemnej.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>Negates a specified BigInteger value.</source>
          <target state="translated">Negacja określoną wartość BigInteger.</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>The result of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter multiplied by negative one (-1).</source>
          <target state="translated">Wynik <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru pomnożona przez wartość ujemną (-1).</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_UnaryNegation%2A&gt;</ph> method defines the operation of the unary negation operator (or the additive inverse operator) for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_UnaryNegation%2A&gt;</ph> Metoda definiuje operację Jednoargumentowy operator negacji (lub operator odwrotność dodatku) <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>The operation produces a value that results in 0 (zero) when it is added to the original number.</source>
          <target state="translated">Operacja daje wartość, która powoduje 0 (zero), gdy jest ona dodawana do liczby.</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph> method instead.</source>
          <target state="translated">Języki, które nie obsługują niestandardowych operatorzy mogą wywoływać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph> metody zamiast tego.</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">Jest równoważne metodę dla tego operatora <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>The following example illustrates three different ways to negate the value of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">Poniższy przykład przedstawia trzy różne sposoby, aby odwrócić wartość <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
          <source>An integer value.</source>
          <target state="translated">Wartość całkowita.</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
          <source>Returns the value of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> operand.</source>
          <target state="translated">Zwraca wartość <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> argument.</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
          <source>(The sign of the operand is unchanged.)</source>
          <target state="translated">(Znak operand jest bez zmian).</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
          <source>The value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> operand.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="value" /&gt;</ph> argument.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_UnaryPlus%2A&gt;</ph> method defines the operation of the unary positive operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_UnaryPlus%2A&gt;</ph> Metoda definiuje operacji jednoargumentowej dodatnią dla <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent.</source>
          <target state="translated">Konwertuje liczbę reprezentację ciągu jego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> równoważne.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">Ciąg zawierający liczbę, którą należy przekształcić.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent.</source>
          <target state="translated">Konwertuje liczbę reprezentację ciągu jego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> równoważne.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>A value that is equivalent to the number specified in the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Wartość odpowiadającą liczbie określonej w <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>The <ph id="ph1">`value`</ph> parameter should be the string representation of a number in the following form.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr powinien być reprezentację liczby w następującym formacie.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>ws<ept id="p4">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>] [<bpt id="p2">*</bpt>znak<ept id="p2">*</ept>]<bpt id="p3">*</bpt>cyfr<ept id="p3">*</ept>[<bpt id="p4">*</bpt>ws<ept id="p4">*</ept>]</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">Elementy w nawiasach kwadratowych ([ i ]) są opcjonalne.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>The following table describes each element.</source>
          <target state="translated">W tabeli poniżej opisano każdy element.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Element</source>
          <target state="translated">Element</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Description</source>
          <target state="translated">Opis</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Optional white space.</source>
          <target state="translated">Opcjonalny odstęp.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>An optional sign.</source>
          <target state="translated">Opcjonalny znak.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Valid sign characters are determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph> properties of the current culture.</source>
          <target state="translated">Nieprawidłowy znak znaki są określane przez <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph> właściwości bieżącej kultury.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>cyfr<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Sekwencja cyfr od 0 do 9.</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Any leading zeros are ignored.</source>
          <target state="translated">Wszystkie zera wiodące są ignorowane.</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>The string specified by the <ph id="ph1">`value`</ph> parameter is interpreted by using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated">Ciąg określony przez <ph id="ph1">`value`</ph> parametr jest interpretowany za pomocą <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> stylu.</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</source>
          <target state="translated">Nie może zawierać żadnych separatorów grup ani separatorów dziesiętnych, a także mieć części dziesiętnej.</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>The <ph id="ph1">`value`</ph> parameter is parsed by using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType&gt;</ph> object that is initialized for the current system culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametru jest analizowana, korzystając z informacji formatowania w <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType&gt;</ph> obiekt, który został zainicjowany dla bieżącego ustawienia kulturowego systemu.</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>To parse a string by using the formatting information of a specific culture, use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method.</source>
          <target state="translated">Aby przeanalizować ciągu przy użyciu formatowania informacji określoną kulturę, użyj <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to round-trip the string representation of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that was output by the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, you should use the <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method with the "R" format specifier to generate the string representation of the <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">Jeśli używasz <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> metody przesyłania danych reprezentację ciągu z <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość, która została danych wyjściowych przez <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> metody, należy użyć <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> metody z specyfikator formatu "R", aby wygenerować reprezentację ciągu <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Otherwise, the string representation of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to restore the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">W przeciwnym razie reprezentację ciągu <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> zachowuje tylko 50 cyfr znaczących większość oryginalnej wartości i dane mogą zostać utracone, korzystając z <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> metoda przywracania <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%29&gt;</ph> method to instantiate two <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%29&gt;</ph> metodę, aby utworzyć dwa wystąpienia <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>It multiplies each object by another number and then calls the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph> method to determine the relationship between the two values.</source>
          <target state="translated">Mnoży każdego obiektu przez inny numer, a następnie wywołuje <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph> metodę, aby określić relacji między dwiema wartościami.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> nie jest w nieprawidłowym formacie.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">Ciąg zawierający liczbę, którą należy przekształcić.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A bitwise combination of the enumeration values that specify the permitted format of <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Bitowe połączenie wartości wyliczenia, które określają format dozwolonych <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Converts the string representation of a number in a specified style to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent.</source>
          <target state="translated">Konwertuje reprezentacja ciągu liczb w stylu określony do jego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> równoważne.</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A value that is equivalent to the number specified in the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Wartość odpowiadającą liczbie określonej w <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the <ph id="ph2">`value`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph> Parametru definiuje elementy stylu (na przykład biały znak, symbol znaku dodatnie lub ujemne, symbol separatora grupy lub symbol punktu dziesiętnego), które są dozwolone w <ph id="ph2">`value`</ph> parametr powodzenie operacji analizy.</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">`styles`</ph> must be a combination of bit flags from the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">`styles`</ph> musi być kombinacją flag bitowych z <ph id="ph2">&lt;xref:System.Globalization.NumberStyles&gt;</ph> wyliczenia.</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`style`</ph> parameter makes this method overload useful when <ph id="ph2">`value`</ph> contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by <ph id="ph3">`value`</ph> is known only at run time, or when you want to disallow white space or a sign symbol in <ph id="ph4">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`style`</ph> Parametru sprawia, że ta metoda przeciążenia przydatne, gdy <ph id="ph2">`value`</ph> zawiera wartość szesnastkową reprezentację ciągu, gdy system numer (dziesiętną lub szesnastkową) reprezentowany przez <ph id="ph3">`value`</ph> jest znany tylko w czasie wykonywania, lub gdy użytkownik Aby uniemożliwić biały znak lub znak symbolu w <ph id="ph4">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`value`</ph> parameter may include the following elements:</source>
          <target state="translated">W zależności od wartości <ph id="ph1">`style`</ph>, <ph id="ph2">`value`</ph> parametr może zawierać następujące elementy:</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>digits<ept id="p5">*</ept>[.<bpt id="p6">*</bpt>fractional_digits<ept id="p6">*</ept>][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential_digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>digits<ept id="p5">*</ept>[.<bpt id="p6">*</bpt>fractional_digits<ept id="p6">*</ept>][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential_digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If <ph id="ph1">`style`</ph> includes <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>, the <ph id="ph3">`value`</ph> parameter may contain the following elements:</source>
          <target state="translated">Jeśli <ph id="ph1">`style`</ph> obejmuje <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">`value`</ph> parametr może zawierać następujące elementy:</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>]<bpt id="p2">*</bpt>hexdigits<ept id="p2">*</ept>[<bpt id="p3">*</bpt>ws<ept id="p3">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>]<bpt id="p2">*</bpt>hexdigits<ept id="p2">*</ept>[<bpt id="p3">*</bpt>ws<ept id="p3">*</ept>]</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">Elementy w nawiasach kwadratowych ([ i ]) są opcjonalne.</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table describes each element.</source>
          <target state="translated">W tabeli poniżej opisano każdy element.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Element</source>
          <target state="translated">Element</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Description</source>
          <target state="translated">Opis</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Optional white space.</source>
          <target state="translated">Opcjonalny odstęp.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>White space can appear at the start of <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`value`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Biały znak, może występować na początku <ph id="ph1">`value`</ph> Jeśli <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flagę która może występować na końcu <ph id="ph4">`value`</ph> Jeśli <ph id="ph5">`style`</ph> obejmuje <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">Symbol waluty specyficzny dla kultury.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> properties of the current culture.</source>
          <target state="translated">Jej położenie w ciągu jest definiowana za pomocą <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> właściwości bieżącej kultury.</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's currency symbol can appear in <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Symbol waluty bieżącej kultury może występować w <ph id="ph1">`value`</ph> Jeśli <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>An optional sign.</source>
          <target state="translated">Opcjonalny znak.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The sign can appear at the start of <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`value`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Logowania może wystąpić na początku <ph id="ph1">`value`</ph> Jeśli <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flagę która może występować na końcu <ph id="ph4">`value`</ph> Jeśli <ph id="ph5">`style`</ph> obejmuje <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Parentheses can be used in <ph id="ph1">`value`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Użycie nawiasów w <ph id="ph1">`value`</ph> wskaż wartość ujemną, jeśli <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>cyfr<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">Sekwencja cyfr od 0 do 9.</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>For <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>, only the digit 0 is valid.</source>
          <target state="translated">Aby uzyskać <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>tylko cyfry 0 jest prawidłowy.</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>,<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific group separator symbol.</source>
          <target state="translated">Symbol separatora grupy specyficzny dla kultury.</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's group separator can appear in <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Separator grupy bieżącej kultury może występować w <ph id="ph1">`value`</ph> Jeśli <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Symbol dziesiętny specyficzny dla kultury.</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's decimal point symbol can appear in <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Symbol punktu dziesiętnego bieżącej kultury może występować w <ph id="ph1">`value`</ph> Jeśli <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> includes any other digit, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">Tylko cyfry 0 może występować jako cyfrę ułamkowych analizy operacja powiodła się; Jeśli <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> zawiera dowolną cyfrę <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> jest generowany.</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>E</source>
          <target state="translated">E</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</source>
          <target state="translated">Znak „e” lub „E”, który wskazuje, że wartość jest reprezentowana w zapisie wykładniczym (naukowym).</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`value`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr może reprezentować liczbę w notacji wykładniczej, jeśli <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A sequence of hexadecimal digits from 0 through f, or 0 through F.</source>
          <target state="translated">Sekwencja cyfr szesnastkowych od 0 do f lub od 0 do F.</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A string with digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">Ciąg zawierający tylko cyfry (które odpowiada <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> styl) zawsze przeanalizowany pomyślnie.</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Most of the remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be present, but are not required to be present, in the input string.</source>
          <target state="translated">Większość pozostałych <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> członkowie sterować elementy, które mogą być obecne, ale nie muszą znajdować się w ciągu wejściowym.</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`value`</ph>.</source>
          <target state="translated">W poniższej tabeli przedstawiono poszczególne <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> elementów członkowskich mają wpływ na elementy, które mogą być obecne w <ph id="ph2">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">`NumberStyles`</ph> value</source>
          <target state="translated"><ph id="ph1">`NumberStyles`</ph> Wartość</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements permitted in <ph id="ph1">`value`</ph> in addition to digits</source>
          <target state="translated">Elementy dozwolone w <ph id="ph1">`value`</ph> oprócz cyfr</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>digits<ept id="p1">*</ept> element only.</source>
          <target state="translated"><bpt id="p1">*</bpt>Cyfr<ept id="p1">*</ept> tylko element.</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The decimal point (.) and <bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">Decimal (.) i <bpt id="p1">*</bpt>cyfr ułamkowych<ept id="p1">*</ept> elementów.</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The "e" or "E" character, which indicates exponential notation, along with <bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept>.</source>
          <target state="translated">"E" lub litery "E", która wskazuje notacji wykładniczej, wraz z <bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the start of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept> element na początku <ph id="ph1">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept> element na końcu <ph id="ph1">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the start of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Znak<ept id="p1">*</ept> element na początku <ph id="ph1">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the end of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Znak<ept id="p1">*</ept> element na końcu <ph id="ph1">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated"><bpt id="p1">*</bpt>Znak<ept id="p1">*</ept> elementu w postaci nawiasów otaczającej wartość liczbową.</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The group separator (,) element.</source>
          <target state="translated">Element separatora grupy (,).</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The currency ($) element.</source>
          <target state="translated">Element określający walutę ($).</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>All elements.</source>
          <target state="translated">Wszystkie elementy.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>However, <ph id="ph1">`value`</ph> cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated">Jednak <ph id="ph1">`value`</ph> nie może reprezentować liczbę szesnastkową lub numer w notacji wykładniczej.</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the start or end of <ph id="ph1">`value`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the start of <ph id="ph2">`value`</ph>, and the decimal point (<bpt id="p3">*</bpt>.<ept id="p3">*</ept>) symbol.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept> elementu na początek lub koniec <ph id="ph1">`value`</ph>, <bpt id="p2">*</bpt>znak<ept id="p2">*</ept> na początku <ph id="ph2">`value`</ph>i dziesiętnego (<bpt id="p3">*</bpt>.<ept id="p3">*</ept>) symbolu.</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`value`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr można również użyć notacji wykładniczej.</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, group separator (<bpt id="p1">*</bpt>,<ept id="p1">*</ept>), and decimal point (<bpt id="p2">*</bpt>.<ept id="p2">*</ept>) elements.</source>
          <target state="translated"><ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, Grupy separatora (<bpt id="p1">*</bpt>,<ept id="p1">*</ept>), a separatorem dziesiętnym (<bpt id="p2">*</bpt>.<ept id="p2">*</ept>) elementów.</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>All elements.</source>
          <target state="translated">Wszystkie elementy.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>However, <ph id="ph1">`value`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">Jednak <ph id="ph1">`value`</ph> nie może reprezentować liczbę szesnastkową.</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to round-trip the string representation of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that was output by the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, you should use the <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method with the "R" format specifier to generate the string representation of the <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">Jeśli używasz <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> metody przesyłania danych reprezentację ciągu z <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość, która została danych wyjściowych przez <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> metody, należy użyć <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> metody z specyfikator formatu "R", aby wygenerować reprezentację ciągu <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Otherwise, the string representation of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to restore the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">W przeciwnym razie reprezentację ciągu <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> zachowuje tylko 50 cyfr znaczących większość oryginalnej wartości i dane mogą zostać utracone, korzystając z <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> metoda przywracania <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Unlike the other <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> values, which allow for, but do not require, the presence of particular style elements in <ph id="ph2">`value`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> style value means that the individual numeric characters in <ph id="ph4">`value`</ph> are always interpreted as hexadecimal characters.</source>
          <target state="translated">W odróżnieniu od innych <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> wartości, które umożliwiają, ale nie wymagają obecności określonego stylu elementów w <ph id="ph2">`value`</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> styl wartość oznacza, że poszczególne znaki numeryczne w <ph id="ph4">`value`</ph> zawsze będą interpretowane jako znaki szesnastkowe.</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Valid hexadecimal characters are 0-9, A-F, and a-f.</source>
          <target state="translated">Prawidłowe znaki szesnastkowe to 0-9, A-F i a-f.</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The only other flags that can be combined with the <ph id="ph1">`style`</ph> parameter are <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Tylko innych flagi, które można łączyć z <ph id="ph1">`style`</ph> są parametru <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> i <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>(The <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration includes a composite number style, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber&gt;</ph>, that includes both white-space flags.)</source>
          <target state="translated">( <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> Wyliczenie zawiera styl numer złożone, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber&gt;</ph>, zawierająca zarówno flagi biały znak.)</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If <ph id="ph1">`value`</ph> is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as <ph id="ph2">`0x`</ph> or <ph id="ph3">`&amp;h`</ph>) that differentiates it as a hexadecimal number.</source>
          <target state="translated">Jeśli <ph id="ph1">`value`</ph> reprezentacja ciągu z liczbą szesnastkową nie może być poprzedzone żadnych decoration (takich jak <ph id="ph2">`0x`</ph> lub <ph id="ph3">`&amp;h`</ph>) który odróżnia go jako liczbę szesnastkową.</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>This causes the conversion to fail.</source>
          <target state="translated">To powoduje niepowodzenie konwersji.</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If <ph id="ph1">`value`</ph> is a hexadecimal string, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> method interprets <ph id="ph3">`value`</ph> as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to <ph id="ph4">`0x80`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`value`</ph> jest ciągiem szesnastkowym <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> interpretuje metody <ph id="ph3">`value`</ph> jako wartość ujemną przechowywane za pomocą dwóch jego reprezentacja dopełnienia, jeśli jego pierwsze dwie cyfry szesnastkowe są większe niż lub równe <ph id="ph4">`0x80`</ph>.</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>In other words, the method interprets the highest-order bit of the first byte in <ph id="ph1">`value`</ph> as the sign bit.</source>
          <target state="translated">Innymi słowy, metoda interpretuje bit najwyższej kolejności pierwszego bajtu w <ph id="ph1">`value`</ph> jako bitem.</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in <ph id="ph1">`value`</ph> must have a value of zero.</source>
          <target state="translated">Aby upewnić się, że ciąg szesnastkowy poprawnie jest interpretowana jako wartość dodatnią, cyfry, w <ph id="ph1">`value`</ph> musi mieć wartość zero.</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>For example, the method interprets <ph id="ph1">`0x80`</ph> as a negative value, but it interprets either <ph id="ph2">`0x080`</ph> or <ph id="ph3">`0x0080`</ph> as a positive value.</source>
          <target state="translated">Na przykład metoda interpretuje <ph id="ph1">`0x80`</ph> zgodnie z wartością ujemną, ale interpretuje albo <ph id="ph2">`0x080`</ph> lub <ph id="ph3">`0x0080`</ph> jako wartość dodatnią.</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</source>
          <target state="translated">Poniższy przykład przedstawia różnice między ciągów szesnastkowych, które reprezentują wartości ujemnych i dodatnich.</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`value`</ph> parameter is parsed by using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that is initialized for the current system culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametru jest analizowana, korzystając z informacji formatowania w <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który został zainicjowany dla bieżącego ustawienia kulturowego systemu.</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>To specify the culture whose formatting information is used for the parse operation, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> overload.</source>
          <target state="translated">Aby określić kulturę, którego formatowania informacje są używane dla operacji analizy, należy wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> przeciążenia.</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following example illustrates calls to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> method with several possible values for the <ph id="ph2">`style`</ph> parameter.</source>
          <target state="translated">Poniższy przykład przedstawia wywołań <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> metody z kilku wartości dla <ph id="ph2">`style`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>It illustrates how to interpret a string as a hexadecimal value, and how to disallow spaces and sign symbols.</source>
          <target state="translated">Przedstawia go zinterpretować ciąg jako wartość szesnastkowa oraz sposobu nie zezwalaj na spacje i podpisz symboli.</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> nie jest <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> includes the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> flag along with another value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> obejmuje <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> lub <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> flagi wraz z inną wartość.</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not comply with the input pattern specified by <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> nie jest zgodne z wejściowych wzorca określonego przez <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">Ciąg zawierający liczbę, którą należy przekształcić.</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>An object that provides culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Obiekt, który zawiera informacje dotyczące formatowania specyficzne dla kultury o <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Converts the string representation of a number in a specified culture-specific format to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent.</source>
          <target state="translated">Konwertuje reprezentację liczby w określonym formacie specyficzne dla kultury do jego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> równoważne.</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>A value that is equivalent to the number specified in the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Wartość odpowiadającą liczbie określonej w <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`value`</ph> parameter should be the string representation of a number in the following form:</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr powinien być reprezentację liczby w następującym formacie:</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>ws<ept id="p4">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>] [<bpt id="p2">*</bpt>znak<ept id="p2">*</ept>]<bpt id="p3">*</bpt>cyfr<ept id="p3">*</ept>[<bpt id="p4">*</bpt>ws<ept id="p4">*</ept>]</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">Elementy w nawiasach kwadratowych ([ i ]) są opcjonalne.</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The following table describes each element.</source>
          <target state="translated">W tabeli poniżej opisano każdy element.</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">Element</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">Opis</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Optional white space.</source>
          <target state="translated">Opcjonalny odstęp.</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>An optional sign.</source>
          <target state="translated">Opcjonalny znak.</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Valid sign characters are determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that is returned by the <ph id="ph4">`provider`</ph> object's <ph id="ph5">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method.</source>
          <target state="translated">Nieprawidłowy znak znaki są określane przez <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph> właściwości <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu, który jest zwracany przez <ph id="ph4">`provider`</ph> obiektu <ph id="ph5">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>cyfr<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">Sekwencja cyfr od 0 do 9.</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Any leading zeros are ignored.</source>
          <target state="translated">Wszystkie zera wiodące są ignorowane.</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The string specified by the <ph id="ph1">`value`</ph> parameter is interpreted using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated">Ciąg określony przez <ph id="ph1">`value`</ph> parametr jest interpretowany za pomocą <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> stylu.</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</source>
          <target state="translated">Nie może zawierać żadnych separatorów grup ani separatorów dziesiętnych, a także mieć części dziesiętnej.</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to round-trip the string representation of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that was output by the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, you should use the <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method with the "R" format specifier to generate the string representation of the <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">Jeśli używasz <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> metody przesyłania danych reprezentację ciągu z <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość, która została danych wyjściowych przez <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> metody, należy użyć <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> metody z specyfikator formatu "R", aby wygenerować reprezentację ciągu <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Otherwise, the string representation of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to restore the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">W przeciwnym razie reprezentację ciągu <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> zachowuje tylko 50 cyfr znaczących większość oryginalnej wartości i dane mogą zostać utracone, korzystając z <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> metoda przywracania <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific formatting information.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> Parametr jest <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementacji których <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> metoda zwraca <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje dotyczące formatowania specyficzne dla kultury.</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>When the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method is invoked, it calls the <ph id="ph2">`provider`</ph> parameter's <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method and passes it a <ph id="ph4">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> type.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> wywołania metody, wywołuje <ph id="ph2">`provider`</ph> parametru <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> — metoda i przekazuje je <ph id="ph4">&lt;xref:System.Type&gt;</ph> obiekt, który reprezentuje <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> typu.</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method then returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides information about the format of the <ph id="ph3">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> Następnie metoda zwraca <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu, który zawiera informacje o formacie <ph id="ph3">`value`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>There are three ways to use the <ph id="ph1">`provider`</ph> parameter to supply custom formatting information to the parse operation:</source>
          <target state="translated">Istnieją trzy sposoby używania <ph id="ph1">`provider`</ph> parametr, aby podać informacje dotyczące formatowania niestandardowych operacji analizy:</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>You can pass a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information.</source>
          <target state="translated">Można przekazać <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> obiekt, który reprezentuje kultury, który dostarcza informacje dotyczące formatowania.</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information for that culture.</source>
          <target state="translated">Jego <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> metoda zwraca <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje numeryczne formatowania dla tej kultury.</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>You can pass the actual <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information.</source>
          <target state="translated">Można przekazać rzeczywiste <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje numeryczne formatowania.</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>(Its implementation of <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> just returns itself.)</source>
          <target state="translated">(Jej implementacja <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> zwraca siebie, po prostu.)</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>You can pass a custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">Można przekazać niestandardowego obiektu, który implementuje <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method instantiates and returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">Jego <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> metoda tworzy i zwraca <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje dotyczące formatowania.</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the formatting of <ph id="ph3">`value`</ph> is interpreted based on the <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated">Jeśli <ph id="ph1">`provider`</ph> jest <ph id="ph2">`null`</ph>, formatowanie <ph id="ph3">`value`</ph> jest interpretowana w oparciu o <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu bieżącej kultury.</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The following examples show two ways to define the tilde (~) as a negative sign for formatting <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">W poniższych przykładach pokazano dwa sposoby definiowania tyldy (~) jako znaku minus formatowania <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Note that to display the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values in the same format as the original strings, your code must call the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method and pass it the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">Należy pamiętać, że do wyświetlenia <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości w tym samym formacie co oryginalna ciągów, kod musi wywoływać <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> — metoda i przekaż go <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje dotyczące formatowania.</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The first example defines a class that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> and uses the <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method to return the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">Pierwszym przykładzie zdefiniowano klasę implementującą <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> i używa <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> metodę, aby zwrócić <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje dotyczące formatowania.</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can then be instantiated with the following code:</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> następnie wystąpienie obiektu z następującym kodem:</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The second example is more straightforward.</source>
          <target state="translated">Drugi przykład jest więcej prosta.</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>It passes the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information to the <ph id="ph2">`provider`</ph> parameter.</source>
          <target state="translated">Przekazuje ono <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje dotyczące formatowania do <ph id="ph2">`provider`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> nie jest w nieprawidłowym formacie.</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">Ciąg zawierający liczbę, którą należy przekształcić.</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A bitwise combination of the enumeration values that specify the permitted format of <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Bitowe połączenie wartości wyliczenia, które określają format dozwolonych <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>An object that provides culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Obiekt, który zawiera informacje dotyczące formatowania specyficzne dla kultury o <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Converts the string representation of a number in a specified style and culture-specific format to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent.</source>
          <target state="translated">Konwertuje reprezentację ciągu liczbą określony styl i specyficzne dla kultury formatu w celu jego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> równoważne.</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A value that is equivalent to the number specified in the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">Wartość odpowiadającą liczbie określonej w <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the <ph id="ph2">`value`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph> Parametru definiuje elementy stylu (na przykład biały znak, symbol znaku dodatnie lub ujemne, symbol separatora grupy lub symbol punktu dziesiętnego), które są dozwolone w <ph id="ph2">`value`</ph> parametr powodzenie operacji analizy.</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">`styles`</ph> must be a combination of bit flags from the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">`styles`</ph> musi być kombinacją flag bitowych z <ph id="ph2">&lt;xref:System.Globalization.NumberStyles&gt;</ph> wyliczenia.</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`style`</ph> parameter makes this method overload useful when <ph id="ph2">`value`</ph> contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by <ph id="ph3">`value`</ph> is known only at run time, or when you want to disallow white space or a sign symbol in <ph id="ph4">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`style`</ph> Parametru sprawia, że ta metoda przeciążenia przydatne, gdy <ph id="ph2">`value`</ph> zawiera wartość szesnastkową reprezentację ciągu, gdy system numer (dziesiętną lub szesnastkową) reprezentowany przez <ph id="ph3">`value`</ph> jest znany tylko w czasie wykonywania, lub gdy użytkownik Aby uniemożliwić biały znak lub znak symbolu w <ph id="ph4">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`value`</ph> parameter may include the following elements:</source>
          <target state="translated">W zależności od wartości <ph id="ph1">`style`</ph>, <ph id="ph2">`value`</ph> parametr może zawierać następujące elementy:</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>digits<ept id="p5">*</ept>[<bpt id="p6">*</bpt>.fractional_digits<ept id="p6">*</ept>][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential_digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>digits<ept id="p5">*</ept>[<bpt id="p6">*</bpt>.fractional_digits<ept id="p6">*</ept>][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential_digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`style`</ph> includes <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>, the <ph id="ph3">`value`</ph> parameter may include the following elements:</source>
          <target state="translated">Jeśli <ph id="ph1">`style`</ph> obejmuje <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">`value`</ph> parametr może zawierać następujące elementy:</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>]<bpt id="p2">*</bpt>hexdigits<ept id="p2">*</ept>[<bpt id="p3">*</bpt>ws<ept id="p3">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>]<bpt id="p2">*</bpt>hexdigits<ept id="p2">*</ept>[<bpt id="p3">*</bpt>ws<ept id="p3">*</ept>]</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">Elementy w nawiasach kwadratowych ([ i ]) są opcjonalne.</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table describes each element.</source>
          <target state="translated">W tabeli poniżej opisano każdy element.</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">Element</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">Opis</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Optional white space.</source>
          <target state="translated">Opcjonalny odstęp.</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>White space can appear at the start of <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`value`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Biały znak, może występować na początku <ph id="ph1">`value`</ph> Jeśli <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flagę która może występować na końcu <ph id="ph4">`value`</ph> Jeśli <ph id="ph5">`style`</ph> obejmuje <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">Symbol waluty specyficzny dla kultury.</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> properties of the culture indicated by the <ph id="ph3">`provider`</ph> parameter.</source>
          <target state="translated">Jej położenie w ciągu jest definiowana za pomocą <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> właściwości kultury wskazywanym przez <ph id="ph3">`provider`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The current culture's currency symbol can appear in <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Symbol waluty bieżącej kultury może występować w <ph id="ph1">`value`</ph> Jeśli <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>An optional sign.</source>
          <target state="translated">Opcjonalny znak.</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The sign can appear at the start of <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`value`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Logowania może wystąpić na początku <ph id="ph1">`value`</ph> Jeśli <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flagę która może występować na końcu <ph id="ph4">`value`</ph> Jeśli <ph id="ph5">`style`</ph> obejmuje <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Parentheses can be used in <ph id="ph1">`value`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Użycie nawiasów w <ph id="ph1">`value`</ph> wskaż wartość ujemną, jeśli <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>cyfr<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">Sekwencja cyfr od 0 do 9.</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>For <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>, only the digit 0 is valid.</source>
          <target state="translated">Aby uzyskać <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>tylko cyfry 0 jest prawidłowy.</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>,<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific group separator symbol.</source>
          <target state="translated">Symbol separatora grupy specyficzny dla kultury.</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The group separator symbol of the culture specified by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`value`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Symbol separatora grupy kultury określonej przez <ph id="ph1">`provider`</ph> może występować w <ph id="ph2">`value`</ph> Jeśli <ph id="ph3">`style`</ph> obejmuje <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Symbol dziesiętny specyficzny dla kultury.</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The decimal point symbol of the culture designated by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`value`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Symbol punktu dziesiętnego kultury wskazywany przez <ph id="ph1">`provider`</ph> może występować w <ph id="ph2">`value`</ph> Jeśli <ph id="ph3">`style`</ph> obejmuje <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> includes any other digit, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">Tylko cyfry 0 może występować jako cyfrę ułamkowych analizy operacja powiodła się; Jeśli <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> zawiera dowolną cyfrę <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> jest generowany.</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>E</source>
          <target state="translated">E</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</source>
          <target state="translated">Znak „e” lub „E”, który wskazuje, że wartość jest reprezentowana w zapisie wykładniczym (naukowym).</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`value`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr może reprezentować liczbę w notacji wykładniczej, jeśli <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A sequence of hexadecimal digits from 0 through f, or 0 through F.</source>
          <target state="translated">Sekwencja cyfr szesnastkowych od 0 do f lub od 0 do F.</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A string with digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">Ciąg zawierający tylko cyfry (które odpowiada <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> styl) zawsze przeanalizowany pomyślnie.</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Most of the remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be present, but are not required to be present, in the input string.</source>
          <target state="translated">Większość pozostałych <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> członkowie sterować elementy, które mogą być obecne, ale nie muszą znajdować się w ciągu wejściowym.</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`value`</ph>.</source>
          <target state="translated">W poniższej tabeli przedstawiono poszczególne <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> elementów członkowskich mają wpływ na elementy, które mogą być obecne w <ph id="ph2">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>NumberStyles value</source>
          <target state="translated">Wartość wyliczenia NumberStyles</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements permitted in value in addition to digits</source>
          <target state="translated">Dodatkowe (poza cyframi) elementy dozwolone w wartości</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>digits<ept id="p1">*</ept> element only.</source>
          <target state="translated"><bpt id="p1">*</bpt>Cyfr<ept id="p1">*</ept> tylko element.</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The decimal point (.) and <bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">Decimal (.) i <bpt id="p1">*</bpt>cyfr ułamkowych<ept id="p1">*</ept> elementów.</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The "e" or "E" character, which indicates exponential notation.</source>
          <target state="translated">Znak „e” lub znak „E”, co oznacza zapis wykładniczy.</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>along with <bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept>.</source>
          <target state="translated">wraz z programem <bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the start of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept> element na początku <ph id="ph1">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept> element na końcu <ph id="ph1">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the start of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Znak<ept id="p1">*</ept> element na początku <ph id="ph1">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the end of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Znak<ept id="p1">*</ept> element na końcu <ph id="ph1">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated"><bpt id="p1">*</bpt>Znak<ept id="p1">*</ept> elementu w postaci nawiasów otaczającej wartość liczbową.</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The group separator (,) element.</source>
          <target state="translated">Element separatora grupy (,).</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The currency ($) element.</source>
          <target state="translated">Element określający walutę ($).</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>All elements.</source>
          <target state="translated">Wszystkie elementy.</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>However, <ph id="ph1">`value`</ph> cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated">Jednak <ph id="ph1">`value`</ph> nie może reprezentować liczbę szesnastkową lub numer w notacji wykładniczej.</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the start or end of <ph id="ph1">`value`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the start of <ph id="ph2">`value`</ph>, and the decimal point (.) symbol.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept> elementu na początek lub koniec <ph id="ph1">`value`</ph>, <bpt id="p2">*</bpt>znak<ept id="p2">*</ept> na początku <ph id="ph2">`value`</ph>oraz symbol punktu dziesiętnego (.).</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`value`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr można również użyć notacji wykładniczej.</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, group separator (,), and decimal point (.) elements.</source>
          <target state="translated"><ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, Grupy separatora (,), a elementy dziesiętnym (.).</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>All elements.</source>
          <target state="translated">Wszystkie elementy.</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>However, <ph id="ph1">`value`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">Jednak <ph id="ph1">`value`</ph> nie może reprezentować liczbę szesnastkową.</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to round-trip the string representation of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that was output by the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, you should use the <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method with the "R" format specifier to generate the string representation of the <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">Jeśli używasz <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> metody przesyłania danych reprezentację ciągu z <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość, która została danych wyjściowych przez <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> metody, należy użyć <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> metody z specyfikator formatu "R", aby wygenerować reprezentację ciągu <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Otherwise, the string representation of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to restore the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">W przeciwnym razie reprezentację ciągu <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> zachowuje tylko 50 cyfr znaczących większość oryginalnej wartości i dane mogą zostać utracone, korzystając z <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> metoda przywracania <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Unlike the other <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> values, which allow for but do not require the presence of particular style elements in <ph id="ph2">`value`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> style value means that the individual numeric characters in <ph id="ph4">`value`</ph> are always interpreted as hexadecimal characters.</source>
          <target state="translated">W odróżnieniu od innych <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> wartości, które umożliwiają, ale nie wymagają obecności określonego stylu elementów w <ph id="ph2">`value`</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> styl wartość oznacza, że poszczególne znaki numeryczne w <ph id="ph4">`value`</ph> zawsze będą interpretowane jako znaki szesnastkowe.</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Valid hexadecimal characters are 0-9, A-F, and a-f.</source>
          <target state="translated">Prawidłowe znaki szesnastkowe to 0-9, A-F i a-f.</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The only other flags that can be combined with the <ph id="ph1">`style`</ph> parameter are <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Tylko innych flagi, które można łączyć z <ph id="ph1">`style`</ph> są parametru <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> i <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>(The <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration includes a composite number style, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber&gt;</ph>, that includes both white-space flags.)</source>
          <target state="translated">( <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> Wyliczenie zawiera styl numer złożone, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber&gt;</ph>, zawierająca zarówno flagi biały znak.)</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`value`</ph> is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as <ph id="ph2">`0x`</ph> or <ph id="ph3">`&amp;h`</ph>) that differentiates it as a hexadecimal number.</source>
          <target state="translated">Jeśli <ph id="ph1">`value`</ph> reprezentacja ciągu z liczbą szesnastkową nie może być poprzedzone żadnych decoration (takich jak <ph id="ph2">`0x`</ph> lub <ph id="ph3">`&amp;h`</ph>) który odróżnia go jako liczbę szesnastkową.</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>This causes the conversion to fail.</source>
          <target state="translated">To powoduje niepowodzenie konwersji.</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`value`</ph> is a hexadecimal string, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> method interprets <ph id="ph3">`value`</ph> as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to <ph id="ph4">`0x80`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`value`</ph> jest ciągiem szesnastkowym <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> interpretuje metody <ph id="ph3">`value`</ph> jako wartość ujemną przechowywane za pomocą dwóch jego reprezentacja dopełnienia, jeśli jego pierwsze dwie cyfry szesnastkowe są większe niż lub równe <ph id="ph4">`0x80`</ph>.</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>In other words, the method interprets the highest-order bit of the first byte in <ph id="ph1">`value`</ph> as the sign bit.</source>
          <target state="translated">Innymi słowy, metoda interpretuje bit najwyższej kolejności pierwszego bajtu w <ph id="ph1">`value`</ph> jako bitem.</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in <ph id="ph1">`value`</ph> must have a value of zero.</source>
          <target state="translated">Aby upewnić się, że ciąg szesnastkowy poprawnie jest interpretowana jako wartość dodatnią, cyfry, w <ph id="ph1">`value`</ph> musi mieć wartość zero.</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>For example, the method interprets <ph id="ph1">`0x80`</ph> as a negative value, but it interprets either <ph id="ph2">`0x080`</ph> or <ph id="ph3">`0x0080`</ph> as a positive value.</source>
          <target state="translated">Na przykład metoda interpretuje <ph id="ph1">`0x80`</ph> zgodnie z wartością ujemną, ale interpretuje albo <ph id="ph2">`0x080`</ph> lub <ph id="ph3">`0x0080`</ph> jako wartość dodatnią.</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</source>
          <target state="translated">Poniższy przykład przedstawia różnice między ciągów szesnastkowych, które reprezentują wartości ujemnych i dodatnich.</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> Parametr jest <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementacji.</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of <ph id="ph3">`value`</ph>.</source>
          <target state="translated">Jego <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> metoda zwraca <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu, który zawiera informacje specyficzne dla kultury o format <ph id="ph3">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Typically, <ph id="ph1">`provider`</ph> can be any one of the following:</source>
          <target state="translated">Zazwyczaj <ph id="ph1">`provider`</ph> może być jednym z następujących czynności:</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that provides numeric formatting information.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> obiekt, który reprezentuje kultura, która zawiera dane liczbowe formatowania.</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information.</source>
          <target state="translated">Jego <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> metoda zwraca <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje numeryczne formatowania.</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje dotyczące formatowania.</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>(Its implementation of <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> just returns itself.)</source>
          <target state="translated">(Jej implementacja <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> zwraca siebie, po prostu.)</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> and uses the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> method to instantiate and return the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">Niestandardowy obiekt, który implementuje <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> i używa <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> metody w celu utworzenia wystąpienia i zwracać <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje dotyczące formatowania.</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture is used.</source>
          <target state="translated">Jeśli <ph id="ph1">`provider`</ph> jest <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu dla bieżącej kultury jest używany.</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following example makes several calls to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> method using various combinations of values for the <ph id="ph2">`style`</ph> and <ph id="ph3">`provider`</ph> parameters.</source>
          <target state="translated">Poniższy przykład powoduje, że wiele wywołań <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> metodę przy użyciu różnych kombinacji wartości <ph id="ph2">`style`</ph> i <ph id="ph3">`provider`</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A number of the individual calls to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> method pass an instance of the following <ph id="ph2">`BigIntegerFormatProvider`</ph> class, which defines a tilde (~) as the negative sign.</source>
          <target state="translated">Liczba wywołań poszczególnych <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> metody Przekaż wystąpienie następujących <ph id="ph2">`BigIntegerFormatProvider`</ph> klasy, która definiuje tyldy (~) jako znaku minus.</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> nie jest <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> includes the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> flag along with another value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> obejmuje <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> lub <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> flagi wraz z inną wartość.</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not comply with the input pattern specified by <ph id="ph2">&lt;paramref name="style" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> nie jest zgodne z wejściowych wzorca określonego przez <ph id="ph2">&lt;paramref name="style" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>The number to raise to the <bpt id="p1">&lt;c&gt;</bpt>exponent<ept id="p1">&lt;/c&gt;</ept> power.</source>
          <target state="translated">Numer, do której zostaną podniesione <bpt id="p1">&lt;c&gt;</bpt>wykładnik<ept id="p1">&lt;/c&gt;</ept> zasilania.</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>The exponent to raise <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> by.</source>
          <target state="translated">Wykładnik, aby podnieść <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept> przez.</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>Raises a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value to the power of a specified value.</source>
          <target state="translated">Zgłasza <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości do potęgi określonej wartości.</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>The result of raising <ph id="ph1">&lt;paramref name="value" /&gt;</ph> to the <ph id="ph2">&lt;paramref name="exponent" /&gt;</ph> power.</source>
          <target state="translated">Wynik podniesienia liczby <ph id="ph1">&lt;paramref name="value" /&gt;</ph> do <ph id="ph2">&lt;paramref name="exponent" /&gt;</ph> zasilania.</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Pow%2A&gt;</ph> method returns 1 if the value of the exponent parameter is 0, or if the values of both the <ph id="ph2">`value`</ph> and <ph id="ph3">`exponent`</ph> parameters are 0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Pow%2A&gt;</ph> Metoda zwraca wartość 1, jeśli wartość parametru wykładnika to 0 lub wartości obu <ph id="ph2">`value`</ph> i <ph id="ph3">`exponent`</ph> parametry są równe 0.</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>If <ph id="ph1">`exponent`</ph> is 1, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Pow%2A&gt;</ph> method returns <ph id="ph3">`value`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`exponent`</ph> 1, <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Pow%2A&gt;</ph> metoda zwraca <ph id="ph3">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>If <ph id="ph1">`value`</ph> is negative, the method returns a negative result.</source>
          <target state="translated">Jeśli <ph id="ph1">`value`</ph> jest ujemna, metoda zwraca wynik ujemny.</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Pow%2A?displayProperty=nameWithType&gt;</ph> method for primitive numeric types.</source>
          <target state="translated">Ta metoda odpowiada <ph id="ph1">&lt;xref:System.Math.Pow%2A?displayProperty=nameWithType&gt;</ph> metody dla typów pierwotnych liczbowych.</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>The following example illustrates exponentiation using a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value and an exponent whose value ranges from 0 to 10.</source>
          <target state="translated">Poniższy przykład przedstawia potęgowania przy użyciu <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość i wykładnik, którego wartość należy do zakresu od 0 do 10.</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="exponent" /&gt;</ph> parameter is negative.</source>
          <target state="translated">Wartość <ph id="ph1">&lt;paramref name="exponent" /&gt;</ph> parametru jest ujemna.</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to be divided.</source>
          <target state="translated">Wartość podział.</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to divide by.</source>
          <target state="translated">Wartość do dzielenia przez.</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Performs integer division on two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values and returns the remainder.</source>
          <target state="translated">Wykonuje dzielenie liczby całkowitej na dwóch <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartości i zwraca resztę.</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The remainder after dividing <ph id="ph1">&lt;paramref name="dividend" /&gt;</ph> by <ph id="ph2">&lt;paramref name="divisor" /&gt;</ph>.</source>
          <target state="translated">Resztę po podzieleniu <ph id="ph1">&lt;paramref name="dividend" /&gt;</ph> przez <ph id="ph2">&lt;paramref name="divisor" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The sign of the remainder is the sign of the <ph id="ph1">`dividend`</ph> parameter.</source>
          <target state="translated">Znak pozostałej jest znak <ph id="ph1">`dividend`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph> method is implemented for languages that do not support custom operators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph> Metoda została zaimplementowana dla języków, które nie obsługują niestandardowych operatorów.</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Its behavior is identical to division using the modulus operator.</source>
          <target state="translated">Jego zachowanie jest identyczne dzielenia przy użyciu operatora modulo.</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>If necessary, the method automatically performs implicit conversion of other integral types to <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects before it performs the modulus operation.</source>
          <target state="translated">Jeśli to konieczne, metoda automatycznie wykonuje niejawna konwersja z innych typów całkowitych do <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiekty przed przesłaniem operacji modułu.</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example compares the remainder from the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> method with the remainder returned by the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph> method to establish that the two methods calculate identical remainders.</source>
          <target state="translated">Poniższy przykład porównuje pozostała z <ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> metody pozostałych zwrócony przez <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph> metodę określenia, że te dwie metody obliczanie reszt identyczne.</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> to 0 (zero).</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.Sign">
          <source>Gets a number that indicates the sign (negative, positive, or zero) of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object.</source>
          <target state="translated">Pobiera numer, który wskazuje znak (negatywną dodatnie, lub zero) bieżącego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source>A number that indicates the sign of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object, as shown in the following table.</source>
          <target state="translated">Liczba, która określa znak <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiektów, jak pokazano w poniższej tabeli.</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Number</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Numer</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Opis elementu</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The value of this object is negative.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Wartość tego obiektu jest ujemna.</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The value of this object is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Wartość tego obiektu jest 0 (zero).</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The value of this object is positive.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Wartość tego obiektu jest dodatnia.</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Sign%2A&gt;</ph> property is equivalent to the <ph id="ph2">&lt;xref:System.Math.Sign%2A?displayProperty=nameWithType&gt;</ph> method for the primitive numeric types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Sign%2A&gt;</ph> Właściwości jest odpowiednikiem <ph id="ph2">&lt;xref:System.Math.Sign%2A?displayProperty=nameWithType&gt;</ph> metody dla typów pierwotnych liczbowych.</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to subtract from (the minuend).</source>
          <target state="translated">Wartość, którą chcesz odjąć od (minuend).</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to subtract (the subtrahend).</source>
          <target state="translated">Wartość do odejmowania (subtrahend).</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Subtracts one <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value from another and returns the result.</source>
          <target state="translated">Odejmuje jedną <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość z innej i zwraca wynik.</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result of subtracting <ph id="ph1">&lt;paramref name="right" /&gt;</ph> from <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</source>
          <target state="translated">Wynik odejmowania <ph id="ph1">&lt;paramref name="right" /&gt;</ph> z <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph> method to perform subtraction using <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">Można używać języków, które nie obsługują niestandardowych operatory <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph> metodę w celu za pomocą odejmowania <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości.</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph> method is a useful substitute for the subtraction operator when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable by assigning it the difference that results from subtraction, as shown in the following example.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph> Metoda jest przydatna zastępuje operator odejmowania podczas tworzenia wystąpienia <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> zmiennej przypisać tą różnicą, że wyniki z odejmowania, jak pokazano w poniższym przykładzie.</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value to a byte array.</source>
          <target state="translated">Konwertuje <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość na tablicę bajtów.</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object converted to an array of bytes.</source>
          <target state="translated">Wartość bieżącego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> przekonwertować obiektu na tablicę bajtów.</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>The individual bytes in the array returned by this method appear in little-endian order.</source>
          <target state="translated">Poszczególne bajty w tablicy zwracanej przez tę metodę są wyświetlane w kolejności little endian.</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>That is, the lower-order bytes of the value precede the higher-order bytes.</source>
          <target state="translated">Oznacza to, że kolejność małą liczbę bajtów wartość poprzedzać bajtów wyższego rzędu.</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>The first byte of the array reflects the first eight bits of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, the second byte reflects the next eight bits, and so on.</source>
          <target state="translated">Pierwszy bajt tablicy odzwierciedla pierwszych 8 bitów <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość, drugie bajtów odzwierciedla dalej osiem bitów i tak dalej.</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>For example, the value 1024, or 0x0400, is stored as the following array of two bytes:</source>
          <target state="translated">Na przykład wartość 1024 lub 0x0400, są przechowywane jako tablica następujące dwa bajty:</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>Element</source>
          <target state="translated">Element</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>Byte value</source>
          <target state="translated">Wartość bajtu</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>0x00</source>
          <target state="translated">0x00</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>0x04</source>
          <target state="translated">0x04</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>Negative values are written to the array using two's complement representation in the most compact form possible.</source>
          <target state="translated">Wartości ujemne są zapisywane do tablicy przy użyciu dwóch jego reprezentacja dopełnienia w najbardziej kompaktową możliwe formularza.</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>For example, -1 is represented as a single byte whose value is <ph id="ph1">`0xFF`</ph> instead of as an array with multiple elements, such as <ph id="ph2">`0xFF`</ph>, <ph id="ph3">`0xFF`</ph> or <ph id="ph4">`0xFF`</ph>, <ph id="ph5">`0xFF`</ph>, <ph id="ph6">`0xFF`</ph>, <ph id="ph7">`0xFF`</ph>.</source>
          <target state="translated">Na przykład wartość -1 jest reprezentowany jako pojedynczy bajt, którego wartość jest <ph id="ph1">`0xFF`</ph> zamiast jako tablicy zawierającej wiele elementów, takich jak <ph id="ph2">`0xFF`</ph>, <ph id="ph3">`0xFF`</ph> lub <ph id="ph4">`0xFF`</ph>, <ph id="ph5">`0xFF`</ph>, <ph id="ph6">`0xFF`</ph>, <ph id="ph7">`0xFF`</ph>.</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>Because two's complement representation always interprets the highest-order bit of the last byte in the array (the byte at position <ph id="ph1">&lt;xref:System.Array.Length%2A?displayProperty=nameWithType&gt;</ph><ph id="ph2">`- 1`</ph>) as the sign bit, the method returns a byte array with an extra element whose value is zero to disambiguate positive values that could otherwise be interpreted as having their sign bits set.</source>
          <target state="translated">Ponieważ w dwóch uzupełniają reprezentacja zawsze interpretuje bit najwyższej kolejności ostatniego bajtu w tablicy (bajtów w pozycji <ph id="ph1">&lt;xref:System.Array.Length%2A?displayProperty=nameWithType&gt;</ph> <ph id="ph2">`- 1`</ph>) jako bitem, metoda zwraca tablicę bajtów z dodatkowy element, którego wartość wynosi zero do odróżniania wartości dodatnie, które w przeciwnym razie można zinterpretować jako o ich bitów logowania.</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>For example, the value 120 or <ph id="ph1">`0x78`</ph> is represented as a single-byte array: <ph id="ph2">`0x78`</ph>.</source>
          <target state="translated">Na przykład wartość 120 lub <ph id="ph1">`0x78`</ph> jest reprezentowany jako tablica jednobajtowe: <ph id="ph2">`0x78`</ph>.</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>However, 128, or <ph id="ph1">`0x80`</ph>, is represented as a two-byte array: <ph id="ph2">`0x80`</ph>, <ph id="ph3">`0x00`</ph>.</source>
          <target state="translated">Jednakże, 128, lub <ph id="ph1">`0x80`</ph>, jest reprezentowany jako tablicę bajtów dwa: <ph id="ph2">`0x80`</ph>, <ph id="ph3">`0x00`</ph>.</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>You can round-trip a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value by storing it to a byte array and then restoring it using the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor.</source>
          <target state="translated">Można wyrównana <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości przez zapisanie jej na tablicę bajtów, a następnie przywróceniu go za pomocą <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> konstruktora.</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>If your code modifies the value of individual bytes in the array returned by this method before it restores the value, you must make sure that you do not unintentionally change the sign bit.</source>
          <target state="translated">Kod zmienia wartość poszczególnych bajtów w tablicy zwracanej przez tę metodę, przed jego przywraca wartość, należy się upewnić, że nie przypadkowo zmienisz bitu znaku.</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>For example, if your modifications increase a positive value so that the highest-order bit in the last element of the byte array becomes set, you can add a new byte whose value is zero to the end of the array.</source>
          <target state="translated">Na przykład jeśli modyfikacje zwiększyć wartość dodatnią, dzięki czemu najwyższej kolejności bitu w ostatnim elemencie tablicy bajtów staje się ustawić, można dodać nowego typu byte, którego wartość wynosi zero do końca tablicy.</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>The following example illustrates how some <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values are represented in byte arrays.</source>
          <target state="translated">Poniższy przykład przedstawia sposób niektóre <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości są reprezentowane w tablice typu byte.</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to its equivalent string representation.</source>
          <target state="translated">Konwertuje wartość liczbową bieżącego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiekt do reprezentacji ciągu równoważne.</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to its equivalent string representation.</source>
          <target state="translated">Konwertuje wartość liczbową bieżącego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiekt do reprezentacji ciągu równoważne.</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString">
          <source>The string representation of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">Reprezentacja ciągu bieżącego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value in the "R", or round-trip, format of the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString&gt;</ph> Formatów metody <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość "R" lub przesyłania danych, w formacie bieżącej kultury.</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>If you want to specify a different format or culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">Jeśli chcesz określić inny format lub kultury, użyj innego przeciążenia metody <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> metody, w następujący sposób:</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>To use format</source>
          <target state="translated">Aby użyć formatu</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>For culture</source>
          <target state="translated">Dla kultury</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>Use the overload</source>
          <target state="translated">Użyj przeciążenia</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>Round-trip ("R") format</source>
          <target state="translated">Round-trip ("R") format</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>A specific culture</source>
          <target state="translated">Określoną kulturę</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>A specific format</source>
          <target state="translated">Określony format</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>Default (current) culture</source>
          <target state="translated">Domyślną kulturę (bieżącego)</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>A specific format</source>
          <target state="translated">Określony format</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>A specific culture</source>
          <target state="translated">Określoną kulturę</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value includes a negative sign if its value is negative, and a sequence of digits ranging from 0 to 9 without leading zeros.</source>
          <target state="translated">Reprezentacja ciągu <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość obejmuje znaku minus, jeśli jego wartość jest ujemna i sekwencję cyfr od 0 do 9 bez zerami.</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>The negative sign is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated">Znakiem minus jest definiowana za pomocą <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu dla bieżącej kultury.</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>The following example displays a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value by using the default <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString&gt;</ph> method.</source>
          <target state="translated">W poniższym przykładzie przedstawiono <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość przy użyciu domyślnej <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>It also displays the string representations of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from using some standard format specifiers.</source>
          <target state="translated">Wyświetla również reprezentacji ciągu <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość będącą wynikiem używanie niektórych specyfikatorów formatu standardowych.</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>The examples are displayed using the formatting conventions of the en-US culture.</source>
          <target state="translated">W przykładach jest używana konwencja formatowania kultury en-US.</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to its equivalent string representation by using the specified culture-specific formatting information.</source>
          <target state="translated">Konwertuje wartość liczbową bieżącego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiekt do reprezentacji ciągu równoważne przy użyciu określonego formatowania informacje specyficzne dla kultury.</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The string representation of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value in the format specified by the <ph id="ph2">&lt;paramref name="provider" /&gt;</ph> parameter.</source>
          <target state="translated">Reprezentacja ciągu bieżącego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość w formacie określonym przez <ph id="ph2">&lt;paramref name="provider" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value in the "R", or round-trip, format by using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of a specified culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29&gt;</ph> Formatów metody <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość "R" lub przesłanie sformatować przy użyciu <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu określonej kultury.</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>If you want to specify a different format or the current culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">Jeśli chcesz określić inny format lub bieżącej kultury, użyj innego przeciążenia metody <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> metody, w następujący sposób:</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>To use format</source>
          <target state="translated">Aby użyć formatu</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>For culture</source>
          <target state="translated">Dla kultury</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Use the overload</source>
          <target state="translated">Użyj przeciążenia</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Round-trip ("R") format</source>
          <target state="translated">Round-trip ("R") format</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">Domyślną kulturę (bieżącego)</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">Określony format</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">Domyślną kulturę (bieżącego)</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">Określony format</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>A specific culture</source>
          <target state="translated">Określoną kulturę</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> Parametr jest <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementacji.</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the string returned by this method.</source>
          <target state="translated">Jego <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> metoda zwraca <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje specyficzne dla kultury o formacie ciągu zwracane przez tę metodę.</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is formatted using the <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated">Jeśli <ph id="ph1">`provider`</ph> jest <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość jest sformatowany przy użyciu <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu bieżącej kultury.</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The only property of the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that controls the string representation of the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value using the general format specifier is <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph>, which defines the character that represents the negative sign.</source>
          <target state="translated">Tylko właściwości <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który kontroluje reprezentację ciągu <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> jest wartość przy użyciu specyfikatora formatu Ogólne <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph>, który definiuje znak, który reprezentuje znakiem minus.</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter can be one of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph> Parametr może być jedną z następujących czynności:</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> obiekt, który reprezentuje kultury, który dostarcza informacje dotyczące formatowania.</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> Obiektu, który dostarcza informacje dotyczące formatowania.</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>A custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">Niestandardowy obiekt, który implementuje <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated">Jego <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> metoda zwraca <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu, który dostarcza informacje dotyczące formatowania.</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The following example instantiates a custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that defines the tilde (~) as a negative sign.</source>
          <target state="translated">Poniższy przykład tworzy niestandardowy <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu, który definiuje tyldy (~) jako symbolu wartości ujemnej.</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29&gt;</ph> method then uses the custom <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object to display a negative <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29&gt;</ph> Metoda używa niestandardowego <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu do wyświetlenia ujemny <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">Standardowy lub niestandardowy ciąg formatu liczbowego.</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to its equivalent string representation by using the specified format.</source>
          <target state="translated">Konwertuje wartość liczbową bieżącego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiekt do reprezentacji ciągu równoważne przy użyciu określonego formatu.</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>The string representation of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value in the format specified by the <ph id="ph2">&lt;paramref name="format" /&gt;</ph> parameter.</source>
          <target state="translated">Reprezentacja ciągu bieżącego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość w formacie określonym przez <ph id="ph2">&lt;paramref name="format" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value in a specified format by using a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that represents the conventions of the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29&gt;</ph> Formatów metody <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości w określonym formacie za pomocą <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który reprezentuje konwencje bieżącej kultury.</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>If you want to use the "R", or round-trip, format or specify a different culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">Jeśli chcesz użyć "R" lub przesyłania danych, formatu lub określić inną kulturę, użyj innego przeciążenia metody <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> metody, w następujący sposób:</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>To use format</source>
          <target state="translated">Aby użyć formatu</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>For culture</source>
          <target state="translated">Dla kultury</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>Use the overload</source>
          <target state="translated">Użyj przeciążenia</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>Round-trip ("R") format</source>
          <target state="translated">Round-trip ("R") format</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>Default (current) culture</source>
          <target state="translated">Domyślną kulturę (bieżącego)</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>Round-trip ("R") format</source>
          <target state="translated">Round-trip ("R") format</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>A specific culture</source>
          <target state="translated">Określoną kulturę</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>A specific format</source>
          <target state="translated">Określony format</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>A specific culture</source>
          <target state="translated">Określoną kulturę</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid <bpt id="p1">[</bpt>standard numeric string<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>, or any combination of <bpt id="p2">[</bpt>custom numeric format strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated"><ph id="ph1">`format`</ph> Parametr może być dowolny prawidłowy <bpt id="p1">[</bpt>standardowy ciąg numeryczny<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>, lub dowolną kombinację <bpt id="p2">[</bpt>niestandardowe ciągi formatujące liczby<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is equal to <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> or is <ph id="ph3">`null`</ph>, the return value of the current <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> object is formatted with the round-trip format specifier ("R").</source>
          <target state="translated">Jeśli <ph id="ph1">`format`</ph> jest równa <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> lub <ph id="ph3">`null`</ph>, zwracana wartość bieżącej <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu jest sformatowany w systemie specyfikator formatu obustronne ("R").</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is any other value, the method throws a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`format`</ph> jest wszelkie inne wartości, metoda zgłasza <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">Środowisko .NET Framework zapewnia rozbudowaną obsługę formatowania. Opisano to szczegółowo w następujących tematach poświęconych formatowaniu:</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz <bpt id="p1">[</bpt>standardowe ciągi formatu liczbowego<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> i <bpt id="p2">[</bpt>niestandardowe ciągi formatów liczbowych<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>For more information about support for formatting in the .NET Framework, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat obsługi formatowania w programie .NET Framework, zobacz <bpt id="p1">[</bpt>typy formatowania<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>The format of the returned string is determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated">Format zwrócony ciąg jest określany przez <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu dla bieżącej kultury.</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>Depending on the <ph id="ph1">`format`</ph> parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.</source>
          <target state="translated">W zależności od <ph id="ph1">`format`</ph> parametr, ten obiekt określa symbole, takie jak znaku minus, separatora grupy i symbol punktu dziesiętnego w ciągu wyjściowego.</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>To provide formatting information for cultures other than the current culture, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> overload.</source>
          <target state="translated">Aby podać informacje dotyczące formatowania dla kultury niż bieżącej kultury, wywołaj <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> przeciążenia.</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>The following example initializes a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value and displays it by using each standard format string and some custom format strings.</source>
          <target state="translated">W poniższym przykładzie inicjowane <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości i wyświetla je przy użyciu każdego ciągu standardowym formacie i niektórych niestandardowych ciągów formatu.</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> nie jest prawidłowym ciągiem formatu.</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">Standardowy lub niestandardowy ciąg formatu liczbowego.</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Obiekt, który dostarcza informacje o formatowaniu specyficzne dla kultury.</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to its equivalent string representation by using the specified format and culture-specific format information.</source>
          <target state="translated">Konwertuje wartość liczbową bieżącego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> obiekt do reprezentacji ciągu równoważne przy użyciu określonego formatu i informacji o formacie specyficzne dla kultury.</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value as specified by the <ph id="ph2">&lt;paramref name="format" /&gt;</ph> and <ph id="ph3">&lt;paramref name="provider" /&gt;</ph> parameters.</source>
          <target state="translated">Reprezentacja ciągu bieżącego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> wartość określoną przez <ph id="ph2">&lt;paramref name="format" /&gt;</ph> i <ph id="ph3">&lt;paramref name="provider" /&gt;</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value in a specified format by using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of a specified culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> Formatów metody <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości w określonym formacie za pomocą <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu określonej kultury.</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>If you want to use the round-trip format or default culture settings, use the other overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">Jeśli chcesz użyć formatu obustronne lub domyślne ustawienia kultury, użyj innego przeciążenia metody <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> metody, w następujący sposób:</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>To use format</source>
          <target state="translated">Aby użyć formatu</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>For culture</source>
          <target state="translated">Dla kultury</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Use the overload</source>
          <target state="translated">Użyj przeciążenia</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Round-trip ("R") format</source>
          <target state="translated">Round-trip ("R") format</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">Domyślną kulturę (bieżącego)</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Round-trip ("R") format</source>
          <target state="translated">Round-trip ("R") format</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>A specific culture</source>
          <target state="translated">Określoną kulturę</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">Określony format</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">Domyślną kulturę (bieżącego)</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid  <bpt id="p1">[</bpt>standard numeric string<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>, or any combination of <bpt id="p2">[</bpt>custom numeric format strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated"><ph id="ph1">`format`</ph> Parametr może być dowolny prawidłowy <bpt id="p1">[</bpt>standardowy ciąg numeryczny<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>, lub dowolną kombinację <bpt id="p2">[</bpt>niestandardowe ciągi formatujące liczby<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is equal to <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> or is <ph id="ph3">`null`</ph>, the return value of the current <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> object is formatted with the round-trip format specifier ("R").</source>
          <target state="translated">Jeśli <ph id="ph1">`format`</ph> jest równa <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> lub <ph id="ph3">`null`</ph>, zwracana wartość bieżącej <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektu jest sformatowany w systemie specyfikator formatu obustronne ("R").</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is any other value, the method throws a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`format`</ph> jest wszelkie inne wartości, metoda zgłasza <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">Środowisko .NET Framework zapewnia rozbudowaną obsługę formatowania. Opisano to szczegółowo w następujących tematach poświęconych formatowaniu:</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat specyfikatorów formatu liczbowego, zobacz <bpt id="p1">[</bpt>standardowe ciągi formatu liczbowego<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> i <bpt id="p2">[</bpt>niestandardowe ciągi formatów liczbowych<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>For more information about support for formatting in the .NET Framework, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat obsługi formatowania w programie .NET Framework, zobacz <bpt id="p1">[</bpt>typy formatowania<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> Parametr jest <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementacji.</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the string returned by this method.</source>
          <target state="translated">Jego <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> metoda zwraca <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje specyficzne dla kultury o formacie ciągu zwracane przez tę metodę.</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>When the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method is invoked, it calls the <ph id="ph2">`provider`</ph> parameter's <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method and passes it a <ph id="ph4">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> type.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> wywołania metody, wywołuje <ph id="ph2">`provider`</ph> parametru <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> — metoda i przekazuje je <ph id="ph4">&lt;xref:System.Type&gt;</ph> obiekt, który reprezentuje <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> typu.</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method then returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides information for formatting the <ph id="ph3">`value`</ph> parameter, such as the negative sign symbol, the group separator symbol, or the decimal point symbol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> Następnie metoda zwraca <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje dotyczące formatowania <ph id="ph3">`value`</ph> parametrów, takich jak symbolu wartości ujemnej, symbol separatora grupy lub symbol punktu dziesiętnego.</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>There are three ways to use the <ph id="ph1">`provider`</ph> parameter to supply formatting information to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method:</source>
          <target state="translated">Istnieją trzy sposoby używania <ph id="ph1">`provider`</ph> parametr, aby podać informacje dotyczące formatowania do <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> metody:</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>You can pass a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information.</source>
          <target state="translated">Można przekazać <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> obiekt, który reprezentuje kultury, który dostarcza informacje dotyczące formatowania.</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information for that culture.</source>
          <target state="translated">Jego <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> metoda zwraca <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje numeryczne formatowania dla tej kultury.</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>You can pass the actual <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information.</source>
          <target state="translated">Można przekazać rzeczywiste <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje numeryczne formatowania.</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>(Its implementation of <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> just returns itself.)</source>
          <target state="translated">(Jej implementacja <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> zwraca siebie, po prostu.)</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>You can pass a custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">Można przekazać niestandardowego obiektu, który implementuje <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method instantiates and returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">Jego <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> metoda tworzy i zwraca <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje dotyczące formatowania.</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the formatting of the returned string is based on the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated">Jeśli <ph id="ph1">`provider`</ph> jest <ph id="ph2">`null`</ph>, formatowanie zwrócony ciąg jest oparta na <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu bieżącej kultury.</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The following example initializes a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, and displays it to the console using a standard format string and a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that defines the tilde (~) as a negative sign.</source>
          <target state="translated">W poniższym przykładzie inicjowane <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartości i wyświetla je w konsoli przy użyciu ciągu standardowym formacie i <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu, który definiuje tyldy (~) jako symbolu wartości ujemnej.</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> nie jest prawidłowym ciągiem formatu.</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Tries to convert the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent, and returns a value that indicates whether the conversion succeeded.</source>
          <target state="translated">Podejmuje próbę przekonwertowania reprezentację ciągu numer w celu jego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> równoważnej i zwraca wartość wskazującą, czy konwersja powiodła się.</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The string representation of a number.</source>
          <target state="translated">Reprezentacja ciągu dla danej liczby.</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>When this method returns, contains the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent to the number that is contained in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>, or zero (0) if the conversion fails.</source>
          <target state="translated">Po powrocie z tej metody zawiera <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> odpowiednikiem liczba, która jest zawarta w <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept>, lub zero (0), jeśli konwersja nie powiedzie się.</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The conversion fails if the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or is not of the correct format.</source>
          <target state="translated">Konwersja nie powiedzie się, jeśli <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept> parametr jest <ph id="ph1">&lt;see langword="null" /&gt;</ph> lub nie ma poprawnego formatu.</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Ten parametr jest przekazywany niezainicjowany.</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>Tries to convert the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent, and returns a value that indicates whether the conversion succeeded.</source>
          <target state="translated">Podejmuje próbę przekonwertowania reprezentację ciągu numer w celu jego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> równoważnej i zwraca wartość wskazującą, czy konwersja powiodła się.</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="value" /&gt;</ph> został przekonwertowany pomyślnie; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method is like the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%29&gt;</ph> method, except that it does not throw an exception if the conversion fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29&gt;</ph> Przypomina metody <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%29&gt;</ph> metody, z wyjątkiem, że nie zgłosić wyjątek, jeśli konwersja nie powiedzie się.</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>This method eliminates the need to use exception handling to test for a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> if <ph id="ph2">`value`</ph> is invalid and cannot be successfully parsed.</source>
          <target state="translated">Ta metoda eliminuje potrzebę Użyj obsługi wyjątków w celu zbadania <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> Jeśli <ph id="ph2">`value`</ph> jest nieprawidłowy i nie może zostać przeanalizowany pomyślnie.</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`value`</ph> parameter should be the string representation of a decimal number in the following form:</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr powinien być reprezentację liczby dziesiętnej w następującym formacie:</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>ws<ept id="p4">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>] [<bpt id="p2">*</bpt>znak<ept id="p2">*</ept>]<bpt id="p3">*</bpt>cyfr<ept id="p3">*</ept>[<bpt id="p4">*</bpt>ws<ept id="p4">*</ept>]</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">Elementy w nawiasach kwadratowych ([ i ]) są opcjonalne.</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The following table describes each element.</source>
          <target state="translated">W tabeli poniżej opisano każdy element.</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>Element</source>
          <target state="translated">Element</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>Description</source>
          <target state="translated">Opis</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>Optional white space.</source>
          <target state="translated">Opcjonalny odstęp.</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>An optional sign.</source>
          <target state="translated">Opcjonalny znak.</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>Valid sign characters are determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph> properties of the current culture.</source>
          <target state="translated">Nieprawidłowy znak znaki są określane przez <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph> właściwości bieżącej kultury.</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>cyfr<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>A sequence of decimal digits ranging from 0 to 9.</source>
          <target state="translated">Sekwencja cyfr dziesiętnych od 0 do 9.</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The string specified by the <ph id="ph1">`value`</ph> parameter cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</source>
          <target state="translated">Ciąg określony przez <ph id="ph1">`value`</ph> parametr nie może zawierać żadnych separatorów grup lub separatora dziesiętnego i nie może mieć części dziesiętnych.</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`value`</ph> parameter is interpreted by using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr jest interpretowany za pomocą <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> stylu.</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</source>
          <target state="translated">Poza cyframi dziesiętnymi dopuszcza się tylko spacje początkowe i końcowe z wiodącym znakiem.</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>To explicitly define the style elements with the culture-specific formatting information that can be present in <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method.</source>
          <target state="translated">Aby oznaczyć elementy style formatowania informacje specyficzne dla kultury, które mogą być obecne w <ph id="ph1">`value`</ph>, wywołaj <ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`value`</ph> parameter is parsed by using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametru jest analizowana, korzystając z informacji formatowania w <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu dla bieżącej kultury.</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>This overload interprets all digits in the <ph id="ph1">`value`</ph> parameter as decimal digits.</source>
          <target state="translated">Cyfr wszystkich zinterpretuje tego przeciążenia <ph id="ph1">`value`</ph> parametr jako cyfr dziesiętnych.</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>To parse the string representation of a hexadecimal number, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> overload instead.</source>
          <target state="translated">Aby przeanalizować liczbę szesnastkową reprezentację ciągu, należy wywołać <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> zamiast tego przeciążenia.</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method to instantiate two <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects.</source>
          <target state="translated">W poniższym przykładzie użyto <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29&gt;</ph> metodę, aby utworzyć dwa wystąpienia <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>If the conversions succeed, it multiplies each object by another number and then calls the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph> method to determine the relationship between the two objects.</source>
          <target state="translated">W przypadku konwersji, mnoży każdego obiektu przez inny numer, a następnie wywołuje <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph> metodę, aby określić relacji między tymi dwoma obiektami.</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The string representation of a number.</source>
          <target state="translated">Reprezentacja ciągu dla danej liczby.</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The string is interpreted using the style specified by <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Ten ciąg jest interpretowany przy użyciu stylu określony przez <bpt id="p1">&lt;c&gt;</bpt>styl<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A bitwise combination of enumeration values that indicates the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Bitowe połączenie wartości wyliczenia wskazująca elementy style, które mogą być obecne w <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>.</source>
          <target state="translated">Jest Typowa wartość do określenia <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>An object that supplies culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Obiekt, który dostarcza specyficzne dla kultury formatowania informacji na temat <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>When this method returns, contains the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent to the number that is contained in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>, or <ph id="ph2">&lt;see cref="P:System.Numerics.BigInteger.Zero" /&gt;</ph> if the conversion failed.</source>
          <target state="translated">Po powrocie z tej metody zawiera <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> odpowiednikiem liczba, która jest zawarta w <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept>, lub <ph id="ph2">&lt;see cref="P:System.Numerics.BigInteger.Zero" /&gt;</ph> Jeśli konwersja nie powiodła się.</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The conversion fails if the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or is not in a format that is compliant with <bpt id="p2">&lt;c&gt;</bpt>style<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Konwersja nie powiedzie się, jeśli <bpt id="p1">&lt;c&gt;</bpt>wartość<ept id="p1">&lt;/c&gt;</ept> parametr jest <ph id="ph1">&lt;see langword="null" /&gt;</ph> lub nie jest w formacie, który jest zgodny ze <bpt id="p2">&lt;c&gt;</bpt>styl<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Ten parametr jest przekazywany niezainicjowany.</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Tries to convert the string representation of a number in a specified style and culture-specific format to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent, and returns a value that indicates whether the conversion succeeded.</source>
          <target state="translated">Podejmuje próbę przekonwertowania reprezentację ciągu liczbą określony styl i specyficzne dla kultury formatu w celu jego <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> równoważnej i zwraca wartość wskazującą, czy konwersja powiodła się.</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parametr został przekonwertowany pomyślnie; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method is like the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> method, except that it does not throw an exception if the conversion fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> Przypomina metody <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> metody, z wyjątkiem, że nie zgłosić wyjątek, jeśli konwersja nie powiedzie się.</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>This method eliminates the need to use exception handling to test for a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> if <ph id="ph2">`value`</ph> is invalid and cannot be parsed successfully.</source>
          <target state="translated">Ta metoda eliminuje potrzebę Użyj obsługi wyjątków w celu zbadania <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> Jeśli <ph id="ph2">`value`</ph> jest nieprawidłowy i nie może zostać przeanalizowany pomyślnie.</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the <ph id="ph2">`value`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph> Parametru definiuje elementy stylu (na przykład biały znak lub znak dodatnie lub ujemne), które są dozwolone w <ph id="ph2">`value`</ph> parametr powodzenie operacji analizy.</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">Musi być kombinacją flag bitowych z <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> wyliczenia.</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`value`</ph> parameter may include the following elements:</source>
          <target state="translated">W zależności od wartości <ph id="ph1">`style`</ph>, <ph id="ph2">`value`</ph> parametr może zawierać następujące elementy:</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>digits<ept id="p5">*</ept>[.<bpt id="p6">*</bpt>fractional_digits<ept id="p6">*</ept>][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential_digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>digits<ept id="p5">*</ept>[.<bpt id="p6">*</bpt>fractional_digits<ept id="p6">*</ept>][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential_digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If the <ph id="ph1">`style`</ph> parameter includes <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>, the <ph id="ph3">`value`</ph> parameter may include the following elements:</source>
          <target state="translated">Jeśli <ph id="ph1">`style`</ph> zawiera parametr <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>, <ph id="ph3">`value`</ph> parametr może zawierać następujące elementy:</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>]<bpt id="p2">*</bpt>hexdigits<ept id="p2">*</ept>[<bpt id="p3">*</bpt>ws<ept id="p3">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>]<bpt id="p2">*</bpt>hexdigits<ept id="p2">*</ept>[<bpt id="p3">*</bpt>ws<ept id="p3">*</ept>]</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">Elementy w nawiasach kwadratowych ([ i ]) są opcjonalne.</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The following table describes each element.</source>
          <target state="translated">W tabeli poniżej opisano każdy element.</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Element</source>
          <target state="translated">Element</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Description</source>
          <target state="translated">Opis</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Optional white space.</source>
          <target state="translated">Opcjonalny odstęp.</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>White space can appear at the start of <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, or at the end of <ph id="ph4">`value`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Biały znak, może występować na początku <ph id="ph1">`value`</ph> Jeśli <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flagi, lub na końcu <ph id="ph4">`value`</ph> Jeśli <ph id="ph5">`style`</ph> obejmuje <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">Symbol waluty specyficzny dla kultury.</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method of the <ph id="ph4">`provider`</ph> parameter.</source>
          <target state="translated">Jej położenie w ciągu jest definiowana za pomocą <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A&gt;</ph> właściwość <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu zwróconego przez <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> metody <ph id="ph4">`provider`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The currency symbol can appear in <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Symbol waluty może występować w <ph id="ph1">`value`</ph> Jeśli <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>An optional sign.</source>
          <target state="translated">Opcjonalny znak.</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The sign can appear at the start of <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`value`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Logowania może wystąpić na początku <ph id="ph1">`value`</ph> Jeśli <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flagę która może występować na końcu <ph id="ph4">`value`</ph> Jeśli <ph id="ph5">`style`</ph> obejmuje <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Parentheses can be used in <ph id="ph1">`value`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Użycie nawiasów w <ph id="ph1">`value`</ph> wskaż wartość ujemną, jeśli <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>cyfr<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">Sekwencja cyfr od 0 do 9.</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>,<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A culture-specific group separator.</source>
          <target state="translated">Separator grupy specyficzny dla kultury.</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The group separator of the culture specified by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`value`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Separator grupy kultury określonej przez <ph id="ph1">`provider`</ph> może występować w <ph id="ph2">`value`</ph> Jeśli <ph id="ph3">`style`</ph> obejmuje <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">Symbol dziesiętny specyficzny dla kultury.</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The decimal point symbol of the culture specified by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`value`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Symbol punktu dziesiętnego kultury określonej przez <ph id="ph1">`provider`</ph> może występować w <ph id="ph2">`value`</ph> Jeśli <ph id="ph3">`style`</ph> obejmuje <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>One or more occurrences of the digit 0.</source>
          <target state="translated">Jedno lub więcej wystąpień cyfry 0.</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Fractional digits can appear in <ph id="ph1">`value`</ph> only if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">Cyfr ułamkowych może występować w <ph id="ph1">`value`</ph> tylko wtedy, gdy <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>E</source>
          <target state="translated">E</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</source>
          <target state="translated">Znak „e” lub „E”, który wskazuje, że wartość jest reprezentowana w zapisie wykładniczym (naukowym).</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`value`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr może reprezentować liczbę w notacji wykładniczej, jeśli <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">Sekwencja cyfr od 0 do 9.</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`value`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr może reprezentować liczbę w notacji wykładniczej, jeśli <ph id="ph2">`style`</ph> obejmuje <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flagi.</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A sequence of hexadecimal digits from 0 through f, or 0 through F.</source>
          <target state="translated">Sekwencja cyfr szesnastkowych od 0 do f lub od 0 do F.</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A string with decimal digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> flag) always parses successfully.</source>
          <target state="translated">Ciąg zawierający tylko cyfry dziesiętne (które odpowiada <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> flagi) zawsze przeanalizowany pomyślnie.</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Most of the remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be present, but are not required to be present, in this input string.</source>
          <target state="translated">Większość pozostałych <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> członkowie sterować elementy, które mogą być obecne, ale nie muszą znajdować się w tym ciągu wejściowego.</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`value`</ph>.</source>
          <target state="translated">W poniższej tabeli przedstawiono poszczególne <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> elementów członkowskich mają wpływ na elementy, które mogą być obecne w <ph id="ph2">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Non-composite <ph id="ph1">`NumberStyles`</ph> values</source>
          <target state="translated">Inne niż złożone <ph id="ph1">`NumberStyles`</ph> wartości</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Elements permitted in value in addition to digits</source>
          <target state="translated">Dodatkowe (poza cyframi) elementy dozwolone w wartości</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Decimal digits only.</source>
          <target state="translated">Tylko cyfry dziesiętne.</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The decimal point (<bpt id="p1">*</bpt>.<ept id="p1">*</ept>) and <bpt id="p2">*</bpt>fractional_digits<ept id="p2">*</ept> elements.</source>
          <target state="translated">Dziesiętnego (<bpt id="p1">*</bpt>.<ept id="p1">*</ept>) i <bpt id="p2">*</bpt>fractional_digits<ept id="p2">*</ept> elementów.</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>However, <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> must consist of only one or more 0 digits, or the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Jednak <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> musi składać się z jednego lub więcej cyfry 0 lub metoda zwraca <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The "e" or "E" character, which indicates exponential notation, along with <bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept>.</source>
          <target state="translated">"E" lub litery "E", która wskazuje notacji wykładniczej, wraz z <bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If <ph id="ph1">`value`</ph> represents a number in exponential notation, it cannot have a non-zero, fractional component.</source>
          <target state="translated">Jeśli <ph id="ph1">`value`</ph> reprezentuje liczbę w notacji wykładniczej, nie może mieć inną niż zero, ułamkowych składnika.</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the start of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept> element na początku <ph id="ph1">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept> element na końcu <ph id="ph1">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element before <bpt id="p2">*</bpt>digits<ept id="p2">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Znak<ept id="p1">*</ept> element przed <bpt id="p2">*</bpt>cyfr<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element after <bpt id="p2">*</bpt>digits<ept id="p2">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Znak<ept id="p1">*</ept> elementu po <bpt id="p2">*</bpt>cyfr<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated"><bpt id="p1">*</bpt>Znak<ept id="p1">*</ept> elementu w postaci nawiasów otaczającej wartość liczbową.</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The group separator (<bpt id="p1">*</bpt>,<ept id="p1">*</ept>) element.</source>
          <target state="translated">Separator grupy (<bpt id="p1">*</bpt>,<ept id="p1">*</ept>) elementu.</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The currency (<bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept>) element.</source>
          <target state="translated">Waluta (<bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept>) elementu.</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>All elements.</source>
          <target state="translated">Wszystkie elementy.</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>However, <ph id="ph1">`value`</ph> cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated">Jednak <ph id="ph1">`value`</ph> nie może reprezentować liczbę szesnastkową lub numer w notacji wykładniczej.</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the start or end of <ph id="ph1">`value`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the start of <ph id="ph2">`value`</ph>, and the decimal point (<bpt id="p3">*</bpt>.<ept id="p3">*</ept>) symbol.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept> elementu na początek lub koniec <ph id="ph1">`value`</ph>, <bpt id="p2">*</bpt>znak<ept id="p2">*</ept> na początku <ph id="ph2">`value`</ph>i dziesiętnego (<bpt id="p3">*</bpt>.<ept id="p3">*</ept>) symbolu.</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`value`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Parametr można również użyć notacji wykładniczej.</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept>, group separator (<bpt id="p3">*</bpt>,<ept id="p3">*</ept>), and decimal point (<bpt id="p4">*</bpt>.<ept id="p4">*</ept>) elements.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>, <bpt id="p2">*</bpt>znak<ept id="p2">*</ept>, grupy separatora (<bpt id="p3">*</bpt>,<ept id="p3">*</ept>), a separatorem dziesiętnym (<bpt id="p4">*</bpt>.<ept id="p4">*</ept>) elementów.</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>All elements.</source>
          <target state="translated">Wszystkie elementy.</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>However, <ph id="ph1">`value`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">Jednak <ph id="ph1">`value`</ph> nie może reprezentować liczbę szesnastkową.</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%2A&gt;</ph> method to round-trip the string representation of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that was output by the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, you should use the <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method with the "R" format specifier to generate the string representation of the <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">Jeśli używasz <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%2A&gt;</ph> metody przesyłania danych reprezentację ciągu z <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość, która została danych wyjściowych przez <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> metody, należy użyć <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> metody z specyfikator formatu "R", aby wygenerować reprezentację ciągu <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Otherwise, the string representation of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%2A&gt;</ph> method to restore the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">W przeciwnym razie reprezentację ciągu <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> zachowuje tylko 50 cyfr znaczących większość oryginalnej wartości i dane mogą zostać utracone, korzystając z <ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%2A&gt;</ph> metoda przywracania <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> flag is used, <ph id="ph2">`value`</ph> must be a hexadecimal value.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> flaga jest wykorzystywana, <ph id="ph2">`value`</ph> musi mieć wartość szesnastkową.</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The only other flags that can be present in <ph id="ph1">`style`</ph> are <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Tylko innych flagi, które mogą być obecne w <ph id="ph1">`style`</ph> są <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> i <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>(The <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration has a composite style, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber&gt;</ph>, that includes both white-space flags.)</source>
          <target state="translated">( <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> Wyliczenie ma stylu złożonego <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber&gt;</ph>, zawierająca zarówno flagi biały znak.)</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If <ph id="ph1">`value`</ph> is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as <ph id="ph2">`0x`</ph> or <ph id="ph3">`&amp;h`</ph>) that differentiates it as a hexadecimal number.</source>
          <target state="translated">Jeśli <ph id="ph1">`value`</ph> reprezentacja ciągu z liczbą szesnastkową nie może być poprzedzone żadnych decoration (takich jak <ph id="ph2">`0x`</ph> lub <ph id="ph3">`&amp;h`</ph>) który odróżnia go jako liczbę szesnastkową.</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>This causes the conversion to fail.</source>
          <target state="translated">To powoduje niepowodzenie konwersji.</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If <ph id="ph1">`value`</ph> is a hexadecimal string, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method interprets <ph id="ph3">`value`</ph> as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to <ph id="ph4">`0x80`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">`value`</ph> jest ciągiem szesnastkowym <ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> interpretuje metody <ph id="ph3">`value`</ph> jako wartość ujemną przechowywane za pomocą dwóch jego reprezentacja dopełnienia, jeśli jego pierwsze dwie cyfry szesnastkowe są większe niż lub równe <ph id="ph4">`0x80`</ph>.</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>In other words, the method interprets the highest-order bit of the first byte in <ph id="ph1">`value`</ph> as the sign bit.</source>
          <target state="translated">Innymi słowy, metoda interpretuje bit najwyższej kolejności pierwszego bajtu w <ph id="ph1">`value`</ph> jako bitem.</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in <ph id="ph1">`value`</ph> must have a value of zero.</source>
          <target state="translated">Aby upewnić się, że ciąg szesnastkowy poprawnie jest interpretowana jako wartość dodatnią, cyfry, w <ph id="ph1">`value`</ph> musi mieć wartość zero.</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>For example, the method interprets <ph id="ph1">`0x80`</ph> as a negative value, but it interprets either <ph id="ph2">`0x080`</ph> or <ph id="ph3">`0x0080`</ph> as a positive value.</source>
          <target state="translated">Na przykład metoda interpretuje <ph id="ph1">`0x80`</ph> zgodnie z wartością ujemną, ale interpretuje albo <ph id="ph2">`0x080`</ph> lub <ph id="ph3">`0x0080`</ph> jako wartość dodatnią.</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</source>
          <target state="translated">Poniższy przykład przedstawia różnice między ciągów szesnastkowych, które reprezentują wartości ujemnych i dodatnich.</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`provider`</ph> Parametr jest <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementacji.</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of <ph id="ph3">`value`</ph>.</source>
          <target state="translated">Jego <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> metoda zwraca <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu, który zawiera informacje specyficzne dla kultury o format <ph id="ph3">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`provider`</ph> parameter can be any one of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph> Parametru może być jednym z następujących czynności:</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> obiekt, który reprezentuje kultury, który dostarcza informacje dotyczące formatowania.</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Its <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information for that culture.</source>
          <target state="translated">Jego <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> metoda zwraca <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje numeryczne formatowania dla tej kultury.</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje numeryczne formatowania.</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>(Its implementation of <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> just returns itself.)</source>
          <target state="translated">(Jej implementacja <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> zwraca siebie, po prostu.)</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">Niestandardowy obiekt, który implementuje <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method instantiates and returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">Jego <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> metoda tworzy i zwraca <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiekt, który zawiera informacje dotyczące formatowania.</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture is used.</source>
          <target state="translated">Jeśli <ph id="ph1">`provider`</ph> jest <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> obiektu dla bieżącej kultury jest używany.</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The following example makes some calls to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method using various combinations of values for the <ph id="ph2">`style`</ph> and <ph id="ph3">`provider`</ph> parameters.</source>
          <target state="translated">Poniższy przykład powoduje, że niektóre wywołania <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> metodę przy użyciu różnych kombinacji wartości <ph id="ph2">`style`</ph> i <ph id="ph3">`provider`</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A number of the individual calls to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method pass an instance of the following <ph id="ph2">`BigIntegerFormatProvider`</ph> class, which defines a tilde (~) as the negative sign.</source>
          <target state="translated">Liczba wywołań poszczególnych <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> metody Przekaż wystąpienie następujących <ph id="ph2">`BigIntegerFormatProvider`</ph> klasy, która definiuje tyldy (~) jako znaku minus.</target>       </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> nie jest <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> wartość.</target>       </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> includes the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> flag along with another value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> obejmuje <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> lub <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> flagi wraz z inną wartość.</target>       </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.Zero">
          <source>Gets a value that represents the number 0 (zero).</source>
          <target state="translated">Pobiera wartość reprezentującą liczbę 0 (zero).</target>       </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Zero">
          <source>An integer whose value is 0 (zero).</source>
          <target state="translated">Liczba całkowita, którego wartość wynosi 0 (zero).</target>       </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Zero">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object returned by this property provides a convenient source of a zero value for use in assignments and comparisons.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> Obiektu zwróconego przez tę właściwość stanowi wygodny źródło wartość zerową dla przypisania i porównania.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>