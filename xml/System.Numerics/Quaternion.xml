<Type Name="Quaternion" FullName="System.Numerics.Quaternion">
  <Metadata><Meta Name="ms.openlocfilehash" Value="054bb6e81c7723761f065bf703ca1c33c81555c0" /><Meta Name="ms.sourcegitcommit" Value="3f21796619d6e69ad383c958cc013ce44c0678de" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/11/2019" /><Meta Name="ms.locfileid" Value="56046302" /></Metadata><TypeSignature Language="C#" Value="public struct Quaternion : IEquatable&lt;System.Numerics.Quaternion&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Quaternion extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Numerics.Quaternion&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.Quaternion" />
  <TypeSignature Language="VB.NET" Value="Public Structure Quaternion&#xA;Implements IEquatable(Of Quaternion)" />
  <TypeSignature Language="C++ CLI" Value="public value class Quaternion : IEquatable&lt;System::Numerics::Quaternion&gt;" />
  <TypeSignature Language="F#" Value="type Quaternion = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Numerics.Vectors</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Numerics</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Numerics.Quaternion&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje wektor, który jest używany do kodowania trójwymiarowej rotacji fizycznych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Numerics.Quaternion> Struktury jest używane do wydajnego Obróć wektora obiektów o (x, y, z) liczby zespolonej czym kąt, gdzie:  
  
```  
w = cos(theta/2)  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nową <see cref="T:System.Numerics.Quaternion" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Quaternion (System.Numerics.Vector3 vectorPart, float scalarPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Numerics.Vector3 vectorPart, float32 scalarPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (vectorPart As Vector3, scalarPart As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Quaternion(System::Numerics::Vector3 vectorPart, float scalarPart);" />
      <MemberSignature Language="F#" Value="new System.Numerics.Quaternion : System.Numerics.Vector3 * single -&gt; System.Numerics.Quaternion" Usage="new System.Numerics.Quaternion (vectorPart, scalarPart)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="vectorPart" Type="System.Numerics.Vector3" />
        <Parameter Name="scalarPart" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="vectorPart">Wektor część quaternion.</param>
        <param name="scalarPart">Obrót część quaternion.</param>
        <summary>Tworzy quaternion na podstawie określonej części wektora i wymiany.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Quaternion (float x, float y, float z, float w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 x, float32 y, float32 z, float32 w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Single, y As Single, z As Single, w As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Quaternion(float x, float y, float z, float w);" />
      <MemberSignature Language="F#" Value="new System.Numerics.Quaternion : single * single * single * single -&gt; System.Numerics.Quaternion" Usage="new System.Numerics.Quaternion (x, y, z, w)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
        <Parameter Name="w" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">Wartość do przypisania do składnika X quaternion.</param>
        <param name="y">Wartość do przypisania do składnika Y quaternion.</param>
        <param name="z">Wartość do przypisania do składnika Z quaternion.</param>
        <param name="w">Wartość do przypisania do składnika W quaternion.</param>
        <summary>Tworzy quaternion z określone składniki.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion Add (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Quaternion Add(valuetype System.Numerics.Quaternion value1, valuetype System.Numerics.Quaternion value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (value1 As Quaternion, value2 As Quaternion) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion Add(System::Numerics::Quaternion value1, System::Numerics::Quaternion value2);" />
      <MemberSignature Language="F#" Value="static member Add : System.Numerics.Quaternion * System.Numerics.Quaternion -&gt; System.Numerics.Quaternion" Usage="System.Numerics.Quaternion.Add (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Numerics.Quaternion" />
        <Parameter Name="value2" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="value1">Pierwszy quaternion.</param>
        <param name="value2">Drugi quaternion.</param>
        <summary>Dodaje jeden quaternion z odpowiadającego mu elementu w drugim quaternion każdego elementu.</summary>
        <returns>Quaternion, który zawiera wartości sumowany <paramref name="value1" /> i <paramref name="value2" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concatenate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion Concatenate (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Quaternion Concatenate(valuetype System.Numerics.Quaternion value1, valuetype System.Numerics.Quaternion value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concatenate (value1 As Quaternion, value2 As Quaternion) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion Concatenate(System::Numerics::Quaternion value1, System::Numerics::Quaternion value2);" />
      <MemberSignature Language="F#" Value="static member Concatenate : System.Numerics.Quaternion * System.Numerics.Quaternion -&gt; System.Numerics.Quaternion" Usage="System.Numerics.Quaternion.Concatenate (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Numerics.Quaternion" />
        <Parameter Name="value2" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="value1">Pierwszy obrót quaternion w serii.</param>
        <param name="value2">Drugi obrót quaternion w serii.</param>
        <summary>Łączy dwa kwaternionów.</summary>
        <returns>Nowe quaternion, reprezentujący łączenie <paramref name="value1" /> obrotu następuje <paramref name="value2" /> obrotu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conjugate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion Conjugate (System.Numerics.Quaternion value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Quaternion Conjugate(valuetype System.Numerics.Quaternion value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Conjugate (value As Quaternion) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion Conjugate(System::Numerics::Quaternion value);" />
      <MemberSignature Language="F#" Value="static member Conjugate : System.Numerics.Quaternion -&gt; System.Numerics.Quaternion" Usage="System.Numerics.Quaternion.Conjugate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="value">Quaternion.</param>
        <summary>Zwraca sprzężenie quaternion określony.</summary>
        <returns>Nowe quaternion, który jest sprzężenie z <see langword="value" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromAxisAngle">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion CreateFromAxisAngle (System.Numerics.Vector3 axis, float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Quaternion CreateFromAxisAngle(valuetype System.Numerics.Vector3 axis, float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromAxisAngle (axis As Vector3, angle As Single) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion CreateFromAxisAngle(System::Numerics::Vector3 axis, float angle);" />
      <MemberSignature Language="F#" Value="static member CreateFromAxisAngle : System.Numerics.Vector3 * single -&gt; System.Numerics.Quaternion" Usage="System.Numerics.Quaternion.CreateFromAxisAngle (axis, angle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axis" Type="System.Numerics.Vector3" />
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="axis">Wektor jednostki można obracać wokół.</param>
        <param name="angle">Kąt w radianach, aby obrócić wokół wektora.</param>
        <summary>Tworzy quaternion z jednostki, wektora i kąta, aby obrócić wokół wektora.</summary>
        <returns>Nowo utworzony quaternion.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `axis` Wektor muszą być znormalizowane przed wywołaniem tej metody lub wynikowy <xref:System.Numerics.Quaternion> będzie niepoprawne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromRotationMatrix">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion CreateFromRotationMatrix (System.Numerics.Matrix4x4 matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Quaternion CreateFromRotationMatrix(valuetype System.Numerics.Matrix4x4 matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromRotationMatrix (matrix As Matrix4x4) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion CreateFromRotationMatrix(System::Numerics::Matrix4x4 matrix);" />
      <MemberSignature Language="F#" Value="static member CreateFromRotationMatrix : System.Numerics.Matrix4x4 -&gt; System.Numerics.Quaternion" Usage="System.Numerics.Quaternion.CreateFromRotationMatrix matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Numerics.Matrix4x4" />
      </Parameters>
      <Docs>
        <param name="matrix">Macierz obrotu.</param>
        <summary>Tworzy quaternion z macierzy określonego obrotu.</summary>
        <returns>Nowo utworzony quaternion.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromYawPitchRoll">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion CreateFromYawPitchRoll (float yaw, float pitch, float roll);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Quaternion CreateFromYawPitchRoll(float32 yaw, float32 pitch, float32 roll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromYawPitchRoll (yaw As Single, pitch As Single, roll As Single) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion CreateFromYawPitchRoll(float yaw, float pitch, float roll);" />
      <MemberSignature Language="F#" Value="static member CreateFromYawPitchRoll : single * single * single -&gt; System.Numerics.Quaternion" Usage="System.Numerics.Quaternion.CreateFromYawPitchRoll (yaw, pitch, roll)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yaw" Type="System.Single" />
        <Parameter Name="pitch" Type="System.Single" />
        <Parameter Name="roll" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="yaw">Kąt odchylenia w radianach wokół osi Y.</param>
        <param name="pitch">Gęstość kąt w radianach, wokół osi X.</param>
        <param name="roll">Kąt obrotu, w radianach wokół osi Z.</param>
        <summary>Tworzy nowy quaternion na podstawie danego odchylenia, skoku i wdrożenie.</summary>
        <returns>Wynikowy quaternion.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion Divide (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Quaternion Divide(valuetype System.Numerics.Quaternion value1, valuetype System.Numerics.Quaternion value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (value1 As Quaternion, value2 As Quaternion) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion Divide(System::Numerics::Quaternion value1, System::Numerics::Quaternion value2);" />
      <MemberSignature Language="F#" Value="static member Divide : System.Numerics.Quaternion * System.Numerics.Quaternion -&gt; System.Numerics.Quaternion" Usage="System.Numerics.Quaternion.Divide (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Numerics.Quaternion" />
        <Parameter Name="value2" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="value1">Dzielna.</param>
        <param name="value2">Dzielnik.</param>
        <summary>Dzieli quaternion jeden za drugim quaternion.</summary>
        <returns>Quaternion, która wynika z podziału <paramref name="value1" /> przez <paramref name="value2" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dot">
      <MemberSignature Language="C#" Value="public static float Dot (System.Numerics.Quaternion quaternion1, System.Numerics.Quaternion quaternion2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Dot(valuetype System.Numerics.Quaternion quaternion1, valuetype System.Numerics.Quaternion quaternion2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dot (quaternion1 As Quaternion, quaternion2 As Quaternion) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Dot(System::Numerics::Quaternion quaternion1, System::Numerics::Quaternion quaternion2);" />
      <MemberSignature Language="F#" Value="static member Dot : System.Numerics.Quaternion * System.Numerics.Quaternion -&gt; single" Usage="System.Numerics.Quaternion.Dot (quaternion1, quaternion2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quaternion1" Type="System.Numerics.Quaternion" />
        <Parameter Name="quaternion2" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="quaternion1">Pierwszy quaternion.</param>
        <param name="quaternion2">Drugi quaternion.</param>
        <summary>Oblicza iloczyn kropka kwaternionów dwa.</summary>
        <returns>Skalarnego.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca wartość wskazującą, czy to wystąpienie i określonego <see cref="T:System.Numerics.Quaternion" /> wystąpienie lub określony obiekt są równe.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Numerics.Quaternion other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Numerics.Quaternion other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Quaternion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Numerics::Quaternion other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Numerics.Quaternion -&gt; bool" Usage="quaternion.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="other">Inne quaternion.</param>
        <summary>Zwraca wartość wskazującą, czy to wystąpienie i innym quaternion są takie same.</summary>
        <returns><see langword="true" /> Jeśli dwa kwaternionów są równe; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwa kwaternionów są równe, jeśli każdy ich odpowiednich elementów jest taki sam.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="quaternion.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do porównania z bieżącym wystąpieniem.</param>
        <summary>Zwraca wartość wskazującą, czy to wystąpienie oraz określony obiekt są równe.</summary>
        <returns><see langword="true" /> Jeśli bieżące wystąpienie i <paramref name="obj" /> są równe; w przeciwnym razie <see langword="false" />. Jeśli <paramref name="obj" /> jest <see langword="null" />, metoda zwraca <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bieżące wystąpienie i `obj` są takie same Jeśli `obj` jest <xref:System.Numerics.Quaternion> obiektu i odpowiadających składników każdej macierzy są takie same.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="quaternion.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kod skrótu dla tego wystąpienia.</summary>
        <returns>Kod skrótu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.Quaternion Identity" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Quaternion.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Identity As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::Quaternion Identity { System::Numerics::Quaternion get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Numerics.Quaternion" Usage="System.Numerics.Quaternion.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera quaternion, reprezentująca nie obrotu.</summary>
        <value>Quaternion, w których wartości są <c>(0, 0, 0, 1)</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inverse">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion Inverse (System.Numerics.Quaternion value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Quaternion Inverse(valuetype System.Numerics.Quaternion value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Inverse (value As Quaternion) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion Inverse(System::Numerics::Quaternion value);" />
      <MemberSignature Language="F#" Value="static member Inverse : System.Numerics.Quaternion -&gt; System.Numerics.Quaternion" Usage="System.Numerics.Quaternion.Inverse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="value">Quaternion.</param>
        <summary>Zwraca odwrotność quaternion.</summary>
        <returns>Quaternion odwrócony.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdentity">
      <MemberSignature Language="C#" Value="public bool IsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Quaternion.IsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIdentity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIdentity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsIdentity : bool" Usage="System.Numerics.Quaternion.IsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy bieżące wystąpienie jest quaternion tożsamości.</summary>
        <value><see langword="true" /> Jeśli bieżące wystąpienie jest quaternion tożsamości; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Numerics.Quaternion.Identity" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public float Length ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 Length() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.Length" />
      <MemberSignature Language="VB.NET" Value="Public Function Length () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float Length();" />
      <MemberSignature Language="F#" Value="member this.Length : unit -&gt; single" Usage="quaternion.Length " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Oblicza długość quaternion.</summary>
        <returns>Obliczona długość quaternion.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LengthSquared">
      <MemberSignature Language="C#" Value="public float LengthSquared ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 LengthSquared() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.LengthSquared" />
      <MemberSignature Language="VB.NET" Value="Public Function LengthSquared () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float LengthSquared();" />
      <MemberSignature Language="F#" Value="member this.LengthSquared : unit -&gt; single" Usage="quaternion.LengthSquared " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Oblicza długość kwadratów quaternion.</summary>
        <returns>Długość kwadrat z quaternion.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lerp">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion Lerp (System.Numerics.Quaternion quaternion1, System.Numerics.Quaternion quaternion2, float amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Quaternion Lerp(valuetype System.Numerics.Quaternion quaternion1, valuetype System.Numerics.Quaternion quaternion2, float32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lerp (quaternion1 As Quaternion, quaternion2 As Quaternion, amount As Single) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion Lerp(System::Numerics::Quaternion quaternion1, System::Numerics::Quaternion quaternion2, float amount);" />
      <MemberSignature Language="F#" Value="static member Lerp : System.Numerics.Quaternion * System.Numerics.Quaternion * single -&gt; System.Numerics.Quaternion" Usage="System.Numerics.Quaternion.Lerp (quaternion1, quaternion2, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quaternion1" Type="System.Numerics.Quaternion" />
        <Parameter Name="quaternion2" Type="System.Numerics.Quaternion" />
        <Parameter Name="amount" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="quaternion1">Pierwszy quaternion.</param>
        <param name="quaternion2">Drugi quaternion.</param>
        <param name="amount">Względna waga <paramref name="quaternion2" /> w interpolacji.</param>
        <summary>Wykonuje interpolacji liniowej między dwa kwaternionów oparte na wartość, która określa wagi quaternion drugiego.</summary>
        <returns>Quaternion interpolowane.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Multiply">
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wykonuje operację mnożenia na quaternion.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion Multiply (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Quaternion Multiply(valuetype System.Numerics.Quaternion value1, valuetype System.Numerics.Quaternion value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (value1 As Quaternion, value2 As Quaternion) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion Multiply(System::Numerics::Quaternion value1, System::Numerics::Quaternion value2);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Numerics.Quaternion * System.Numerics.Quaternion -&gt; System.Numerics.Quaternion" Usage="System.Numerics.Quaternion.Multiply (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Numerics.Quaternion" />
        <Parameter Name="value2" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="value1">Pierwszy quaternion.</param>
        <param name="value2">Drugi quaternion.</param>
        <summary>Zwraca quaternion, w wyniku mnożenia dwóch kwaternionów ze sobą.</summary>
        <returns>Quaternion produktu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion Multiply (System.Numerics.Quaternion value1, float value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Quaternion Multiply(valuetype System.Numerics.Quaternion value1, float32 value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (value1 As Quaternion, value2 As Single) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion Multiply(System::Numerics::Quaternion value1, float value2);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Numerics.Quaternion * single -&gt; System.Numerics.Quaternion" Usage="System.Numerics.Quaternion.Multiply (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Numerics.Quaternion" />
        <Parameter Name="value2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value1">Quaternion źródła.</param>
        <param name="value2">Wartość skalarna.</param>
        <summary>Zwraca quaternion, będącą wynikiem skalowania wszystkie składniki quaternion określony współczynnik skalarne.</summary>
        <returns>Skalowany quaternion.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion Negate (System.Numerics.Quaternion value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Quaternion Negate(valuetype System.Numerics.Quaternion value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (value As Quaternion) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion Negate(System::Numerics::Quaternion value);" />
      <MemberSignature Language="F#" Value="static member Negate : System.Numerics.Quaternion -&gt; System.Numerics.Quaternion" Usage="System.Numerics.Quaternion.Negate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="value">Quaternion do zanegowania.</param>
        <summary>Odwraca znak każdego składnika quaternion.</summary>
        <returns>Quaternion zanegowanych.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion Normalize (System.Numerics.Quaternion value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Quaternion Normalize(valuetype System.Numerics.Quaternion value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Normalize (value As Quaternion) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion Normalize(System::Numerics::Quaternion value);" />
      <MemberSignature Language="F#" Value="static member Normalize : System.Numerics.Quaternion -&gt; System.Numerics.Quaternion" Usage="System.Numerics.Quaternion.Normalize value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="value">Quaternion do normalizacji.</param>
        <summary>Dzieli każdy element w określonym <see cref="T:System.Numerics.Quaternion" /> przez jego długość.</summary>
        <returns>Quaternion znormalizowana.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion operator + (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Quaternion op_Addition(valuetype System.Numerics.Quaternion value1, valuetype System.Numerics.Quaternion value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (value1 As Quaternion, value2 As Quaternion) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion operator +(System::Numerics::Quaternion value1, System::Numerics::Quaternion value2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Numerics.Quaternion * System.Numerics.Quaternion -&gt; System.Numerics.Quaternion" Usage="value1 + value2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Numerics.Quaternion" />
        <Parameter Name="value2" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="value1">Pierwszy quaternion.</param>
        <param name="value2">Drugi quaternion.</param>
        <summary>Dodaje jeden quaternion z odpowiadającego mu elementu w drugim quaternion każdego elementu.</summary>
        <returns>Quaternion, który zawiera wartości sumowany <paramref name="value1" /> i <paramref name="value2" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Numerics.Quaternion.op_Addition%2A> Metoda definiuje operaton dla operatora dodawania <xref:System.Numerics.Quaternion> obiektów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion operator / (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Quaternion op_Division(valuetype System.Numerics.Quaternion value1, valuetype System.Numerics.Quaternion value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (value1 As Quaternion, value2 As Quaternion) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion operator /(System::Numerics::Quaternion value1, System::Numerics::Quaternion value2);" />
      <MemberSignature Language="F#" Value="static member ( / ) : System.Numerics.Quaternion * System.Numerics.Quaternion -&gt; System.Numerics.Quaternion" Usage="value1 / value2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Numerics.Quaternion" />
        <Parameter Name="value2" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="value1">Dzielna.</param>
        <param name="value2">Dzielnik.</param>
        <summary>Dzieli quaternion jeden za drugim quaternion.</summary>
        <returns>Quaternion, która wynika z podziału <paramref name="value1" /> przez <paramref name="value2" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Numerics.Quaternion.op_Division%2A> Metoda definiuje operacji dzielenia dla <xref:System.Numerics.Quaternion> obiektów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.Quaternion value1, valuetype System.Numerics.Quaternion value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (value1 As Quaternion, value2 As Quaternion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::Quaternion value1, System::Numerics::Quaternion value2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.Quaternion * System.Numerics.Quaternion -&gt; bool" Usage="value1 = value2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Numerics.Quaternion" />
        <Parameter Name="value2" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="value1">Pierwszy quaternion do porównania.</param>
        <param name="value2">Drugi quaternion do porównania.</param>
        <summary>Zwraca wartość wskazującą, czy dwa kwaternionów są takie same.</summary>
        <returns><see langword="true" /> Jeśli dwa kwaternionów są równe; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwa kwaternionów są równe, jeśli każdy ich odpowiednich elementów jest taki sam.  
  
 <xref:System.Numerics.Quaternion.op_Equality%2A> Metoda definiuje operacji operatora równości dla <xref:System.Numerics.Quaternion> obiektów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.Quaternion value1, valuetype System.Numerics.Quaternion value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (value1 As Quaternion, value2 As Quaternion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::Quaternion value1, System::Numerics::Quaternion value2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.Quaternion * System.Numerics.Quaternion -&gt; bool" Usage="System.Numerics.Quaternion.op_Inequality (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Numerics.Quaternion" />
        <Parameter Name="value2" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="value1">Pierwszy quaternion do porównania.</param>
        <param name="value2">Drugi quaternion do porównania.</param>
        <summary>Zwraca wartość wskazującą, czy dwa kwaternionów nie są takie same.</summary>
        <returns><see langword="true" /> Jeśli <paramref name="value1" /> i <paramref name="value2" /> nie są równe; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Multiply">
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wykonuje operację mnożenia na quaternion.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion operator * (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Quaternion op_Multiply(valuetype System.Numerics.Quaternion value1, valuetype System.Numerics.Quaternion value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (value1 As Quaternion, value2 As Quaternion) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion operator *(System::Numerics::Quaternion value1, System::Numerics::Quaternion value2);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Numerics.Quaternion * System.Numerics.Quaternion -&gt; System.Numerics.Quaternion" Usage="value1 * value2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Numerics.Quaternion" />
        <Parameter Name="value2" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="value1">Pierwszy quaternion.</param>
        <param name="value2">Drugi quaternion.</param>
        <summary>Zwraca quaternion, w wyniku mnożenia dwóch kwaternionów ze sobą.</summary>
        <returns>Quaternion produktu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Numerics.Quaternion.op_Multiply%2A> Metoda definiuje operacji operator mnożenia dla <xref:System.Numerics.Quaternion> obiektów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion operator * (System.Numerics.Quaternion value1, float value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Quaternion op_Multiply(valuetype System.Numerics.Quaternion value1, float32 value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (value1 As Quaternion, value2 As Single) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion operator *(System::Numerics::Quaternion value1, float value2);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Numerics.Quaternion * single -&gt; System.Numerics.Quaternion" Usage="value1 * value2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Numerics.Quaternion" />
        <Parameter Name="value2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value1">Quaternion źródła.</param>
        <param name="value2">Wartość skalarna.</param>
        <summary>Zwraca quaternion, będącą wynikiem skalowania wszystkie składniki quaternion określony współczynnik skalarne.</summary>
        <returns>Skalowany quaternion.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Numerics.Quaternion.op_Multiply%2A> Metoda definiuje operacji operator mnożenia dla <xref:System.Numerics.Quaternion> obiektów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion operator - (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Quaternion op_Subtraction(valuetype System.Numerics.Quaternion value1, valuetype System.Numerics.Quaternion value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (value1 As Quaternion, value2 As Quaternion) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion operator -(System::Numerics::Quaternion value1, System::Numerics::Quaternion value2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Numerics.Quaternion * System.Numerics.Quaternion -&gt; System.Numerics.Quaternion" Usage="value1 - value2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Numerics.Quaternion" />
        <Parameter Name="value2" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="value1">Pierwszy quaternion.</param>
        <param name="value2">Drugi quaternion.</param>
        <summary>Odejmuje każdego elementu w drugim quaternion z odpowiadającego mu elementu w pierwszym quaternion.</summary>
        <returns>Quaternion zawierające wartości, które są wynikiem odjęcie każdego elementu w <paramref name="value2" /> z odpowiadającego mu elementu w <paramref name="value1" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Numerics.Quaternion.op_Subtraction%2A> Metoda definiuje operacji operator odejmowania <xref:System.Numerics.Quaternion> obiektów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion operator - (System.Numerics.Quaternion value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Quaternion op_UnaryNegation(valuetype System.Numerics.Quaternion value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (value As Quaternion) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion operator -(System::Numerics::Quaternion value);" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : System.Numerics.Quaternion -&gt; System.Numerics.Quaternion" Usage="- value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="value">Quaternion do zanegowania.</param>
        <summary>Odwraca znak każdego składnika quaternion.</summary>
        <returns>Quaternion zanegowanych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Numerics.Quaternion.op_UnaryNegation%2A> Metoda definiuje operacji Jednoargumentowy operator negacji dla <xref:System.Numerics.Quaternion> obiektów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Slerp">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion Slerp (System.Numerics.Quaternion quaternion1, System.Numerics.Quaternion quaternion2, float amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Quaternion Slerp(valuetype System.Numerics.Quaternion quaternion1, valuetype System.Numerics.Quaternion quaternion2, float32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Slerp (quaternion1 As Quaternion, quaternion2 As Quaternion, amount As Single) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion Slerp(System::Numerics::Quaternion quaternion1, System::Numerics::Quaternion quaternion2, float amount);" />
      <MemberSignature Language="F#" Value="static member Slerp : System.Numerics.Quaternion * System.Numerics.Quaternion * single -&gt; System.Numerics.Quaternion" Usage="System.Numerics.Quaternion.Slerp (quaternion1, quaternion2, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quaternion1" Type="System.Numerics.Quaternion" />
        <Parameter Name="quaternion2" Type="System.Numerics.Quaternion" />
        <Parameter Name="amount" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="quaternion1">Pierwszy quaternion.</param>
        <param name="quaternion2">Drugi quaternion.</param>
        <param name="amount">Względna waga drugi quaternion w interpolacji.</param>
        <summary>Interpolacji między dwoma kwaternionów, przy użyciu interpolacji liniowej kulistego.</summary>
        <returns>Quaternion interpolowane.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.Quaternion Subtract (System.Numerics.Quaternion value1, System.Numerics.Quaternion value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.Quaternion Subtract(valuetype System.Numerics.Quaternion value1, valuetype System.Numerics.Quaternion value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (value1 As Quaternion, value2 As Quaternion) As Quaternion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Quaternion Subtract(System::Numerics::Quaternion value1, System::Numerics::Quaternion value2);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Numerics.Quaternion * System.Numerics.Quaternion -&gt; System.Numerics.Quaternion" Usage="System.Numerics.Quaternion.Subtract (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Quaternion</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Numerics.Quaternion" />
        <Parameter Name="value2" Type="System.Numerics.Quaternion" />
      </Parameters>
      <Docs>
        <param name="value1">Pierwszy quaternion.</param>
        <param name="value2">Drugi quaternion.</param>
        <summary>Odejmuje każdego elementu w drugim quaternion z odpowiadającego mu elementu w pierwszym quaternion.</summary>
        <returns>Quaternion zawierające wartości, które są wynikiem odjęcie każdego elementu w <paramref name="value2" /> z odpowiadającego mu elementu w <paramref name="value1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Quaternion.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="quaternion.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ciąg, który reprezentuje ta quaternion.</summary>
        <returns>Reprezentacja ciągu tego quaternion.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartości liczbowych w zwracanym ciągu są sformatowane przy użyciu konwencji bieżącej kultury. Na przykład dla kultury en US zwracanego ciągu mogą być wyświetlane jako `{X:1.1 Y:2.2 Z:3.3 W:4.4}`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="W">
      <MemberSignature Language="C#" Value="public float W;" />
      <MemberSignature Language="ILAsm" Value=".field public float32 W" />
      <MemberSignature Language="DocId" Value="F:System.Numerics.Quaternion.W" />
      <MemberSignature Language="VB.NET" Value="Public W As Single " />
      <MemberSignature Language="C++ CLI" Value="public: float W;" />
      <MemberSignature Language="F#" Value="val mutable W : single" Usage="System.Numerics.Quaternion.W" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Składnik obrotu quaternion.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public float X;" />
      <MemberSignature Language="ILAsm" Value=".field public float32 X" />
      <MemberSignature Language="DocId" Value="F:System.Numerics.Quaternion.X" />
      <MemberSignature Language="VB.NET" Value="Public X As Single " />
      <MemberSignature Language="C++ CLI" Value="public: float X;" />
      <MemberSignature Language="F#" Value="val mutable X : single" Usage="System.Numerics.Quaternion.X" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wartość X składnika wektor quaternion.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public float Y;" />
      <MemberSignature Language="ILAsm" Value=".field public float32 Y" />
      <MemberSignature Language="DocId" Value="F:System.Numerics.Quaternion.Y" />
      <MemberSignature Language="VB.NET" Value="Public Y As Single " />
      <MemberSignature Language="C++ CLI" Value="public: float Y;" />
      <MemberSignature Language="F#" Value="val mutable Y : single" Usage="System.Numerics.Quaternion.Y" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wartość Y składnika wektor quaternion.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Z">
      <MemberSignature Language="C#" Value="public float Z;" />
      <MemberSignature Language="ILAsm" Value=".field public float32 Z" />
      <MemberSignature Language="DocId" Value="F:System.Numerics.Quaternion.Z" />
      <MemberSignature Language="VB.NET" Value="Public Z As Single " />
      <MemberSignature Language="C++ CLI" Value="public: float Z;" />
      <MemberSignature Language="F#" Value="val mutable Z : single" Usage="System.Numerics.Quaternion.Z" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wartość Z składnika wektor quaternion.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>