<Type Name="MuxLogger" FullName="Microsoft.Build.Utilities.MuxLogger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b9422600ac60f61f42f9b1ac680f9a0a9964b2d4" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52592171" /></Metadata><TypeSignature Language="C#" Value="public class MuxLogger : Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MuxLogger extends System.Object implements class Microsoft.Build.Framework.ILogger, class Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.MuxLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class MuxLogger&#xA;Implements INodeLogger" />
  <TypeSignature Language="C++ CLI" Value="public ref class MuxLogger : Microsoft::Build::Framework::INodeLogger" />
  <TypeSignature Language="F#" Value="type MuxLogger = class&#xA;    interface INodeLogger&#xA;    interface ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ILogger</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.INodeLogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5bacb-101">Reprezentuje multipleksowania rejestratora.</span><span class="sxs-lookup"><span data-stu-id="5bacb-101">Represents a multiplexing logger.</span></span> <span data-ttu-id="5bacb-102">Tego rejestratora ma na celu rejestrować i wyrejestrowywać wielu rejestratorów podczas kompilacji.</span><span class="sxs-lookup"><span data-stu-id="5bacb-102">The purpose of this logger is to register and unregister multiple loggers during the build.</span></span> <span data-ttu-id="5bacb-103">Obsługuje scenariusz środowiska IDE programu Visual Studio, w którym są rejestrowane i wyrejestrować rejestratorów dla każdego projektu systemu kompilacji żądania.</span><span class="sxs-lookup"><span data-stu-id="5bacb-103">Supports the Visual Studio IDE scenario in which loggers are registered and unregistered for each project system's build request.</span></span> <span data-ttu-id="5bacb-104">Jeden fizyczny kompilacji może mieć wiele logicznych kompilacji, każdy z swój własny zestaw rejestratorów.</span><span class="sxs-lookup"><span data-stu-id="5bacb-104">One physical build can have multiple logical builds, each with its own set of loggers.</span></span>  
  
<span data-ttu-id="5bacb-105"><see langword="MuxLogger" /> Rejestruje się za pomocą Menedżera kompilacji jako rejestratora styl regularne centralnej/l.</span><span class="sxs-lookup"><span data-stu-id="5bacb-105">The <see langword="MuxLogger" /> registers itself with the build manager as a regular central /l style logger.</span></span> <span data-ttu-id="5bacb-106">Go odbiera komunikaty z menedżerem kompilacji i tras ich prawidłowe rejestratora, oparte na logicznej kompilację komunikat pochodzi.</span><span class="sxs-lookup"><span data-stu-id="5bacb-106">It receives messages from the build manager and routes them to the correct logger, based on the logical build that the message came from.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5bacb-107">`MuxLogger` Zwykle działa w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="5bacb-107">The `MuxLogger` generally functions as follows:</span></span>  
  
-   <span data-ttu-id="5bacb-108">`MuxLogger` Jest zarejestrowany na początku kompilacji Begin Menedżera kompilacji.</span><span class="sxs-lookup"><span data-stu-id="5bacb-108">The `MuxLogger` is registered at the beginning of the build manager's Begin build.</span></span>  
  
     <span data-ttu-id="5bacb-109">Wszystkie rejestratory zarejestrowane przed Menedżera kompilacji rozpoczyna się kompilacja pobrać zdarzenia uruchomienia kompilacji w tym samym czasie jako `MuxLogger`.</span><span class="sxs-lookup"><span data-stu-id="5bacb-109">Any loggers registered before the build manager starts the build get the build-started event at the same time as the `MuxLogger`.</span></span>  
  
     <span data-ttu-id="5bacb-110">Wszystkie rejestratory zarejestrowane po Menedżera kompilacji rozpoczyna się kompilacja Uzyskaj syntetyzowany zdarzeń uruchomienia kompilacji.</span><span class="sxs-lookup"><span data-stu-id="5bacb-110">Any loggers registered after the build manager starts the build get a synthesized build-started event.</span></span> <span data-ttu-id="5bacb-111">Nie można buforować zdarzenie, ponieważ sygnatura czasowa zdarzenia uruchomienia kompilacji jest określana, gdy zdarzenie jest tworzone i buforowanie zdarzenia spowodowałoby to nadanie czasy tworzenia nieprawidłowe w rejestratorów zarejestrowanych do `MuxLogger`.</span><span class="sxs-lookup"><span data-stu-id="5bacb-111">The event cannot be cached because the timestamp of the build-started event is determined when the event is created, and caching the event would give incorrect build times in the loggers registered to the `MuxLogger`.</span></span>  
  
-   <span data-ttu-id="5bacb-112">`MuxLogger` Jest inicjowany przez Menedżera kompilacji</span><span class="sxs-lookup"><span data-stu-id="5bacb-112">The `MuxLogger` is initialized by the build manager</span></span>  
  
     <span data-ttu-id="5bacb-113">`MuxLogger` Nasłuchuje wszystkie zdarzenia w źródle zdarzenia z menedżerem kompilacji i poprawnie kieruje zdarzenia do rejestratorów zarejestrowanych.</span><span class="sxs-lookup"><span data-stu-id="5bacb-113">The `MuxLogger` listens to all events on the event source from the build manager and routes events correctly to the registered loggers.</span></span>  
  
-   <span data-ttu-id="5bacb-114">`MuxLogger` Jest zamknięcia po zakończeniu kompilacji w celu kompilacji.</span><span class="sxs-lookup"><span data-stu-id="5bacb-114">The `MuxLogger` is shutdown when the build is finished in end build.</span></span> <span data-ttu-id="5bacb-115">W tej chwili jego wyrejestrowuje wszystkie rejestratory podłączone do niego.</span><span class="sxs-lookup"><span data-stu-id="5bacb-115">At this time, it unregisters any loggers attached to it.</span></span>  
  
-   <span data-ttu-id="5bacb-116">`MuxLogger` Rejestruje zdarzenie Kompilacja została ukończona, gdy zdarzenie Zakończono projektu dla pierwszego zdarzenia projekt, uruchomiony jest widoczny dla każdego rejestratora.</span><span class="sxs-lookup"><span data-stu-id="5bacb-116">The `MuxLogger` logs the build-finished event when the project-finished event for the first project-started event is seen for each logger.</span></span>  
  
 <span data-ttu-id="5bacb-117">`MuxLogger` Rejestruje rejestratorów w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="5bacb-117">The `MuxLogger` registers loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="5bacb-118">Rejestrator jest przekazywany do `MuxLogger.RegisterLogger` metody o identyfikatorze przesyłania, która jest używana do rozsyłania wiadomości do tego rejestratora.</span><span class="sxs-lookup"><span data-stu-id="5bacb-118">The logger is passed to the `MuxLogger.RegisterLogger` method with a submission ID that is used to route a message to that logger.</span></span>  
  
2.  <span data-ttu-id="5bacb-119">`MuxLogger` Rejestruje program rejestrujący do `MuxLogger` źródła zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5bacb-119">The `MuxLogger` registers the logger to the `MuxLogger` event source.</span></span>  
  
3.  <span data-ttu-id="5bacb-120">Jeśli zdarzenie dotyczące uruchomionej kompilacji został już zalogowany, `MuxLogger` tworzy nowe zdarzenie uruchomienia kompilacji i wysyła je do źródła zdarzeń rejestratora.</span><span class="sxs-lookup"><span data-stu-id="5bacb-120">If the build-started event has already been logged, the `MuxLogger` creates a new build-started event and sends it to the logger's event source.</span></span>  
  
 <span data-ttu-id="5bacb-121">`MuxLogger` Wyrejestrowuje rejestratorów w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="5bacb-121">The `MuxLogger` unregisters loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="5bacb-122">Po zakończeniu przesyłania kompilacji `MuxLogger.UnregisterLogger` metoda jest wywoływana z Identyfikatorem przesyłania dla rejestratora.</span><span class="sxs-lookup"><span data-stu-id="5bacb-122">When a build submission is completed, the `MuxLogger.UnregisterLogger` method is called with the submission ID for the logger.</span></span>  
  
2.  <span data-ttu-id="5bacb-123">`MuxLogger` Wyszukuje stanu powodzenia zdarzenia Zakończono projektu dla Identyfikatora przesyłania i dzienniki zdarzeń z Kompilacja została ukończona z rejestratorem.</span><span class="sxs-lookup"><span data-stu-id="5bacb-123">The `MuxLogger` looks up the success state of the project-finished event for the submission ID and logs a build-finished event to the logger.</span></span>  
  
3.  <span data-ttu-id="5bacb-124">`MuxLogger` Czyści źródła zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5bacb-124">The `MuxLogger` cleans up the event source.</span></span>  
  
     <span data-ttu-id="5bacb-125">Należy pamiętać, że Wyrejestruj pochodzi z wątku innego niż wątek rejestrowania i problem z synchronizacją może wystąpić, jeśli Wyrejestruj jest wywoływana, gdy rejestrowane są zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5bacb-125">Note that the unregister comes from a thread other than the logging thread and a synchronization issue could occur if unregister is called while events are being logged.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MuxLogger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MuxLogger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5bacb-126">Tworzy nowe wystąpienie klasy multipleksowania rejestratora.</span><span class="sxs-lookup"><span data-stu-id="5bacb-126">Creates a new instance of the multiplexing logger.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5bacb-127">Inicjuje <see langword="MuxLogger" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="5bacb-127">Initializes the <see langword="MuxLogger" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit" Usage="muxLogger.Initialize eventSource" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="5bacb-128">Źródło zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5bacb-128">The event source.</span></span></param>
        <summary><span data-ttu-id="5bacb-129">Inicjowanie <see langword="MuxLogger" /> wystąpienie źródła określonego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5bacb-129">Initialize the <see langword="MuxLogger" /> instance with the specified event source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource, int maxNodeCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource, int32 maxNodeCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource, maxNodeCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource, int maxNodeCount);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit" Usage="muxLogger.Initialize (eventSource, maxNodeCount)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
        <Parameter Name="maxNodeCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="5bacb-130">Źródło zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5bacb-130">The event source.</span></span></param>
        <param name="maxNodeCount"><span data-ttu-id="5bacb-131">Maksymalna liczba węzłów.</span><span class="sxs-lookup"><span data-stu-id="5bacb-131">The maximum number of nodes.</span></span></param>
        <summary><span data-ttu-id="5bacb-132">Inicjowanie <see langword="MuxLogger" /> wystąpienia określonego zdarzenia, źródło i określoną maksymalną liczbę węzłów.</span><span class="sxs-lookup"><span data-stu-id="5bacb-132">Initialize the <see langword="MuxLogger" /> instance with the specified event source and specified maximum number of nodes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : string with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5bacb-133">Pobiera lub ustawia atrybut parametrów wymaganych przez <see langword="ILogger" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="5bacb-133">Gets and sets the Parameters attribute, required by the <see langword="ILogger" /> interface.</span></span></summary>
        <value><span data-ttu-id="5bacb-134">Zwraca wartość atrybutu parametrów.</span><span class="sxs-lookup"><span data-stu-id="5bacb-134">Returns the Parameters attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterLogger">
      <MemberSignature Language="C#" Value="public void RegisterLogger (int submissionId, Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterLogger(int32 submissionId, class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.RegisterLogger(System.Int32,Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterLogger (submissionId As Integer, logger As ILogger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterLogger(int submissionId, Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberSignature Language="F#" Value="member this.RegisterLogger : int * Microsoft.Build.Framework.ILogger -&gt; unit" Usage="muxLogger.RegisterLogger (submissionId, logger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="submissionId"><span data-ttu-id="5bacb-135">Identyfikator przesyłania rejestratora jest zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="5bacb-135">The submission ID of the logger being registered.</span></span></param>
        <param name="logger"><span data-ttu-id="5bacb-136">Rejestrator do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="5bacb-136">The logger to register.</span></span></param>
        <summary><span data-ttu-id="5bacb-137">Rejestruje program rejestrujący na <see langword="MuxLogger" /> i zgłasza zdarzenie dotyczące uruchomionej kompilacji, jeśli zdarzenie uruchomienia kompilacji jest już zarejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5bacb-137">Registers a logger on the <see langword="MuxLogger" /> and raises a build-started event if the build-started event has already been logged.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit&#xA;override this.Shutdown : unit -&gt; unit" Usage="muxLogger.Shutdown " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Shutdown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5bacb-138">Zamyka <see langword="MuxLogger" /> i czyści się dowolny stan.</span><span class="sxs-lookup"><span data-stu-id="5bacb-138">Shuts down the <see langword="MuxLogger" /> and clears out any state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterLoggers">
      <MemberSignature Language="C#" Value="public bool UnregisterLoggers (int submissionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UnregisterLoggers(int32 submissionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnregisterLoggers (submissionId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UnregisterLoggers(int submissionId);" />
      <MemberSignature Language="F#" Value="member this.UnregisterLoggers : int -&gt; bool" Usage="muxLogger.UnregisterLoggers submissionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="submissionId"><span data-ttu-id="5bacb-139">Identyfikator przesyłania rejestratora do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="5bacb-139">The submission ID of the logger to be removed.</span></span></param>
        <summary><span data-ttu-id="5bacb-140">Usuwa określonego rejestratora z MuxLogger.</span><span class="sxs-lookup"><span data-stu-id="5bacb-140">Removes the specified logger from the MuxLogger.</span></span></summary>
        <returns><span data-ttu-id="5bacb-141">Zwraca <see langword="true" /> Jeśli metoda zakończy się w zakresie usuwania rejestrator, w przeciwnym razie zwraca <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5bacb-141">Returns <see langword="true" /> if the method is successful in removing the logger, otherwise, returns <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberSignature Language="F#" Value="member this.Verbosity : Microsoft.Build.Framework.LoggerVerbosity with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Verbosity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5bacb-142">Pobiera lub ustawia atrybut poziom szczegółowości, wymagane przez <see langword="ILogger" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="5bacb-142">Gets and sets the Verbosity attribute, required by the <see langword="ILogger" /> interface.</span></span></summary>
        <value><span data-ttu-id="5bacb-143">Zwraca wartość atrybutu poziomu szczegółowości.</span><span class="sxs-lookup"><span data-stu-id="5bacb-143">Returns the Verbosity attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>