<Type Name="ToolTask" FullName="Microsoft.Build.Utilities.ToolTask">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="04e265aa742135d56fa78ef77e2016b1a8af66d0" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34173999" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ToolTask : Microsoft.Build.Utilities.Task, Microsoft.Build.Framework.ICancelableTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ToolTask extends Microsoft.Build.Utilities.Task implements class Microsoft.Build.Framework.ICancelableTask, class Microsoft.Build.Framework.ITask" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.ToolTask" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ToolTask&#xA;Inherits Task&#xA;Implements ICancelableTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolTask abstract : Microsoft::Build::Utilities::Task, Microsoft::Build::Framework::ICancelableTask" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Utilities.Task</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ICancelableTask</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="231dc-101">W przypadku przesłonięcia w postaci pochodnej udostępnia funkcje dla zadań, który opakowuje narzędzie wiersza polecenia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="231dc-101">When overridden in a derived form, provides functionality for a task that wraps a command line tool.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="231dc-102">Ta klasa ogólna zawiera domyślne implementacje metod i właściwości zadania, który opakowuje narzędzie wiersza polecenia.</span><span class="sxs-lookup"><span data-stu-id="231dc-102">This abstract class provides default implementations for the methods and properties of a task that wraps a command line tool.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="231dc-103">Poniższy przykład tworzy <xref:Microsoft.Build.Utilities.ToolTask> , na którym działa [Ilasm.exe (asembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="231dc-103">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="231dc-104"><xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, I <xref:Microsoft.Build.Utilities.TaskLoggingHelper> klasy są używane do generowania informacje potrzebne do uruchomienia zadania.</span><span class="sxs-lookup"><span data-stu-id="231dc-104">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-105">Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.Build.Utilities.ToolTask" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-105">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolTask ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolTask();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="231dc-106">Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.Build.Utilities.ToolTask" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-106">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolTask (System.Resources.ResourceManager taskResources);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Resources.ResourceManager taskResources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (taskResources As ResourceManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolTask(System::Resources::ResourceManager ^ taskResources);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="taskResources" Type="System.Resources.ResourceManager" />
      </Parameters>
      <Docs>
        <param name="taskResources">
          <span data-ttu-id="231dc-107">
            <see cref="T:System.Resources.ResourceManager" /> Zasobów zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-107">The <see cref="T:System.Resources.ResourceManager" /> for task resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="231dc-108">Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.Build.Utilities.ToolTask" /> klasy z określonym <see cref="T:System.Resources.ResourceManager" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-108">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class with the specified <see cref="T:System.Resources.ResourceManager" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolTask (System.Resources.ResourceManager taskResources, string helpKeywordPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Resources.ResourceManager taskResources, string helpKeywordPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (taskResources As ResourceManager, helpKeywordPrefix As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolTask(System::Resources::ResourceManager ^ taskResources, System::String ^ helpKeywordPrefix);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="taskResources" Type="System.Resources.ResourceManager" />
        <Parameter Name="helpKeywordPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="taskResources">
          <span data-ttu-id="231dc-109">
            <see cref="T:System.Resources.ResourceManager" /> Zasobów zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-109">The <see cref="T:System.Resources.ResourceManager" /> for task resources.</span>
          </span>
        </param>
        <param name="helpKeywordPrefix">
          <span data-ttu-id="231dc-110">Słowo kluczowe pomocy dla komunikatów zgłaszanych przez zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-110">The Help keyword to use for messages raised by the task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="231dc-111">Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.Build.Utilities.ToolTask" /> klasy z określonym <see cref="T:System.Resources.ResourceManager" /> i prefiksu — słowo kluczowe pomocy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-111">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask" /> class with the specified <see cref="T:System.Resources.ResourceManager" /> and Help keyword prefix.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallHostObjectToExecute">
      <MemberSignature Language="C#" Value="protected virtual bool CallHostObjectToExecute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CallHostObjectToExecute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CallHostObjectToExecute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CallHostObjectToExecute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="231dc-112">Wywołuje metodę obiektu hosta do wykonywania pracy zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-112">Calls the host object to perform the work of the task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="231dc-113">
            <see langword="true" /> Jeśli metoda successfule; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-113">
              <see langword="true" /> if the method was successfule; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Cancel();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ICancelableTask.Cancel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="231dc-114">Anuluje proces wykonywania zadania, pytając go, aby zamknąć dobrze, a następnie po krótkim czasie, wymuszanie zakończenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-114">Cancels the process executing the task by asking it to close nicely, then after a short period, forcing termination.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTempFile">
      <MemberSignature Language="C#" Value="protected void DeleteTempFile (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeleteTempFile(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.DeleteTempFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DeleteTempFile (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DeleteTempFile(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="231dc-115">Nazwa pliku tymczasowego do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-115">The name of the temporary file to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="231dc-116">Usuwa określony plik tymczasowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-116">Deletes the specified temporary file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="231dc-117">Jeśli operacja usuwania nie powiedzie się z jakiegokolwiek powodu (np. Jeśli plik jest zablokowany przez oprogramowanie antywirusowe), a następnie ta metoda rejestruje ostrzeżenie zamiast generowania wyjątku, które mogłyby spowodować niepowodzenie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="231dc-117">If the delete operation fails for any reason (such as if a file is locked by antivirus software), then this method logs a warning rather than throwing an exception, which would cause the build to fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EchoOff">
      <MemberSignature Language="C#" Value="public bool EchoOff { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EchoOff" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.EchoOff" />
      <MemberSignature Language="VB.NET" Value="Public Property EchoOff As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EchoOff { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-118">Wskazuje, że wyświetlania wiersza polecenia jest wyłączona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-118">Indicates that command line echoing is turned off.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="231dc-119">Wartość true, gdy wiersz polecenia echo jest wyłączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-119">True when command line echo is off.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="231dc-120">Wyłącza opcję wiersza polecenia echo przez przekazanie/q, w wierszu polecenia cmd.exe MSBuild.</span><span class="sxs-lookup"><span data-stu-id="231dc-120">MSBuild turns off command line echoing by passing /Q on the cmd.exe command line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentOverride">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Specialized.StringDictionary EnvironmentOverride { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary EnvironmentOverride" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.EnvironmentOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property EnvironmentOverride As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::Specialized::StringDictionary ^ EnvironmentOverride { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use EnvironmentVariables property")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-121">Pobiera zestaw par nazwa wartość zmiennej środowiskowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-121">Gets a set of environment variable name-value pairs.</span>
          </span>
          <span data-ttu-id="231dc-122">Przeznaczony do zastąpienia w klasie zadanie niestandardowe (ustalona na podstawie ToolTask) do zwrócenia zestaw zmiennych środowiskowych nowych lub zmienionych w celu tworzenia kontekstu wykonywania skojarzone narzędzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-122">Designed to be overridden in a custom task class (derived from ToolTask) to return a set of new or altered environment variables to create the execution context of the associated tool.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="231dc-123">Zwraca zestaw zmiennych środowiskowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-123">Returns a set of environment variables.</span>
          </span>
          <span data-ttu-id="231dc-124">Każdy klucz słownika to nazwa zmiennej środowiskowej do zastąpienia, a wartość słownika to wartość do ustawienia dla tej zmiennej środowiskowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-124">Each dictionary key is the name of the environment variable to override and the dictionary value is the value to set for that environment variable.</span>
          </span>
          <span data-ttu-id="231dc-125">Domyślna implementacja EnvironmentOverride zwraca wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-125">The default implementation of EnvironmentOverride returns null.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="231dc-126">Metoda ExecuteTool przekazuje StartInfo procesu, w którym narzędzie wykonuje te zmienne środowiskowe.</span><span class="sxs-lookup"><span data-stu-id="231dc-126">The ExecuteTool method passes these environment variables to the StartInfo of the process in which the tool executes.</span></span> <span data-ttu-id="231dc-127">Zmienne środowiskowe nie są uwzględnione w słowniku EnvironmentOverride są dziedziczone z procesu, w której wykonuje metodę ExecuteTool.</span><span class="sxs-lookup"><span data-stu-id="231dc-127">Any environment variables not included in the EnvironmentOverride dictionary are inherited from the process in which the ExecuteTool method executes.</span></span>  
  
   
  
## Examples  
  
```csharp  
using System;  
using Microsoft.Build.Utilities;  
using System.Collections.Specialized;  
  
/// <summary>  
/// CustomToolTask overrides the EnvironmentOverride property of ToolTask to add a directory  
/// to the Path environment variable of the process being executed  
/// </summary>  
abstract class CustomToolTask : ToolTask  
{  
      protected override StringDictionary EnvironmentOverride  
      {  
            get  
            {  
                  string newPath = Environment.GetEnvironmentVariable("Path", EnvironmentVariableTarget.Process) + @";C:\MyDirectory";  
                  StringDictionary result = new StringDictionary();  
                  result.Add("Path", newPath);  
                  return result;  
            }  
      }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentVariables">
      <MemberSignature Language="C#" Value="public string[] EnvironmentVariables { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] EnvironmentVariables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.EnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvironmentVariables As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ EnvironmentVariables { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-128">Tablica par oddzielone equals zmiennych środowiskowych, które powinny zostać przekazane do uruchomionego pliku wykonywalnego, oprócz (lub selektywnie zastępowanie) blok środowiska regularne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-128">Array of equals-separated pairs of environment variables that should be passed to the spawned executable, in addition to (or selectively overriding) the regular environment block.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="231dc-129">Za pomocą tej zamiast EnvironmentOverride jako pobierającej słownika ciągów StringDictionary, którego nie można ustawić z projektu programu MSBuild.</span><span class="sxs-lookup"><span data-stu-id="231dc-129">Using this instead of EnvironmentOverride as that takes a StringDictionary, which cannot be set from an MSBuild project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Execute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Execute();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITask.Execute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="231dc-130">Uruchamia plik exectuable z parametrami określonego zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-130">Runs the exectuable file with the specified task parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="231dc-131">
            <see langword="true" /> Jeśli zadanie zostanie wykonane pomyślnie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-131">
              <see langword="true" /> if the task runs successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteTool">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteTool (string pathToTool, string responseFileCommands, string commandLineCommands);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteTool(string pathToTool, string responseFileCommands, string commandLineCommands) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.ExecuteTool(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteTool (pathToTool As String, responseFileCommands As String, commandLineCommands As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteTool(System::String ^ pathToTool, System::String ^ responseFileCommands, System::String ^ commandLineCommands);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathToTool" Type="System.String" />
        <Parameter Name="responseFileCommands" Type="System.String" />
        <Parameter Name="commandLineCommands" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathToTool">
          <span data-ttu-id="231dc-132">Ścieżka do pliku wykonywalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-132">The path to the executable file.</span>
          </span>
        </param>
        <param name="responseFileCommands">
          <span data-ttu-id="231dc-133">Argumenty wiersza polecenia, które można umieścić w pliku .rsp —.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-133">The command line arguments to place in the .rsp file.</span>
          </span>
        </param>
        <param name="commandLineCommands">
          <span data-ttu-id="231dc-134">Argumenty wiersza polecenia do przekazania bezpośrednio do pliku wykonywalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-134">The command line arguments to pass directly to the executable file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="231dc-135">Tworzy plik odpowiedzi (.rsp —) temporoary i uruchomienie pliku wykonywalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-135">Creates a temporoary response (.rsp) file and runs the executable file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="231dc-136">Kod wyjścia zwróconego pliku wykonywalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-136">The returned exit code of the executable file.</span>
          </span>
          <span data-ttu-id="231dc-137">Jeśli zadanie rejestrowane błędy, ale plik wykonywalny zwrócił kod zakończenia 0, ta metoda zwraca wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-137">If the task logged errors, but the executable returned an exit code of 0, this method returns -1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitCode">
      <MemberSignature Language="C#" Value="public int ExitCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExitCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ExitCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExitCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExitCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-138">Pobiera kod wyjścia zwróconego pliku wykonywalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-138">Gets the returned exit code of the executable file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="231dc-139">Kod wyjścia zwróconego pliku wykonywalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-139">The returned exit code of the executable file.</span>
          </span>
          <span data-ttu-id="231dc-140">Jeśli zadanie rejestrowane błędy, ale plik wykonywalny zwrócił kod zakończenia 0, ta metoda zwraca wartość -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-140">If the task logged errors, but the executable returned an exit code of 0, this method returns -1.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCommandLineCommands">
      <MemberSignature Language="C#" Value="protected virtual string GenerateCommandLineCommands ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GenerateCommandLineCommands() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GenerateCommandLineCommands () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GenerateCommandLineCommands();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="231dc-141">Zwraca ciąg zawierający argumenty wiersza polecenia do przekazania bezpośrednio do pliku wykonywalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-141">Returns a string value containing the command line arguments to pass directly to the executable file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="231dc-142">Ciąg zawierający argumenty wiersza polecenia do przekazania bezpośrednio do pliku wykonywalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-142">A string value containing the command line arguments to pass directly to the executable file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="231dc-143">Ta metoda jest wywoływana po wykonaniu <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A> i <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>.</span><span class="sxs-lookup"><span data-stu-id="231dc-143">This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A> and <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="231dc-144">Poniższy przykład tworzy <xref:Microsoft.Build.Utilities.ToolTask> , na którym działa [Ilasm.exe (asembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="231dc-144">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="231dc-145"><xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, I <xref:Microsoft.Build.Utilities.TaskLoggingHelper> klasy są używane do generowania informacje potrzebne do uruchomienia zadania.</span><span class="sxs-lookup"><span data-stu-id="231dc-145">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFullPathToTool">
      <MemberSignature Language="C#" Value="protected abstract string GenerateFullPathToTool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GenerateFullPathToTool() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GenerateFullPathToTool () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GenerateFullPathToTool();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="231dc-146">Zwraca pełną ścieżkę do pliku wykonywalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-146">Returns the fully qualified path to the executable file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="231dc-147">Pełna ścieżka do pliku wykonywalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-147">The fully qualified path to the executable file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="231dc-148">Ta metoda zwraca wartość <xref:Microsoft.Build.Utilities.ToolTask.ToolName%2A> właściwości, jeśli narzędzie znajduje się w ścieżce systemowej.</span><span class="sxs-lookup"><span data-stu-id="231dc-148">This method returns the value of the <xref:Microsoft.Build.Utilities.ToolTask.ToolName%2A> property if the tool is located in the system path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="231dc-149">Poniższy przykład tworzy <xref:Microsoft.Build.Utilities.ToolTask> , na którym działa [Ilasm.exe (asembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="231dc-149">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="231dc-150"><xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, I <xref:Microsoft.Build.Utilities.TaskLoggingHelper> klasy są używane do generowania informacje potrzebne do uruchomienia zadania.</span><span class="sxs-lookup"><span data-stu-id="231dc-150">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateResponseFileCommands">
      <MemberSignature Language="C#" Value="protected virtual string GenerateResponseFileCommands ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GenerateResponseFileCommands() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GenerateResponseFileCommands () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GenerateResponseFileCommands();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="231dc-151">Zwraca ciąg zawierający argumenty wiersza polecenia, aby dodać do pliku odpowiedzi (.rsp —) przed uruchomieniem pliku wykonywalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-151">Returns a string value containing the command line arguments to add to the response (.rsp) file before running the executable file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="231dc-152">Ciąg zawierający argumenty wiersza polecenia, aby dodać do pliku odpowiedzi (.rsp —) przed uruchomieniem pliku wykonywalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-152">a string value containing the command line arguments to add to the response (.rsp) file before running the executable file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="231dc-153">Ta metoda jest wywoływana po wykonaniu <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A> i <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>.</span><span class="sxs-lookup"><span data-stu-id="231dc-153">This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A> and <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProcessStartInfo">
      <MemberSignature Language="C#" Value="protected System.Diagnostics.ProcessStartInfo GetProcessStartInfo (string pathToTool, string commandLineCommands, string responseFileSwitch);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Diagnostics.ProcessStartInfo GetProcessStartInfo(string pathToTool, string commandLineCommands, string responseFileSwitch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetProcessStartInfo (pathToTool As String, commandLineCommands As String, responseFileSwitch As String) As ProcessStartInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Diagnostics::ProcessStartInfo ^ GetProcessStartInfo(System::String ^ pathToTool, System::String ^ commandLineCommands, System::String ^ responseFileSwitch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ProcessStartInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathToTool" Type="System.String" />
        <Parameter Name="commandLineCommands" Type="System.String" />
        <Parameter Name="responseFileSwitch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathToTool">
          <span data-ttu-id="231dc-154">Ścieżka do narzędzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-154">The path to the tool.</span>
          </span>
        </param>
        <param name="commandLineCommands">
          <span data-ttu-id="231dc-155">Polecenia wiersza polecenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-155">The command line commands.</span>
          </span>
        </param>
        <param name="responseFileSwitch">
          <span data-ttu-id="231dc-156">Przełącznik pliku odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-156">The response file switch.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="231dc-157">Inicjuje informacje wymagane do zduplikować procesu wykonywania narzędzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-157">Initializes the information required to spawn the process executing the tool.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="231dc-158">Informacje wymagane do uruchomienia procesu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-158">The information required to start the process.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponseFileSwitch">
      <MemberSignature Language="C#" Value="protected virtual string GetResponseFileSwitch (string responseFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetResponseFileSwitch(string responseFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetResponseFileSwitch (responseFilePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetResponseFileSwitch(System::String ^ responseFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="responseFilePath">
          <span data-ttu-id="231dc-159">Pełna ścieżka do pliku tymczasowego .rsp —.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-159">The full path to the temporary .rsp file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="231dc-160">Zwraca przełącznik wiersza polecenia używane przez plik wykonywalny w celu Określ plik odpowiedzi (.rsp —).</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-160">Returns the command line switch used by the executable file to specifiy a response (.rsp) file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="231dc-161">Przełącznik wiersza polecenia używane przez plik wykonywalny w celu Określ plik odpowiedzi (.rsp —).</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-161">The command line switch used by the executable file to specifiy a response (.rsp) file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="231dc-162">Ta metoda jest wywoływana tylko, jeśli <xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A> zwraca pusty ciąg.</span><span class="sxs-lookup"><span data-stu-id="231dc-162">This method is only called if <xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A> returns a non-empty string value.</span></span>  
  
 <span data-ttu-id="231dc-163">Ta metoda jest wywoływana po wykonaniu <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>, <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A> i <xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A>.</span><span class="sxs-lookup"><span data-stu-id="231dc-163">This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>, <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A> and <xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkingDirectory">
      <MemberSignature Language="C#" Value="protected virtual string GetWorkingDirectory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetWorkingDirectory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWorkingDirectory () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetWorkingDirectory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="231dc-164">Zwraca katalog, w którym do uruchomienia pliku wykonywalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-164">Returns the directory in which to run the executable file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="231dc-165">Katalog, w którym do uruchomienia pliku wykonywalnego lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) Jeśli plik wykonywalny powinny być uruchamiane w bieżącym katalogu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-165">The directory in which to run the executable file, or a null reference (<see langword="Nothing" /> in Visual Basic) if the executable file should be run in the current directory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="231dc-166">Jest to metoda, a nie właściwością, aby klas pochodnych (takich jak Exec) można udostępnić WorkingDirectory właściwości publicznej i jest trudne do ma dwie właściwości.</span><span class="sxs-lookup"><span data-stu-id="231dc-166">This is a method rather than a property so that derived classes (like Exec) can choose to expose a public WorkingDirectory property, and it would be confusing to have two properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleTaskExecutionErrors">
      <MemberSignature Language="C#" Value="protected virtual bool HandleTaskExecutionErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool HandleTaskExecutionErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HandleTaskExecutionErrors () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool HandleTaskExecutionErrors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="231dc-167">Obsługuje błędy wykonania zgłoszone przez plik wykonywalny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-167">Handles execution errors raised by the executable file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="231dc-168">
            <see langword="true" /> Jeśli metoda zostanie wykonane pomyślnie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-168">
              <see langword="true" /> if the method runs successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="231dc-169">Ta metoda jest wywoływana tylko wtedy, gdy plik wykonywalny zwraca kod zakończenia inną niż zero.</span><span class="sxs-lookup"><span data-stu-id="231dc-169">This method is called only if the executable file returns a non-zero exit code.</span></span>  
  
 <span data-ttu-id="231dc-170">Zwracana wartość ta metoda jest używana jako wartość zwracaną przez zadania.</span><span class="sxs-lookup"><span data-stu-id="231dc-170">The return value of this method is used as the return value of the task.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLoggedErrors">
      <MemberSignature Language="C#" Value="protected virtual bool HasLoggedErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLoggedErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.HasLoggedErrors" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property HasLoggedErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool HasLoggedErrors { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-171">Określa, czy ten ToolTask zalogował się błędy</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-171">Whether this ToolTask has logged any errors</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeHostObject">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Build.Utilities.HostObjectInitializationStatus InitializeHostObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Microsoft.Build.Utilities.HostObjectInitializationStatus InitializeHostObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.InitializeHostObject" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InitializeHostObject () As HostObjectInitializationStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::Build::Utilities::HostObjectInitializationStatus InitializeHostObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Utilities.HostObjectInitializationStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="231dc-172">Inicjuje obiekt hosta tego zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-172">Initializes the host object of the task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="231dc-173">
            <see cref="T:Microsoft.Build.Utilities.HostObjectInitializationStatus" /> Obiektu hosta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-173">The <see cref="T:Microsoft.Build.Utilities.HostObjectInitializationStatus" /> of the host object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogEventsFromTextOutput">
      <MemberSignature Language="C#" Value="protected virtual void LogEventsFromTextOutput (string singleLine, Microsoft.Build.Framework.MessageImportance messageImportance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LogEventsFromTextOutput(string singleLine, valuetype Microsoft.Build.Framework.MessageImportance messageImportance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LogEventsFromTextOutput(System::String ^ singleLine, Microsoft::Build::Framework::MessageImportance messageImportance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singleLine" Type="System.String" />
        <Parameter Name="messageImportance" Type="Microsoft.Build.Framework.MessageImportance" />
      </Parameters>
      <Docs>
        <param name="singleLine">
          <span data-ttu-id="231dc-174">Pojedynczy wiersz tekstu dla metody do analizy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-174">A single line of text for the method to parse.</span>
          </span>
        </param>
        <param name="messageImportance">
          <span data-ttu-id="231dc-175">Wartość <see cref="T:Microsoft.Build.Framework.MessageImportance" /> który wskazuje poziom ważności logowania wiadomości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-175">A value of <see cref="T:Microsoft.Build.Framework.MessageImportance" /> that indicates the importance level with which to log the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="231dc-176">Analizuje pojedynczy wiersz tekstu, aby wykryć ewentualne błędy i ostrzeżenia w formacie kanonicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-176">Parses a single line of text to identify any errors or warnings in canonical format.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPathToTool">
      <MemberSignature Language="C#" Value="protected virtual void LogPathToTool (string toolName, string pathToTool);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LogPathToTool(string toolName, string pathToTool) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.LogPathToTool(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LogPathToTool (toolName As String, pathToTool As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LogPathToTool(System::String ^ toolName, System::String ^ pathToTool);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolName" Type="System.String" />
        <Parameter Name="pathToTool" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toolName">
          <span data-ttu-id="231dc-177">Nazwa pliku wykonywalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-177">The executable file name.</span>
          </span>
        </param>
        <param name="pathToTool">
          <span data-ttu-id="231dc-178">Ścieżka do pliku wykonywalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-178">The path to the executable file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="231dc-179">Rejestruje wszystkie rejestratorów zarejestrowanych narzędzia nazwę i ścieżkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-179">Logs the tool name and path to all registered loggers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogStandardErrorAsError">
      <MemberSignature Language="C#" Value="public bool LogStandardErrorAsError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogStandardErrorAsError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError" />
      <MemberSignature Language="VB.NET" Value="Public Property LogStandardErrorAsError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogStandardErrorAsError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-180">Czy wszystkie komunikatów odebranych na Standardowy strumień błędów powinny być rejestrowane jako błędy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-180">Should ALL messages received on the standard error stream be logged as errors.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogToolCommand">
      <MemberSignature Language="C#" Value="protected virtual void LogToolCommand (string message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LogToolCommand(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.LogToolCommand(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LogToolCommand (message As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LogToolCommand(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="231dc-181">Komunikat opisowy zapewnienie rejestratorów, zazwyczaj w wierszu polecenia i przełączniki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-181">A descriptive message to provide loggers, usually the command line and switches.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="231dc-182">Rejestruje wszystkie rejestratorów zarejestrowanych punkt początkowy uruchomienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-182">Logs the starting point of the run to all registered loggers.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseFileEncoding">
      <MemberSignature Language="C#" Value="protected virtual System.Text.Encoding ResponseFileEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ResponseFileEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ResponseFileEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Text::Encoding ^ ResponseFileEncoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-183">Pobiera <see cref="T:System.Text.Encoding" /> pliku odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-183">Gets the <see cref="T:System.Text.Encoding" /> of the response file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="231dc-184">
            <see cref="T:System.Text.Encoding" /> Pliku odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-184">The <see cref="T:System.Text.Encoding" /> of the response file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="231dc-185">Kodowanie jest <xref:System.Text.Encoding.UTF8%2A> domyślnie.</span><span class="sxs-lookup"><span data-stu-id="231dc-185">The encoding is <xref:System.Text.Encoding.UTF8%2A> by default.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseFileEscape">
      <MemberSignature Language="C#" Value="protected virtual string ResponseFileEscape (string responseString);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string ResponseFileEscape(string responseString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.ResponseFileEscape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ResponseFileEscape (responseString As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ ResponseFileEscape(System::String ^ responseString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="responseString">
          <span data-ttu-id="231dc-186">Ciąg odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-186">The response string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="231dc-187">Metoda możliwym do zastąpienia escape zawartość pliku odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-187">Overridable method to escape the content of the response file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="231dc-188">Zwraca ciąg odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-188">Returns the response string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipTaskExecution">
      <MemberSignature Language="C#" Value="protected virtual bool SkipTaskExecution ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool SkipTaskExecution() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SkipTaskExecution () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool SkipTaskExecution();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="231dc-189">Wskazuje, czy ma być pomijana wykonywania zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-189">Indicates whether task execution should be skipped.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="231dc-190">
            <see langword="true" /> Aby pominąć wykonywanie zadań; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-190">
              <see langword="true" /> to skip task execution; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="231dc-191">Ta metoda jest wywoływana po wykonaniu <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="231dc-191">This method is called after <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorEncoding">
      <MemberSignature Language="C#" Value="protected virtual System.Text.Encoding StandardErrorEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardErrorEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardErrorEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Text::Encoding ^ StandardErrorEncoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-192">Pobiera <see cref="T:System.Text.Encoding" /> z Standardowy strumień błędów zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-192">Gets the <see cref="T:System.Text.Encoding" /> of the standard error stream of the task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="231dc-193">
            <see cref="T:System.Text.Encoding" /> Pliku odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-193">The <see cref="T:System.Text.Encoding" /> of the response file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="231dc-194">Domyślnie dane wyjściowe z konsoli używa bieżącej strony kodowej systemu OEM.</span><span class="sxs-lookup"><span data-stu-id="231dc-194">Console-based output uses the current system OEM code page by default.</span></span> <span data-ttu-id="231dc-195">Należy pamiętać, że firma Microsoft nie powinien używać Console.OutputEncoding tutaj ponieważ procesy Uruchamiamy naprawdę nie ma wiele wspólnego z naszych okna konsoli (a także Console.OutputEncoding nie zwraca stronę kodową OEM, jeśli uruchomionych aplikacji, która obsługuje program MSBuild nie jest konsoli Aplikacja).</span><span class="sxs-lookup"><span data-stu-id="231dc-195">Note that we should not use Console.OutputEncoding here since processes we run don't really have much to do with our console window (and also Console.OutputEncoding doesn't return the OEM code page if the running application that hosts MSBuild is not a console application).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorImportance">
      <MemberSignature Language="C#" Value="public string StandardErrorImportance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardErrorImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorImportance" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardErrorImportance As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardErrorImportance { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-196">Parametr zadania: Znaczenie logowania tekst ze strumienia błędów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-196">Task Parameter: Importance with which to log text from the standard error stream.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorImportanceToUse">
      <MemberSignature Language="C#" Value="protected Microsoft.Build.Framework.MessageImportance StandardErrorImportanceToUse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardErrorImportanceToUse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StandardErrorImportanceToUse As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::Build::Framework::MessageImportance StandardErrorImportanceToUse { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-197">Pobiera rzeczywisty znaczenie, w którym błąd standardowy komunikaty będą rejestrowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-197">Gets the actual importance at which standard error messages will be logged.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="231dc-198">Zwraca rzeczywiste znaczenie, w którym błąd standardowy komunikaty będą rejestrowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-198">Returns the actual importance at which standard error messages will be logged.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorLoggingImportance">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Build.Framework.MessageImportance StandardErrorLoggingImportance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardErrorLoggingImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardErrorLoggingImportance As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::Build::Framework::MessageImportance StandardErrorLoggingImportance { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-199">Pobiera <see cref="T:Microsoft.Build.Framework.MessageImportance" /> logowania błędy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-199">Gets the <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="231dc-200">
            <see cref="T:Microsoft.Build.Framework.MessageImportance" /> Logowania błędy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-200">The <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputEncoding">
      <MemberSignature Language="C#" Value="protected virtual System.Text.Encoding StandardOutputEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardOutputEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardOutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Text::Encoding ^ StandardOutputEncoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-201">Pobiera <see cref="T:System.Text.Encoding" /> standardowego strumienia wyjściowego zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-201">Gets the <see cref="T:System.Text.Encoding" /> of the standard output stream of the task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="231dc-202">
            <see cref="T:System.Text.Encoding" /> Pliku odpowiedzi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-202">The <see cref="T:System.Text.Encoding" /> of the response file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="231dc-203">Domyślnie dane wyjściowe z konsoli używa bieżącej strony kodowej systemu OEM.</span><span class="sxs-lookup"><span data-stu-id="231dc-203">Console-based output uses the current system OEM code page by default.</span></span> <span data-ttu-id="231dc-204">Należy pamiętać, że firma Microsoft nie powinien używać Console.OutputEncoding tutaj ponieważ procesy Uruchamiamy naprawdę nie ma wiele wspólnego z naszych okna konsoli (a także Console.OutputEncoding nie zwraca stronę kodową OEM, jeśli uruchomionych aplikacji, która obsługuje program MSBuild nie jest konsoli Aplikacja).</span><span class="sxs-lookup"><span data-stu-id="231dc-204">Note that we should not use Console.OutputEncoding here since processes we run don't really have much to do with our console window (and also Console.OutputEncoding doesn't return the OEM code page if the running application that hosts MSBuild is not a console application).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputImportance">
      <MemberSignature Language="C#" Value="public string StandardOutputImportance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardOutputImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputImportance" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardOutputImportance As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardOutputImportance { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-205">Parametr zadania: Znaczenie logowania tekst ze standardu limit strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-205">Task Parameter: Importance with which to log text from the standard out stream.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputImportanceToUse">
      <MemberSignature Language="C#" Value="protected Microsoft.Build.Framework.MessageImportance StandardOutputImportanceToUse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardOutputImportanceToUse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StandardOutputImportanceToUse As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::Build::Framework::MessageImportance StandardOutputImportanceToUse { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-206">Pobiera rzeczywisty znaczenie rejestrowane standard wiadomości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-206">Gets the actual importance at which standard out messages will be logged.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="231dc-207">Zwraca rzeczywiste znaczenie rejestrowane standard wiadomości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-207">Returns the actual importance at which standard out messages will be logged.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputLoggingImportance">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Build.Framework.MessageImportance StandardOutputLoggingImportance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardOutputLoggingImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardOutputLoggingImportance As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::Build::Framework::MessageImportance StandardOutputLoggingImportance { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-208">Pobiera <see cref="T:Microsoft.Build.Framework.MessageImportance" /> logowania błędy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-208">Gets the <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="231dc-209">
            <see cref="T:Microsoft.Build.Framework.MessageImportance" /> Logowania błędy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-209">The <see cref="T:Microsoft.Build.Framework.MessageImportance" /> with which to log errors.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskProcessTerminationTimeout">
      <MemberSignature Language="C#" Value="protected int TaskProcessTerminationTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TaskProcessTerminationTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Property TaskProcessTerminationTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int TaskProcessTerminationTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-210">Limit czasu oczekiwania na zakończenie przed jego skasowanie zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-210">A timeout to wait for a task to terminate before killing it.</span>
          </span>
          <span data-ttu-id="231dc-211">W milisekundach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-211">In milliseconds.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public virtual int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-212">Pobiera lub ustawia czas, po którym plik wykonywalny zadania zostanie zakończony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-212">Gets or sets the amount of time after which the task executable is terminated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="231dc-213">Długość limitu czasu w milisekundach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-213">The time-out length, in milliseconds.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolCanceled">
      <MemberSignature Language="C#" Value="protected System.Threading.ManualResetEvent ToolCanceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.ManualResetEvent ToolCanceled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolCanceled" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ToolCanceled As ManualResetEvent" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Threading::ManualResetEvent ^ ToolCanceled { System::Threading::ManualResetEvent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ManualResetEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-214">Umożliwia sygnalizować, gdy narzędzie zostało anulowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-214">Used to signal when a tool has been cancelled.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolExe">
      <MemberSignature Language="C#" Value="public virtual string ToolExe { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolExe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolExe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ToolExe As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolExe { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-215">Projekty mogą ustawiać tutaj, aby zastąpić ToolName zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-215">Projects may set this to override a task's ToolName.</span>
          </span>
          <span data-ttu-id="231dc-216">Zadania mogą zastąpić, który zapobiega to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-216">Tasks may override this to prevent that.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolName">
      <MemberSignature Language="C#" Value="protected abstract string ToolName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolName" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property ToolName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::String ^ ToolName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-217">Pobiera nazwę pliku wykonywalnego do uruchomienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-217">Gets the name of the executable file to run.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="231dc-218">Nazwa pliku wykonywalnego do uruchomienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-218">The name of the executable file to run.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="231dc-219">Poniższy przykład tworzy <xref:Microsoft.Build.Utilities.ToolTask> , na którym działa [Ilasm.exe (asembler IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="231dc-219">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="231dc-220"><xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, I <xref:Microsoft.Build.Utilities.TaskLoggingHelper> klasy są używane do generowania informacje potrzebne do uruchomienia zadania.</span><span class="sxs-lookup"><span data-stu-id="231dc-220">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolPath">
      <MemberSignature Language="C#" Value="public string ToolPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolPath" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-221">Pobiera lub ustawia ścieżkę pliku wykonywalnego do uruchomienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-221">Gets or sets the path of the executable file to run.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="231dc-222">Ścieżka pliku do uruchomienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-222">The path of the file to run.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCommandProcessor">
      <MemberSignature Language="C#" Value="public bool UseCommandProcessor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCommandProcessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.UseCommandProcessor" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCommandProcessor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCommandProcessor { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-223">Pobiera lub ustawia przełącznik, który określa, czy zadanie narzędzia będzie Utwórz plik wsadowy dla wiersza polecenia i wykonanie, które przy użyciu procesora poleceń, a nie bezpośrednio wykonywania polecenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-223">Gets or sets a switch that specifies whether the tool task will create a batch file for the command-line and execute that using the command-processor, rather than executing the command directly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="231dc-224">Jeśli PRAWDA, zadanie narzędzia będzie Utwórz plik wsadowy dla wiersza polecenia i który przy użyciu procesora poleceń wykonania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-224">If true, the tool task will create a batch file for the command-line and execute that using the command-processor.</span>
          </span>
          <span data-ttu-id="231dc-225">Zadania narzędzia wykona polecenie bezpośrednio w przypadku wartości FAŁSZ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-225">If false the tool task will execute the command directly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateParameters">
      <MemberSignature Language="C#" Value="protected internal virtual bool ValidateParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ValidateParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.ValidateParameters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ValidateParameters () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ValidateParameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="231dc-226">Wskazuje, czy wszystkie paratmeters zadań są prawidłowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-226">Indicates whether all task paratmeters are valid.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="231dc-227">
            <see langword="true" /> Jeśli wszystkie parametry zadania są prawidłowe; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-227">
              <see langword="true" /> if all task parameters are valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="YieldDuringToolExecution">
      <MemberSignature Language="C#" Value="public bool YieldDuringToolExecution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool YieldDuringToolExecution" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution" />
      <MemberSignature Language="VB.NET" Value="Public Property YieldDuringToolExecution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool YieldDuringToolExecution { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="231dc-228">Wskazuje, czy zadania umożliwia uzyskanie węzła podczas wykonywania narzędzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-228">Indicates if the task will yield the node during tool execution.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="231dc-229">Wartość true, gdy zadanie umożliwia uzyskanie węzła podczas wykonywania narzędzia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="231dc-229">True when the task will yield the node during tool execution.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>