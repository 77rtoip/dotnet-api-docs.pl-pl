<Type Name="UserPrincipal" FullName="System.DirectoryServices.AccountManagement.UserPrincipal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7b7aba0bdb23940c63273552be748c8ad14f1aeb" />
    <Meta Name="ms.sourcegitcommit" Value="af562076243cb1c2c1d8518e9f1b489f858cc658" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/15/2018" />
    <Meta Name="ms.locfileid" Value="35652334" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UserPrincipal : System.DirectoryServices.AccountManagement.AuthenticablePrincipal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UserPrincipal extends System.DirectoryServices.AccountManagement.AuthenticablePrincipal" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.AccountManagement.UserPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class UserPrincipal&#xA;Inherits AuthenticablePrincipal" />
  <TypeSignature Language="C++ CLI" Value="public ref class UserPrincipal : System::DirectoryServices::AccountManagement::AuthenticablePrincipal" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.AccountManagement.AuthenticablePrincipal</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Hermetyzuje podmiotów zabezpieczeń, które są konta użytkowników.</summary>
    <remarks>To be added.</remarks>
    <altmember cref="N:System.DirectoryServices.AccountManagement" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> klasy.</summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UserPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As PrincipalContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UserPrincipal(System::DirectoryServices::AccountManagement::PrincipalContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> , Który określa serwera lub domeny, względem którego operacje są wykonywane.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> przy użyciu określonego kontekstu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konta głównego użytkownika nie jest trwały podczas jego tworzenia. Aby zapisać konto, należy wywołać <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu nawiązuje połączenie z domeną LDAP "fabrikam.com" nazwy użytkownika i hasła zainicjować w <xref:System.DirectoryServices.AccountManagement.PrincipalContext> konstruktora "administrator" i "securelyStoredPassword."  
  
 Właściwości ustawione w tym przykładzie, takie jak adres nazwę i adres e-mail użytkownika, są tworzone w kontenerze, który został określony w <xref:System.DirectoryServices.AccountManagement.PrincipalContext> Konstruktor: "CN Użytkownicy, DC = = firmy fabrikam, DC = com."  
  
```  
  
PrincipalContext ctx = new PrincipalContext(  
                                         ContextType.Domain,  
                                         "fabrikam.com",   
                                         "CN=Users,DC=fabrikam,DC=com",  
                                         "administrator",   
                                         "securelyStoredPassword");   
  
UserPrincipal usr = new UserPrincipal(ctx);  
  
usr.Name = "Jim Daly";  
usr.Description = "This is the user account for Jim Daly";  
usr.EmailAddress = "jimdaly@fabrikam.com";  
usr.SetPassword("securelyStoredPassword");  
usr.Save();  
  
usr.Dispose();  
ctx.Dispose();   
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UserPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName, string password, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName, string password, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As PrincipalContext, samAccountName As String, password As String, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UserPrincipal(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::String ^ samAccountName, System::String ^ password, bool enabled);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="samAccountName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> , Który określa serwera lub domeny, względem którego operacje są wykonywane.</param>
        <param name="samAccountName">Nazwa konta SAM dla tego podmiotu zabezpieczeń użytkownika.</param>
        <param name="password">Hasło dla tego konta.</param>
        <param name="enabled">Wartość logiczna określająca, czy konto jest włączone.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> klasy przy użyciu określonego kontekstu, nazwa konta SAM, hasło, a wartość jest włączona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konta głównego użytkownika nie jest trwały podczas jego tworzenia. Aby zapisać konto, należy wywołać <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="AdvancedSearchFilter">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.AccountManagement.AdvancedFilters AdvancedSearchFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.AccountManagement.AdvancedFilters AdvancedSearchFilter" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AdvancedSearchFilter As AdvancedFilters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::DirectoryServices::AccountManagement::AdvancedFilters ^ AdvancedSearchFilter { System::DirectoryServices::AccountManagement::AdvancedFilters ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.AdvancedFilters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca <see cref="T:System.DirectoryServices.AccountManagement.AdvancedFilters" /> obiektu można ustawić właściwości tylko do odczytu przed przekazaniem obiektu <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearcher" />.</summary>
        <value>
          <see cref="T:System.DirectoryServices.AccountManagement.AdvancedFilters" /> Obiektu.</value>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
        <altmember cref="T:System.DirectoryServices.AccountManagement.AdvancedFilters" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.UserPrincipal Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.DirectoryServices.AccountManagement.UserPrincipal Current" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.UserPrincipal.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As UserPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::DirectoryServices::AccountManagement::UserPrincipal ^ Current { System::DirectoryServices::AccountManagement::UserPrincipal ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.UserPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt główny użytkownik, który reprezentuje bieżącego użytkownika, na którym uruchomiono wątku.</summary>
        <value>A <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> reprezentujący bieżącego użytkownika.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Odpowiedni magazyn nie obsługuje tej właściwości.</exception>
        <exception cref="T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException">Nie można odnaleźć podmiotu zabezpieczeń obiektu user dla bieżącego użytkownika. Obiekt główny może zawierać listy kontroli dostępu, aby uniemożliwić dostęp nieautoryzowanym użytkownikom.</exception>
        <exception cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException">Znaleziono wiele obiektów głównych użytkownika dopasowanie bieżącego użytkownika.</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="EmailAddress">
      <MemberSignature Language="C#" Value="public string EmailAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmailAddress" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property EmailAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EmailAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres e-mail dla tego konta.</summary>
        <value>Adres e-mail głównej nazwy użytkownika.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Odpowiedni magazyn nie obsługuje tej właściwości.</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="EmployeeId">
      <MemberSignature Language="C#" Value="public string EmployeeId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmployeeId" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId" />
      <MemberSignature Language="VB.NET" Value="Public Property EmployeeId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EmployeeId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator dla tego użytkownika podmiotu zabezpieczeń.</summary>
        <value>Identyfikator pracownika głównej nazwy użytkownika.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Odpowiedni magazyn nie obsługuje tej właściwości.</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="FindByBadPasswordAttempt">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByBadPasswordAttempt (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByBadPasswordAttempt(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DateTime time, valuetype System.DirectoryServices.AccountManagement.MatchType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindByBadPasswordAttempt (context As PrincipalContext, time As DateTime, type As MatchType) As PrincipalSearchResult(Of UserPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::UserPrincipal ^&gt; ^ FindByBadPasswordAttempt(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, DateTime time, System::DirectoryServices::AccountManagement::MatchType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="type" Type="System.DirectoryServices.AccountManagement.MatchType" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> Obiektu, który określa serwera lub domeny, względem którego operacje są wykonywane.</param>
        <param name="time">A <see cref="T:System.DateTime" /> obiekt, który określa datę i godzinę spróbuj niepoprawnego hasła. Ten parametr jest używany z parametrem typu, aby określić zakres czasu, w którym zwracanych obiektów spróbuj niepoprawne logowania rejestrowane.</param>
        <param name="type">A <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> wartość wyliczenia, która określa rodzaj dopasowania, która jest stosowana do <c>czasu</c> parametru.</param>
        <summary>Zwraca kolekcję <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> obiektów dla użytkowników, którzy mają nieprawidłowe hasło, spróbuj rejestrowane w określonym dniu i zakres czasu.</summary>
        <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> zawiera jeden lub więcej <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> obiektów lub pustą kolekcję, jeśli nie są znaleziono wyników.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czas domyślnie zostanie ustawiona na czas UTC. Jeśli chcesz określić czas, w lokalnej, następnie określ <xref:System.DateTime.Kind%2A> właściwość `time` obiekt jako <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="FindByExpirationTime">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByExpirationTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByExpirationTime(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DateTime time, valuetype System.DirectoryServices.AccountManagement.MatchType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindByExpirationTime (context As PrincipalContext, time As DateTime, type As MatchType) As PrincipalSearchResult(Of UserPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::UserPrincipal ^&gt; ^ FindByExpirationTime(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, DateTime time, System::DirectoryServices::AccountManagement::MatchType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="type" Type="System.DirectoryServices.AccountManagement.MatchType" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> Obiektu, który określa serwera lub domeny, względem którego operacje są wykonywane.</param>
        <param name="time">A <see cref="T:System.DateTime" /> obiekt, który określa datę i godzinę spróbuj niepoprawnego hasła. Ten parametr jest używany z parametrem typu, aby określić zakres czasu, w którym zwracanych obiektów spróbuj niepoprawne logowania rejestrowane.</param>
        <param name="type">A <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> wartość wyliczenia, która określa rodzaj dopasowania, która jest stosowana do <c>czasu</c> parametru.</param>
        <summary>Zwraca kolekcję <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> obiektów dla użytkowników, którzy mają czas wygaśnięcia konta w określonym dniu i zakres czasu.</summary>
        <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> zawiera jeden lub więcej <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> obiektów lub pustą kolekcję, jeśli nie są znaleziono wyników.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czas domyślnie zostanie ustawiona na czas UTC. Jeśli chcesz określić czas, w lokalnej, następnie określ <xref:System.DateTime.Kind%2A> właściwość `time` obiekt jako <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindByIdentity">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca obiekt główny użytkownika, która jest zgodna z wartością określoną tożsamością.</summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.UserPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.UserPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindByIdentity (context As PrincipalContext, identityValue As String) As UserPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::UserPrincipal ^ FindByIdentity(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::String ^ identityValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.UserPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> , Który określa serwera lub domeny, względem którego operacje są wykonywane.</param>
        <param name="identityValue">Tożsamość głównej nazwy użytkownika. Ten parametr może być dowolnym formacie, który jest zawarty w <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> wyliczenia.</param>
        <summary>Zwraca obiekt główny użytkownika, która jest zgodna z wartością określoną tożsamością.</summary>
        <returns>A <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> obiektów, która jest zgodna z wartością określoną tożsamością lub wartość null, jeśli nie znaleziono żadnych wyników.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException">Znaleziono wiele obiektów głównych użytkownika dopasowania bieżącego obiektu użytkownika.</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.UserPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.UserPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::UserPrincipal ^ FindByIdentity(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::DirectoryServices::AccountManagement::IdentityType identityType, System::String ^ identityValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.UserPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityType" Type="System.DirectoryServices.AccountManagement.IdentityType" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> , Który określa serwera lub domeny, względem którego operacje są wykonywane.</param>
        <param name="identityType">A <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> wartości wyliczenia, która określa format <c>identityValue</c> parametru.</param>
        <param name="identityValue">Tożsamość głównej nazwy użytkownika. Ten parametr może być dowolnym formacie, który jest zawarty w <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> wyliczenia.</param>
        <summary>Zwraca obiekt główny użytkownika zgodny z określoną tożsamością typ i wartość. Ta wersja <see cref="Overload:System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity" /> Metoda określa format wartości tożsamości.</summary>
        <returns>A <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> obiektów, które odpowiadają wartości określonej tożsamości i typ, lub wartość null, jeśli nie znaleziono żadnych wyników.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy kod łączy w magazynie komputera lokalnego. Ponieważ poświadczenia nie są określone w <xref:System.DirectoryServices.AccountManagement.PrincipalContext> konstruktora, poświadczenia działanie użytkownika bieżącego wątku są używane.  
  
 Aby znaleźć użytkownika mającego SamAccountName "Gość", który zostanie przeprowadzone wyszukiwanie.  
  
 Jeśli użytkownik zostanie znaleziony, sprawdzanie jest wykonywane, aby ustalić, czy konto tego użytkownika jest włączone. Jeśli konto nie jest włączone, przykładowy kod włączy ją.  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Machine);  
  
UserPrincipal usr = UserPrincipal.FindByIdentity(ctx,   
                                           IdentityType.SamAccountName,   
                                           "Guest");  
  
if(usr != null)  
{  
    if (usr.Enabled == false)  
        usr.Enabled = true;  
  
    usr.Save();  
    usr.Dispose();  
}  
ctx.Dispose();   
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException">Znaleziono wiele obiektów głównych użytkownika dopasowania bieżącego obiektu użytkownika.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Wartość tożsamości nie jest prawidłową <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> wartości wyliczenia.</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="FindByLockoutTime">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByLockoutTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByLockoutTime(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DateTime time, valuetype System.DirectoryServices.AccountManagement.MatchType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindByLockoutTime (context As PrincipalContext, time As DateTime, type As MatchType) As PrincipalSearchResult(Of UserPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::UserPrincipal ^&gt; ^ FindByLockoutTime(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, DateTime time, System::DirectoryServices::AccountManagement::MatchType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="type" Type="System.DirectoryServices.AccountManagement.MatchType" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> Obiektu, który określa serwera lub domeny, względem którego operacje są wykonywane.</param>
        <param name="time">A <see cref="T:System.DateTime" /> obiekt, który określa datę i godzinę spróbuj niepoprawnego hasła. Ten parametr jest używany z parametrem typu, aby określić zakres czasu, w którym zwracanych obiektów spróbuj niepoprawne logowania rejestrowane.</param>
        <param name="type">A <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> wartość wyliczenia, która określa rodzaj dopasowania, która jest stosowana do <c>czasu</c> parametru.</param>
        <summary>Zwraca kolekcję <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> obiektów dla użytkowników, którzy mają konta czasu blokady w określonym dniu i zakres czasu.</summary>
        <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> zawiera jeden lub więcej <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> obiektów lub pustą kolekcję, jeśli nie są znaleziono wyników.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czas domyślnie zostanie ustawiona na czas UTC. Jeśli chcesz określić czas, w lokalnej, następnie określ <xref:System.DateTime.Kind%2A> właściwość `time` obiekt jako <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="FindByLogonTime">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByLogonTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByLogonTime(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DateTime time, valuetype System.DirectoryServices.AccountManagement.MatchType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindByLogonTime (context As PrincipalContext, time As DateTime, type As MatchType) As PrincipalSearchResult(Of UserPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::UserPrincipal ^&gt; ^ FindByLogonTime(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, DateTime time, System::DirectoryServices::AccountManagement::MatchType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="type" Type="System.DirectoryServices.AccountManagement.MatchType" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> Obiektu, który określa serwera lub domeny, względem którego operacje są wykonywane.</param>
        <param name="time">A <see cref="T:System.DateTime" /> obiekt, który określa datę i godzinę spróbuj niepoprawnego hasła. Ten parametr jest używany z parametrem typu, aby określić zakres czasu, w którym zwracanych obiektów spróbuj niepoprawne logowania rejestrowane.</param>
        <param name="type">A <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> wartość wyliczenia, która określa rodzaj dopasowania, która jest stosowana do <c>czasu</c> parametru.</param>
        <summary>Zwraca kolekcję <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> obiektów dla użytkowników, którzy mają konta logowania rejestrowane w określonym dniu i zakres czasu.</summary>
        <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> zawiera jeden lub więcej <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> obiektów lub pustą kolekcję, jeśli nie są znaleziono wyników.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czas domyślnie zostanie ustawiona na czas UTC. Jeśli chcesz określić czas, w lokalnej, następnie określ <xref:System.DateTime.Kind%2A> właściwość `time` obiekt jako <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="FindByPasswordSetTime">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByPasswordSetTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.UserPrincipal&gt; FindByPasswordSetTime(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DateTime time, valuetype System.DirectoryServices.AccountManagement.MatchType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindByPasswordSetTime (context As PrincipalContext, time As DateTime, type As MatchType) As PrincipalSearchResult(Of UserPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::UserPrincipal ^&gt; ^ FindByPasswordSetTime(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, DateTime time, System::DirectoryServices::AccountManagement::MatchType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.UserPrincipal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="type" Type="System.DirectoryServices.AccountManagement.MatchType" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> Obiektu, który określa serwera lub domeny, względem którego operacje są wykonywane.</param>
        <param name="time">A <see cref="T:System.DateTime" /> obiekt, który określa datę i godzinę spróbuj niepoprawnego hasła. Ten parametr jest używany z parametrem typu, aby określić zakres czasu, w którym zwracanych obiektów spróbuj niepoprawne logowania rejestrowane.</param>
        <param name="type">A <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> wartość wyliczenia, która określa rodzaj dopasowania, która jest stosowana do <c>czasu</c> parametru.</param>
        <summary>Zwraca kolekcję <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> obiektów dla użytkowników, którzy ustawiono hasła w określonym dniu i zakres czasu.</summary>
        <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" /> zawiera jeden lub więcej <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> obiektów lub pustą kolekcję, jeśli nie są znaleziono wyników.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czas domyślnie zostanie ustawiona na czas UTC. Jeśli chcesz określić czas, w lokalnej, następnie określ <xref:System.DateTime.Kind%2A> właściwość `time` obiekt jako <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizationGroups">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetAuthorizationGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetAuthorizationGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAuthorizationGroups () As PrincipalSearchResult(Of Principal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::Principal ^&gt; ^ GetAuthorizationGroups();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kolekcję obiektów principal, która zawiera wszystkich grup autoryzacji, których członkiem jest ten użytkownik. Ta funkcja zwraca tylko grupy, które są grupami zabezpieczeń; grupy dystrybucyjne nie są zwracane.</summary>
        <returns>Kolekcja <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> obiektów, które zawierają grupy, których członkiem jest użytkownik, lub wartość null, jeśli użytkownik nie należy do żadnej grupy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wszystkich grup rekursywnie wyszukuje i zwraca grup, których członkiem jest użytkownik. Zestaw zwrócony mogą również obejmować dodatkowe grupy, że system będzie należy wziąć pod uwagę użytkownika członkiem na potrzeby autoryzacji.  
  
 Grupy, które są zwracane przez tę metodę mogą obejmować grupy z innego zasięgu i magazynu od podmiotu zabezpieczeń. Na przykład, jeśli główny jest obiekt usług AD DS, który ma nazwę Wyświetlaną "CN SpecialGroups, DC = firmy Fabrikam, DC = = com, zestaw zwrócony mogą zawierać grup, które należą do" CN NormalGroups, DC = Firma Fabrikam, DC = = com.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.AccountManagement.PrincipalOperationException">Próba pobrania grup autoryzacji nie powiodło się.</exception>
        <exception cref="T:System.NotSupportedException">Pobierania grup autoryzacji nie jest obsługiwana przez ten system operacyjny.</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="GivenName">
      <MemberSignature Language="C#" Value="public string GivenName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GivenName" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.UserPrincipal.GivenName" />
      <MemberSignature Language="VB.NET" Value="Public Property GivenName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GivenName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia główną imię użytkownika.</summary>
        <value>Dana nazwa główna użytkownika.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Odpowiedni magazyn nie obsługuje tej właściwości.</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="MiddleName">
      <MemberSignature Language="C#" Value="public string MiddleName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MiddleName" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName" />
      <MemberSignature Language="VB.NET" Value="Public Property MiddleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MiddleName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia główną drugie imię użytkownika.</summary>
        <value>Drugie imię głównej nazwy użytkownika.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Odpowiedni magazyn nie obsługuje tej właściwości.</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Surname">
      <MemberSignature Language="C#" Value="public string Surname { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Surname" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.UserPrincipal.Surname" />
      <MemberSignature Language="VB.NET" Value="Public Property Surname As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Surname { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia główną nazwisko użytkownika.</summary>
        <value>Nazwisko głównej nazwy użytkownika.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Odpowiedni magazyn nie obsługuje tej właściwości.</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="VoiceTelephoneNumber">
      <MemberSignature Language="C#" Value="public string VoiceTelephoneNumber { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VoiceTelephoneNumber" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber" />
      <MemberSignature Language="VB.NET" Value="Public Property VoiceTelephoneNumber As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VoiceTelephoneNumber { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia numer telefonu głosowej użytkownika podmiotu zabezpieczeń.</summary>
        <value>Numer telefonu głosowej głównej nazwy użytkownika.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Odpowiedni magazyn nie obsługuje tej właściwości.</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
  </Members>
</Type>