<Type Name="IpcServerChannel" FullName="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4bbb9acd011049d4ab8aff56cf98a53953114eab" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39878033" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class IpcServerChannel : System.Runtime.Remoting.Channels.IChannel, System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IpcServerChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelReceiver, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class IpcServerChannel&#xA;Implements IChannel, IChannelReceiver, ISecurableChannel" />
  <TypeSignature Language="C++ CLI" Value="public ref class IpcServerChannel : System::Runtime::Remoting::Channels::IChannel, System::Runtime::Remoting::Channels::IChannelReceiver, System::Runtime::Remoting::Channels::ISecurableChannel" />
  <TypeSignature Language="F#" Value="type IpcServerChannel = class&#xA;    interface IChannelReceiver&#xA;    interface IChannel&#xA;    interface ISecurableChannel" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelReceiver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Implementuje kanału serwera dla zdalnego wywołania, który korzysta z systemu IPC przesyłają komunikaty.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kanały są używane przez infrastrukturę komunikacji zdalnej programu .NET Framework w celu transportu wywołań zdalnych. Gdy klient wywołuje obiekt zdalny, wywołanie jest serializowana na komunikat, który jest wysyłany przez kanału klienta i odbierane przez kanał firmowy serwer. Po otrzymaniu komunikatu jest przeprowadzona i przetwarzane. Wszystkie wartości zwracane są przekazywane przez kanał serwera i odbierane przez kanał klienta.  
  
 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> Klasy z systemem Windows komunikacji międzyprocesowej (IPC) do transportu komunikatów między domenami aplikacji na tym samym komputerze. Podczas komunikacji między domenami aplikacji na tym samym komputerze, kanału IPC jest znacznie wyższa niż kanały protokołu TCP lub HTTP.  
  
 Aby wykonać dodatkowego przetwarzania wiadomości po stronie serwera, należy określić implementację <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> interfejs za pomocą której wszystkie komunikaty przetwarzane przez <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> wystąpienia są przekazywane.  
  
 <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> Wystąpienia akceptuje komunikaty, które serializacji w danych binarnych lub w formacie protokołu SOAP.  
  
 A <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> obiektu skojarzonej właściwości konfiguracji, które mogą być ustawione na czas wykonywania, albo w pliku konfiguracji (przez wywołanie statycznego <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> metoda) lub programowo (przez przekazanie <xref:System.Collections.IDictionary> kolekcję, aby <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> Konstruktor). Aby uzyskać listę tych właściwości konfiguracji, zobacz dokumentację dla <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.%23ctor%2A> konstruktora.  
  
> [!CAUTION]
>  Podczas ustawiania `exclusiveAddressUse` właściwości `false` w `properties` argument, kilka <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> obiekty mogą być rejestrowane dla takie same nazwany potok. W takim przypadku żądań można przejść do dowolnego kanały zarejestrowany. To ustawienie jest uważany za bezpieczny, tylko wtedy, gdy ALCs są również używane.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób użycia <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> klasy.  
  
 [!code-cpp[Remoting_Ipc#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#10)]
 [!code-csharp[Remoting_Ipc#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#10)]  
  
 Powyższy kod jest używany do udostępnienia następujących obiektu zdalnego.  
  
 [!code-cpp[Remoting_Ipc#0](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/counter.cpp#0)]
 [!code-csharp[Remoting_Ipc#0](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/counter.cs#0)]  
  
 Na przykład klient zdalnie przy użyciu tego obiektu zobacz <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> klasy</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::String ^ portName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : string -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel portName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="portName">Nazwa portu IPC, który będzie używany przez kanał.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> klasy przy użyciu określonej nazwy portu IPC.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak można użyć tego konstruktora.  
  
 [!code-cpp[Remoting_Ipc#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#11)]
 [!code-csharp[Remoting_Ipc#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IServerChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel (properties, sinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties">A <see cref="T:System.Collections.IDictionary" /> kolekcji, która określa wartości dla właściwości konfiguracji ma być używany przez kanał.</param>
        <param name="sinkProvider">
          <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> Wdrożenia, który będzie używany przez kanał.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> klasy za pomocą właściwości określonego kanału i ujścia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat właściwości konfiguracji kanału, zobacz [kanału i właściwości konfiguracji programu formatującego](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  
  
 Jeśli nie jest wymagane funkcje ujścia, ustaw `sinkProvider` parametr `null`.  
  
> [!CAUTION]
>  Podczas ustawiania `exclusiveAddressUse` właściwości `false` w `properties` argument, kilka <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> obiekty mogą być rejestrowane dla takie same nazwany potok. W takim przypadku żądań można przejść do dowolnego kanały zarejestrowany. To ustawienie jest uważany za bezpieczny, tylko wtedy, gdy ALCs są również używane.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak można użyć tego konstruktora.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#41](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#41)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#41](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (string name, string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, portName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::String ^ name, System::String ^ portName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : string * string -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel (name, portName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa kanału.</param>
        <param name="portName">Nazwa portu IPC, który będzie używany przez kanał.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> klasy o nazwie określonego kanału i nazwa portu IPC.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor ustawia <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> właściwości przy użyciu `name` parametru. Jeśli chcesz zarejestrować więcej niż jeden kanał poszczególnych kanałów musi mieć unikatową nazwę.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak można użyć tego konstruktora.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#42](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#42)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#42](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, class System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Security.AccessControl.CommonSecurityDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IServerChannelSinkProvider, securityDescriptor As CommonSecurityDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider, System::Security::AccessControl::CommonSecurityDescriptor ^ securityDescriptor);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IServerChannelSinkProvider * System.Security.AccessControl.CommonSecurityDescriptor -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel (properties, sinkProvider, securityDescriptor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
        <Parameter Name="securityDescriptor" Type="System.Security.AccessControl.CommonSecurityDescriptor" />
      </Parameters>
      <Docs>
        <param name="properties">A <see cref="T:System.Collections.IDictionary" /> kolekcji, która określa wartości dla właściwości konfiguracji ma być używany przez kanał.</param>
        <param name="sinkProvider">
          <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> Wdrożenia, który będzie używany przez kanał.</param>
        <param name="securityDescriptor">Element <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> ma być używany przez kanał.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> klasy przy użyciu określonego kanału deskryptora właściwości, ujścia i zabezpieczeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat właściwości konfiguracji kanału, zobacz [kanału i właściwości konfiguracji programu formatującego](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  
  
 Jeśli nie jest wymagane funkcje ujścia, ustaw `sinkProvider` parametr `null`. Jeśli nie jest wymagane deskryptora zabezpieczeń, ustaw `securityDescriptor` parametr `null`.  
  
> [!CAUTION]
>  Podczas ustawiania `exclusiveAddressUse` właściwości `false` w `properties` argument, kilka <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> obiekty mogą być rejestrowane dla takie same nazwany potok. W takim przypadku żądań można przejść do dowolnego kanały zarejestrowany. To ustawienie jest uważany za bezpieczny, tylko wtedy, gdy ALCs są również używane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcServerChannel (string name, string portName, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string portName, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.#ctor(System.String,System.String,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, portName As String, sinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcServerChannel(System::String ^ name, System::String ^ portName, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ sinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel : string * string * System.Runtime.Remoting.Channels.IServerChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcServerChannel (name, portName, sinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa kanału.</param>
        <param name="portName">Nazwa portu IPC, który będzie używany przez kanał.</param>
        <param name="sinkProvider">
          <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> Wdrożenia, który będzie używany przez kanał.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> klasy przy użyciu nazwy określonego kanału IPC nazwy portu i ujścia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor ustawia <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> właściwości przy użyciu `name` parametru. Jeśli chcesz zarejestrować więcej niż jeden kanał poszczególnych kanałów musi mieć unikatową nazwę.  
  
 Jeśli nie jest wymagane funkcje ujścia, ustaw `sinkProvider` parametr `null`.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak można użyć tego konstruktora.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#43](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server2.cpp#43)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#43](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server2.cs#43)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelData">
      <MemberSignature Language="C#" Value="public object ChannelData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChannelData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChannelData { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelData : obj" Usage="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera dane specyficzne dla kanału.</summary>
        <value>A <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> wystąpienia, które zawiera dane specyficzne dla kanału.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mimo że zwracane jako wystąpienie <xref:System.Object?displayProperty=nameWithType> klasy, wartość tej właściwości może być rzutowany na wystąpienie <xref:System.Runtime.Remoting.Channels.ChannelDataStore> opisujący kanał, do którego <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel> obiektu nasłuchuje.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelData%2A> właściwości.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#15](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#15)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#15](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelName : string" Usage="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę bieżącego kanału.</summary>
        <value>A <see cref="T:System.String" /> wystąpienia, która zawiera nazwę kanału.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy zarejestrowany kanał ma unikatową nazwę. Nazwa jest używana do pobrania określonego kanału podczas wywoływania <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A> metody. Domyślną nazwą jest "ipc serwera".  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelName%2A> właściwości.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#12](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#12)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#12](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelPriority : int" Usage="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera priorytet bieżącego kanału.</summary>
        <value>Liczba całkowita, która wskazuje, priorytetu, przypisanych do kanału.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Priorytet określa kolejność, w kanale, które dane są wyświetlane w <xref:System.Runtime.Remoting.ObjRef> wystąpienia; wyższy priorytet kanały, następować przed elementem niższy priorytet kanałów. Klienci spróbują połączyć się kanałów serwer w kolejności, w jakiej występują w <xref:System.Runtime.Remoting.ObjRef> wystąpienia. Domyślnym priorytetem jest 20; ujemna priorytety są dozwolone.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.ChannelPriority%2A> właściwości.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#13](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#13)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#13](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChannelUri">
      <MemberSignature Language="C#" Value="public string GetChannelUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetChannelUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChannelUri () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetChannelUri();" />
      <MemberSignature Language="F#" Value="member this.GetChannelUri : unit -&gt; string" Usage="ipcServerChannel.GetChannelUri " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca identyfikator URI bieżącego kanału.</summary>
        <returns>Element <see cref="T:System.String" /> zawierający identyfikator URI kanału.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikator URI kanału jest używany przez klienta do określania kanału zdalnego serwera.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób użycia <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetChannelUri%2A> metody.  
  
 [!code-cpp[Remoting_Ipc#12](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/server.cpp#12)]
 [!code-csharp[Remoting_Ipc#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/server.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrlsForUri">
      <MemberSignature Language="C#" Value="public virtual string[] GetUrlsForUri (string objectUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUrlsForUri(string objectUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUrlsForUri (objectUri As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetUrlsForUri(System::String ^ objectUri);" />
      <MemberSignature Language="F#" Value="abstract member GetUrlsForUri : string -&gt; string[]&#xA;override this.GetUrlsForUri : string -&gt; string[]" Usage="ipcServerChannel.GetUrlsForUri objectUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectUri">Identyfikator URI obiektu, dla którego adresy URL są wymagane.</param>
        <summary>Zwraca tablicę wszystkich adresów URL dla obiektu przy użyciu określonego identyfikatora URI w serwisie bieżącego <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcChannel" /> wystąpienia.</summary>
        <returns>Tablicę adresów URL dla obiektu, przy użyciu określonego identyfikatora URI w serwisie bieżącego <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana przez <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.GetUrlsForUri%2A> metody.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#19)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSecured : bool with get, set" Usage="System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.IsSecured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość logiczną wskazującą, czy ten kanał jest bezpieczna.</summary>
        <value>Wartość logiczna wskazująca, czy bieżące wystąpienie jest bezpieczne.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member Parse : string *  -&gt; string&#xA;override this.Parse : string *  -&gt; string" Usage="ipcServerChannel.Parse (url, objectURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">Adres URL, z którego mają zostać wyodrębnione identyfikator URI obiektu dobrze znanych zdalnego.</param>
        <param name="objectURI">Po powrocie z tej metody zawiera <see cref="T:System.String" /> wystąpienie, które przechowuje identyfikator URI obiektu dobrze znanych zdalnego.</param>
        <summary>Wyodrębnianie identyfikatora URI kanału i zdalnego obiektu dobrze znanego identyfikatora URI z określonego adresu URL.</summary>
        <returns>Identyfikator URI bieżącego kanału.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikator URI obiektu jest wartością, która jednoznacznie identyfikuje wystąpienie określonego obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.Parse%2A> metody.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CPP/server.cpp#19)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcServerChannel#19](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcServerChannel/CS/server.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartListening(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member StartListening : obj -&gt; unit&#xA;override this.StartListening : obj -&gt; unit" Usage="ipcServerChannel.StartListening data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Obiekt, który określa stan inicjowania lub <see langword="null" />, jeśli nie chcesz przekazać z określonym stanem do kanału.</param>
        <summary>Powoduje, że kanał bieżący rozpocząć nasłuchiwania żądań.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie jest to konieczne wywołać tę metodę, aby rozpocząć nasłuchiwania w nowo utworzonym kanału.  
  
 Ta metoda służy do ponownego uruchomienia nasłuchiwanie na kanale po <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening%2A> metoda została wywołana do przestawaj słuchać w kanale.  
  
 Obiekt danych może służyć do przekazania do stanu inicjowania określonych do kanału. Jeśli nie chcesz przekazać z określonym stanem do kanału, przekazać `null` jako `data` wartość parametru.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Określone porty nasłuchiwania nie jest dostępna.</exception>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopListening(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member StopListening : obj -&gt; unit&#xA;override this.StopListening : obj -&gt; unit" Usage="ipcServerChannel.StopListening data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Obiekt, który określa stan inicjowania lub <see langword="null" />, jeśli nie chcesz przekazać z określonym stanem do kanału.</param>
        <summary>Powoduje, że ten kanał można zatrzymać nasłuchiwanie żądań.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia przestawaj słuchać w kanale. Aby ponownie uruchomić nasłuchiwania, należy użyć <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel.StartListening%2A> metody.  
  
 Obiekt danych może służyć do przekazania do stanu inicjowania określonych do kanału. Jeśli nie chcesz przekazać z określonym stanem do kanału, przekazać `null` jako `data` wartość parametru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>