<Type Name="MetadataResolver" FullName="System.ServiceModel.Description.MetadataResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a18a682c6305de93c74530f1a31d1ff5481cca7a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36616802" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class MetadataResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MetadataResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MetadataResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class MetadataResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataResolver abstract sealed" />
  <TypeSignature Language="F#" Value="type MetadataResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Pobiera i importuje metadane jako <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Description.MetadataResolver> klasę, aby szybko importować punktów końcowych usługi z metadanych. Ta klasa pliki do pobrania i konwertuje metadanych do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów. Aby pobrać metadane i przetworzyć tych informacji jako <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType>, zobacz <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.ServiceModel.Description.MetadataResolver> służącą do zwracania metadanych jako kolekcja <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, które są następnie używane do nawiązania połączenia wystąpienie usługi.  
  
 [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  
  
 W poniższym przykładzie pokazano sposób użycia <xref:System.ServiceModel.Description.MetadataResolver> do pobierania i zwracania metadanych jako kolekcja <xref:System.ServiceModel.Description.ServiceEndpoint> żądania obiektów za pomocą GET protokołu HTTP zamiast protokołu WS-Transfer.  
  
 [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginResolve">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rozpoczyna wywołanie asynchroniczne, który jest rozpoznawany jako adres metadanych w kolekcji <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla tej usługi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Te metody begin asynchronicznych wersji <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Kontrakty, do których chcesz pobrać i rozpoznania metadanych.</param>
        <param name="address">Adres metadanych.</param>
        <param name="callback">Delegat asynchroniczne wywołanie zwrotne wywoływane, gdy połączenie zostanie zakończone.</param>
        <param name="asyncState">Stan skojarzony z wywołania asynchronicznego.</param>
        <summary>Rozpoczyna wywołanie asynchroniczne, który jest rozpoznawany jako adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonej umów, przy użyciu określonego adresu i stan asynchroniczne i delegata.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> , Która odwołuje się operacja asynchronicznego rozpoznawania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienia domyślne <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> są używane do pobierania metadanych i domyślnie <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> jest <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> bezpośrednio.  
  
> [!NOTE]
>  Jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu, zwracana jest pustej kolekcji. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres, kontrakt lub wywołania zwrotnego jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> jest pusta, co najmniej jeden element członkowski <paramref name="contracts" /> jest <see langword="null" />, lub <paramref name="contracts" /> zawiera więcej niż jeden kontrakt z taką samą nazwę i przestrzeń nazw.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (Type contract, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Type contract, class System.ServiceModel.EndpointAddress address, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contract As Type, address As EndpointAddress, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(Type ^ contract, System::ServiceModel::EndpointAddress ^ address, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : Type * System.ServiceModel.EndpointAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contract, address, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract">Kontrakt, do których chcesz pobrać i rozpoznania metadanych.</param>
        <param name="address">Adres metadanych.</param>
        <param name="callback">Delegat asynchroniczne wywołanie zwrotne wywoływane, gdy połączenie zostanie zakończone.</param>
        <param name="asyncState">Stan skojarzony z wywołania asynchronicznego.</param>
        <summary>Rozpoczyna wywołanie asynchroniczne, który jest rozpoznawany jako adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonego zamówienia przy użyciu określonego adresu i stan asynchronicznego a obiektem delegowanym.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> , Która odwołuje się operacja asynchronicznego rozpoznawania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienia domyślne <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> są używane do pobierania metadanych i domyślnie <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> jest <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> bezpośrednio.  
  
> [!NOTE]
>  Jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu, zwracana jest pustej kolekcji. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane.  
  
 Ta metoda wymaga, aby określić typ kontraktu. Kontrakt można określić przez zadeklarowanie interfejsu usługi w kodzie klienta lub za pomocą klienta WCF generowane przez Svcutil.exe. W przypadku zmiany interfejsu (Dodawanie nowej operacji, na przykład), musisz zaktualizować interfejsu w kodzie klienta lub generowania nowego klienta WCF. W przeciwnym razie jest zwracany wyjątek. Na przykład masz usługa, która implementuje kontraktu usługi o nazwie ICalculator, który definiuje Add(), Sub() Mult() i Div(). Tworzenie aplikacji klienckich i generowanie klienta platformy WCF. Metoda jest następnie dodać do ICalculator o nazwie Echo(). Jeśli następnie napisać aplikację, która wywołuje <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> bez generowania nowego klienta WCF otrzymasz następujący wyjątek.  
  
 `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres, kontrakt lub wywołania zwrotnego jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Description.MetadataExchangeClient client, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, client As MetadataExchangeClient, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Description::MetadataExchangeClient ^ client, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * System.ServiceModel.Description.MetadataExchangeClient * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, client, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Kontrakty, do których chcesz pobrać i rozpoznania metadanych.</param>
        <param name="address">Adres metadanych.</param>
        <param name="client">
          <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> Używane do pobierania metadanych.</param>
        <param name="callback">Delegat asynchroniczne wywołanie zwrotne wywoływane, gdy połączenie zostanie zakończone.</param>
        <param name="asyncState">Stan skojarzony z wywołania asynchronicznego.</param>
        <summary>Rozpoczyna wywołanie asynchroniczne, który jest rozpoznawany jako adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonej umów, przy użyciu określonego adresu <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, stan asynchronicznego a obiektem delegowanym.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> , Która odwołuje się operacja asynchronicznego rozpoznawania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> jest <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> bezpośrednio.  
  
> [!NOTE]
>  Jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu, zwracana jest pustej kolekcji. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres, kontrakt, klienta lub wywołania zwrotnego jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> jest pusta, co najmniej jeden element członkowski <paramref name="contracts" /> ma wartość null, lub <paramref name="contracts" /> zawiera więcej niż jeden kontrakt z taką samą nazwę i przestrzeń nazw.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, mode, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Kontrakty, do których chcesz pobrać i rozpoznania metadanych.</param>
        <param name="address">Adres metadanych.</param>
        <param name="mode">Tryb pobierania.</param>
        <param name="callback">Delegat asynchroniczne wywołanie zwrotne wywoływane, gdy połączenie zostanie zakończone.</param>
        <param name="asyncState">Stan skojarzony z wywołania asynchronicznego.</param>
        <summary>Rozpoczyna wywołanie asynchroniczne, który jest rozpoznawany jako adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonej umów, przy użyciu określonego adresu <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> wartość, stan asynchronicznego a obiektem delegowanym.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> , Która odwołuje się operacja asynchronicznego rozpoznawania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienia domyślne <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> są używane do pobierania metadanych.  
  
 Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> bezpośrednio.  
  
> [!NOTE]
>  Jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu, zwracana jest pustej kolekcji. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres, kontrakt lub wywołania zwrotnego jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> jest pusta, co najmniej jeden element członkowski <paramref name="contracts" /> ma wartość null, lub <paramref name="contracts" /> zawiera więcej niż jeden kontrakt z taką samą nazwę i przestrzeń nazw.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Type contract, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contract As Type, address As Uri, mode As MetadataExchangeClientMode, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(Type ^ contract, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : Type * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contract, address, mode, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract">Kontrakt, do których chcesz pobrać i rozpoznania metadanych.</param>
        <param name="address">Adres metadanych.</param>
        <param name="mode">Tryb pobierania.</param>
        <param name="callback">Delegat asynchroniczne wywołanie zwrotne wywoływane, gdy połączenie zostanie zakończone.</param>
        <param name="asyncState">Stan skojarzony z wywołania asynchronicznego.</param>
        <summary>Rozpoczyna wywołanie asynchroniczne, który jest rozpoznawany jako adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonego kontraktu, przy użyciu określonego adresu <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, stan asynchronicznego a obiektem delegowanym.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> , Która odwołuje się operacja asynchronicznego rozpoznawania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienia domyślne <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> są używane do pobierania metadanych.  
  
 Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> bezpośrednio.  
  
> [!NOTE]
>  Jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu, zwracana jest pustej kolekcji. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres, kontrakt lub wywołania zwrotnego jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.ServiceModel.Description.MetadataExchangeClient client, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, client As MetadataExchangeClient, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, System::ServiceModel::Description::MetadataExchangeClient ^ client, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * System.ServiceModel.Description.MetadataExchangeClient * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, mode, client, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Kontrakty, do których chcesz pobrać i rozpoznania metadanych.</param>
        <param name="address">Adres metadanych.</param>
        <param name="mode">Tryb pobierania.</param>
        <param name="client">
          <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> Używane do pobierania metadanych.</param>
        <param name="callback">Delegat asynchroniczne wywołanie zwrotne wywoływane, gdy połączenie zostanie zakończone.</param>
        <param name="asyncState">Stan skojarzony z wywołania asynchronicznego.</param>
        <summary>Rozpoczyna wywołanie asynchroniczne, który jest rozpoznawany jako adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonej umów, przy użyciu określonego adresu <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, stan asynchroniczne, a obiektem delegowanym.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> , Która odwołuje się operacja asynchronicznego rozpoznawania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> bezpośrednio.  
  
> [!NOTE]
>  Jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu, zwracana jest pustej kolekcji. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres, kontrakt lub wywołania zwrotnego jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> jest pusta, co najmniej jeden element członkowski <paramref name="contracts" /> ma wartość null, lub <paramref name="contracts" /> zawiera więcej niż jeden kontrakt z taką samą nazwę i przestrzeń nazw.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection EndResolve (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection EndResolve(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (result As IAsyncResult) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ EndResolve(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.EndResolve result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> Obiekt, który został odebrany po wywołaniu <see cref="Overload:System.ServiceModel.Description.MetadataResolver.BeginResolve" /> metody.</param>
        <summary>Kończy wywołanie asynchroniczne do rozpoznania metadanych do kolekcji punktów końcowych.</summary>
        <returns>Kolekcja <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla punktów końcowych zawarte w metadanych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kończy wywołanie asynchroniczne do jednego z <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera i jest rozpoznawany jako adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla tej usługi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> bezpośrednio.  
  
 Dla wszystkich synchroniczne i asynchroniczne `Resolve` metod, jest zwracany pustą kolekcję, jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contracts">Kontrakty, do których chcesz pobrać i rozpoznania metadanych.</param>
        <param name="address">Adres metadanych.</param>
        <summary>Rozpoznaje adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonej umów przy użyciu adresu określonych metadanych.</summary>
        <returns>Kolekcja <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonego kontraktu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienia domyślne <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> są używane do pobierania metadanych i domyślnie <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> jest <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> bezpośrednio.  
  
> [!NOTE]
>  Jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu, zwracana jest pustej kolekcji. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Kolekcja adres lub kontraktów jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> jest pusta, co najmniej jeden element członkowski <paramref name="contracts" /> ma wartość null, lub <paramref name="contracts" /> zawiera więcej niż jeden kontrakt z taką samą nazwę i przestrzeń nazw.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Type contract, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contract As Type, address As EndpointAddress) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(Type ^ contract, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member Resolve : Type * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contract, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contract">Kontrakty, do których chcesz pobrać i rozpoznania metadanych.</param>
        <param name="address">Adres metadanych.</param>
        <summary>Pobiera i rozpoznaje adres metadanych w kolekcji <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonego kontraktu pod określonym adresem.</summary>
        <returns>Kolekcja <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonego kontraktu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> metodę, aby określić, kontrakt i adres metadanych do użycia podczas pobierania i rozpoznawania metadanych.  
  
 Ustawienia domyślne <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> są używane do pobierania metadanych i domyślnie <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> jest <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> bezpośrednio.  
  
> [!NOTE]
>  Jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu, zwracana jest pustej kolekcji. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane.  
  
 Ta metoda wymaga, aby określić typ kontraktu. Kontrakt można określić przez zadeklarowanie interfejsu usługi w kodzie klienta lub za pomocą klienta WCF generowane przez Svcutil.exe. W przypadku zmiany interfejsu (Dodawanie nowej operacji, na przykład), musisz zaktualizować interfejsu w kodzie klienta lub generowania nowego klienta WCF. W przeciwnym razie jest zwracany wyjątek. Na przykład masz usługa, która implementuje kontraktu usługi o nazwie ICalculator, który definiuje Add(), Sub() Mult() i Div(). Tworzenie aplikacji klienckich i generowanie klienta platformy WCF. Metoda jest następnie dodać do ICalculator o nazwie Echo(). Jeśli następnie napisać aplikację, która wywołuje <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> bez generowania nowego klienta WCF otrzymasz następujący wyjątek.  
  
 `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.ServiceModel.Description.MetadataResolver> służącą do zwracania metadanych jako kolekcja <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, które są następnie używane do nawiązania połączenia wystąpienie usługi.  
  
 [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jest to adres lub kontrakt <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Description.MetadataExchangeClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, client As MetadataExchangeClient) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Description::MetadataExchangeClient ^ client);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * System.ServiceModel.Description.MetadataExchangeClient -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, client)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
      </Parameters>
      <Docs>
        <param name="contracts">Kontrakty, do których chcesz pobrać i rozpoznania metadanych.</param>
        <param name="address">Adres metadanych.</param>
        <param name="client">
          <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> Używane do pobierania metadanych.</param>
        <summary>Rozpoznaje adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonej umów przy użyciu adresu określonych metadanych i <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />.</summary>
        <returns>Kolekcja <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonego kontraktu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> jest <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> bezpośrednio.  
  
> [!NOTE]
>  Jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu, zwracana jest pustej kolekcji. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres, umów kolekcji lub klient jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> jest pusta, co najmniej jeden element członkowski <paramref name="contracts" /> ma wartość null, lub <paramref name="contracts" /> zawiera więcej niż jeden kontrakt z taką samą nazwę i przestrzeń nazw.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
      </Parameters>
      <Docs>
        <param name="contracts">Kontrakty, do których chcesz pobrać i rozpoznania metadanych.</param>
        <param name="address">Adres metadanych.</param>
        <param name="mode">Tryb pobierania.</param>
        <summary>Rozpoznaje adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla kontraktów określony przy użyciu określonego trybu adres i transferu.</summary>
        <returns>Kolekcja <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonego kontraktu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienia domyślne <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> są używane do pobierania metadanych.  
  
 Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> bezpośrednio.  
  
> [!NOTE]
>  Jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu, zwracana jest pustej kolekcji. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Kolekcja adres lub kontraktów jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> jest pusta, co najmniej jeden element członkowski <paramref name="contracts" /> ma wartość null, lub <paramref name="contracts" /> zawiera więcej niż jeden kontrakt z taką samą nazwę i przestrzeń nazw.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Type contract, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contract As Type, address As Uri, mode As MetadataExchangeClientMode) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(Type ^ contract, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode);" />
      <MemberSignature Language="F#" Value="static member Resolve : Type * Uri * System.ServiceModel.Description.MetadataExchangeClientMode -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contract, address, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
      </Parameters>
      <Docs>
        <param name="contract">Kontrakt, do których chcesz pobrać i rozpoznania metadanych.</param>
        <param name="address">Adres metadanych.</param>
        <param name="mode">Tryb pobierania.</param>
        <summary>Rozpoznaje adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów kontraktu określony przy użyciu określonego trybu adres i transferu.</summary>
        <returns>Kolekcja <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonego kontraktu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> metodę, aby określić kontraktu i adres oraz mechanizmu pobierania do użycia.  
  
 Ustawienia domyślne <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> są używane do pobierania metadanych.  
  
 Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> bezpośrednio.  
  
> [!NOTE]
>  Jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu, zwracana jest pustej kolekcji. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.ServiceModel.Description.MetadataResolver> do pobierania i zwracania metadanych jako kolekcja <xref:System.ServiceModel.Description.ServiceEndpoint> żądania obiektów za pomocą GET protokołu HTTP zamiast protokołu WS-Transfer.  
  
 [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres lub kontrakt jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.ServiceModel.Description.MetadataExchangeClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, client As MetadataExchangeClient) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, System::ServiceModel::Description::MetadataExchangeClient ^ client);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * System.ServiceModel.Description.MetadataExchangeClient -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, mode, client)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
      </Parameters>
      <Docs>
        <param name="contracts">Kontrakty, do których chcesz pobrać i rozpoznania metadanych.</param>
        <param name="address">Adres metadanych.</param>
        <param name="mode">Tryb pobierania.</param>
        <param name="client">
          <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> Używane do pobierania metadanych.</param>
        <summary>Rozpoznaje adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonej umów przy użyciu określonego adresu, tryb transferu i klient transferu.</summary>
        <returns>Kolekcja <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonego kontraktu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pobieranie metadanych, ale nie rozpoznać informacje do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, użyj <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> bezpośrednio.  
  
> [!NOTE]
>  Jeśli punkty końcowe nie zostały zaimportowane, lub jeśli punkty końcowe nie są dopasowane kontraktu, zwracana jest pustej kolekcji. Jeśli zostanie zwrócony pustą kolekcję, Ostrzeżenie śledzenia są zapisywane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres, umów kolekcji lub klient jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> jest pusta, co najmniej jeden element członkowski <paramref name="contracts" /> ma wartość null, lub <paramref name="contracts" /> zawiera więcej niż jeden kontrakt z taką samą nazwę i przestrzeń nazw.</exception>
      </Docs>
    </Member>
  </Members>
</Type>