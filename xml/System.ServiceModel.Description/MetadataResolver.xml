<Type Name="MetadataResolver" FullName="System.ServiceModel.Description.MetadataResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e73d59ea52f83adccf032114fdb8598f2c160d6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69152325" /></Metadata><TypeSignature Language="C#" Value="public static class MetadataResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MetadataResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MetadataResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class MetadataResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataResolver abstract sealed" />
  <TypeSignature Language="F#" Value="type MetadataResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Pobiera i Importuje metadane <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> jako obiekty.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj klasy <xref:System.ServiceModel.Description.MetadataResolver> , aby szybko zaimportować punkty końcowe dla usługi z metadanych. Ta klasa pobiera i konwertuje metadane na <xref:System.ServiceModel.Description.ServiceEndpoint> obiekty. Aby pobrać metadane i przetworzyć te informacje <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType>jako, <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>Zobacz.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.ServiceModel.Description.MetadataResolver> klasy do zwracania metadanych jako <xref:System.ServiceModel.Description.ServiceEndpoint> kolekcji obiektów, które są następnie używane do nawiązania połączenia z wystąpieniem usługi.  
  
 [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  
  
 Poniższy przykład kodu pokazuje, jak używać <xref:System.ServiceModel.Description.MetadataResolver> do pobierania i zwracania metadanych jako <xref:System.ServiceModel.Description.ServiceEndpoint> kolekcji obiektów przy użyciu żądania HTTP GET zamiast usługi WS-transfer.  
  
 [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginResolve">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rozpoczyna wywołanie asynchroniczne, które rozpoznaje adres metadanych w kolekcji <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla tej usługi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metody te zaczynają asynchroniczne wersje <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> metod.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Kontrakty, dla których należy pobrać i rozwiązać metadane.</param>
        <param name="address">Adres metadanych.</param>
        <param name="callback">Asynchroniczny delegat wywołania zwrotnego wywoływany, gdy wywołanie zostało zakończone.</param>
        <param name="asyncState">Stan skojarzony z wywołaniem asynchronicznym.</param>
        <summary>Rozpoczyna wywołanie asynchroniczne, które rozwiązuje adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonych kontraktów, przy użyciu określonego adresu i stanu asynchronicznego i delegata.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Odwołuje się do asynchronicznej operacji rozpoznawania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślne ustawienia w <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> programie są używane do pobierania metadanych, a wartość domyślna <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> to <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Aby pobrać metadane, ale nie rozwiązać informacji do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> Użyj bezpośrednio.  
  
> [!NOTE]
>  Pustą kolekcję zwraca się, jeśli nie zaimportowano żadnych punktów końcowych lub że punkty końcowe nie pasują do kontraktu. W przypadku zwrócenia pustej kolekcji zostanie zapisany ślad ostrzegawczy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres, kontrakt lub wywołanie zwrotne to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contracts" />jest pusty, co najmniej jeden element członkowski <paramref name="contracts" /> jest <see langword="null" />lub <paramref name="contracts" /> zawiera więcej niż jeden kontrakt o tej samej nazwie i przestrzeni nazw.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (Type contract, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Type contract, class System.ServiceModel.EndpointAddress address, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contract As Type, address As EndpointAddress, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(Type ^ contract, System::ServiceModel::EndpointAddress ^ address, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : Type * System.ServiceModel.EndpointAddress * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contract, address, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract">Kontrakt, dla którego mają zostać pobrane i rozwiązane metadane.</param>
        <param name="address">Adres metadanych.</param>
        <param name="callback">Asynchroniczny delegat wywołania zwrotnego wywoływany, gdy wywołanie zostało zakończone.</param>
        <param name="asyncState">Stan skojarzony z wywołaniem asynchronicznym.</param>
        <summary>Rozpoczyna wywołanie asynchroniczne, które rozpoznaje adres metadanych w <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektach dla określonego kontraktu przy użyciu określonego adresu i stanu asynchronicznego oraz delegata.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Odwołuje się do asynchronicznej operacji rozpoznawania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślne ustawienia w <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> programie są używane do pobierania metadanych, a wartość domyślna <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> to <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Aby pobrać metadane, ale nie rozwiązać informacji do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> Użyj bezpośrednio.  
  
> [!NOTE]
>  Pustą kolekcję zwraca się, jeśli nie zaimportowano żadnych punktów końcowych lub że punkty końcowe nie pasują do kontraktu. W przypadku zwrócenia pustej kolekcji zostanie zapisany ślad ostrzegawczy.  
  
 Ta metoda wymaga określenia typu kontraktu. Umowę można określić, deklarując interfejs usługi w kodzie klienta lub korzystając z klienta WCF wygenerowanego przez Svcutil. exe. Jeśli interfejs ulegnie zmianie (na przykład przy dodawaniu nowej operacji), należy zaktualizować interfejs w kodzie klienta lub wygenerować nowego klienta WCF. Jeśli tego nie zrobisz, zostanie zgłoszony wyjątek. Załóżmy na przykład, że masz usługę implementującą kontrakt usługi o nazwie ICalculator, który definiuje Dodawanie (), sub (), iloczyn () i DIV (). Tworzysz aplikację kliencką i wygenerujesz klienta WCF. Następnie można dodać metodę do ICalculator o nazwie Echo (). Jeśli następnie napiszesz aplikację, która wywołuje <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> bez generowania nowego klienta WCF, zostanie pobrany następujący wyjątek.  
  
 `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres, kontrakt lub wywołanie zwrotne to <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Description.MetadataExchangeClient client, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, client As MetadataExchangeClient, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Description::MetadataExchangeClient ^ client, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * System.ServiceModel.Description.MetadataExchangeClient * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, client, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Kontrakty, dla których należy pobrać i rozwiązać metadane.</param>
        <param name="address">Adres metadanych.</param>
        <param name="client"><see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> Używane do pobierania metadanych.</param>
        <param name="callback">Asynchroniczny delegat wywołania zwrotnego wywoływany, gdy wywołanie zostało zakończone.</param>
        <param name="asyncState">Stan skojarzony z wywołaniem asynchronicznym.</param>
        <summary>Rozpoczyna wywołanie asynchroniczne, które rozwiązuje adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonych kontraktów, przy użyciu określonego adresu, <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />stanu asynchronicznego i delegata.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Odwołuje się do asynchronicznej operacji rozpoznawania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> to <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Aby pobrać metadane, ale nie rozwiązać informacji do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> Użyj bezpośrednio.  
  
> [!NOTE]
>  Pustą kolekcję zwraca się, jeśli nie zaimportowano żadnych punktów końcowych lub że punkty końcowe nie pasują do kontraktu. W przypadku zwrócenia pustej kolekcji zostanie zapisany ślad ostrzegawczy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres, kontrakt, klient lub wywołanie zwrotne to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contracts" />jest pusty, co najmniej jeden element członkowski <paramref name="contracts" /> ma wartość null lub <paramref name="contracts" /> zawiera więcej niż jeden kontrakt o tej samej nazwie i przestrzeni nazw.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, mode, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Kontrakty, dla których należy pobrać i rozwiązać metadane.</param>
        <param name="address">Adres metadanych.</param>
        <param name="mode">Tryb pobierania.</param>
        <param name="callback">Asynchroniczny delegat wywołania zwrotnego wywoływany, gdy wywołanie zostało zakończone.</param>
        <param name="asyncState">Stan skojarzony z wywołaniem asynchronicznym.</param>
        <summary>Rozpoczyna wywołanie asynchroniczne, które rozwiązuje adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonych kontraktów, przy użyciu określonego adresu, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> wartości, stanu asynchronicznego i delegata.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Odwołuje się do asynchronicznej operacji rozpoznawania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienia domyślne w <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> programie są używane do pobierania metadanych.  
  
 Aby pobrać metadane, ale nie rozwiązać informacji do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> Użyj bezpośrednio.  
  
> [!NOTE]
>  Pustą kolekcję zwraca się, jeśli nie zaimportowano żadnych punktów końcowych lub że punkty końcowe nie pasują do kontraktu. W przypadku zwrócenia pustej kolekcji zostanie zapisany ślad ostrzegawczy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres, kontrakt lub wywołanie zwrotne to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contracts" />jest pusty, co najmniej jeden element członkowski <paramref name="contracts" /> ma wartość null lub <paramref name="contracts" /> zawiera więcej niż jeden kontrakt o tej samej nazwie i przestrzeni nazw.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Type contract, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contract As Type, address As Uri, mode As MetadataExchangeClientMode, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(Type ^ contract, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : Type * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contract, address, mode, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract">Kontrakt, dla którego mają zostać pobrane i rozwiązane metadane.</param>
        <param name="address">Adres metadanych.</param>
        <param name="mode">Tryb pobierania.</param>
        <param name="callback">Asynchroniczny delegat wywołania zwrotnego wywoływany, gdy wywołanie zostało zakończone.</param>
        <param name="asyncState">Stan skojarzony z wywołaniem asynchronicznym.</param>
        <summary>Rozpoczyna wywołanie asynchroniczne, które rozwiązuje adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonego kontraktu, przy użyciu określonego adresu, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />stanu asynchronicznego i delegata.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Odwołuje się do asynchronicznej operacji rozpoznawania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienia domyślne w <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> programie są używane do pobierania metadanych.  
  
 Aby pobrać metadane, ale nie rozwiązać informacji do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> Użyj bezpośrednio.  
  
> [!NOTE]
>  Pustą kolekcję zwraca się, jeśli nie zaimportowano żadnych punktów końcowych lub że punkty końcowe nie pasują do kontraktu. W przypadku zwrócenia pustej kolekcji zostanie zapisany ślad ostrzegawczy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres, kontrakt lub wywołanie zwrotne to <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.ServiceModel.Description.MetadataExchangeClient client, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, client As MetadataExchangeClient, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, System::ServiceModel::Description::MetadataExchangeClient ^ client, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="static member BeginResolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * System.ServiceModel.Description.MetadataExchangeClient * AsyncCallback * obj -&gt; IAsyncResult" Usage="System.ServiceModel.Description.MetadataResolver.BeginResolve (contracts, address, mode, client, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Kontrakty, dla których należy pobrać i rozwiązać metadane.</param>
        <param name="address">Adres metadanych.</param>
        <param name="mode">Tryb pobierania.</param>
        <param name="client"><see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> Używane do pobierania metadanych.</param>
        <param name="callback">Asynchroniczny delegat wywołania zwrotnego wywoływany, gdy wywołanie zostało zakończone.</param>
        <param name="asyncState">Stan skojarzony z wywołaniem asynchronicznym.</param>
        <summary>Rozpoczyna wywołanie asynchroniczne, które rozwiązuje adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonych kontraktów, przy użyciu określonego adresu, <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" />, stanu asynchronicznego i delegata.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Odwołuje się do asynchronicznej operacji rozpoznawania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać metadane, ale nie rozwiązać informacji do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> Użyj bezpośrednio.  
  
> [!NOTE]
>  Pustą kolekcję zwraca się, jeśli nie zaimportowano żadnych punktów końcowych lub że punkty końcowe nie pasują do kontraktu. W przypadku zwrócenia pustej kolekcji zostanie zapisany ślad ostrzegawczy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres, kontrakt lub wywołanie zwrotne to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contracts" />jest pusty, co najmniej jeden element członkowski <paramref name="contracts" /> ma wartość null lub <paramref name="contracts" /> zawiera więcej niż jeden kontrakt o tej samej nazwie i przestrzeni nazw.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection EndResolve (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection EndResolve(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (result As IAsyncResult) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ EndResolve(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="static member EndResolve : IAsyncResult -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.EndResolve result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Obiekt otrzymany z wywołania <see cref="Overload:System.ServiceModel.Description.MetadataResolver.BeginResolve" /> metody. <see cref="T:System.IAsyncResult" /></param>
        <summary>Kończy asynchroniczne wywołanie w celu rozpoznania metadanych w kolekcji punktów końcowych.</summary>
        <returns>Kolekcja <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla punktów końcowych zawartych w metadanych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zamyka asynchroniczne wywołanie jednej z <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A> metod.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera i rozwiązuje adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla tej usługi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać metadane, ale nie rozwiązać informacji do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> Użyj bezpośrednio.  
  
 W przypadku wszystkich metod synchronicznych i asynchronicznych `Resolve` zwracana jest pusta kolekcja, jeśli nie zaimportowano żadnych punktów końcowych lub jeśli żaden punkt końcowy nie pasuje do kontraktu. W przypadku zwrócenia pustej kolekcji zostanie zapisany ślad ostrzegawczy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contracts">Kontrakty, dla których należy pobrać i rozwiązać metadane.</param>
        <param name="address">Adres metadanych.</param>
        <summary>Rozpoznaje adres metadanych w <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektach dla określonych kontraktów przy użyciu określonego adresu metadanych.</summary>
        <returns>Kolekcja <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonego kontraktu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślne ustawienia w <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> programie są używane do pobierania metadanych, a wartość domyślna <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> to <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Aby pobrać metadane, ale nie rozwiązać informacji do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> Użyj bezpośrednio.  
  
> [!NOTE]
>  Pustą kolekcję zwraca się, jeśli nie zaimportowano żadnych punktów końcowych lub że punkty końcowe nie pasują do kontraktu. W przypadku zwrócenia pustej kolekcji zostanie zapisany ślad ostrzegawczy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Kolekcja adresów lub kontraktów to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contracts" />jest pusty, co najmniej jeden element członkowski <paramref name="contracts" /> ma wartość null lub <paramref name="contracts" /> zawiera więcej niż jeden kontrakt o tej samej nazwie i przestrzeni nazw.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Type contract, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contract As Type, address As EndpointAddress) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(Type ^ contract, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="static member Resolve : Type * System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contract, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contract">Kontrakty, dla których należy pobrać i rozwiązać metadane.</param>
        <param name="address">Adres metadanych.</param>
        <summary>Pobiera i rozwiązuje adres metadanych do kolekcji <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonego kontraktu o określonym adresie.</summary>
        <returns>Kolekcja <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonego kontraktu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> Użyj metody, aby określić kontrakt i adres metadanych do użycia podczas pobierania i rozpoznawania metadanych.  
  
 Domyślne ustawienia w <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> programie są używane do pobierania metadanych, a wartość domyślna <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> to <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Aby pobrać metadane, ale nie rozwiązać informacji do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> Użyj bezpośrednio.  
  
> [!NOTE]
>  Pustą kolekcję zwraca się, jeśli nie zaimportowano żadnych punktów końcowych lub że punkty końcowe nie pasują do kontraktu. W przypadku zwrócenia pustej kolekcji zostanie zapisany ślad ostrzegawczy.  
  
 Ta metoda wymaga określenia typu kontraktu. Umowę można określić, deklarując interfejs usługi w kodzie klienta lub korzystając z klienta WCF wygenerowanego przez Svcutil. exe. Jeśli interfejs ulegnie zmianie (na przykład przy dodawaniu nowej operacji), należy zaktualizować interfejs w kodzie klienta lub wygenerować nowego klienta WCF. Jeśli tego nie zrobisz, zostanie zgłoszony wyjątek. Załóżmy na przykład, że masz usługę implementującą kontrakt usługi o nazwie ICalculator, który definiuje Dodawanie (), sub (), iloczyn () i DIV (). Tworzysz aplikację kliencką i wygenerujesz klienta WCF. Następnie można dodać metodę do ICalculator o nazwie Echo (). Jeśli następnie napiszesz aplikację, która wywołuje <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> bez generowania nowego klienta WCF, zostanie pobrany następujący wyjątek.  
  
 `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.ServiceModel.Description.MetadataResolver> klasy do zwracania metadanych jako <xref:System.ServiceModel.Description.ServiceEndpoint> kolekcji obiektów, które są następnie używane do nawiązania połączenia z wystąpieniem usługi.  
  
 [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres lub kontrakt to <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Description.MetadataExchangeClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, client As MetadataExchangeClient) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Description::MetadataExchangeClient ^ client);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * System.ServiceModel.EndpointAddress * System.ServiceModel.Description.MetadataExchangeClient -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, client)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
      </Parameters>
      <Docs>
        <param name="contracts">Kontrakty, dla których należy pobrać i rozwiązać metadane.</param>
        <param name="address">Adres metadanych.</param>
        <param name="client"><see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> Używane do pobierania metadanych.</param>
        <summary>Rozpoznaje adres metadanych w <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektach dla określonych kontraktów przy użyciu określonego adresu metadanych i. <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /></summary>
        <returns>Kolekcja <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonego kontraktu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> to <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Aby pobrać metadane, ale nie rozwiązać informacji do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> Użyj bezpośrednio.  
  
> [!NOTE]
>  Pustą kolekcję zwraca się, jeśli nie zaimportowano żadnych punktów końcowych lub że punkty końcowe nie pasują do kontraktu. W przypadku zwrócenia pustej kolekcji zostanie zapisany ślad ostrzegawczy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres, kolekcja kontraktów lub klient to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contracts" />jest pusty, co najmniej jeden element członkowski <paramref name="contracts" /> ma wartość null lub <paramref name="contracts" /> zawiera więcej niż jeden kontrakt o tej samej nazwie i przestrzeni nazw.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
      </Parameters>
      <Docs>
        <param name="contracts">Kontrakty, dla których należy pobrać i rozwiązać metadane.</param>
        <param name="address">Adres metadanych.</param>
        <param name="mode">Tryb pobierania.</param>
        <summary>Rozpoznaje adres metadanych w <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektach dla określonych kontraktów przy użyciu podanego adresu i trybu transferu.</summary>
        <returns>Kolekcja <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonego kontraktu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienia domyślne w <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> programie są używane do pobierania metadanych.  
  
 Aby pobrać metadane, ale nie rozwiązać informacji do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> Użyj bezpośrednio.  
  
> [!NOTE]
>  Pustą kolekcję zwraca się, jeśli nie zaimportowano żadnych punktów końcowych lub że punkty końcowe nie pasują do kontraktu. W przypadku zwrócenia pustej kolekcji zostanie zapisany ślad ostrzegawczy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Kolekcja adresów lub kontraktów to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contracts" />jest pusty, co najmniej jeden element członkowski <paramref name="contracts" /> ma wartość null lub <paramref name="contracts" /> zawiera więcej niż jeden kontrakt o tej samej nazwie i przestrzeni nazw.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Type contract, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contract As Type, address As Uri, mode As MetadataExchangeClientMode) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(Type ^ contract, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode);" />
      <MemberSignature Language="F#" Value="static member Resolve : Type * Uri * System.ServiceModel.Description.MetadataExchangeClientMode -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contract, address, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
      </Parameters>
      <Docs>
        <param name="contract">Kontrakt, dla którego mają zostać pobrane i rozwiązane metadane.</param>
        <param name="address">Adres metadanych.</param>
        <param name="mode">Tryb pobierania.</param>
        <summary>Rozwiązuje adres metadanych do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonego kontraktu przy użyciu określonego adresu i trybu transferu.</summary>
        <returns>Kolekcja <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonego kontraktu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> Użyj metody, aby określić kontrakt i adres oraz mechanizm pobierania do użycia.  
  
 Ustawienia domyślne w <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> programie są używane do pobierania metadanych.  
  
 Aby pobrać metadane, ale nie rozwiązać informacji do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> Użyj bezpośrednio.  
  
> [!NOTE]
>  Pustą kolekcję zwraca się, jeśli nie zaimportowano żadnych punktów końcowych lub że punkty końcowe nie pasują do kontraktu. W przypadku zwrócenia pustej kolekcji zostanie zapisany ślad ostrzegawczy.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak używać <xref:System.ServiceModel.Description.MetadataResolver> do pobierania i zwracania metadanych jako <xref:System.ServiceModel.Description.ServiceEndpoint> kolekcji obiektów przy użyciu żądania HTTP GET zamiast usługi WS-transfer.  
  
 [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres lub kontrakt to <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.ServiceModel.Description.MetadataExchangeClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, client As MetadataExchangeClient) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, System::ServiceModel::Description::MetadataExchangeClient ^ client);" />
      <MemberSignature Language="F#" Value="static member Resolve : seq&lt;System.ServiceModel.Description.ContractDescription&gt; * Uri * System.ServiceModel.Description.MetadataExchangeClientMode * System.ServiceModel.Description.MetadataExchangeClient -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="System.ServiceModel.Description.MetadataResolver.Resolve (contracts, address, mode, client)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
      </Parameters>
      <Docs>
        <param name="contracts">Kontrakty, dla których należy pobrać i rozwiązać metadane.</param>
        <param name="address">Adres metadanych.</param>
        <param name="mode">Tryb pobierania.</param>
        <param name="client"><see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> Używane do pobierania metadanych.</param>
        <summary>Rozpoznaje adres metadanych w <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektach dla określonych kontraktów przy użyciu określonego adresu, trybu transferu i klienta transferu.</summary>
        <returns>Kolekcja <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów dla określonego kontraktu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać metadane, ale nie rozwiązać informacji do <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów, <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> Użyj bezpośrednio.  
  
> [!NOTE]
>  Pustą kolekcję zwraca się, jeśli nie zaimportowano żadnych punktów końcowych lub że punkty końcowe nie pasują do kontraktu. W przypadku zwrócenia pustej kolekcji zostanie zapisany ślad ostrzegawczy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Adres, kolekcja kontraktów lub klient to <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contracts" />jest pusty, co najmniej jeden element członkowski <paramref name="contracts" /> ma wartość null lub <paramref name="contracts" /> zawiera więcej niż jeden kontrakt o tej samej nazwie i przestrzeni nazw.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
