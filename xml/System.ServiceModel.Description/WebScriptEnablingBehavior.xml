<Type Name="WebScriptEnablingBehavior" FullName="System.ServiceModel.Description.WebScriptEnablingBehavior">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dd8c4d8312e6080a99641171c65eed4e430c2c2f" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34315192" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebScriptEnablingBehavior : System.ServiceModel.Description.WebHttpBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebScriptEnablingBehavior extends System.ServiceModel.Description.WebHttpBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.WebScriptEnablingBehavior" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebScriptEnablingBehavior&#xA;Inherits WebHttpBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebScriptEnablingBehavior sealed : System::ServiceModel::Description::WebHttpBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Description.WebHttpBehavior</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia obsługę zachowanie umożliwia punktów końcowych usług Windows Communication Foundation (WCF) do odbierania żądań HTTP z przeglądarki klienta ASP.NET AJAX. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy jest stosowany do punktu końcowego <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> zachowanie umożliwia integrację usług WCF i platformy ASP.NET AJAX, z wyjątkiem obsługi wymagane do kodowania JavaScript Object Notation (JSON). Różne rodzaje kodowania, łącznie z formatu JSON, są włączane przez <xref:System.ServiceModel.Configuration.WebMessageEncodingElement> lub odpowiednio skonfigurowany <xref:System.ServiceModel.WebHttpBinding>. <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> Implementuje zachowanie <xref:System.ServiceModel.Description.IEndpointBehavior> i dziedziczy <xref:System.ServiceModel.Description.WebHttpBehavior>, co pozwala bardziej ogólne modelu programowania sieci Web dla usług WCF uwidaczniającą punktów końcowych z systemem innym niż SOAP.  
  
 W szczególności <xref:System.ServiceModel.Description.WebScriptEnablingBehavior>:  
  
-   Zapewnia model programowania protokołu HTTP, tym wysyłania do operacji w oparciu sufiks adresu URL, obsługę wybór zlecenie HTTP (POST lub GET) i kontroli czas trwania pamięci podręcznej HTTP. Aby uzyskać więcej informacji o modelu programowania protokołu HTTP, zobacz [programowania omówienie modelu WCF Web HTTP](~/docs/framework/wcf/feature-details/wcf-web-http-programming-model-overview.md). Należy pamiętać, że domyślna zlecenie HTTP POST korzystając z tego zachowania.  
  
-   Umożliwia poprawne program formatujący dla każdej operacji komunikatów żądań i odpowiedzi — na przykład Obsługa parametrów adresu URL.  
  
-   Umożliwia punktu końcowego serwera JavaScript Proxy.  
  
 Aby wywołać usługi WCF z klienta ASP.NET AJAX, usługa musi być skonfigurowany z <xref:System.ServiceModel.WebHttpBinding> powiązania i <xref:System.ServiceModel.Description.WebScriptEnablingBehavior> musi zostać dodany do kolekcji zachowania punktu końcowego. Można to zrobić w konfiguracji przez dodanie <xref:System.ServiceModel.Configuration.WebScriptEnablingElement> lub bez używania konfiguracji przez aktywowanie punktu końcowego AJAX z <xref:System.ServiceModel.Activation.WebScriptServiceHostFactory> zamiast domyślną fabrykę w [ @ServiceHost ](~/docs/framework/configure-apps/file-schema/wcf-directive/servicehost.md) dyrektywę SVC plik.  
  
 Aby uzyskać więcej informacji o różnych sposobów włączania usługi WCF odpowiadają klientom ASP.NET AJAX, zobacz [tworzenie usług WCF dla środowiska ASP.NET AJAX](~/docs/framework/wcf/feature-details/creating-wcf-services-for-aspnet-ajax.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebScriptEnablingBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebScriptEnablingBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebScriptEnablingBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Description.WebScriptEnablingBehavior" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawia <xref:System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultBodyStyle%2A> do <xref:System.ServiceModel.Web.WebMessageBodyStyle.WrappedRequest> wartości.  
  
 Ustawia <xref:System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultOutgoingRequestFormat%2A> i <xref:System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultOutgoingResponseFormat%2A> do <xref:System.ServiceModel.Web.WebMessageBodyStyle.WrappedRequest> wartości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClientErrorInspector">
      <MemberSignature Language="C#" Value="protected override void AddClientErrorInspector (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime clientRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddClientErrorInspector(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.ClientRuntime clientRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebScriptEnablingBehavior.AddClientErrorInspector(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddClientErrorInspector(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ clientRuntime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="clientRuntime" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="clientRuntime">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddServerErrorHandlers">
      <MemberSignature Language="C#" Value="protected override void AddServerErrorHandlers (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddServerErrorHandlers(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebScriptEnablingBehavior.AddServerErrorHandlers(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddServerErrorHandlers(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::EndpointDispatcher ^ endpointDispatcher);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="endpointDispatcher" Type="System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="endpointDispatcher">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyClientBehavior">
      <MemberSignature Language="C#" Value="public override void ApplyClientBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime clientRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyClientBehavior(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.ClientRuntime clientRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebScriptEnablingBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyClientBehavior(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ clientRuntime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="clientRuntime" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="endpoint">
          <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> Który uwidacznia kontraktu.</param>
        <param name="clientRuntime">
          <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> w których jest stosowane zachowanie niestandardowych.</param>
        <summary>Stosuje zachowanie klienta dla punktu końcowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementuje <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%28System.ServiceModel.Description.ServiceEndpoint%2CSystem.ServiceModel.Dispatcher.ClientRuntime%29> metodę, aby wyświetlić, modyfikowanie lub Dodawanie niestandardowego rozszerzenia do środowiska uruchomieniowego klienta, we wszystkich wiadomości z punktem końcowym lub dla określonej operacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public override void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebScriptEnablingBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyDispatchBehavior(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::EndpointDispatcher ^ endpointDispatcher);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="endpointDispatcher" Type="System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </Parameters>
      <Docs>
        <param name="endpoint">
          <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> Który uwidacznia kontraktu.</param>
        <param name="endpointDispatcher">
          <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> w których jest stosowane zachowanie niestandardowych.</param>
        <summary>Dotyczy to zachowanie punktu końcowego usługi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle ta metoda jest wywoływana przez Windows Communication Foundation (WCF) automatycznie po zastosowaniu zachowania punktu końcowego. Dlatego nie istnieje potrzeba aby wywołać tę metodę ręcznie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticFormatSelectionEnabled">
      <MemberSignature Language="C#" Value="public override bool AutomaticFormatSelectionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticFormatSelectionEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebScriptEnablingBehavior.AutomaticFormatSelectionEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutomaticFormatSelectionEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutomaticFormatSelectionEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy jest włączone automatyczne wybieranie formatu.</summary>
        <value>
          <see langword="true" /> Jeśli włączono automatyczne wybieranie formatu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat automatycznego wyboru formatu, zobacz [formatowania HTTP sieci Web WCF](~/docs/framework/wcf/feature-details/wcf-web-http-formatting.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultBodyStyle">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Web.WebMessageBodyStyle DefaultBodyStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Web.WebMessageBodyStyle DefaultBodyStyle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultBodyStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultBodyStyle As WebMessageBodyStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::Web::WebMessageBodyStyle DefaultBodyStyle { System::ServiceModel::Web::WebMessageBodyStyle get(); void set(System::ServiceModel::Web::WebMessageBodyStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.WebMessageBodyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia domyślny styl treści komunikatu.</summary>
        <value>
          <see cref="F:System.ServiceModel.Web.WebMessageBodyStyle.WrappedRequest" /> Wartość. Ta wartość domyślna jest jedyną poprawną wartością.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Web.WebMessageBodyStyle.WrappedRequest> Wartość jest jedyną <xref:System.ServiceModel.Web.WebMessageBodyStyle> obsługiwane i ustawienie dowolnej innej wartości powoduje <xref:System.NotSupportedException> został zgłoszony.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Zestaw styl treści nie jest obsługiwana.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultOutgoingRequestFormat">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Web.WebMessageFormat DefaultOutgoingRequestFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Web.WebMessageFormat DefaultOutgoingRequestFormat" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultOutgoingRequestFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultOutgoingRequestFormat As WebMessageFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::Web::WebMessageFormat DefaultOutgoingRequestFormat { System::ServiceModel::Web::WebMessageFormat get(); void set(System::ServiceModel::Web::WebMessageFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.WebMessageFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia format domyślny komunikatu żądania wychodzącego.</summary>
        <value>
          <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> Używane przez wychodzące komunikaty żądania. Wartość domyślna to <see cref="F:System.ServiceModel.Web.WebMessageFormat.Json" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Zestaw format komunikatu nie jest prawidłową wartością <see cref="T:System.ServiceModel.Web.WebMessageFormat" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultOutgoingResponseFormat">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Web.WebMessageFormat DefaultOutgoingResponseFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Web.WebMessageFormat DefaultOutgoingResponseFormat" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebScriptEnablingBehavior.DefaultOutgoingResponseFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultOutgoingResponseFormat As WebMessageFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::Web::WebMessageFormat DefaultOutgoingResponseFormat { System::ServiceModel::Web::WebMessageFormat get(); void set(System::ServiceModel::Web::WebMessageFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.WebMessageFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera i ustawia format domyślny komunikatu odpowiedzi wychodzącej.</summary>
        <value>
          <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> Używane przez wychodzące wiadomości odpowiedzi. Wartość domyślna to <see cref="F:System.ServiceModel.Web.WebMessageFormat.Json" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Zestaw format komunikatu nie jest prawidłową wartością <see cref="T:System.ServiceModel.Web.WebMessageFormat" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FaultExceptionEnabled">
      <MemberSignature Language="C#" Value="public override bool FaultExceptionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FaultExceptionEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebScriptEnablingBehavior.FaultExceptionEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property FaultExceptionEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool FaultExceptionEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę określającą, czy wyjątek FaultException występuje podczas wystąpił wewnętrzny błąd serwera (kod stanu HTTP: 500) występuje.</summary>
        <value>Zwraca <see langword="true" /> Jeśli flaga jest włączone; w przeciwnym razie zwraca <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryStringConverter">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Dispatcher.QueryStringConverter GetQueryStringConverter (System.ServiceModel.Description.OperationDescription operationDescription);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.Dispatcher.QueryStringConverter GetQueryStringConverter(class System.ServiceModel.Description.OperationDescription operationDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebScriptEnablingBehavior.GetQueryStringConverter(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::Dispatcher::QueryStringConverter ^ GetQueryStringConverter(System::ServiceModel::Description::OperationDescription ^ operationDescription);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.QueryStringConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="operationDescription">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpEnabled">
      <MemberSignature Language="C#" Value="public override bool HelpEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HelpEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebScriptEnablingBehavior.HelpEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HelpEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HelpEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy strona pomocy REST usługi WCF jest włączone.</summary>
        <value>
          <see langword="true" /> Jeśli strona pomocy REST usługi WCF jest włączone; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat stronę pomocy REST usługi WCF, zobacz [strona pomocy usługi HTTP sieci Web WCF](~/docs/framework/wcf/feature-details/wcf-web-http-service-help-page.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WebScriptEnablingBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (endpoint As ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">
          <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> Który uwidacznia kontraktu.</param>
        <summary>Potwierdza, że punkt końcowy spełnia wymagania umożliwiające do działania jako punktu końcowego ASP.NET AJAX.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sprawdza, czy punkt końcowy nie jest `null`, używa schematy HTTP i HTTPS, nie używa <xref:System.Xml.Serialization.XmlSerializer>, użyje zlecenia GET protokołu HTTP albo POST, który <xref:System.ServiceModel.Channels.MessageVersion> powiązania ma wartość <xref:System.ServiceModel.Channels.MessageVersion.None%2A>, oraz że wiązanie zawiera <xref:System.ServiceModel.Channels.TransportBindingElement> gdzie <xref:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing%2A> ma ustawioną wartość `true`. Ta metoda sprawdza również, że nie ma żadnych nagłówków SOAP lub nazwy otoki dla metody lub inne aspekty nieobsługiwanej operacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Punkt końcowy nie spełnia jednego z wymagań dotyczących punktu końcowego ASP.NET AJAX jest.</exception>
      </Docs>
    </Member>
  </Members>
</Type>