<Type Name="IContractBehaviorAttribute" FullName="System.ServiceModel.Description.IContractBehaviorAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c49274278dbaf51e1412020923ae5709dcab6cca" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30572362" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IContractBehaviorAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContractBehaviorAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IContractBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContractBehaviorAttribute" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContractBehaviorAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Określa kontrakt, dla których atrybut, który implementuje <see cref="T:System.ServiceModel.Description.IContractBehavior" /> interfejs jest aktywny.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementowanie <xref:System.ServiceModel.Description.IContractBehaviorAttribute> interfejsu na atrybut, który jest również <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> obiektu na korzystanie z tego atrybutu zachowanie kontraktu na typ usługi, ograniczając jego stosowanie kontrakt określony w <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A> właściwości.  
  
 Nie jest wymagane do zaimplementowania <xref:System.ServiceModel.Description.IContractBehaviorAttribute> niestandardowe kontraktu atrybutów zachowania, a jeśli atrybut jest stosowany do interfejsu kontraktu lub dwustronnego wywołania zwrotnego w klasie wartości <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A> właściwość jest ignorowana.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu zakłada niestandardowego <xref:System.ServiceModel.Dispatcher.IInstanceProvider?displayProperty=nameWithType> implementacja wywołuje `ObjectProviderBehavior` zapewnia zachowanie "singleton"; zawsze zwraca tego samego wystąpienia usługi i nie jest odtwarzana.  
  
 Aby wstawić Dostosowywanie dostawcy wystąpienia, w przykładzie przedstawiono sposób do zaimplementowania atrybutu niestandardowego (`SingletonBehaviorAttribute`), który zawiera <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> do wstawienia niestandardowych wystąpienie usługodawcy. Implementuje również <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, który wiąże aplikacji w celu `ISampleService` kontraktu.  
  
 [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]
 [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="TargetContract">
      <MemberSignature Language="C#" Value="public Type TargetContract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TargetContract" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetContract As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TargetContract { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ kontraktu zachowanie kontraktu jest stosowana.</summary>
        <value>Kontrakt zachowanie kontraktu jest stosowana.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wdrożenie <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A> właściwości w celu określenia kontraktu, do którego zachowanie kontraktu jest stosowana, gdy implementujący <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> atrybut jest stosowany do klasy usługi.  
  
   
  
## Examples  
 Poniższy przykład kodu zakłada niestandardowego <xref:System.ServiceModel.Dispatcher.IInstanceProvider?displayProperty=nameWithType> implementacja wywołuje `ObjectProviderBehavior` zapewnia zachowanie "singleton"; zawsze zwraca tego samego wystąpienia usługi i nie jest odtwarzana.  
  
 Aby wstawić Dostosowywanie dostawcy wystąpienia, w przykładzie przedstawiono sposób do zaimplementowania atrybutu niestandardowego (`SingletonBehaviorAttribute`), który zawiera <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> do wstawienia niestandardowych wystąpienie usługodawcy. Implementuje również <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, który wiąże aplikacji w celu `ISampleService` kontraktu.  
  
 [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]
 [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>