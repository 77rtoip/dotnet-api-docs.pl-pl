<Type Name="IContractBehaviorAttribute" FullName="System.ServiceModel.Description.IContractBehaviorAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a3c43ff62124c0f674eb05a98269af33a5edaaf" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64036251" /></Metadata><TypeSignature Language="C#" Value="public interface IContractBehaviorAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContractBehaviorAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IContractBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContractBehaviorAttribute" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContractBehaviorAttribute" />
  <TypeSignature Language="F#" Value="type IContractBehaviorAttribute = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Określa umowy, dla których atrybut, który implementuje <see cref="T:System.ServiceModel.Description.IContractBehavior" /> interfejs jest aktywny.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementowanie <xref:System.ServiceModel.Description.IContractBehaviorAttribute> interfejsu na atrybut, który jest również <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> obiekt, aby umożliwić korzystanie z tego atrybutu zachowanie kontraktu na typ usługi, ale ograniczyć swoją aplikację kontrakt określony w <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A> właściwości.  
  
 Nie jest wymagane do zaimplementowania <xref:System.ServiceModel.Description.IContractBehaviorAttribute> niestandardowe kontraktu atrybutów zachowania, a jeśli ten atrybut jest stosowany do interfejsu kontraktu lub dwustronnego wywołania zwrotnego klasy wartości <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A> właściwość jest ignorowana.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu zakłada niestandardowego <xref:System.ServiceModel.Dispatcher.IInstanceProvider?displayProperty=nameWithType> wdrożenia o nazwie `ObjectProviderBehavior` zapewniający zachowanie "singleton"; zawsze zwraca to samo wystąpienie usługi i nie Kosza.  
  
 Aby wstawić Dostosowywanie dostawcy wystąpienia, w przykładzie pokazano sposób implementacji atrybut niestandardowy (`SingletonBehaviorAttribute`), który zawiera <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> do wstawienia niestandardowe wystąpienie usługodawcy. Implementuje także <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, który wiąże swoją aplikację `ISampleService` kontraktu.  
  
 [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]
 [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="TargetContract">
      <MemberSignature Language="C#" Value="public Type TargetContract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TargetContract" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetContract As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TargetContract { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetContract : Type" Usage="System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ kontraktu, do którego ma zastosowanie zachowanie kontraktu.</summary>
        <value>Kontrakt, w których stosuje się zachowanie kontraktu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementowanie <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A> właściwości w celu określenia umowy, do którego jest zachowanie kontraktu podczas zastosowane implementujący <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> atrybut jest stosowany do klasy usługi.  
  
   
  
## Examples  
 Poniższy przykład kodu zakłada niestandardowego <xref:System.ServiceModel.Dispatcher.IInstanceProvider?displayProperty=nameWithType> wdrożenia o nazwie `ObjectProviderBehavior` zapewniający zachowanie "singleton"; zawsze zwraca to samo wystąpienie usługi i nie Kosza.  
  
 Aby wstawić Dostosowywanie dostawcy wystąpienia, w przykładzie pokazano sposób implementacji atrybut niestandardowy (`SingletonBehaviorAttribute`), który zawiera <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> do wstawienia niestandardowe wystąpienie usługodawcy. Implementuje także <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, który wiąże swoją aplikację `ISampleService` kontraktu.  
  
 [!code-csharp[IContractBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/icontractbehavior/cs/objectproviderbehavior.cs#2)]
 [!code-vb[IContractBehavior#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/icontractbehavior/vb/objectproviderbehavior.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>