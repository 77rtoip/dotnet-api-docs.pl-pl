<Type Name="ServiceHealthBehaviorBase" FullName="System.ServiceModel.Description.ServiceHealthBehaviorBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="99ade77e702fdcf5b7b19a1b3399ae4946209785" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53458002" /></Metadata><TypeSignature Language="C#" Value="public abstract class ServiceHealthBehaviorBase : System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ServiceHealthBehaviorBase extends System.Object implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceHealthBehaviorBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ServiceHealthBehaviorBase&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceHealthBehaviorBase abstract : System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type ServiceHealthBehaviorBase = class&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="675a1-101">Służy jako klasa bazowa dla zachowanie usługi Windows Communication Foundation (WCF), który udostępnia punkt końcowy kondycji.</span><span class="sxs-lookup"><span data-stu-id="675a1-101">Serves as the base class for a Windows Communication Foundation (WCF) service behavior that provides a health endpoint.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceHealthBehaviorBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehaviorBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ServiceHealthBehaviorBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="675a1-102">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Description.ServiceHealthBehaviorBase" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="675a1-102">Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceHealthBehaviorBase" /> class.</span></span></summary>
        <remarks><span data-ttu-id="675a1-103">Ten konstruktor jest <see langword="protected" />; może być wywołana tylko z klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="675a1-103">This constructor is <see langword="protected" />; it can only be called from a derived class.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleHealthRequest">
      <MemberSignature Language="C#" Value="public abstract void HandleHealthRequest (System.ServiceModel.ServiceHostBase serviceHost, System.ServiceModel.Channels.Message httpGetRequest, string[] queries, out System.ServiceModel.Channels.Message replyMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HandleHealthRequest(class System.ServiceModel.ServiceHostBase serviceHost, class System.ServiceModel.Channels.Message httpGetRequest, string[] queries, [out] class System.ServiceModel.Channels.Message&amp; replyMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehaviorBase.HandleHealthRequest(System.ServiceModel.ServiceHostBase,System.ServiceModel.Channels.Message,System.String[],System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub HandleHealthRequest (serviceHost As ServiceHostBase, httpGetRequest As Message, queries As String(), ByRef replyMessage As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void HandleHealthRequest(System::ServiceModel::ServiceHostBase ^ serviceHost, System::ServiceModel::Channels::Message ^ httpGetRequest, cli::array &lt;System::String ^&gt; ^ queries, [Runtime::InteropServices::Out] System::ServiceModel::Channels::Message ^ % replyMessage);" />
      <MemberSignature Language="F#" Value="abstract member HandleHealthRequest : System.ServiceModel.ServiceHostBase * System.ServiceModel.Channels.Message * string[] *  -&gt; unit" Usage="serviceHealthBehaviorBase.HandleHealthRequest (serviceHost, httpGetRequest, queries, replyMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceHost" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="httpGetRequest" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="queries" Type="System.String[]" />
        <Parameter Name="replyMessage" Type="System.ServiceModel.Channels.Message" RefType="out" />
      </Parameters>
      <Docs>
        <param name="serviceHost"><span data-ttu-id="675a1-104">Host usługi.</span><span class="sxs-lookup"><span data-stu-id="675a1-104">The service host.</span></span></param>
        <param name="httpGetRequest"><span data-ttu-id="675a1-105">Żądanie HTTP/Get lub HTTPS/Get.</span><span class="sxs-lookup"><span data-stu-id="675a1-105">The HTTP/Get or HTTPS/Get request.</span></span></param>
        <param name="queries"><span data-ttu-id="675a1-106">Zmienne w ciągu zapytania.</span><span class="sxs-lookup"><span data-stu-id="675a1-106">The variables in the query string.</span></span></param>
        <param name="replyMessage"><span data-ttu-id="675a1-107">Odpowiedź.</span><span class="sxs-lookup"><span data-stu-id="675a1-107">The response .</span></span></param>
        <summary><span data-ttu-id="675a1-108">Przetwarza żądanie HTTP/Get lub HTTPS/Get, a następnie zwraca odpowiedź.</span><span class="sxs-lookup"><span data-stu-id="675a1-108">Processes an HTTP/Get or HTTPS/Get request and returns a response.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HealthDetailsEnabled">
      <MemberSignature Language="C#" Value="public bool HealthDetailsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HealthDetailsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HealthDetailsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HealthDetailsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HealthDetailsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HealthDetailsEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HealthDetailsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="675a1-109">Pobiera lub ustawia wartość określającą, czy punkt końcowy kondycji powinna zwrócić szczegółowe informacje o usłudze, czy odpowiedź powinna zawierać żadnej zawartości.</span><span class="sxs-lookup"><span data-stu-id="675a1-109">Gets or sets a value that specifies if the health endpoint should return the service details or if the response should contain no content.</span></span></summary>
        <value><span data-ttu-id="675a1-110">Wartość, która określa, czy punkt końcowy kondycji powinna zwrócić szczegółowe informacje o usłudze, czy odpowiedź powinna zawierać żadnej zawartości.</span><span class="sxs-lookup"><span data-stu-id="675a1-110">A value that specifies if the health endpoint should return the service details or if the response should contain no content.</span></span> <span data-ttu-id="675a1-111">Jego wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="675a1-111">Its default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpGetBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpGetBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpGetBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpGetBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="675a1-112">Pobiera lub ustawia powiązanie, które służy do pobierania kondycji za pośrednictwem żądania HTTP/Get.</span><span class="sxs-lookup"><span data-stu-id="675a1-112">Gets or sets the binding that is used for health retrieval via an HTTP/Get request.</span></span></summary>
        <value><span data-ttu-id="675a1-113">Wiązanie używane do pobierania kondycji za pośrednictwem żądania HTTP/Get.</span><span class="sxs-lookup"><span data-stu-id="675a1-113">The binding used for health retrieval via an HTTP/Get request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="675a1-114">Ustawienie tej właściwości jest opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="675a1-114">Setting this property is optional.</span></span> <span data-ttu-id="675a1-115">Jeśli nie jest ustawiona, używane są domyślne powiązania.</span><span class="sxs-lookup"><span data-stu-id="675a1-115">If it is not set, the default bindings are used.</span></span> 

<span data-ttu-id="675a1-116">Tylko powiązania z elementami wewnętrznymi powiązania, które obsługują <xref:System.ServiceModel.Channels.IReplyChannel> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="675a1-116">Only bindings with inner binding elements that support <xref:System.ServiceModel.Channels.IReplyChannel> are supported.</span></span> <span data-ttu-id="675a1-117">Ponadto <xref:System.ServiceModel.Channels.Binding.MessageVersion> właściwości powiązania musi być <xref:System.ServiceModel.Channels.MessageVersion.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="675a1-117">In addition, the <xref:System.ServiceModel.Channels.Binding.MessageVersion> property of the binding must be <xref:System.ServiceModel.Channels.MessageVersion.None?displayProperty=nameWithType>.</span></span>

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="675a1-118">W operacji zestawu, adres Url <see cref="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetUrl" /> argument musi być względna lub jego schematu musi być "HTTP".</span><span class="sxs-lookup"><span data-stu-id="675a1-118">In a set operation, the Url of the <see cref="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetUrl" /> argument must be relative or its scheme must be "HTTP".</span></span>

<span data-ttu-id="675a1-119">—lub—</span><span class="sxs-lookup"><span data-stu-id="675a1-119">-or-</span></span>

<span data-ttu-id="675a1-120">Wersja komunikatu jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="675a1-120">The message version is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HttpGetEnabled">
      <MemberSignature Language="C#" Value="public bool HttpGetEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpGetEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpGetEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="675a1-121">Pobiera lub ustawia wartość określającą, czy publikować metadane usługi dla pobrania za pomocą żądania HTTP/Get.</span><span class="sxs-lookup"><span data-stu-id="675a1-121">Gets or sets a value that specifies whether to publish service metadata for retrieval using an HTTP/Get request.</span></span></summary>
        <value><span data-ttu-id="675a1-122">Wartość, która określa, czy publikować metadane usługi dla pobrania za pomocą żądania HTTP/Get.</span><span class="sxs-lookup"><span data-stu-id="675a1-122">A value that specifies whether to publish service metadata for retrieval using an HTTP/Get request.</span></span> <span data-ttu-id="675a1-123">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="675a1-123">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="675a1-124">Jeśli `httpGetUrl` atrybut nie zostanie określony, adres, w którym publikowane są metadane to usługa adres plus "? kondycji".</span><span class="sxs-lookup"><span data-stu-id="675a1-124">If the `httpGetUrl` attribute is not specified, the address to which the metadata is published is the service address plus "?health".</span></span> <span data-ttu-id="675a1-125">Na przykład, jeśli jest adres usługi `http://localhost:8080/CalculatorService`, adres metadanych HTTP/Get jest `http://localhost:8080/CalculatorService?health`.</span><span class="sxs-lookup"><span data-stu-id="675a1-125">For example, if the service address is `http://localhost:8080/CalculatorService`, the HTTP/Get metadata address is `http://localhost:8080/CalculatorService?health`.</span></span>

<span data-ttu-id="675a1-126">Jeśli ta właściwość jest `false`, czy adres usługi nie jest oparty na HTTP lub HTTPS, "? kondycji" zostanie zignorowany.</span><span class="sxs-lookup"><span data-stu-id="675a1-126">If this property is `false`, or if the address of the service is not based on HTTP or HTTPS, "?health" is ignored.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpGetUrl">
      <MemberSignature Language="C#" Value="public Uri HttpGetUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpGetUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpGetUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetUrl : Uri with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpGetUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="675a1-127">Pobiera lub ustawia identyfikator Uri Określa, że adres, na które metadanych została opublikowana na potrzeby pobierania za pomocą żądania HTTP/Get.</span><span class="sxs-lookup"><span data-stu-id="675a1-127">Gets or sets a Uri that specifes the address to which metadata is published for retrieval using an HTTP/Get request.</span></span></summary>
        <value><span data-ttu-id="675a1-128">Adres, w którym publikowane są metadane dla pobrania za pomocą żądania HTTP/Get.</span><span class="sxs-lookup"><span data-stu-id="675a1-128">The address to which metadata is published for retrieval using an HTTP/Get request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="675a1-129"><paramref name="value" /> należy użyć protokołu HTTP lub być względnym identyfikatorem Uri.</span><span class="sxs-lookup"><span data-stu-id="675a1-129"><paramref name="value" /> must use the HTTP protocol or be a relative Uri.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpsGetBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpsGetBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpsGetBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="675a1-130">Pobiera lub ustawia powiązanie, które służy do pobierania kondycji za pomocą żądania HTTPS/Get.</span><span class="sxs-lookup"><span data-stu-id="675a1-130">Gets or sets the binding that is used for health retrieval via an HTTPS/Get request.</span></span></summary>
        <value><span data-ttu-id="675a1-131">Wiązanie używane do pobierania kondycji za pomocą żądania HTTPS/Get.</span><span class="sxs-lookup"><span data-stu-id="675a1-131">The binding used for health retrieval via an HTTPS/Get request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="675a1-132">Ustawienie tej właściwości jest opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="675a1-132">Setting this property is optional.</span></span> <span data-ttu-id="675a1-133">Jeśli nie jest ustawiona, używane są domyślne powiązania.</span><span class="sxs-lookup"><span data-stu-id="675a1-133">If it is not set, the default bindings are used.</span></span> 

<span data-ttu-id="675a1-134">Tylko powiązania z elementami wewnętrznymi powiązania, które obsługują <xref:System.ServiceModel.Channels.IReplyChannel> są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="675a1-134">Only bindings with inner binding elements that support <xref:System.ServiceModel.Channels.IReplyChannel> are supported.</span></span> <span data-ttu-id="675a1-135">Ponadto <xref:System.ServiceModel.Channels.Binding.MessageVersion> właściwości powiązania musi być <xref:System.ServiceModel.Channels.MessageVersion.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="675a1-135">In addition, the <xref:System.ServiceModel.Channels.Binding.MessageVersion> property of the binding must be <xref:System.ServiceModel.Channels.MessageVersion.None?displayProperty=nameWithType>.</span></span>

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="675a1-136">W operacji zestawu, adres Url <see cref="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetUrl" /> argument musi być względna lub jego schematu musi być "HTTPS:".</span><span class="sxs-lookup"><span data-stu-id="675a1-136">In a set operation, the Url of the <see cref="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetUrl" /> argument must be relative or its scheme must be "HTTPS:".</span></span>

<span data-ttu-id="675a1-137">—lub—</span><span class="sxs-lookup"><span data-stu-id="675a1-137">-or-</span></span>

<span data-ttu-id="675a1-138">Wersja komunikatu jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="675a1-138">The message version is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetEnabled">
      <MemberSignature Language="C#" Value="public bool HttpsGetEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpsGetEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpsGetEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="675a1-139">Pobiera lub ustawia wartość określającą, czy publikować metadane usługi dla pobrania za pomocą żądania HTTPS/Get.</span><span class="sxs-lookup"><span data-stu-id="675a1-139">Gets or sets a value that specifies whether to publish service metadata for retrieval using an HTTPS/Get request.</span></span></summary>
        <value><span data-ttu-id="675a1-140">Wartość, która określa, czy publikować metadane usługi dla pobrania za pomocą żądania HTTPS/Get.</span><span class="sxs-lookup"><span data-stu-id="675a1-140">A value that specifies whether to publish service metadata for retrieval using an HTTPS/Get request.</span></span> <span data-ttu-id="675a1-141">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="675a1-141">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="675a1-142">Jeśli `httpsGetUrl` atrybut nie zostanie określony, adres, w którym publikowane są metadane to usługa adres plus "? kondycji".</span><span class="sxs-lookup"><span data-stu-id="675a1-142">If the `httpsGetUrl` attribute is not specified, the address to which the metadata is published is the service address plus "?health".</span></span> <span data-ttu-id="675a1-143">Na przykład, jeśli jest adres usługi `https://localhost:8080/CalculatorService`, adres metadanych HTTP/Get jest `https://localhost:8080/CalculatorService?health`.</span><span class="sxs-lookup"><span data-stu-id="675a1-143">For example, if the service address is `https://localhost:8080/CalculatorService`, the HTTP/Get metadata address is `https://localhost:8080/CalculatorService?health`.</span></span>

<span data-ttu-id="675a1-144">Jeśli ta właściwość jest `false`, czy adres usługi nie jest oparty na HTTP lub HTTPS, "? kondycji" zostanie zignorowany.</span><span class="sxs-lookup"><span data-stu-id="675a1-144">If this property is `false`, or if the address of the service is not based on HTTP or HTTPS, "?health" is ignored.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetUrl">
      <MemberSignature Language="C#" Value="public Uri HttpsGetUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpsGetUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpsGetUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetUrl : Uri with get, set" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.HttpsGetUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="675a1-145">Pobiera lub ustawia identyfikator Uri Określa, że adres, na które metadanych została opublikowana na potrzeby pobierania za pomocą żądania HTTPS/Get.</span><span class="sxs-lookup"><span data-stu-id="675a1-145">Gets or sets a Uri that specifes the address to which metadata is published for retrieval using an HTTPS/Get request.</span></span></summary>
        <value><span data-ttu-id="675a1-146">Adres, w którym publikowane są metadane dla pobrania za pomocą żądania HTTPS/Get.</span><span class="sxs-lookup"><span data-stu-id="675a1-146">The address to which metadata is published for retrieval using an HTTPS/Get request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="675a1-147"><paramref name="value" /> należy używać protokołu HTTPS lub być względnym identyfikatorem Uri.</span><span class="sxs-lookup"><span data-stu-id="675a1-147"><paramref name="value" /> must use the HTTPS protocol or be a relative Uri.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServiceStartTime">
      <MemberSignature Language="C#" Value="protected DateTimeOffset ServiceStartTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset ServiceStartTime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceHealthBehaviorBase.ServiceStartTime" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceStartTime As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property DateTimeOffset ServiceStartTime { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceStartTime : DateTimeOffset" Usage="System.ServiceModel.Description.ServiceHealthBehaviorBase.ServiceStartTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="675a1-148">Pobiera datę i godzinę uruchomienia usługi sprawdzania kondycji.</span><span class="sxs-lookup"><span data-stu-id="675a1-148">Gets the date and time that the health check service started.</span></span></summary>
        <value><span data-ttu-id="675a1-149">Data i godzina rozpoczęcia przez usługę sprawdzania kondycji.</span><span class="sxs-lookup"><span data-stu-id="675a1-149">The date and time that the health check service started.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehaviorBase.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="675a1-150">Opis usługi.</span><span class="sxs-lookup"><span data-stu-id="675a1-150">The service description.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="675a1-151">Host usługi.</span><span class="sxs-lookup"><span data-stu-id="675a1-151">The service host.</span></span></param>
        <param name="endpoints"><span data-ttu-id="675a1-152">Punkty końcowe usługi.</span><span class="sxs-lookup"><span data-stu-id="675a1-152">The service endpoints.</span></span></param>
        <param name="parameters"><span data-ttu-id="675a1-153">Kolekcja obiektów niestandardowych do powiązania, które elementy mają dostęp.</span><span class="sxs-lookup"><span data-stu-id="675a1-153">A collection of custom objects to which binding elements have access.</span></span></param>
        <summary><span data-ttu-id="675a1-154">Przekazuje dane niestandardowe do elementów, aby obsługiwać implementację skontaktuj się z pomocą wiązania.</span><span class="sxs-lookup"><span data-stu-id="675a1-154">Passes custom data to binding elements to support the contact implementation.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="675a1-155"><paramref name="parameters" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="675a1-155"><paramref name="parameters" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehaviorBase.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="675a1-156">Opis usługi.</span><span class="sxs-lookup"><span data-stu-id="675a1-156">The service description.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="675a1-157">Host usługi, który jest aktualnie kompilowana.</span><span class="sxs-lookup"><span data-stu-id="675a1-157">The service host that is currently being built.</span></span></param>
        <summary><span data-ttu-id="675a1-158">Zmiany wartości właściwości czasu wykonywania lub wstawia rozszerzenia niestandardowe obiekty, takie jak procedury obsługi błędów, wiadomości lub parametr interceptory, rozszerzeń zabezpieczeń i innych obiektów niestandardowego rozszerzenia.</span><span class="sxs-lookup"><span data-stu-id="675a1-158">Changes run-time property values or inserts custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="675a1-159">Dyspozytor kanału nie obsługuje systemu.</span><span class="sxs-lookup"><span data-stu-id="675a1-159">The channel dispatcher does not support the scheme.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceHealthBehaviorBase.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="675a1-160">Opis usługi.</span><span class="sxs-lookup"><span data-stu-id="675a1-160">The service description.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="675a1-161">Host usługi do sprawdzania poprawności.</span><span class="sxs-lookup"><span data-stu-id="675a1-161">The service host to validate.</span></span></param>
        <summary><span data-ttu-id="675a1-162">Bada hosta usługi oraz opis usługi, aby upewnić się, że usługa może działać pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="675a1-162">Inspects the service host and the service description to confirm that the service can run successfully.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="675a1-163">Brak zduplikowane zachowanie.</span><span class="sxs-lookup"><span data-stu-id="675a1-163">There is a duplicate behavior.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>