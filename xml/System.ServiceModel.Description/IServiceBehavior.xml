<Type Name="IServiceBehavior" FullName="System.ServiceModel.Description.IServiceBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8f180c5c844145924ad16b66d821004bfbce2f07" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69152694" /></Metadata><TypeSignature Language="C#" Value="public interface IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Interface IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public interface class IServiceBehavior" />
  <TypeSignature Language="F#" Value="type IServiceBehavior = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ee7c9-101">Oferuje mechanizm modyfikowania lub wstawiania rozszerzeń niestandardowych w całej usłudze, w tym <see cref="T:System.ServiceModel.ServiceHostBase" />.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-101">Provides a mechanism to modify or insert custom extensions across an entire service, including the <see cref="T:System.ServiceModel.ServiceHostBase" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee7c9-102">Zaimplementuj <xref:System.ServiceModel.Description.IServiceBehavior> , aby zmodyfikować, przeanalizować lub rozłożyć pewne aspekty wykonania usługi na poziomie aplikacji:</span><span class="sxs-lookup"><span data-stu-id="ee7c9-102">Implement <xref:System.ServiceModel.Description.IServiceBehavior> to modify, examine, or extend some aspect of service-wide execution at the application level:</span></span>  
  
-   <span data-ttu-id="ee7c9-103">Użyj metody <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> , aby zmienić wartości właściwości czasu wykonywania lub wstawić niestandardowe obiekty rozszerzeń, takie jak programy obsługi błędów, przechwycenia komunikatów lub parametrów, rozszerzenia zabezpieczeń i inne niestandardowe obiekty rozszerzeń.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-103">Use the <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> method to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</span></span>  
  
-   <span data-ttu-id="ee7c9-104"><xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> Użyj metody, aby sprawdzić opis przed Windows Communication Foundation (WCF) konstruuje uruchomioną usługę, aby potwierdzić, że może ona działać prawidłowo.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-104">Use the <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> method to examine the description before Windows Communication Foundation (WCF) constructs the executing service to confirm that it can execute properly.</span></span>  
  
-   <span data-ttu-id="ee7c9-105"><xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> Użyj metody, aby przekazać elementowi powiązania informacje niestandardowe dotyczące usługi, dzięki czemu może ona prawidłowo obsługiwać usługę.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-105">Use the <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> method to pass to a binding element the custom information for the service so that it can support the service correctly.</span></span>  
  
 <span data-ttu-id="ee7c9-106"><xref:System.ServiceModel.Description.IServiceBehavior>obiekty mogą korzystać z dowolnej z tych metod, ale często tylko jeden jest ważny; w takich przypadkach nieużywane metody mogą zwracać bez wartości.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-106"><xref:System.ServiceModel.Description.IServiceBehavior> objects can make use of any of these methods, but often only one is important; in such cases the unused methods can return without a value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ee7c9-107">Wszystkie metody są <xref:System.ServiceModel.Description.IServiceBehavior> przekazywane <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> i <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> obiekty jako parametry.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-107">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="ee7c9-108"><xref:System.ServiceModel.Description.ServiceDescription> Parametr służy wyłącznie do celów egzaminacyjnych. w przypadku modyfikacji tych obiektów zachowanie wykonywania nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-108">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination only; if you modify these objects the execution behavior is undefined.</span></span>  
  
 <span data-ttu-id="ee7c9-109">Aby wykonać zadanie dostosowania, dla którego jest zamierzone, <xref:System.ServiceModel.Description.IServiceBehavior> należy dodać obiekt <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> do właściwości przed konstrukcją środowiska uruchomieniowego usługi.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-109">To perform the customization task for which it is intended, the <xref:System.ServiceModel.Description.IServiceBehavior> object must be added to the <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> property prior to the construction of the service runtime.</span></span> <span data-ttu-id="ee7c9-110">Istnieją trzy sposoby, aby to zrobić:</span><span class="sxs-lookup"><span data-stu-id="ee7c9-110">There are three ways to do this:</span></span>  
  
-   <span data-ttu-id="ee7c9-111">Programowo Dodaj zachowanie usługi niestandardowej do <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> właściwości przed punktem, w <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> którym <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType> Metoda jest wywoływana dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-111">Programmatically add the custom service behavior to the <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> property prior to the point where the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType> object.</span></span>  
  
-   <span data-ttu-id="ee7c9-112">Utwórz atrybut niestandardowy, który implementuje <xref:System.ServiceModel.Description.IServiceBehavior> i użyje go, aby oznaczyć klasy usług, które mają zostać zmodyfikowane.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-112">Create a custom attribute that implements <xref:System.ServiceModel.Description.IServiceBehavior> and use it to mark service classes that are to be modified.</span></span> <span data-ttu-id="ee7c9-113"><xref:System.ServiceModel.ServiceHost> Gdy obiekt jest skonstruowany, WCF używa odbicia w celu odnajdywania atrybutów typu usługi.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-113">When a <xref:System.ServiceModel.ServiceHost> object is constructed, WCF uses reflection to discover the attributes on the service type.</span></span> <span data-ttu-id="ee7c9-114">Jeśli wszystkie atrybuty zaimplementują <xref:System.ServiceModel.Description.IServiceBehavior>, są dodawane do kolekcji zachowań w. <xref:System.ServiceModel.Description.ServiceDescription></span><span class="sxs-lookup"><span data-stu-id="ee7c9-114">If any attributes implement <xref:System.ServiceModel.Description.IServiceBehavior>, they are added to the behaviors collection on <xref:System.ServiceModel.Description.ServiceDescription>.</span></span>  
  
-   <span data-ttu-id="ee7c9-115"><xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> Rozwiń klasę, aby obsłużyć specyfikację zachowania w pliku konfiguracji aplikacji lub komputera.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-115">Extend the <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> class to support the specification of the behavior in an application or machine configuration file.</span></span> <span data-ttu-id="ee7c9-116">Zobacz sekcję przykładową, aby uzyskać więcej informacji.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-116">See the Example section for more information.</span></span>  
  
 <span data-ttu-id="ee7c9-117">Przykłady zachowań usługi w programie WCF <xref:System.ServiceModel.ServiceBehaviorAttribute> obejmują atrybut <xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=nameWithType> a i <xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=nameWithType> zachowanie.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-117">Examples of service behaviors in WCF include the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute, the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=nameWithType>, the <xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=nameWithType> and the <xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=nameWithType> behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee7c9-118">Poniższy przykład kodu pokazuje użycie zachowania usługi określonego w pliku konfiguracyjnym do wstawienia niestandardowego programu obsługi błędów w aplikacji usługi.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-118">The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</span></span> <span data-ttu-id="ee7c9-119">W tym przykładzie program obsługi błędów przechwytuje wszystkie wyjątki i konwertuje je na niestandardowy `GreetingFault` błąd protokołu SOAP, który jest następnie zwracany do klienta.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-119">In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.</span></span>  
  
 <span data-ttu-id="ee7c9-120">Następująca <xref:System.ServiceModel.Description.IServiceBehavior> implementacja nie dodaje obiektów parametrów powiązania, dodaje obiekt niestandardowy <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> do każdej <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> właściwości i sprawdza, czy każda operacja usługi, do której zastosowano zachowanie usługi, ma <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> typu`GreetingFault`.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-120">The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> of type `GreetingFault`.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="ee7c9-121">W tym przykładzie zaimplementowano <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>również klasę Behavior, która umożliwia wstawianie zachowania usługi przy użyciu go w pliku konfiguracyjnym aplikacji, jak pokazano w poniższym przykładzie kodu.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-121">In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberSignature Language="F#" Value="abstract member AddBindingParameters : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="iServiceBehavior.AddBindingParameters (serviceDescription, serviceHostBase, endpoints, bindingParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="serviceDescription"><span data-ttu-id="ee7c9-122">Opis usługi usługi.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-122">The service description of the service.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="ee7c9-123">Host usługi.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-123">The host of the service.</span></span></param>
        <param name="endpoints"><span data-ttu-id="ee7c9-124">Punkty końcowe usługi.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-124">The service endpoints.</span></span></param>
        <param name="bindingParameters"><span data-ttu-id="ee7c9-125">Obiekty niestandardowe, do których elementy powiązania mają dostęp.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-125">Custom objects to which binding elements have access.</span></span></param>
        <summary><span data-ttu-id="ee7c9-126">Zapewnia możliwość przekazywania niestandardowych danych do elementów powiązania w celu obsługi implementacji kontraktu.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-126">Provides the ability to pass custom data to binding elements to support the contract implementation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee7c9-127">Użyj metody, aby dodać `parameters` do kolekcji niestandardowe obiekty danych, których elementy powiązania mogą użyć do uzyskania dodatkowych informacji, aby umożliwić im obsługę kontraktu. <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A></span><span class="sxs-lookup"><span data-stu-id="ee7c9-127">Use the <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> method to add custom data objects to the `parameters` collection that binding elements can use to acquire extra information to enable them to support the contract.</span></span>  
  
 <span data-ttu-id="ee7c9-128">Ta metoda jest wywoływana jednokrotnie dla każdego identyfikatora URI nasłuchiwania.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-128">This method is called once for each listen URI.</span></span> <span data-ttu-id="ee7c9-129">Na przykład jeśli usługa ma cztery punkty końcowe, a dwa z nich mają ten sam identyfikator URI nasłuchiwania, ta metoda jest wywoływana trzy razy.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-129">For example, if a service has four endpoints, and two of them have the same listen URI, then this method gets called three times.</span></span> <span data-ttu-id="ee7c9-130">Przyczyną jest to, że `bindingParameters` docelowy Każdy stos kanałów i istnieje jeden stos kanału dla każdego identyfikatora URI nasłuchiwania.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-130">The reason is that the `bindingParameters` target each channel stack and there is one channel stack for each listen URI.</span></span> <span data-ttu-id="ee7c9-131">Ponieważ każde wywołanie odbiera te punkty końcowe przy użyciu identyfikatora URI nasłuchiwania, dwa wywołania <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType>każdy uzyskują jeden, a jedno wywołanie pobiera <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType> kolekcję dwóch obiektów.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-131">Because each call receives those endpoints at that listen URI, two calls each get a single <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType>, and one call gets a collection of two <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType> objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ee7c9-132">Wszystkie metody są <xref:System.ServiceModel.Description.IServiceBehavior> przekazywane <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> i <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> obiekty jako parametry.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-132">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="ee7c9-133"><xref:System.ServiceModel.Description.ServiceDescription> Parametr służy do badania i wstawiania tylko dostosowań. w przypadku zmodyfikowania tych obiektów zachowanie wykonywania nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-133">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase);" />
      <MemberSignature Language="F#" Value="abstract member ApplyDispatchBehavior : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="iServiceBehavior.ApplyDispatchBehavior (serviceDescription, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceDescription"><span data-ttu-id="ee7c9-134">Opis usługi.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-134">The service description.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="ee7c9-135">Host, który jest aktualnie skompilowany.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-135">The host that is currently being built.</span></span></param>
        <summary><span data-ttu-id="ee7c9-136">Zapewnia możliwość zmiany wartości właściwości czasu wykonywania lub wstawiania niestandardowych obiektów rozszerzeń, takich jak programy obsługi błędów, Interceptory komunikatów lub parametrów, rozszerzenia zabezpieczeń i inne niestandardowe obiekty rozszerzeń.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-136">Provides the ability to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee7c9-137">Zaimplementuj <xref:System.ServiceModel.ServiceHostBase> metodę w celu sprawdzenia lub modyfikacji obiektu, który jest konstruowany w celu obsługi pewnego niestandardowego scenariusza wykonywania. <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A></span><span class="sxs-lookup"><span data-stu-id="ee7c9-137">Implement the <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> method to inspect or modify the <xref:System.ServiceModel.ServiceHostBase> object that is being constructed in order to support some custom execution scenario.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ee7c9-138">Wszystkie metody są <xref:System.ServiceModel.Description.IServiceBehavior> przekazywane <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> i <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> obiekty jako parametry.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-138">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="ee7c9-139"><xref:System.ServiceModel.Description.ServiceDescription> Parametr służy do badania i wstawiania tylko dostosowań. w przypadku zmodyfikowania tych obiektów zachowanie wykonywania nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-139">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee7c9-140">Poniższy przykład kodu pokazuje użycie zachowania usługi określonego w pliku konfiguracyjnym do wstawienia niestandardowego programu obsługi błędów w aplikacji usługi.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-140">The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</span></span> <span data-ttu-id="ee7c9-141">W tym przykładzie program obsługi błędów przechwytuje wszystkie wyjątki i konwertuje je na niestandardowy `GreetingFault` błąd protokołu SOAP, który jest następnie zwracany do klienta.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-141">In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.</span></span>  
  
 <span data-ttu-id="ee7c9-142">Następująca <xref:System.ServiceModel.Description.IServiceBehavior> implementacja nie dodaje obiektów parametrów powiązania, dodaje obiekt niestandardowy <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> do każdej <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> właściwości i sprawdza, czy każda operacja usługi, do której zastosowano zachowanie usługi, ma <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> typu`GreetingFault`.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-142">The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> of type `GreetingFault`.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="ee7c9-143">W tym przykładzie zaimplementowano <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>również klasę Behavior, która umożliwia wstawianie zachowania usługi przy użyciu go w pliku konfiguracyjnym aplikacji, jak pokazano w poniższym przykładzie kodu.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-143">In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="iServiceBehavior.Validate (serviceDescription, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceDescription"><span data-ttu-id="ee7c9-144">Opis usługi.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-144">The service description.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="ee7c9-145">Aktualnie tworzony Host usługi.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-145">The service host that is currently being constructed.</span></span></param>
        <summary><span data-ttu-id="ee7c9-146">Zapewnia możliwość sprawdzenia hosta usługi i opisu usługi w celu potwierdzenia, że usługa może zostać pomyślnie uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-146">Provides the ability to inspect the service host and the service description to confirm that the service can run successfully.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee7c9-147">Użyj metody <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> , aby upewnić się, czy bieżąca usługa może działać prawidłowo zgodnie z Twoim scenariuszem.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-147">Use the <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> method to confirm whether the current service can execute properly according to your scenario.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ee7c9-148">Wszystkie metody są <xref:System.ServiceModel.Description.IServiceBehavior> przekazywane <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> i <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> obiekty jako parametry.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-148">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="ee7c9-149"><xref:System.ServiceModel.Description.ServiceDescription> Parametr służy do badania i wstawiania tylko dostosowań. w przypadku zmodyfikowania tych obiektów zachowanie wykonywania nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-149">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee7c9-150">Poniższy przykład kodu pokazuje użycie zachowania usługi określonego w pliku konfiguracyjnym do wstawienia niestandardowego programu obsługi błędów w aplikacji usługi.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-150">The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</span></span> <span data-ttu-id="ee7c9-151">W tym przykładzie program obsługi błędów przechwytuje wszystkie wyjątki i konwertuje je na niestandardowy `GreetingFault` błąd protokołu SOAP, który jest następnie zwracany do klienta.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-151">In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.</span></span>  
  
 <span data-ttu-id="ee7c9-152">Następująca <xref:System.ServiceModel.Description.IServiceBehavior> implementacja nie dodaje obiektów parametrów powiązania, dodaje obiekt niestandardowy <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> do każdej <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> właściwości i sprawdza, czy każda operacja usługi, do której zastosowano zachowanie usługi, ma <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> typu`GreetingFault`.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-152">The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> of type `GreetingFault`.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="ee7c9-153">W tym przykładzie zaimplementowano <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>również klasę Behavior, która umożliwia wstawianie zachowania usługi przy użyciu go w pliku konfiguracyjnym aplikacji, jak pokazano w poniższym przykładzie kodu.</span><span class="sxs-lookup"><span data-stu-id="ee7c9-153">In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
