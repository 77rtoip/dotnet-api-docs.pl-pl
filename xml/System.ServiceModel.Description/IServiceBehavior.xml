<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IServiceBehavior.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b723d08671b5f1e88e283ba03f6a467bbef0c30b5ce.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d08671b5f1e88e283ba03f6a467bbef0c30b5ce</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Provides a mechanism to modify or insert custom extensions across an entire service, including the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>.</source>
          <target state="translated">Udostępnia mechanizm do modyfikacji lub Wstaw niestandardowych rozszerzeń w całej usługi, w tym <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Implement <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> to modify, examine, or extend some aspect of service-wide execution at the application level:</source>
          <target state="translated">Implementowanie <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> do zmodyfikowania, przeglądanie i rozszerzać niektórych aspektów wykonanie całej usługi na poziomie aplikacji:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A&gt;</ph> metoda zmiany wartości właściwości czasu wykonywania, lub Wstaw rozszerzenie niestandardowe obiekty, takie jak programy obsługi błędów, interceptory wiadomości lub parametr rozszerzeń zabezpieczeń i inne obiekty rozszerzenia niestandardowego.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A&gt;</ph> method to examine the description before <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> constructs the executing service to confirm that it can execute properly.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A&gt;</ph> metody do sprawdzenia opis przed <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> tworzy wykonywania usługi, aby upewnić się, że można wykonać poprawnie.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A&gt;</ph> method to pass to a binding element the custom information for the service so that it can support the service correctly.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A&gt;</ph> metody do przekazania do elementu powiązania niestandardowych informacji dla usługi, aby poprawnie obsługuje usługę.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> objects can make use of any of these methods, but often only one is important; in such cases the unused methods can return without a value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> obiekty można wprowadzać użyć dowolnej z tych metod, ale często jest tylko jeden ważne; w takich przypadkach nieużywane metody może zwracać wartości.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> objects as a parameters.</source>
          <target state="translated">Wszystkie <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> przekazać metody <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> i <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> obiektów jako parametry.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination only; if you modify these objects the execution behavior is undefined.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> Parametr jest używany tylko badania; w przypadku modyfikowania tych obiektów sposób wykonywania jest niezdefiniowana.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>To perform the customization task for which it is intended, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> property prior to the construction of the service runtime.</source>
          <target state="translated">Do wykonania zadania dostosowania, dla których ma mieć miejsce, <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> można dodać obiektu do <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> właściwości przed konstrukcji środowiska uruchomieniowego usługi.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>There are three ways to do this:</source>
          <target state="translated">Istnieją trzy sposoby, w tym:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Programmatically add the custom service behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> property prior to the point where the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method is called on the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">Programowo dodać zachowanie usługi niestandardowej w <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> właściwości przed punkt gdzie <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> wywoływana jest metoda <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Create a custom attribute that implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> and use it to mark service classes that are to be modified.</source>
          <target state="translated">Tworzenie niestandardowego atrybutu, który implementuje <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> i użyj go, aby oznaczyć klasy usługi, które mają być modyfikowane.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>When a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object is constructed, WCF uses reflection to discover the attributes on the service type.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> konstruowania obiektu, usługi WCF używa odbicia do odnajdywania atrybutów dla typu usługi.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>If any attributes implement <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph>, they are added to the behaviors collection on <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph>.</source>
          <target state="translated">Jeśli wdrożenie żadnych atrybutów <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph>, są one dodawane do kolekcji zachowań na <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Extend the <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph> class to support the specification of the behavior in an application or machine configuration file.</source>
          <target state="translated">Rozszerzanie <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph> klasę, aby obsłużyć specyfikacji zachowania w aplikacji lub pliku konfiguracji komputera.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>See the Example section for more information.</source>
          <target state="translated">Zobacz sekcję przykład, aby uzyskać więcej informacji.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Examples of service behaviors in WCF include the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> attribute, the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=nameWithType&gt;</ph>, the <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=nameWithType&gt;</ph> and the <ph id="ph4">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=nameWithType&gt;</ph> behavior.</source>
          <target state="translated">Przykłady zachowania usługi programu WCF <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> atrybutu <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=nameWithType&gt;</ph> i <ph id="ph4">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=nameWithType&gt;</ph> zachowanie.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia zachowania usługi określony w pliku konfiguracji, który będzie wprowadzany obsługi błędów niestandardowych aplikacji usługi.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>In this example, the error handler catches all exceptions and converts them into a custom <ph id="ph1">`GreetingFault`</ph> SOAP fault that is then returned to the client.</source>
          <target state="translated">W tym przykładzie program obsługi błędów przechwytuje wszystkie wyjątki i konwertuje je na niestandardowego <ph id="ph1">`GreetingFault`</ph> błędu protokołu SOAP, który jest następnie zwracany do klienta.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>The following <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> implementation adds no binding parameter objects, adds the custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> object to each <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> property, and validates that each operation of the service to which the service behavior is applied and has a <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> of type <ph id="ph5">`GreetingFault`</ph>.</source>
          <target state="translated">Następujące <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> implementacji dodaje żadne obiekty parametru wiązania, dodaje niestandardowego <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> obiektu do każdego <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> właściwości i sprawdza, czy każdej operacji usługi, do którego jest stosowane zachowanie usługi i ma <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph>typu <ph id="ph5">`GreetingFault`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>In this example, the behavior class also implements <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</source>
          <target state="translated">W tym przykładzie również implementuje klasy zachowanie <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, które umożliwia zachowanie usługi, która ma zostać wstawiony przez użyciem jej w pliku konfiguracyjnym aplikacji, jak pokazano w poniższym przykładzie kodu.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The service description of the service.</source>
          <target state="translated">Opis usługi usługi.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The host of the service.</source>
          <target state="translated">Host usługi.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The service endpoints.</source>
          <target state="translated">Punkty końcowe usługi.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Custom objects to which binding elements have access.</source>
          <target state="translated">Niestandardowe obiekty do powiązania, które elementy mają dostęp.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Provides the ability to pass custom data to binding elements to support the contract implementation.</source>
          <target state="translated">Udostępnia możliwość przekazania danych niestandardowych do powiązania elementów do obsługi implementacji kontraktu.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A&gt;</ph> method to add custom data objects to the <ph id="ph2">`parameters`</ph> collection that binding elements can use to acquire extra information to enable them to support the contract.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A&gt;</ph> metody w celu dodania niestandardowych danych obiekty do <ph id="ph2">`parameters`</ph> kolekcji elementów wiązania można użyć, aby uzyskać dodatkowe informacje, aby umożliwić im obsługuje kontraktu.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>This method is called once for each listen URI.</source>
          <target state="translated">Ta metoda jest wywoływana raz dla każdego identyfikatora URI nasłuchiwania.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>For example, if a service has four endpoints, and two of them have the same listen URI, then this method gets called three times.</source>
          <target state="translated">Na przykład jeśli usługa ma cztery punkty końcowe i dwa z nich jest taki sam identyfikator URI nasłuchiwania, a następnie ta metoda jest wywoływana trzy razy.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The reason is that the <ph id="ph1">`bindingParameters`</ph> target each channel stack and there is one channel stack for each listen URI.</source>
          <target state="translated">Przyczyną jest to, że <ph id="ph1">`bindingParameters`</ph> docelową każdego stosu kanału i jeden stos kanał dla każdego identyfikatora URI nasłuchiwania.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Because each call receives those endpoints at that listen URI, two calls each get a single <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph>, and one call gets a collection of two <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> objects.</source>
          <target state="translated">Ponieważ każde wywołanie otrzymuje te punkty końcowe w tym identyfikatora URI nasłuchiwania, dwa wywołuje get każdego pojedynczego <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph>, i jedno wywołanie pobiera kolekcję dwóch <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> objects as a parameters.</source>
          <target state="translated">Wszystkie <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> przekazać metody <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> i <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> obiektów jako parametry.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> Parametr jest badania i wstawiania tylko dostosowania; Jeśli inny sposób zmodyfikować te obiekty sposób wykonywania jest niezdefiniowana.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The service description.</source>
          <target state="translated">Opis usługi.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The host that is currently being built.</source>
          <target state="translated">Host, który jest obecnie tworzony.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>Provides the ability to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</source>
          <target state="translated">Zapewnia możliwość zmiany wartości właściwości w czasie wykonywania, lub Wstaw rozszerzenie niestandardowe obiekty, takie jak programy obsługi błędów, wiadomości lub parametr interceptory rozszerzeń zabezpieczeń i inne obiekty niestandardowego rozszerzenia.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to inspect or modify the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> object that is being constructed in order to support some custom execution scenario.</source>
          <target state="translated">Implementowanie <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A&gt;</ph> metodę inspekcja lub modyfikowanie <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> obiekt, który jest tworzona w celu obsługi niektórych scenariuszy wykonywanie niestandardowe.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> objects as a parameters.</source>
          <target state="translated">Wszystkie <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> przekazać metody <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> i <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> obiektów jako parametry.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> Parametr jest badania i wstawiania tylko dostosowania; Jeśli inny sposób zmodyfikować te obiekty sposób wykonywania jest niezdefiniowana.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia zachowania usługi określony w pliku konfiguracji, który będzie wprowadzany obsługi błędów niestandardowych aplikacji usługi.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>In this example, the error handler catches all exceptions and converts them into a custom <ph id="ph1">`GreetingFault`</ph> SOAP fault that is then returned to the client.</source>
          <target state="translated">W tym przykładzie program obsługi błędów przechwytuje wszystkie wyjątki i konwertuje je na niestandardowego <ph id="ph1">`GreetingFault`</ph> błędu protokołu SOAP, który jest następnie zwracany do klienta.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The following <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> implementation adds no binding parameter objects, adds the custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> object to each <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> property, and validates that each operation of the service to which the service behavior is applied and has a <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> of type <ph id="ph5">`GreetingFault`</ph>.</source>
          <target state="translated">Następujące <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> implementacji dodaje żadne obiekty parametru wiązania, dodaje niestandardowego <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> obiektu do każdego <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> właściwości i sprawdza, czy każdej operacji usługi, do którego jest stosowane zachowanie usługi i ma <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph>typu <ph id="ph5">`GreetingFault`</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>In this example, the behavior class also implements <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</source>
          <target state="translated">W tym przykładzie również implementuje klasy zachowanie <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, które umożliwia zachowanie usługi, która ma zostać wstawiony przez użyciem jej w pliku konfiguracyjnym aplikacji, jak pokazano w poniższym przykładzie kodu.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The service description.</source>
          <target state="translated">Opis usługi.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The service host that is currently being constructed.</source>
          <target state="translated">Host usługi, który jest obecnie tworzona.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>Provides the ability to inspect the service host and the service description to confirm that the service can run successfully.</source>
          <target state="translated">Zapewnia możliwość sprawdzić hosta usługi i opisu usługi, aby upewnić się, że usługa może działać pomyślnie.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A&gt;</ph> method to confirm whether the current service can execute properly according to your scenario.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A&gt;</ph> metodę, aby potwierdzić, czy bieżąca usługa może zostać wykonany prawidłowo zgodnie z danego scenariusza.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> objects as a parameters.</source>
          <target state="translated">Wszystkie <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> przekazać metody <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> i <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> obiektów jako parametry.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> Parametr jest badania i wstawiania tylko dostosowania; Jeśli inny sposób zmodyfikować te obiekty sposób wykonywania jest niezdefiniowana.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</source>
          <target state="translated">W poniższym przykładzie pokazano sposób użycia zachowania usługi określony w pliku konfiguracji, który będzie wprowadzany obsługi błędów niestandardowych aplikacji usługi.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>In this example, the error handler catches all exceptions and converts them into a custom <ph id="ph1">`GreetingFault`</ph> SOAP fault that is then returned to the client.</source>
          <target state="translated">W tym przykładzie program obsługi błędów przechwytuje wszystkie wyjątki i konwertuje je na niestandardowego <ph id="ph1">`GreetingFault`</ph> błędu protokołu SOAP, który jest następnie zwracany do klienta.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The following <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> implementation adds no binding parameter objects, adds the custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> object to each <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> property, and validates that each operation of the service to which the service behavior is applied and has a <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> of type <ph id="ph5">`GreetingFault`</ph>.</source>
          <target state="translated">Następujące <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> implementacji dodaje żadne obiekty parametru wiązania, dodaje niestandardowego <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> obiektu do każdego <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> właściwości i sprawdza, czy każdej operacji usługi, do którego jest stosowane zachowanie usługi i ma <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph>typu <ph id="ph5">`GreetingFault`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>In this example, the behavior class also implements <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</source>
          <target state="translated">W tym przykładzie również implementuje klasy zachowanie <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, które umożliwia zachowanie usługi, która ma zostać wstawiony przez użyciem jej w pliku konfiguracyjnym aplikacji, jak pokazano w poniższym przykładzie kodu.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>