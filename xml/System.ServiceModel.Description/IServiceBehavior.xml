<Type Name="IServiceBehavior" FullName="System.ServiceModel.Description.IServiceBehavior">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="30819f01cdad2262e6c92321dc4b4113e65b3641" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34316700" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Interface IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public interface class IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8d36d-101">Udostępnia mechanizm do modyfikacji lub Wstaw niestandardowych rozszerzeń w całej usługi, w tym <see cref="T:System.ServiceModel.ServiceHostBase" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8d36d-101">Provides a mechanism to modify or insert custom extensions across an entire service, including the <see cref="T:System.ServiceModel.ServiceHostBase" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d36d-102">Implementowanie <xref:System.ServiceModel.Description.IServiceBehavior> do zmodyfikowania, przeglądanie i rozszerzać niektórych aspektów wykonanie całej usługi na poziomie aplikacji:</span><span class="sxs-lookup"><span data-stu-id="8d36d-102">Implement <xref:System.ServiceModel.Description.IServiceBehavior> to modify, examine, or extend some aspect of service-wide execution at the application level:</span></span>  
  
-   <span data-ttu-id="8d36d-103">Użyj <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> metoda zmiany wartości właściwości czasu wykonywania, lub Wstaw rozszerzenie niestandardowe obiekty, takie jak programy obsługi błędów, interceptory wiadomości lub parametr rozszerzeń zabezpieczeń i inne obiekty rozszerzenia niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="8d36d-103">Use the <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> method to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</span></span>  
  
-   <span data-ttu-id="8d36d-104">Użyj <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> metody do sprawdzenia opis przed Windows Communication Foundation (WCF) tworzy wykonywania usługi, aby upewnić się, że można wykonać poprawnie.</span><span class="sxs-lookup"><span data-stu-id="8d36d-104">Use the <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> method to examine the description before Windows Communication Foundation (WCF) constructs the executing service to confirm that it can execute properly.</span></span>  
  
-   <span data-ttu-id="8d36d-105">Użyj <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> metody do przekazania do elementu powiązania niestandardowych informacji dla usługi, aby poprawnie obsługuje usługę.</span><span class="sxs-lookup"><span data-stu-id="8d36d-105">Use the <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> method to pass to a binding element the custom information for the service so that it can support the service correctly.</span></span>  
  
 <span data-ttu-id="8d36d-106"><xref:System.ServiceModel.Description.IServiceBehavior> obiekty można wprowadzać użyć dowolnej z tych metod, ale często jest tylko jeden ważne; w takich przypadkach nieużywane metody może zwracać wartości.</span><span class="sxs-lookup"><span data-stu-id="8d36d-106"><xref:System.ServiceModel.Description.IServiceBehavior> objects can make use of any of these methods, but often only one is important; in such cases the unused methods can return without a value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d36d-107">Wszystkie <xref:System.ServiceModel.Description.IServiceBehavior> przekazać metody <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> i <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> obiektów jako parametry.</span><span class="sxs-lookup"><span data-stu-id="8d36d-107">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="8d36d-108"><xref:System.ServiceModel.Description.ServiceDescription> Parametr jest używany tylko badania; w przypadku modyfikowania tych obiektów sposób wykonywania jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="8d36d-108">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination only; if you modify these objects the execution behavior is undefined.</span></span>  
  
 <span data-ttu-id="8d36d-109">Do wykonania zadania dostosowania, dla których ma mieć miejsce, <xref:System.ServiceModel.Description.IServiceBehavior> można dodać obiektu do <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> właściwości przed konstrukcji środowiska uruchomieniowego usługi.</span><span class="sxs-lookup"><span data-stu-id="8d36d-109">To perform the customization task for which it is intended, the <xref:System.ServiceModel.Description.IServiceBehavior> object must be added to the <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> property prior to the construction of the service runtime.</span></span> <span data-ttu-id="8d36d-110">Istnieją trzy sposoby, w tym:</span><span class="sxs-lookup"><span data-stu-id="8d36d-110">There are three ways to do this:</span></span>  
  
-   <span data-ttu-id="8d36d-111">Programowo dodać zachowanie usługi niestandardowej w <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> właściwości przed punkt gdzie <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> wywoływana jest metoda <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType> obiektu.</span><span class="sxs-lookup"><span data-stu-id="8d36d-111">Programmatically add the custom service behavior to the <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A> property prior to the point where the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method is called on the <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType> object.</span></span>  
  
-   <span data-ttu-id="8d36d-112">Tworzenie niestandardowego atrybutu, który implementuje <xref:System.ServiceModel.Description.IServiceBehavior> i użyj go, aby oznaczyć klasy usługi, które mają być modyfikowane.</span><span class="sxs-lookup"><span data-stu-id="8d36d-112">Create a custom attribute that implements <xref:System.ServiceModel.Description.IServiceBehavior> and use it to mark service classes that are to be modified.</span></span> <span data-ttu-id="8d36d-113">Gdy <xref:System.ServiceModel.ServiceHost> konstruowania obiektu, usługi WCF używa odbicia do odnajdywania atrybutów dla typu usługi.</span><span class="sxs-lookup"><span data-stu-id="8d36d-113">When a <xref:System.ServiceModel.ServiceHost> object is constructed, WCF uses reflection to discover the attributes on the service type.</span></span> <span data-ttu-id="8d36d-114">Jeśli wdrożenie żadnych atrybutów <xref:System.ServiceModel.Description.IServiceBehavior>, są one dodawane do kolekcji zachowań na <xref:System.ServiceModel.Description.ServiceDescription>.</span><span class="sxs-lookup"><span data-stu-id="8d36d-114">If any attributes implement <xref:System.ServiceModel.Description.IServiceBehavior>, they are added to the behaviors collection on <xref:System.ServiceModel.Description.ServiceDescription>.</span></span>  
  
-   <span data-ttu-id="8d36d-115">Rozszerzanie <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> klasę, aby obsłużyć specyfikacji zachowania w aplikacji lub pliku konfiguracji komputera.</span><span class="sxs-lookup"><span data-stu-id="8d36d-115">Extend the <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> class to support the specification of the behavior in an application or machine configuration file.</span></span> <span data-ttu-id="8d36d-116">Zobacz sekcję przykład, aby uzyskać więcej informacji.</span><span class="sxs-lookup"><span data-stu-id="8d36d-116">See the Example section for more information.</span></span>  
  
 <span data-ttu-id="8d36d-117">Przykłady zachowania usługi programu WCF <xref:System.ServiceModel.ServiceBehaviorAttribute> atrybutu <xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=nameWithType> i <xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=nameWithType> zachowanie.</span><span class="sxs-lookup"><span data-stu-id="8d36d-117">Examples of service behaviors in WCF include the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute, the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=nameWithType>, the <xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=nameWithType> and the <xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=nameWithType> behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d36d-118">W poniższym przykładzie pokazano sposób użycia zachowania usługi określony w pliku konfiguracji, który będzie wprowadzany obsługi błędów niestandardowych aplikacji usługi.</span><span class="sxs-lookup"><span data-stu-id="8d36d-118">The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</span></span> <span data-ttu-id="8d36d-119">W tym przykładzie program obsługi błędów przechwytuje wszystkie wyjątki i konwertuje je na niestandardowego `GreetingFault` błędu protokołu SOAP, który jest następnie zwracany do klienta.</span><span class="sxs-lookup"><span data-stu-id="8d36d-119">In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.</span></span>  
  
 <span data-ttu-id="8d36d-120">Następujące <xref:System.ServiceModel.Description.IServiceBehavior> implementacji dodaje żadne obiekty parametru wiązania, dodaje niestandardowego <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> obiektu do każdego <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> właściwości i sprawdza, czy każdej operacji usługi, do którego jest stosowane zachowanie usługi i ma <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType>typu `GreetingFault`.</span><span class="sxs-lookup"><span data-stu-id="8d36d-120">The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> of type `GreetingFault`.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="8d36d-121">W tym przykładzie również implementuje klasy zachowanie <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, które umożliwia zachowanie usługi, która ma zostać wstawiony przez użyciem jej w pliku konfiguracyjnym aplikacji, jak pokazano w poniższym przykładzie kodu.</span><span class="sxs-lookup"><span data-stu-id="8d36d-121">In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">
          <span data-ttu-id="8d36d-122">Opis usługi usługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d36d-122">The service description of the service.</span>
          </span>
        </param>
        <param name="serviceHostBase">
          <span data-ttu-id="8d36d-123">Host usługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d36d-123">The host of the service.</span>
          </span>
        </param>
        <param name="endpoints">
          <span data-ttu-id="8d36d-124">Punkty końcowe usługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d36d-124">The service endpoints.</span>
          </span>
        </param>
        <param name="bindingParameters">
          <span data-ttu-id="8d36d-125">Niestandardowe obiekty do powiązania, które elementy mają dostęp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d36d-125">Custom objects to which binding elements have access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d36d-126">Udostępnia możliwość przekazania danych niestandardowych do powiązania elementów do obsługi implementacji kontraktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d36d-126">Provides the ability to pass custom data to binding elements to support the contract implementation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d36d-127">Użyj <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> metody w celu dodania niestandardowych danych obiekty do `parameters` kolekcji elementów wiązania można użyć, aby uzyskać dodatkowe informacje, aby umożliwić im obsługuje kontraktu.</span><span class="sxs-lookup"><span data-stu-id="8d36d-127">Use the <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> method to add custom data objects to the `parameters` collection that binding elements can use to acquire extra information to enable them to support the contract.</span></span>  
  
 <span data-ttu-id="8d36d-128">Ta metoda jest wywoływana raz dla każdego identyfikatora URI nasłuchiwania.</span><span class="sxs-lookup"><span data-stu-id="8d36d-128">This method is called once for each listen URI.</span></span> <span data-ttu-id="8d36d-129">Na przykład jeśli usługa ma cztery punkty końcowe i dwa z nich jest taki sam identyfikator URI nasłuchiwania, a następnie ta metoda jest wywoływana trzy razy.</span><span class="sxs-lookup"><span data-stu-id="8d36d-129">For example, if a service has four endpoints, and two of them have the same listen URI, then this method gets called three times.</span></span> <span data-ttu-id="8d36d-130">Przyczyną jest to, że `bindingParameters` docelową każdego stosu kanału i jeden stos kanał dla każdego identyfikatora URI nasłuchiwania.</span><span class="sxs-lookup"><span data-stu-id="8d36d-130">The reason is that the `bindingParameters` target each channel stack and there is one channel stack for each listen URI.</span></span> <span data-ttu-id="8d36d-131">Ponieważ każde wywołanie otrzymuje te punkty końcowe w tym identyfikatora URI nasłuchiwania, dwa wywołuje get każdego pojedynczego <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType>, i jedno wywołanie pobiera kolekcję dwóch <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType> obiektów.</span><span class="sxs-lookup"><span data-stu-id="8d36d-131">Because each call receives those endpoints at that listen URI, two calls each get a single <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType>, and one call gets a collection of two <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType> objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d36d-132">Wszystkie <xref:System.ServiceModel.Description.IServiceBehavior> przekazać metody <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> i <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> obiektów jako parametry.</span><span class="sxs-lookup"><span data-stu-id="8d36d-132">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="8d36d-133"><xref:System.ServiceModel.Description.ServiceDescription> Parametr jest badania i wstawiania tylko dostosowania; Jeśli inny sposób zmodyfikować te obiekty sposób wykonywania jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="8d36d-133">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">
          <span data-ttu-id="8d36d-134">Opis usługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d36d-134">The service description.</span>
          </span>
        </param>
        <param name="serviceHostBase">
          <span data-ttu-id="8d36d-135">Host, który jest obecnie tworzony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d36d-135">The host that is currently being built.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d36d-136">Zapewnia możliwość zmiany wartości właściwości w czasie wykonywania, lub Wstaw rozszerzenie niestandardowe obiekty, takie jak programy obsługi błędów, wiadomości lub parametr interceptory rozszerzeń zabezpieczeń i inne obiekty niestandardowego rozszerzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d36d-136">Provides the ability to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d36d-137">Implementowanie <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> metodę inspekcja lub modyfikowanie <xref:System.ServiceModel.ServiceHostBase> obiekt, który jest tworzona w celu obsługi niektórych scenariuszy wykonywanie niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="8d36d-137">Implement the <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> method to inspect or modify the <xref:System.ServiceModel.ServiceHostBase> object that is being constructed in order to support some custom execution scenario.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d36d-138">Wszystkie <xref:System.ServiceModel.Description.IServiceBehavior> przekazać metody <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> i <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> obiektów jako parametry.</span><span class="sxs-lookup"><span data-stu-id="8d36d-138">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="8d36d-139"><xref:System.ServiceModel.Description.ServiceDescription> Parametr jest badania i wstawiania tylko dostosowania; Jeśli inny sposób zmodyfikować te obiekty sposób wykonywania jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="8d36d-139">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d36d-140">W poniższym przykładzie pokazano sposób użycia zachowania usługi określony w pliku konfiguracji, który będzie wprowadzany obsługi błędów niestandardowych aplikacji usługi.</span><span class="sxs-lookup"><span data-stu-id="8d36d-140">The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</span></span> <span data-ttu-id="8d36d-141">W tym przykładzie program obsługi błędów przechwytuje wszystkie wyjątki i konwertuje je na niestandardowego `GreetingFault` błędu protokołu SOAP, który jest następnie zwracany do klienta.</span><span class="sxs-lookup"><span data-stu-id="8d36d-141">In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.</span></span>  
  
 <span data-ttu-id="8d36d-142">Następujące <xref:System.ServiceModel.Description.IServiceBehavior> implementacji dodaje żadne obiekty parametru wiązania, dodaje niestandardowego <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> obiektu do każdego <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> właściwości i sprawdza, czy każdej operacji usługi, do którego jest stosowane zachowanie usługi i ma <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType>typu `GreetingFault`.</span><span class="sxs-lookup"><span data-stu-id="8d36d-142">The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> of type `GreetingFault`.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="8d36d-143">W tym przykładzie również implementuje klasy zachowanie <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, które umożliwia zachowanie usługi, która ma zostać wstawiony przez użyciem jej w pliku konfiguracyjnym aplikacji, jak pokazano w poniższym przykładzie kodu.</span><span class="sxs-lookup"><span data-stu-id="8d36d-143">In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">
          <span data-ttu-id="8d36d-144">Opis usługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d36d-144">The service description.</span>
          </span>
        </param>
        <param name="serviceHostBase">
          <span data-ttu-id="8d36d-145">Host usługi, który jest obecnie tworzona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d36d-145">The service host that is currently being constructed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d36d-146">Zapewnia możliwość sprawdzić hosta usługi i opisu usługi, aby upewnić się, że usługa może działać pomyślnie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d36d-146">Provides the ability to inspect the service host and the service description to confirm that the service can run successfully.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d36d-147">Użyj <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> metodę, aby potwierdzić, czy bieżąca usługa może zostać wykonany prawidłowo zgodnie z danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="8d36d-147">Use the <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> method to confirm whether the current service can execute properly according to your scenario.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d36d-148">Wszystkie <xref:System.ServiceModel.Description.IServiceBehavior> przekazać metody <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> i <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> obiektów jako parametry.</span><span class="sxs-lookup"><span data-stu-id="8d36d-148">All of the <xref:System.ServiceModel.Description.IServiceBehavior> methods pass <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> and <xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType> objects as a parameters.</span></span> <span data-ttu-id="8d36d-149"><xref:System.ServiceModel.Description.ServiceDescription> Parametr jest badania i wstawiania tylko dostosowania; Jeśli inny sposób zmodyfikować te obiekty sposób wykonywania jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="8d36d-149">The <xref:System.ServiceModel.Description.ServiceDescription> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d36d-150">W poniższym przykładzie pokazano sposób użycia zachowania usługi określony w pliku konfiguracji, który będzie wprowadzany obsługi błędów niestandardowych aplikacji usługi.</span><span class="sxs-lookup"><span data-stu-id="8d36d-150">The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</span></span> <span data-ttu-id="8d36d-151">W tym przykładzie program obsługi błędów przechwytuje wszystkie wyjątki i konwertuje je na niestandardowego `GreetingFault` błędu protokołu SOAP, który jest następnie zwracany do klienta.</span><span class="sxs-lookup"><span data-stu-id="8d36d-151">In this example, the error handler catches all exceptions and converts them into a custom `GreetingFault` SOAP fault that is then returned to the client.</span></span>  
  
 <span data-ttu-id="8d36d-152">Następujące <xref:System.ServiceModel.Description.IServiceBehavior> implementacji dodaje żadne obiekty parametru wiązania, dodaje niestandardowego <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> obiektu do każdego <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> właściwości i sprawdza, czy każdej operacji usługi, do którego jest stosowane zachowanie usługi i ma <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType>typu `GreetingFault`.</span><span class="sxs-lookup"><span data-stu-id="8d36d-152">The following <xref:System.ServiceModel.Description.IServiceBehavior> implementation adds no binding parameter objects, adds the custom <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> object to each <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> property, and validates that each operation of the service to which the service behavior is applied and has a <xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType> of type `GreetingFault`.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="8d36d-153">W tym przykładzie również implementuje klasy zachowanie <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, które umożliwia zachowanie usługi, która ma zostać wstawiony przez użyciem jej w pliku konfiguracyjnym aplikacji, jak pokazano w poniższym przykładzie kodu.</span><span class="sxs-lookup"><span data-stu-id="8d36d-153">In this example, the behavior class also implements <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>