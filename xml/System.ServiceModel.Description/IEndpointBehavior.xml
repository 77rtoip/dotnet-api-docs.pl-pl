<Type Name="IEndpointBehavior" FullName="System.ServiceModel.Description.IEndpointBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c8a65dcfec67e27f6c7d4724a93a280d05dfadfd" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69104816" /></Metadata><TypeSignature Language="C#" Value="public interface IEndpointBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEndpointBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEndpointBehavior" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEndpointBehavior" />
  <TypeSignature Language="F#" Value="type IEndpointBehavior = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f129f-101">Implementuje metody, których można użyć, aby zwiększyć zachowanie w czasie wykonywania dla punktu końcowego w aplikacji usługi lub klienta.</span><span class="sxs-lookup"><span data-stu-id="f129f-101">Implements methods that can be used to extend run-time behavior for an endpoint in either a service or client application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f129f-102">Implementowanie <xref:System.ServiceModel.Description.IEndpointBehavior> interfejsu w celu modyfikowania, badania lub rozbudowywania niektórych aspektów wykonywania całego punktu końcowego na poziomie aplikacji dla aplikacji klienta lub usług.</span><span class="sxs-lookup"><span data-stu-id="f129f-102">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior> interface to modify, examine, or extend some aspect of endpoint-wide execution at the application level for either client or service applications.</span></span>  
  
-   <span data-ttu-id="f129f-103">Użyj metody <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> , aby przekazać dane niestandardowe w czasie wykonywania, aby włączyć powiązania obsługujące zachowanie niestandardowe.</span><span class="sxs-lookup"><span data-stu-id="f129f-103">Use the <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> method to pass custom data at runtime to enable bindings to support custom behavior.</span></span>  
  
-   <span data-ttu-id="f129f-104"><xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> Użyj metody, aby modyfikować, testować lub wstawiać rozszerzenia do punktu końcowego w aplikacji klienckiej.</span><span class="sxs-lookup"><span data-stu-id="f129f-104">Use the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> method to modify, examine, or insert extensions to an endpoint in a client application.</span></span>  
  
-   <span data-ttu-id="f129f-105"><xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> Użyj metody, aby modyfikować, testować lub wstawiać rozszerzenia do wykonywania w ramach całego punktu końcowego w aplikacji usługi.</span><span class="sxs-lookup"><span data-stu-id="f129f-105">Use the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method to modify, examine, or insert extensions to endpoint-wide execution in a service application.</span></span>  
  
-   <span data-ttu-id="f129f-106">Użyj metody, aby upewnić się <xref:System.ServiceModel.Description.ServiceEndpoint> , że spełnia określone wymagania. <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A></span><span class="sxs-lookup"><span data-stu-id="f129f-106">Use the <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> method to confirm that a <xref:System.ServiceModel.Description.ServiceEndpoint> meets specific requirements.</span></span> <span data-ttu-id="f129f-107">Można go użyć, aby upewnić się, że punkt końcowy ma włączone określone ustawienie konfiguracji, obsługuje konkretną funkcję i inne wymagania.</span><span class="sxs-lookup"><span data-stu-id="f129f-107">This can be used to ensure that an endpoint has a certain configuration setting enabled, supports a particular feature and other requirements.</span></span>  
  
 <span data-ttu-id="f129f-108"><xref:System.ServiceModel.Description.IEndpointBehavior>obiekty mogą korzystać z dowolnej z tych metod, ale często tylko jeden jest ważny; w takich przypadkach nieużywane metody mogą zwrócić, wykonanie nie działa.</span><span class="sxs-lookup"><span data-stu-id="f129f-108"><xref:System.ServiceModel.Description.IEndpointBehavior> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return, performing no action.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f129f-109">Wszystkie metody przekazują <xref:System.ServiceModel.Description.ServiceEndpoint>obiektjakoparametr. <xref:System.ServiceModel.Description.IEndpointBehavior></span><span class="sxs-lookup"><span data-stu-id="f129f-109">All of the <xref:System.ServiceModel.Description.IEndpointBehavior> methods pass a <xref:System.ServiceModel.Description.ServiceEndpoint> object as a parameter.</span></span> <span data-ttu-id="f129f-110">Ten parametr służy tylko do celów badania; Jeśli zmodyfikujesz <xref:System.ServiceModel.Description.ServiceEndpoint> obiekt, zachowanie wykonywania jest niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="f129f-110">This parameter is for examination only; if you modify the <xref:System.ServiceModel.Description.ServiceEndpoint> object the execution behavior is undefined.</span></span>  
  
 <span data-ttu-id="f129f-111"><xref:System.ServiceModel.Description.IEndpointBehavior>obiekty są zwykle używane do uzyskiwania <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType>dostępu do różnych właściwości obiektów <xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType>, <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>, <xref:System.ServiceModel.Dispatcher.ClientRuntime?displayProperty=nameWithType> , i <xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType> w aplikacji usługi oraz <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> w aplikacji klienckiej.</span><span class="sxs-lookup"><span data-stu-id="f129f-111"><xref:System.ServiceModel.Description.IEndpointBehavior> objects are typically used to access the various properties of the <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType>, <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>, <xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType>, and <xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType> objects in a service application and the <xref:System.ServiceModel.Dispatcher.ClientRuntime?displayProperty=nameWithType> and <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> in a client application.</span></span> <span data-ttu-id="f129f-112">Ponadto można uzyskać dostęp do właściwości klienta dupleksowego i usług przy użyciu <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A?displayProperty=nameWithType> odpowiednio właściwości i. <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="f129f-112">In addition, you can access the properties of duplex clients and services using the <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A?displayProperty=nameWithType> and <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType> properties, respectively.</span></span>  
  
 <span data-ttu-id="f129f-113">Opis różnych dostępnych właściwości i dostosowań znajduje się w temacie Rozszerzanie elementu [ServiceHost i warstwy modelu usług](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md).</span><span class="sxs-lookup"><span data-stu-id="f129f-113">For a description of the various properties and customizations available, see [Extending ServiceHost and the Service Model Layer](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md).</span></span>  
  
 <span data-ttu-id="f129f-114">Po decyzji o dostosowaniu (wraz z zaimplementowanym interfejsem dostosowania w razie potrzeby) <xref:System.ServiceModel.Description.IEndpointBehavior> , który został poddany odpowiednim zakresem dostosowywania, dostosowanie musi zostać wstawione do komunikacji z systemem Windows. Środowisko uruchomieniowe programu Foundation (WCF <xref:System.ServiceModel.Description.IEndpointBehavior> ) przez implementację i dodanie zachowania punktu końcowego do środowiska uruchomieniowego.</span><span class="sxs-lookup"><span data-stu-id="f129f-114">Once a customization has been decided upon (and the customization interface implemented if necessary) and the <xref:System.ServiceModel.Description.IEndpointBehavior> has been decided is the appropriate scope of customization, the customization must be inserted into the Windows Communication Foundation (WCF) runtime by implementing <xref:System.ServiceModel.Description.IEndpointBehavior> and adding the endpoint behavior to the runtime.</span></span>  
  
 <span data-ttu-id="f129f-115">Istnieją dwa sposoby dodawania zachowania do środowiska uruchomieniowego:</span><span class="sxs-lookup"><span data-stu-id="f129f-115">There are two ways to add the behavior to the runtime:</span></span>  
  
-   <span data-ttu-id="f129f-116">Programistyczne Dodawanie zachowania niestandardowego punktu końcowego do <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A> właściwości przed otwarciem hosta usługi (w aplikacji usługi) lub fabryki kanałów (w aplikacji klienckiej).</span><span class="sxs-lookup"><span data-stu-id="f129f-116">Programmatically add the custom endpoint behavior to the <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A> property prior to the opening of the service host (in a service application) or the channel factory (in a client application).</span></span>  
  
-   <span data-ttu-id="f129f-117">Skonfiguruj zachowanie przy użyciu pliku konfiguracji aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f129f-117">Configure the behavior using an application configuration file.</span></span> <span data-ttu-id="f129f-118">Aby uzyskać szczegółowe informacje, zobacz [ &lt;BehaviorExtensions&gt;](~/docs/framework/configure-apps/file-schema/wcf/behaviorextensions.md).</span><span class="sxs-lookup"><span data-stu-id="f129f-118">For details, see [&lt;behaviorExtensions&gt;](~/docs/framework/configure-apps/file-schema/wcf/behaviorextensions.md).</span></span>  
  
 <span data-ttu-id="f129f-119">Aby wykonać zadanie dostosowywania usługi, <xref:System.ServiceModel.Description.IEndpointBehavior> dla którego jest zamierzone, należy dodać obiekt <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType> do właściwości przed konstrukcją środowiska uruchomieniowego usługi, która występuje, gdy <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> Metoda jest wywoływana w <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f129f-119">To perform the service customization task for which it is intended, the <xref:System.ServiceModel.Description.IEndpointBehavior> object must be added to the <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType> property prior to the construction of the service runtime, which occurs when <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method is called on <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f129f-120">Aby wykonać zadanie dostosowywania <xref:System.ServiceModel.Description.IEndpointBehavior> klienta, należy dodać obiekt <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType> do właściwości przed <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> wywołaniem <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> metody lub metody w <xref:System.ServiceModel.ChannelFactory%601>.</span><span class="sxs-lookup"><span data-stu-id="f129f-120">To perform a client customization task, the <xref:System.ServiceModel.Description.IEndpointBehavior> object must be added to the <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType> property before calling the <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> method or the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method on <xref:System.ServiceModel.ChannelFactory%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f129f-121">Poniższy przykład kodu pokazuje implementację zachowania punktu końcowego, który dodaje <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> obiekt w aplikacji usługi.</span><span class="sxs-lookup"><span data-stu-id="f129f-121">The following code example shows the implementation of an endpoint behavior that adds an <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> object in a service application.</span></span> <span data-ttu-id="f129f-122">W tym przypadku `EndpointBehaviorMessageInspector` Klasa implementuje <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> , aby sprawdzić komunikat przychodzący <xref:System.ServiceModel.Description.IEndpointBehavior> i wychodzący, interfejs do wstawienia klasy inspektora do systemu inspekcji dla wszystkich punktów końcowych, których dotyczy zachowanie, oraz <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>aby włączyć zachowanie inspektora komunikatów przy użyciu pliku konfiguracyjnego aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f129f-122">In this case, the `EndpointBehaviorMessageInspector` class implements <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> to inspect the inbound and outbound message, the <xref:System.ServiceModel.Description.IEndpointBehavior> interface to insert the inspector class into the inspection system for all endpoints to which the behavior applies, and the <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> to enable the message inspector behavior using an application configuration file.</span></span>  
  
 <span data-ttu-id="f129f-123">Pierwszym krokiem jest zaimplementowanie inspektora komunikatów.</span><span class="sxs-lookup"><span data-stu-id="f129f-123">The first step is to implement the message inspector.</span></span>  
  
 [!code-csharp[IEndpointBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#2)]  
  
 <span data-ttu-id="f129f-124">Następny przykład kodu pokazuje użycie <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> metody do dodania inspektora komunikatów <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType> do właściwości.</span><span class="sxs-lookup"><span data-stu-id="f129f-124">The next code example shows the use of the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method to add the message inspector to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-csharp[IEndpointBehavior#4](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#4)]  
  
 <span data-ttu-id="f129f-125">Poniższy przykład kodu pokazuje implementację <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> programu, aby umożliwić korzystanie z Inspektora komunikatów z pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="f129f-125">The following code example shows the implementation of <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> in order to enable use of the message inspector behavior from a configuration file.</span></span>  
  
 [!code-csharp[IEndpointBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#3)]  
  
 <span data-ttu-id="f129f-126">Na koniec następujący plik konfiguracji pokazuje, jak powyższy przykład może być używany z poziomu konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="f129f-126">Finally, the following configuration file shows how the preceding example can be used from configuration.</span></span>  
  
 [!code-xml[IEndpointBehavior#5](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/hostapplication.exe.config#5)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBindingParameters (endpoint As ServiceEndpoint, bindingParameters As BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBindingParameters(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberSignature Language="F#" Value="abstract member AddBindingParameters : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="iEndpointBehavior.AddBindingParameters (endpoint, bindingParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="f129f-127">Punkt końcowy do zmodyfikowania.</span><span class="sxs-lookup"><span data-stu-id="f129f-127">The endpoint to modify.</span></span></param>
        <param name="bindingParameters"><span data-ttu-id="f129f-128">Obiekty, których elementy powiązania wymagają do obsługi zachowania.</span><span class="sxs-lookup"><span data-stu-id="f129f-128">The objects that binding elements require to support the behavior.</span></span></param>
        <summary><span data-ttu-id="f129f-129">Zaimplementuj, aby przekazać dane w czasie wykonywania do powiązań w celu obsługi zachowania niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="f129f-129">Implement to pass data at runtime to bindings to support custom behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f129f-130">Zaimplementuj <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> metodę, aby zapewnić elementy powiązania z dodatkowymi obiektami wymaganymi do obsługi zachowania punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="f129f-130">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> method to provide binding elements with the extra objects they require to support the endpoint behavior.</span></span> <span data-ttu-id="f129f-131">Po dodaniu parametrów powiązania, powiązanie może lokalizować te obiekty podczas tworzenia odbiornika kanału lub fabryki kanałów.</span><span class="sxs-lookup"><span data-stu-id="f129f-131">When binding parameters are added here the binding can locate these objects when the channel listener or channel factory is created.</span></span> <span data-ttu-id="f129f-132">Zazwyczaj należy zaimplementować <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> metodę w celu przekazania informacji o punkcie końcowym do niestandardowego elementu powiązania, aby można było poprawnie utworzyć kanał pomocniczy.</span><span class="sxs-lookup"><span data-stu-id="f129f-132">Typically, you implement the <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> method to pass information about the endpoint to a custom binding element so that it can build a supporting channel correctly.</span></span> <span data-ttu-id="f129f-133">Nie zwracaj żadnej wartości, jeśli nie są wymagane żadne modyfikacje.</span><span class="sxs-lookup"><span data-stu-id="f129f-133">Return no value if no modifications are required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyClientBehavior">
      <MemberSignature Language="C#" Value="public void ApplyClientBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime clientRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyClientBehavior(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.ClientRuntime clientRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyClientBehavior(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ clientRuntime);" />
      <MemberSignature Language="F#" Value="abstract member ApplyClientBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.ClientRuntime -&gt; unit" Usage="iEndpointBehavior.ApplyClientBehavior (endpoint, clientRuntime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="clientRuntime" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="f129f-134">Punkt końcowy, który ma zostać dostosowany.</span><span class="sxs-lookup"><span data-stu-id="f129f-134">The endpoint that is to be customized.</span></span></param>
        <param name="clientRuntime"><span data-ttu-id="f129f-135">Środowisko uruchomieniowe klienta do dostosowania.</span><span class="sxs-lookup"><span data-stu-id="f129f-135">The client runtime to be customized.</span></span></param>
        <summary><span data-ttu-id="f129f-136">Implementuje modyfikację lub rozszerzenie klienta w punkcie końcowym.</span><span class="sxs-lookup"><span data-stu-id="f129f-136">Implements a modification or extension of the client across an endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f129f-137">Zaimplementuj <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> metodę, aby wyświetlać, modyfikować lub dodawać niestandardowe rozszerzenia do środowiska uruchomieniowego klienta we wszystkich komunikatach używanych z punktem końcowym lub dla określonych operacji.</span><span class="sxs-lookup"><span data-stu-id="f129f-137">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> method to view, modify, or add custom extension to the client runtime across all messages used with an endpoint or for specific operations.</span></span> <span data-ttu-id="f129f-138">Aby uzyskać szczegółowe informacje na temat dostosowań, które można wykonać z obiektem wykonawczym <xref:System.ServiceModel.Dispatcher.ClientRuntime> klienta <xref:System.ServiceModel.Dispatcher.ClientOperation>, zobacz i.</span><span class="sxs-lookup"><span data-stu-id="f129f-138">For details about what customizations you can do with a client run-time object, see <xref:System.ServiceModel.Dispatcher.ClientRuntime> and <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span></span>  
  
 <span data-ttu-id="f129f-139">Zaleca się, aby <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> Metoda <xref:System.NotImplementedException> zgłosiła, czy zachowanie jest przeznaczone wyłącznie do użytku w aplikacji usługi.</span><span class="sxs-lookup"><span data-stu-id="f129f-139">It is recommended that the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> method throw a <xref:System.NotImplementedException> if the behavior is only intended for use in a service application.</span></span>  
  
 <span data-ttu-id="f129f-140">Ponieważ inne zachowania mogły już dodać lub usunąć niektóre operacje z środowiska uruchomieniowego, nie ma gwarancji, że istnieje taka sama liczba operacji w opisie, ponieważ <xref:System.ServiceModel.Dispatcher.DispatchOperation> istnieją obiekty <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A> we właściwości.</span><span class="sxs-lookup"><span data-stu-id="f129f-140">Because other behaviors may have already added or removed some operations from the runtime there is no guarantee that there are the same number of operations in the description as there are <xref:System.ServiceModel.Dispatcher.DispatchOperation> objects in the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyDispatchBehavior(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::EndpointDispatcher ^ endpointDispatcher);" />
      <MemberSignature Language="F#" Value="abstract member ApplyDispatchBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.EndpointDispatcher -&gt; unit" Usage="iEndpointBehavior.ApplyDispatchBehavior (endpoint, endpointDispatcher)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="endpointDispatcher" Type="System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="f129f-141">Punkt końcowy, który uwidacznia kontrakt.</span><span class="sxs-lookup"><span data-stu-id="f129f-141">The endpoint that exposes the contract.</span></span></param>
        <param name="endpointDispatcher"><span data-ttu-id="f129f-142">Dyspozytor punktu końcowego do modyfikacji lub przedłużony.</span><span class="sxs-lookup"><span data-stu-id="f129f-142">The endpoint dispatcher to be modified or extended.</span></span></param>
        <summary><span data-ttu-id="f129f-143">Implementuje modyfikację lub rozszerzenie usługi w punkcie końcowym.</span><span class="sxs-lookup"><span data-stu-id="f129f-143">Implements a modification or extension of the service across an endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f129f-144">Zaimplementuj <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> metodę, aby wyświetlić, zmodyfikować lub zwiększyć środowisko uruchomieniowe usługi dla wszystkich komunikatów lub dla określonych operacji w punkcie końcowym.</span><span class="sxs-lookup"><span data-stu-id="f129f-144">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method to view, modify, or extend the service runtime across all messages or for specific operations in an endpoint.</span></span> <span data-ttu-id="f129f-145">Aby uzyskać szczegółowe informacje na temat dostosowań, które można wykonać w aplikacji <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> usługi <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>, zobacz i.</span><span class="sxs-lookup"><span data-stu-id="f129f-145">For details about what customizations you can do in a service application, see <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> and <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f129f-146">Zaleca się, aby <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> Metoda <xref:System.NotImplementedException> zgłosiła wyjątek, jeśli zachowanie jest przeznaczone wyłącznie do użytku w aplikacji klienckiej.</span><span class="sxs-lookup"><span data-stu-id="f129f-146">It is recommended that the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a client application.</span></span>  
  
 <span data-ttu-id="f129f-147">Należy pamiętać, że podczas korzystania z kontraktu wywołania zwrotnego w opisie mogą istnieć dwie operacje o tej samej nazwie.</span><span class="sxs-lookup"><span data-stu-id="f129f-147">Note that there can be two operations with the same name in the description when using a callback contract (one operation in each direction).</span></span> <span data-ttu-id="f129f-148">W przypadku iteracji przez operacje należy skorelować kierunek komunikatów między punktem końcowym <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> i zakresem zwracanym <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType> przez właściwość.</span><span class="sxs-lookup"><span data-stu-id="f129f-148">If you are iterating through operations, you must correlate the message direction between the endpoint <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> and what is returned by the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="f129f-149">Ponadto, ponieważ inne zachowania mogły już dodać lub usunąć niektóre operacje z środowiska uruchomieniowego, nie ma gwarancji, że istnieje taka sama liczba operacji w opisie, ponieważ <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> istnieją obiekty <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A?displayProperty=nameWithType> we właściwości.</span><span class="sxs-lookup"><span data-stu-id="f129f-149">In addition, because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in description as there are <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> objects in the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f129f-150">Poniższy przykład kodu pokazuje implementację zachowania punktu końcowego, który dodaje <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> obiekt w aplikacji usługi.</span><span class="sxs-lookup"><span data-stu-id="f129f-150">The following code example shows the implementation of an endpoint behavior that adds an <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> object in a service application.</span></span> <span data-ttu-id="f129f-151">W tym przypadku `EndpointBehaviorMessageInspector` Klasa implementuje <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> , aby sprawdzić komunikat przychodzący <xref:System.ServiceModel.Description.IEndpointBehavior> i wychodzący, interfejs do wstawienia klasy inspektora do systemu inspekcji dla wszystkich punktów końcowych, których dotyczy zachowanie, oraz <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>aby włączyć zachowanie inspektora komunikatów przy użyciu pliku konfiguracyjnego aplikacji.</span><span class="sxs-lookup"><span data-stu-id="f129f-151">In this case, the `EndpointBehaviorMessageInspector` class implements <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> to inspect the inbound and outbound message, the <xref:System.ServiceModel.Description.IEndpointBehavior> interface to insert the inspector class into the inspection system for all endpoints to which the behavior applies, and the <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> to enable the message inspector behavior using an application configuration file.</span></span>  
  
 <span data-ttu-id="f129f-152">Pierwszym krokiem jest zaimplementowanie inspektora komunikatów.</span><span class="sxs-lookup"><span data-stu-id="f129f-152">The first step is to implement the message inspector.</span></span>  
  
 [!code-csharp[IEndpointBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#2)]  
  
 <span data-ttu-id="f129f-153">Następny przykład kodu pokazuje użycie <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> metody do dodania inspektora komunikatów <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType> do właściwości.</span><span class="sxs-lookup"><span data-stu-id="f129f-153">The next code example shows the use of the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method to add the message inspector to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-csharp[IEndpointBehavior#4](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#4)]  
  
 <span data-ttu-id="f129f-154">Poniższy przykład kodu pokazuje implementację <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> programu, aby umożliwić korzystanie z Inspektora komunikatów z pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="f129f-154">The following code example shows the implementation of <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> in order to enable use of the message inspector behavior from a configuration file.</span></span>  
  
 [!code-csharp[IEndpointBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#3)]  
  
 <span data-ttu-id="f129f-155">Na koniec następujący plik konfiguracji pokazuje, jak powyższy przykład może być używany z poziomu konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="f129f-155">Finally, the following configuration file shows how the preceding example can be used from configuration.</span></span>  
  
 [!code-xml[IEndpointBehavior#5](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/hostapplication.exe.config#5)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Validate (endpoint As ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ServiceModel.Description.ServiceEndpoint -&gt; unit" Usage="iEndpointBehavior.Validate endpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="f129f-156">Punkt końcowy do zweryfikowania.</span><span class="sxs-lookup"><span data-stu-id="f129f-156">The endpoint to validate.</span></span></param>
        <summary><span data-ttu-id="f129f-157">Zaimplementuj, aby upewnić się, że punkt końcowy spełnia pewne zamierzone kryteria.</span><span class="sxs-lookup"><span data-stu-id="f129f-157">Implement to confirm that the endpoint meets some intended criteria.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f129f-158">Zaimplementuj <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> metodę, aby sprawdzić strukturę w celu potwierdzenia dowolnego zestawu kryteriów.</span><span class="sxs-lookup"><span data-stu-id="f129f-158">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> method to examine the structure to confirm any set of criteria.</span></span> <span data-ttu-id="f129f-159">Nie jest konieczne wykonywanie jakichkolwiek dostosowań w programie <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> ani <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> do korzystania z tej metody.</span><span class="sxs-lookup"><span data-stu-id="f129f-159">It is not necessary to perform any customizations in <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> or <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> to make use of this method.</span></span> <span data-ttu-id="f129f-160">Jeśli punkt końcowy przejdzie walidację, Wróć; w przeciwnym razie Zgłoś wyjątek.</span><span class="sxs-lookup"><span data-stu-id="f129f-160">If the endpoint passes validation, return; otherwise, throw an exception.</span></span>  
  
 <span data-ttu-id="f129f-161">Na przykład <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> można użyć metody, aby upewnić się, że wszystkie punkty końcowe używają zatwierdzonego powiązania firmowego.</span><span class="sxs-lookup"><span data-stu-id="f129f-161">For example, the <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> method can be use to ensure that all endpoints use an approved corporate binding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
