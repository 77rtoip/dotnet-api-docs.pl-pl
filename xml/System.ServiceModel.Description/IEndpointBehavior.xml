<Type Name="IEndpointBehavior" FullName="System.ServiceModel.Description.IEndpointBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d25aa6923402b8746371b5ff78838626d7159c78" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56794114" /></Metadata><TypeSignature Language="C#" Value="public interface IEndpointBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEndpointBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEndpointBehavior" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEndpointBehavior" />
  <TypeSignature Language="F#" Value="type IEndpointBehavior = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ec62b-101">Implementuje metody, które mogą służyć do rozszerzenia zachowania w czasie wykonywania dla punktu końcowego w jednej usłudze lub aplikacji klienckiej.</span><span class="sxs-lookup"><span data-stu-id="ec62b-101">Implements methods that can be used to extend run-time behavior for an endpoint in either a service or client application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec62b-102">Implementowanie <xref:System.ServiceModel.Description.IEndpointBehavior> interfejsu modyfikacji, sprawdź lub rozszerzenia niektóre aspekty wykonania całego punktu końcowego na poziomie aplikacji dla aplikacji klienckich lub usługi.</span><span class="sxs-lookup"><span data-stu-id="ec62b-102">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior> interface to modify, examine, or extend some aspect of endpoint-wide execution at the application level for either client or service applications.</span></span>  
  
-   <span data-ttu-id="ec62b-103">Użyj <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> metodę, aby przekazać niestandardowe dane w czasie wykonywania, aby włączyć powiązania do obsługi niestandardowe zachowanie.</span><span class="sxs-lookup"><span data-stu-id="ec62b-103">Use the <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> method to pass custom data at runtime to enable bindings to support custom behavior.</span></span>  
  
-   <span data-ttu-id="ec62b-104">Użyj <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> metodę, aby zmodyfikować, sprawdź lub Wstaw rozszerzenia do punktu końcowego w aplikacji klienckiej.</span><span class="sxs-lookup"><span data-stu-id="ec62b-104">Use the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> method to modify, examine, or insert extensions to an endpoint in a client application.</span></span>  
  
-   <span data-ttu-id="ec62b-105">Użyj <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> metodę, aby zmodyfikować, sprawdź lub Wstaw rozszerzenia do wykonania całego punktu końcowego w aplikacji usługi.</span><span class="sxs-lookup"><span data-stu-id="ec62b-105">Use the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method to modify, examine, or insert extensions to endpoint-wide execution in a service application.</span></span>  
  
-   <span data-ttu-id="ec62b-106">Użyj <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> metodę, aby potwierdzić, że <xref:System.ServiceModel.Description.ServiceEndpoint> spełnia określone wymagania.</span><span class="sxs-lookup"><span data-stu-id="ec62b-106">Use the <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> method to confirm that a <xref:System.ServiceModel.Description.ServiceEndpoint> meets specific requirements.</span></span> <span data-ttu-id="ec62b-107">Może to służyć do zapewnienia, że punkt końcowy ma włączone pewne ustawienia konfiguracji, obsługuje określonej funkcji, jak i inne wymagania.</span><span class="sxs-lookup"><span data-stu-id="ec62b-107">This can be used to ensure that an endpoint has a certain configuration setting enabled, supports a particular feature and other requirements.</span></span>  
  
 <span data-ttu-id="ec62b-108"><xref:System.ServiceModel.Description.IEndpointBehavior> obiekty można wprowadzać użyć dowolnego z tych metod, ale często jest tylko jeden ważny; w takich przypadkach może zwrócić nieużywane metody, wykonanie żadnej akcji.</span><span class="sxs-lookup"><span data-stu-id="ec62b-108"><xref:System.ServiceModel.Description.IEndpointBehavior> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return, performing no action.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec62b-109">Wszystkie <xref:System.ServiceModel.Description.IEndpointBehavior> metody zakończyły się pomyślnie <xref:System.ServiceModel.Description.ServiceEndpoint> obiektu jako parametr.</span><span class="sxs-lookup"><span data-stu-id="ec62b-109">All of the <xref:System.ServiceModel.Description.IEndpointBehavior> methods pass a <xref:System.ServiceModel.Description.ServiceEndpoint> object as a parameter.</span></span> <span data-ttu-id="ec62b-110">Ten parametr jest do zbadania. Jeśli zmodyfikujesz <xref:System.ServiceModel.Description.ServiceEndpoint> obiektu zachowanie wykonywania jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="ec62b-110">This parameter is for examination only; if you modify the <xref:System.ServiceModel.Description.ServiceEndpoint> object the execution behavior is undefined.</span></span>  
  
 <span data-ttu-id="ec62b-111"><xref:System.ServiceModel.Description.IEndpointBehavior> obiekty są zazwyczaj używane do dostępu do różnych właściwości obiektu <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType>, <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>, <xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType>, i <xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType> obiektów w aplikacji usługi i <xref:System.ServiceModel.Dispatcher.ClientRuntime?displayProperty=nameWithType> i <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> w aplikacji klienckiej.</span><span class="sxs-lookup"><span data-stu-id="ec62b-111"><xref:System.ServiceModel.Description.IEndpointBehavior> objects are typically used to access the various properties of the <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType>, <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>, <xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType>, and <xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType> objects in a service application and the <xref:System.ServiceModel.Dispatcher.ClientRuntime?displayProperty=nameWithType> and <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> in a client application.</span></span> <span data-ttu-id="ec62b-112">Ponadto można uzyskać dostęp do właściwości dwukierunkowego klientów i usług przy użyciu <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A?displayProperty=nameWithType> i <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType> właściwości, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="ec62b-112">In addition, you can access the properties of duplex clients and services using the <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A?displayProperty=nameWithType> and <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType> properties, respectively.</span></span>  
  
 <span data-ttu-id="ec62b-113">Aby uzyskać opis różnych właściwości i dostosowania dostępne, zobacz [rozszerzanie elementu ServiceHost i warstwy modelu usług](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md).</span><span class="sxs-lookup"><span data-stu-id="ec62b-113">For a description of the various properties and customizations available, see [Extending ServiceHost and the Service Model Layer](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md).</span></span>  
  
 <span data-ttu-id="ec62b-114">Po dostosowaniu została podjęta na (i interfejs dostosowywania implementowany w razie potrzeby) i <xref:System.ServiceModel.Description.IEndpointBehavior> została podjęta odpowiedniego zakresu dostosowywania, dostosowanie musi zostać wstawiony do komunikacji Windows Środowisko uruchomieniowe Foundation (WCF), implementując <xref:System.ServiceModel.Description.IEndpointBehavior> i dodać zachowanie punktu końcowego do środowiska uruchomieniowego.</span><span class="sxs-lookup"><span data-stu-id="ec62b-114">Once a customization has been decided upon (and the customization interface implemented if necessary) and the <xref:System.ServiceModel.Description.IEndpointBehavior> has been decided is the appropriate scope of customization, the customization must be inserted into the Windows Communication Foundation (WCF) runtime by implementing <xref:System.ServiceModel.Description.IEndpointBehavior> and adding the endpoint behavior to the runtime.</span></span>  
  
 <span data-ttu-id="ec62b-115">Istnieją dwa sposoby na dodanie zachowania do środowiska uruchomieniowego:</span><span class="sxs-lookup"><span data-stu-id="ec62b-115">There are two ways to add the behavior to the runtime:</span></span>  
  
-   <span data-ttu-id="ec62b-116">Programowe Dodawanie zachowanie niestandardowy punkt końcowy, aby <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A> właściwości przed otwarcie fabryki kanałów (w aplikacji klienckiej) lub hosta usługi (w aplikacji usługi).</span><span class="sxs-lookup"><span data-stu-id="ec62b-116">Programmatically add the custom endpoint behavior to the <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A> property prior to the opening of the service host (in a service application) or the channel factory (in a client application).</span></span>  
  
-   <span data-ttu-id="ec62b-117">Skonfiguruj zachowanie przy użyciu pliku konfiguracji aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ec62b-117">Configure the behavior using an application configuration file.</span></span> <span data-ttu-id="ec62b-118">Aby uzyskać więcej informacji, zobacz [ &lt;behaviorExtensions&gt;](~/docs/framework/configure-apps/file-schema/wcf/behaviorextensions.md).</span><span class="sxs-lookup"><span data-stu-id="ec62b-118">For details, see [&lt;behaviorExtensions&gt;](~/docs/framework/configure-apps/file-schema/wcf/behaviorextensions.md).</span></span>  
  
 <span data-ttu-id="ec62b-119">Do wykonania zadania dostosowywania usługi, do którego jest przeznaczony <xref:System.ServiceModel.Description.IEndpointBehavior> można dodać obiektu do <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType> właściwości przed konstrukcji środowiska uruchomieniowego usługi, co ma miejsce, gdy <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> metoda jest wywoływana w <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ec62b-119">To perform the service customization task for which it is intended, the <xref:System.ServiceModel.Description.IEndpointBehavior> object must be added to the <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType> property prior to the construction of the service runtime, which occurs when <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method is called on <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ec62b-120">Do wykonania zadania dostosowywania klienta, <xref:System.ServiceModel.Description.IEndpointBehavior> można dodać obiektu do <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType> właściwości przed wywołaniem <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> metody lub <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> metody <xref:System.ServiceModel.ChannelFactory%601>.</span><span class="sxs-lookup"><span data-stu-id="ec62b-120">To perform a client customization task, the <xref:System.ServiceModel.Description.IEndpointBehavior> object must be added to the <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A?displayProperty=nameWithType> property before calling the <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> method or the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method on <xref:System.ServiceModel.ChannelFactory%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec62b-121">Poniższy przykład kodu pokazuje implementację zachowanie punktu końcowego, który dodaje <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> obiektu w aplikacji usługi.</span><span class="sxs-lookup"><span data-stu-id="ec62b-121">The following code example shows the implementation of an endpoint behavior that adds an <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> object in a service application.</span></span> <span data-ttu-id="ec62b-122">W tym przypadku `EndpointBehaviorMessageInspector` klasy implementuje <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> do wglądu wiadomości przychodzących i wychodzących <xref:System.ServiceModel.Description.IEndpointBehavior> interfejsu, aby wstawić klasy inspektora do systemu kontroli dla wszystkich punktów końcowych, do których zostanie zastosowana zachowanie i <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>umożliwia zachowanie Inspektor komunikatów przy użyciu pliku konfiguracji aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ec62b-122">In this case, the `EndpointBehaviorMessageInspector` class implements <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> to inspect the inbound and outbound message, the <xref:System.ServiceModel.Description.IEndpointBehavior> interface to insert the inspector class into the inspection system for all endpoints to which the behavior applies, and the <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> to enable the message inspector behavior using an application configuration file.</span></span>  
  
 <span data-ttu-id="ec62b-123">Pierwszym krokiem jest do zaimplementowania Inspektor wiadomości.</span><span class="sxs-lookup"><span data-stu-id="ec62b-123">The first step is to implement the message inspector.</span></span>  
  
 [!code-csharp[IEndpointBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#2)]  
  
 <span data-ttu-id="ec62b-124">W kolejnym przykładzie kodu pokazano użycie <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> metody w celu dodania inspektora komunikat <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ec62b-124">The next code example shows the use of the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method to add the message inspector to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-csharp[IEndpointBehavior#4](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#4)]  
  
 <span data-ttu-id="ec62b-125">Poniższy przykład kodu pokazuje implementację <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> w celu umożliwienia użycia zachowanie Inspektor komunikatów z pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="ec62b-125">The following code example shows the implementation of <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> in order to enable use of the message inspector behavior from a configuration file.</span></span>  
  
 [!code-csharp[IEndpointBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#3)]  
  
 <span data-ttu-id="ec62b-126">Na koniec następujący plik konfiguracji pokazuje, jak poprzedni przykład można używać z konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="ec62b-126">Finally, the following configuration file shows how the preceding example can be used from configuration.</span></span>  
  
 [!code-xml[IEndpointBehavior#5](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/hostapplication.exe.config#5)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBindingParameters (endpoint As ServiceEndpoint, bindingParameters As BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBindingParameters(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberSignature Language="F#" Value="abstract member AddBindingParameters : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="iEndpointBehavior.AddBindingParameters (endpoint, bindingParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="ec62b-127">Punkt końcowy do zmodyfikowania.</span><span class="sxs-lookup"><span data-stu-id="ec62b-127">The endpoint to modify.</span></span></param>
        <param name="bindingParameters"><span data-ttu-id="ec62b-128">Obiekty, które elementy powiązania wymagane w celu obsługi zachowanie.</span><span class="sxs-lookup"><span data-stu-id="ec62b-128">The objects that binding elements require to support the behavior.</span></span></param>
        <summary><span data-ttu-id="ec62b-129">Wdrożenia, aby przekazać dane w czasie wykonywania do powiązania z obsługuje niestandardowe zachowanie.</span><span class="sxs-lookup"><span data-stu-id="ec62b-129">Implement to pass data at runtime to bindings to support custom behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec62b-130">Implementowanie <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> metodę, aby zapewnić elementy powiązania dodatkowe obiekty, które potrzebują obsługi zachowanie punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="ec62b-130">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> method to provide binding elements with the extra objects they require to support the endpoint behavior.</span></span> <span data-ttu-id="ec62b-131">Po dodaniu Parametry wiążące tutaj powiązania mogą zlokalizować te obiekty, po utworzeniu odbiornika kanału lub fabryki kanałów.</span><span class="sxs-lookup"><span data-stu-id="ec62b-131">When binding parameters are added here the binding can locate these objects when the channel listener or channel factory is created.</span></span> <span data-ttu-id="ec62b-132">Zazwyczaj należy zaimplementować <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> metody do przekazywania informacji na temat punktu końcowego element niestandardowego powiązania, dzięki czemu można tworzyć, obsługujący kanału poprawnie.</span><span class="sxs-lookup"><span data-stu-id="ec62b-132">Typically, you implement the <xref:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters%2A> method to pass information about the endpoint to a custom binding element so that it can build a supporting channel correctly.</span></span> <span data-ttu-id="ec62b-133">Zwraca żadnej wartości, jeśli wymagane są żadnych modyfikacji.</span><span class="sxs-lookup"><span data-stu-id="ec62b-133">Return no value if no modifications are required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyClientBehavior">
      <MemberSignature Language="C#" Value="public void ApplyClientBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime clientRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyClientBehavior(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.ClientRuntime clientRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyClientBehavior(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ clientRuntime);" />
      <MemberSignature Language="F#" Value="abstract member ApplyClientBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.ClientRuntime -&gt; unit" Usage="iEndpointBehavior.ApplyClientBehavior (endpoint, clientRuntime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="clientRuntime" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="ec62b-134">Punkt końcowy, który ma zostać dostosowana.</span><span class="sxs-lookup"><span data-stu-id="ec62b-134">The endpoint that is to be customized.</span></span></param>
        <param name="clientRuntime"><span data-ttu-id="ec62b-135">Środowiska uruchomieniowego klienta do dostosowania.</span><span class="sxs-lookup"><span data-stu-id="ec62b-135">The client runtime to be customized.</span></span></param>
        <summary><span data-ttu-id="ec62b-136">Implementuje modyfikacji lub rozszerzenia klienta w punkcie końcowym.</span><span class="sxs-lookup"><span data-stu-id="ec62b-136">Implements a modification or extension of the client across an endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec62b-137">Implementowanie <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> metodę, aby wyświetlić, modyfikowanie lub Dodawanie niestandardowego rozszerzenia do środowiska uruchomieniowego klienta między wszystkie komunikaty z punktem końcowym usługi lub dla określonych operacji.</span><span class="sxs-lookup"><span data-stu-id="ec62b-137">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> method to view, modify, or add custom extension to the client runtime across all messages used with an endpoint or for specific operations.</span></span> <span data-ttu-id="ec62b-138">Aby uzyskać szczegółowe informacje o dostosowywaniu, jakie można zrobić za pomocą obiektu środowiska wykonawczego klienta, zobacz <xref:System.ServiceModel.Dispatcher.ClientRuntime> i <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span><span class="sxs-lookup"><span data-stu-id="ec62b-138">For details about what customizations you can do with a client run-time object, see <xref:System.ServiceModel.Dispatcher.ClientRuntime> and <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span></span>  
  
 <span data-ttu-id="ec62b-139">Zalecane jest, <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> throw metoda <xref:System.NotImplementedException> Jeśli zachowanie jest przeznaczona tylko do użytku w aplikacji usługi.</span><span class="sxs-lookup"><span data-stu-id="ec62b-139">It is recommended that the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> method throw a <xref:System.NotImplementedException> if the behavior is only intended for use in a service application.</span></span>  
  
 <span data-ttu-id="ec62b-140">Ponieważ innych zachowań może zostały już dodane lub usunięte niektóre operacje ze środowiska wykonawczego nie ma żadnej gwarancji, że istnieją taką samą liczbę operacji w opisie są <xref:System.ServiceModel.Dispatcher.DispatchOperation> obiekty w <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ec62b-140">Because other behaviors may have already added or removed some operations from the runtime there is no guarantee that there are the same number of operations in the description as there are <xref:System.ServiceModel.Dispatcher.DispatchOperation> objects in the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.EndpointDispatcher endpointDispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyDispatchBehavior(System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::EndpointDispatcher ^ endpointDispatcher);" />
      <MemberSignature Language="F#" Value="abstract member ApplyDispatchBehavior : System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.EndpointDispatcher -&gt; unit" Usage="iEndpointBehavior.ApplyDispatchBehavior (endpoint, endpointDispatcher)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="endpointDispatcher" Type="System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="ec62b-141">Punkt końcowy, który udostępnia umowy.</span><span class="sxs-lookup"><span data-stu-id="ec62b-141">The endpoint that exposes the contract.</span></span></param>
        <param name="endpointDispatcher"><span data-ttu-id="ec62b-142">Dyspozytor punktu końcowego modyfikację lub rozszerzone.</span><span class="sxs-lookup"><span data-stu-id="ec62b-142">The endpoint dispatcher to be modified or extended.</span></span></param>
        <summary><span data-ttu-id="ec62b-143">Implementuje modyfikacji lub rozszerzenia usługi w punkcie końcowym.</span><span class="sxs-lookup"><span data-stu-id="ec62b-143">Implements a modification or extension of the service across an endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec62b-144">Implementowanie <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> metodę, aby wyświetlić, zmodyfikować lub rozszerzanie środowiska uruchomieniowego usługi we wszystkich wiadomości lub dla określonych operacji w punkcie końcowym.</span><span class="sxs-lookup"><span data-stu-id="ec62b-144">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method to view, modify, or extend the service runtime across all messages or for specific operations in an endpoint.</span></span> <span data-ttu-id="ec62b-145">Aby uzyskać szczegółowe informacje o jakie dostosowania, możesz zrobić w aplikacji usługi, zobacz <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> i <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ec62b-145">For details about what customizations you can do in a service application, see <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> and <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ec62b-146">Zalecane jest, <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> throw metoda <xref:System.NotImplementedException> wyjątek, jeśli zachowanie jest przeznaczona tylko do użytku w aplikacji klienckiej.</span><span class="sxs-lookup"><span data-stu-id="ec62b-146">It is recommended that the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a client application.</span></span>  
  
 <span data-ttu-id="ec62b-147">Należy pamiętać, że może być dwóch operacji o tej samej nazwie w opisie przy użyciu kontrakt wywołania zwrotnego (jednej operacji w każdym kierunku).</span><span class="sxs-lookup"><span data-stu-id="ec62b-147">Note that there can be two operations with the same name in the description when using a callback contract (one operation in each direction).</span></span> <span data-ttu-id="ec62b-148">Jeśli operacje są iteracji, należy skorelować kierunek wiadomości między punktem końcowym <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> i zwracany przez <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ec62b-148">If you are iterating through operations, you must correlate the message direction between the endpoint <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> and what is returned by the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="ec62b-149">Ponadto, ponieważ innych zachowań może zostały już dodane lub usunięte niektóre operacje ze środowiska wykonawczego, nie ma żadnej gwarancji, że istnieją taką samą liczbę operacji w opisie są <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> obiekty w <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ec62b-149">In addition, because other behaviors may have already added or removed some operations from the runtime, there is no guarantee that there are the same number of operations in description as there are <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> objects in the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec62b-150">Poniższy przykład kodu pokazuje implementację zachowanie punktu końcowego, który dodaje <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> obiektu w aplikacji usługi.</span><span class="sxs-lookup"><span data-stu-id="ec62b-150">The following code example shows the implementation of an endpoint behavior that adds an <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> object in a service application.</span></span> <span data-ttu-id="ec62b-151">W tym przypadku `EndpointBehaviorMessageInspector` klasy implementuje <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> do wglądu wiadomości przychodzących i wychodzących <xref:System.ServiceModel.Description.IEndpointBehavior> interfejsu, aby wstawić klasy inspektora do systemu kontroli dla wszystkich punktów końcowych, do których zostanie zastosowana zachowanie i <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType>umożliwia zachowanie Inspektor komunikatów przy użyciu pliku konfiguracji aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ec62b-151">In this case, the `EndpointBehaviorMessageInspector` class implements <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector?displayProperty=nameWithType> to inspect the inbound and outbound message, the <xref:System.ServiceModel.Description.IEndpointBehavior> interface to insert the inspector class into the inspection system for all endpoints to which the behavior applies, and the <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> to enable the message inspector behavior using an application configuration file.</span></span>  
  
 <span data-ttu-id="ec62b-152">Pierwszym krokiem jest do zaimplementowania Inspektor wiadomości.</span><span class="sxs-lookup"><span data-stu-id="ec62b-152">The first step is to implement the message inspector.</span></span>  
  
 [!code-csharp[IEndpointBehavior#2](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#2)]  
  
 <span data-ttu-id="ec62b-153">W kolejnym przykładzie kodu pokazano użycie <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> metody w celu dodania inspektora komunikat <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="ec62b-153">The next code example shows the use of the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> method to add the message inspector to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-csharp[IEndpointBehavior#4](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#4)]  
  
 <span data-ttu-id="ec62b-154">Poniższy przykład kodu pokazuje implementację <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> w celu umożliwienia użycia zachowanie Inspektor komunikatów z pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="ec62b-154">The following code example shows the implementation of <xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType> in order to enable use of the message inspector behavior from a configuration file.</span></span>  
  
 [!code-csharp[IEndpointBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#3)]  
  
 <span data-ttu-id="ec62b-155">Na koniec następujący plik konfiguracji pokazuje, jak poprzedni przykład można używać z konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="ec62b-155">Finally, the following configuration file shows how the preceding example can be used from configuration.</span></span>  
  
 [!code-xml[IEndpointBehavior#5](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/hostapplication.exe.config#5)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Validate (endpoint As ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ServiceModel.Description.ServiceEndpoint -&gt; unit" Usage="iEndpointBehavior.Validate endpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="ec62b-156">Punkt końcowy do sprawdzania poprawności.</span><span class="sxs-lookup"><span data-stu-id="ec62b-156">The endpoint to validate.</span></span></param>
        <summary><span data-ttu-id="ec62b-157">Implementowanie, aby upewnić się, że punkt końcowy spełnia wymagania dotyczące niektórych przeznaczona do kryteriów.</span><span class="sxs-lookup"><span data-stu-id="ec62b-157">Implement to confirm that the endpoint meets some intended criteria.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec62b-158">Implementowanie <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> metodę, aby sprawdzić strukturę, aby upewnić się, każdy zestaw kryteriów.</span><span class="sxs-lookup"><span data-stu-id="ec62b-158">Implement the <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> method to examine the structure to confirm any set of criteria.</span></span> <span data-ttu-id="ec62b-159">Nie jest konieczne przeprowadzenie wszelkie dostosowania w <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> lub <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> Aby użyć tej metody.</span><span class="sxs-lookup"><span data-stu-id="ec62b-159">It is not necessary to perform any customizations in <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A> or <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior%2A> to make use of this method.</span></span> <span data-ttu-id="ec62b-160">Jeśli punkt końcowy pozytywnie zweryfikowane, zwracana; w przeciwnym razie Zgłoś wyjątek.</span><span class="sxs-lookup"><span data-stu-id="ec62b-160">If the endpoint passes validation, return; otherwise, throw an exception.</span></span>  
  
 <span data-ttu-id="ec62b-161">Na przykład <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> metoda umożliwia upewnij się, że wszystkie punkty końcowe używają powiązanie firmowych zatwierdzone.</span><span class="sxs-lookup"><span data-stu-id="ec62b-161">For example, the <xref:System.ServiceModel.Description.IEndpointBehavior.Validate%2A> method can be use to ensure that all endpoints use an approved corporate binding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>