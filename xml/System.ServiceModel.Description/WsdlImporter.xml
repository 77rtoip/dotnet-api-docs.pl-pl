<Type Name="WsdlImporter" FullName="System.ServiceModel.Description.WsdlImporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dd76b8116604e904ea3225388e48e8e9cce3d256" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30576691" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WsdlImporter : System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WsdlImporter extends System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.WsdlImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class WsdlImporter&#xA;Inherits MetadataImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class WsdlImporter : System::ServiceModel::Description::MetadataImporter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Description.MetadataImporter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Importuje metadane Web Services Description Language (WSDL) 1.1 z załącznikami WS-Policy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Description.WsdlImporter> klasę, aby zaimportować metadane, a także przekonwertować tych informacji do różnych klas reprezentujących informacje kontraktu i punktu końcowego.  
  
 Klasa podstawowa dla <xref:System.ServiceModel.Description.WsdlImporter>, <xref:System.ServiceModel.Description.MetadataImporter> klasy, definiuje metody, które selektywnie importować informacje kontraktu i punktu końcowego i właściwości, które ujawnia błędy importu i zaakceptuj typu informacje istotne dla procesu importowania i konwersji. <xref:System.ServiceModel.Description.WsdlImporter> Typ używa importerów zasad niestandardowych (<xref:System.ServiceModel.Description.IPolicyImportExtension> implementacji) z typu nadrzędnego do obsługi instrukcji zasady niestandardowe i własne niestandardowe importerów WSDL (<xref:System.ServiceModel.Description.IWsdlImportExtension> implementacji) do obsługi niestandardowych elementów WSDL. Aby uzyskać więcej informacji, zobacz [rozszerzanie systemu metadanych](~/docs/framework/wcf/extending/extending-the-metadata-system.md).  
  
 Podczas importowania zasad z dokumentów WSDL <xref:System.ServiceModel.Description.WsdlImporter> typu spróbuje maksymalnie 32 kombinacje zasad alternatywnych dołączone do różnych tematów zasad WSDL.  Jeśli połączenie nie importuje prawidłowo, pierwsza kombinacja służy do utworzenia częściowego wiązania niestandardowego.  
  
 Oprócz tych metod i właściwości <xref:System.ServiceModel.Description.WsdlImporter> implementuje również metody, które obsługują importowania informacji o powiązaniu i właściwości, które zapewniają dostęp do dokumentów zasad, dokumentów WSDL, rozszerzenia WSDL i dokumentach schematów XML. Informacje o rozszerzaniu <xref:System.ServiceModel.Description.WsdlImporter> do obsługi niestandardowych elementów WSDL, zobacz <xref:System.ServiceModel.Description.IWsdlImportExtension>.  
  
 Zwykle <xref:System.ServiceModel.Description.WsdlImporter> klasa jest używana w ramach trzech etapów procesu.  
  
1.  Utwórz <xref:System.ServiceModel.Description.WsdlImporter> obiektu i przekazać <xref:System.ServiceModel.Description.MetadataSet> obiekt do konstruktora.  
  
2.  Wywołaj odpowiednie `Import` metoda pobierania wyników.  
  
3.  Sprawdź <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> właściwości w celu określenia, czy wystąpiły żadne błędy importu.  
  
> [!NOTE]
>  Podczas importowania typów portu WSDL, jeśli nazwa QName typu portu pasuje do wpisu w <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> słownika następnie typ portu nie jest importowany i zamiast niego jest używana znanego kontraktu.  
  
 Nie wartości są zwracane z <xref:System.ServiceModel.Description.WsdlImporter> właściwości do momentu nosi nazwę jednej z metod import. Niestandardowe <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> obiektów albo mogą być ładowane do <xref:System.ServiceModel.Description.WsdlImporter> programowo lub przy użyciu konfiguracji klienta [ &lt;wsdlImporters&gt; ](~/docs/framework/configure-apps/file-schema/wcf/wsdlimporters.md) elementu.  
  
 Metadane, który został zaimportowany jako punktów końcowych usługi nie może służyć do tworzenia środowiska uruchomieniowego lub eksportowanie metadanych, ponieważ importowane punktów końcowych nie zawierają żadnych informacji typu zarządzanego. Aby użyć metadanych do tworzenia klienta lub usługę środowiska uruchomieniowego lub Generowanie metadanych, najpierw musisz wygenerować i skompilować kod z metadanych i użyj tego typu informacji, aby utworzyć nową <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> przy użyciu <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia <xref:System.ServiceModel.Description.WsdlImporter> można dodać niestandardowe <xref:System.Runtime.Serialization.IDataContractSurrogate?displayProperty=nameWithType>, zaimportować wszystkie kontrakty i skompilować umów i zapisać je w pliku.  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Description.WsdlImporter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
      </Parameters>
      <Docs>
        <param name="metadata">Kolekcja dokumentów metadanych, z którego mają zostać wyodrębnione kontraktu punktu końcowego i informacje o wiązaniu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Description.WsdlImporter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Description.WsdlImporter.%23ctor%2A> konstruktora w celu utworzenia <xref:System.ServiceModel.Description.WsdlImporter> obiekt z zestawu dokumentów metadanych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje najczęściej używane <xref:System.ServiceModel.Description.WsdlImporter> klasy z <xref:System.ServiceModel.Description.MetadataResolver> klasy.  
  
 [!code-csharp[C_CustomWSDLExtensions#10](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet, policyImportExtensions As IEnumerable(Of IPolicyImportExtension), wsdlImportExtensions As IEnumerable(Of IWsdlImportExtension))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ policyImportExtensions, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ wsdlImportExtensions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
        <Parameter Name="policyImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" />
        <Parameter Name="wsdlImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" />
      </Parameters>
      <Docs>
        <param name="metadata">Pobrany metadanych.</param>
        <param name="policyImportExtensions">Służy do importowania instrukcje niestandardowe zasady importerów zasad niestandardowych.</param>
        <param name="wsdlImportExtensions">Niestandardowe importerów WSDL służą do importowania elementów WSDL niestandardowych.</param>
        <summary>Tworzy <see cref="T:System.ServiceModel.Description.WsdlImporter" /> obiektu z określonych metadanych, importerów zasad niestandardowych i niestandardowych importerów WSDL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora do kontrolowania metadanych do zaimportowania oraz zasad i importerów WSDL do użycia.  
  
> [!NOTE]
>  Jeśli importerów zasad niestandardowych lub niestandardowych importerów WSDL są przekazywane do tego konstruktora nie załadowano żadnych niestandardowych importerów określona w plikach konfiguracji aplikacji. Jeśli chcesz dodać niestandardowe importera, należy odtworzyć kolekcje importerów przed użyciem tego konstruktora. Zobacz sekcję przykład.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono sposób dodawania nowego niestandardowego importera WSDL ( `WSDLDocumentationImporter`) do domyślnego zestawu importerów przed użyciem <xref:System.ServiceModel.Description.WsdlImporter> obiektu.  
  
 [!code-csharp[C_CustomWSDLExtensions#11](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metadata" /> Argument jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions, System.ServiceModel.Description.MetadataImporterQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions, class System.ServiceModel.Description.MetadataImporterQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension},System.ServiceModel.Description.MetadataImporterQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet, policyImportExtensions As IEnumerable(Of IPolicyImportExtension), wsdlImportExtensions As IEnumerable(Of IWsdlImportExtension), quotas As MetadataImporterQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ policyImportExtensions, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ wsdlImportExtensions, System::ServiceModel::Description::MetadataImporterQuotas ^ quotas);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
        <Parameter Name="policyImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" />
        <Parameter Name="wsdlImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" />
        <Parameter Name="quotas" Type="System.ServiceModel.Description.MetadataImporterQuotas" />
      </Parameters>
      <Docs>
        <param name="metadata">Pobrany metadanych.</param>
        <param name="policyImportExtensions">Służy do importowania instrukcje niestandardowe zasady importerów zasad niestandardowych.</param>
        <param name="wsdlImportExtensions">Niestandardowe importerów WSDL służą do importowania elementów WSDL niestandardowych.</param>
        <param name="quotas">Ilość metadanych do pobierania</param>
        <summary>Tworzy <see cref="T:System.ServiceModel.Description.WsdlImporter" /> obiektu z określonych metadanych, importerów zasad niestandardowych i niestandardowych importerów WSDL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora do kontrolowania metadanych do zaimportowania oraz zasad i importerów WSDL do użycia.  
  
> [!NOTE]
>  Jeśli importerów zasad niestandardowych lub niestandardowych importerów WSDL są przekazywane do tego konstruktora nie załadowano żadnych niestandardowych importerów określona w plikach konfiguracji aplikacji. Jeśli chcesz dodać niestandardowe importera, należy odtworzyć kolekcje importerów przed użyciem tego konstruktora. Zobacz sekcję przykład.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono sposób dodawania nowego niestandardowego importera WSDL ( `WSDLDocumentationImporter`) do domyślnego zestawu importerów przed użyciem <xref:System.ServiceModel.Description.WsdlImporter> obiektu.  
  
 [!code-csharp[C_CustomWSDLExtensions#11](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metadata" /> Argument jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllBindings">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt; ImportAllBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Channels.Binding&gt; ImportAllBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportAllBindings () As Collection(Of Binding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Channels::Binding ^&gt; ^ ImportAllBindings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca zestaw <see cref="T:System.ServiceModel.Channels.Binding" /> obiekty importowane z dokumentów metadanych.</summary>
        <returns>Zestaw <see cref="T:System.ServiceModel.Channels.Binding" /> obiekty importowane z dokumentów metadanych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Description.WsdlImporter.ImportAllBindings%2A> metodę, aby zaimportować wszystkie informacje o powiązaniu z dokumentów metadanych i zwraca je jako <xref:System.ServiceModel.Channels.Binding> obiektów. Sprawdź <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> właściwości w celu określenia, czy wystąpiły żadne błędy importu przed użyciem zwracanych obiektów.  
  
 Aby zaimportować określone Powiązanie WSDL, zobacz <xref:System.ServiceModel.Description.WsdlImporter.ImportBinding%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ServiceModel.Description.WsdlImporter" /> Napotkał błąd.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllContracts">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllContracts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ImportAllContracts () As Collection(Of ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ ImportAllContracts();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca zestaw <see cref="T:System.ServiceModel.Description.ContractDescription" /> obiektów, które reprezentują portu informacji o typie w dokumentach metadanych.</summary>
        <returns>Zestaw <see cref="T:System.ServiceModel.Description.ContractDescription" /> obiektów, które reprezentują portu informacji o typie w dokumentach metadanych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Description.WsdlImporter.ImportAllContracts%2A> metodę, aby zaimportować wszystkie informacje o typie portu WSDL z dokumentów metadanych i zwraca je jako <xref:System.ServiceModel.Description.ContractDescription> obiektów. Zaleca się sprawdzanie <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> właściwości w celu określenia, czy wystąpiły żadne błędy importu przed użyciem zwracanych obiektów.  
  
 Aby zaimportować tylko jeden port typu, zobacz <xref:System.ServiceModel.Description.WsdlImporter.ImportContract%2A> metody.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób użycia <xref:System.ServiceModel.Description.WsdlImporter> można dodać niestandardowe <xref:System.Runtime.Serialization.IDataContractSurrogate?displayProperty=nameWithType>, zaimportować wszystkie kontrakty i skompilować umów i zapisać je w pliku.  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ServiceModel.Description.WsdlImporter" /> Napotkał błąd.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllEndpoints">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ImportAllEndpoints () As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Description::ServiceEndpointCollection ^ ImportAllEndpoints();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> reprezentujący punktów końcowych w dokumentach WSDL.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> reprezentujący punktów końcowych w dokumentach WSDL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints%2A> metodę, aby zaimportować wszystkie informacje o punkcie końcowym z dokumentów metadanych i zwraca je jako kolekcja <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów. Sprawdź <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> właściwości w celu określenia, czy wystąpiły żadne błędy importu przed użyciem zwracanych obiektów.  
  
 Aby zaimportować tylko określonego portu WSDL, zobacz <xref:System.ServiceModel.Description.WsdlImporter.ImportEndpoint%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ServiceModel.Description.WsdlImporter" /> Napotkał błąd.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding ImportBinding (System.Web.Services.Description.Binding wsdlBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Binding ImportBinding(class System.Web.Services.Description.Binding wsdlBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportBinding(System.Web.Services.Description.Binding)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportBinding (wsdlBinding As Binding) As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Binding ^ ImportBinding(System::Web::Services::Description::Binding ^ wsdlBinding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlBinding" Type="System.Web.Services.Description.Binding" />
      </Parameters>
      <Docs>
        <param name="wsdlBinding">A <see cref="T:System.Web.Services.Description.Binding" /> obiekt, który reprezentuje informacje o powiązaniu w pliku metadanych.</param>
        <summary>Zwraca <see cref="T:System.ServiceModel.Channels.Binding" /> obiekt, który reprezentuje informacje o powiązaniu z zestawu dokumentów metadanych.</summary>
        <returns>A <see cref="T:System.ServiceModel.Channels.Binding" /> obiekt, który reprezentuje informacje o powiązaniu z zestawu dokumentów metadanych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Description.WsdlImporter.ImportBinding%2A> metodę <xref:System.Web.Services.Description.Binding?displayProperty=nameWithType> obiekt, aby zlokalizować informacje o powiązaniu w metadanych i zwracają informacje tego powiązania jako <xref:System.ServiceModel.Channels.Binding?displayProperty=nameWithType> obiektu. Sprawdź <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> właściwości w celu określenia, czy wystąpiły żadne błędy importu przed użyciem zwrócony obiekt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ServiceModel.Description.WsdlImporter" /> Napotkał błąd.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="wsdlBinding" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportContract">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ContractDescription ImportContract (System.Web.Services.Description.PortType wsdlPortType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ContractDescription ImportContract(class System.Web.Services.Description.PortType wsdlPortType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportContract(System.Web.Services.Description.PortType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportContract (wsdlPortType As PortType) As ContractDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ContractDescription ^ ImportContract(System::Web::Services::Description::PortType ^ wsdlPortType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ContractDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPortType" Type="System.Web.Services.Description.PortType" />
      </Parameters>
      <Docs>
        <param name="wsdlPortType">A <see cref="T:System.Web.Services.Description.PortType" /> obiekt, który reprezentuje typ wybranego portu.</param>
        <summary>Zwraca <see cref="T:System.ServiceModel.Description.ContractDescription" /> obiekt, który reprezentuje metadane zlokalizować informacji o typie określonym porcie.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ContractDescription" /> obiekt, który reprezentuje metadane zlokalizować informacji o typie określonym porcie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Description.WsdlImporter.ImportContract%2A> metodę <xref:System.Web.Services.Description.PortType?displayProperty=nameWithType> obiekt, aby zlokalizować informacje o portach typ w metadanych i zwracać te informacje jako <xref:System.ServiceModel.Description.ContractDescription> obiektu. Sprawdź <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> właściwości w celu określenia, czy wystąpiły żadne błędy importu przed użyciem zwrócony obiekt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ServiceModel.Description.WsdlImporter" /> Napotkał błąd.</exception>
        <exception cref="T:System.ArgumentNullException">Typ portu jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint ImportEndpoint (System.Web.Services.Description.Port wsdlPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint ImportEndpoint(class System.Web.Services.Description.Port wsdlPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoint(System.Web.Services.Description.Port)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoint (wsdlPort As Port) As ServiceEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ ImportEndpoint(System::Web::Services::Description::Port ^ wsdlPort);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPort" Type="System.Web.Services.Description.Port" />
      </Parameters>
      <Docs>
        <param name="wsdlPort">A <see cref="T:System.Web.Services.Description.Port" /> obiekt, który reprezentuje odpowiednie informacje o portach WSDL.</param>
        <summary>Zwraca <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> z zestaw dokumentów metadanych, który używa informacji z określonego <see cref="T:System.Web.Services.Description.Port" /> obiektu.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiekt, który reprezentuje określonych informacji o porcie WSDL w dokumencie metadanych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Description.WsdlImporter.ImportEndpoint%2A> metodę <xref:System.Web.Services.Description.Port?displayProperty=nameWithType> obiekt, aby zlokalizować informacje o portach typ w metadanych i zwracać te informacje jako <xref:System.ServiceModel.Description.ServiceEndpoint> obiektu. Sprawdź <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> właściwości w celu określenia, czy wystąpiły żadne błędy importu przed użyciem zwrócony obiekt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ServiceModel.Description.WsdlImporter" /> Napotkał błąd.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="wsdlPort" /> Jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportEndpoints">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca kolekcję <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów, które odpowiadają wszystkie porty WSDL używa określonego powiązania, skojarzone z typem określonym porcie lub w ramach określonej usługi WSDL.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.Binding wsdlBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.Binding wsdlBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Binding)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlBinding As Binding) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::Binding ^ wsdlBinding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlBinding" Type="System.Web.Services.Description.Binding" />
      </Parameters>
      <Docs>
        <param name="wsdlBinding">A <see cref="T:System.Web.Services.Description.Binding" /> obiekt używany do portu WSDL.</param>
        <summary>Zwraca <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> reprezentujący wszystkie typy portu WSDL przy użyciu określonego <see cref="T:System.Web.Services.Description.Binding" />.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> reprezentujący wszystkie typy portu WSDL przy użyciu określonego <see cref="T:System.Web.Services.Description.Binding" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sprawdź <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> właściwości w celu określenia, czy wystąpiły żadne błędy importu przed użyciem zwrócony obiekt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ServiceModel.Description.WsdlImporter" /> Napotkał błąd.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="wsdlBinding" /> Jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.PortType wsdlPortType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.PortType wsdlPortType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.PortType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlPortType As PortType) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::PortType ^ wsdlPortType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPortType" Type="System.Web.Services.Description.PortType" />
      </Parameters>
      <Docs>
        <param name="wsdlPortType">
          <see cref="T:System.Web.Services.Description.PortType" /> Obiekt, który służy do znajdowania skojarzonych informacji o porcie WSDL.</param>
        <summary>Zwraca <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> reprezentujący wszystkie typy portu WSDL skojarzonego z określonym <see cref="T:System.Web.Services.Description.PortType" />.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> reprezentujący wszystkie typy portu WSDL skojarzonego z określonym <see cref="T:System.Web.Services.Description.PortType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sprawdź <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> właściwości w celu określenia, czy wystąpiły żadne błędy importu przed użyciem zwrócony obiekt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ServiceModel.Description.WsdlImporter" /> Napotkał błąd.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="wsdlPortType" /> Jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.Service wsdlService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.Service wsdlService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Service)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlService As Service) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::Service ^ wsdlService);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlService" Type="System.Web.Services.Description.Service" />
      </Parameters>
      <Docs>
        <param name="wsdlService">
          <see cref="T:System.Web.Services.Description.Service" /> Obiektu, w którym do wyszukiwania informacji o porcie WSDL.</param>
        <summary>Zwraca <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> reprezentujący wszystkie typy portu WSDL w ramach określonego <see cref="T:System.Web.Services.Description.Service" />.</summary>
        <returns>A <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> reprezentujący wszystkie typy portu WSDL w ramach określonego <see cref="T:System.Web.Services.Description.Service" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sprawdź <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> właściwości w celu określenia, czy wystąpiły żadne błędy importu przed użyciem zwrócony obiekt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.ServiceModel.Description.WsdlImporter" /> Napotkał błąd.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="wsdlService" /> Jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WsdlDocuments">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ServiceDescriptionCollection WsdlDocuments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ServiceDescriptionCollection WsdlDocuments" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.WsdlDocuments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WsdlDocuments As ServiceDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ServiceDescriptionCollection ^ WsdlDocuments { System::Web::Services::Description::ServiceDescriptionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ServiceDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera zestaw <see cref="T:System.Web.Services.Description.ServiceDescription" /> obiektów, które opisują kontraktu w dokumentach metadanych.</summary>
        <value>Kolekcja <see cref="T:System.Web.Services.Description.ServiceDescription" /> obiektów, które opisują kontraktu w dokumentach metadanych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.WsdlImporter.WsdlDocuments%2A> Właściwość nie zostanie wypełnione, dopóki nie jest wywoływana metoda importu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WsdlImportExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; WsdlImportExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; WsdlImportExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WsdlImportExtensions As KeyedByTypeCollection(Of IWsdlImportExtension)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ WsdlImportExtensions { System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera zestaw <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" /> obiekty służą do importowania niestandardowych informacji WSDL.</summary>
        <value>Zestaw <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" /> obiekty służą do importowania niestandardowych informacji WSDL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A> właściwości, aby dodać lub usunąć niestandardowe importerów WSDL.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet XmlSchemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet XmlSchemas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.XmlSchemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlSchemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ XmlSchemas { System::Xml::Schema::XmlSchemaSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera zestaw <see cref="T:System.Xml.Schema.XmlSchema" /> obiektów, które opisują typy w metadanych.</summary>
        <value>Zestaw <see cref="T:System.Xml.Schema.XmlSchema" /> obiektów, które opisują typy w metadanych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest pusta, dopóki nosi nazwę jednej z metod import.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>