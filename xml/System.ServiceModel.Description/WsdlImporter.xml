<Type Name="WsdlImporter" FullName="System.ServiceModel.Description.WsdlImporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a8d1c3e22bba962a7c669aa1557b557975cfc53a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69237421" /></Metadata><TypeSignature Language="C#" Value="public class WsdlImporter : System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WsdlImporter extends System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.WsdlImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class WsdlImporter&#xA;Inherits MetadataImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class WsdlImporter : System::ServiceModel::Description::MetadataImporter" />
  <TypeSignature Language="F#" Value="type WsdlImporter = class&#xA;    inherit MetadataImporter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Description.MetadataImporter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Importuje metadane Web Services Description Language (WSDL) 1,1 przy użyciu załączników WS-Policy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.WsdlImporter> Użyj klasy, aby zaimportować metadane, a także przekonwertować te informacje na różne klasy, które reprezentują informacje o kontrakcie i punkcie końcowym.  
  
 Klasa bazowa dla <xref:System.ServiceModel.Description.WsdlImporter> <xref:System.ServiceModel.Description.MetadataImporter> klasy, definiuje metody, które umożliwiają wybiórcze importowanie informacji o kontrakcie i punkcie końcowym, które ujawniają wszelkie błędy importu i akceptują informacje o typie odpowiednie dla procesu importowania i konwersji. Typ używa importerów zasad niestandardowych (<xref:System.ServiceModel.Description.IPolicyImportExtension> implementacji) z jego typu nadrzędnego do obsługi niestandardowych instrukcji zasad i własnych importerów WSDL (<xref:System.ServiceModel.Description.IWsdlImportExtension> implementacji) do obsługi niestandardowych elementów WSDL. <xref:System.ServiceModel.Description.WsdlImporter> Aby uzyskać szczegółowe informacje, zobacz [Rozszerzanie systemu metadanych](~/docs/framework/wcf/extending/extending-the-metadata-system.md).  
  
 Podczas importowania zasad z dokumentów <xref:System.ServiceModel.Description.WsdlImporter> WSDL typ będzie podejmować próby do 32 kombinacji alternatyw zasad dołączanych do różnych tematów zasad WSDL.  Jeśli żadna kombinacja nie jest czysta, pierwsza kombinacja służy do konstruowania częściowego powiązania niestandardowego.  
  
 Oprócz tych metod i właściwości <xref:System.ServiceModel.Description.WsdlImporter> implementuje także metody, które obsługują importowanie informacji o powiązaniach i właściwości, które zapewniają dostęp do wszystkich dokumentów zasad, dokumentów WSDL, rozszerzeń WSDL i dokumentów schematu XML. Informacje o rozszerzaniu <xref:System.ServiceModel.Description.WsdlImporter> programu w celu obsługi niestandardowych elementów WSDL <xref:System.ServiceModel.Description.IWsdlImportExtension>znajdują się w temacie.  
  
 <xref:System.ServiceModel.Description.WsdlImporter> Zazwyczaj Klasa jest używana w procesie trzech kroków.  
  
1.  Utwórz obiekt i <xref:System.ServiceModel.Description.MetadataSet> przekaż obiekt do konstruktora. <xref:System.ServiceModel.Description.WsdlImporter>  
  
2.  Wywołaj odpowiednią `Import` metodę, aby pobrać wyniki.  
  
3.  Sprawdź Właściwość <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> , aby określić, czy występują jakieś błędy importu.  
  
> [!NOTE]
>  Podczas importowania typów portów WSDL, jeśli QName typu portu pasuje do wpisu w <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> słowniku, typ portu nie zostanie zaimportowany, a w zamian jest używany znany kontrakt.  
  
 Żadne wartości nie są zwracane z <xref:System.ServiceModel.Description.WsdlImporter> właściwości do momentu wywołania jednej z metod importu. Obiekty <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> niestandardowe można załadować do programu <xref:System.ServiceModel.Description.WsdlImporter> programowo lub przy użyciu [ &lt;wsdlImporters&gt; ](~/docs/framework/configure-apps/file-schema/wcf/wsdlimporters.md) konfiguracji klienta.  
  
 Metadanych, które zostały zaimportowane jako punkty końcowe usługi, nie można użyć do utworzenia środowiska uruchomieniowego lub eksportu metadanych, ponieważ importowane punkty końcowe nie zawierają informacji o typie zarządzanym. Aby użyć metadanych do utworzenia klienta lub usługi lub wygenerować metadanych, należy najpierw wygenerować i skompilować kod z metadanych i użyć tego typu informacji do utworzenia nowego <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> obiektu za pomocą. <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak używać <xref:System.ServiceModel.Description.WsdlImporter> do dodawania niestandardowych <xref:System.Runtime.Serialization.IDataContractSurrogate?displayProperty=nameWithType>, importowania wszystkich umów i kompilowania tych umów i zapisywania ich w pliku.  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Description.WsdlImporter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter metadata" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
      </Parameters>
      <Docs>
        <param name="metadata">Kolekcja dokumentów metadanych, z których można wyodrębnić umowę, punkt końcowy i informacje o powiązaniu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Description.WsdlImporter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj konstruktora <xref:System.ServiceModel.Description.WsdlImporter.%23ctor%2A> , aby <xref:System.ServiceModel.Description.WsdlImporter> utworzyć obiekt na podstawie zestawu dokumentów metadanych.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia najbardziej typowe użycie <xref:System.ServiceModel.Description.WsdlImporter> klasy <xref:System.ServiceModel.Description.MetadataResolver> z klasą.  
  
 [!code-csharp[C_CustomWSDLExtensions#10](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet, policyImportExtensions As IEnumerable(Of IPolicyImportExtension), wsdlImportExtensions As IEnumerable(Of IWsdlImportExtension))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ policyImportExtensions, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ wsdlImportExtensions);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet * seq&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; * seq&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter (metadata, policyImportExtensions, wsdlImportExtensions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
        <Parameter Name="policyImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" />
        <Parameter Name="wsdlImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" />
      </Parameters>
      <Docs>
        <param name="metadata">Pobrane metadane.</param>
        <param name="policyImportExtensions">Importerzy zasad niestandardowych używani do importowania niestandardowych instrukcji zasad.</param>
        <param name="wsdlImportExtensions">Niestandardowi importerzy WSDL używani do importowania niestandardowych elementów WSDL.</param>
        <summary><see cref="T:System.ServiceModel.Description.WsdlImporter" /> Tworzy obiekt z określonych metadanych, importerów zasad niestandardowych i niestandardowych importerów WSDL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor służy do kontrolowania metadanych do zaimportowania oraz zasad i importerów WSDL, które mają być używane.  
  
> [!NOTE]
>  Jeśli importerzy zasad niestandardowych lub niestandardowi importerzy WSDL są przekazani do tego konstruktora, nie są ładowane żadni importerzy niestandardowi określeni w plikach konfiguracji aplikacji. Jeśli chcesz dodać importera niestandardowego, musisz odtworzyć kolekcje importerów przed użyciem tego konstruktora. Zapoznaj się z sekcją przykład.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak dodać nowy niestandardowy importer WSDL ( `WSDLDocumentationImporter`) do domyślnego zestawu importerów przed <xref:System.ServiceModel.Description.WsdlImporter> użyciem obiektu.  
  
 [!code-csharp[C_CustomWSDLExtensions#11](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Argument ma wartość <see langword="null" />. <paramref name="metadata" /></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions, System.ServiceModel.Description.MetadataImporterQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions, class System.ServiceModel.Description.MetadataImporterQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension},System.ServiceModel.Description.MetadataImporterQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet, policyImportExtensions As IEnumerable(Of IPolicyImportExtension), wsdlImportExtensions As IEnumerable(Of IWsdlImportExtension), quotas As MetadataImporterQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ policyImportExtensions, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ wsdlImportExtensions, System::ServiceModel::Description::MetadataImporterQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet * seq&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; * seq&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; * System.ServiceModel.Description.MetadataImporterQuotas -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter (metadata, policyImportExtensions, wsdlImportExtensions, quotas)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
        <Parameter Name="policyImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" />
        <Parameter Name="wsdlImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" />
        <Parameter Name="quotas" Type="System.ServiceModel.Description.MetadataImporterQuotas" />
      </Parameters>
      <Docs>
        <param name="metadata">Pobrane metadane.</param>
        <param name="policyImportExtensions">Importerzy zasad niestandardowych używani do importowania niestandardowych instrukcji zasad.</param>
        <param name="wsdlImportExtensions">Niestandardowi importerzy WSDL używani do importowania niestandardowych elementów WSDL.</param>
        <param name="quotas">Ilość metadanych do pobrania w danym momencie</param>
        <summary><see cref="T:System.ServiceModel.Description.WsdlImporter" /> Tworzy obiekt z określonych metadanych, importerów zasad niestandardowych i niestandardowych importerów WSDL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor służy do kontrolowania metadanych do zaimportowania oraz zasad i importerów WSDL, które mają być używane.  
  
> [!NOTE]
>  Jeśli importerzy zasad niestandardowych lub niestandardowi importerzy WSDL są przekazani do tego konstruktora, nie są ładowane żadni importerzy niestandardowi określeni w plikach konfiguracji aplikacji. Jeśli chcesz dodać importera niestandardowego, musisz odtworzyć kolekcje importerów przed użyciem tego konstruktora. Zapoznaj się z sekcją przykład.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak dodać nowy niestandardowy importer WSDL ( `WSDLDocumentationImporter`) do domyślnego zestawu importerów przed <xref:System.ServiceModel.Description.WsdlImporter> użyciem obiektu.  
  
 [!code-csharp[C_CustomWSDLExtensions#11](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Argument ma wartość <see langword="null" />. <paramref name="metadata" /></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllBindings">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt; ImportAllBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Channels.Binding&gt; ImportAllBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportAllBindings () As Collection(Of Binding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Channels::Binding ^&gt; ^ ImportAllBindings();" />
      <MemberSignature Language="F#" Value="member this.ImportAllBindings : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt;" Usage="wsdlImporter.ImportAllBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca zestaw <see cref="T:System.ServiceModel.Channels.Binding" /> obiektów zaimportowanych z dokumentów metadanych.</summary>
        <returns>Zestaw <see cref="T:System.ServiceModel.Channels.Binding" /> obiektów zaimportowanych z dokumentów metadanych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby zaimportować wszystkie informacje o powiązaniu z dokumentów metadanych i zwrócić je <xref:System.ServiceModel.Channels.Binding> jako obiekty. <xref:System.ServiceModel.Description.WsdlImporter.ImportAllBindings%2A> Sprawdź Właściwość <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> , aby określić, czy występują jakieś błędy importu przed użyciem zwracanych obiektów.  
  
 Aby zaimportować określone Powiązanie WSDL, zobacz <xref:System.ServiceModel.Description.WsdlImporter.ImportBinding%2A> metodę.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> Wystąpił błąd.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllContracts">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllContracts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ImportAllContracts () As Collection(Of ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ ImportAllContracts();" />
      <MemberSignature Language="F#" Value="override this.ImportAllContracts : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;" Usage="wsdlImporter.ImportAllContracts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca zestaw <see cref="T:System.ServiceModel.Description.ContractDescription" /> obiektów reprezentujący informacje o typie portu w dokumentach metadanych.</summary>
        <returns>Zestaw <see cref="T:System.ServiceModel.Description.ContractDescription" /> obiektów, które reprezentują informacje o typie portu w dokumentach metadanych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby zaimportować wszystkie informacje o typie portu WSDL z dokumentów metadanych i zwrócić je jako <xref:System.ServiceModel.Description.ContractDescription> obiekty. <xref:System.ServiceModel.Description.WsdlImporter.ImportAllContracts%2A> Zalecane jest sprawdzenie właściwości, aby <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> określić, czy występują jakiekolwiek błędy importu przed użyciem zwracanych obiektów.  
  
 Aby zaimportować tylko jeden typ portu, zobacz <xref:System.ServiceModel.Description.WsdlImporter.ImportContract%2A> metodę.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak używać <xref:System.ServiceModel.Description.WsdlImporter> do dodawania niestandardowych <xref:System.Runtime.Serialization.IDataContractSurrogate?displayProperty=nameWithType>, importowania wszystkich umów i kompilowania tych umów i zapisywania ich w pliku.  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> Wystąpił błąd.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllEndpoints">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ImportAllEndpoints () As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Description::ServiceEndpointCollection ^ ImportAllEndpoints();" />
      <MemberSignature Language="F#" Value="override this.ImportAllEndpoints : unit -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportAllEndpoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> Zwraca wartość reprezentującą punkty końcowe w dokumentach WSDL.</summary>
        <returns><see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> Reprezentuje punkty końcowe w dokumentach WSDL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby zaimportować wszystkie informacje o punkcie końcowym z dokumentów metadanych i zwrócić je jako <xref:System.ServiceModel.Description.ServiceEndpoint> kolekcję obiektów. <xref:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints%2A> Sprawdź Właściwość <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> , aby określić, czy występują jakieś błędy importu przed użyciem zwracanych obiektów.  
  
 Aby zaimportować tylko określony port WSDL, zobacz <xref:System.ServiceModel.Description.WsdlImporter.ImportEndpoint%2A> metodę.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> Wystąpił błąd.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding ImportBinding (System.Web.Services.Description.Binding wsdlBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Binding ImportBinding(class System.Web.Services.Description.Binding wsdlBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportBinding(System.Web.Services.Description.Binding)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportBinding (wsdlBinding As Binding) As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Binding ^ ImportBinding(System::Web::Services::Description::Binding ^ wsdlBinding);" />
      <MemberSignature Language="F#" Value="member this.ImportBinding : System.Web.Services.Description.Binding -&gt; System.ServiceModel.Channels.Binding" Usage="wsdlImporter.ImportBinding wsdlBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlBinding" Type="System.Web.Services.Description.Binding" />
      </Parameters>
      <Docs>
        <param name="wsdlBinding"><see cref="T:System.Web.Services.Description.Binding" /> Obiekt reprezentujący informacje o powiązaniu w pliku metadanych.</param>
        <summary><see cref="T:System.ServiceModel.Channels.Binding" /> Zwraca obiekt, który reprezentuje informacje o powiązaniu z zestawu dokumentów metadanych.</summary>
        <returns><see cref="T:System.ServiceModel.Channels.Binding" /> Obiekt, który reprezentuje informacje o powiązaniu z zestawu dokumentów metadanych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.ServiceModel.Description.WsdlImporter.ImportBinding%2A> , aby <xref:System.Web.Services.Description.Binding?displayProperty=nameWithType> użyć obiektu do lokalizowania informacji o powiązaniu w metadanych i zwrócić te informacje wiążące <xref:System.ServiceModel.Channels.Binding?displayProperty=nameWithType> jako obiekt. Sprawdź Właściwość <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> , aby określić, czy występują jakieś błędy importu przed użyciem zwracanego obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> Wystąpił błąd.</exception>
        <exception cref="T:System.ArgumentNullException">Parametr ma wartość <see langword="null" />. <paramref name="wsdlBinding" /></exception>
      </Docs>
    </Member>
    <Member MemberName="ImportContract">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ContractDescription ImportContract (System.Web.Services.Description.PortType wsdlPortType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ContractDescription ImportContract(class System.Web.Services.Description.PortType wsdlPortType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportContract(System.Web.Services.Description.PortType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportContract (wsdlPortType As PortType) As ContractDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ContractDescription ^ ImportContract(System::Web::Services::Description::PortType ^ wsdlPortType);" />
      <MemberSignature Language="F#" Value="member this.ImportContract : System.Web.Services.Description.PortType -&gt; System.ServiceModel.Description.ContractDescription" Usage="wsdlImporter.ImportContract wsdlPortType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ContractDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPortType" Type="System.Web.Services.Description.PortType" />
      </Parameters>
      <Docs>
        <param name="wsdlPortType"><see cref="T:System.Web.Services.Description.PortType" /> Obiekt, który reprezentuje żądany typ portu.</param>
        <summary><see cref="T:System.ServiceModel.Description.ContractDescription" /> Zwraca obiekt, który reprezentuje metadane zlokalizowane przez określone informacje o typie portu.</summary>
        <returns><see cref="T:System.ServiceModel.Description.ContractDescription" /> Obiekt reprezentujący metadane zlokalizowane przez określone informacje o typie portu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.ServiceModel.Description.WsdlImporter.ImportContract%2A> , aby <xref:System.Web.Services.Description.PortType?displayProperty=nameWithType> użyć obiektu do lokalizowania informacji o typie portu w metadanych i <xref:System.ServiceModel.Description.ContractDescription> zwrócić te informacje jako obiekt. Sprawdź Właściwość <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> , aby określić, czy występują jakieś błędy importu przed użyciem zwracanego obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> Wystąpił błąd.</exception>
        <exception cref="T:System.ArgumentNullException">Typ portu to <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint ImportEndpoint (System.Web.Services.Description.Port wsdlPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint ImportEndpoint(class System.Web.Services.Description.Port wsdlPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoint(System.Web.Services.Description.Port)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoint (wsdlPort As Port) As ServiceEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ ImportEndpoint(System::Web::Services::Description::Port ^ wsdlPort);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoint : System.Web.Services.Description.Port -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="wsdlImporter.ImportEndpoint wsdlPort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPort" Type="System.Web.Services.Description.Port" />
      </Parameters>
      <Docs>
        <param name="wsdlPort"><see cref="T:System.Web.Services.Description.Port" /> Obiekt, który reprezentuje żądane informacje o porcie WSDL.</param>
        <summary>Zwraca z zestawu dokumentów metadanych, które używają informacji z określonego <see cref="T:System.Web.Services.Description.Port" /> obiektu. <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /></summary>
        <returns><see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> Obiekt reprezentujący określone informacje o porcie WSDL w dokumencie metadanych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.ServiceModel.Description.WsdlImporter.ImportEndpoint%2A> , aby <xref:System.Web.Services.Description.Port?displayProperty=nameWithType> użyć obiektu do lokalizowania informacji o typie portu w metadanych i <xref:System.ServiceModel.Description.ServiceEndpoint> zwrócić te informacje jako obiekt. Sprawdź Właściwość <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> , aby określić, czy występują jakieś błędy importu przed użyciem zwracanego obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> Wystąpił błąd.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="wsdlPort" /> Ma<see langword="null" />wartość.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportEndpoints">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca kolekcję <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów, które pasują do wszystkich portów WSDL przy użyciu określonego powiązania, skojarzone z określonym typem portu lub w ramach określonej usługi WSDL.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.Binding wsdlBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.Binding wsdlBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Binding)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlBinding As Binding) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::Binding ^ wsdlBinding);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.Binding -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlBinding" Type="System.Web.Services.Description.Binding" />
      </Parameters>
      <Docs>
        <param name="wsdlBinding"><see cref="T:System.Web.Services.Description.Binding" /> Obiekt używany w porcie WSDL.</param>
        <summary>Zwraca wartość reprezentującą wszystkie typy portów WSDL przy użyciu określonego <see cref="T:System.Web.Services.Description.Binding" />. <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /></summary>
        <returns>Reprezentuje wszystkie typy portów WSDL przy użyciu określonego <see cref="T:System.Web.Services.Description.Binding" />. <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sprawdź Właściwość <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> , aby określić, czy występują jakieś błędy importu przed użyciem zwracanego obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> Wystąpił błąd.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="wsdlBinding" /> Ma<see langword="null" />wartość.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.PortType wsdlPortType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.PortType wsdlPortType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.PortType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlPortType As PortType) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::PortType ^ wsdlPortType);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.PortType -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlPortType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPortType" Type="System.Web.Services.Description.PortType" />
      </Parameters>
      <Docs>
        <param name="wsdlPortType"><see cref="T:System.Web.Services.Description.PortType" /> Obiekt, który jest używany do znajdowania skojarzonych informacji o porcie WSDL.</param>
        <summary>Zwraca wartość reprezentującą wszystkie typy portów WSDL skojarzone z określonym <see cref="T:System.Web.Services.Description.PortType" />. <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /></summary>
        <returns>Reprezentuje wszystkie typy portów WSDL skojarzone z określonym <see cref="T:System.Web.Services.Description.PortType" />. <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sprawdź Właściwość <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> , aby określić, czy występują jakieś błędy importu przed użyciem zwracanego obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> Wystąpił błąd.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="wsdlPortType" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.Service wsdlService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.Service wsdlService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Service)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlService As Service) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::Service ^ wsdlService);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.Service -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlService" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlService" Type="System.Web.Services.Description.Service" />
      </Parameters>
      <Docs>
        <param name="wsdlService"><see cref="T:System.Web.Services.Description.Service" /> Obiekt, w którym mają zostać wyszukane informacje o porcie WSDL.</param>
        <summary>Zwraca wartość reprezentującą wszystkie typy portów WSDL w określonym <see cref="T:System.Web.Services.Description.Service" />. <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /></summary>
        <returns>Reprezentuje wszystkie typy portów WSDL w określonym <see cref="T:System.Web.Services.Description.Service" />. <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sprawdź Właściwość <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> , aby określić, czy występują jakieś błędy importu przed użyciem zwracanego obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> Wystąpił błąd.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="wsdlService" /> Ma<see langword="null" />wartość.</exception>
      </Docs>
    </Member>
    <Member MemberName="WsdlDocuments">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ServiceDescriptionCollection WsdlDocuments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ServiceDescriptionCollection WsdlDocuments" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.WsdlDocuments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WsdlDocuments As ServiceDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ServiceDescriptionCollection ^ WsdlDocuments { System::Web::Services::Description::ServiceDescriptionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WsdlDocuments : System.Web.Services.Description.ServiceDescriptionCollection" Usage="System.ServiceModel.Description.WsdlImporter.WsdlDocuments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ServiceDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera zestaw <see cref="T:System.Web.Services.Description.ServiceDescription" /> obiektów opisujących informacje o kontrakcie w dokumentach metadanych.</summary>
        <value>Kolekcja <see cref="T:System.Web.Services.Description.ServiceDescription" /> obiektów, które opisują informacje o kontrakcie w dokumentach metadanych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.WsdlImporter.WsdlDocuments%2A> Właściwość nie jest wypełniana do momentu wywołania metody Import.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WsdlImportExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; WsdlImportExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; WsdlImportExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WsdlImportExtensions As KeyedByTypeCollection(Of IWsdlImportExtension)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ WsdlImportExtensions { System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WsdlImportExtensions : System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" Usage="System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera zestaw <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" /> obiektów używanych do importowania niestandardowych informacji WSDL.</summary>
        <value>Zestaw <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" /> obiektów służący do importowania niestandardowych informacji WSDL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A> , aby dodać lub usunąć niestandardowych importerów WSDL.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet XmlSchemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet XmlSchemas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.XmlSchemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlSchemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ XmlSchemas { System::Xml::Schema::XmlSchemaSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSchemas : System.Xml.Schema.XmlSchemaSet" Usage="System.ServiceModel.Description.WsdlImporter.XmlSchemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera zestaw <see cref="T:System.Xml.Schema.XmlSchema" /> obiektów, które opisują typy w metadanych.</summary>
        <value>Zestaw <see cref="T:System.Xml.Schema.XmlSchema" /> obiektów opisujących typy w metadanych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nie jest wypełniana do momentu wywołania jednej z metod importu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
