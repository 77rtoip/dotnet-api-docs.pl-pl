<Type Name="PrincipalPermissionMode" FullName="System.ServiceModel.Description.PrincipalPermissionMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="934786ff06cfe618d94325aea85eda8de373b501" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37455849" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum PrincipalPermissionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PrincipalPermissionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.PrincipalPermissionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum PrincipalPermissionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class PrincipalPermissionMode" />
  <TypeSignature Language="F#" Value="type PrincipalPermissionMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Ustawia tryb dla sprawdzeń autoryzacji, korzystając z <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> możesz kontrolować dostęp do metody.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas stosowania <xref:System.Security.Permissions.PrincipalPermissionAttribute> do metody określa ten tryb, który zestaw ról do użycia podczas autoryzowania dostępu. Domyślnie ten atrybut używa grup Windows (takie jak `Administrator` lub `Users`) określić rolę, do której użytkownik musi należeć.  
  
 Aby programowo ustawić tryb, Utwórz wystąpienie obiektu `ServiceHost` klasy, a następnie znajdź <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> w swojej kolekcji zachowań, a następnie ustaw <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> do odpowiednich wyliczenia. Poniższy przykład ustawia właściwość UseAspNetRoles.  
  
 [!code-csharp[PrincipalPermissionMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#1)]
 [!code-vb[PrincipalPermissionMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#1)]  
  
 Można również ustawić zachowanie w konfiguracji, dodając [ &lt;serviceAuthorization&gt; ](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md) do [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) programu plik konfiguracji, jak pokazano w poniższym kodzie.  
  
 [!code-csharp[PrincipalPermissionMode#10](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#10)]
 [!code-vb[PrincipalPermissionMode#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#10)]  
  
 Wyliczenie ma wpływ na sposób, w jaki <xref:System.Security.Permissions.PrincipalPermissionAttribute> atrybut upoważnia użytkownika, jeśli jest stosowany do metody. Poniższy przykład stosuje atrybut do metody i wymagania, że użytkownik należy do grupy użytkowników na komputerze. Ten kod działa tylko wtedy, gdy <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> ustawiono `UseWindowsGroup` (ustawienie domyślne).  
  
 [!code-csharp[PrincipalPermissionMode#2](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#2)]
 [!code-vb[PrincipalPermissionMode#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#2)]  
  
## <a name="useaspnetroles"></a>UseAspNetRoles  
 Wartość UseAspNetRoles jest używana dla wszystkich typów poświadczeń. Ten tryb pozwala Windows Communication Foundation (WCF) na potrzeby podejmowania decyzji dotyczących autoryzacji dostawcy ról ASP.NET.  
  
 Gdy poświadczenia dla usługi jest certyfikat X.509, możesz ustawić `Name` właściwość <xref:System.Security.Permissions.PrincipalPermissionAttribute> na ciąg, który składa się z połączonych wartości pola temat i pole odcisku palca, jak pokazano w poniższym przykładzie.  
  
 [!code-csharp[PrincipalPermissionMode#3](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#3)]
 [!code-vb[PrincipalPermissionMode#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#3)]  
  
 Połączony ciąg składa się z wartości podmiotu i odcisk palca, oddzielone średnikami i spacji.  
  
 Użytkownik może również dla certyfikatu do pola temat ustawiony na pusty ciąg. W takiej sytuacji można ustawić `Name` właściwość średnik następuje spację, a następnie odcisk palca, jak pokazano w poniższym przykładzie.  
  
 [!code-csharp[PrincipalPermissionMode#4](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#4)]
 [!code-vb[PrincipalPermissionMode#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#4)]  
  
 Jeśli dostawcy ról ASP.NET jest obecny, można również ustawić <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> właściwości do roli w bazie danych. Domyślnie baza danych jest reprezentowany przez <xref:System.Web.Security.SqlRoleProvider>. Można również ustawić dostawcę roli niestandardowej za pomocą <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider%2A> właściwość <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> klasy. Poniższy kod ustawia rolę `Administrators`. Należy pamiętać, że dostawcy roli musi być mapowane konto użytkownika do tej roli.  
  
 [!code-csharp[PrincipalPermissionMode#13](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#13)]
 [!code-vb[PrincipalPermissionMode#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#13)]  
  
 Aby uzyskać więcej informacji o dostawcy ról ASP.NET, zobacz [How to: Użyj roli menedżera programu ASP.NET 2.0](http://go.microsoft.com/fwlink/?LinkId=96692).  
  
 Aby uzyskać więcej informacji na temat korzystania z usługi WCF i dostawcy ról, zobacz [porady: Używanie dostawcy ról ASP.NET razem z usługą](~/docs/framework/wcf/feature-details/how-to-use-the-aspnet-role-provider-with-a-service.md).  
  
## <a name="custom"></a>Niestandardowe  
 Jeśli ustawiono właściwość niestandardowa, należy również podać klasę niestandardową, która implementuje <xref:System.IdentityModel.Policy.IAuthorizationPolicy> klasy. Ta klasa jest odpowiedzialne za świadczenie wywołującego `IPrincipal` reprezentacji wewnątrz <xref:System.IdentityModel.Policy.EvaluationContext.Properties%2A> kolekcji. Musi zostać zapisana `IPrincipal` wystąpienie kolekcji właściwości, za pomocą "Główną" ciągu klucza, jak pokazano w poniższym przykładzie.  
  
```  
evaluationContext.Properties["Principal"]=new CustomPrincipal(identity);  
```  
  
## <a name="background"></a>Tło  
 Zabezpieczenia oparte na rolach w [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] umożliwia aplikacji określić autoryzacji za pomocą kodu. Określając <xref:System.Security.Permissions.PrincipalPermission> żądanie <xref:System.Threading.Thread.CurrentPrincipal%2A> musi spełniać `PrincipalPermission` wymagań. Na przykład, że użytkownik musi znajdować się w określonej roli lub grupy. W przeciwnym razie wątek nie ma uprawnień do wykonania kodu, który powoduje wyjątek. Usługi WCF zawiera zbiór <xref:System.ServiceModel.Description.PrincipalPermissionMode> wybrane opcje, aby określić <xref:System.Threading.Thread.CurrentPrincipal%2A> na podstawie <xref:System.Security.SecurityContext> odpowiednio.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak określić UseAspNetRoles.  
  
 [!code-csharp[PrincipalPermissionMode#7](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#7)]
 [!code-vb[PrincipalPermissionMode#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#7)]  
  
 Poniższy przykład pokazuje, jak określić niestandardowe.  
  
 [!code-csharp[PrincipalPermissionMode#8](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#8)]
 [!code-vb[PrincipalPermissionMode#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Always">
      <MemberSignature Language="C#" Value="Always" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Always = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberSignature Language="VB.NET" Value="Always" />
      <MemberSignature Language="C++ CLI" Value="Always" />
      <MemberSignature Language="F#" Value="Always = 4" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Zawsze umożliwia użytkownikowi określenie <see cref="T:System.Security.Principal.IPrincipal" /> klasy dla <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Custom = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberSignature Language="VB.NET" Value="Custom" />
      <MemberSignature Language="C++ CLI" Value="Custom" />
      <MemberSignature Language="F#" Value="Custom = 3" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Umożliwia użytkownikowi określenie niestandardowej <see cref="T:System.Security.Principal.IPrincipal" /> klasy dla <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <see cref="P:System.Threading.Thread.CurrentPrincipal" /> Nie ustawiono.</summary>
      </Docs>
    </Member>
    <Member MemberName="UseAspNetRoles">
      <MemberSignature Language="C#" Value="UseAspNetRoles" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseAspNetRoles = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberSignature Language="VB.NET" Value="UseAspNetRoles" />
      <MemberSignature Language="C++ CLI" Value="UseAspNetRoles" />
      <MemberSignature Language="F#" Value="UseAspNetRoles = 2" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <see cref="P:System.Threading.Thread.CurrentPrincipal" /> jest ustawiona na podstawie [! Dostawca ról include[vstecasp](~/includes/vstecasp-MD.MD)] (<see cref="T:System.Web.Security.RoleProvider" />).</summary>
      </Docs>
    </Member>
    <Member MemberName="UseWindowsGroups">
      <MemberSignature Language="C#" Value="UseWindowsGroups" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseWindowsGroups = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberSignature Language="VB.NET" Value="UseWindowsGroups" />
      <MemberSignature Language="C++ CLI" Value="UseWindowsGroups" />
      <MemberSignature Language="F#" Value="UseWindowsGroups = 1" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <see cref="P:System.Threading.Thread.CurrentPrincipal" /> zestaw opiera się na Windows (<see cref="T:System.Security.Principal.WindowsPrincipal" />). Jeśli tożsamość użytkownika nie jest skojarzony z kontem usługi Windows, Windows anonimowego jest używana.</summary>
      </Docs>
    </Member>
  </Members>
</Type>