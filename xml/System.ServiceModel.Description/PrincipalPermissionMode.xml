<Type Name="PrincipalPermissionMode" FullName="System.ServiceModel.Description.PrincipalPermissionMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="083da8de48c1aa2a763b2001ac874136da75d1b8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69151997" /></Metadata><TypeSignature Language="C#" Value="public enum PrincipalPermissionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PrincipalPermissionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.PrincipalPermissionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum PrincipalPermissionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class PrincipalPermissionMode" />
  <TypeSignature Language="F#" Value="type PrincipalPermissionMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Ustawia tryb sprawdzania autoryzacji podczas korzystania <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> z programu w celu kontrolowania dostępu do metody.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku zastosowania <xref:System.Security.Permissions.PrincipalPermissionAttribute> do metody, ten tryb określa, który zestaw ról ma być używany podczas autoryzowania dostępu. Domyślnie atrybut używa grup systemu Windows (takich jak `Administrator` lub `Users`), aby określić rolę, do której użytkownik musi należeć.  
  
 Aby programowo ustawić tryb, Utwórz wystąpienie `ServiceHost` klasy, a następnie <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> Znajdź w kolekcji <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> zachowań i ustaw odpowiednie Wyliczenie. Poniższy przykład ustawia właściwość na UseAspNetRoles.  
  
 [!code-csharp[PrincipalPermissionMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#1)]
 [!code-vb[PrincipalPermissionMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#1)]  
  
 Możesz również ustawić zachowanie w konfiguracji, dodając [ &lt;&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) [ &lt;ServiceAuthorization&gt; ](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md) do serviceBehaviors pliku konfiguracji, jak pokazano w poniższym kodzie.  
  
 [!code-csharp[PrincipalPermissionMode#10](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#10)]
 [!code-vb[PrincipalPermissionMode#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#10)]  
  
 Wyliczenie wpływa na to, <xref:System.Security.Permissions.PrincipalPermissionAttribute> w jaki sposób atrybut autoryzuje użytkownika w przypadku zastosowania go do metody. Poniższy przykład stosuje atrybut do metody i wymaga, aby użytkownik należał do grupy Użytkownicy na komputerze. Ten kod działa tylko wtedy, <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> gdy jest ustawiony `UseWindowsGroup` na (ustawienie domyślne).  
  
 [!code-csharp[PrincipalPermissionMode#2](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#2)]
 [!code-vb[PrincipalPermissionMode#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#2)]  
  
## <a name="useaspnetroles"></a>UseAspNetRoles  
 Wartość UseAspNetRoles jest używana dla wszystkich typów poświadczeń. Ten tryb umożliwia Windows Communication Foundation (WCF) użycie dostawcy roli ASP.NET w celu podejmowania decyzji dotyczących autoryzacji.  
  
 Gdy poświadczenie usługi jest certyfikatem X. 509, można ustawić `Name` Właściwość <xref:System.Security.Permissions.PrincipalPermissionAttribute> na ciąg, który składa się z połączonych wartości pola podmiotu i odcisku palca, jak pokazano w poniższym przykładzie.  
  
 [!code-csharp[PrincipalPermissionMode#3](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#3)]
 [!code-vb[PrincipalPermissionMode#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#3)]  
  
 Ciąg połączony składa się z wartości tematu i odcisku palca rozdzielonych średnikami i spacją.  
  
 Istnieje również możliwość, aby certyfikat miał pole subject o wartości null. W takim przypadku można ustawić `Name` właściwość na średnik, po którym następuje spacja, a następnie odcisk palca, jak pokazano w poniższym przykładzie.  
  
 [!code-csharp[PrincipalPermissionMode#4](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#4)]
 [!code-vb[PrincipalPermissionMode#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#4)]  
  
 Jeśli istnieje dostawca roli ASP.NET, można również ustawić <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> właściwość na rolę w bazie danych. Domyślnie baza danych jest reprezentowana przez <xref:System.Web.Security.SqlRoleProvider>. Można również ustawić niestandardowego dostawcę roli z <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider%2A> właściwością <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> klasy. Poniższy kod ustawia rolę na `Administrators`. Należy pamiętać, że dostawca roli musi zmapować konto użytkownika na tę rolę.  
  
 [!code-csharp[PrincipalPermissionMode#13](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#13)]
 [!code-vb[PrincipalPermissionMode#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#13)]  
  
 Aby uzyskać więcej informacji na temat dostawcy roli ASP.NET, [zobacz How to: Użyj menedżera ról w ASP.NET 2,0](https://go.microsoft.com/fwlink/?LinkId=96692).  
  
 Aby uzyskać więcej informacji o korzystaniu z programu WCF i dostawcy [roli, zobacz How to: Używanie dostawcy roli ASP.NET z usługą](~/docs/framework/wcf/feature-details/how-to-use-the-aspnet-role-provider-with-a-service.md).  
  
## <a name="custom"></a>Celnej  
 Gdy właściwość jest ustawiona na Custom, należy również podać klasę niestandardową implementującą <xref:System.IdentityModel.Policy.IAuthorizationPolicy> klasę. Ta klasa jest odpowiedzialna za dostarczanie `IPrincipal` reprezentacji obiektu wywołującego <xref:System.IdentityModel.Policy.EvaluationContext.Properties%2A> w kolekcji. `IPrincipal` Wystąpienie musi być przechowywane w kolekcji właściwości przy użyciu klucza ciągu "Principal", jak pokazano w poniższym przykładzie.  
  
```  
evaluationContext.Properties["Principal"]=new CustomPrincipal(identity);  
```  
  
## <a name="background"></a>Tło  
 Zabezpieczenia oparte na rolach w programie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] umożliwiają aplikacjom Określanie autoryzacji za pośrednictwem kodu. Przez określenie <xref:System.Security.Permissions.PrincipalPermission> zapotrzebowania <xref:System.Threading.Thread.CurrentPrincipal%2A> , musi spełniać `PrincipalPermission` wymaganie. Na przykład, że użytkownik musi należeć do określonej roli lub grupy. W przeciwnym razie wątek nie jest autoryzowany do wykonania kodu, co spowoduje wyjątek. Funkcja WCF oferuje zestaw <xref:System.ServiceModel.Description.PrincipalPermissionMode> opcji, aby <xref:System.Threading.Thread.CurrentPrincipal%2A> określić <xref:System.Security.SecurityContext> odpowiednio na podstawie.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak określić UseAspNetRoles.  
  
 [!code-csharp[PrincipalPermissionMode#7](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#7)]
 [!code-vb[PrincipalPermissionMode#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#7)]  
  
 Poniższy przykład pokazuje, jak określić niestandardowe.  
  
 [!code-csharp[PrincipalPermissionMode#8](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#8)]
 [!code-vb[PrincipalPermissionMode#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Always">
      <MemberSignature Language="C#" Value="Always" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Always = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberSignature Language="VB.NET" Value="Always" />
      <MemberSignature Language="C++ CLI" Value="Always" />
      <MemberSignature Language="F#" Value="Always = 4" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Zawsze umożliwia użytkownikowi określenie <see cref="T:System.Security.Principal.IPrincipal" /> klasy dla. <see cref="P:System.Threading.Thread.CurrentPrincipal" /></summary>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Custom = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberSignature Language="VB.NET" Value="Custom" />
      <MemberSignature Language="C++ CLI" Value="Custom" />
      <MemberSignature Language="F#" Value="Custom = 3" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Umożliwia użytkownikowi określenie klasy niestandardowej <see cref="T:System.Security.Principal.IPrincipal" /> dla. <see cref="P:System.Threading.Thread.CurrentPrincipal" /></summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><see cref="P:System.Threading.Thread.CurrentPrincipal" />nie jest ustawiona.</summary>
      </Docs>
    </Member>
    <Member MemberName="UseAspNetRoles">
      <MemberSignature Language="C#" Value="UseAspNetRoles" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseAspNetRoles = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberSignature Language="VB.NET" Value="UseAspNetRoles" />
      <MemberSignature Language="C++ CLI" Value="UseAspNetRoles" />
      <MemberSignature Language="F#" Value="UseAspNetRoles = 2" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><see cref="P:System.Threading.Thread.CurrentPrincipal" />jest ustawiana na podstawie [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] dostawcy roli (<see cref="T:System.Web.Security.RoleProvider" />).</summary>
      </Docs>
    </Member>
    <Member MemberName="UseWindowsGroups">
      <MemberSignature Language="C#" Value="UseWindowsGroups" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseWindowsGroups = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberSignature Language="VB.NET" Value="UseWindowsGroups" />
      <MemberSignature Language="C++ CLI" Value="UseWindowsGroups" />
      <MemberSignature Language="F#" Value="UseWindowsGroups = 1" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><see cref="P:System.Threading.Thread.CurrentPrincipal" />jest ustawiana na podstawie systemu<see cref="T:System.Security.Principal.WindowsPrincipal" />Windows (). Jeśli tożsamość użytkownika nie jest skojarzona z kontem systemu Windows, używane są anonimowe okna.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
