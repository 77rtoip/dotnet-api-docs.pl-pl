<Type Name="PrincipalPermissionMode" FullName="System.ServiceModel.Description.PrincipalPermissionMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="79f46d53f4511a777d9d7f073432bd85655d96d2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36616764" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum PrincipalPermissionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PrincipalPermissionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.PrincipalPermissionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum PrincipalPermissionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class PrincipalPermissionMode" />
  <TypeSignature Language="F#" Value="type PrincipalPermissionMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Ustawia tryb dla sprawdzeń autoryzacji, korzystając z <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> kontrolować dostęp do metody.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas stosowania <xref:System.Security.Permissions.PrincipalPermissionAttribute> do metody, w tym trybie określa zestaw ról do użycia podczas autoryzowania dostępu. Domyślnie ten atrybut używa grupy systemu Windows (takie jak `Administrator` lub `Users`) do roli, do której użytkownik musi należeć do określenia.  
  
 Aby ustawić tryb programowo, Utwórz wystąpienie `ServiceHost` klasy, a następnie znajdź <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> w jego kolekcji zachowań i zestaw <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> do odpowiednich wyliczenia. Poniższy przykład ustawia właściwość UseAspNetRoles.  
  
 [!code-csharp[PrincipalPermissionMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#1)]
 [!code-vb[PrincipalPermissionMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#1)]  
  
 To zachowanie można ustawić w konfiguracji, dodając [ &lt;serviceAuthorization&gt; ](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md) do [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) z plik konfiguracji, jak pokazano w poniższym kodzie.  
  
 [!code-csharp[PrincipalPermissionMode#10](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#10)]
 [!code-vb[PrincipalPermissionMode#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#10)]  
  
 Wyliczenie ma wpływ na sposób <xref:System.Security.Permissions.PrincipalPermissionAttribute> atrybutu upoważnia użytkownika, jeśli jest stosowany do metody. Poniższy przykład stosuje atrybut do metody i wymagania, że użytkownik należy do grupy użytkowników na komputerze. Ten kod działa tylko wtedy, gdy <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> ma ustawioną wartość `UseWindowsGroup` (ustawienie domyślne).  
  
 [!code-csharp[PrincipalPermissionMode#2](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#2)]
 [!code-vb[PrincipalPermissionMode#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#2)]  
  
## <a name="useaspnetroles"></a>UseAspNetRoles  
 Wartość UseAspNetRoles jest używana dla wszystkich typów poświadczeń. Ten tryb umożliwia Windows Communication Foundation (WCF) na potrzeby podejmować decyzje dotyczące autoryzacji dostawcy ról ASP.NET.  
  
 W przypadku poświadczenia dla usługi certyfikatu X.509, można ustawić `Name` właściwość <xref:System.Security.Permissions.PrincipalPermissionAttribute> na ciąg, który składa się z połączonych wartości w polu podmiotu i odcisk palca, jak pokazano w poniższym przykładzie.  
  
 [!code-csharp[PrincipalPermissionMode#3](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#3)]
 [!code-vb[PrincipalPermissionMode#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#3)]  
  
 Połączony ciąg składa się z wartości podmiotu i odcisk palca, oddzielone średnikami i spacji.  
  
 Istnieje również możliwość ma ustawioną wartość pusty ciąg pola podmiotu certyfikatu. W takim przypadku można ustawić `Name` właściwości średnikiem następuje spację, a następnie odcisku palca, jak pokazano w poniższym przykładzie.  
  
 [!code-csharp[PrincipalPermissionMode#4](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#4)]
 [!code-vb[PrincipalPermissionMode#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#4)]  
  
 Jeśli dostawcy ról ASP.NET jest obecny, można również ustawić <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> właściwości roli w bazie danych. Domyślnie bazy danych jest reprezentowana przez <xref:System.Web.Security.SqlRoleProvider>. Można również ustawić dostawcę niestandardowej roli zabezpieczeń z <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider%2A> właściwość <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> klasy. Poniższy kod ustawia rolę `Administrators`. Należy pamiętać, że dostawca roli musi być zamapowany konta użytkownika do tej roli.  
  
 [!code-csharp[PrincipalPermissionMode#13](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#13)]
 [!code-vb[PrincipalPermissionMode#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#13)]  
  
 Aby uzyskać więcej informacji o dostawcy ról ASP.NET, zobacz [jak: Użyj menedżera ról w programie ASP.NET 2.0](http://go.microsoft.com/fwlink/?LinkId=96692).  
  
 Aby uzyskać więcej informacji na temat korzystania z usługi WCF i dostawcy ról, zobacz [porady: Używanie dostawcy ról ASP.NET z usługą](~/docs/framework/wcf/feature-details/how-to-use-the-aspnet-role-provider-with-a-service.md).  
  
## <a name="custom"></a>Niestandardowe  
 Gdy właściwość jest ustawiona na Custom, musisz także podać niestandardowej klasy, która implementuje <xref:System.IdentityModel.Policy.IAuthorizationPolicy> klasy. Ta klasa jest odpowiedzialny za zapewnienie wywołującego `IPrincipal` reprezentacja wewnątrz <xref:System.IdentityModel.Policy.EvaluationContext.Properties%2A> kolekcji. Musi być przechowywany `IPrincipal` wystąpienie do kolekcji właściwości przy użyciu ciągu "Główny" klucza, jak pokazano w poniższym przykładzie.  
  
```  
evaluationContext.Properties["Principal"]=new CustomPrincipal(identity);  
```  
  
## <a name="background"></a>Tło  
 Zabezpieczenia oparte na rolach w [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] umożliwia Określ zezwolenia na przechodzenie przez kod aplikacji. Określając <xref:System.Security.Permissions.PrincipalPermission> żądanie, <xref:System.Threading.Thread.CurrentPrincipal%2A> muszą spełniać `PrincipalPermission` wymaganie. Na przykład, który użytkownik musi znajdować się w określonej roli lub grupy. W przeciwnym razie wątku nie ma uprawnień do wykonywania kodu, która powoduje wygenerowanie wyjątku. Usługi WCF oferuje zestaw <xref:System.ServiceModel.Description.PrincipalPermissionMode> wybrane opcje, aby określić <xref:System.Threading.Thread.CurrentPrincipal%2A> na podstawie <xref:System.Security.SecurityContext> odpowiednio.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób określania UseAspNetRoles.  
  
 [!code-csharp[PrincipalPermissionMode#7](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#7)]
 [!code-vb[PrincipalPermissionMode#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#7)]  
  
 Poniższy przykład pokazuje, jak określić niestandardowe.  
  
 [!code-csharp[PrincipalPermissionMode#8](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#8)]
 [!code-vb[PrincipalPermissionMode#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Always">
      <MemberSignature Language="C#" Value="Always" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Always = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberSignature Language="VB.NET" Value="Always" />
      <MemberSignature Language="C++ CLI" Value="Always" />
      <MemberSignature Language="F#" Value="Always = 4" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Zawsze umożliwia użytkownikowi określenie <see cref="T:System.Security.Principal.IPrincipal" /> klasy dla <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Custom = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberSignature Language="VB.NET" Value="Custom" />
      <MemberSignature Language="C++ CLI" Value="Custom" />
      <MemberSignature Language="F#" Value="Custom = 3" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Umożliwia użytkownikowi określenie niestandardowego <see cref="T:System.Security.Principal.IPrincipal" /> klasy dla <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <see cref="P:System.Threading.Thread.CurrentPrincipal" /> Nie ustawiono.</summary>
      </Docs>
    </Member>
    <Member MemberName="UseAspNetRoles">
      <MemberSignature Language="C#" Value="UseAspNetRoles" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseAspNetRoles = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberSignature Language="VB.NET" Value="UseAspNetRoles" />
      <MemberSignature Language="C++ CLI" Value="UseAspNetRoles" />
      <MemberSignature Language="F#" Value="UseAspNetRoles = 2" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <see cref="P:System.Threading.Thread.CurrentPrincipal" /> jest ustawiony na podstawie [! Dostawca roli include[vstecasp](~/includes/vstecasp-MD.MD)] (<see cref="T:System.Web.Security.RoleProvider" />).</summary>
      </Docs>
    </Member>
    <Member MemberName="UseWindowsGroups">
      <MemberSignature Language="C#" Value="UseWindowsGroups" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseWindowsGroups = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberSignature Language="VB.NET" Value="UseWindowsGroups" />
      <MemberSignature Language="C++ CLI" Value="UseWindowsGroups" />
      <MemberSignature Language="F#" Value="UseWindowsGroups = 1" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <see cref="P:System.Threading.Thread.CurrentPrincipal" /> jest zestaw opartych na systemie Windows (<see cref="T:System.Security.Principal.WindowsPrincipal" />). Jeśli tożsamość użytkownika nie jest skojarzona z kontem systemu Windows, Windows anonimowego jest używana.</summary>
      </Docs>
    </Member>
  </Members>
</Type>