<Type Name="IWsdlExportExtension" FullName="System.ServiceModel.Description.IWsdlExportExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9bbc35369008c2910214deb8cef97563fd3fafa8" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34315049" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWsdlExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWsdlExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWsdlExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWsdlExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje zachowania punktu końcowego lub kontraktu, które można wyeksportować niestandardowych metadanych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Do modyfikacji i rozszerzenia sieci Web Services Description Language (WSDL) wyeksportowany przez <xref:System.ServiceModel.Description.WsdlExporter> zaimplementować obiekty <xref:System.ServiceModel.Description.IWsdlExportExtension> interfejsu zachowania punktu końcowego, umowy lub operacji (obiekt, który implementuje albo <xref:System.ServiceModel.Description.IContractBehavior>, <xref:System.ServiceModel.Description.IEndpointBehavior>, lub <xref:System.ServiceModel.Description.IOperationBehavior>) i Dodaj zachowania <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A>, <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A>, lub <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A> właściwości. Ponadto można też wdrożyć <xref:System.ServiceModel.Description.IWsdlExportExtension> na <xref:System.ServiceModel.Channels.BindingElement>.  
  
> [!NOTE]
>  <xref:System.ServiceModel.Description.IWsdlExportExtension> implementacje nigdy nie są wywoływane, gdy są one zaimplementowane jako <xref:System.ServiceModel.Description.IServiceBehavior>.  
  
 <xref:System.ServiceModel.Description.IWsdlExportExtension> Eksportowanie niestandardowych asercji zasad, nawet jeśli Windows Communication Foundation (WCF) eksportuje potwierdzeń zasad niestandardowego powiązania do odpowiedniego elementu w języku WSDL. Aby wyeksportować niestandardowych asercji zasad, należy wdrożyć <xref:System.ServiceModel.Description.IPolicyExportExtension> interfejsu.  
  
 Rozpocznie się proces Publikowanie metadanych przez wywołanie metody <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoints%2A?displayProperty=nameWithType> które z kolei wywołuje <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoint%2A?displayProperty=nameWithType> dla każdego punktu końcowego.  
  
 Punkt końcowy jest eksportowany przez pierwszy eksportu kontraktu. Podczas eksportowania kontrakt <xref:System.ServiceModel.Description.WsdlExporter?displayProperty=nameWithType> wywołania <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=nameWithType> metody na wszystkich <xref:System.ServiceModel.Description.IWsdlExportExtension> implementacje na kontrakt i operacja zachowania dla tego kontraktu. Operacje wykorzystujące akcji symbolu wieloznacznego nie są eksportowane w metadanych, więc <xref:System.ServiceModel.Description.IWsdlExportExtension> implementacje na operację zachowania te operacje nie są eksportowane.  
  
 Po wyeksportowaniu kontraktu, port i powiązania są eksportowane i eksportować zasady, które są dołączone wyrażenia.  
  
 Zarówno <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> i <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> metody zapewniają dostęp do <xref:System.ServiceModel.Description.WsdlExporter> , aby <xref:System.ServiceModel.Description.IWsdlExportExtension> implementacje zgłosić nieodwracalny błędy i ostrzeżenia za pośrednictwem <xref:System.ServiceModel.Description.MetadataExporter.Errors%2A> właściwości. Przekazane do obu metod obiektów kontekstu zapewniają wygodne mapowania z wyeksportowanego elementy WSDL do właściwości <xref:System.ServiceModel.Description.ContractDescription> i <xref:System.ServiceModel.Description.ServiceEndpoint> obiektów.  
  
 Jeśli <xref:System.ServiceModel.Description.IWsdlExportExtension> implementacja zwraca wyjątek w obiekcie eksportu, wygenerowanego metadanych jest w stanie niespójnym i <xref:System.ServiceModel.Description.WsdlExporter> obiektu powinny zostać odrzucone.  
  
> [!NOTE]
>  Rozszerzenia eksportu niestandardowe, należy uruchomić po wbudowanych serializator wypełnia opisu usługi.  
  
   
  
## Examples  
 Poniższy kod przedstawia przykład <xref:System.ServiceModel.Description.IWsdlExportExtension> dodaje dokumentacji niestandardowych atrybutów pliku WSDL jako adnotacje WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExportContract">
      <MemberSignature Language="C#" Value="public void ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportContract(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportContract (exporter As WsdlExporter, context As WsdlContractConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportContract(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlContractConversionContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">
          <see cref="T:System.ServiceModel.Description.WsdlExporter" /> Który Eksportuje informacje kontraktu.</param>
        <param name="context">Zawiera mapowania z wyeksportowanego elementy WSDL Opis kontraktu.</param>
        <summary>Zapisuje elementy niestandardowe Web Services Description Language (WSDL) w wygenerowanym pliku WSDL dla kontraktu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> Metoda jest wywoływana, gdy system eksportu metadanych jest eksportu kontraktu. Tylko zachowania kontrakt i operacja implementowania <xref:System.ServiceModel.Description.IWsdlExportExtension> uzyskać <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> wywołania. Wszystkie zachowania implementacja <xref:System.ServiceModel.Description.IWsdlExportExtension> uzyskać <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> wywołania.  
  
 Użyj `context` parametr, aby zmodyfikować WSDL do wyeksportowania. Na przykład zobacz sekcję przykład.  
  
   
  
## Examples  
 Poniższy kod przedstawia przykład <xref:System.ServiceModel.Description.IWsdlExportExtension> dodaje dokumentacji niestandardowych atrybutów pliku WSDL jako adnotacje WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportEndpoint">
      <MemberSignature Language="C#" Value="public void ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportEndpoint(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlEndpointConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportEndpoint (exporter As WsdlExporter, context As WsdlEndpointConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportEndpoint(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">
          <see cref="T:System.ServiceModel.Description.WsdlExporter" /> Który Eksportuje informacje o punkcie końcowym.</param>
        <param name="context">Zawiera mapowania z wyeksportowanego elementy WSDL w opisie punktu końcowego.</param>
        <summary>Zapisuje elementy niestandardowe Web Services Description Language (WSDL) w wygenerowanym pliku WSDL dla punktu końcowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementowanie <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> metodę, aby zmodyfikować WSDL wyeksportowane dla punktu końcowego. Ta metoda jest wywoływana po wyeksportowaniu kontrakt przez <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>.  
  
   
  
## Examples  
 Poniższy kod przedstawia przykład <xref:System.ServiceModel.Description.IWsdlExportExtension> dodaje dokumentacji niestandardowych atrybutów pliku WSDL jako adnotacje WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>