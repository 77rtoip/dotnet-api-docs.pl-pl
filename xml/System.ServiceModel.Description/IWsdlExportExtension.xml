<Type Name="IWsdlExportExtension" FullName="System.ServiceModel.Description.IWsdlExportExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="826155e39960582186cf550051437aa2353b63cf" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69152648" /></Metadata><TypeSignature Language="C#" Value="public interface IWsdlExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWsdlExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWsdlExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWsdlExportExtension" />
  <TypeSignature Language="F#" Value="type IWsdlExportExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje działanie punktów końcowych lub kontraktów, które mogą eksportować metadane niestandardowe.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zmodyfikować <xref:System.ServiceModel.Description.WsdlExporter> i rozłożyć Web Services Description Language (WSDL) wyeksportowane przez obiekty, <xref:System.ServiceModel.Description.IWsdlExportExtension> Zaimplementuj interfejs w punkcie końcowym, kontrakcie lub operacji (obiekt, który implementuje albo <xref:System.ServiceModel.Description.IEndpointBehavior> <xref:System.ServiceModel.Description.IContractBehavior>, lub ) i Dodaj zachowanie <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A>do właściwości, <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A>, lub <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A>. <xref:System.ServiceModel.Description.IOperationBehavior> Ponadto można również zaimplementować <xref:System.ServiceModel.Description.IWsdlExportExtension> <xref:System.ServiceModel.Channels.BindingElement>na.  
  
> [!NOTE]
>  <xref:System.ServiceModel.Description.IWsdlExportExtension>implementacje nigdy nie są wywoływane, jeśli są zaimplementowane <xref:System.ServiceModel.Description.IServiceBehavior>jako.  
  
 <xref:System.ServiceModel.Description.IWsdlExportExtension>nie eksportuje potwierdzeń zasad niestandardowych, mimo że Windows Communication Foundation (WCF) eksportuje niestandardowe potwierdzenia zasad powiązań do odpowiedniego elementu w języku WSDL. Jeśli chcesz wyeksportować potwierdzenia zasad niestandardowych, zaimplementuj <xref:System.ServiceModel.Description.IPolicyExportExtension> interfejs.  
  
 Proces publikacji metadanych rozpoczyna się od wywołania <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoints%2A?displayProperty=nameWithType> , które z kolei <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoint%2A?displayProperty=nameWithType> powodują wywołania dla każdego punktu końcowego.  
  
 Punkt końcowy jest eksportowany przez uprzednie eksportowanie jego kontraktu. Podczas eksportowania kontraktu <xref:System.ServiceModel.Description.WsdlExporter?displayProperty=nameWithType> program <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=nameWithType> wywołuje metodę we wszystkich <xref:System.ServiceModel.Description.IWsdlExportExtension> implementacjach kontraktu i zachowań operacji dla tego kontraktu. Operacje wykorzystujące wieloznaczne akcje nie są eksportowane w metadanych, <xref:System.ServiceModel.Description.IWsdlExportExtension> więc implementacje dla tych operacji nie są eksportowane.  
  
 Po wyeksportowaniu kontraktu port i powiązanie są eksportowane, a wyeksportowane wyrażenia zasad są dołączane.  
  
 <xref:System.ServiceModel.Description.IWsdlExportExtension> <xref:System.ServiceModel.Description.MetadataExporter.Errors%2A> Obie metody i zapewniają dostęp do tak, aby implementacje mogły raportować odwracalne błędy i ostrzeżenia za pomocą właściwości. <xref:System.ServiceModel.Description.WsdlExporter> <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> Obiekty kontekstu przechodzą do obu metod zapewniają wygodne mapowania z wyeksportowanych elementów WSDL do <xref:System.ServiceModel.Description.ContractDescription> właściwości <xref:System.ServiceModel.Description.ServiceEndpoint> i obiektów.  
  
 Jeśli implementacja zgłasza wyjątek podczas eksportowania, wygenerowane metadane są w stanie niespójnym, <xref:System.ServiceModel.Description.WsdlExporter> a obiekt powinien zostać odrzucony. <xref:System.ServiceModel.Description.IWsdlExportExtension>  
  
> [!NOTE]
>  Niestandardowe rozszerzenie eksportu musi zostać uruchomione po wbudowanym serializatorze wypełnia Opis usługi.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje <xref:System.ServiceModel.Description.IWsdlExportExtension> , że dodaje niestandardowe atrybuty dokumentacji do pliku WSDL jako adnotacje WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExportContract">
      <MemberSignature Language="C#" Value="public void ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportContract(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportContract (exporter As WsdlExporter, context As WsdlContractConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportContract(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlContractConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportContract : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlContractConversionContext -&gt; unit" Usage="iWsdlExportExtension.ExportContract (exporter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="exporter"><see cref="T:System.ServiceModel.Description.WsdlExporter" /> Eksportowanie informacji o kontrakcie.</param>
        <param name="context">Zawiera mapowania z wyeksportowanych elementów WSDL do opisu kontraktu.</param>
        <summary>Zapisuje niestandardowe elementy Web Services Description Language (WSDL) do wygenerowanego WSDL dla kontraktu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> Metoda jest wywoływana, gdy system eksportu metadanych eksportuje kontrakt. Tylko zachowania kontraktowe i operacje <xref:System.ServiceModel.Description.IWsdlExportExtension> implementujące <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> wywołanie metody get. Wszystkie zachowania implementujące <xref:System.ServiceModel.Description.IWsdlExportExtension> <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> wywołanie.  
  
 `context` Użyj parametru, aby zmodyfikować WSDL do wyeksportowania. Aby zapoznać się z przykładem, zapoznaj się z sekcją przykładową.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje <xref:System.ServiceModel.Description.IWsdlExportExtension> , że dodaje niestandardowe atrybuty dokumentacji do pliku WSDL jako adnotacje WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportEndpoint">
      <MemberSignature Language="C#" Value="public void ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportEndpoint(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlEndpointConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportEndpoint (exporter As WsdlExporter, context As WsdlEndpointConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportEndpoint(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportEndpoint : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlEndpointConversionContext -&gt; unit" Usage="iWsdlExportExtension.ExportEndpoint (exporter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="exporter"><see cref="T:System.ServiceModel.Description.WsdlExporter" /> Eksportuje informacje o punkcie końcowym.</param>
        <param name="context">Udostępnia mapowania z wyeksportowanych elementów WSDL do opisu punktu końcowego.</param>
        <summary>Zapisuje niestandardowe elementy Web Services Description Language (WSDL) do wygenerowanego WSDL dla punktu końcowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementuj <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> metodę w celu zmodyfikowania elementu WSDL wyeksportowanego dla punktu końcowego. Ta metoda jest wywoływana po wyeksportowaniu kontraktu przez <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>program.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje <xref:System.ServiceModel.Description.IWsdlExportExtension> , że dodaje niestandardowe atrybuty dokumentacji do pliku WSDL jako adnotacje WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
