<Type Name="ServiceMetadataBehavior" FullName="System.ServiceModel.Description.ServiceMetadataBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bb327fc4666a325fadd27c51df12450a4cffcfff" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48650567" /></Metadata><TypeSignature Language="C#" Value="public class ServiceMetadataBehavior : System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceMetadataBehavior extends System.Object implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceMetadataBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceMetadataBehavior&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceMetadataBehavior : System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type ServiceMetadataBehavior = class&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Określa publikację usługi metadanych i skojarzonych informacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dodaj <xref:System.ServiceModel.Description.ServiceMetadataBehavior> obiekt <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A?displayProperty=nameWithType> kolekcji (lub [ &lt;serviceMetadata&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicemetadata.md) elementu w pliku konfiguracji aplikacji) Aby włączyć lub wyłączyć publikację usługi metadanych. Jednak dodanie zachowania do usługi nie jest wystarczające, aby umożliwić publikowanie metadanych:  
  
-   Aby włączyć pobieranie przesunięcia WS pobierania metadanych, należy dodać punkt końcowy usługi, w którym kontrakt jest `IMetadataExchange`. Aby uzyskać przykład, zobacz [porady: Publikowanie metadanych dla kodu za pomocą usługi](~/docs/framework/wcf/feature-details/how-to-publish-metadata-for-a-service-using-code.md). `IMetadataExchange` Punktu końcowego można skonfigurować, tak jak w innych punktów końcowych.  
  
-   Aby włączyć HTTP GET pobierania metadanych, ustaw <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> właściwość `true`. Aby uzyskać więcej informacji o adresie metadanych HTTP GET, zobacz <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A>.  
  
 Adres `IMetadataExchange` punkt końcowy poniżej normalnego reguły dotyczące kombinacji adres podstawowy i adresy punktów końcowych. Aby uzyskać więcej informacji, zobacz [Publikowanie metadanych](~/docs/framework/wcf/feature-details/publishing-metadata.md).  
  
 Aby włączyć publikacji metadanych przy użyciu pliku konfiguracji, należy dodać [ &lt;serviceMetadata&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicemetadata.md) elementu [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md)elementu i skojarzyć element z [ &lt;usługi&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) elementu, dla którego chcesz opublikować metadanych. Aby uzyskać przykład, zobacz [porady: Publikowanie metadanych dla usługi przy użyciu pliku konfiguracji](~/docs/framework/wcf/feature-details/how-to-publish-metadata-for-a-service-using-a-configuration-file.md). Klasa ma następujące składowe:  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> Właściwość określa, czy metadane są zwracane w przypadku żądań HTTP/GET.  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> Właściwość (w połączeniu z adresami podstawowymi) określa adres HTTP/GET.  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A> Właściwość określa, czy metadane są zwracane dla żądania HTTPS/GET.  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> Właściwość (w połączeniu z adresami podstawowymi) określa adres HTTPS/GET.  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.MetadataExporter%2A> Właściwość zwraca eksportu podstawowej.  
  
 Zazwyczaj <xref:System.ServiceModel.Description.ServiceMetadataBehavior> jest używany z pliku konfiguracji aplikacji. W sekcji przykład przykładowy kod.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.ServiceModel.Description.ServiceMetadataBehavior> w pliku konfiguracji, aby włączyć obsługę metadanych HTTP oraz usługi WS-transferu żądań.  
  
 [!code-csharp[ServiceMetadataBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicemetadatabehavior/cs/hostapplication.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceMetadataBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceMetadataBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Description.ServiceMetadataBehavior" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzy <xref:System.ServiceModel.Description.ServiceMetadataBehavior> z następującymi wartościami:  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> Właściwość `false`.  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A> Właściwość `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExternalMetadataLocation">
      <MemberSignature Language="C#" Value="public Uri ExternalMetadataLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ExternalMetadataLocation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.ExternalMetadataLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property ExternalMetadataLocation As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ExternalMetadataLocation { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExternalMetadataLocation : Uri with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.ExternalMetadataLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która wskazuje lokalizację metadanych usługi.</summary>
        <value>Lokalizacja metadanych usługi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwraca odwołanie do lokalizacji zewnętrznej metadanych dla klientów. <xref:System.ServiceModel.Description.ServiceMetadataBehavior.ExternalMetadataLocation%2A> Właściwość może być względna lub bezwzględna. Czy względną adres został rozwiązany przez klienta względem <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> lub <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A>, w zależności od sposobu klienta pobierane metadane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość jest bezwzględny, a schemat jest http ani https.</exception>
      </Docs>
    </Member>
    <Member MemberName="HttpGetBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpGetBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpGetBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpGetBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wiązanie używane do skonfigurowania pobierania metadanych, jeśli transport jest protokół HTTP.</summary>
        <value>A <see cref="T:System.ServiceModel.Channels.Binding" /> który może służyć do pobierania metadanych za pośrednictwem protokołu HTTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poprzednich wersjach usługi WCF pobierania metadanych było wykonywane przy użyciu protokołu HTTP, Uzyskaj dostęp do strony pomocy usługi za pośrednictwem przeglądarki sieci web. Tylko <xref:System.ServiceModel.Channels.HttpTransportBindingElement> była obsługiwana.  Do pobierania metadanych tylko przy użyciu protokołu HTTPS, Uzyskaj, <xref:System.ServiceModel.Channels.HttpsTransportBindingElement> była obsługiwana.   Właściwości HttpGetBinding i HttpsGetBinding umożliwiają użycie powiązania dla pobierania metadanych za pomocą GET protokołu HTTP (lub HTTPS GET) i powiązania umożliwiają dostęp do stron sieci web usługi można konfigurować, programowo lub za pomocą plików konfiguracji.  
  
 Aby uzyskać więcej informacji na temat pobierania stron pomocy, użyj <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding%2A> i <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpGetEnabled">
      <MemberSignature Language="C#" Value="public bool HttpGetEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpGetEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpGetEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy publikować metadane usługi dla pobrania za pomocą żądania HTTP/GET.</summary>
        <value><see langword="true" /> Jeśli pliku WSDL jest opublikowana; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> jest względna, adres, w którym publikowane są metadane to adres podstawowy i adres usługi oraz `?wsdl` querystring.  
  
 Jeśli wartość <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> jest bezwzględny adres, w którym publikowane są metadane jest wartością <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> wartości oraz `?wsdl` querystring.  
  
 Na przykład, jeśli jest adres usługi `http://localhost:8080/CalculatorService` i <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> jest ciągiem pustym adres metadanych HTTP/GET jest `http://localhost:8080/CalculatorService?wsdl`.  
  
 Jeśli nie włączysz tej właściwości, a nie zmieniaj <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> lub jego adres względny wyjątek jest zgłaszany w czasie wykonywania, gdy host usługi jest otwarty bez adres podstawowy dla protokołu HTTP.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.ServiceModel.Description.ServiceMetadataBehavior> w pliku konfiguracji, aby włączyć obsługę metadanych HTTP/GET i WS-transferu/GET żądań.  
  
 [!code-csharp[ServiceMetadataBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicemetadatabehavior/cs/hostapplication.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpGetUrl">
      <MemberSignature Language="C#" Value="public Uri HttpGetUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpGetUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpGetUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetUrl : Uri with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia lokalizację Publikowanie metadanych dla żądania HTTP/GET.</summary>
        <value>Bezwzględny lub względny lokalizację metadanych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> jest względna, adres, w którym publikowane są metadane to adres podstawowy i adres usługi oraz `?wsdl` querystring.  
  
 Jeśli wartość <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> jest bezwzględny adres, w którym publikowane są metadane jest tę wartość oraz `?wsdl` querystring.  
  
 Na przykład, jeśli jest adres usługi `http://localhost:8080/CalculatorService` i <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> jest ciągiem pustym adres metadanych HTTP/GET jest `http://localhost:8080/CalculatorService?wsdl`.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.ServiceModel.Description.ServiceMetadataBehavior> w pliku konfiguracji, aby włączyć obsługę metadanych HTTP/GET i WS-transferu/GET żądań.  
  
 [!code-csharp[ServiceMetadataBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicemetadatabehavior/cs/hostapplication.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpsGetBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpsGetBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpsGetBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wiązanie używane do skonfigurowania pobierania metadanych, jeśli transport jest typu HTTPS.</summary>
        <value>A <see cref="T:System.ServiceModel.Channels.Binding" /> który może służyć do pobierania metadanych za pośrednictwem protokołu HTTPS.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poprzednich wersjach usługi WCF pobierania metadanych było wykonywane przy użyciu protokołu HTTP, Uzyskaj dostęp do strony pomocy usługi za pośrednictwem przeglądarki sieci web. Tylko <xref:System.ServiceModel.Channels.HttpTransportBindingElement> była obsługiwana.  Do pobierania metadanych tylko przy użyciu protokołu HTTPS, Uzyskaj, <xref:System.ServiceModel.Channels.HttpsTransportBindingElement> była obsługiwana.   Właściwości HttpGetBinding i HttpsGetBinding umożliwiają użycie powiązania dla pobierania metadanych za pomocą GET protokołu HTTP (lub HTTPS GET) i powiązania umożliwiają dostęp do stron sieci web usługi można konfigurować, programowo lub za pomocą plików konfiguracji.  
  
 Aby uzyskać więcej informacji na temat pobierania stron pomocy, użyj <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding%2A> i <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetEnabled">
      <MemberSignature Language="C#" Value="public bool HttpsGetEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpsGetEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpsGetEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy publikować metadane usługi dla pobrania za pomocą żądania HTTPS/GET.</summary>
        <value><see langword="true" /> Jeśli pliku WSDL jest opublikowana; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> jest względna, adres, w którym publikowane są metadane to adres podstawowy i adres usługi oraz `?wsdl` querystring.  
  
 Jeśli wartość <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> jest bezwzględny adres, w którym publikowane są metadane jest wartością <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> wartości oraz `?wsdl` querystring.  
  
 Na przykład, jeśli jest adres usługi `https://localhost:8080/CalculatorService` i <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> jest ciągiem pustym adres metadanych HTTPS/GET jest `https://localhost:8080/CalculatorService?wsdl`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetUrl">
      <MemberSignature Language="C#" Value="public Uri HttpsGetUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpsGetUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpsGetUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetUrl : Uri with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia lokalizację Publikowanie metadanych dla żądania HTTPS/GET.</summary>
        <value>Adres metadanych protokołu HTTPS.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> jest względna, adres, w którym publikowane są metadane to adres podstawowy i adres usługi oraz `?wsdl` querystring.  
  
 Jeśli wartość <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> jest bezwzględny adres, w którym publikowane są metadane jest wartością <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> wartości oraz `?wsdl` querystring.  
  
 Na przykład, jeśli jest adres usługi `https://localhost:8080/CalculatorService` i <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> jest ciągiem pustym adres metadanych HTTPS/GET jest `https://localhost:8080/CalculatorService?wsdl`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataExporter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.MetadataExporter MetadataExporter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.MetadataExporter MetadataExporter" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.MetadataExporter" />
      <MemberSignature Language="VB.NET" Value="Public Property MetadataExporter As MetadataExporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::MetadataExporter ^ MetadataExporter { System::ServiceModel::Description::MetadataExporter ^ get(); void set(System::ServiceModel::Description::MetadataExporter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MetadataExporter : System.ServiceModel.Description.MetadataExporter with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.MetadataExporter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.MetadataExporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wewnętrzny <see cref="T:System.ServiceModel.Description.MetadataExporter" /> obiekt używany do publikowania metadanych usługi.</summary>
        <value>Wewnętrzny <see cref="T:System.ServiceModel.Description.MetadataExporter" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Description.MetadataExporter> obiekt do zmodyfikowania publikację usługi metadanych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MexContractName">
      <MemberSignature Language="C#" Value="public const string MexContractName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MexContractName" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.ServiceMetadataBehavior.MexContractName" />
      <MemberSignature Language="VB.NET" Value="Public Const MexContractName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ MexContractName;" />
      <MemberSignature Language="F#" Value="val mutable MexContractName : string" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.MexContractName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca ciąg <c>IMetadataContract</c>.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">Opis usługi do skonfigurowania.</param>
        <param name="serviceHostBase">Host usługi.</param>
        <param name="endpoints">Punkty końcowe do skonfigurowania.</param>
        <param name="parameters">Parametry powiązań do skonfigurowania.</param>
        <summary>Implementacja <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> , konfiguruje bazowego powiązania do obsługi zachowanie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">Opis usługi, która ma zostać zmodyfikowana.</param>
        <param name="serviceHostBase">Host usługi.</param>
        <summary>Implementacja <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> , konfiguruje bazowego powiązania do obsługi zachowanie w usłudze.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Albo <paramref name="description" /> lub <paramref name="serviceHostBase" /> są <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Adres docelowy <paramref name="serviceHostBase" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">Opis usługi, która ma zostać zweryfikowana.</param>
        <param name="serviceHostBase">Host usługi.</param>
        <summary>Implementacja <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> który weryfikuje, czy opisu usługi może obsługiwać zachowanie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>