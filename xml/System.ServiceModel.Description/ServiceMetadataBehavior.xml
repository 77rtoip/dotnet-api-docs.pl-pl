<Type Name="ServiceMetadataBehavior" FullName="System.ServiceModel.Description.ServiceMetadataBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="732155d41c7ccab97d1b4d93d3350be7aa408381" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69151585" /></Metadata><TypeSignature Language="C#" Value="public class ServiceMetadataBehavior : System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceMetadataBehavior extends System.Object implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceMetadataBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceMetadataBehavior&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceMetadataBehavior : System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type ServiceMetadataBehavior = class&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Kontroluje publikację metadanych usługi i skojarzonych z nią informacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dodaj obiekt do kolekcji (lub [ &lt;&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicemetadata.md) elementu ServiceMetadata w pliku konfiguracyjnym aplikacji), aby włączyć lub wyłączyć Publikowanie metadanych usługi. <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A?displayProperty=nameWithType> <xref:System.ServiceModel.Description.ServiceMetadataBehavior> Jednak dodanie zachowania do usługi nie jest wystarczające, aby można było włączyć publikację metadanych:  
  
-   Aby włączyć Pobieranie metadanych przy użyciu usługi WS-transfer, należy również dodać punkt końcowy do usługi, w której znajduje się `IMetadataExchange`kontrakt. Aby zapoznać się z przykładem, zobacz [How to: Publikowanie metadanych dla usługi przy użyciu kodu](~/docs/framework/wcf/feature-details/how-to-publish-metadata-for-a-service-using-code.md). `IMetadataExchange` Punkt końcowy można skonfigurować jako inny punkt końcowy.  
  
-   Aby włączyć Pobieranie metadanych Get http, ustaw <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> właściwość na. `true` Więcej informacji o adresie metadanych HTTP GET znajduje się w temacie <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A>.  
  
 Adres `IMetadataExchange` punktu końcowego jest zgodny z normalnymi regułami dotyczącymi kombinacji adresów podstawowych i adresów punktów końcowych. Aby uzyskać więcej informacji, zobacz [Publikowanie metadanych](~/docs/framework/wcf/feature-details/publishing-metadata.md).  
  
 Aby włączyć publikację metadanych przy użyciu pliku konfiguracji, Dodaj [ &lt;&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicemetadata.md) element ServiceMetadata do [ &lt;&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) elementu serviceBehaviors i skojarz element z [ element&lt;usługi&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) , dla którego chcesz opublikować metadane. Aby zapoznać się z przykładem, zobacz [How to: Publikowanie metadanych dla usługi za pomocą pliku](~/docs/framework/wcf/feature-details/how-to-publish-metadata-for-a-service-using-a-configuration-file.md)konfiguracji. Klasa ma następujących członków:  
  
-   Właściwość <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> określa, czy metadane są zwracane dla żądań HTTP/GET.  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> Właściwość (w połączeniu z adresami podstawowymi) określa adres HTTP/GET.  
  
-   Właściwość <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A> określa, czy metadane są zwracane dla żądania HTTPS/GET.  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> Właściwość (w połączeniu z adresami podstawowymi) określa adres https/get.  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.MetadataExporter%2A> Właściwość zwraca bazowego eksportera.  
  
 <xref:System.ServiceModel.Description.ServiceMetadataBehavior> Zwykle jest używany z pliku konfiguracyjnego aplikacji. Zapoznaj się z przykładową sekcją przykładu kodu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.ServiceModel.Description.ServiceMetadataBehavior> programu w pliku konfiguracji, aby włączyć obsługę metadanych dla żądań GET HTTP GET i WS-transfer.  
  
 [!code-csharp[ServiceMetadataBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicemetadatabehavior/cs/hostapplication.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceMetadataBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceMetadataBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Description.ServiceMetadataBehavior" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.ServiceMetadataBehavior> Tworzy przy użyciu następujących wartości:  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> Właściwość jest`false`.  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A> Właściwość jest`false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExternalMetadataLocation">
      <MemberSignature Language="C#" Value="public Uri ExternalMetadataLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ExternalMetadataLocation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.ExternalMetadataLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property ExternalMetadataLocation As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ExternalMetadataLocation { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExternalMetadataLocation : Uri with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.ExternalMetadataLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która jest lokalizacją metadanych usługi.</summary>
        <value>Lokalizacja metadanych usługi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwraca odwołanie do zewnętrznej lokalizacji metadanych do klientów. <xref:System.ServiceModel.Description.ServiceMetadataBehavior.ExternalMetadataLocation%2A> Właściwość może być względna lub bezwzględna. Jeśli jest względny, adres jest rozpoznawany przez klienta względem <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> lub <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A>, w zależności od tego, jak klient pobrał metadane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość jest bezwzględna, a schemat nie jest http ani https.</exception>
      </Docs>
    </Member>
    <Member MemberName="HttpGetBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpGetBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpGetBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpGetBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia powiązanie używane do konfigurowania pobierania metadanych, gdy transportem jest HTTP.</summary>
        <value>A <see cref="T:System.ServiceModel.Channels.Binding" /> , który może służyć do pobierania metadanych za pośrednictwem protokołu HTTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poprzednich wersjach programu WCF Pobieranie metadanych zostało wykonane przy użyciu protokołu HTTP GET w celu uzyskania dostępu do strony pomocy usługi za pośrednictwem przeglądarki sieci Web. Obsługiwane są <xref:System.ServiceModel.Channels.HttpTransportBindingElement> tylko te.  Aby można było pobrać metadane przy użyciu protokołu HTTPS <xref:System.ServiceModel.Channels.HttpsTransportBindingElement> , obsługiwane są tylko te.   Właściwości HttpGetBinding i HttpsGetBinding umożliwiają użycie powiązań na potrzeby pobierania metadanych za pomocą protokołu HTTP GET (lub HTTPS GET) oraz powiązań używanych do uzyskiwania dostępu do stron sieci Web usługi, aby można było skonfigurować program programowo lub za pomocą plików konfiguracji.  
  
 Aby uzyskać więcej informacji na temat pobierania stron pomocy, <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding%2A> Użyj <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding%2A> właściwości i.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpGetEnabled">
      <MemberSignature Language="C#" Value="public bool HttpGetEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpGetEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpGetEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy należy publikować metadane usługi do pobrania za pomocą żądania HTTP/GET.</summary>
        <value><see langword="true" />Jeśli WSDL jest publikowany; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> jest względna, adres, pod którym publikowane są metadane jest adresem podstawowym i adresem `?wsdl` usługi i QueryString.  
  
 Jeśli wartość <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> jest bezwzględny adres, pod którym publikowane są metadane, jest <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> wartością i `?wsdl` QueryString.  
  
 Na przykład, jeśli adres usługi jest `http://localhost:8080/CalculatorService` <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> i jest ciągiem pustym, adres HTTP/GET metadanych ma `http://localhost:8080/CalculatorService?wsdl`wartość.  
  
 Jeśli ta właściwość nie zostanie włączona i nie zostanie zmieniona <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> ani ustawiona na adres względny, w czasie wykonywania jest zgłaszany wyjątek, gdy host usługi zostanie otwarty bez adresu podstawowego dla protokołu HTTP.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.ServiceModel.Description.ServiceMetadataBehavior> programu w pliku konfiguracji w celu włączenia obsługi metadanych dla żądań HTTP/GET i WS-transfer/get.  
  
 [!code-csharp[ServiceMetadataBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicemetadatabehavior/cs/hostapplication.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpGetUrl">
      <MemberSignature Language="C#" Value="public Uri HttpGetUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpGetUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpGetUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetUrl : Uri with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia lokalizację publikacji metadanych dla żądań HTTP/GET.</summary>
        <value>Bezwzględna lub względna lokalizacja metadanych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> jest względna, adres, pod którym publikowane są metadane jest adresem podstawowym i adresem `?wsdl` usługi i QueryString.  
  
 Jeśli wartość <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> jest bezwzględny adres, pod którym publikowane są metadane, jest to wartość `?wsdl` Plus QueryString.  
  
 Na przykład, jeśli adres usługi jest `http://localhost:8080/CalculatorService` <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> i jest ciągiem pustym, adres HTTP/GET metadanych ma `http://localhost:8080/CalculatorService?wsdl`wartość.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje użycie <xref:System.ServiceModel.Description.ServiceMetadataBehavior> programu w pliku konfiguracji w celu włączenia obsługi metadanych dla żądań HTTP/GET i WS-transfer/get.  
  
 [!code-csharp[ServiceMetadataBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicemetadatabehavior/cs/hostapplication.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpsGetBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpsGetBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpsGetBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia powiązanie używane do konfigurowania pobierania metadanych, gdy transport to HTTPS.</summary>
        <value>A <see cref="T:System.ServiceModel.Channels.Binding" /> , który może służyć do pobierania metadanych za pośrednictwem protokołu HTTPS.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poprzednich wersjach programu WCF Pobieranie metadanych zostało wykonane przy użyciu protokołu HTTP GET w celu uzyskania dostępu do strony pomocy usługi za pośrednictwem przeglądarki sieci Web. Obsługiwane są <xref:System.ServiceModel.Channels.HttpTransportBindingElement> tylko te.  Aby można było pobrać metadane przy użyciu protokołu HTTPS <xref:System.ServiceModel.Channels.HttpsTransportBindingElement> , obsługiwane są tylko te.   Właściwości HttpGetBinding i HttpsGetBinding umożliwiają użycie powiązań na potrzeby pobierania metadanych za pomocą protokołu HTTP GET (lub HTTPS GET) oraz powiązań używanych do uzyskiwania dostępu do stron sieci Web usługi, aby można było skonfigurować program programowo lub za pomocą plików konfiguracji.  
  
 Aby uzyskać więcej informacji na temat pobierania stron pomocy, <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding%2A> Użyj <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding%2A> właściwości i.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetEnabled">
      <MemberSignature Language="C#" Value="public bool HttpsGetEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpsGetEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpsGetEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy należy publikować metadane usługi do pobrania za pomocą żądania HTTPS/GET.</summary>
        <value><see langword="true" />Jeśli WSDL jest publikowany; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> jest względna, adres, pod którym publikowane są metadane jest adresem podstawowym i adresem `?wsdl` usługi i QueryString.  
  
 Jeśli wartość <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> jest bezwzględny adres, pod którym publikowane są metadane, jest <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> wartością i `?wsdl` QueryString.  
  
 Na przykład, jeśli adres usługi jest `https://localhost:8080/CalculatorService` <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> i jest ciągiem pustym, adres https/Get metadanych ma `https://localhost:8080/CalculatorService?wsdl`wartość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetUrl">
      <MemberSignature Language="C#" Value="public Uri HttpsGetUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpsGetUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpsGetUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetUrl : Uri with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia lokalizację publikacji metadanych dla żądań HTTPS/GET.</summary>
        <value>Adres metadanych HTTPS.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> jest względna, adres, pod którym publikowane są metadane jest adresem podstawowym i adresem `?wsdl` usługi i QueryString.  
  
 Jeśli wartość <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> jest bezwzględny adres, pod którym publikowane są metadane, jest <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> wartością i `?wsdl` QueryString.  
  
 Na przykład, jeśli adres usługi jest `https://localhost:8080/CalculatorService` <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> i jest ciągiem pustym, adres https/Get metadanych ma `https://localhost:8080/CalculatorService?wsdl`wartość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataExporter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.MetadataExporter MetadataExporter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.MetadataExporter MetadataExporter" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.MetadataExporter" />
      <MemberSignature Language="VB.NET" Value="Public Property MetadataExporter As MetadataExporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::MetadataExporter ^ MetadataExporter { System::ServiceModel::Description::MetadataExporter ^ get(); void set(System::ServiceModel::Description::MetadataExporter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MetadataExporter : System.ServiceModel.Description.MetadataExporter with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.MetadataExporter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.MetadataExporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt wewnętrzny <see cref="T:System.ServiceModel.Description.MetadataExporter" /> używany do publikowania metadanych usługi.</summary>
        <value>Obiekt wewnętrzny <see cref="T:System.ServiceModel.Description.MetadataExporter" /> .</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj obiektu <xref:System.ServiceModel.Description.MetadataExporter> , aby zmodyfikować publikację metadanych usługi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MexContractName">
      <MemberSignature Language="C#" Value="public const string MexContractName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MexContractName" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.ServiceMetadataBehavior.MexContractName" />
      <MemberSignature Language="VB.NET" Value="Public Const MexContractName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ MexContractName;" />
      <MemberSignature Language="F#" Value="val mutable MexContractName : string" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.MexContractName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca ciąg <c>IMetadataContract</c>.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">Opis usługi, który ma zostać skonfigurowany.</param>
        <param name="serviceHostBase">Host usługi.</param>
        <param name="endpoints">Punkty końcowe do skonfigurowania.</param>
        <param name="parameters">Parametry powiązania, które mają zostać skonfigurowane.</param>
        <summary><see cref="T:System.ServiceModel.Description.IServiceBehavior" /> Implementacja, która konfiguruje podstawowe powiązania do obsługi zachowania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">Opis usługi, która ma zostać zmodyfikowana.</param>
        <param name="serviceHostBase">Host usługi.</param>
        <summary><see cref="T:System.ServiceModel.Description.IServiceBehavior" /> Implementacja, która konfiguruje podstawowe powiązania do obsługi zachowania usługi.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="description" /> Albo.<paramref name="serviceHostBase" /> <see langword="null" /></exception>
        <exception cref="T:System.InvalidOperationException">Adres <paramref name="serviceHostBase" /> docelowy to <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">Opis usługi do zweryfikowania.</param>
        <param name="serviceHostBase">Host usługi.</param>
        <summary>Implementacja programu <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> sprawdzająca, czy opis usługi może obsłużyć zachowanie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
