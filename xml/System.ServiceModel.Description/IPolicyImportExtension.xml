<Type Name="IPolicyImportExtension" FullName="System.ServiceModel.Description.IPolicyImportExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d28bc33ed186a5405232df5935ab3c557665cf54" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69104774" /></Metadata><TypeSignature Language="C#" Value="public interface IPolicyImportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPolicyImportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IPolicyImportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPolicyImportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPolicyImportExtension" />
  <TypeSignature Language="F#" Value="type IPolicyImportExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje metodę dla obiektów, które importują potwierdzenia zasad niestandardowych dotyczące powiązań.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementowanie <xref:System.ServiceModel.Description.IPolicyImportExtension> interfejsu w celu przeszukiwania informacji o języku WSDL uwidocznionych przez konkretny punkt końcowy w celu uzyskania niestandardowych potwierdzeń dotyczących możliwości lub wymagań punktu końcowego. Zazwyczaj importer zasad wyszukuje określone potwierdzenie i wstawia element powiązania, konfiguruje element powiązania lub modyfikuje kontrakt, aby obsługiwał wymagania potwierdzeń.  
  
 W przeciwieństwie do jego <xref:System.ServiceModel.Description.IPolicyExportExtension>odpowiadającego,, <xref:System.ServiceModel.Description.IPolicyImportExtension> nie wymaga implementacji <xref:System.ServiceModel.Channels.BindingElement> przez obiekt; można go załadować przy użyciu sekcji konfiguracji klienta pokazanej w <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> sekcji Przykłady lub programowo poprzez dodanie jej do konstruktora.  
  
 Windows Communication Foundation (WCF) przekazuje dwa obiekty do <xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A> metody <xref:System.ServiceModel.Description.MetadataImporter> , a i <xref:System.ServiceModel.Description.PolicyConversionContext>. <xref:System.ServiceModel.Description.PolicyConversionContext> Zazwyczaj obiekt zawiera już potwierdzenia zasad dla każdego zakresu powiązań.  
  
 <xref:System.ServiceModel.Description.IPolicyImportExtension> Implementacja wykonuje następujące czynności:  
  
1.  Lokalizuje potwierdzenie zasad niestandardowych, dla którego jest odpowiedzialny przez wywołanie <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>metod, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>lub <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> , w zależności od zakresu.  
  
2.  Usuwa potwierdzenie zasad z kolekcji potwierdzenia. <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> Metoda lokalizuje, zwraca i usuwa potwierdzenie w jednym kroku.  
  
3.  Zmodyfikuj stos powiązań lub kontrakt, dodając wymagane niestandardowe <xref:System.ServiceModel.Channels.BindingElement> <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> do <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType> właściwości lub modyfikując właściwość.  
  
 Krok 2 jest ważny. Po wywołaniu wszystkich importerów zasad usługa WCF sprawdza obecność wszelkich potwierdzeń zasad, które pozostaną. Jeśli taki istnieje, funkcja WCF zakłada, że Importowanie zasad nie powiodło się i nie importuje skojarzonego powiązania.  
  
> [!IMPORTANT]
>  Złośliwy Dostawca metadanych może próbować wysłać nieprawidłowo sformułowany kod XML w ramach metadanych podczas próby wykorzystania importera zasad. Zdecydowanie zaleca się, aby importerzy zasad niestandardowych były niezawodne dla wszystkich formularzy XML, które mogą być do niego przekazywać.  
  
 Implementacje niestandardowe <xref:System.ServiceModel.Description.MetadataImporter> muszą implementować <xref:System.ServiceModel.Description.PolicyConversionContext> własne obiekty, aby wyodrębnić potwierdzenia zasad dołączone do niestandardowego formatu metadanych.  
  
 Jeśli chcesz eksportować i importować niestandardowe elementy WSDL, które nie są potwierdzeniami zasad, zobacz <xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=nameWithType> i <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Korzystając z [Narzędzia do przesyłania metadanych (Svcutil. exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) do zasad niestandardowych i eksportujących, można użyć tych samych elementów konfiguracji w pliku konfiguracji i `/svcutilConfig:<configFile>` opcji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> metody do lokalizowania, zwracania i usuwania potwierdzenia w jednym kroku.  
  
 [!code-csharp[CustomPolicySample#1](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyimporter.cs#1)]
 [!code-vb[CustomPolicySample#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyimporter.vb#1)]  
  
 Poniższy przykład kodu przedstawia plik konfiguracji aplikacji klienckiej w celu załadowania importera zasad niestandardowych po <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType> wywołaniu.  
  
 [!code-xml[CustomPolicySample#7](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.exe.config#7)]   
  
 Poniższy przykład kodu pokazuje, jak używać <xref:System.ServiceModel.Description.MetadataResolver> do pobierania i rozwiązywania metadanych w obiektach opisu.  
  
 [!code-csharp[CustomPolicySample#10](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.cs#10)]
 [!code-vb[CustomPolicySample#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/client.vb#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ImportPolicy">
      <MemberSignature Language="C#" Value="public void ImportPolicy (System.ServiceModel.Description.MetadataImporter importer, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportPolicy(class System.ServiceModel.Description.MetadataImporter importer, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportPolicy (importer As MetadataImporter, context As PolicyConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportPolicy(System::ServiceModel::Description::MetadataImporter ^ importer, System::ServiceModel::Description::PolicyConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ImportPolicy : System.ServiceModel.Description.MetadataImporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit" Usage="iPolicyImportExtension.ImportPolicy (importer, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.ServiceModel.Description.MetadataImporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="importer"><see cref="T:System.ServiceModel.Description.MetadataImporter" /> Obiekt w użyciu.</param>
        <param name="context"><see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> Zawiera zarówno potwierdzenia zasad, które można zaimportować, jak i kolekcji elementów powiązania, do których można dodać elementy powiązania.</param>
        <summary>Definiuje metodę, która umożliwia importowanie potwierdzeń zasad niestandardowych i Dodawanie elementów powiązania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementuj `ImportPolicy` metodę w celu uzyskania potwierdzeń zasad i wykonania modyfikacji zaimportowanego kontraktu lub powiązania, aby zapewnić obsługę potwierdzenia. Zazwyczaj importer zasad reaguje na znalezienie niestandardowej potwierdzenia zasad przez skonfigurowanie lub wstawienie elementu powiązania do importowanego powiązania.  
  
 Windows Communication Foundation (WCF) przekazuje dwa obiekty do <xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A> metody <xref:System.ServiceModel.Description.MetadataImporter> , a i <xref:System.ServiceModel.Description.PolicyConversionContext>. <xref:System.ServiceModel.Description.PolicyConversionContext> Zazwyczaj obiekt zawiera już potwierdzenia zasad dla każdego zakresu powiązań.  
  
 <xref:System.ServiceModel.Description.IPolicyImportExtension> Implementacja wykonuje następujące czynności:  
  
1.  Lokalizuje potwierdzenie zasad niestandardowych, dla którego jest odpowiedzialny przez wywołanie <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>metod, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>lub <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> , w zależności od zakresu.  
  
2.  Usuwa potwierdzenie zasad z kolekcji potwierdzenia. <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> Metoda lokalizuje, zwraca i usuwa potwierdzenie w jednym kroku.  
  
3.  Modyfikuje stos powiązań lub kontrakt, dodając wymagane niestandardowe <xref:System.ServiceModel.Channels.BindingElement> <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> do <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType> właściwości lub modyfikując właściwość.  
  
 Krok 2 jest ważny. Po wywołaniu wszystkich importerów zasad usługa WCF sprawdza obecność wszelkich potwierdzeń zasad, które pozostaną. Jeśli taki istnieje, funkcja WCF zakłada, że Importowanie zasad nie powiodło się i nie importuje skojarzonego powiązania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> metody do lokalizowania, zwracania i usuwania potwierdzenia w jednym kroku.  
  
 [!code-csharp[CustomPolicySample#1](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyimporter.cs#1)]
 [!code-vb[CustomPolicySample#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyimporter.vb#1)]  
  
 Poniższy przykład kodu przedstawia plik konfiguracji aplikacji klienckiej w celu załadowania importera zasad niestandardowych po <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType> wywołaniu.  
  
 [!code-xml[CustomPolicySample#7](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.exe.config#7)]   
  
 Poniższy przykład kodu pokazuje, jak używać <xref:System.ServiceModel.Description.MetadataResolver> do pobierania i rozwiązywania metadanych w obiektach opisu.  
  
 [!code-csharp[CustomPolicySample#10](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.cs#10)]
 [!code-vb[CustomPolicySample#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/client.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
