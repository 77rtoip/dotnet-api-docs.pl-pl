<Type Name="MetadataImporter" FullName="System.ServiceModel.Description.MetadataImporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d7e50fcef3acfdf5c4c9a71dce5f9dc1f85791b2" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39945084" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MetadataImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetadataImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetadataImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataImporter abstract" />
  <TypeSignature Language="F#" Value="type MetadataImporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3fb72-101">Importuje metadane do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3fb72-101">Imports metadata into <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fb72-102">Korzystać z implementacji <xref:System.ServiceModel.Description.MetadataImporter> abstrakcyjna klasa można zaimportować metadanych usługi.</span><span class="sxs-lookup"><span data-stu-id="3fb72-102">Use an implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class to import service metadata.</span></span> <span data-ttu-id="3fb72-103">Typy, które wynikają z <xref:System.ServiceModel.Description.MetadataImporter> klasa implementuje pomocy technicznej w przypadku importowania formaty metadanych, które korzystają z protokołu WS-Policy zaimportować logiki w Windows Communication Foundation (WCF).</span><span class="sxs-lookup"><span data-stu-id="3fb72-103">Types that derive from the <xref:System.ServiceModel.Description.MetadataImporter> class implement support for importing metadata formats that take advantage of the WS-Policy import logic in Windows Communication Foundation (WCF).</span></span>  
  
 <span data-ttu-id="3fb72-104">A <xref:System.ServiceModel.Description.MetadataImporter> implementacji zbiera wyrażeń zasad, dołączony do metadanych usługi w <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3fb72-104">A <xref:System.ServiceModel.Description.MetadataImporter> implementation collects the policy expressions attached to the service metadata in a <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="3fb72-105"><xref:System.ServiceModel.Description.MetadataImporter> Następnie przetwarza zasad w ramach importowania metadanych przez wywołanie metody implementacje <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> interfejsu w <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="3fb72-105">The <xref:System.ServiceModel.Description.MetadataImporter> then processes the policies as part of importing the metadata by calling the implementations of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> interface in the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3fb72-106">Można dodać obsługę nowej asercji zasad do importowania <xref:System.ServiceModel.Description.MetadataImporter> przez dodanie własnych implementacji <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> współpracować w celu <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> właściwość <xref:System.ServiceModel.Description.MetadataImporter> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="3fb72-106">You can add support for importing new policy assertions to a <xref:System.ServiceModel.Description.MetadataImporter> by adding your own implementation of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> interface to the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> property on a <xref:System.ServiceModel.Description.MetadataImporter> instance.</span></span> <span data-ttu-id="3fb72-107">Alternatywnie można zarejestrować rozszerzenia importu zasad w pliku konfiguracyjnym aplikacji.</span><span class="sxs-lookup"><span data-stu-id="3fb72-107">Alternatively, you can register your policy import extension in your application configuration file.</span></span>  
  
 <span data-ttu-id="3fb72-108"><xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> Typu jest implementacją <xref:System.ServiceModel.Description.MetadataImporter> abstrakcyjna klasa dołączone do programu WCF.</span><span class="sxs-lookup"><span data-stu-id="3fb72-108">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> type is the implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class included with WCF.</span></span> <span data-ttu-id="3fb72-109"><xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> Typu importuje metadane WSDL z dołączonym zasadami, które są powiązane w <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType> obiektu.</span><span class="sxs-lookup"><span data-stu-id="3fb72-109">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> type imports WSDL metadata with attached policies that are bundled in a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType> object.</span></span>  
  
 <span data-ttu-id="3fb72-110">Można dodać Obsługa importowania rozszerzenia WSDL przez zaimplementowanie <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> interfejsu, a następnie dodając do implementacji <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType> właściwość swoje <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="3fb72-110">You can add support for importing WSDL extensions by implementing the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> interface and then adding your implementation to the <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType> property on your <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> instance.</span></span> <span data-ttu-id="3fb72-111"><xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> Można również załadować implementacje <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> interfejs zarejestrowany w pliku konfiguracyjnym aplikacji.</span><span class="sxs-lookup"><span data-stu-id="3fb72-111">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> can also load implementations of the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> interface registered in your application configuration file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3fb72-112">Ponieważ <xref:System.ServiceModel.Description.MetadataImporter> Konstruktor jest wewnętrzny, nie może pochodzić od <xref:System.ServiceModel.Description.MetadataImporter> w tej wersji.</span><span class="sxs-lookup"><span data-stu-id="3fb72-112">Because the <xref:System.ServiceModel.Description.MetadataImporter> constructor is internal, you cannot derive from <xref:System.ServiceModel.Description.MetadataImporter> in this version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3fb72-113">Poniższy przykład pokazuje użycie <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> klasy, aby zaimportować metadane za pomocą stanów niestandardowych oraz sprawdzenie <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> właściwość, kompilacja importowane metadane, aby typy zarządzane i zapisywanie wyniku do pliku z kodem.</span><span class="sxs-lookup"><span data-stu-id="3fb72-113">The following example shows the use of the <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> derived class to import metadata using custom state, checking the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property, compiling imported metadata to managed types and saving the result to a code file.</span></span>  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt; Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.MetadataConversionError&gt; Errors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As Collection(Of MetadataConversionError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::MetadataConversionError ^&gt; ^ Errors { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::MetadataConversionError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Errors : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt;" Usage="System.ServiceModel.Description.MetadataImporter.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3fb72-114">Pobiera wartość wskazującą, czy wystąpiły błędy podczas importowania metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fb72-114">Gets a value that indicates whether there were errors importing the metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3fb72-115">Kolekcja <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fb72-115">A collection of <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fb72-116">Zawsze sprawdzaj <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> właściwość po zaimportowaniu metadanych i przed rozpoczęciem korzystania z metadanych.</span><span class="sxs-lookup"><span data-stu-id="3fb72-116">Always check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property after importing metadata and before using the metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAllContracts">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataImporter.ImportAllContracts" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ImportAllContracts () As Collection(Of ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ ImportAllContracts();" />
      <MemberSignature Language="F#" Value="abstract member ImportAllContracts : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;" Usage="metadataImporter.ImportAllContracts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3fb72-117">Po przesłonięciu w klasie pochodnej zwraca kolekcję zamówień zaimportowane z metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fb72-117">When overridden in a derived class, returns a collection of contracts imported from the metadata.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3fb72-118">Kontrakty, zaimportowane z metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fb72-118">The contracts imported from the metadata.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAllEndpoints">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ImportAllEndpoints () As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Description::ServiceEndpointCollection ^ ImportAllEndpoints();" />
      <MemberSignature Language="F#" Value="abstract member ImportAllEndpoints : unit -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="metadataImporter.ImportAllEndpoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3fb72-119">Po przesłonięciu w klasie pochodnej zwraca wszystkie punkty końcowe w metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fb72-119">When overridden in a derived class, returns all endpoints in the metadata.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3fb72-120">Kolekcja <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiekty, które są publikowane przez usługę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fb72-120">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects that are published by a service.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fb72-121">Implementowanie <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A> metodę, aby zwrócić wszystkie punkty końcowe w importowane metadane.</span><span class="sxs-lookup"><span data-stu-id="3fb72-121">Implement the <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A> method to return all endpoints in the imported metadata.</span></span> <span data-ttu-id="3fb72-122">Metadane, który został zaimportowany jako punkty końcowe usługi nie można używać do tworzenia środowiska uruchomieniowego lub eksportowanie metadanych, ponieważ zaimportowanych punktów końcowych nie zawierają żadnych informacji typu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="3fb72-122">Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information.</span></span> <span data-ttu-id="3fb72-123">Aby użyć metadanych do utworzenia klienta lub usługę środowiska uruchomieniowego lub do generowania metadanych, najpierw należy wygenerować i skompilować kod z metadanych i użycia, który typ informacji, aby utworzyć nowy <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> przy użyciu <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.</span><span class="sxs-lookup"><span data-stu-id="3fb72-123">To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> object using <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KnownContracts">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription&gt; KnownContracts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, class System.ServiceModel.Description.ContractDescription&gt; KnownContracts" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.KnownContracts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KnownContracts As Dictionary(Of XmlQualifiedName, ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ KnownContracts { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KnownContracts : System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName, System.ServiceModel.Description.ContractDescription&gt;" Usage="System.ServiceModel.Description.MetadataImporter.KnownContracts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3fb72-124">Pobiera słownik umów według nazwy, który zna importera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fb72-124">Gets a dictionary of contracts by name that the importer knows about.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3fb72-125">Słownik umów wymienionych według nazwy kwalifikowanej XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fb72-125">A dictionary of contracts listed by XML qualified name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fb72-126">Użyj <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> właściwości, aby dodać lub usunąć umowy, opisy i ich skojarzone nazw XML, które może odwoływać się importera.</span><span class="sxs-lookup"><span data-stu-id="3fb72-126">Use the <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> property to add or remove contract descriptions and their associated XML names that the importer can reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PolicyImportExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; PolicyImportExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; PolicyImportExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PolicyImportExtensions As KeyedByTypeCollection(Of IPolicyImportExtension)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ PolicyImportExtensions { System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PolicyImportExtensions : System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" Usage="System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3fb72-127">Pobiera kolekcję importerów zasad importera wywołania asercji zasad procesu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fb72-127">Gets a collection of policy importers that the importer calls to process policy assertions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3fb72-128">Kolekcja importerów zasad, <see cref="T:System.ServiceModel.Description.MetadataImporter" /> używa do przetwarzania asercji zasad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fb72-128">A collection of policy importers that the <see cref="T:System.ServiceModel.Description.MetadataImporter" /> uses to process policy assertions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fb72-129">Użyj <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A> właściwości, aby dodać lub usunąć importerów zasad, które są wywoływane w celu przetworzenia asercji zasad w metadanych.</span><span class="sxs-lookup"><span data-stu-id="3fb72-129">Use the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A> property to add or remove policy importers that are invoked to process policy assertions in the metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;object,object&gt; State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;object, object&gt; State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Dictionary(Of Object, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Object ^, System::Object ^&gt; ^ State { System::Collections::Generic::Dictionary&lt;System::Object ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Collections.Generic.Dictionary&lt;obj, obj&gt;" Usage="System.ServiceModel.Description.MetadataImporter.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3fb72-130">Pobiera lub ustawia kolekcję obiektów używanych podczas importowania metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fb72-130">Gets or sets a collection of objects used in the importing of metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3fb72-131">Słownik obiektów opartych na kluczach według typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3fb72-131">A dictionary of objects keyed by type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fb72-132">Użyj `State` właściwości, aby dodać lub usunąć obiekty używane podczas importowania metadanych.</span><span class="sxs-lookup"><span data-stu-id="3fb72-132">Use the `State` property to add or remove objects used in the importing of metadata.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3fb72-133">Poniższy przykład pokazuje użycie <xref:System.ServiceModel.Description.MetadataImporter.State%2A> właściwość, aby dodać niestandardową <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType> do zaimportowania struktury danych w określony sposób.</span><span class="sxs-lookup"><span data-stu-id="3fb72-133">The following example shows the use of the <xref:System.ServiceModel.Description.MetadataImporter.State%2A> property to add a custom <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType> to import data structures in a particular way.</span></span>  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>