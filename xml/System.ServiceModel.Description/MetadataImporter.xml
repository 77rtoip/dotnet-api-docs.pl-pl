<Type Name="MetadataImporter" FullName="System.ServiceModel.Description.MetadataImporter">
  <TypeSignature Language="C#" Value="public abstract class MetadataImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetadataImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetadataImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataImporter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="61cde-101">Importuje metadane do <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="61cde-101">Imports metadata into <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61cde-102">Korzystać z implementacji <xref:System.ServiceModel.Description.MetadataImporter> abstrakcyjna klasa, aby zaimportować metadane usługi.</span><span class="sxs-lookup"><span data-stu-id="61cde-102">Use an implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class to import service metadata.</span></span> <span data-ttu-id="61cde-103">Typy, które pochodzą z <xref:System.ServiceModel.Description.MetadataImporter> klasa implementuje pomocy technicznej dla importowania formaty metadanych, które korzystają z protokołu WS-Policy zaimportować logikę w [!INCLUDE[indigo1](~/includes/indigo1-md.md)].</span><span class="sxs-lookup"><span data-stu-id="61cde-103">Types that derive from the <xref:System.ServiceModel.Description.MetadataImporter> class implement support for importing metadata formats that take advantage of the WS-Policy import logic in [!INCLUDE[indigo1](~/includes/indigo1-md.md)].</span></span>  
  
 <span data-ttu-id="61cde-104">A <xref:System.ServiceModel.Description.MetadataImporter> implementacji zbiera wyrażenia zasad, dołączony do metadanych usługi w <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType> obiektu.</span><span class="sxs-lookup"><span data-stu-id="61cde-104">A <xref:System.ServiceModel.Description.MetadataImporter> implementation collects the policy expressions attached to the service metadata in a <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="61cde-105"><xref:System.ServiceModel.Description.MetadataImporter> Następnie przetwarza zasady jako część Importowanie metadanych przez wywołanie metody implementacje <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> interfejsu w <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="61cde-105">The <xref:System.ServiceModel.Description.MetadataImporter> then processes the policies as part of importing the metadata by calling the implementations of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> interface in the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="61cde-106">Można dodać obsługę nowych potwierdzeń zasad do importowania <xref:System.ServiceModel.Description.MetadataImporter> przez dodanie implementacji programu <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> interfejsu do <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> właściwość <xref:System.ServiceModel.Description.MetadataImporter> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="61cde-106">You can add support for importing new policy assertions to a <xref:System.ServiceModel.Description.MetadataImporter> by adding your own implementation of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> interface to the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> property on a <xref:System.ServiceModel.Description.MetadataImporter> instance.</span></span> <span data-ttu-id="61cde-107">Alternatywnie można zarejestrować rozszerzenia importu zasad w pliku konfiguracyjnym aplikacji.</span><span class="sxs-lookup"><span data-stu-id="61cde-107">Alternatively, you can register your policy import extension in your application configuration file.</span></span>  
  
 <span data-ttu-id="61cde-108"><xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> Typu to implementacja <xref:System.ServiceModel.Description.MetadataImporter> dołączonego WCF klasy abstrakcyjnej.</span><span class="sxs-lookup"><span data-stu-id="61cde-108">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> type is the implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class included with WCF.</span></span> <span data-ttu-id="61cde-109"><xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> Typu importuje WSDL metadanych za pomocą dołączonego zasad, które są powiązane w <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType> obiektu.</span><span class="sxs-lookup"><span data-stu-id="61cde-109">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> type imports WSDL metadata with attached policies that are bundled in a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType> object.</span></span>  
  
 <span data-ttu-id="61cde-110">Można dodać obsługę importowanie rozszerzenia WSDL zaimplementowanie <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> interfejs, a następnie dodanie implementacji do <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType> właściwości na Twojej <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="61cde-110">You can add support for importing WSDL extensions by implementing the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> interface and then adding your implementation to the <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType> property on your <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> instance.</span></span> <span data-ttu-id="61cde-111"><xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> Można również ładować implementacje <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> interfejs zarejestrowany w pliku konfiguracyjnym aplikacji.</span><span class="sxs-lookup"><span data-stu-id="61cde-111">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> can also load implementations of the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> interface registered in your application configuration file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61cde-112">Ponieważ <xref:System.ServiceModel.Description.MetadataImporter> Konstruktor jest wewnętrznego, nie może pochodzić od <xref:System.ServiceModel.Description.MetadataImporter> w tej wersji.</span><span class="sxs-lookup"><span data-stu-id="61cde-112">Because the <xref:System.ServiceModel.Description.MetadataImporter> constructor is internal, you cannot derive from <xref:System.ServiceModel.Description.MetadataImporter> in this version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61cde-113">W poniższym przykładzie przedstawiono użycie <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> klasy, aby zaimportować metadane przy użyciu niestandardowych stanu, sprawdzanie <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> właściwości, kompilowanie zaimportowane metadane typy zarządzane i zapisywanie wynik do pliku kodu.</span><span class="sxs-lookup"><span data-stu-id="61cde-113">The following example shows the use of the <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> derived class to import metadata using custom state, checking the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property, compiling imported metadata to managed types and saving the result to a code file.</span></span>  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt; Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.MetadataConversionError&gt; Errors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As Collection(Of MetadataConversionError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::MetadataConversionError ^&gt; ^ Errors { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::MetadataConversionError ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61cde-114">Pobiera wartość wskazującą, czy wystąpiły błędy podczas importowania metadanych.</span><span class="sxs-lookup"><span data-stu-id="61cde-114">Gets a value that indicates whether there were errors importing the metadata.</span></span></summary>
        <value><span data-ttu-id="61cde-115">Kolekcja <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="61cde-115">A collection of <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61cde-116">Zawsze sprawdzaj <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> właściwości po zaimportowaniu metadanych i przed przy użyciu metadanych.</span><span class="sxs-lookup"><span data-stu-id="61cde-116">Always check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property after importing metadata and before using the metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAllContracts">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataImporter.ImportAllContracts" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ImportAllContracts () As Collection(Of ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ ImportAllContracts();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61cde-117">W przypadku przesłonięcia w klasie pochodnej zwraca kolekcję kontraktów zaimportowane z metadanych.</span><span class="sxs-lookup"><span data-stu-id="61cde-117">When overridden in a derived class, returns a collection of contracts imported from the metadata.</span></span></summary>
        <returns><span data-ttu-id="61cde-118">Kontrakty, zaimportowane z metadanych.</span><span class="sxs-lookup"><span data-stu-id="61cde-118">The contracts imported from the metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAllEndpoints">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ImportAllEndpoints () As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Description::ServiceEndpointCollection ^ ImportAllEndpoints();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61cde-119">W przypadku przesłonięcia w klasie pochodnej zwraca wszystkie punkty końcowe w metadanych.</span><span class="sxs-lookup"><span data-stu-id="61cde-119">When overridden in a derived class, returns all endpoints in the metadata.</span></span></summary>
        <returns><span data-ttu-id="61cde-120">Kolekcja <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> obiektów, które są publikowane przez usługę.</span><span class="sxs-lookup"><span data-stu-id="61cde-120">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects that are published by a service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61cde-121">Implementowanie <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A> metodę, aby zwrócić wszystkie punkty końcowe w importowanych metadanych.</span><span class="sxs-lookup"><span data-stu-id="61cde-121">Implement the <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A> method to return all endpoints in the imported metadata.</span></span> <span data-ttu-id="61cde-122">Metadane, który został zaimportowany jako punktów końcowych usługi nie może służyć do tworzenia środowiska uruchomieniowego lub eksportowanie metadanych, ponieważ importowane punktów końcowych nie zawierają żadnych informacji typu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="61cde-122">Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information.</span></span> <span data-ttu-id="61cde-123">Aby użyć metadanych do tworzenia klienta lub usługę środowiska uruchomieniowego lub Generowanie metadanych, najpierw musisz wygenerować i skompilować kod z metadanych i użyj tego typu informacji, aby utworzyć nową <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> przy użyciu <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.</span><span class="sxs-lookup"><span data-stu-id="61cde-123">To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> object using <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KnownContracts">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription&gt; KnownContracts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, class System.ServiceModel.Description.ContractDescription&gt; KnownContracts" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.KnownContracts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KnownContracts As Dictionary(Of XmlQualifiedName, ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ KnownContracts { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61cde-124">Pobiera słownik kontraktów według nazwy, który zna importera.</span><span class="sxs-lookup"><span data-stu-id="61cde-124">Gets a dictionary of contracts by name that the importer knows about.</span></span></summary>
        <value><span data-ttu-id="61cde-125">Słownik kontraktów posortowane według nazwy kwalifikowanej XML.</span><span class="sxs-lookup"><span data-stu-id="61cde-125">A dictionary of contracts listed by XML qualified name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61cde-126">Użyj <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> właściwości, aby dodać lub usunąć opisy kontraktu i skojarzone odwołujące importera nazw XML.</span><span class="sxs-lookup"><span data-stu-id="61cde-126">Use the <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> property to add or remove contract descriptions and their associated XML names that the importer can reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PolicyImportExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; PolicyImportExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; PolicyImportExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PolicyImportExtensions As KeyedByTypeCollection(Of IPolicyImportExtension)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ PolicyImportExtensions { System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61cde-127">Pobiera kolekcję importerów zasad, które wywołuje importera w celu potwierdzenia zasad procesu.</span><span class="sxs-lookup"><span data-stu-id="61cde-127">Gets a collection of policy importers that the importer calls to process policy assertions.</span></span></summary>
        <value><span data-ttu-id="61cde-128">Kolekcja importerów zasad który <see cref="T:System.ServiceModel.Description.MetadataImporter" /> używa do przetwarzania potwierdzeń zasad.</span><span class="sxs-lookup"><span data-stu-id="61cde-128">A collection of policy importers that the <see cref="T:System.ServiceModel.Description.MetadataImporter" /> uses to process policy assertions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61cde-129">Użyj <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A> właściwości, aby dodać lub usunąć importerów zasad, które są wywoływane w celu przetworzenia potwierdzenia zasad w metadanych.</span><span class="sxs-lookup"><span data-stu-id="61cde-129">Use the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A> property to add or remove policy importers that are invoked to process policy assertions in the metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;object,object&gt; State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;object, object&gt; State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Dictionary(Of Object, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Object ^, System::Object ^&gt; ^ State { System::Collections::Generic::Dictionary&lt;System::Object ^, System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61cde-130">Pobiera lub ustawia kolekcję obiektów używanych w Importowanie metadanych.</span><span class="sxs-lookup"><span data-stu-id="61cde-130">Gets or sets a collection of objects used in the importing of metadata.</span></span></summary>
        <value><span data-ttu-id="61cde-131">Słownik wyznaczaną przez typ obiektów.</span><span class="sxs-lookup"><span data-stu-id="61cde-131">A dictionary of objects keyed by type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61cde-132">Użyj `State` właściwości, aby dodać lub usunąć obiekty używane podczas importowania metadanych.</span><span class="sxs-lookup"><span data-stu-id="61cde-132">Use the `State` property to add or remove objects used in the importing of metadata.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61cde-133">W poniższym przykładzie przedstawiono użycie <xref:System.ServiceModel.Description.MetadataImporter.State%2A> właściwości, aby dodać niestandardowe <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType> do zaimportowania struktury danych w określony sposób.</span><span class="sxs-lookup"><span data-stu-id="61cde-133">The following example shows the use of the <xref:System.ServiceModel.Description.MetadataImporter.State%2A> property to add a custom <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType> to import data structures in a particular way.</span></span>  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>