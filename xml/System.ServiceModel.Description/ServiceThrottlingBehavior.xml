<Type Name="ServiceThrottlingBehavior" FullName="System.ServiceModel.Description.ServiceThrottlingBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="418e56748afe1445ef3af4c62f23a81fc0d1d0d6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69151700" /></Metadata><TypeSignature Language="C#" Value="public class ServiceThrottlingBehavior : System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceThrottlingBehavior extends System.Object implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceThrottlingBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceThrottlingBehavior&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceThrottlingBehavior : System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type ServiceThrottlingBehavior = class&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Konfiguruje ustawienia przepływności w czasie wykonywania, które umożliwiają dostosowanie wydajności usługi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> Użyj klasy, aby kontrolować różne ustawienia przepływności, które uniemożliwiają uruchamianie w aplikacji braku pamięci.  
  
 Właściwość ogranicza liczbę wiadomości, które są obecnie przetwarzane <xref:System.ServiceModel.ServiceHost>w ramach. <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A>  
  
 Właściwość <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> ogranicza <xref:System.ServiceModel.InstanceContext> liczbę obiektów, które są wykonywane <xref:System.ServiceModel.ServiceHost>jednocześnie w czasie.  
  
 Właściwość ogranicza liczbę sesji akceptowanych przez <xref:System.ServiceModel.ServiceHost> obiekt. <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A>  
  
 Ponieważ Równoważenie obciążenia w czasie wykonywania wymaga uruchomienia aplikacji, to najbardziej typowa <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> metoda modyfikowania wykonywania w celu zmaksymalizowania wydajności usługi przy użyciu pliku konfiguracji aplikacji.  
  
> [!NOTE]
>  Ślad jest zapisywana za każdym razem, gdy wartość tych właściwości zostanie osiągnięta. Pierwszy ślad jest zapisywana jako ostrzeżenie.  
  
 Można również ustawić wartości tego atrybutu przy użyciu [ &lt;&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicethrottling.md) elementu serviceograniczenia w pliku konfiguracyjnym aplikacji.  
  
   
  
## Examples  
 Poniższy <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> przykład kodu pokazuje użycie z pliku konfiguracyjnego aplikacji, który <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A>ustawia właściwości, <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A>i <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> na 1 jako przykład. Rzeczywiste środowisko pracy określa optymalne ustawienia dla konkretnej aplikacji.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceThrottlingBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceThrottlingBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceThrottlingBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Description.ServiceThrottlingBehavior" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj konstruktora podczas dodawania skonfigurowanego <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> programowo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentCalls">
      <MemberSignature Language="C#" Value="public int MaxConcurrentCalls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentCalls" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConcurrentCalls As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConcurrentCalls { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentCalls : int with get, set" Usage="System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą maksymalną liczbę komunikatów aktywnie przetwarzanych w <see cref="T:System.ServiceModel.ServiceHost" />ramach.</summary>
        <value>Górny limit aktywnych komunikatów w usłudze. Wartość domyślna to 16 razy większa liczba procesorów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość określa maksymalną liczbę komunikatów aktywnie przetwarzanych <xref:System.ServiceModel.ServiceHost> w ramach obiektu. <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> Każdy kanał może mieć jeden oczekujący komunikat, który nie jest liczony do wartości <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> do momentu rozpoczęcia przetwarzania przez Windows Communication Foundation (WCF).  
  
 Można również ustawić wartości tego atrybutu przy użyciu [ &lt;&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicethrottling.md) elementu serviceograniczenia w pliku konfiguracyjnym aplikacji.  
  
> [!WARNING]
>  <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A>w przypadku scenariuszy znajdujących się w kolejce powinna być ustawiona wartość mniejsza niż rozmiar puli połączeń SQL.  
  
   
  
## Examples  
 Poniższy <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> przykład kodu pokazuje użycie z pliku konfiguracyjnego aplikacji, który <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A>ustawia właściwości, <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A>i <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> na 1 jako przykład. Rzeczywiste środowisko pracy określa optymalne ustawienia dla konkretnej aplikacji.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentInstances">
      <MemberSignature Language="C#" Value="public int MaxConcurrentInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentInstances" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConcurrentInstances As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConcurrentInstances { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentInstances : int with get, set" Usage="System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą maksymalną liczbę <see cref="T:System.ServiceModel.InstanceContext" /> obiektów w usłudze, które mogą być wykonywane jednocześnie.</summary>
        <value>Maksymalna liczba <see cref="T:System.ServiceModel.InstanceContext" /> obiektów w usłudze jednocześnie. Wartość domyślna to suma wartości <see cref="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions" /> i <see cref="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls" />wartość parametru.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość określa maksymalną <xref:System.ServiceModel.InstanceContext> liczbę obiektów w usłudze. <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> Należy pamiętać o relacji między <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> właściwością <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> i właściwością. Jeśli <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> jest<xref:System.ServiceModel.InstanceContextMode.PerSession>, wartość będąca wynikiem jest łączna liczba sesji. Jeśli <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> jest<xref:System.ServiceModel.InstanceContextMode.PerCall>, obliczona wartość jest liczbą współbieżnych wywołań. Jeśli pojawi się komunikat, gdy maksymalna liczba <xref:System.ServiceModel.InstanceContext> obiektów już istnieje, komunikat jest przechowywany <xref:System.ServiceModel.InstanceContext> do momentu zamknięcia obiektu.  
  
 Można również ustawić wartości tego atrybutu przy użyciu [ &lt;&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicethrottling.md) elementu serviceograniczenia w pliku konfiguracyjnym aplikacji.  
  
   
  
## Examples  
 Poniższy <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> przykład kodu pokazuje użycie z pliku konfiguracyjnego aplikacji, który <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A>ustawia, <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> i <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> właściwości na 1 jako przykład. Rzeczywiste środowisko pracy określa optymalne ustawienia dla konkretnej aplikacji.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentSessions">
      <MemberSignature Language="C#" Value="public int MaxConcurrentSessions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentSessions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConcurrentSessions As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConcurrentSessions { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentSessions : int with get, set" Usage="System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą maksymalną liczbę sesji akceptowanych przez <see cref="T:System.ServiceModel.ServiceHost" /> obiekt jednocześnie.</summary>
        <value>Maksymalna liczba sesji akceptowanych przez hosta usługi. Wartość domyślna to 100 razy liczba procesorów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość określa maksymalną liczbę sesji akceptowanych przez <xref:System.ServiceModel.ServiceHost> obiekt. <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A> Ważne jest, aby zrozumieć, że sesje w tym przypadku nie oznaczają tylko kanałów, które obsługują niezawodne sesje (na przykład <xref:System.ServiceModel.NetNamedPipeBinding?displayProperty=nameWithType> obsługują sesje, ale nie zawierają niezawodnych sesji).  
  
 Każdy obiekt odbiornika może mieć jedną oczekującą sesję kanału, która nie jest policzona z <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A> wartością do momentu, gdy WCF zaakceptuje sesję kanału i rozpocznie przetwarzanie na niej komunikatów. Ta właściwość jest najbardziej przydatna w scenariuszach, które wykorzystują sesje.  
  
 Gdy ta właściwość jest ustawiona na wartość mniejszą niż liczba wątków klienta, żądania z wielu klientów mogą zostać umieszczone w kolejce w tym samym połączeniu gniazda. Żądania od klienta, które nie utworzyły sesji z usługą, zostaną zablokowane, dopóki usługa nie zamknie sesji z innymi klientami, jeśli zostanie osiągnięta `MaxConcurrentSessions`liczba otwartych sesji w usłudze. Żądania klientów, które nie zostały obsłużone, przekroczą limit czasu i usługa nieoczekiwanie zamknie sesję.  
  
 Aby uniknąć tej sytuacji, należy uruchomić wątki klienta z różnych domen aplikacji, tak aby komunikaty żądania przechodzą do różnych połączeń gniazd.  
  
 Można również ustawić wartości tego atrybutu przy użyciu [ &lt;&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicethrottling.md) elementu serviceograniczenia w pliku konfiguracyjnym aplikacji.  
  
   
  
## Examples  
 Poniższy <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> przykład kodu pokazuje użycie z pliku konfiguracyjnego aplikacji, który <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A>ustawia właściwości, <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A>i <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> na 1 jako przykład. Rzeczywiste środowisko pracy określa optymalne ustawienia dla konkretnej aplikacji.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceThrottlingBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">Opis usługi.</param>
        <param name="serviceHostBase">Host usługi.</param>
        <param name="endpoints">Punkty końcowe udostępniane przez usługę.</param>
        <param name="parameters">Parametry powiązania, które mają być skonfigurowane do obsługi zachowania usługi.</param>
        <summary>Konfiguruje powiązania do obsługi zachowania usługi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> Implementuje metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceThrottlingBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">Opis usługi, który ma zostać skonfigurowany.</param>
        <param name="serviceHostBase">Host usługi.</param>
        <summary>Konfiguruje usługę do obsługi zachowania usługi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> Implementuje metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceThrottlingBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">Opis usługi, który ma zostać zweryfikowany przez zachowanie usługi.</param>
        <param name="serviceHostBase">Host usługi do zweryfikowania przez zachowanie usługi.</param>
        <summary>Sprawdza, czy usługa i Host mogą obsługiwać zachowanie usługi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> Implementuje metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
