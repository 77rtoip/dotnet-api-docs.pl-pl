<Type Name="ServiceThrottlingBehavior" FullName="System.ServiceModel.Description.ServiceThrottlingBehavior">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6450bcb68e969aabb404cf56778433019dcda024" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36616127" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceThrottlingBehavior : System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceThrottlingBehavior extends System.Object implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceThrottlingBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceThrottlingBehavior&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceThrottlingBehavior : System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type ServiceThrottlingBehavior = class&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Konfiguruje ustawienia czasu wykonywania przepływności, umożliwiające dostrojenie wydajności usługi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> klasę, aby kontrolować różne ustawienia przepustowości, które uniemożliwiają aplikacji wyczerpaniu pamięci.  
  
 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> Właściwość ogranicza liczbę wiadomości, które obecnie procesu na <xref:System.ServiceModel.ServiceHost>.  
  
 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> Właściwość ogranicza liczbę <xref:System.ServiceModel.InstanceContext> obiektów, które są wykonywane jednocześnie przez <xref:System.ServiceModel.ServiceHost>.  
  
 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A> Właściwość ogranicza liczbę sesji <xref:System.ServiceModel.ServiceHost> akceptowanych przez obiekt.  
  
 Przy użyciu równoważenia obciążenia w czasie wykonywania wymaga środowisko uruchamiania aplikacji, dlatego <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> za pomocą konfiguracji aplikacji plik jest najbardziej typowa metoda modyfikowania wykonywania, aby zmaksymalizować wydajność usługi.  
  
> [!NOTE]
>  Śledzenia są zapisywane każdorazowo po osiągnięciu wartości tych właściwości. Pierwszy śledzenia są zapisywane jako ostrzeżenia.  
  
 Można również ustawić wartości tego atrybutu przy użyciu [ &lt;serviceThrottling&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicethrottling.md) elementu w pliku konfiguracyjnym aplikacji.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> z pliku konfiguracji aplikacji, która ustawia <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A>, <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A>, i <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> właściwości na wartość 1 jako przykład. Praktyczne doświadczenie Określa, jakie są optymalne ustawienia dla każdej określonej aplikacji.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceThrottlingBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceThrottlingBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceThrottlingBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Description.ServiceThrottlingBehavior" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj konstruktora, dodając skonfigurowany <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> programowo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentCalls">
      <MemberSignature Language="C#" Value="public int MaxConcurrentCalls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentCalls" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConcurrentCalls As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConcurrentCalls { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentCalls : int with get, set" Usage="System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą maksymalną liczbę komunikatów aktywnie przetwarzanych w obrębie <see cref="T:System.ServiceModel.ServiceHost" />.</summary>
        <value>Górny limit active komunikatów w usłudze. Wartość domyślna to 16 razy liczba procesorów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> Właściwość określa maksymalną liczbę komunikatów aktywnie przetwarzanych w obrębie <xref:System.ServiceModel.ServiceHost> obiektu. Każdy kanał może mieć jeden oczekujący komunikat, który nie odliczona wartość <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> do momentu rozpoczęcia Windows Communication Foundation (WCF) go przetworzyć.  
  
 Można również ustawić wartości tego atrybutu przy użyciu [ &lt;serviceThrottling&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicethrottling.md) elementu w pliku konfiguracyjnym aplikacji.  
  
> [!WARNING]
>  <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> należy wybrać opcję mniejszy niż rozmiar puli połączeń SQL w scenariuszach umieszczonych w kolejce.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> z pliku konfiguracji aplikacji, która ustawia <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A>, <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A>, i <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> właściwości na wartość 1 jako przykład. Praktyczne doświadczenie Określa, jakie są optymalne ustawienia dla każdej określonej aplikacji.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentInstances">
      <MemberSignature Language="C#" Value="public int MaxConcurrentInstances { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentInstances" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConcurrentInstances As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConcurrentInstances { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentInstances : int with get, set" Usage="System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą maksymalną liczbę <see cref="T:System.ServiceModel.InstanceContext" /> obiektów w usłudze, który może zostać uruchomiony w tym samym czasie.</summary>
        <value>Maksymalna liczba <see cref="T:System.ServiceModel.InstanceContext" /> obiektów w usłudze w tym samym czasie. Wartość domyślna to suma wartości <see cref="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions" /> i wartość <see cref="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> Właściwość określa maksymalną liczbę <xref:System.ServiceModel.InstanceContext> obiektów w usłudze. Należy pamiętać o relacji między <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> właściwości i <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> właściwości. Jeśli <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> jest <xref:System.ServiceModel.InstanceContextMode.PerSession>, wartość wynikową jest całkowita liczba sesji. Jeśli <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> jest <xref:System.ServiceModel.InstanceContextMode.PerCall>, wartość wynikową jest liczba równoczesnych wywołań. Jeśli podczas maksymalną liczbę wiadomości <xref:System.ServiceModel.InstanceContext> obiektów już istnieje, wiadomość jest utrzymywana do <xref:System.ServiceModel.InstanceContext> obiekt zostanie zamknięty.  
  
 Można również ustawić wartości tego atrybutu przy użyciu [ &lt;serviceThrottling&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicethrottling.md) elementu w pliku konfiguracyjnym aplikacji.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> z pliku konfiguracji aplikacji, która ustawia <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A>, <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A> i <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> właściwości na wartość 1 jako przykład. Praktyczne doświadczenie Określa, jakie są optymalne ustawienia dla każdej określonej aplikacji.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentSessions">
      <MemberSignature Language="C#" Value="public int MaxConcurrentSessions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConcurrentSessions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConcurrentSessions As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConcurrentSessions { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentSessions : int with get, set" Usage="System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą maksymalną liczbę sesji <see cref="T:System.ServiceModel.ServiceHost" /> obiektu może zaakceptować jednocześnie.</summary>
        <value>Maksymalna liczba sesji, który akceptuje hosta usługi. Wartość domyślna to 100 razy liczba procesorów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A> Właściwość określa maksymalną liczbę sesji <xref:System.ServiceModel.ServiceHost> akceptowanych przez obiekt. Ważne jest, aby zrozumieć, że sesje w takim przypadku oznacza tylko kanałów, które obsługuje niezawodnej sesji (na przykład <xref:System.ServiceModel.NetNamedPipeBinding?displayProperty=nameWithType> obsługuje sesji, ale nie uwzględnia niezawodnej sesji).  
  
 Każdy obiekt odbiornika może mieć jeden oczekujący kanału sesji, która nie odliczona wartość <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A> dopóki WCF akceptuje kanału sesji i rozpoczyna przetwarzanie komunikatów na nim. Ta właściwość jest najbardziej przydatna w scenariuszy, w których należy użyć sesji.  
  
 Gdy ta właściwość jest ustawiona na wartość mniejszą niż liczba wątków klienta, może uzyskać w kolejce żądań z wielu klientów w ramach tego samego połączenia gniazda. Żądania od klienta, który nie utworzył sesję z usługą zostanie zablokowane, dopóki Usługa zamyka sesję z innymi klientami, jeśli liczba otwartych sesji w usłudze osiągnęła `MaxConcurrentSessions`. Żądania klientów, które nie są obsługiwane uzyskać upłynął limit czasu i Usługa zamyka nagle sesję.  
  
 Aby tego uniknąć, uruchom klienta wątków z domenami różnych aplikacji tak, aby komunikaty żądania, przejdź do innej gniazda połączenia.  
  
 Można również ustawić wartości tego atrybutu przy użyciu [ &lt;serviceThrottling&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicethrottling.md) elementu w pliku konfiguracyjnym aplikacji.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> z pliku konfiguracji aplikacji, która ustawia <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A>, <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A>, i <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentInstances%2A> właściwości na wartość 1 jako przykład. Praktyczne doświadczenie Określa, jakie są optymalne ustawienia dla każdej określonej aplikacji.  
  
 [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceThrottlingBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">Opis usługi.</param>
        <param name="serviceHostBase">Host usługi.</param>
        <param name="endpoints">Punkty końcowe udostępnianych przez usługę.</param>
        <param name="parameters">Parametry wiążące się być skonfigurowana do obsługi zachowanie usługi.</param>
        <summary>Konfiguruje powiązania do obsługi zachowanie usługi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementuje <xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceThrottlingBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">Opis usługi do skonfigurowania.</param>
        <param name="serviceHostBase">Host usługi.</param>
        <summary>Służy do konfigurowania usługi do obsługi zachowanie usługi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementuje <xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceThrottlingBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">Opis usługi sprawdzany przez działanie usługi.</param>
        <param name="serviceHostBase">Host usługi sprawdzany przez działanie usługi.</param>
        <summary>Sprawdza, czy usługi i hosta może obsługiwać zachowanie usługi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementuje <xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>