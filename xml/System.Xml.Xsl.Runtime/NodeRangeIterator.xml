<Type Name="NodeRangeIterator" FullName="System.Xml.Xsl.Runtime.NodeRangeIterator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6e9ba3d5578a6c6369c3191c16a95d101ec4f77d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30741059" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct NodeRangeIterator" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit NodeRangeIterator extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.Runtime.NodeRangeIterator" />
  <TypeSignature Language="VB.NET" Value="Public Structure NodeRangeIterator" />
  <TypeSignature Language="C++ CLI" Value="public value class NodeRangeIterator" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlXml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wykonuje iterację na węźle singleton, jeśli węzeł początkowy jest tym samym węźle jako węzeł końcowy. Wykonuje iterację na koniec dokumentu, jeśli węzeł początkowy jest po węzeł końcowy lub w innym dokumencie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Iteracja węzłów w kolejności dokumentów, począwszy od węzła początkowego za pośrednictwem wszystkich węzłów typu zawartości kolejnych węzeł początkowy, aż do osiągnięcia końcowego węzła. Węzły, które nie są zgodne predykatu testu są odfiltrowywane.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public void Create (System.Xml.XPath.XPathNavigator start, System.Xml.Xsl.Runtime.XmlNavigatorFilter filter, System.Xml.XPath.XPathNavigator end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Create(class System.Xml.XPath.XPathNavigator start, class System.Xml.Xsl.Runtime.XmlNavigatorFilter filter, class System.Xml.XPath.XPathNavigator end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.NodeRangeIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Create (start As XPathNavigator, filter As XmlNavigatorFilter, end As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Create(System::Xml::XPath::XPathNavigator ^ start, System::Xml::Xsl::Runtime::XmlNavigatorFilter ^ filter, System::Xml::XPath::XPathNavigator ^ end);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="filter" Type="System.Xml.Xsl.Runtime.XmlNavigatorFilter" />
        <Parameter Name="end" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="start">Węzeł, w którym rozpoczyna się iteracji.</param>
        <param name="filter">Należy przetestować wyrażenie, które określa, czy węzeł ma zostać odfiltrowane.</param>
        <param name="end">Węzeł, w którym kończy się iteracji.</param>
        <summary>Inicjuje <see cref="T:System.Xml.Xsl.Runtime.NodeRangeIterator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wykonuje iterację na węzłach w kolejności dokumentów, począwszy od węzła początkowego za pośrednictwem wszystkich węzłów typu zawartości kolejnych węzeł początkowy, aż do osiągnięcia węzeł końcowy. Węzły, które nie są zgodne predykatu testu są odfiltrowywane.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathNavigator Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XPath.XPathNavigator Current" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.Runtime.NodeRangeIterator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XPath::XPathNavigator ^ Current { System::Xml::XPath::XPathNavigator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca bieżący Nawigatora wynik.</summary>
        <value>Nawigator bieżącego wyniku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan Nawigatora zmiany tylko wtedy, gdy <xref:System.Xml.Xsl.Runtime.NodeRangeIterator.MoveNext%2A> zwrócił metody `true`.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.NodeRangeIterator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Umieszcza iteratora na następny węzeł.</summary>
        <returns>
          <see langword="true" /> Jeśli istnieje węzeł next; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli istnieje węzeł next, <xref:System.Xml.Xsl.Runtime.NodeRangeIterator.MoveNext%2A> zestawów — metoda <xref:System.Xml.Xsl.Runtime.NodeRangeIterator.Current%2A> właściwości do bieżącego Nawigatora wynik; w przeciwnym razie <xref:System.Xml.Xsl.Runtime.NodeRangeIterator.Current%2A> właściwości pozostaje niezmieniona.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>