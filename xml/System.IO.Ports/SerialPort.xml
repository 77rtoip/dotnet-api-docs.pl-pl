<Type Name="SerialPort" FullName="System.IO.Ports.SerialPort">
  <Metadata><Meta Name="ms.openlocfilehash" Value="42af74f34acffaf98349776a7ea820b6451ddff8" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53233383" /></Metadata><TypeSignature Language="C#" Value="public class SerialPort : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SerialPort extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.IO.Ports.SerialPort" />
  <TypeSignature Language="VB.NET" Value="Public Class SerialPort&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class SerialPort : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type SerialPort = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.Ports</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.MonitoringDescription("SerialPortDesc")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje zasób portu szeregowego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana do sterowania zasób pliku portu szeregowego. Ta klasa dostarcza synchroniczne i oparte na zdarzeniach operacji We/Wy, dostępu stanom pin i podziału i dostęp do właściwości sterownika szeregowe. Ponadto funkcje tej klasy może zostać zawinięty w wewnętrznego <xref:System.IO.Stream> obiekt, za pośrednictwem <xref:System.IO.Ports.SerialPort.BaseStream%2A> właściwości i przekazywane do klasy, które opakować lub użyć strumieni.  
  
 <xref:System.IO.Ports.SerialPort> Klasa obsługuje formie następującego kodowania: <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF32Encoding>i kodowanie określono w mscorlib.dll, w którym strona kodowa jest mniejsza niż 50000 lub strona kodowa jest 54936.  Możesz użyć alternatywnej kodowania, ale muszą używać <xref:System.IO.Ports.SerialPort.ReadByte%2A> lub <xref:System.IO.Ports.SerialPort.Write%2A> metody i kodowanie samodzielnie.  
  
 Możesz użyć <xref:System.IO.Ports.SerialPort.GetPortNames%2A> metodę, która pobierze prawidłowe porty na bieżącym komputerze.  
  
 Jeśli <xref:System.IO.Ports.SerialPort> obiektu zostanie zablokowane podczas operacji odczytu, nie przerwać wątku. Zamiast tego albo zamknij base strumieniowo lub usuwanie <xref:System.IO.Ports.SerialPort> obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.IO.Ports.SerialPort> klasy, aby umożliwić dwóm użytkownikom rozmowę na dwóch oddzielnych komputerach, podłączonych przy użyciu kabla pseudomodemu. W tym przykładzie użytkownicy są monitowani, aby ustawić port i nazwę użytkownika przed rozpoczęciem rozmowy. Oba komputery muszą wykonywania programu, aby osiągnąć pełną funkcjonalność w tym przykładzie.  
  
 [!code-cpp[System.IO.Ports.SerialPort#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#10)]
 [!code-csharp[System.IO.Ports.SerialPort#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#10)]
 [!code-vb[System.IO.Ports.SerialPort#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#10)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać możliwość wywoływania niezarządzanego kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Ports.SerialPort" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Ports.SerialPort" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor używa domyślnych wartości właściwości, gdy nie jest określona. Na przykład <xref:System.IO.Ports.SerialPort.DataBits%2A> właściwości wartość domyślna to 8 <xref:System.IO.Ports.SerialPort.Parity%2A> właściwości wartość domyślna to `None` wartość wyliczenia <xref:System.IO.Ports.SerialPort.StopBits%2A> właściwości wartość domyślna to 1 i domyślną nazwę portu COM1.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.IO.Ports.SerialPort> klasy, aby umożliwić dwóm użytkownikom rozmowę na dwóch oddzielnych komputerach, podłączonych przy użyciu kabla pseudomodemu. W tym przykładzie użytkownicy są monitowani, aby ustawić port i nazwę użytkownika przed rozpoczęciem rozmowy. Ten przykład kodu jest częścią większego przykładu kodu przewidzianego dla <xref:System.IO.Ports.SerialPort> klasy.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.IO.Ports.SerialPort : System.ComponentModel.IContainer -&gt; System.IO.Ports.SerialPort" Usage="new System.IO.Ports.SerialPort container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container">Interfejs do kontenera.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Ports.SerialPort" /> klasy przy użyciu określonego <see cref="T:System.ComponentModel.IContainer" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor używa domyślnych wartości właściwości, gdy nie jest określona. Na przykład <xref:System.IO.Ports.SerialPort.DataBits%2A> właściwości wartość domyślna to 8 <xref:System.IO.Ports.SerialPort.Parity%2A> właściwości wartość domyślna to `None` wartość wyliczenia <xref:System.IO.Ports.SerialPort.StopBits%2A> właściwości wartość domyślna to 1 i domyślną nazwę portu COM1.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Nie można znaleźć lub otworzyć podanego portu.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName);" />
      <MemberSignature Language="F#" Value="new System.IO.Ports.SerialPort : string -&gt; System.IO.Ports.SerialPort" Usage="new System.IO.Ports.SerialPort portName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="portName">Port do wykorzystania (na przykład COM1).</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Ports.SerialPort" /> klasy przy użyciu nazwy określonego portu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć nowe wystąpienie klasy <xref:System.IO.Ports.SerialPort> klasy określić nazwę portu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Nie można znaleźć lub otworzyć podanego portu.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String, baudRate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate);" />
      <MemberSignature Language="F#" Value="new System.IO.Ports.SerialPort : string * int -&gt; System.IO.Ports.SerialPort" Usage="new System.IO.Ports.SerialPort (portName, baudRate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName">Port do wykorzystania (na przykład COM1).</param>
        <param name="baudRate">Szybkość transmisji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Ports.SerialPort" /> przy użyciu określonego portu nazwy i szybkość transmisji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć nowe wystąpienie klasy <xref:System.IO.Ports.SerialPort> klasy określić nazwę portu i szybkość transmisji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Nie można znaleźć lub otworzyć podanego portu.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity);" />
      <MemberSignature Language="F#" Value="new System.IO.Ports.SerialPort : string * int * System.IO.Ports.Parity -&gt; System.IO.Ports.SerialPort" Usage="new System.IO.Ports.SerialPort (portName, baudRate, parity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
      </Parameters>
      <Docs>
        <param name="portName">Port do wykorzystania (na przykład COM1).</param>
        <param name="baudRate">Szybkość transmisji.</param>
        <param name="parity">Jedną z <see cref="P:System.IO.Ports.SerialPort.Parity" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Ports.SerialPort" /> klasy przy użyciu nazwy określonego portu, szybkość transmisji i bitu parzystości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć nowe wystąpienie klasy <xref:System.IO.Ports.SerialPort> klasy określić nazwę portu, szybkość transmisji i bitu parzystości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Nie można znaleźć lub otworzyć podanego portu.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits);" />
      <MemberSignature Language="F#" Value="new System.IO.Ports.SerialPort : string * int * System.IO.Ports.Parity * int -&gt; System.IO.Ports.SerialPort" Usage="new System.IO.Ports.SerialPort (portName, baudRate, parity, dataBits)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName">Port do wykorzystania (na przykład COM1).</param>
        <param name="baudRate">Szybkość transmisji.</param>
        <param name="parity">Jedną z <see cref="P:System.IO.Ports.SerialPort.Parity" /> wartości.</param>
        <param name="dataBits">Wartość bitów danych.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Ports.SerialPort" /> przy użyciu nazwy określonego portu, szybkość transmisji, bitu parzystości i bity danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć nowe wystąpienie klasy <xref:System.IO.Ports.SerialPort> klasy określić nazwę portu, szybkość transmisji, bitu parzystości i bity danych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Nie można znaleźć lub otworzyć podanego portu.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits, valuetype System.IO.Ports.StopBits stopBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits, System::IO::Ports::StopBits stopBits);" />
      <MemberSignature Language="F#" Value="new System.IO.Ports.SerialPort : string * int * System.IO.Ports.Parity * int * System.IO.Ports.StopBits -&gt; System.IO.Ports.SerialPort" Usage="new System.IO.Ports.SerialPort (portName, baudRate, parity, dataBits, stopBits)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
        <Parameter Name="stopBits" Type="System.IO.Ports.StopBits" />
      </Parameters>
      <Docs>
        <param name="portName">Port do wykorzystania (na przykład COM1).</param>
        <param name="baudRate">Szybkość transmisji.</param>
        <param name="parity">Jedną z <see cref="P:System.IO.Ports.SerialPort.Parity" /> wartości.</param>
        <param name="dataBits">Wartość bitów danych.</param>
        <param name="stopBits">Jedną z <see cref="P:System.IO.Ports.SerialPort.StopBits" /> wartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IO.Ports.SerialPort" /> przy użyciu nazwy określonego portu, szybkość transmisji, bitu parzystości, bity danych i zatrzymującego bitowych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora, aby utworzyć nowe wystąpienie klasy <xref:System.IO.Ports.SerialPort> klasy, jeśli chcesz określić nazwę portu, szybkość transmisji, bitu parzystości, bity danych, a bity stopu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Nie można znaleźć lub otworzyć podanego portu.</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.IO.Ports.SerialPort.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera podstawowe <see cref="T:System.IO.Stream" /> dla obiektu <see cref="T:System.IO.Ports.SerialPort" /> obiektu.</summary>
        <value>Element <see cref="T:System.IO.Stream" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana jawna asynchroniczne operacje We/Wy lub do przekazania <xref:System.IO.Ports.SerialPort> obiekt <xref:System.IO.Stream> klasę otoki, taką jak <xref:System.IO.StreamWriter>.  
  
 Otwieranie dowolnego portu szeregowego <xref:System.IO.Ports.SerialPort.BaseStream%2A> właściwość zwraca obiekt, który pochodzi z abstrakcyjnej <xref:System.IO.Stream> klasy i implementuje odczytu i zapisu przy użyciu prototypów dziedziczony z metody <xref:System.IO.Stream> klasy: <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.BeginWrite%2A>, <xref:System.IO.Stream.Read%2A> , <xref:System.IO.Stream.ReadByte%2A>, <xref:System.IO.Stream.Write%2A>, i <xref:System.IO.Stream.WriteByte%2A>. Te metody mogą być przydatne podczas przekazywania opakowanej zasób serial <xref:System.IO.Stream> klasy otoki.  
  
 Z powodu inaccessibility dojścia do pliku zawinięty <xref:System.IO.Stream.Length%2A> i <xref:System.IO.Stream.Position%2A> właściwości nie są obsługiwane oraz <xref:System.IO.Stream.Seek%2A> i <xref:System.IO.Stream.SetLength%2A> metody nie są obsługiwane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Strumień jest zamknięty. Taka sytuacja może wystąpić, ponieważ <see cref="M:System.IO.Ports.SerialPort.Open" /> nie wywołano metody lub <see cref="M:System.IO.Ports.SerialPort.Close" /> została wywołana metoda.</exception>
        <exception cref="T:System.NotSupportedException">Strumień jest w aplikacji platformy .NET Compact Framework i wywołano jedną z następujących metod: 
 <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /><see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /><see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)" /><see cref="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />  
  
.NET Compact Framework nie obsługuje modelu asynchronicznego ze strumieniami podstawowej.</exception>
      </Docs>
    </Member>
    <Member MemberName="BaudRate">
      <MemberSignature Language="C#" Value="public int BaudRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BaudRate" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BaudRate" />
      <MemberSignature Language="VB.NET" Value="Public Property BaudRate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BaudRate { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BaudRate : int with get, set" Usage="System.IO.Ports.SerialPort.BaudRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(9600)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("BaudRate")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szybkość transmisji szeregowej.</summary>
        <value>Szybkość transmisji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Szybkość transmisji musi być obsługiwana przez sterownik szeregowy użytkownika. Wartością domyślną jest 9600 bitów na sekundę (b/s).  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak ustawić <xref:System.IO.Ports.SerialPort.BaudRate%2A> właściwość `9600`.  
  
 [!code-cpp[System.IO.Ports.SerialPort#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/datareceived.cpp#20)]
 [!code-csharp[System.IO.Ports.SerialPort#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/datareceived.cs#20)]
 [!code-vb[System.IO.Ports.SerialPort#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/datareceived.vb#20)]  
  
 W poniższym przykładzie pokazano użycie <xref:System.IO.Ports.SerialPort> klasy, aby umożliwić dwóm użytkownikom rozmowę na dwóch oddzielnych komputerach, podłączonych przy użyciu kabla pseudomodemu. W tym przykładzie użytkownicy są monitowani, aby ustawić port i nazwę użytkownika przed rozpoczęciem rozmowy. Ten przykład kodu jest częścią większego przykładu kodu przewidzianego dla <xref:System.IO.Ports.SerialPort> klasy.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Szybkość transmisji określony jest mniejsza niż zero lub przekracza maksymalną dozwoloną szybkość transmisji dla urządzenia.</exception>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="BreakState">
      <MemberSignature Language="C#" Value="public bool BreakState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BreakState" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BreakState" />
      <MemberSignature Language="VB.NET" Value="Public Property BreakState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BreakState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BreakState : bool with get, set" Usage="System.IO.Ports.SerialPort.BreakState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia stan sygnał przerwania.</summary>
        <value><see langword="true" /> Jeśli port jest w stanie przerwania; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W stanie sygnał przerwania występuje podczas transmisji jest wstrzymana, a w wierszu znajduje się w stanie przerwania (niska wszystkich, nie bit zatrzymania) aż do chwili zwolnienia. Aby wprowadzić w stanie przerwania, należy ustawić tę właściwość na `true`. Jeśli port jest już w stanie przerwania, ustawienie tej właściwości ponownie do `true` nie powoduje wyjątek. Nie jest możliwe do zapisu <xref:System.IO.Ports.SerialPort> obiektu podczas <xref:System.IO.Ports.SerialPort.BreakState%2A> jest `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
        <exception cref="T:System.InvalidOperationException">Strumień jest zamknięty. Taka sytuacja może wystąpić, ponieważ <see cref="M:System.IO.Ports.SerialPort.Open" /> nie wywołano metody lub <see cref="M:System.IO.Ports.SerialPort.Close" /> została wywołana metoda.</exception>
      </Docs>
    </Member>
    <Member MemberName="BytesToRead">
      <MemberSignature Language="C#" Value="public int BytesToRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesToRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BytesToRead" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesToRead As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesToRead { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesToRead : int" Usage="System.IO.Ports.SerialPort.BytesToRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę bajtów danych do buforu odbierania.</summary>
        <value>Liczba bajtów danych do buforu odbierania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bufor odbioru obejmuje sterownik szeregowy buforu, a także wewnętrznego buforowania w <xref:System.IO.Ports.SerialPort> sam obiekt.  
  
 Ponieważ <xref:System.IO.Ports.SerialPort.BytesToRead%2A> właściwość reprezentuje zarówno <xref:System.IO.Ports.SerialPort> buforu i buforu utworzone Windows może zwracać większą wartość niż <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> właściwość, która reprezentuje tylko utworzyć Windows buforu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Port nie jest otwarty.</exception>
      </Docs>
    </Member>
    <Member MemberName="BytesToWrite">
      <MemberSignature Language="C#" Value="public int BytesToWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesToWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BytesToWrite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesToWrite As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesToWrite { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesToWrite : int" Usage="System.IO.Ports.SerialPort.BytesToWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę bajtów danych w buforze wysyłania.</summary>
        <value>Liczba bajtów danych w buforze wysyłania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bufor wysyłania obejmuje sterownik szeregowy bufor wysyłania także wewnętrznego buforowania w <xref:System.IO.Ports.SerialPort> sam obiekt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.</exception>
        <exception cref="T:System.InvalidOperationException">Strumień jest zamknięty. Taka sytuacja może wystąpić, ponieważ <see cref="M:System.IO.Ports.SerialPort.Open" /> nie wywołano metody lub <see cref="M:System.IO.Ports.SerialPort.Close" /> została wywołana metoda.</exception>
      </Docs>
    </Member>
    <Member MemberName="CDHolding">
      <MemberSignature Language="C#" Value="public bool CDHolding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CDHolding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.CDHolding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CDHolding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CDHolding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CDHolding : bool" Usage="System.IO.Ports.SerialPort.CDHolding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan linii wykrywanie nośnej, za pośrednictwem portu usługi.</summary>
        <value><see langword="true" /> w przypadku wykrycia operatora; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość może służyć do monitorowania stanu linii wykrywania nośnika portu. Nie operatora zazwyczaj wskazuje, że odbiorca ma rozłączył i operatora został porzucony.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
        <exception cref="T:System.InvalidOperationException">Strumień jest zamknięty. Taka sytuacja może wystąpić, ponieważ <see cref="M:System.IO.Ports.SerialPort.Open" /> nie wywołano metody lub <see cref="M:System.IO.Ports.SerialPort.Close" /> została wywołana metoda.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="serialPort.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka połączenie portu, ustawia <see cref="P:System.IO.Ports.SerialPort.IsOpen" /> właściwości <see langword="false" />i usuwa wewnętrznego <see cref="T:System.IO.Stream" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie tej metody powoduje zamknięcie <xref:System.IO.Ports.SerialPort> obiektu i czyści zarówno odbieranie i bufory transmisji. Ta metoda wywołuje <xref:System.ComponentModel.Component.Dispose?displayProperty=nameWithType> metody, która wywołuje chronioną metodę <xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=nameWithType> metody z `disposing` parametr `true`.  
  
 Najlepszym rozwiązaniem dla każdej aplikacji ma czekać na pewien czas po wywołaniu <xref:System.IO.Ports.SerialPort.Close%2A> metoda przed podjęciem próby wywołania <xref:System.IO.Ports.SerialPort.Open%2A> metody jako portu mogą nie być zamknięte natychmiast.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.IO.Ports.SerialPort> klasy, aby umożliwić dwóm użytkownikom rozmowę na dwóch oddzielnych komputerach, podłączonych przy użyciu kabla pseudomodemu. W tym przykładzie użytkownicy są monitowani, aby ustawić port i nazwę użytkownika przed rozpoczęciem rozmowy. Ten przykład kodu jest częścią większego przykładu kodu przewidzianego dla <xref:System.IO.Ports.SerialPort> klasy.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="CtsHolding">
      <MemberSignature Language="C#" Value="public bool CtsHolding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CtsHolding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.CtsHolding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CtsHolding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CtsHolding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CtsHolding : bool" Usage="System.IO.Ports.SerialPort.CtsHolding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan linii wyczyść do wysyłania.</summary>
        <value><see langword="true" /> w przypadku wykrycia wiersza wyczyść do wysyłania; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiersz wyczyść do wysyłania (CTS) służy w żądaniu wysyłania/wyczyść do wysyłania uzgadnianie sprzętu (RTS/CTS). Linia CTS zostaje przesłane zapytanie przez port, przed wysłaniem danych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
        <exception cref="T:System.InvalidOperationException">Strumień jest zamknięty. Taka sytuacja może wystąpić, ponieważ <see cref="M:System.IO.Ports.SerialPort.Open" /> nie wywołano metody lub <see cref="M:System.IO.Ports.SerialPort.Close" /> została wywołana metoda.</exception>
      </Docs>
    </Member>
    <Member MemberName="DataBits">
      <MemberSignature Language="C#" Value="public int DataBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataBits" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DataBits" />
      <MemberSignature Language="VB.NET" Value="Public Property DataBits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataBits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DataBits : int with get, set" Usage="System.IO.Ports.SerialPort.DataBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(8)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("DataBits")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia długość standardowa bitów na bajt.</summary>
        <value>Długość bitów danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zakres wartości dla tej właściwości jest z zakresu od 5 do 8. Wartość domyślna to 8.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.IO.Ports.SerialPort> klasy, aby umożliwić dwóm użytkownikom rozmowę na dwóch oddzielnych komputerach, podłączonych przy użyciu kabla pseudomodemu. W tym przykładzie użytkownicy są monitowani, aby ustawić port i nazwę użytkownika przed rozpoczęciem rozmowy. Ten przykład kodu jest częścią większego przykładu kodu przewidzianego dla <xref:System.IO.Ports.SerialPort> klasy.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość bitów danych jest mniejsza niż 5 lub więcej niż 8.</exception>
      </Docs>
    </Member>
    <Member MemberName="DataReceived">
      <MemberSignature Language="C#" Value="public event System.IO.Ports.SerialDataReceivedEventHandler DataReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Ports.SerialDataReceivedEventHandler DataReceived" />
      <MemberSignature Language="DocId" Value="E:System.IO.Ports.SerialPort.DataReceived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataReceived As SerialDataReceivedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Ports::SerialDataReceivedEventHandler ^ DataReceived;" />
      <MemberSignature Language="F#" Value="member this.DataReceived : System.IO.Ports.SerialDataReceivedEventHandler " Usage="member this.DataReceived : System.IO.Ports.SerialDataReceivedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("SerialDataReceived")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialDataReceivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, że dane zostały odebrane przez port, reprezentowane przez <see cref="T:System.IO.Ports.SerialPort" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane zdarzenia może być spowodowany wszystkich elementów w <xref:System.IO.Ports.SerialData> wyliczenia. Ponieważ system operacyjny Określa, czy należy zgłosić to zdarzenie, czy nie, nie wszystkie błędy parzystości może być zgłaszany.  
  
 <xref:System.IO.Ports.SerialPort.DataReceived> Zdarzenie jest zgłaszane również w przypadku nieodebrania znak końca pliku, niezależnie od tego, czy liczba bajtów w wewnętrznego buforu wejściowego oraz wartość <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> właściwości.  
  
 <xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, i <xref:System.IO.Ports.SerialPort.ErrorReceived> zdarzeń może zostać wywołana poza kolejnością i może wystąpić niewielkie opóźnienie między po zasadniczy strumień zgłasza błąd, a podczas wykonywania programu obsługi zdarzeń. Tylko jedna procedura obsługi zdarzeń można wykonać w danym momencie.  
  
 <xref:System.IO.Ports.SerialPort.DataReceived> Zdarzeń nie ma gwarancji wygenerowany dla każdego bajtów odebranych. Użyj <xref:System.IO.Ports.SerialPort.BytesToRead%2A> właściwości w celu określenia, ile danych pozostało do odczytu w buforze.  
  
 <xref:System.IO.Ports.SerialPort.DataReceived> Zdarzenie jest zgłaszane w wątek pomocniczy, gdy dane są odebrane z <xref:System.IO.Ports.SerialPort> obiektu. Ponieważ to zdarzenie jest wywoływane na wątek pomocniczy, a nie głównego wątku, próby modyfikować jego niektóre elementy w wątku głównym, takich jak elementy interfejsu użytkownika można zgłosić wyjątku wątka. Jeśli to konieczne modyfikować elementy w główny <xref:System.Windows.Forms.Form> lub <xref:System.Windows.Forms.Control>, wpis żądania zmiany, ponownie za pomocą <xref:System.Windows.Forms.Control.Invoke%2A>, które wykona pracę w wątku.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Ten przykład dodaje <xref:System.IO.Ports.SerialDataReceivedEventHandler> do <xref:System.IO.Ports.SerialPort.DataReceived> odczytać wszystkie dostępne dane odebrane w portu COM1. Pamiętaj, że do przetestowania tego kodu jest konieczne sprzętu podłączonego do portu COM1, która będzie wysyłać dane.  
  
 [!code-cpp[System.IO.Ports.SerialPort#06](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/datareceived.cpp#06)]
 [!code-csharp[System.IO.Ports.SerialPort#06](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/datareceived.cs#06)]
 [!code-vb[System.IO.Ports.SerialPort#06](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/datareceived.vb#06)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardInBuffer">
      <MemberSignature Language="C#" Value="public void DiscardInBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DiscardInBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.DiscardInBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardInBuffer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardInBuffer();" />
      <MemberSignature Language="F#" Value="member this.DiscardInBuffer : unit -&gt; unit" Usage="serialPort.DiscardInBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bufor odbioru danych odrzucenia ze sterownika szeregowe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest równoważna z następującym kodem języka Visual Basic: `MSComm1.InBufferCount = 0`. Czyści bufor odbioru, ale nie ma wpływu na buforu transmisji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
        <exception cref="T:System.InvalidOperationException">Strumień jest zamknięty. Taka sytuacja może wystąpić, ponieważ <see cref="M:System.IO.Ports.SerialPort.Open" /> nie wywołano metody lub <see cref="M:System.IO.Ports.SerialPort.Close" /> została wywołana metoda.</exception>
      </Docs>
    </Member>
    <Member MemberName="DiscardNull">
      <MemberSignature Language="C#" Value="public bool DiscardNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DiscardNull" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DiscardNull" />
      <MemberSignature Language="VB.NET" Value="Public Property DiscardNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DiscardNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DiscardNull : bool with get, set" Usage="System.IO.Ports.SerialPort.DiscardNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("DiscardNull")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy bajty o wartości null są ignorowane, gdy przesyłane między portu i bufor odbioru.</summary>
        <value><see langword="true" /> Jeśli bajty o wartości null są ignorowane. w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość powinna zwykle być równa `false`, szczególnie w przypadku transmisji w trybie binarnym.  Ustawienie tej właściwości na `true` może spowodować nieoczekiwane wyniki zakodowane UTF32 i UTF16 bajtów.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
        <exception cref="T:System.InvalidOperationException">Strumień jest zamknięty. Taka sytuacja może wystąpić, ponieważ <see cref="M:System.IO.Ports.SerialPort.Open" /> nie wywołano metody lub <see cref="M:System.IO.Ports.SerialPort.Close" /> została wywołana metoda.</exception>
      </Docs>
    </Member>
    <Member MemberName="DiscardOutBuffer">
      <MemberSignature Language="C#" Value="public void DiscardOutBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DiscardOutBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.DiscardOutBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardOutBuffer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardOutBuffer();" />
      <MemberSignature Language="F#" Value="member this.DiscardOutBuffer : unit -&gt; unit" Usage="serialPort.DiscardOutBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bufor transmisji danych odrzucenia ze sterownika szeregowe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest równoważna z następującym kodem języka Visual Basic: `MSComm1.OutBufferCount = 0`. Czyści buforu transmisji, ale nie ma wpływu na bufor odbioru.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
        <exception cref="T:System.InvalidOperationException">Strumień jest zamknięty. Taka sytuacja może wystąpić, ponieważ <see cref="M:System.IO.Ports.SerialPort.Open" /> nie wywołano metody lub <see cref="M:System.IO.Ports.SerialPort.Close" /> została wywołana metoda.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="serialPort.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.IO.Ports.SerialPort" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez publiczną <xref:System.ComponentModel.Component.Dispose%2A> metody i <xref:System.Object.Finalize%2A> metody. <xref:System.ComponentModel.Component.Dispose%2A> wywołuje chronioną metodę <xref:System.IO.Ports.SerialPort.Dispose%2A> metody z `disposing` parametr `true`. <xref:System.Object.Finalize%2A> wywołuje <xref:System.IO.Ports.SerialPort.Dispose%2A> z `disposing` równa `false`.  
  
 Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane że <xref:System.IO.Ports.SerialPort> odwołania. Ta metoda wywołuje <xref:System.ComponentModel.Component.Dispose%2A> metoda każdego obiektu, do którego istnieje odwołanie.  
  
 Ta metoda opróżnia i zamyka obiektu strumienia <xref:System.IO.Ports.SerialPort.BaseStream%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
        <block subset="none" type="overrides"><para>
            <see cref="M:System.ComponentModel.Component.Dispose" /> może być wywoływana wiele razy przez inne obiekty. Podczas zastępowania <see cref="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" />, nie należy odwoływać się do obiektów, które zostały wcześniej zlikwidowane wcześniejszym wywołaniem do <see cref="M:System.ComponentModel.Component.Dispose" />. Aby uzyskać więcej informacji o sposobie wdrażania <see cref="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" />, zobacz [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
Aby uzyskać więcej informacji na temat <see cref="M:System.ComponentModel.Component.Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para></block>
      </Docs>
    </Member>
    <Member MemberName="DsrHolding">
      <MemberSignature Language="C#" Value="public bool DsrHolding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DsrHolding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DsrHolding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DsrHolding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DsrHolding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DsrHolding : bool" Usage="System.IO.Ports.SerialPort.DsrHolding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera sygnał gotowy zestaw danych (DSR).</summary>
        <value><see langword="true" /> Jeśli sygnał gotowy zestaw danych został wysłany do portu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana w uzgadnianie zestawu danych gotowe/Data Terminal Ready (DSR/DTR). Sygnał gotowy zestaw danych (DSR) są zwykle wysyłane przez modem do portu do wskazania, że jest gotowa do transmisji danych i odbierania danych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
        <exception cref="T:System.InvalidOperationException">Strumień jest zamknięty. Taka sytuacja może wystąpić, ponieważ <see cref="M:System.IO.Ports.SerialPort.Open" /> nie wywołano metody lub <see cref="M:System.IO.Ports.SerialPort.Close" /> została wywołana metoda.</exception>
      </Docs>
    </Member>
    <Member MemberName="DtrEnable">
      <MemberSignature Language="C#" Value="public bool DtrEnable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DtrEnable" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DtrEnable" />
      <MemberSignature Language="VB.NET" Value="Public Property DtrEnable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DtrEnable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DtrEnable : bool with get, set" Usage="System.IO.Ports.SerialPort.DtrEnable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("DtrEnable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość, która włącza sygnał Data Terminal Ready (DTR) podczas komunikacji szeregowej.</summary>
        <value><see langword="true" /> Aby włączyć Data Terminal Ready (DTR); w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Data Terminal Ready (DTR) są zazwyczaj włączane podczas uzgadniania oprogramowania XON/XOFF i żądanie wysłania/wyczyść do wysyłania uzgadnianie sprzętu (RTS/CTS) i modem komunikacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.IO.Ports.SerialPort.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("Encoding")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kodowanie bajtów przed i po transmisji konwersji tekstu.</summary>
        <value><see cref="T:System.Text.Encoding" /> Obiektu. Wartość domyślna to <see cref="T:System.Text.ASCIIEncoding" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.IO.Ports.SerialPort.Encoding" /> Właściwość <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.IO.Ports.SerialPort.Encoding" /> Właściwość została ustawiona do kodowania, który nie jest <see cref="T:System.Text.ASCIIEncoding" />, <see cref="T:System.Text.UTF8Encoding" />, <see cref="T:System.Text.UTF32Encoding" />, <see cref="T:System.Text.UnicodeEncoding" />, jednego kodowania pojedynczych bajtów Windows lub jednego z kodowania dwubajtowych Windows.</exception>
      </Docs>
    </Member>
    <Member MemberName="ErrorReceived">
      <MemberSignature Language="C#" Value="public event System.IO.Ports.SerialErrorReceivedEventHandler ErrorReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Ports.SerialErrorReceivedEventHandler ErrorReceived" />
      <MemberSignature Language="DocId" Value="E:System.IO.Ports.SerialPort.ErrorReceived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ErrorReceived As SerialErrorReceivedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Ports::SerialErrorReceivedEventHandler ^ ErrorReceived;" />
      <MemberSignature Language="F#" Value="member this.ErrorReceived : System.IO.Ports.SerialErrorReceivedEventHandler " Usage="member this.ErrorReceived : System.IO.Ports.SerialErrorReceivedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("SerialErrorReceived")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialErrorReceivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, wystąpi błąd z portem reprezentowany przez <see cref="T:System.IO.Ports.SerialPort" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenia błędu może być spowodowany wszystkich elementów w <xref:System.IO.Ports.SerialError> wyliczenia. Ponieważ system operacyjny Określa, czy należy zgłosić to zdarzenie, czy nie, nie wszystkie błędy parzystości może być zgłaszany.  
  
 <xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, i <xref:System.IO.Ports.SerialPort.ErrorReceived> zdarzeń może zostać wywołana poza kolejnością i może wystąpić niewielkie opóźnienie między po zasadniczy strumień zgłasza błąd, a kiedy kod może podczas wykonywania programu obsługi zdarzeń. Tylko jedna procedura obsługi zdarzeń można wykonać w danym momencie.  
  
 Jeśli wystąpi błąd parzystości na bajt strumienia, dodatkowy bajt zostaną dodane do buforu wejściowego z wartością 126.  
  
 <xref:System.IO.Ports.SerialPort.ErrorReceived> Zdarzenie jest zgłaszane w wątek pomocniczy, gdy zwracany jest błąd z <xref:System.IO.Ports.SerialPort> obiektu. Ponieważ to zdarzenie jest wywoływane na wątek pomocniczy, a nie głównego wątku, próby modyfikować jego niektóre elementy w wątku głównym, takich jak elementy interfejsu użytkownika można zgłosić wyjątku wątka. Jeśli to konieczne modyfikować elementy w główny <xref:System.Windows.Forms.Form> lub <xref:System.Windows.Forms.Control>, wpis żądania zmiany, ponownie za pomocą <xref:System.Windows.Forms.Control.Invoke%2A>, które wykona pracę w wątku.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPortNames">
      <MemberSignature Language="C#" Value="public static string[] GetPortNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetPortNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.GetPortNames" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPortNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetPortNames();" />
      <MemberSignature Language="F#" Value="static member GetPortNames : unit -&gt; string[]" Usage="System.IO.Ports.SerialPort.GetPortNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera tablicę nazw portów seryjnych na bieżącym komputerze.</summary>
        <returns>Tablica nazw portów seryjnych na bieżącym komputerze.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kolejność nazw portu zwróciło <xref:System.IO.Ports.SerialPort.GetPortNames%2A> nie zostanie określony.  
  
 Użyj <xref:System.IO.Ports.SerialPort.GetPortNames%2A> metody do wykonywania zapytań bieżący komputer, aby uzyskać listę nazw prawidłowy port szeregowy. Na przykład służy tej metody do ustalenia, czy COM1 i COM2 są prawidłowe porty szeregowe na bieżącym komputerze.  
  
 Nazwy portu są uzyskiwane z rejestru systemowego (na przykład HKEY_LOCAL_MACHINE\HARDWARE\DEVICEMAP\SERIALCOMM). Jeśli rejestr zawiera starych lub w inny sposób niepoprawne dane, a następnie <xref:System.IO.Ports.SerialPort.GetPortNames%2A> metoda zwraca nieprawidłowe dane.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.IO.Ports.SerialPort.GetPortNames%2A> metodę, aby wyświetlić nazwy portu szeregowego do konsoli.  
  
 [!code-cpp[IO.Ports.GetPortNames#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.Ports.GetPortNames/cpp/example.cpp#1)]
 [!code-csharp[IO.Ports.GetPortNames#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Ports.GetPortNames/CS/example.cs#1)]
 [!code-vb[IO.Ports.GetPortNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Ports.GetPortNames/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Nie można zbadać nazwy portu szeregowego.</exception>
      </Docs>
    </Member>
    <Member MemberName="Handshake">
      <MemberSignature Language="C#" Value="public System.IO.Ports.Handshake Handshake { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Ports.Handshake Handshake" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.Handshake" />
      <MemberSignature Language="VB.NET" Value="Public Property Handshake As Handshake" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Ports::Handshake Handshake { System::IO::Ports::Handshake get(); void set(System::IO::Ports::Handshake value); };" />
      <MemberSignature Language="F#" Value="member this.Handshake : System.IO.Ports.Handshake with get, set" Usage="System.IO.Ports.SerialPort.Handshake" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("Handshake")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.Handshake</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia protokół uzgadniania do portu szeregowego przekazywania danych, używając wartości z <see cref="T:System.IO.Ports.Handshake" />.</summary>
        <value>Jedną z <see cref="T:System.IO.Ports.Handshake" /> wartości. Wartość domyślna to <see langword="None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku uzgadnianie urządzenie połączone z <xref:System.IO.Ports.SerialPort> obiektu jest zobowiązany do zatrzymać wysyłanie danych, gdy istnieje co najmniej (<xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>-1024) bajtów w buforze. Urządzenie jest zobowiązany do rozpoczęcia wysyłania danych ponownie, gdy istnieją co najmniej 1024 mniejszą liczbę bajtów w buforze. Jeśli urządzenie wysyła dane w blokach o rozmiarze większym niż 1024 bajty, może to spowodować przepełnienie buforu.  
  
 Jeśli <xref:System.IO.Ports.SerialPort.Handshake%2A> właściwość jest ustawiona na <xref:System.IO.Ports.Handshake.RequestToSendXOnXOff> i <xref:System.IO.Ports.SerialPort.CtsHolding%2A> ustawiono `false`, znak XOff nie będą wysyłane. Jeśli <xref:System.IO.Ports.SerialPort.CtsHolding%2A> zostanie następnie ustawiona `true`, muszą być wysyłane większej ilości danych, zanim będzie można wysłać znak XOff.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.IO.Ports.SerialPort> klasy, aby umożliwić dwóm użytkownikom rozmowę na dwóch oddzielnych komputerach, podłączonych przy użyciu kabla pseudomodemu. W tym przykładzie użytkownicy są monitowani, aby ustawić port i nazwę użytkownika przed rozpoczęciem rozmowy. Ten przykład kodu jest częścią większego przykładu kodu przewidzianego dla <xref:System.IO.Ports.SerialPort> klasy.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Przekazana wartość nie jest prawidłową wartością w <see cref="T:System.IO.Ports.Handshake" /> wyliczenia.</exception>
      </Docs>
    </Member>
    <Member MemberName="InfiniteTimeout">
      <MemberSignature Language="C#" Value="public const int InfiniteTimeout = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 InfiniteTimeout = (-1)" />
      <MemberSignature Language="DocId" Value="F:System.IO.Ports.SerialPort.InfiniteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Const InfiniteTimeout As Integer  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: int InfiniteTimeout = -1;" />
      <MemberSignature Language="F#" Value="val mutable InfiniteTimeout : int" Usage="System.IO.Ports.SerialPort.InfiniteTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Wskazuje, że limit czasu nie powinny być wykonywane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość jest używana z <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> i <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.IsOpen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOpen { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOpen : bool" Usage="System.IO.Ports.SerialPort.IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą stan otwarte lub zamknięte <see cref="T:System.IO.Ports.SerialPort" /> obiektu.</summary>
        <value><see langword="true" /> Jeśli port szeregowy jest otwarte. w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.IsOpen%2A> Właściwość śledzi, czy port jest otwarty do użytku przez obiekt wywołujący, nie tego, czy port jest otwarty przez dowolną aplikację na komputerze.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.IO.Ports.SerialPort.IsOpen" /> Przekazana wartość jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.IO.Ports.SerialPort.IsOpen" /> Przekazana wartość jest ciągiem pustym ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string with get, set" Usage="System.IO.Ports.SerialPort.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("\n")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("NewLine")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość używaną do interpretacji parametru koniec wywołania <see cref="M:System.IO.Ports.SerialPort.ReadLine" /> i <see cref="M:System.IO.Ports.SerialPort.WriteLine(System.String)" /> metody.</summary>
        <value>Wartość, która reprezentuje końca wiersza. Wartość domyślna to LF, <see cref="P:System.Environment.NewLine" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa, jakie korzyści (bajtów) definiuje końca wiersza dla <xref:System.IO.Ports.SerialPort.ReadLine%2A> i <xref:System.IO.Ports.SerialPort.WriteLine%2A> metody. Domyślnie wartość końca wiersza jest <xref:System.Environment.NewLine%2A>. Należy zmienić tego na inną wartość, jeśli korzysta z określonego urządzenia szeregowe, którą pracujesz z inną wartość w tym samym celu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wartość właściwości jest pusta.</exception>
        <exception cref="T:System.ArgumentNullException">Wartość właściwości jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="member this.Open : unit -&gt; unit" Usage="serialPort.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zostanie otwarte nowe połączenie portu szeregowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Może istnieć tylko jedno połączenie Otwórz <xref:System.IO.Ports.SerialPort> obiektu.  
  
 Najlepszym rozwiązaniem dla każdej aplikacji ma czekać na pewien czas po wywołaniu <xref:System.IO.Ports.SerialPort.Close%2A> metoda przed podjęciem próby wywołania <xref:System.IO.Ports.SerialPort.Open%2A> metody jako portu mogą nie być zamknięte natychmiast.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.IO.Ports.SerialPort> klasy, aby umożliwić dwóm użytkownikom rozmowę na dwóch oddzielnych komputerach, podłączonych przy użyciu kabla pseudomodemu. W tym przykładzie użytkownicy są monitowani, aby ustawić port i nazwę użytkownika przed rozpoczęciem rozmowy. Ten przykład kodu jest częścią większego przykładu kodu przewidzianego dla <xref:System.IO.Ports.SerialPort> klasy.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">Odmowa dostępu do portu.  
  
\- lub — 
Bieżący proces lub innego procesu w systemie jest już określony port COM, Otwórz okno dialogowe przez <see cref="T:System.IO.Ports.SerialPort" /> wystąpienia lub w kodzie niezarządzanym.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Przynajmniej jedna z właściwości dla tego wystąpienia są nieprawidłowe. Na przykład <see cref="P:System.IO.Ports.SerialPort.Parity" />, <see cref="P:System.IO.Ports.SerialPort.DataBits" />, lub <see cref="P:System.IO.Ports.SerialPort.Handshake" /> właściwości nie są prawidłowymi wartościami; <see cref="P:System.IO.Ports.SerialPort.BaudRate" /> jest mniejsza niż lub równe zero; <see cref="P:System.IO.Ports.SerialPort.ReadTimeout" /> lub <see cref="P:System.IO.Ports.SerialPort.WriteTimeout" /> właściwość jest mniejsza od zera i nie jest <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />.</exception>
        <exception cref="T:System.ArgumentException">Nazwa portu nie zaczyna się od "COM".  
  
\- lub — 
Typ pliku, portu, nie jest obsługiwany.</exception>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
        <exception cref="T:System.InvalidOperationException">Określony port na bieżące wystąpienie <see cref="T:System.IO.Ports.SerialPort" /> jest już otwarty.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Wywoływanie niezarządzanego kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Parity">
      <MemberSignature Language="C#" Value="public System.IO.Ports.Parity Parity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Ports.Parity Parity" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.Parity" />
      <MemberSignature Language="VB.NET" Value="Public Property Parity As Parity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Ports::Parity Parity { System::IO::Ports::Parity get(); void set(System::IO::Ports::Parity value); };" />
      <MemberSignature Language="F#" Value="member this.Parity : System.IO.Ports.Parity with get, set" Usage="System.IO.Ports.SerialPort.Parity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("Parity")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.Parity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia protokół sprawdzanie parzystości.</summary>
        <value>Jedna z wartości wyliczenia, które reprezentuje protokół sprawdzanie parzystości. Wartość domyślna to <see cref="F:System.IO.Ports.Parity.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parzystość jest procedurą sprawdzanie błędów, w którym liczba wartości 1 musi zawsze być taka sama — parzysta lub nieparzysta — dla każdej grupy usługi bits, przesyłane bez błędów. W przypadku komunikacji modemu modem parzystości jest często jeden z parametrów, które należy uzgodnić przez strony wysyłania i odbierania umieścić strony przed transmisji może potrwać.  
  
 Jeśli wystąpi błąd parzystości na bajt strumienia, dodatkowy bajt zostaną dodane do buforu wejściowego z wartością 126.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.IO.Ports.SerialPort> klasy, aby umożliwić dwóm użytkownikom rozmowę na dwóch oddzielnych komputerach, podłączonych przy użyciu kabla pseudomodemu. W tym przykładzie użytkownicy są monitowani, aby ustawić port i nazwę użytkownika przed rozpoczęciem rozmowy. Ten przykład kodu jest częścią większego przykładu kodu przewidzianego dla <xref:System.IO.Ports.SerialPort> klasy.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.IO.Ports.SerialPort.Parity" /> Przekazana wartość nie jest prawidłową wartością w <see cref="T:System.IO.Ports.Parity" /> wyliczenia.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParityReplace">
      <MemberSignature Language="C#" Value="public byte ParityReplace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 ParityReplace" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ParityReplace" />
      <MemberSignature Language="VB.NET" Value="Public Property ParityReplace As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte ParityReplace { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.ParityReplace : byte with get, set" Usage="System.IO.Ports.SerialPort.ParityReplace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(63)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ParityReplace")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia bajtów, która zastępuje nieprawidłowe bajty w strumieniu danych, gdy wystąpi błąd parzystości.</summary>
        <value>Bajt, która zastępuje nieprawidłowe bajty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość jest ustawiona na znaku null, zastąpienie parzystości jest wyłączone.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="PinChanged">
      <MemberSignature Language="C#" Value="public event System.IO.Ports.SerialPinChangedEventHandler PinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Ports.SerialPinChangedEventHandler PinChanged" />
      <MemberSignature Language="DocId" Value="E:System.IO.Ports.SerialPort.PinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PinChanged As SerialPinChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Ports::SerialPinChangedEventHandler ^ PinChanged;" />
      <MemberSignature Language="F#" Value="member this.PinChanged : System.IO.Ports.SerialPinChangedEventHandler " Usage="member this.PinChanged : System.IO.Ports.SerialPinChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("SerialPinChanged")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPinChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy zdarzenie sygnału bez danych wystąpił na porcie reprezentowany przez <see cref="T:System.IO.Ports.SerialPort" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiany kodu pin Serial zdarzenia może być spowodowany wszystkich elementów w <xref:System.IO.Ports.SerialPinChange> wyliczenia. Ponieważ system operacyjny Określa, czy należy zgłosić to zdarzenie, czy nie, nie wszystkie błędy parzystości może być zgłaszany. W ramach zdarzenia ustawiono nową wartość numeru pin.  
  
 <xref:System.IO.Ports.SerialPort.PinChanged> Zdarzenie jest zgłaszane w przypadku <xref:System.IO.Ports.SerialPort> wprowadza obiektu <xref:System.IO.Ports.SerialPort.BreakState%2A>, ale nie po port kończy działanie <xref:System.IO.Ports.SerialPort.BreakState%2A>. To zachowanie nie dotyczy innych wartości <xref:System.IO.Ports.SerialPinChange> wyliczenia.  
  
 <xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, i <xref:System.IO.Ports.SerialPort.ErrorReceived> zdarzeń może zostać wywołana poza kolejnością i może wystąpić niewielkie opóźnienie między po zasadniczy strumień zgłasza błąd, a podczas wykonywania programu obsługi zdarzeń. Tylko jedna procedura obsługi zdarzeń można wykonać w danym momencie.  
  
 <xref:System.IO.Ports.SerialPort.PinChanged> Zdarzenie jest zgłaszane w wątek pomocniczy. Ponieważ to zdarzenie jest wywoływane na wątek pomocniczy, a nie głównego wątku, próby modyfikować jego niektóre elementy w wątku głównym, takich jak elementy interfejsu użytkownika można zgłosić wyjątku wątka. Jeśli to konieczne modyfikować elementy w główny <xref:System.Windows.Forms.Form> lub <xref:System.Windows.Forms.Control>, wpis żądania zmiany, ponownie za pomocą <xref:System.Windows.Forms.Control.Invoke%2A>, które wykona pracę w wątku.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PortName">
      <MemberSignature Language="C#" Value="public string PortName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PortName" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.PortName" />
      <MemberSignature Language="VB.NET" Value="Public Property PortName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PortName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PortName : string with get, set" Usage="System.IO.Ports.SerialPort.PortName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("COM1")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("PortName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia port do komunikacji, w tym między innymi wszystkie dostępne porty COM.</summary>
        <value>Port komunikacji. Wartość domyślna to COM1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lista nazw prawidłowy port można uzyskać za pomocą <xref:System.IO.Ports.SerialPort.GetPortNames%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.IO.Ports.SerialPort> klasy, aby umożliwić dwóm użytkownikom rozmowę na dwóch oddzielnych komputerach, podłączonych przy użyciu kabla pseudomodemu. W tym przykładzie użytkownicy są monitowani, aby ustawić port i nazwę użytkownika przed rozpoczęciem rozmowy. Ten przykład kodu jest częścią większego przykładu kodu przewidzianego dla <xref:System.IO.Ports.SerialPort> klasy.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.IO.Ports.SerialPort.PortName" /> Właściwość została ustawiona na wartość z długością zero.  
  
—lub— 
<see cref="P:System.IO.Ports.SerialPort.PortName" /> Właściwość została ustawiona na wartość, która rozpoczyna się od "\\\\".  
  
—lub— 
Nazwa portu jest nieprawidłowy.</exception>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.IO.Ports.SerialPort.PortName" /> Właściwość <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Podany port jest otwarty.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Odczytuje z <see cref="T:System.IO.Ports.SerialPort" /> buforu wejściowego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.Read : byte[] * int * int -&gt; int" Usage="serialPort.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica bajtów do zapisania dane wejściowe.</param>
        <param name="offset">Przesunięcie w <paramref name="buffer" /> jaką bajty zapisu.</param>
        <param name="count">Maksymalna liczba bajtów do odczytania. Mniejsza liczba bajtów są odczytywane, jeśli <paramref name="count" /> jest większa niż liczba bajtów w buforze wejściowym.</param>
        <summary>Odczytuje liczbę bajtów z <see cref="T:System.IO.Ports.SerialPort" /> buforu wejściowego i zapisuje te bajty do tablicy typu byte, od określonego przesunięcia.</summary>
        <returns>Liczba odczytanych bajtów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli zachodzi potrzeba przełączenia się między czytaniem tekstu i czytanie ze strumienia danych binarnych, należy wybrać protokół, który dokładnie definiuje granicę między tekstem i danymi binarnymi, taki jak ręczne odczytywanie bajtów i dekodowanie danych.  
  
 Ponieważ <xref:System.IO.Ports.SerialPort> klasy buforuje dane, a strumień zawarty we <xref:System.IO.Ports.SerialPort.BaseStream%2A> nie ma właściwości, dwa może to powodować konflikt dotyczący ilości bajtów dostępnych do odczytu.  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> Właściwości można wskazać, że istnieją bajty do odczytu, ale bajty te mogą być niedostępne w strumieniu zawartym w <xref:System.IO.Ports.SerialPort.BaseStream%2A> właściwości, ponieważ zostały one zbuforowane do <xref:System.IO.Ports.SerialPort> klasy.  
  
 <xref:System.IO.Ports.SerialPort.Read%2A> Metody nie blokuje to innych operacji, gdy liczba bajtów odczytanych jest równa `count` , ale brak dostępnych bajtów wciąż nieprzeczytane przez port szeregowy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Rozmiar buforu przekazanego jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Podany port nie jest otwarty.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> Lub <paramref name="count" /> parametry są poza ważnym przekraczanym <paramref name="buffer" /> przekazywana. Albo <paramref name="offset" /> lub <paramref name="count" /> jest mniejsza niż zero.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="offset" /> plus <paramref name="count" /> jest większa niż długość <paramref name="buffer" />.</exception>
        <exception cref="T:System.TimeoutException">Bajty nie były dostępne do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public int Read (char[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Read(char[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (buffer As Char(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Read(cli::array &lt;char&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.Read : char[] * int * int -&gt; int" Usage="serialPort.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablicy znaków, aby zapisać dane wejściowe.</param>
        <param name="offset">Przesunięcie w <paramref name="buffer" /> jaką można zapisać znaki.</param>
        <param name="count">Maksymalna liczba znaków do odczytania. Mniej znaków są odczytywane, jeśli <paramref name="count" /> jest większa niż liczba znaków w buforze wejściowym.</param>
        <summary>Odczytuje liczbę znaków od <see cref="T:System.IO.Ports.SerialPort" /> buforu wejściowego i zapisuje je do tablicy znaków w danym przesunięciu.</summary>
        <returns>Liczba znaków do odczytu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Odczytywanie znaków z portu szeregowego, należy użyć tej metody.  
  
 Jeśli zachodzi potrzeba przełączenia się między czytaniem tekstu i czytanie ze strumienia danych binarnych, należy wybrać protokół, który dokładnie definiuje granicę między tekstem i danymi binarnymi, taki jak ręczne odczytywanie bajtów i dekodowanie danych.  
  
 Ponieważ <xref:System.IO.Ports.SerialPort> klasy buforuje dane, a strumień zawarty we <xref:System.IO.Ports.SerialPort.BaseStream%2A> nie ma właściwości, może to powodować konflikt o liczbę znaków, są dostępne do odczytu.  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> Właściwości można wskazać, że istnieją znaków do odczytania, ale te znaki mogą być niedostępne w strumieniu zawartym w <xref:System.IO.Ports.SerialPort.BaseStream%2A> właściwości, ponieważ zostały one zbuforowane do <xref:System.IO.Ports.SerialPort> klasy.  
  
 <xref:System.IO.Ports.SerialPort.Read%2A> Metody nie blokuje to innych operacji, gdy liczba bajtów odczytanych jest równa `count` , ale brak dostępnych bajtów wciąż nieprzeczytane przez port szeregowy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="offset" /> plus <paramref name="count" /> jest większa niż długość buforu.  
  
\- lub — 
 <paramref name="count" /> 1 i znak zastępczy w buforze.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> Przekazywany jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> Lub <paramref name="count" /> parametry są poza ważnym przekraczanym <paramref name="buffer" /> przekazywana. Albo <paramref name="offset" /> lub <paramref name="count" /> jest mniejsza niż zero.</exception>
        <exception cref="T:System.InvalidOperationException">Podany port nie jest otwarty.</exception>
        <exception cref="T:System.TimeoutException">Żadne znaki nie były dostępne do odczytu.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBufferSize">
      <MemberSignature Language="C#" Value="public int ReadBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ReadBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadBufferSize : int with get, set" Usage="System.IO.Ports.SerialPort.ReadBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(4096)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ReadBufferSize")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar <see cref="T:System.IO.Ports.SerialPort" /> buforu wejściowego.</summary>
        <value>Rozmiar buforu w bajtach. Wartość domyślna to 4096; Maksymalna wartość jest dodatnia int lub 2147483647.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> Właściwość ignoruje żadnej wartości, które są mniejsze niż 4096.  
  
 Ponieważ <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> właściwość reprezentuje tylko buforu utworzone Windows, może zwracać wartość mniejszą niż <xref:System.IO.Ports.SerialPort.BytesToRead%2A> właściwość, która reprezentuje zarówno <xref:System.IO.Ports.SerialPort> buforu i utworzony Windows buforu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /> Zestaw wartości jest mniejsza niż zero.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /> Właściwość została ustawiona, gdy strumień jest otwarty.</exception>
        <exception cref="T:System.IO.IOException"><see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /> Właściwość została ustawiona na wartość nieparzystej liczby całkowitej.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadByte();" />
      <MemberSignature Language="F#" Value="member this.ReadByte : unit -&gt; int" Usage="serialPort.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odczytuje synchronicznie jednobajtowego z <see cref="T:System.IO.Ports.SerialPort" /> buforu wejściowego.</summary>
        <returns>Byte, rzutowane na <see cref="T:System.Int32" />, lub wartość -1, jeśli został odczytany koniec strumienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda odczytuje jednego bajtu.  
  
 Należy zachować ostrożność w przypadku korzystania z <xref:System.IO.Ports.SerialPort.ReadByte%2A> i <xref:System.IO.Ports.SerialPort.ReadChar%2A> ze sobą. Przełączanie między odczytywanie bajtów i odczytywanie znaków może spowodować dodatkowe dane do przeczytania i/lub inne niezamierzone zachowanie. Jeśli zachodzi potrzeba przełączenia się między czytaniem tekstu i czytanie ze strumienia danych binarnych, należy wybrać protokół, który dokładnie definiuje granicę między tekstem i danymi binarnymi, taki jak ręczne odczytywanie bajtów i dekodowanie danych.  
  
> [!NOTE]
>  Ponieważ <xref:System.IO.Ports.SerialPort> klasy buforuje dane, a strumień zawarty we <xref:System.IO.Ports.SerialPort.BaseStream%2A> nie ma właściwości, dwa może to powodować konflikt dotyczący ilości bajtów dostępnych do odczytu.  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> Właściwości można wskazać, że istnieją bajty do odczytu, ale bajty te mogą być niedostępne w strumieniu zawartym w <xref:System.IO.Ports.SerialPort.BaseStream%2A> właściwości, ponieważ zostały one zbuforowane do <xref:System.IO.Ports.SerialPort> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Podany port nie jest otwarty.</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">Operacja nie została ukończona przed upłynięciem limitu czasu.  
  
\- lub — 
Nie bajtów została odczytana.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadChar">
      <MemberSignature Language="C#" Value="public int ReadChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadChar" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadChar () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadChar();" />
      <MemberSignature Language="F#" Value="member this.ReadChar : unit -&gt; int" Usage="serialPort.ReadChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odczytuje synchronicznie jeden znak ze zbioru <see cref="T:System.IO.Ports.SerialPort" /> buforu wejściowego.</summary>
        <returns>Znak, który został odczytany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda odczytuje jeden znak pełną, w oparciu o kodowanie.  
  
 Należy zachować ostrożność w przypadku korzystania z <xref:System.IO.Ports.SerialPort.ReadByte%2A> i <xref:System.IO.Ports.SerialPort.ReadChar%2A> ze sobą. Przełączanie między odczytywanie bajtów i odczytywanie znaków może spowodować dodatkowe dane do przeczytania i/lub inne niezamierzone zachowanie. Jeśli zachodzi potrzeba przełączenia się między czytaniem tekstu i czytanie ze strumienia danych binarnych, należy wybrać protokół, który dokładnie definiuje granicę między tekstem i danymi binarnymi, taki jak ręczne odczytywanie bajtów i dekodowanie danych.  
  
> [!NOTE]
>  Ponieważ <xref:System.IO.Ports.SerialPort> klasy buforuje dane, a strumień zawarty we <xref:System.IO.Ports.SerialPort.BaseStream%2A> nie ma właściwości, dwa może to powodować konflikt dotyczący ilości bajtów dostępnych do odczytu.  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> Właściwości można wskazać, że istnieją bajty do odczytu, ale bajty te mogą być niedostępne w strumieniu zawartym w <xref:System.IO.Ports.SerialPort.BaseStream%2A> właściwości, ponieważ zostały one zbuforowane do <xref:System.IO.Ports.SerialPort> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Podany port nie jest otwarty.</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">Operacja nie została ukończona przed upłynięciem limitu czasu.  
  
\- lub — 
Żadne znaki nie były dostępne w okresie przydzielonego limitu czasu.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadExisting">
      <MemberSignature Language="C#" Value="public string ReadExisting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReadExisting() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadExisting" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadExisting () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadExisting();" />
      <MemberSignature Language="F#" Value="member this.ReadExisting : unit -&gt; string" Usage="serialPort.ReadExisting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odczytuje wszystkie bajty od razu dostępna, w oparciu o kodowanie, zarówno w strumieniu i buforu wejściowego z <see cref="T:System.IO.Ports.SerialPort" /> obiektu.</summary>
        <returns>Zawartość strumienia i buforu wejściowego z <see cref="T:System.IO.Ports.SerialPort" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca zawartość strumienia i wewnętrznego buforu elementu <xref:System.IO.Ports.SerialPort> obiektu jako ciąg. Ta metoda nie używa upływu limitu czasu. Należy pamiętać, że ta metoda może narazić końcowe wiodące bajty w elemencie wewnętrznego buforu, co sprawia, że <xref:System.IO.Ports.SerialPort.BytesToRead%2A> wartość większą niż zero.  
  
 Jeśli zachodzi potrzeba przełączenia się między czytaniem tekstu i czytanie ze strumienia danych binarnych, należy wybrać protokół, który dokładnie definiuje granicę między tekstem i danymi binarnymi, taki jak ręczne odczytywanie bajtów i dekodowanie danych.  
  
> [!NOTE]
>  <xref:System.IO.Ports.SerialPort> Klasy buforuje dane, ale obiekt strumienia zawarte w <xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=nameWithType> nie obsługuje właściwości. W związku z tym <xref:System.IO.Ports.SerialPort> obiektu i obiektu strumienia mogą różnić się od liczby bajtów, które są dostępne do odczytu. Gdy bajtów są buforowane na <xref:System.IO.Ports.SerialPort> obiektu <xref:System.IO.Ports.SerialPort.BytesToRead%2A> właściwości obejmują tych bajtów, wartość, ale bajty te mogą być niedostępne w strumieniu zawartym w <xref:System.IO.Ports.SerialPort.BaseStream%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Podany port nie jest otwarty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="member this.ReadLine : unit -&gt; string" Usage="serialPort.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odczytuje do <see cref="P:System.IO.Ports.SerialPort.NewLine" /> wartość w buforze wejściowym.</summary>
        <returns>Zawartość buforu wejściowego do pierwszego wystąpienia <see cref="P:System.IO.Ports.SerialPort.NewLine" /> wartość.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy pamiętać, że gdy ta metoda nie zwraca <xref:System.IO.Ports.SerialPort.NewLine%2A> wartość <xref:System.IO.Ports.SerialPort.NewLine%2A> wartość zostanie usunięta z buforu wejściowego.  
  
 Domyślnie <xref:System.IO.Ports.SerialPort.ReadLine%2A> metoda blokuje do momentu otrzymania linię. Jeśli to zachowanie jest niepożądany, należy ustawić <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> właściwość dowolną wartość różna od zera, aby wymusić <xref:System.IO.Ports.SerialPort.ReadLine%2A> metodę, aby zgłosić <xref:System.TimeoutException> Jeśli wiersz nie jest dostępna na porcie.  
  
 Jeśli zachodzi potrzeba przełączenia się między czytaniem tekstu i czytanie ze strumienia danych binarnych, należy wybrać protokół, który dokładnie definiuje granicę między tekstem i danymi binarnymi, taki jak ręczne odczytywanie bajtów i dekodowanie danych.  
  
> [!NOTE]
>  Ponieważ <xref:System.IO.Ports.SerialPort> klasy buforuje dane, a strumień zawarty we <xref:System.IO.Ports.SerialPort.BaseStream%2A> nie ma właściwości, dwa może to powodować konflikt dotyczący ilości bajtów dostępnych do odczytu.  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> Właściwości można wskazać, że istnieją bajty do odczytu, ale bajty te mogą być niedostępne w strumieniu zawartym w <xref:System.IO.Ports.SerialPort.BaseStream%2A> właściwości, ponieważ zostały one zbuforowane do <xref:System.IO.Ports.SerialPort> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.IO.Ports.SerialPort> klasy, aby umożliwić dwóm użytkownikom rozmowę na dwóch oddzielnych komputerach, podłączonych przy użyciu kabla pseudomodemu. Ten przykład kodu jest częścią większego przykładu kodu przewidzianego dla <xref:System.IO.Ports.SerialPort> klasy.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Podany port nie jest otwarty.</exception>
        <exception cref="T:System.TimeoutException">Operacja nie została ukończona przed upłynięciem limitu czasu.  
  
\- lub — 
Bajty nie zostały odczytane.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.IO.Ports.SerialPort.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ReadTimeout")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę milisekund, zanim upłynie limit czasu, gdy operacja odczytu zakończy się.</summary>
        <value>Liczba milisekund, zanim upłynie limit czasu, gdy operacja odczytu zakończy się.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość limitu czasu odczytu pierwotnie została ustawiona podczas 500 milisekund w Win32 API komunikacji. Ta właściwość umożliwia ustawienie tej wartości. Limit czasu można ustawić na wartość większą niż zero, lub wartość <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, w którym to przypadku nie przekroczenia limitu czasu. <xref:System.IO.Ports.SerialPort.InfiniteTimeout> jest ustawieniem domyślnym.  
  
> [!NOTE]
>  Użytkownicy z niezarządzanej `COMMTIMEOUTS` struktury oczekiwać, że wartość limitu czasu na zero, aby pominąć błędy przekroczenia limitu czasu. Aby pominąć przekroczeń limitu czasu za pomocą <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> własności, jednak należy określić <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.  
  
 Ta właściwość nie ma wpływu na <xref:System.IO.Stream.BeginRead%2A> metoda Strumień zwrócony przez <xref:System.IO.Ports.SerialPort.BaseStream%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.IO.Ports.SerialPort> klasy, aby umożliwić dwóm użytkownikom rozmowę na dwóch oddzielnych komputerach, podłączonych przy użyciu kabla pseudomodemu. W tym przykładzie użytkownicy są monitowani, aby ustawić port i nazwę użytkownika przed rozpoczęciem rozmowy. Ten przykład kodu jest częścią większego przykładu kodu przewidzianego dla <xref:System.IO.Ports.SerialPort> klasy.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Przeczytaj wartość limitu czasu jest mniejsza od zera i nie jest równa <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTo">
      <MemberSignature Language="C#" Value="public string ReadTo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReadTo(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadTo (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadTo(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.ReadTo : string -&gt; string" Usage="serialPort.ReadTo value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Wartość, która wskazuje, gdzie operacja odczytu zatrzymuje.</param>
        <summary>Odczytuje parametry do określonej <paramref name="value" /> w buforze wejściowym.</summary>
        <returns>Zawartość buforu wejściowego do określonej <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda odczytuje ciąg do określonej `value`. Gdy nie ma zwracanego ciągu `value`, `value` zostanie usunięte z buforu wejściowego.  
  
 Jeśli zachodzi potrzeba przełączenia się między czytaniem tekstu i czytanie ze strumienia danych binarnych, należy wybrać protokół, który dokładnie definiuje granicę między tekstem i danymi binarnymi, taki jak ręczne odczytywanie bajtów i dekodowanie danych.  
  
> [!NOTE]
>  Ponieważ <xref:System.IO.Ports.SerialPort> klasy buforuje dane, a strumień zawarty we <xref:System.IO.Ports.SerialPort.BaseStream%2A> nie ma właściwości, dwa może to powodować konflikt dotyczący ilości bajtów dostępnych do odczytu.  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> Właściwości można wskazać, że istnieją bajty do odczytu, ale bajty te mogą być niedostępne w strumieniu zawartym w <xref:System.IO.Ports.SerialPort.BaseStream%2A> właściwości, ponieważ zostały one zbuforowane do <xref:System.IO.Ports.SerialPort> klasy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Długość <paramref name="value" /> parametr ma wartość 0.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Podany port nie jest otwarty.</exception>
        <exception cref="T:System.TimeoutException">Operacja nie została ukończona przed upłynięciem limitu czasu.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceivedBytesThreshold">
      <MemberSignature Language="C#" Value="public int ReceivedBytesThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceivedBytesThreshold" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ReceivedBytesThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceivedBytesThreshold As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceivedBytesThreshold { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceivedBytesThreshold : int with get, set" Usage="System.IO.Ports.SerialPort.ReceivedBytesThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ReceivedBytesThreshold")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę bajtów w wewnętrznego buforu wejściowego przed <see cref="E:System.IO.Ports.SerialPort.DataReceived" /> wystąpi zdarzenie.</summary>
        <value>Liczba bajtów w wewnętrznego buforu wejściowego przed <see cref="E:System.IO.Ports.SerialPort.DataReceived" /> jest wyzwalane zdarzenie. Domyślnym ustawieniem jest 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.DataReceived> Zdarzenie jest zgłaszane również w przypadku <xref:System.IO.Ports.SerialData.Eof> znaków zostanie odebrana, niezależnie od tego, czy liczba bajtów w wewnętrznego buforu wejściowego oraz wartość <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.IO.Ports.SerialPort.ReceivedBytesThreshold" /> Wartość jest mniejsza niż zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="RtsEnable">
      <MemberSignature Language="C#" Value="public bool RtsEnable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RtsEnable" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.RtsEnable" />
      <MemberSignature Language="VB.NET" Value="Public Property RtsEnable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RtsEnable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RtsEnable : bool with get, set" Usage="System.IO.Ports.SerialPort.RtsEnable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("RtsEnable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy podczas komunikacji szeregowej włączono żądań wysłania (RTS) sygnału.</summary>
        <value><see langword="true" /> Aby włączyć żądania do przesłania (RTS); w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Żądanie sygnału transmisji (RTS) zwykle jest używany podczas żądania wysyłania/Clear do wysłania (RTS/CTS) sprzętu uzgadniania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wartość <see cref="P:System.IO.Ports.SerialPort.RtsEnable" /> właściwość została ustawiona lub pobierane podczas <see cref="P:System.IO.Ports.SerialPort.Handshake" /> właściwość jest ustawiona na <see cref="F:System.IO.Ports.Handshake.RequestToSend" /> wartość lub <see cref="F:System.IO.Ports.Handshake.RequestToSendXOnXOff" /> wartość.</exception>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="StopBits">
      <MemberSignature Language="C#" Value="public System.IO.Ports.StopBits StopBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Ports.StopBits StopBits" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.StopBits" />
      <MemberSignature Language="VB.NET" Value="Public Property StopBits As StopBits" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Ports::StopBits StopBits { System::IO::Ports::StopBits get(); void set(System::IO::Ports::StopBits value); };" />
      <MemberSignature Language="F#" Value="member this.StopBits : System.IO.Ports.StopBits with get, set" Usage="System.IO.Ports.SerialPort.StopBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("StopBits")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.StopBits</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę stopbits na bajt.</summary>
        <value>Jedną z <see cref="T:System.IO.Ports.StopBits" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartością domyślną dla <xref:System.IO.Ports.SerialPort.StopBits%2A> jest <xref:System.IO.Ports.StopBits.One>.  
  
 <xref:System.IO.Ports.StopBits.None?displayProperty=nameWithType> Wartość nie jest obsługiwana.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak ustawić <xref:System.IO.Ports.SerialPort.StopBits%2A> właściwość `One`.  
  
 [!code-cpp[System.IO.Ports.SerialPort#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/datareceived.cpp#20)]
 [!code-csharp[System.IO.Ports.SerialPort#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/datareceived.cs#20)]
 [!code-vb[System.IO.Ports.SerialPort#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/datareceived.vb#20)]  
  
 W poniższym przykładzie pokazano użycie <xref:System.IO.Ports.SerialPort> klasy, aby umożliwić dwóm użytkownikom rozmowę na dwóch oddzielnych komputerach, podłączonych przy użyciu kabla pseudomodemu. W tym przykładzie użytkownicy są monitowani, aby ustawić port i nazwę użytkownika przed rozpoczęciem rozmowy. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.IO.Ports.SerialPort> klasy.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.IO.Ports.SerialPort.StopBits" /> Wartość <see cref="F:System.IO.Ports.StopBits.None" />.</exception>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje dane do bufora wyjściowego portu szeregowego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string text);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string text) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (text As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ text);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public void Write (string str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string str) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Write(System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (str As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Write : string -&gt; unit" Usage="serialPort.Write str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text">Ciąg dla danych wyjściowych.</param>
        <param name="str">Ciąg dla danych wyjściowych.</param>
        <summary>Zapisuje określony ciąg do portu szeregowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, jeśli chcesz zapisać ciąg jako dane wyjściowe do portu szeregowego.  
  
 Czy za dużo bajtów w buforze danych wyjściowych i <xref:System.IO.Ports.SerialPort.Handshake%2A> ustawiono <xref:System.IO.Ports.Handshake.XOnXOff> , a następnie <xref:System.IO.Ports.SerialPort> obiektu mogą zgłaszać <xref:System.ServiceProcess.TimeoutException> podczas oczekiwania na urządzenie musi być gotowy do akceptowania większej ilości danych.  
  
 Domyślnie <xref:System.IO.Ports.SerialPort> używa <xref:System.Text.ASCIIEncoding> do kodowania znaków. <xref:System.Text.ASCIIEncoding> koduje wszystkich większych niż 127 znaków jako (char) 63 lub "?". Aby obsługiwać dodatkowe znaki w tym zakresie, należy ustawić <xref:System.IO.Ports.SerialPort.Encoding%2A> do <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, lub <xref:System.Text.UnicodeEncoding>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Podany port nie jest otwarty.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">Operacja nie została ukończona przed upłynięciem limitu czasu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * int * int -&gt; unit" Usage="serialPort.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica bajtów, która zawiera dane do zapisania do portu.</param>
        <param name="offset">Zerze przesunięcie w <paramref name="buffer" /> parametr, od którego należy zacząć kopiowanie bajtów do portu.</param>
        <param name="count">Liczba bajtów do zapisania.</param>
        <summary>Zapisuje określoną liczbę bajtów do portu szeregowego, przy użyciu danych z bufora.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, gdy użytkownik chce zapisać buforem bajtów, aby utworzyć dane wyjściowe do portu szeregowego.  
  
 Czy za dużo bajtów w buforze danych wyjściowych i <xref:System.IO.Ports.SerialPort.Handshake%2A> ustawiono <xref:System.IO.Ports.Handshake.XOnXOff> , a następnie <xref:System.IO.Ports.SerialPort> obiektu mogą zgłaszać <xref:System.ServiceProcess.TimeoutException> podczas oczekiwania na urządzenie musi być gotowy do akceptowania większej ilości danych.  
  
 Domyślnie <xref:System.IO.Ports.SerialPort> używa <xref:System.Text.ASCIIEncoding> do kodowania znaków. <xref:System.Text.ASCIIEncoding> koduje wszystkich większych niż 127 znaków jako (char) 63 lub "?". Aby obsługiwać dodatkowe znaki w tym zakresie, należy ustawić <xref:System.IO.Ports.SerialPort.Encoding%2A> do <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, lub <xref:System.Text.UnicodeEncoding>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> Przekazywany jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Podany port nie jest otwarty.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> Lub <paramref name="count" /> parametry są poza ważnym przekraczanym <paramref name="buffer" /> przekazywana. Albo <paramref name="offset" /> lub <paramref name="count" /> jest mniejsza niż zero.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="offset" /> plus <paramref name="count" /> jest większa niż długość <paramref name="buffer" />.</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">Operacja nie została ukończona przed upłynięciem limitu czasu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (char[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(char[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Char(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;char&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.Write : char[] * int * int -&gt; unit" Usage="serialPort.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica znaków, który zawiera dane do zapisania do portu.</param>
        <param name="offset">Zerze przesunięcie w <paramref name="buffer" /> parametr, od którego należy zacząć kopiowanie bajtów do portu.</param>
        <param name="count">Liczba znaków, jaka ma zostać zapisana.</param>
        <summary>Zapisuje określoną liczbę znaków do portu szeregowego, przy użyciu danych z bufora.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, gdy użytkownik chce zapisać do buforu znaków, aby utworzyć dane wyjściowe do portu szeregowego.  
  
 Czy za dużo bajtów w buforze danych wyjściowych i <xref:System.IO.Ports.SerialPort.Handshake%2A> ustawiono <xref:System.IO.Ports.Handshake.XOnXOff> , a następnie <xref:System.IO.Ports.SerialPort> obiektu mogą zgłaszać <xref:System.ServiceProcess.TimeoutException> podczas oczekiwania na urządzenie musi być gotowy do akceptowania większej ilości danych.  
  
 Domyślnie <xref:System.IO.Ports.SerialPort> używa <xref:System.Text.ASCIIEncoding> do kodowania znaków. <xref:System.Text.ASCIIEncoding> koduje wszystkich większych niż 127 znaków jako (char) 63 lub "?". Aby obsługiwać dodatkowe znaki w tym zakresie, należy ustawić <xref:System.IO.Ports.SerialPort.Encoding%2A> do <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, lub <xref:System.Text.UnicodeEncoding>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> Przekazywany jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Podany port nie jest otwarty.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> Lub <paramref name="count" /> parametry są poza ważnym przekraczanym <paramref name="buffer" /> przekazywana. Albo <paramref name="offset" /> lub <paramref name="count" /> jest mniejsza niż zero.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="offset" /> plus <paramref name="count" /> jest większa niż długość <paramref name="buffer" />.</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">Operacja nie została ukończona przed upłynięciem limitu czasu.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBufferSize">
      <MemberSignature Language="C#" Value="public int WriteBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.WriteBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WriteBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteBufferSize : int with get, set" Usage="System.IO.Ports.SerialPort.WriteBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(2048)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("WriteBufferSize")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar bufora wyjściowego portu szeregowego.</summary>
        <value>Rozmiar buforu wyjściowego. Wartość domyślna to 2048.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.WriteBufferSize%2A> Właściwość ignoruje wszelkie wartości, które są mniejsze niż 2048.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /> Wartość jest mniejsza niż zero.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /> Właściwość została ustawiona, gdy strumień jest otwarty.</exception>
        <exception cref="T:System.IO.IOException"><see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /> Właściwość została ustawiona na wartość nieparzystej liczby całkowitej.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public void WriteLine (string text);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLine(string text) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLine (text As String)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLine(System::String ^ text);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public void WriteLine (string str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLine(string str) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.WriteLine(System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLine (str As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLine(System::String ^ str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.WriteLine : string -&gt; unit" Usage="serialPort.WriteLine str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2" />
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text">Ciąg, który można zapisać do buforu wyjściowego.</param>
        <param name="str">Ciąg, który można zapisać do buforu wyjściowego.</param>
        <summary>Zapisuje określony ciąg i <see cref="P:System.IO.Ports.SerialPort.NewLine" /> wartość do buforu wyjściowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku zbyt wielu bajtów w buforze wejściowym i <xref:System.IO.Ports.SerialPort.Handshake%2A> ustawiono <xref:System.IO.Ports.Handshake.XOnXOff> , a następnie <xref:System.IO.Ports.SerialPort> obiektu mogą zgłaszać <xref:System.ServiceProcess.TimeoutException> podczas oczekiwania na urządzenie musi być gotowy do akceptowania większej ilości danych.  
  
 Napisane dane wyjściowe obejmują <xref:System.IO.Ports.SerialPort.NewLine%2A> ciągu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.IO.Ports.SerialPort> klasy, aby umożliwić dwóm użytkownikom rozmowę na dwóch oddzielnych komputerach, podłączonych przy użyciu kabla pseudomodemu. Ten przykład kodu jest częścią większego przykładu kodu przewidzianego dla <xref:System.IO.Ports.SerialPort> klasy.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Podany port nie jest otwarty.</exception>
        <exception cref="T:System.TimeoutException"><see cref="M:System.IO.Ports.SerialPort.WriteLine(System.String)" /> Metody nie można zapisać do strumienia.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.IO.Ports.SerialPort.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("WriteTimeout")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę milisekund, zanim upłynie limit czasu, gdy operacja zapisu zakończy się.</summary>
        <value>Liczba milisekund, zanim upłynie limit czasu. Wartość domyślna to <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość limitu czasu zapisu pierwotnie została ustawiona podczas 500 milisekund w Win32 API komunikacji. Ta właściwość umożliwia ustawienie tej wartości. Limit czasu można ustawić na wartość większą niż zero, lub wartość <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, w którym to przypadku nie przekroczenia limitu czasu. <xref:System.IO.Ports.SerialPort.InfiniteTimeout> jest ustawieniem domyślnym.  
  
> [!NOTE]
>  Użytkownicy z niezarządzanej `COMMTIMEOUTS` struktury oczekiwać, że wartość limitu czasu na zero, aby pominąć błędy przekroczenia limitu czasu. Aby pominąć przekroczeń limitu czasu za pomocą <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> własności, jednak należy określić <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.  
  
 Ta właściwość nie ma wpływu na <xref:System.IO.Stream.BeginWrite%2A> metoda Strumień zwrócony przez <xref:System.IO.Ports.SerialPort.BaseStream%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.IO.Ports.SerialPort> klasy, aby umożliwić dwóm użytkownikom rozmowę na dwóch oddzielnych komputerach, podłączonych przy użyciu kabla pseudomodemu. W tym przykładzie użytkownicy są monitowani, aby ustawić port i nazwę użytkownika przed rozpoczęciem rozmowy. Ten przykład kodu jest częścią większego przykładu kodu przewidzianego dla <xref:System.IO.Ports.SerialPort> klasy.  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Port w nieprawidłowym stanie.  
  
\- lub — 
Nie można ustawić stanu portu bazowego. Na przykład, parametry przekazywane z <see cref="T:System.IO.Ports.SerialPort" /> obiekt był nieprawidłowy.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.IO.Ports.SerialPort.WriteTimeout" /> Wartość jest mniejsza od zera i nie jest równa <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>