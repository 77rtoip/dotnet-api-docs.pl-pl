<Type Name="OracleString" FullName="System.Data.OracleClient.OracleString">
  <TypeSignature Language="C#" Value="public struct OracleString : IComparable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit OracleString extends System.ValueType implements class System.Data.SqlTypes.INullable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleString" />
  <TypeSignature Language="VB.NET" Value="Public Structure OracleString&#xA;Implements IComparable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public value class OracleString : IComparable, System::Data::SqlTypes::INullable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d0280-101">Reprezentuje o zmiennej długości strumienia znaków, które mają być przechowywane w lub pobrać z bazy danych.</span><span class="sxs-lookup"><span data-stu-id="d0280-101">Represents a variable-length stream of characters to be stored in or retrieved from the database.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0280-102">Aby uzyskać <xref:System.Data.OracleClient.OracleString> obiekt, należy wywołać <xref:System.Data.OracleClient.OracleDataReader.GetOracleString%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d0280-102">To obtain an <xref:System.Data.OracleClient.OracleString> object, call the <xref:System.Data.OracleClient.OracleDataReader.GetOracleString%2A> method.</span></span>  
  
   
  
## Examples  
  
```  
using System;  
using System.Data.OracleClient;  
public class Class1 {  
   public static void Main() {  
      OracleString oraclestring1 = new OracleString("MyOracleString1");  
      OracleString oraclestring2 = new OracleString("MyOracleString2");  
      OracleString oraclestring3 = new OracleString("MyOracleString1");  
  
      // Type: System.Data.OracleClient.OracleString  
      Console.WriteLine("Type: " + oraclestring1.GetType());  
  
      // Length: 15  
      Console.WriteLine("Length: " + oraclestring1.Length);  
  
      // False  
      Console.WriteLine(oraclestring1.IsNull);  
  
      // -1  
      Console.WriteLine(oraclestring1.CompareTo(oraclestring2));  
  
      // 0  
      Console.WriteLine(oraclestring1.CompareTo(oraclestring3));  
  
      // 1  
      Console.WriteLine(oraclestring2.CompareTo(oraclestring3));  
  
      // False  
      Console.WriteLine(oraclestring1.Equals(oraclestring2));  
  
      // True  
      Console.WriteLine(oraclestring1.Equals(oraclestring3));  
  
      // MyOracleString1  
      Console.WriteLine(oraclestring1.Value);  
  
      // MyOracleString2  
      Console.WriteLine(oraclestring2.ToString());  
   }  
}  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleString (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleString(System::String ^ s);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="d0280-103">Ciąg do przechowywania.</span><span class="sxs-lookup"><span data-stu-id="d0280-103">The string to store.</span></span></param>
        <summary><span data-ttu-id="d0280-104">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.OracleClient.OracleString" /> , określa ciąg do przechowywania.</span><span class="sxs-lookup"><span data-stu-id="d0280-104">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleString" /> class and specifies the string to store.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d0280-105">Obiekt do porównania.</span><span class="sxs-lookup"><span data-stu-id="d0280-105">The object to be compared.</span></span></param>
        <summary><span data-ttu-id="d0280-106">Porównuje to wystąpienie <see cref="T:System.Data.OracleClient.OracleString" /> do podanego obiektu i zwraca dane dotyczące ich względne wartości.</span><span class="sxs-lookup"><span data-stu-id="d0280-106">Compares this instance of <see cref="T:System.Data.OracleClient.OracleString" /> to the supplied object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="d0280-107">Podpisem liczbę określającą względne wartości wystąpienia i obiektu.</span><span class="sxs-lookup"><span data-stu-id="d0280-107">A signed number indicating the relative values of the instance and the object.</span></span>  
  
 <span data-ttu-id="d0280-108"><list type="table"><listheader><term> Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="d0280-108"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="d0280-109"></term><description> Warunek</span><span class="sxs-lookup"><span data-stu-id="d0280-109"></term><description> Condition</span></span>  
  
 <span data-ttu-id="d0280-110"></description></listheader><item><term> Mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="d0280-110"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="d0280-111"></term><description> To wystąpienie jest mniejsza niż obiekt.</span><span class="sxs-lookup"><span data-stu-id="d0280-111"></term><description> This instance is less than object.</span></span>  
  
 <span data-ttu-id="d0280-112"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="d0280-112"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="d0280-113"></term><description> To wystąpienie jest takie same jak dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="d0280-113"></term><description> This instance is the same as object.</span></span>  
  
 <span data-ttu-id="d0280-114"></description></item><item><term> Większa niż zero</span><span class="sxs-lookup"><span data-stu-id="d0280-114"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="d0280-115"></term><description> To wystąpienie jest większy niż obiekt</span><span class="sxs-lookup"><span data-stu-id="d0280-115"></term><description> This instance is greater than object</span></span>  
  
 <span data-ttu-id="d0280-116">—lub—</span><span class="sxs-lookup"><span data-stu-id="d0280-116">-or-</span></span>  
  
 <span data-ttu-id="d0280-117">obiekt jest odwołanie o wartości null (<see langword="Nothing" />)</span><span class="sxs-lookup"><span data-stu-id="d0280-117">object is a null reference (<see langword="Nothing" />)</span></span>  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleString Concat (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleString Concat(valuetype System.Data.OracleClient.OracleString x, valuetype System.Data.OracleClient.OracleString y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.Concat(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (x As OracleString, y As OracleString) As OracleString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleString Concat(System::Data::OracleClient::OracleString x, System::Data::OracleClient::OracleString y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleString" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleString" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d0280-118"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-118">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <param name="y"><span data-ttu-id="d0280-119"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-119">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <summary><span data-ttu-id="d0280-120">Łączy dwa określone <see cref="T:System.Data.OracleClient.OracleString" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="d0280-120">Concatenates the two specified <see cref="T:System.Data.OracleClient.OracleString" /> structures.</span></span></summary>
        <returns><span data-ttu-id="d0280-121"><see cref="T:System.Data.OracleClient.OracleString" /> Zawierające nowo połączonych reprezentującej zawartość dwa <see cref="T:System.Data.OracleClient.OracleString" /> parametrów.</span><span class="sxs-lookup"><span data-stu-id="d0280-121">An <see cref="T:System.Data.OracleClient.OracleString" /> containing the newly concatenated value representing the contents of the two <see cref="T:System.Data.OracleClient.OracleString" /> parameters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleString Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Data.OracleClient.OracleString Empty" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleString.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As OracleString " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleString Empty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0280-122">Reprezentuje pusty ciąg, który można przypisać do <see cref="P:System.Data.OracleClient.OracleString.Value" /> właściwości wystąpienia <see cref="T:System.Data.OracleClient.OracleString" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="d0280-122">Represents an empty string that can be assigned to the <see cref="P:System.Data.OracleClient.OracleString.Value" /> property of an instance of the <see cref="T:System.Data.OracleClient.OracleString" /> structure.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d0280-123">Porównuje podane elementy do innego elementów.</span><span class="sxs-lookup"><span data-stu-id="d0280-123">Compares the supplied item(s) to another item(s).</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d0280-124">Obiekt do porównania.</span><span class="sxs-lookup"><span data-stu-id="d0280-124">The object to be compared.</span></span></param>
        <summary><span data-ttu-id="d0280-125">Porównuje parametru podanego obiektu <see cref="P:System.Data.OracleClient.OracleString.Value" /> właściwość <see cref="T:System.Data.OracleClient.OracleString" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="d0280-125">Compares the supplied object parameter to the <see cref="P:System.Data.OracleClient.OracleString.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleString" /> object.</span></span></summary>
        <returns><span data-ttu-id="d0280-126">Equals, którą będzie zwracać <see langword="true" /> Jeśli obiekt jest wystąpieniem <see cref="T:System.Data.OracleClient.OracleString" /> i są równe; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-126">Equals will return <see langword="true" /> if the object is an instance of <see cref="T:System.Data.OracleClient.OracleString" /> and the two are equal; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean Equals (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean Equals(valuetype System.Data.OracleClient.OracleString x, valuetype System.Data.OracleClient.OracleString y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.Equals(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (x As OracleString, y As OracleString) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean Equals(System::Data::OracleClient::OracleString x, System::Data::OracleClient::OracleString y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleString" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleString" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d0280-127"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-127">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <param name="y"><span data-ttu-id="d0280-128"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-128">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <summary><span data-ttu-id="d0280-129">Wykonuje logiczną porównanie dwóch <see cref="T:System.Data.OracleClient.OracleString" /> operandów w celu określenia, czy są równe.</span><span class="sxs-lookup"><span data-stu-id="d0280-129">Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if they are equal.</span></span></summary>
        <returns><span data-ttu-id="d0280-130"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> dwa wystąpienia są równe lub <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> dwa wystąpienia nie są równe.</span><span class="sxs-lookup"><span data-stu-id="d0280-130">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are not equal.</span></span> <span data-ttu-id="d0280-131">Jeśli wystąpienie albo <see cref="T:System.Data.OracleClient.OracleString" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see cref="T:System.Data.OracleClient.OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-131">If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d0280-132">Pobiera wartość skrótu dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="d0280-132">Gets the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="d0280-133">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</span><span class="sxs-lookup"><span data-stu-id="d0280-133">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean GreaterThan (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean GreaterThan(valuetype System.Data.OracleClient.OracleString x, valuetype System.Data.OracleClient.OracleString y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.GreaterThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThan (x As OracleString, y As OracleString) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean GreaterThan(System::Data::OracleClient::OracleString x, System::Data::OracleClient::OracleString y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleString" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleString" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d0280-134"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-134">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <param name="y"><span data-ttu-id="d0280-135"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-135">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <summary><span data-ttu-id="d0280-136">Wykonuje logiczną porównanie dwóch <see cref="T:System.Data.OracleClient.OracleString" /> operandów w celu określenia, jeśli pierwsze jest większe od drugiego.</span><span class="sxs-lookup"><span data-stu-id="d0280-136">Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if the first is greater than the second.</span></span></summary>
        <returns><span data-ttu-id="d0280-137"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> Jeśli pierwsze wystąpienie jest większa niż drugie wystąpienie, w przeciwnym razie <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-137">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="d0280-138">Jeśli wystąpienie albo <see cref="T:System.Data.OracleClient.OracleString" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see cref="T:System.Data.OracleClient.OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-138">If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean GreaterThanOrEqual (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean GreaterThanOrEqual(valuetype System.Data.OracleClient.OracleString x, valuetype System.Data.OracleClient.OracleString y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.GreaterThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThanOrEqual (x As OracleString, y As OracleString) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean GreaterThanOrEqual(System::Data::OracleClient::OracleString x, System::Data::OracleClient::OracleString y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleString" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleString" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d0280-139"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-139">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <param name="y"><span data-ttu-id="d0280-140"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-140">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <summary><span data-ttu-id="d0280-141">Wykonuje logiczną porównanie dwóch <see cref="T:System.Data.OracleClient.OracleString" /> operandów w celu określenia, jeśli pierwsze jest większe lub równe drugiemu.</span><span class="sxs-lookup"><span data-stu-id="d0280-141">Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if the first is greater than or equal to the second.</span></span></summary>
        <returns><span data-ttu-id="d0280-142"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> Jeśli pierwsze wystąpienie jest większa niż lub równa drugie wystąpienie, w przeciwnym razie <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-142">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="d0280-143">Jeśli wystąpienie albo <see cref="T:System.Data.OracleClient.OracleString" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see cref="T:System.Data.OracleClient.OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-143">If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleString.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0280-144">Wskazuje, czy <see cref="P:System.Data.OracleClient.OracleString.Value" /> z <see cref="T:System.Data.OracleClient.OracleString" /> jest <see cref="F:System.Data.OracleClient.OracleString.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-144">Indicates whether the <see cref="P:System.Data.OracleClient.OracleString.Value" /> of the <see cref="T:System.Data.OracleClient.OracleString" /> is <see cref="F:System.Data.OracleClient.OracleString.Null" />.</span></span></summary>
        <value>
          <span data-ttu-id="d0280-145"><see langword="true" /> Jeśli <see cref="P:System.Data.OracleClient.OracleString.Value" /> jest <see cref="F:System.Data.OracleClient.OracleString.Null" />, w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-145"><see langword="true" /> if <see cref="P:System.Data.OracleClient.OracleString.Value" /> is <see cref="F:System.Data.OracleClient.OracleString.Null" />, otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public char this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleString.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[int] { char get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d0280-146">Pozycja bajtów, które mają zostać pobrane.</span><span class="sxs-lookup"><span data-stu-id="d0280-146">The position of the byte to be retrieved.</span></span></param>
        <summary><span data-ttu-id="d0280-147">Pobiera pojedynczy bajt z <see langword="Value" /> właściwości znajdujący się w pozycji parametru liczby całkowitej <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-147">Gets the single byte from the <see langword="Value" /> property located at the position indicated by the integer parameter, <paramref name="index" />.</span></span></summary>
        <value><span data-ttu-id="d0280-148">Bajt, znajdujący się w pozycji parametru liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="d0280-148">The byte located at the position indicated by the integer parameter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0280-149">Jeśli `index` wskazuje położenie poza koniec tablicy bajtów jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d0280-149">If `index` indicates a position beyond the end of the byte array, an exception is raised.</span></span>  
  
 <span data-ttu-id="d0280-150">Aby uniknąć, który wywołał wyjątek, sprawdzać <xref:System.Data.OracleClient.OracleString.IsNull%2A> właściwości i `Length` właściwości przed przeczytaniem `this`.</span><span class="sxs-lookup"><span data-stu-id="d0280-150">To avoid raising an exception, always check the <xref:System.Data.OracleClient.OracleString.IsNull%2A> property and the `Length` property before reading `this`.</span></span>  
  
 <span data-ttu-id="d0280-151">Ta właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d0280-151">This property is read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleString.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0280-152">Pobiera długość ciągu, który jest przechowywany w tym <see cref="T:System.Data.OracleClient.OracleString" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="d0280-152">Gets the length of the string that is stored in this <see cref="T:System.Data.OracleClient.OracleString" /> structure.</span></span></summary>
        <value><span data-ttu-id="d0280-153">Długość ciągu, który jest przechowywany.</span><span class="sxs-lookup"><span data-stu-id="d0280-153">The length of the string that is stored.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean LessThan (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean LessThan(valuetype System.Data.OracleClient.OracleString x, valuetype System.Data.OracleClient.OracleString y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.LessThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThan (x As OracleString, y As OracleString) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean LessThan(System::Data::OracleClient::OracleString x, System::Data::OracleClient::OracleString y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleString" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleString" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d0280-154"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-154">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <param name="y"><span data-ttu-id="d0280-155"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-155">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <summary><span data-ttu-id="d0280-156">Wykonuje logiczną porównanie dwóch <see cref="T:System.Data.OracleClient.OracleString" /> operandów w celu określenia, jeśli pierwsze jest mniejsze od drugiego.</span><span class="sxs-lookup"><span data-stu-id="d0280-156">Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if the first is less than the second.</span></span></summary>
        <returns><span data-ttu-id="d0280-157"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> Jeśli początkowo mniejszej niż drugi jest wystąpienie, w przeciwnym razie <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-157">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="d0280-158">Jeśli wystąpienie albo <see cref="T:System.Data.OracleClient.OracleString" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see cref="T:System.Data.OracleClient.OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-158">If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean LessThanOrEqual (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean LessThanOrEqual(valuetype System.Data.OracleClient.OracleString x, valuetype System.Data.OracleClient.OracleString y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.LessThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThanOrEqual (x As OracleString, y As OracleString) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean LessThanOrEqual(System::Data::OracleClient::OracleString x, System::Data::OracleClient::OracleString y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleString" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleString" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d0280-159"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-159">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <param name="y"><span data-ttu-id="d0280-160"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-160">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <summary><span data-ttu-id="d0280-161">Wykonuje logiczną porównanie dwóch <see cref="T:System.Data.OracleClient.OracleString" /> operandów w celu określenia, jeśli pierwsze jest mniejsze niż drugi.</span><span class="sxs-lookup"><span data-stu-id="d0280-161">Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if the first is less than or equal to the second.</span></span></summary>
        <returns><span data-ttu-id="d0280-162"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> Jeśli pierwsze wystąpienie jest mniejsza niż drugie wystąpienie, w przeciwnym razie <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-162">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="d0280-163">Jeśli wystąpienie albo <see cref="T:System.Data.OracleClient.OracleString" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see cref="T:System.Data.OracleClient.OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-163">If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotEquals">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean NotEquals (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean NotEquals(valuetype System.Data.OracleClient.OracleString x, valuetype System.Data.OracleClient.OracleString y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.NotEquals(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotEquals (x As OracleString, y As OracleString) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean NotEquals(System::Data::OracleClient::OracleString x, System::Data::OracleClient::OracleString y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleString" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleString" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d0280-164"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-164">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <param name="y"><span data-ttu-id="d0280-165"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-165">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <summary><span data-ttu-id="d0280-166">Wykonuje logiczną porównanie dwóch <see cref="T:System.Data.OracleClient.OracleString" /> operandów w celu określenia, jeśli nie są takie same.</span><span class="sxs-lookup"><span data-stu-id="d0280-166">Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if they are not equal.</span></span></summary>
        <returns><span data-ttu-id="d0280-167"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> dwa wystąpienia nie są równe lub <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> dwa wystąpienia są równe.</span><span class="sxs-lookup"><span data-stu-id="d0280-167">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal.</span></span> <span data-ttu-id="d0280-168">Jeśli wystąpienie albo <see cref="T:System.Data.OracleClient.OracleString" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see cref="T:System.Data.OracleClient.OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-168">If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleString Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Data.OracleClient.OracleString Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleString.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleString " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleString Null;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0280-169">Reprezentuje wartość null, które mogą być przypisane do <see cref="P:System.Data.OracleClient.OracleString.Value" /> właściwości wystąpienia <see cref="T:System.Data.OracleClient.OracleString" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="d0280-169">Represents a null value that can be assigned to the <see cref="P:System.Data.OracleClient.OracleString.Value" /> property of an instance of the <see cref="T:System.Data.OracleClient.OracleString" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0280-170">`Null` działa jako stała dla `OracleString` struktury.</span><span class="sxs-lookup"><span data-stu-id="d0280-170">`Null` functions as a constant for the `OracleString` structure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleString operator + (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleString op_Addition(valuetype System.Data.OracleClient.OracleString x, valuetype System.Data.OracleClient.OracleString y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.op_Addition(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (x As OracleString, y As OracleString) As OracleString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleString operator +(System::Data::OracleClient::OracleString x, System::Data::OracleClient::OracleString y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleString" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleString" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d0280-171"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-171">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <param name="y"><span data-ttu-id="d0280-172"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-172">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <summary><span data-ttu-id="d0280-173">Łączy dwa określone <see cref="T:System.Data.OracleClient.OracleString" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="d0280-173">Concatenates the two specified <see cref="T:System.Data.OracleClient.OracleString" /> structures.</span></span></summary>
        <returns><span data-ttu-id="d0280-174"><see cref="T:System.Data.OracleClient.OracleString" /> Zawierające nowo połączonych reprezentującej zawartość dwa <see cref="T:System.Data.OracleClient.OracleString" /> parametrów.</span><span class="sxs-lookup"><span data-stu-id="d0280-174">An <see cref="T:System.Data.OracleClient.OracleString" /> containing the newly concatenated value representing the contents of the two <see cref="T:System.Data.OracleClient.OracleString" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d0280-175">Jest równoważne metodę dla tego operatora <xref:System.Data.OracleClient.OracleString.Concat%28System.Data.OracleClient.OracleString%2CSystem.Data.OracleClient.OracleString%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d0280-175">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleString.Concat%28System.Data.OracleClient.OracleString%2CSystem.Data.OracleClient.OracleString%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator == (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_Equality(valuetype System.Data.OracleClient.OracleString x, valuetype System.Data.OracleClient.OracleString y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.op_Equality(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (x As OracleString, y As OracleString) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator ==(System::Data::OracleClient::OracleString x, System::Data::OracleClient::OracleString y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleString" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleString" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d0280-176"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-176">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <param name="y"><span data-ttu-id="d0280-177"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-177">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <summary><span data-ttu-id="d0280-178">Wykonuje logiczną porównanie dwóch <see cref="T:System.Data.OracleClient.OracleString" /> operandów w celu określenia, czy są równe.</span><span class="sxs-lookup"><span data-stu-id="d0280-178">Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if they are equal.</span></span></summary>
        <returns><span data-ttu-id="d0280-179"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> dwa wystąpienia są równe lub <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> dwa wystąpienia nie są równe.</span><span class="sxs-lookup"><span data-stu-id="d0280-179">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are not equal.</span></span> <span data-ttu-id="d0280-180">Jeśli wystąpienie albo <see cref="T:System.Data.OracleClient.OracleString" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see cref="T:System.Data.OracleClient.OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-180">If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d0280-181">Jest równoważne metodę dla tego operatora <xref:System.Data.OracleClient.OracleString.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d0280-181">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleString.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator string (System.Data.OracleClient.OracleString x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname string op_Explicit(valuetype System.Data.OracleClient.OracleString x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.op_Explicit(System.Data.OracleClient.OracleString)~System.String" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (x As OracleString) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::String ^(System::Data::OracleClient::OracleString x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleString" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d0280-182"><see langword="OracleString" /> Do skonwertowania.</span><span class="sxs-lookup"><span data-stu-id="d0280-182">The <see langword="OracleString" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="d0280-183">Konwertuje <see cref="T:System.Data.OracleClient.OracleString" /> do <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-183">Converts an <see cref="T:System.Data.OracleClient.OracleString" /> to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="d0280-184">A <see langword="String" />, których zawartość jest taka sama jak <see cref="P:System.Data.OracleClient.OracleString.Value" /> właściwość <see langword="OracleString" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="d0280-184">A <see langword="String" />, whose contents are the same as the <see cref="P:System.Data.OracleClient.OracleString.Value" /> property of the <see langword="OracleString" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d0280-185">Jest równoważne metodę dla tego operatora <xref:System.Data.OracleClient.OracleString.ToString?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d0280-185">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleString.ToString?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &gt; (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_GreaterThan(valuetype System.Data.OracleClient.OracleString x, valuetype System.Data.OracleClient.OracleString y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.op_GreaterThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (x As OracleString, y As OracleString) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &gt;(System::Data::OracleClient::OracleString x, System::Data::OracleClient::OracleString y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleString" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleString" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d0280-186"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-186">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <param name="y"><span data-ttu-id="d0280-187"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-187">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <summary><span data-ttu-id="d0280-188">Wykonuje logiczną porównanie dwóch <see cref="T:System.Data.OracleClient.OracleString" /> operandów w celu określenia, jeśli pierwsze jest większe od drugiego.</span><span class="sxs-lookup"><span data-stu-id="d0280-188">Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if the first is greater than the second.</span></span></summary>
        <returns><span data-ttu-id="d0280-189"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> Jeśli pierwsze wystąpienie jest większa niż drugie wystąpienie, w przeciwnym razie <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-189">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="d0280-190">Jeśli wystąpienie albo <see cref="T:System.Data.OracleClient.OracleString" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see cref="T:System.Data.OracleClient.OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-190">If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d0280-191">Jest równoważne metodę dla tego operatora <xref:System.Data.OracleClient.OracleString.GreaterThan%28System.Data.OracleClient.OracleString%2CSystem.Data.OracleClient.OracleString%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d0280-191">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleString.GreaterThan%28System.Data.OracleClient.OracleString%2CSystem.Data.OracleClient.OracleString%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &gt;= (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_GreaterThanOrEqual(valuetype System.Data.OracleClient.OracleString x, valuetype System.Data.OracleClient.OracleString y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.op_GreaterThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (x As OracleString, y As OracleString) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &gt;=(System::Data::OracleClient::OracleString x, System::Data::OracleClient::OracleString y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleString" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleString" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d0280-192"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-192">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <param name="y"><span data-ttu-id="d0280-193"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-193">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <summary><span data-ttu-id="d0280-194">Wykonuje logiczną porównanie dwóch <see cref="T:System.Data.OracleClient.OracleString" /> operandów w celu określenia, jeśli pierwsze jest większe lub równe drugiemu.</span><span class="sxs-lookup"><span data-stu-id="d0280-194">Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if the first is greater than or equal to the second.</span></span></summary>
        <returns><span data-ttu-id="d0280-195"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> Jeśli pierwsze wystąpienie jest większa niż lub równa drugie wystąpienie, w przeciwnym razie <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-195">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="d0280-196">Jeśli wystąpienie albo <see cref="T:System.Data.OracleClient.OracleString" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see cref="T:System.Data.OracleClient.OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-196">If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d0280-197">Jest równoważne metodę dla tego operatora <xref:System.Data.OracleClient.OracleString.GreaterThanOrEqual%28System.Data.OracleClient.OracleString%2CSystem.Data.OracleClient.OracleString%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d0280-197">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleString.GreaterThanOrEqual%28System.Data.OracleClient.OracleString%2CSystem.Data.OracleClient.OracleString%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Data.OracleClient.OracleString (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleString op_Implicit(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.op_Implicit(System.String)~System.Data.OracleClient.OracleString" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (s As String) As OracleString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Data::OracleClient::OracleString(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="d0280-198"><see cref="T:System.String" /> Do skonwertowania.</span><span class="sxs-lookup"><span data-stu-id="d0280-198">The <see cref="T:System.String" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="d0280-199">Konwertuje <see cref="T:System.String" /> parametr <see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-199">Converts the <see cref="T:System.String" /> parameter to an <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></summary>
        <returns><span data-ttu-id="d0280-200"><see langword="OracleString" /> Zawierający wartość określonej <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-200">An <see langword="OracleString" /> containing the value of the specified <see langword="String" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator != (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_Inequality(valuetype System.Data.OracleClient.OracleString x, valuetype System.Data.OracleClient.OracleString y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.op_Inequality(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (x As OracleString, y As OracleString) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator !=(System::Data::OracleClient::OracleString x, System::Data::OracleClient::OracleString y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleString" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleString" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d0280-201"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-201">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <param name="y"><span data-ttu-id="d0280-202"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-202">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <summary><span data-ttu-id="d0280-203">Wykonuje logiczną porównanie dwóch <see cref="T:System.Data.OracleClient.OracleString" /> operandów w celu określenia, czy są równe.</span><span class="sxs-lookup"><span data-stu-id="d0280-203">Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if they are equal.</span></span></summary>
        <returns><span data-ttu-id="d0280-204"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> dwa wystąpienia nie są równe lub <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> dwa wystąpienia są równe.</span><span class="sxs-lookup"><span data-stu-id="d0280-204">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal.</span></span> <span data-ttu-id="d0280-205">Jeśli wystąpienie albo <see cref="T:System.Data.OracleClient.OracleString" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see cref="T:System.Data.OracleClient.OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-205">If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d0280-206">Jest równoważne metodę dla tego operatora <xref:System.Data.OracleClient.OracleString.NotEquals%28System.Data.OracleClient.OracleString%2CSystem.Data.OracleClient.OracleString%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d0280-206">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleString.NotEquals%28System.Data.OracleClient.OracleString%2CSystem.Data.OracleClient.OracleString%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &lt; (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_LessThan(valuetype System.Data.OracleClient.OracleString x, valuetype System.Data.OracleClient.OracleString y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.op_LessThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (x As OracleString, y As OracleString) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &lt;(System::Data::OracleClient::OracleString x, System::Data::OracleClient::OracleString y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleString" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleString" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d0280-207"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-207">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <param name="y"><span data-ttu-id="d0280-208"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-208">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <summary><span data-ttu-id="d0280-209">Wykonuje logiczną porównanie dwóch <see cref="T:System.Data.OracleClient.OracleString" /> operandów w celu określenia, jeśli pierwsze jest mniejsze od drugiego.</span><span class="sxs-lookup"><span data-stu-id="d0280-209">Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if the first is less than the second.</span></span></summary>
        <returns><span data-ttu-id="d0280-210"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> Jeśli początkowo mniejszej niż drugi jest wystąpienie, w przeciwnym razie <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-210">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="d0280-211">Jeśli wystąpienie albo <see cref="T:System.Data.OracleClient.OracleString" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see cref="T:System.Data.OracleClient.OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-211">If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d0280-212">Jest równoważne metodę dla tego operatora <xref:System.Data.OracleClient.OracleString.LessThan%28System.Data.OracleClient.OracleString%2CSystem.Data.OracleClient.OracleString%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d0280-212">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleString.LessThan%28System.Data.OracleClient.OracleString%2CSystem.Data.OracleClient.OracleString%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &lt;= (System.Data.OracleClient.OracleString x, System.Data.OracleClient.OracleString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_LessThanOrEqual(valuetype System.Data.OracleClient.OracleString x, valuetype System.Data.OracleClient.OracleString y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.op_LessThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (x As OracleString, y As OracleString) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &lt;=(System::Data::OracleClient::OracleString x, System::Data::OracleClient::OracleString y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleString" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleString" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d0280-213"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-213">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <param name="y"><span data-ttu-id="d0280-214"><see cref="T:System.Data.OracleClient.OracleString" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-214">An <see cref="T:System.Data.OracleClient.OracleString" />.</span></span></param>
        <summary><span data-ttu-id="d0280-215">Wykonuje logiczną porównanie dwóch <see cref="T:System.Data.OracleClient.OracleString" /> operandów w celu określenia, jeśli pierwsze jest mniejsze niż drugi.</span><span class="sxs-lookup"><span data-stu-id="d0280-215">Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if the first is less than or equal to the second.</span></span></summary>
        <returns><span data-ttu-id="d0280-216"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> Jeśli pierwsze wystąpienie jest mniejsza niż drugie wystąpienie, w przeciwnym razie <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-216">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="d0280-217">Jeśli wystąpienie albo <see cref="T:System.Data.OracleClient.OracleString" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see cref="T:System.Data.OracleClient.OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-217">If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="d0280-218">Jest równoważne metodę dla tego operatora <xref:System.Data.OracleClient.OracleString.LessThanOrEqual%28System.Data.OracleClient.OracleString%2CSystem.Data.OracleClient.OracleString%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d0280-218">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleString.LessThanOrEqual%28System.Data.OracleClient.OracleString%2CSystem.Data.OracleClient.OracleString%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleString.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d0280-219">Konwertuje <see langword="OracleString" /> do obiektu <see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="d0280-219">Converts an <see langword="OracleString" /> object to a <see langword="String" />.</span></span></summary>
        <returns><span data-ttu-id="d0280-220">A <see langword="String" /> z taką samą wartość jak to <see langword="OracleString" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="d0280-220">A <see langword="String" /> with the same value as this <see langword="OracleString" /> structure.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleString.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d0280-221">Pobiera ciąg, który jest przechowywany w <see cref="T:System.Data.OracleClient.OracleString" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="d0280-221">Gets the string that is stored in the <see cref="T:System.Data.OracleClient.OracleString" /> structure.</span></span></summary>
        <value><span data-ttu-id="d0280-222">Ciąg, który jest przechowywany.</span><span class="sxs-lookup"><span data-stu-id="d0280-222">The string that is stored.</span></span>  
  
 <span data-ttu-id="d0280-223">Ta właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="d0280-223">This property is read-only.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>