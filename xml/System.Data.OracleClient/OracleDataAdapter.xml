<Type Name="OracleDataAdapter" FullName="System.Data.OracleClient.OracleDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ca07daa0785d9ac07e3e7a49d0e0fab05336f7e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69371713" /></Metadata><TypeSignature Language="C#" Value="public sealed class OracleDataAdapter : System.Data.Common.DbDataAdapter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleDataAdapter extends System.Data.Common.DbDataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleDataAdapter&#xA;Inherits DbDataAdapter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleDataAdapter sealed : System::Data::Common::DbDataAdapter, ICloneable" />
  <TypeSignature Language="F#" Value="type OracleDataAdapter = class&#xA;    inherit DbDataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface IDataAdapter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OracleDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("OracleDataAdapter has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleDataAdapterDesigner, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OracleDataAdapterToolboxItem, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleDataAdapterDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OracleDataAdapterToolboxItem, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="14d59-101">Reprezentuje zestaw poleceń danych i połączenie z bazą danych, która jest używana do wypełniania <see cref="T:System.Data.DataSet" /> i aktualizowania bazy danych.</span><span class="sxs-lookup"><span data-stu-id="14d59-101">Represents a set of data commands and a connection to a database that are used to fill the <see cref="T:System.Data.DataSet" /> and update the database.</span></span> <span data-ttu-id="14d59-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="14d59-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14d59-103">Ten typ jest przestarzały i zostanie usunięty w przyszłych wersjach .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="14d59-103">This type is deprecated and will be removed in a future version of the .NET Framework.</span></span> <span data-ttu-id="14d59-104">Aby uzyskać więcej informacji, zobacz artykuł [Oracle i ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span><span class="sxs-lookup"><span data-stu-id="14d59-104">For more information, see [Oracle and ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).</span></span>  
  
 <span data-ttu-id="14d59-105">Służy jako Most między zestawem danych i bazą danych na potrzeby pobierania i zapisywania danych. \*\*\*\* <xref:System.Data.OracleClient.OracleDataAdapter></span><span class="sxs-lookup"><span data-stu-id="14d59-105">The <xref:System.Data.OracleClient.OracleDataAdapter> serves as a bridge between a **DataSet** and database for retrieving and saving data.</span></span> <span data-ttu-id="14d59-106"><xref:System.Data.DataSet> <xref:System.Data.Common.DbDataAdapter.Update%2A> <xref:System.Data.DataSet> <xref:System.Data.Common.DbDataAdapter.Fill%2A> Program udostępnia ten mostek przy użyciu programu do ładowania danych z bazy danych do programu, a także do wysyłania zmian wprowadzonych z powrotem do źródła danych. <xref:System.Data.OracleClient.OracleDataAdapter></span><span class="sxs-lookup"><span data-stu-id="14d59-106">The <xref:System.Data.OracleClient.OracleDataAdapter> provides this bridge by using <xref:System.Data.Common.DbDataAdapter.Fill%2A> to load data from the database into the <xref:System.Data.DataSet>, and using <xref:System.Data.Common.DbDataAdapter.Update%2A> to send changes made in the <xref:System.Data.DataSet> back to the data source.</span></span>  
  
 <span data-ttu-id="14d59-107"><xref:System.Data.OracleClient.OracleDataAdapter> Po wypełnieniu,tworzywymaganetabeleikolumnydlazwracanychdanych,jeśli<xref:System.Data.DataSet>jeszcze nie istnieją.</span><span class="sxs-lookup"><span data-stu-id="14d59-107">When the <xref:System.Data.OracleClient.OracleDataAdapter> fills a <xref:System.Data.DataSet>, it creates the necessary tables and columns for the returned data if they do not already exist.</span></span> <span data-ttu-id="14d59-108">Jednak informacje o kluczu podstawowym nie są uwzględniane w niejawnie utworzonym schemacie, chyba <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> że <xref:System.Data.MissingSchemaAction.AddWithKey>właściwość jest ustawiona na.</span><span class="sxs-lookup"><span data-stu-id="14d59-108">However, primary key information is not included in the implicitly created schema unless the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property is set to <xref:System.Data.MissingSchemaAction.AddWithKey>.</span></span> <span data-ttu-id="14d59-109">Możesz również <xref:System.Data.OracleClient.OracleDataAdapter> utworzyć schemat <xref:System.Data.DataSet>, w tym informacje o kluczu podstawowym, przed wypełnieniem go danymi przy użyciu <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</span><span class="sxs-lookup"><span data-stu-id="14d59-109">You may also have the <xref:System.Data.OracleClient.OracleDataAdapter> create the schema of the <xref:System.Data.DataSet>, including primary key information, before filling it with data using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</span></span> <span data-ttu-id="14d59-110">Aby uzyskać więcej informacji, zobacz [Dodawanie istniejących ograniczeń do zestawu danych](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).</span><span class="sxs-lookup"><span data-stu-id="14d59-110">For more information, see [Adding Existing Constraints to a DataSet](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="14d59-111">Domyślnie pola liczbowe zaimportowane do programu <xref:System.Data.DataTable> z <xref:System.Data.Common.DbDataAdapter.Fill%2A> są mapowane na <xref:System.Data.OracleClient.OracleNumber> obiekty.</span><span class="sxs-lookup"><span data-stu-id="14d59-111">By default, numeric fields imported to a <xref:System.Data.DataTable> with <xref:System.Data.Common.DbDataAdapter.Fill%2A> are mapped to <xref:System.Data.OracleClient.OracleNumber> objects.</span></span> <span data-ttu-id="14d59-112">Istnieje możliwość przepełnienia <xref:System.Data.OracleClient.OracleNumber>i wyrzucania wyjątku Oracle przez zaimportowanie niecałkowitej wartości liczbowej, która jest zbyt duża lub zbyt wysoka precyzja <xref:System.Data.OracleClient.OracleNumber>dla ograniczeń precyzji.</span><span class="sxs-lookup"><span data-stu-id="14d59-112">It is possible to overflow the <xref:System.Data.OracleClient.OracleNumber>, and throw an Oracle exception, by importing a non-integral numeric value that is either too large or too high precision for the <xref:System.Data.OracleClient.OracleNumber>'s precision limitations.</span></span> <span data-ttu-id="14d59-113">Więcej informacji można znaleźć w <xref:System.Data.OracleClient.OracleNumber> opisie.</span><span class="sxs-lookup"><span data-stu-id="14d59-113">Refer to the description of <xref:System.Data.OracleClient.OracleNumber> for more information.</span></span>  
  
 <span data-ttu-id="14d59-114"><xref:System.Data.OracleClient.OracleDataAdapter> Zawierarównież<xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>właściwości ,,<xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A>, i<xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A>, które ułatwiają ładowanie i aktualizowanie danych. `TableMappings` <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A></span><span class="sxs-lookup"><span data-stu-id="14d59-114">The <xref:System.Data.OracleClient.OracleDataAdapter> also includes the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A>, <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A>, and `TableMappings` properties to facilitate loading and updating of data.</span></span>  
  
 <span data-ttu-id="14d59-115">Dostawca danych .NET Framework dla programu Oracle nie obsługuje wsadowych instrukcji SQL.</span><span class="sxs-lookup"><span data-stu-id="14d59-115">The .NET Framework Data Provider for Oracle does not support batched SQL statements.</span></span> <span data-ttu-id="14d59-116">Jednak umożliwia użycie wielu `REF CURSOR` parametrów wyjściowych do wypełniania **zestawu danych**. <xref:System.Data.DataTable></span><span class="sxs-lookup"><span data-stu-id="14d59-116">However, it does allow you to use multiple `REF CURSOR` output parameters to fill a **DataSet**, each in its own <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="14d59-117">Należy zdefiniować parametry, oznaczyć je jako parametry wyjściowe i wskazać, że są to `REF CURSOR` typy danych.</span><span class="sxs-lookup"><span data-stu-id="14d59-117">You must define the parameters, mark them as output parameters, and indicate that they are `REF CURSOR` data types.</span></span> <span data-ttu-id="14d59-118">Należy pamiętać, że nie można <xref:System.Data.Common.DbDataAdapter.Update%2A> użyć metody, <xref:System.Data.OracleClient.OracleDataAdapter> gdy jest wypełniane przy użyciu `REF CURSOR` parametrów zwracanych przez procedurę składowaną, ponieważ firma Oracle nie udostępnia informacji niezbędnych do określenia nazwy tabeli i nazw kolumn Po wykonaniu instrukcji SQL.</span><span class="sxs-lookup"><span data-stu-id="14d59-118">Note that you cannot use the <xref:System.Data.Common.DbDataAdapter.Update%2A> method when the <xref:System.Data.OracleClient.OracleDataAdapter> is filled using `REF CURSOR` parameters returned by a stored procedure, because Oracle does not provide the information necessary to determine what the table name and column names are when the SQL statement is executed.</span></span> <span data-ttu-id="14d59-119">W poniższym C# przykładzie przyjęto założenie, że utworzono tę procedurę składowaną.</span><span class="sxs-lookup"><span data-stu-id="14d59-119">The following C# example assumes that you have created this stored procedure.</span></span>  
  
 <span data-ttu-id="14d59-120">Utwórz następujący pakiet Oracle na serwerze Oracle.</span><span class="sxs-lookup"><span data-stu-id="14d59-120">Create the following Oracle package on the Oracle server.</span></span>  
  
```  
CREATE OR REPLACE PACKAGE CURSPKG AS   
   TYPE T_CURSOR IS REF CURSOR;   
   PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
      IO_CURSOR OUT T_CURSOR);   
   PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
      DEPTCURSOR OUT T_CURSOR);  
END CURSPKG;  
/  
```  
  
 <span data-ttu-id="14d59-121">Utwórz na serwerze Oracle następującą treść pakietu Oracle.</span><span class="sxs-lookup"><span data-stu-id="14d59-121">Create the following Oracle package body on the Oracle server.</span></span>  
  
```  
CREATE OR REPLACE PACKAGE BODY CURSPKG AS   
    PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
                               IO_CURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR T_CURSOR;   
    BEGIN   
        IF N_EMPNO <> 0 THEN   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO   
                        AND EMP.EMPNO = N_EMPNO;   
        ELSE   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO;   
        END IF;   
        IO_CURSOR := V_CURSOR;   
    END OPEN_ONE_CURSOR;   
    PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
                                DEPTCURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR1 T_CURSOR;   
        V_CURSOR2 T_CURSOR;   
    BEGIN   
        OPEN V_CURSOR1 FOR SELECT * FROM EMP;   
        OPEN V_CURSOR2 FOR SELECT * FROM DEPT;   
        EMPCURSOR  := V_CURSOR1;   
        DEPTCURSOR := V_CURSOR2;   
    END OPEN_TWO_CURSORS;   
END CURSPKG;  
 /  
```  
  
 <span data-ttu-id="14d59-122">W poniższym C# przykładzie pokazano, jak można uzyskać informacje o tabeli i kolumnie przy użyciu procedury składowanej.</span><span class="sxs-lookup"><span data-stu-id="14d59-122">The following C# example demonstrates how you might obtain table and column information using the stored procedure.</span></span>  
  
```csharp  
// GetConnectionString() returns a connection string for  
// the data source.  
  
string connString = GetConnectionString();  
DataSet ds = new DataSet();  
OracleConnection conn = new OracleConnection(connString);  
OracleCommand cmd = conn.CreateCommand();  
  
cmd.CommandText = "CURSPKG.OPEN_TWO_CURSORS";  
cmd.CommandType = CommandType.StoredProcedure;  
cmd.Parameters.Add("EMPCURSOR", OracleType.Cursor).Direction =   
       ParameterDirection.Output;  
cmd.Parameters.Add("DEPTCURSOR", OracleType.Cursor).Direction =   
       ParameterDirection.Output;  
  
OracleDataAdapter da = new OracleDataAdapter(cmd);  
da.TableMappings.Add("Table", "Emp");  
da.TableMappings.Add("Table1", "Dept");  
da.Fill(ds);  
  
ds.Relations.Add("EmpDept", ds.Tables["Dept"].Columns["Deptno"],   
      ds.Tables["Emp"].Columns["Deptno"], false);  
```  
  
 <span data-ttu-id="14d59-123">Poniższy Visual Basic przykład ilustruje sposób użycia programu <xref:System.Data.OracleClient.OracleDataAdapter> w celu <xref:System.Data.DataSet> wypełnienia przy użyciu programu Oracle `REF CURSOR`.</span><span class="sxs-lookup"><span data-stu-id="14d59-123">The following Visual Basic example demonstrates how to use an <xref:System.Data.OracleClient.OracleDataAdapter> to fill a <xref:System.Data.DataSet> using an Oracle `REF CURSOR`.</span></span> <span data-ttu-id="14d59-124">W tych przykładach użyto tabel, które są zdefiniowane w schemacie programu Oracle Scott/Tiger, i wymagają następujących pakietów PL/SQL i treści pakietu.</span><span class="sxs-lookup"><span data-stu-id="14d59-124">These examples use tables that are defined in the Oracle Scott/Tiger schema, and require the following PL/SQL package and package body.</span></span> <span data-ttu-id="14d59-125">Należy je utworzyć na serwerze, aby użyć przykładów.</span><span class="sxs-lookup"><span data-stu-id="14d59-125">You must create these on your server to use the examples.</span></span>  
  
 <span data-ttu-id="14d59-126">Utwórz następujący pakiet Oracle na serwerze Oracle.</span><span class="sxs-lookup"><span data-stu-id="14d59-126">Create the following Oracle package on the Oracle server.</span></span>  
  
```  
CREATE OR REPLACE PACKAGE CURSPKG AS   
   TYPE T_CURSOR IS REF CURSOR;   
   PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
      IO_CURSOR OUT T_CURSOR);   
   PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
      DEPTCURSOR OUT T_CURSOR);  
END CURSPKG;  
/  
```  
  
 <span data-ttu-id="14d59-127">Utwórz na serwerze Oracle następującą treść pakietu Oracle.</span><span class="sxs-lookup"><span data-stu-id="14d59-127">Create the following Oracle package body on the Oracle server.</span></span>  
  
``` 
CREATE OR REPLACE PACKAGE BODY CURSPKG AS   
    PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,   
                               IO_CURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR T_CURSOR;   
    BEGIN   
        IF N_EMPNO <> 0 THEN   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO   
                        AND EMP.EMPNO = N_EMPNO;   
        ELSE   
             OPEN V_CURSOR FOR   
             SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME   
                  FROM EMP, DEPT   
                  WHERE EMP.DEPTNO = DEPT.DEPTNO;   
        END IF;   
        IO_CURSOR := V_CURSOR;   
    END OPEN_ONE_CURSOR;   
    PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,   
                                DEPTCURSOR OUT T_CURSOR)   
    IS   
        V_CURSOR1 T_CURSOR;   
        V_CURSOR2 T_CURSOR;   
    BEGIN   
        OPEN V_CURSOR1 FOR SELECT * FROM EMP;   
        OPEN V_CURSOR2 FOR SELECT * FROM DEPT;   
        EMPCURSOR  := V_CURSOR1;   
        DEPTCURSOR := V_CURSOR2;   
    END OPEN_TWO_CURSORS;   
END CURSPKG;  
 /  
```  
  
 <span data-ttu-id="14d59-128">Ten Visual Basic przykład wykonuje procedurę składowaną pl/SQL, która zwraca `REF CURSOR` dwa parametry i <xref:System.Data.DataSet> wypełnia z zwracanymi wierszami.</span><span class="sxs-lookup"><span data-stu-id="14d59-128">This Visual Basic example executes a PL/SQL stored procedure that returns two `REF CURSOR` parameters, and fills a <xref:System.Data.DataSet> with the rows that are returned.</span></span>  
  
```vb  
  
' GetConnectionString() returns a connection string for  
' the data source.  
  
    Dim connString As New String(GetConnectionString())  
    Dim ds As New DataSet()  
    Dim conn As New OracleConnection(connString)  
    Dim cmd As OracleCommand = conn.CreateCommand()  
  
    cmd.CommandText = "CURSPKG.OPEN_TWO_CURSORS"  
    cmd.CommandType = CommandType.StoredProcedure  
    cmd.Parameters.Add("EMPCURSOR", OracleType.Cursor).Direction = _  
       ParameterDirection.Output  
    cmd.Parameters.Add("DEPTCURSOR", OracleType.Cursor).Direction = _  
       ParameterDirection.Output  
  
    Dim da As New OracleDataAdapter(cmd)  
    da.TableMappings.Add("Table", "Emp")  
    da.TableMappings.Add("Table1", "Dept")  
    da.Fill(ds)  
  
    ds.Relations.Add("EmpDept", ds.Tables("Dept").Columns("Deptno"), _  
      ds.Tables("Emp").Columns("Deptno"), False)  
```  
  
 <span data-ttu-id="14d59-129">Po użyciu <xref:System.Data.OracleClient.OracleDataAdapter> do `Fill` wykonania `FillSchema` operacji`DataColumn.ReadOnly` lub właściwość zawsze zwraca wartość false, niezależnie od tego, czy można zaktualizować kolumnę, ponieważ serwer Oracle nie zwraca tych informacji.</span><span class="sxs-lookup"><span data-stu-id="14d59-129">After using the <xref:System.Data.OracleClient.OracleDataAdapter> to perform a `Fill` or `FillSchema` operation, the `DataColumn.ReadOnly` property always returns false, regardless of whether a column can be updated or not, because the Oracle server does not return this information.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="14d59-130">Pobieranie i modyfikowanie danych ADO.NET</span><span class="sxs-lookup"><span data-stu-id="14d59-130">Retrieving and Modifying Data in ADO.NET</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14d59-131">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="14d59-131">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14d59-132">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="14d59-132">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14d59-133">Podczas tworzenia wystąpienia programu <xref:System.Data.OracleClient.OracleDataAdapter>, następujące właściwości do odczytu/zapisu są ustawiane na wartości domyślne, jak pokazano w tabeli.</span><span class="sxs-lookup"><span data-stu-id="14d59-133">When you create an instance of <xref:System.Data.OracleClient.OracleDataAdapter>, the following read/write properties are set to their default values, as shown in the table.</span></span>  
  
|<span data-ttu-id="14d59-134">Właściwości</span><span class="sxs-lookup"><span data-stu-id="14d59-134">Properties</span></span>|<span data-ttu-id="14d59-135">Wartość domyślna</span><span class="sxs-lookup"><span data-stu-id="14d59-135">Default value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="14d59-136">Można zmienić wartość dowolnej z tych właściwości za pomocą oddzielnego wywołania właściwości.</span><span class="sxs-lookup"><span data-stu-id="14d59-136">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14d59-137">Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleDataAdapter> i ustawia niektóre właściwości.</span><span class="sxs-lookup"><span data-stu-id="14d59-137">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOracleDataAdapter()  
    Dim myOracleConnection As OracleConnection = New OracleConnection("Data Source=Oracle8i;Integrated Security=yes")  
    Dim custDA As OracleDataAdapter = New OracleDataAdapter  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey  
  
    custDA.SelectCommand = New OracleCommand("SELECT DeptNo, DName FROM Dept", myOracleConnection)  
    custDA.InsertCommand = New OracleCommand("INSERT INTO Dept (DeptNo, DName) " & _  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection)  
    custDA.UpdateCommand = New OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " & _  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection)  
    custDA.DeleteCommand = New OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection)  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
End Sub  
```  
  
```csharp  
public static void CreateOracleDataAdapter()   
{  
    OracleConnection myOracleConnection = new OracleConnection("Data Source=Oracle8i;Integrated Security=yes");  
    OracleDataAdapter custDA = new OracleDataAdapter();  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  
  
    custDA.SelectCommand = new OracleCommand("SELECT DeptNo, CompanyName FROM Dept", myOracleConnection);  
    custDA.InsertCommand = new OracleCommand("INSERT INTO Dept (DeptNo, CompanyName) " +  
                                            "VALUES (:pDeptNo, :pCompanyName)", myOracleConnection);  
    custDA.UpdateCommand = new OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, CompanyName = :pCompanyName " +  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection);  
    custDA.DeleteCommand = new OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection);  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.InsertCommand.Parameters.Add("pCompanyName", OracleType.VarChar, 14, "CompanyName");  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.UpdateCommand.Parameters.Add("pCompanyName", OracleType.VarChar, 14, "CompanyName");  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="14d59-138">Pobieranie i modyfikowanie danych ADO.NET</span><span class="sxs-lookup"><span data-stu-id="14d59-138">Retrieving and Modifying Data in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleDataAdapter (System.Data.OracleClient.OracleCommand selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.OracleClient.OracleCommand selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.#ctor(System.Data.OracleClient.OracleCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommand As OracleCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleDataAdapter(System::Data::OracleClient::OracleCommand ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleDataAdapter : System.Data.OracleClient.OracleCommand -&gt; System.Data.OracleClient.OracleDataAdapter" Usage="new System.Data.OracleClient.OracleDataAdapter selectCommand" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.OracleClient.OracleCommand" />
      </Parameters>
      <Docs>
        <param name="selectCommand"><span data-ttu-id="14d59-139">Jest to instrukcja SQL SELECT lub procedura składowana, <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> <see cref="T:System.Data.OracleClient.OracleCommand" /> która jest ustawiana jako właściwość.</span><span class="sxs-lookup"><span data-stu-id="14d59-139">An <see cref="T:System.Data.OracleClient.OracleCommand" /> that is an SQL SELECT statement or stored procedure, and is set as the <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span></span></param>
        <summary><span data-ttu-id="14d59-140">Inicjuje nowe wystąpienie <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> klasy z określoną instrukcją SELECT języka SQL.</span><span class="sxs-lookup"><span data-stu-id="14d59-140">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> class with the specified SQL SELECT statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14d59-141">Ta implementacja <xref:System.Data.OracleClient.OracleDataAdapter> konstruktora <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> ustawia właściwość na wartość określoną w `selectCommand` parametrze.</span><span class="sxs-lookup"><span data-stu-id="14d59-141">This implementation of the <xref:System.Data.OracleClient.OracleDataAdapter> constructor sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> property to the value specified in the `selectCommand` parameter.</span></span>  
  
 <span data-ttu-id="14d59-142">Podczas tworzenia wystąpienia programu <xref:System.Data.OracleClient.OracleDataAdapter>, następujące właściwości do odczytu/zapisu są ustawiane na wartości domyślne, jak pokazano w tabeli.</span><span class="sxs-lookup"><span data-stu-id="14d59-142">When you create an instance of <xref:System.Data.OracleClient.OracleDataAdapter>, the following read/write properties are set to their default values, as shown in the table.</span></span>  
  
|<span data-ttu-id="14d59-143">Właściwości</span><span class="sxs-lookup"><span data-stu-id="14d59-143">Properties</span></span>|<span data-ttu-id="14d59-144">Wartość początkowa</span><span class="sxs-lookup"><span data-stu-id="14d59-144">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="14d59-145">Można zmienić wartość dowolnej z tych właściwości za pomocą oddzielnego wywołania właściwości.</span><span class="sxs-lookup"><span data-stu-id="14d59-145">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14d59-146">Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleDataAdapter> i ustawia niektóre właściwości.</span><span class="sxs-lookup"><span data-stu-id="14d59-146">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOracleDataAdapter()  
    Dim myOracleConnection As OracleConnection = New OracleConnection("Data Source=Oracle8i;Integrated Security=yes")  
    Dim myOracleCommand As OracleCommand = New OracleCommand("SELECT DeptNo, DName FROM Dept", myOracleConnection)  
    Dim custDA As OracleDataAdapter = New OracleDataAdapter(myOracleCommand)  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey  
  
    custDA.InsertCommand = New OracleCommand("INSERT INTO Dept (DeptNo, DName) " & _  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection)  
    custDA.UpdateCommand = New OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " & _  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection)  
    custDA.DeleteCommand = New OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection)  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
End Sub  
```  
  
```csharp  
public static void CreateOracleDataAdapter()   
{  
    OracleConnection myOracleConnection = new OracleConnection("Data Source=Oracle8i;Integrated Security=yes");  
    OracleCommand myOracleCommand = new OracleCommand("SELECT DeptNo, DName FROM Dept", myOracleConnection);  
    OracleDataAdapter custDA = new OracleDataAdapter(myOracleCommand);  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  
  
    custDA.InsertCommand = new OracleCommand("INSERT INTO Dept (DeptNo, DName) " +  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection);  
    custDA.UpdateCommand = new OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " +  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection);  
    custDA.DeleteCommand = new OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection);  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName");  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName");  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="14d59-147">Pobieranie i modyfikowanie danych ADO.NET</span><span class="sxs-lookup"><span data-stu-id="14d59-147">Retrieving and Modifying Data in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleDataAdapter (string selectCommandText, System.Data.OracleClient.OracleConnection selectConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, class System.Data.OracleClient.OracleConnection selectConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleDataAdapter(System::String ^ selectCommandText, System::Data::OracleClient::OracleConnection ^ selectConnection);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleDataAdapter : string * System.Data.OracleClient.OracleConnection -&gt; System.Data.OracleClient.OracleDataAdapter" Usage="new System.Data.OracleClient.OracleDataAdapter (selectCommandText, selectConnection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="selectCommandText"><span data-ttu-id="14d59-148">Ciąg, który jest instrukcją SELECT języka SQL lub procedurą składowaną, która ma <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> być używana przez <see cref="T:System.Data.OracleClient.OracleDataAdapter" />właściwość.</span><span class="sxs-lookup"><span data-stu-id="14d59-148">A string that is an SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span></span></param>
        <param name="selectConnection"><span data-ttu-id="14d59-149"><see cref="T:System.Data.OracleClient.OracleConnection" /> Reprezentuje połączenie.</span><span class="sxs-lookup"><span data-stu-id="14d59-149">An <see cref="T:System.Data.OracleClient.OracleConnection" /> that represents the connection.</span></span></param>
        <summary><span data-ttu-id="14d59-150">Inicjuje nowe wystąpienie <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> klasy za pomocą instrukcji SELECT języka SQL <see cref="T:System.Data.OracleClient.OracleConnection" />i.</span><span class="sxs-lookup"><span data-stu-id="14d59-150">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> class with an SQL SELECT statement and an <see cref="T:System.Data.OracleClient.OracleConnection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14d59-151">Ta implementacja programu <xref:System.Data.OracleClient.OracleDataAdapter> może być przydatna w aplikacji, która musi `Fill` wywołać metodę dla co <xref:System.Data.OracleClient.OracleDataAdapter> najmniej dwóch obiektów.</span><span class="sxs-lookup"><span data-stu-id="14d59-151">This implementation of the <xref:System.Data.OracleClient.OracleDataAdapter> can be useful in an application that must call the `Fill` method for two or more <xref:System.Data.OracleClient.OracleDataAdapter> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14d59-152">Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleDataAdapter> i ustawia niektóre właściwości.</span><span class="sxs-lookup"><span data-stu-id="14d59-152">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOracleDataAdapter()  
    Dim myOracleConnection As OracleConnection = New OracleConnection("Data Source=Oracle8i;Integrated Security=yes")  
    Dim mySelectText As String = "SELECT DeptNo, DName FROM Dept"  
    Dim custDA As OracleDataAdapter = New OracleDataAdapter(mySelectText, myOracleConnection)   
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey  
  
    custDA.InsertCommand = New OracleCommand("INSERT INTO Dept (DeptNo, DName) " & _  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection)  
    custDA.UpdateCommand = New OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " & _  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection)  
    custDA.DeleteCommand = New OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection)  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
End Sub  
```  
  
```csharp  
public static void CreateOracleDataAdapter()   
{  
    OracleConnection myOracleConnection = new OracleConnection("Data Source=Oracle8i;Integrated Security=yes");  
  
    string mySelectText = "SELECT DeptNo, DName FROM Dept";  
  
    OracleDataAdapter custDA = new OracleDataAdapter(mySelectText, myOracleConnection );  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  
  
    custDA.InsertCommand = new OracleCommand("INSERT INTO Dept (DeptNo, DName) " +  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection);  
    custDA.UpdateCommand = new OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " +  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection);  
    custDA.DeleteCommand = new OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection);  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName");  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName");  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="14d59-153">Pobieranie i modyfikowanie danych ADO.NET</span><span class="sxs-lookup"><span data-stu-id="14d59-153">Retrieving and Modifying Data in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string selectCommandText, string selectConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selectCommandText As String, selectConnectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleDataAdapter(System::String ^ selectCommandText, System::String ^ selectConnectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleDataAdapter : string * string -&gt; System.Data.OracleClient.OracleDataAdapter" Usage="new System.Data.OracleClient.OracleDataAdapter (selectCommandText, selectConnectionString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="selectCommandText"><span data-ttu-id="14d59-154">Ciąg, który jest instrukcją SELECT języka SQL lub procedurą składowaną, która ma <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> być używana przez <see cref="T:System.Data.OracleClient.OracleDataAdapter" />właściwość.</span><span class="sxs-lookup"><span data-stu-id="14d59-154">A string that is an SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</span></span></param>
        <param name="selectConnectionString"><span data-ttu-id="14d59-155">Parametry połączenia.</span><span class="sxs-lookup"><span data-stu-id="14d59-155">The connection string.</span></span></param>
        <summary><span data-ttu-id="14d59-156">Inicjuje nowe wystąpienie <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> klasy za pomocą instrukcji SELECT języka SQL i parametrów połączenia.</span><span class="sxs-lookup"><span data-stu-id="14d59-156">Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> class with an SQL SELECT statement and a connection string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="14d59-157">Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleDataAdapter> i ustawia niektóre właściwości.</span><span class="sxs-lookup"><span data-stu-id="14d59-157">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets some of its properties.</span></span>  
  
```vb  
Public Sub CreateOracleDataAdapter()  
    Dim myConnectionText As String = "Data Source=Oracle8i;Integrated Security=yes"  
    Dim mySelectText As String = "SELECT DeptNo, DName FROM Dept"  
    Dim custDA As OracleDataAdapter = New OracleDataAdapter(mySelectText, myConnectionText )   
    Dim myOracleConnection As OracleConnection = custDA.SelectCommand.Connection  
  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey     
  
    custDA.InsertCommand = New OracleCommand("INSERT INTO Dept (DeptNo, DName) " & _  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection)  
    custDA.UpdateCommand = New OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " & _  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection)  
    custDA.DeleteCommand = New OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection)  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName")  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original  
End Sub  
```  
  
```csharp  
public static void CreateOracleDataAdapter()   
{  
    string myConnectionText = "Data Source=Oracle8i;Integrated Security=yes";  
  
    string mySelectText = "SELECT DeptNo, DName FROM Dept";  
  
    OracleDataAdapter custDA = new OracleDataAdapter(mySelectText, myConnectionText );  
   OracleConnection myOracleConnection = custDA.SelectCommand.Connection;  
  
    custDA.MissingSchemaAction = MissingSchemaAction.AddWithKey;  
  
    custDA.InsertCommand = new OracleCommand("INSERT INTO Dept (DeptNo, DName) " +  
                                            "VALUES (:pDeptNo, :pDName)", myOracleConnection);  
    custDA.UpdateCommand = new OracleCommand("UPDATE Dept SET DeptNo = :pDeptNo, DName = :pDName " +  
                                            "WHERE DeptNo = :pDeptNo", myOracleConnection);  
    custDA.DeleteCommand = new OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", myOracleConnection);  
  
    custDA.InsertCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.InsertCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName");  
  
    custDA.UpdateCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
    custDA.UpdateCommand.Parameters.Add("pDName", OracleType.VarChar, 14, "DName");  
    custDA.UpdateCommand.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
  
    custDA.DeleteCommand.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo").SourceVersion = DataRowVersion.Original;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="14d59-158">Pobieranie i modyfikowanie danych ADO.NET</span><span class="sxs-lookup"><span data-stu-id="14d59-158">Retrieving and Modifying Data in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected override int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="override this.AddToBatch : System.Data.IDbCommand -&gt; int" Usage="oracleDataAdapter.AddToBatch command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected override void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearBatch();" />
      <MemberSignature Language="F#" Value="override this.ClearBatch : unit -&gt; unit" Usage="oracleDataAdapter.ClearBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="oracleDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="oracleDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleCommand ^ DeleteCommand { System::Data::OracleClient::OracleCommand ^ get(); void set(System::Data::OracleClient::OracleCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.OracleClient.OracleCommand with get, set" Usage="System.Data.OracleClient.OracleDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14d59-159">Pobiera lub ustawia instrukcję SQL lub procedurę składowaną używaną do usuwania rekordów w bazie danych.</span><span class="sxs-lookup"><span data-stu-id="14d59-159">Gets or sets an SQL statement or stored procedure used to delete records in the database.</span></span></summary>
        <value><span data-ttu-id="14d59-160">Używane podczas operacji aktualizowania do usuwania rekordów w bazie danych, które odpowiadają usuniętym wierszom <see langword="DataSet" />w. <see cref="T:System.Data.OracleClient.OracleCommand" /></span><span class="sxs-lookup"><span data-stu-id="14d59-160">An <see cref="T:System.Data.OracleClient.OracleCommand" /> used during an update operation to delete records in the database that correspond to deleted rows in the <see langword="DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14d59-161">Gdy właściwość zostanie przypisana do wcześniej utworzonej <xref:System.Data.OracleClient.OracleCommand>, <xref:System.Data.OracleClient.OracleCommand> nie jest klonowana. <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A></span><span class="sxs-lookup"><span data-stu-id="14d59-161">When the <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> property is assigned to a previously created <xref:System.Data.OracleClient.OracleCommand>, the <xref:System.Data.OracleClient.OracleCommand> is not cloned.</span></span> <span data-ttu-id="14d59-162">Zamiast tego, <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> utrzymuje odwołanie do wcześniej utworzonego <xref:System.Data.OracleClient.OracleCommand>elementu.</span><span class="sxs-lookup"><span data-stu-id="14d59-162">Instead, the <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
 <span data-ttu-id="14d59-163">W trakcie operacji aktualizacji, jeśli <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> nie jest ustawiona, a w elemencie są obecne informacje o kluczu <xref:System.Data.OracleClient.OracleCommandBuilder> podstawowym ,możnaużyćklasy,abyautomatyczniewygenerować<xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A>i dodatkowe polecenia potrzebne do uzgodnienia <xref:System.Data.DataSet> <xref:System.Data.DataSet>do bazy danych programu.</span><span class="sxs-lookup"><span data-stu-id="14d59-163">During an update operation, if <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> is not set and primary key information is present in the <xref:System.Data.DataSet>, you can use the <xref:System.Data.OracleClient.OracleCommandBuilder> class to automatically generate the <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A>, and additional commands needed to reconcile the <xref:System.Data.DataSet> to the database.</span></span> <span data-ttu-id="14d59-164">W tym celu należy ustawić <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> właściwość. <xref:System.Data.OracleClient.OracleDataAdapter></span><span class="sxs-lookup"><span data-stu-id="14d59-164">To do this, set the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> property of the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span> <span data-ttu-id="14d59-165">Logika generowania wymaga również, <xref:System.Data.DataSet>aby informacje o kolumnie klucza znajdowały się w.</span><span class="sxs-lookup"><span data-stu-id="14d59-165">The generation logic also requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="14d59-166">Aby uzyskać więcej informacji, zobacz [Generowanie poleceń z CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="14d59-166">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14d59-167">Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleDataAdapter> i <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> ustawia właściwości i <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> .</span><span class="sxs-lookup"><span data-stu-id="14d59-167">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> and <xref:System.Data.OracleClient.OracleDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="14d59-168">Przyjęto założenie, że <xref:System.Data.OracleClient.OracleConnection> obiekt został już utworzony.</span><span class="sxs-lookup"><span data-stu-id="14d59-168">It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.</span></span>  
  
```vb  
Public Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   
  
  Dim da As OracleDataAdapter = New OracleDataAdapter()  
  Dim cmd As OracleCommand  
  Dim parm As OracleParameter  
  
  ' Create the SelectCommand.  
  
  cmd = New OracleCommand("SELECT * FROM Dept " & _  
                       "WHERE DName = :pDName AND Loc = :pLoc", conn)  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14)  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13)  
  
  da.SelectCommand = cmd  
  
  ' Create the DeleteCommand.  
  
  cmd = New OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", conn)  
  
  parm = cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
  parm.SourceVersion = DataRowVersion.Original  
  
  da.DeleteCommand = cmd  
  
  Return da  
End Function  
```  
  
```csharp  
public static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  
{  
  OracleDataAdapter da = new OracleDataAdapter();  
  OracleCommand cmd;  
  OracleParameter parm;  
  
  // Create the SelectCommand.  
  
  cmd = new OracleCommand("SELECT * FROM Dept " +  
                       "WHERE DName = :pDName AND Loc = :pLoc", conn);  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14);  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13);  
  
  da.SelectCommand = cmd;  
  
  // Create the DeleteCommand.  
  
  cmd = new OracleCommand("DELETE FROM Dept WHERE DeptNo = :pDeptNo", conn);  
  
  parm = cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
  parm.SourceVersion = DataRowVersion.Original;  
  
  da.DeleteCommand = cmd;  
  
  return da;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="14d59-169">Pobieranie i modyfikowanie danych ADO.NET</span><span class="sxs-lookup"><span data-stu-id="14d59-169">Retrieving and Modifying Data in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected override int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteBatch();" />
      <MemberSignature Language="F#" Value="override this.ExecuteBatch : unit -&gt; int" Usage="oracleDataAdapter.ExecuteBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBatchedParameter : int * int -&gt; System.Data.IDataParameter" Usage="oracleDataAdapter.GetBatchedParameter (commandIdentifier, parameterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parameterIndex" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">To be added.</param>
        <param name="parameterIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected override bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberSignature Language="F#" Value="override this.GetBatchedRecordsAffected : int *  *  -&gt; bool" Usage="oracleDataAdapter.GetBatchedRecordsAffected (commandIdentifier, recordsAffected, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="recordsAffected" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="error" Type="System.Exception" RefType="out" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">To be added.</param>
        <param name="recordsAffected">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected override void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeBatching();" />
      <MemberSignature Language="F#" Value="override this.InitializeBatching : unit -&gt; unit" Usage="oracleDataAdapter.InitializeBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleCommand ^ InsertCommand { System::Data::OracleClient::OracleCommand ^ get(); void set(System::Data::OracleClient::OracleCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.OracleClient.OracleCommand with get, set" Usage="System.Data.OracleClient.OracleDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14d59-170">Pobiera lub ustawia instrukcję SQL lub procedurę składowaną używaną do wstawiania nowych rekordów do bazy danych.</span><span class="sxs-lookup"><span data-stu-id="14d59-170">Gets or sets an SQL statement or stored procedure used to insert new records into the database.</span></span></summary>
        <value><span data-ttu-id="14d59-171">Używane podczas operacji aktualizowania do wstawiania rekordów w bazie danych, które odpowiadają nowym wierszom <see cref="T:System.Data.DataSet" />w. <see cref="T:System.Data.OracleClient.OracleCommand" /></span><span class="sxs-lookup"><span data-stu-id="14d59-171">An <see cref="T:System.Data.OracleClient.OracleCommand" /> used during an update operation to insert records in the database that correspond to new rows in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14d59-172">Gdy właściwość jest przypisana do wcześniej utworzonego <xref:System.Data.OracleClient.OracleCommand> obiektu, <xref:System.Data.OracleClient.OracleCommand> nie jest sklonowany. <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A></span><span class="sxs-lookup"><span data-stu-id="14d59-172">When the <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> property is assigned to a previously created <xref:System.Data.OracleClient.OracleCommand> object, the <xref:System.Data.OracleClient.OracleCommand> is not cloned.</span></span> <span data-ttu-id="14d59-173">Zamiast tego <xref:System.Data.OracleClient.OracleCommand>zachowuje odwołanie do wcześniej utworzonego elementu. <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A></span><span class="sxs-lookup"><span data-stu-id="14d59-173">Instead, <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.OracleClient.OracleCommand>.</span></span>  
  
 <span data-ttu-id="14d59-174">W trakcie operacji aktualizacji, jeśli <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> nie jest ustawiona, a <xref:System.Data.DataSet>w elemencie są obecne informacje o kluczu podstawowym <xref:System.Data.OracleClient.OracleCommandBuilder> , można użyć klasy do automatycznego <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>generowania, a dodatkowe polecenia potrzebne do uzgodnienia <xref:System.Data.DataSet> do bazy danych programu.</span><span class="sxs-lookup"><span data-stu-id="14d59-174">During an update operation, if <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> is not set and primary key information is present in the <xref:System.Data.DataSet>, you can use the <xref:System.Data.OracleClient.OracleCommandBuilder> class to automatically generate <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>, and additional commands needed to reconcile the <xref:System.Data.DataSet> to the database.</span></span> <span data-ttu-id="14d59-175">W tym celu należy ustawić <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> właściwość. <xref:System.Data.OracleClient.OracleDataAdapter></span><span class="sxs-lookup"><span data-stu-id="14d59-175">To do this, set the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> property of the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span> <span data-ttu-id="14d59-176">Logika generowania wymaga również, <xref:System.Data.DataSet>aby informacje o kolumnie klucza znajdowały się w.</span><span class="sxs-lookup"><span data-stu-id="14d59-176">The generation logic also requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="14d59-177">Aby uzyskać więcej informacji, zobacz [Generowanie poleceń z CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="14d59-177">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="14d59-178">Jeśli wykonanie tego polecenia zwraca wiersze, te wiersze mogą zostać dodane do w <xref:System.Data.DataSet> zależności od sposobu <xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A> ustawienia właściwości <xref:System.Data.OracleClient.OracleCommand> obiektu.</span><span class="sxs-lookup"><span data-stu-id="14d59-178">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending upon how you set the <xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A> property of the <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="14d59-179">Podczas aktualizowania kolumny z `LONG RAW` typem danych wyjątek jest zgłaszany po wprowadzeniu `NULL` wartości w kolumnie.</span><span class="sxs-lookup"><span data-stu-id="14d59-179">When you update a column with the `LONG RAW` data type, an exception is thrown when you enter a value of `NULL` in the column.</span></span> <span data-ttu-id="14d59-180">Typ danych `LONG RAW` Oracle jest typem przestarzałym w programie Oracle w wersji 8,0.</span><span class="sxs-lookup"><span data-stu-id="14d59-180">The Oracle `LONG RAW` data type is a deprecated type in Oracle version 8.0.</span></span> <span data-ttu-id="14d59-181">Aby uniknąć tego błędu, użyj `BLOB` typu danych `LONG RAW`zamiast.</span><span class="sxs-lookup"><span data-stu-id="14d59-181">To avoid this error, use the `BLOB` data type instead of `LONG RAW`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14d59-182">Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleDataAdapter> i <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> ustawia właściwości i <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> .</span><span class="sxs-lookup"><span data-stu-id="14d59-182">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> and <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="14d59-183">Przyjęto założenie, że <xref:System.Data.OracleClient.OracleConnection> obiekt został już utworzony.</span><span class="sxs-lookup"><span data-stu-id="14d59-183">It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.</span></span>  
  
```vb  
Public Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   
  
  Dim da As OracleDataAdapter = New OracleDataAdapter()  
  Dim cmd As OracleCommand  
  
  ' Create the SelectCommand.  
  
  cmd = New OracleCommand("SELECT * FROM Dept " & _  
                       "WHERE DName = :pDName AND Loc = :pLoc", conn)  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14)  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13)  
  
  da.SelectCommand = cmd  
  
  ' Create the InsertCommand.  
  
  cmd = New OracleCommand("INSERT INTO Dept (DeptNo, DName) " & _  
                       "VALUES (:pDeptNo, :pDName)", conn)  
  
  cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14, "DName")  
  
  da.InsertCommand = cmd  
  
  Return da  
End Function  
```  
  
```csharp  
public static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  
{  
  OracleDataAdapter da = new OracleDataAdapter();  
  OracleCommand cmd;  
  
  // Create the SelectCommand.  
  
  cmd = new OracleCommand("SELECT * FROM Dept " +  
                       "WHERE DName = :pDName AND Loc = :pLoc", conn);  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14);  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13);  
  
  da.SelectCommand = cmd;  
  
  // Create the InsertCommand.  
  
  cmd = new OracleCommand("INSERT INTO Dept (DeptNo, DName) " +  
                       "VALUES (:pDeptNo, :pDName)", conn);  
  
  cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14, "DName");  
  
  da.InsertCommand = cmd;  
  
  return da;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="14d59-184">Pobieranie i modyfikowanie danych ADO.NET</span><span class="sxs-lookup"><span data-stu-id="14d59-184">Retrieving and Modifying Data in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="oracleDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="oracleDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.OracleClient.OracleRowUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OracleClient.OracleRowUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Data.OracleClient.OracleDataAdapter.RowUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdated As OracleRowUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OracleClient::OracleRowUpdatedEventHandler ^ RowUpdated;" />
      <MemberSignature Language="F#" Value="member this.RowUpdated : System.Data.OracleClient.OracleRowUpdatedEventHandler " Usage="member this.RowUpdated : System.Data.OracleClient.OracleRowUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14d59-185">Występuje podczas operacji aktualizacji po wykonaniu polecenia względem bazy danych.</span><span class="sxs-lookup"><span data-stu-id="14d59-185">Occurs during an update operation after a command is executed against the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14d59-186">W przypadku korzystania `Update` z metody istnieją dwa zdarzenia, które występują dla każdego wiersza danych.</span><span class="sxs-lookup"><span data-stu-id="14d59-186">When using the `Update` method, there are two events that occur per data row updated.</span></span> <span data-ttu-id="14d59-187">Kolejność wykonywania jest następująca:</span><span class="sxs-lookup"><span data-stu-id="14d59-187">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="14d59-188">Wartości z <xref:System.Data.DataRow> są przenoszone do wartości parametrów.</span><span class="sxs-lookup"><span data-stu-id="14d59-188">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="14d59-189">`OnRowUpdating` Zdarzenie jest zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="14d59-189">The `OnRowUpdating` event is raised.</span></span>  
  
3.  <span data-ttu-id="14d59-190">Wykonuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="14d59-190">The command executes.</span></span>  
  
4.  <span data-ttu-id="14d59-191">Jeśli Wyliczenie jest ustawione na `FirstReturnedRecord`, pierwszy zwrócony wynik jest umieszczany w elemencie **DataRow.** `UpdateRowSource`</span><span class="sxs-lookup"><span data-stu-id="14d59-191">If the `UpdateRowSource` enumeration is set to `FirstReturnedRecord`, the first returned result is placed in the **DataRow**.</span></span>  
  
5.  <span data-ttu-id="14d59-192">Jeśli istnieją parametry wyjściowe, są one umieszczane w elemencie **DataRow**.</span><span class="sxs-lookup"><span data-stu-id="14d59-192">If there are output parameters, they are placed in the **DataRow**.</span></span>  
  
6.  <span data-ttu-id="14d59-193">`OnRowUpdated` Zdarzenie jest zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="14d59-193">The `OnRowUpdated` event is raised.</span></span>  
  
7.  <span data-ttu-id="14d59-194">`AcceptChanges`jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="14d59-194">`AcceptChanges` is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.OracleClient.OracleRowUpdatingEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OracleClient.OracleRowUpdatingEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Data.OracleClient.OracleDataAdapter.RowUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowUpdating As OracleRowUpdatingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OracleClient::OracleRowUpdatingEventHandler ^ RowUpdating;" />
      <MemberSignature Language="F#" Value="member this.RowUpdating : System.Data.OracleClient.OracleRowUpdatingEventHandler " Usage="member this.RowUpdating : System.Data.OracleClient.OracleRowUpdatingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14d59-195">Występuje podczas <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> przed wykonaniem polecenia względem źródła danych.</span><span class="sxs-lookup"><span data-stu-id="14d59-195">Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14d59-196">W przypadku korzystania `Update` z metody istnieją dwa zdarzenia, które występują dla każdego wiersza danych.</span><span class="sxs-lookup"><span data-stu-id="14d59-196">When using the `Update` method, there are two events that occur per data row updated.</span></span> <span data-ttu-id="14d59-197">Kolejność wykonywania jest następująca:</span><span class="sxs-lookup"><span data-stu-id="14d59-197">The order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="14d59-198">Wartości z <xref:System.Data.DataRow> są przenoszone do wartości parametrów.</span><span class="sxs-lookup"><span data-stu-id="14d59-198">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="14d59-199">`OnRowUpdating` Zdarzenie jest zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="14d59-199">The `OnRowUpdating` event is raised.</span></span>  
  
3.  <span data-ttu-id="14d59-200">Wykonuje polecenie.</span><span class="sxs-lookup"><span data-stu-id="14d59-200">The command executes.</span></span>  
  
4.  <span data-ttu-id="14d59-201">Jeśli Wyliczenie jest ustawione na `FirstReturnedRecord`, pierwszy zwrócony wynik jest umieszczany w elemencie **DataRow.** `UpdateRowSource`</span><span class="sxs-lookup"><span data-stu-id="14d59-201">If the `UpdateRowSource` enumeration is set to `FirstReturnedRecord`, the first returned result is placed in the **DataRow**.</span></span>  
  
5.  <span data-ttu-id="14d59-202">Jeśli istnieją parametry wyjściowe, są one umieszczane w elemencie **DataRow**.</span><span class="sxs-lookup"><span data-stu-id="14d59-202">If there are output parameters, they are placed in the **DataRow**.</span></span>  
  
6.  <span data-ttu-id="14d59-203">`OnRowUpdated` Zdarzenie jest zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="14d59-203">The `OnRowUpdated` event is raised.</span></span>  
  
7.  <span data-ttu-id="14d59-204">`AcceptChanges`jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="14d59-204">`AcceptChanges` is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleCommand ^ SelectCommand { System::Data::OracleClient::OracleCommand ^ get(); void set(System::Data::OracleClient::OracleCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.OracleClient.OracleCommand with get, set" Usage="System.Data.OracleClient.OracleDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14d59-205">Pobiera lub ustawia instrukcję SQL lub procedurę składowaną używaną do wybierania rekordów w bazie danych.</span><span class="sxs-lookup"><span data-stu-id="14d59-205">Gets or sets an SQL statement or stored procedure used to select records in the database.</span></span></summary>
        <value><span data-ttu-id="14d59-206">Który jest używany podczas operacji wypełniania do wybierania rekordów z bazy danych do umieszczania <see cref="T:System.Data.DataSet" />w. <see cref="T:System.Data.OracleClient.OracleCommand" /></span><span class="sxs-lookup"><span data-stu-id="14d59-206">An <see cref="T:System.Data.OracleClient.OracleCommand" /> that is used during a fill operation to select records from database for placement in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14d59-207">Gdy <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> jest przypisany do wcześniej utworzonego <xref:System.Data.OracleClient.OracleCommand>elementu, <xref:System.Data.OracleClient.OracleCommand> nie jest sklonowany.</span><span class="sxs-lookup"><span data-stu-id="14d59-207">When <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.OracleClient.OracleCommand>, the <xref:System.Data.OracleClient.OracleCommand> is not cloned.</span></span> <span data-ttu-id="14d59-208">Zamiast tego, <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> utrzymuje odwołanie do wcześniej utworzonego <xref:System.Data.OracleClient.OracleCommand> obiektu.</span><span class="sxs-lookup"><span data-stu-id="14d59-208">Instead, the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="14d59-209">Jeśli <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> nie zwróci żadnych wierszy, żadne tabele nie są dodawane do **zestawu danych**i żaden wyjątek nie zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="14d59-209">If <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the **DataSet**, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14d59-210">Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleDataAdapter> i <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> ustawia właściwości i <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> .</span><span class="sxs-lookup"><span data-stu-id="14d59-210">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> and <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="14d59-211">Przyjęto założenie, że <xref:System.Data.OracleClient.OracleConnection> obiekt został już utworzony.</span><span class="sxs-lookup"><span data-stu-id="14d59-211">It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.</span></span>  
  
```vb  
Public Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   
  
  Dim da As OracleDataAdapter = New OracleDataAdapter()  
  Dim cmd As OracleCommand  
  
  ' Create the SelectCommand.  
  
  cmd = New OracleCommand("SELECT * FROM Dept " & _  
                       "WHERE DName = :pDName AND Loc = :pLoc", conn)  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14)  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13)  
  
  da.SelectCommand = cmd  
  
  ' Create the InsertCommand.  
  
  cmd = New OracleCommand("INSERT INTO Dept (DeptNo, DName) " & _  
                       "VALUES (pDeptNo, pDName)", conn)  
  
  cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14, "DName")  
  
  da.InsertCommand = cmd  
  
  Return da  
End Function  
```  
  
```csharp  
public static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  
{  
  OracleDataAdapter da = new OracleDataAdapter();  
  OracleCommand cmd;  
  
  // Create the SelectCommand.  
  
  cmd = new OracleCommand("SELECT * FROM Dept " +  
                       "WHERE DName = :pDName AND Loc = :pLoc", conn);  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14);  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13);  
  
  da.SelectCommand = cmd;  
  
  // Create the InsertCommand.  
  
  cmd = new OracleCommand("INSERT INTO Dept (DeptNo, DName) " +  
                       "VALUES (:pDeptNo, :pDName)", conn);  
  
  cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14, "DName");  
  
  da.InsertCommand = cmd;  
  
  return da;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="14d59-212">Pobieranie i modyfikowanie danych ADO.NET</span><span class="sxs-lookup"><span data-stu-id="14d59-212">Retrieving and Modifying Data in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14d59-213">Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Data.IDbDataAdapter.DeleteCommand" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="14d59-213">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.DeleteCommand" />.</span></span></summary>
        <value><span data-ttu-id="14d59-214">Ciąg reprezentujący polecenie.</span><span class="sxs-lookup"><span data-stu-id="14d59-214">A string representing the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14d59-215">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="14d59-215">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="14d59-216">Może być używana tylko wtedy, <xref:System.Data.OracleClient.OracleDataAdapter> gdy wystąpienie jest rzutowane <xref:System.Data.IDbDataAdapter> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="14d59-216">It can be used only when the <xref:System.Data.OracleClient.OracleDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14d59-217">Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Data.IDbDataAdapter.InsertCommand" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="14d59-217">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.InsertCommand" />.</span></span></summary>
        <value><span data-ttu-id="14d59-218">Ciąg reprezentujący polecenie.</span><span class="sxs-lookup"><span data-stu-id="14d59-218">A string representing the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14d59-219">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="14d59-219">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="14d59-220">Może być używana tylko wtedy, <xref:System.Data.OracleClient.OracleDataAdapter> gdy wystąpienie jest rzutowane <xref:System.Data.IDbDataAdapter> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="14d59-220">It can be used only when the <xref:System.Data.OracleClient.OracleDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14d59-221">Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Data.IDbDataAdapter.SelectCommand" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="14d59-221">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.SelectCommand" />.</span></span></summary>
        <value><span data-ttu-id="14d59-222">Ciąg reprezentujący polecenie.</span><span class="sxs-lookup"><span data-stu-id="14d59-222">A string representing the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14d59-223">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="14d59-223">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="14d59-224">Może być używana tylko wtedy, <xref:System.Data.OracleClient.OracleDataAdapter> gdy wystąpienie jest rzutowane <xref:System.Data.IDbDataAdapter> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="14d59-224">It can be used only when the <xref:System.Data.OracleClient.OracleDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14d59-225">Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Data.IDbDataAdapter.UpdateCommand" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="14d59-225">For a description of this member, see <see cref="P:System.Data.IDbDataAdapter.UpdateCommand" />.</span></span></summary>
        <value><span data-ttu-id="14d59-226">Ciąg reprezentujący polecenie.</span><span class="sxs-lookup"><span data-stu-id="14d59-226">A string representing the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14d59-227">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="14d59-227">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="14d59-228">Może być używana tylko wtedy, <xref:System.Data.OracleClient.OracleDataAdapter> gdy wystąpienie jest rzutowane <xref:System.Data.IDbDataAdapter> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="14d59-228">It can be used only when the <xref:System.Data.OracleClient.OracleDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="14d59-229">Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.ICloneable.Clone" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="14d59-229">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span></span></summary>
        <returns><span data-ttu-id="14d59-230">Nowy obiekt będący kopią tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="14d59-230">A new object that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14d59-231">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="14d59-231">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="14d59-232">Może być używana tylko wtedy, <xref:System.Data.OracleClient.OracleDataAdapter> gdy wystąpienie jest rzutowane <xref:System.ICloneable> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="14d59-232">It can be used only when the <xref:System.Data.OracleClient.OracleDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected override void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TerminateBatching();" />
      <MemberSignature Language="F#" Value="override this.TerminateBatching : unit -&gt; unit" Usage="oracleDataAdapter.TerminateBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public override int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateBatchSize : int with get, set" Usage="System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14d59-233">Pobiera lub ustawia wartość, która włącza lub wyłącza obsługę przetwarzania wsadowego, oraz określa liczbę poleceń, które mogą być wykonywane w partii.</span><span class="sxs-lookup"><span data-stu-id="14d59-233">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span></span></summary>
        <value><span data-ttu-id="14d59-234">Liczba wierszy do przetworzenia na partię.</span><span class="sxs-lookup"><span data-stu-id="14d59-234">The number of rows to process per batch.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="14d59-235">Wartościami</span><span class="sxs-lookup"><span data-stu-id="14d59-235">Value:</span></span> 
 </term><description> <span data-ttu-id="14d59-236">Skuteczność</span><span class="sxs-lookup"><span data-stu-id="14d59-236">Effect:</span></span> 
 </description></listheader><item><term> <span data-ttu-id="14d59-237">0</span><span class="sxs-lookup"><span data-stu-id="14d59-237">0</span></span> 
 </term><description> <span data-ttu-id="14d59-238">Nie ma żadnego limitu rozmiaru partii.</span><span class="sxs-lookup"><span data-stu-id="14d59-238">There is no limit on the batch size.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="14d59-239">1</span><span class="sxs-lookup"><span data-stu-id="14d59-239">1</span></span> 
 </term><description> <span data-ttu-id="14d59-240">Wyłącza aktualizowanie wsadowe.</span><span class="sxs-lookup"><span data-stu-id="14d59-240">Disables batch updating.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="14d59-241">&gt; 1</span><span class="sxs-lookup"><span data-stu-id="14d59-241">&gt; 1</span></span> 
 </term><description> <span data-ttu-id="14d59-242">Zmiany są wysyłane przy użyciu partii <see cref="P:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize" /> operacji jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="14d59-242">Changes are sent using batches of <see cref="P:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize" /> operations at a time.</span></span>  
  
 </description></item></list>  

 <span data-ttu-id="14d59-243">Po ustawieniu tej opcji na wartość inną niż 1 wszystkie polecenia skojarzone z <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> programem muszą <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> mieć ustawioną <see langword="None" /> właściwość lub <see langword="OutputParameters" />.</span><span class="sxs-lookup"><span data-stu-id="14d59-243">When setting this to a value other than 1 all the commands associated with the <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> have to have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to <see langword="None" /> or <see langword="OutputParameters" />.</span></span> <span data-ttu-id="14d59-244">Wyjątek jest zgłaszany w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="14d59-244">An exception is thrown otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14d59-245">Użyj właściwości <xref:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize%2A> , aby zaktualizować źródło danych ze zmianami <xref:System.Data.DataSet>z.</span><span class="sxs-lookup"><span data-stu-id="14d59-245">Use the <xref:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="14d59-246">Może to zwiększyć wydajność aplikacji przez zredukowanie liczby operacji rundy do serwera.</span><span class="sxs-lookup"><span data-stu-id="14d59-246">This can increase application performance by reducing the number of round-trips to the server.</span></span>  
  
 <span data-ttu-id="14d59-247">Wykonanie bardzo dużej partii może obniżyć wydajność.</span><span class="sxs-lookup"><span data-stu-id="14d59-247">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="14d59-248">W związku z tym należy przetestować ustawienie optymalnego rozmiaru partii przed zaimplementowaniem aplikacji.</span><span class="sxs-lookup"><span data-stu-id="14d59-248">Therefore, you should test for the optimum batch size setting before you implement your application.</span></span>  
  
 <span data-ttu-id="14d59-249"><xref:System.ArgumentOutOfRangeException> Jest zgłaszany, jeśli wartość jest równa liczbie mniejszej od zera.</span><span class="sxs-lookup"><span data-stu-id="14d59-249">An <xref:System.ArgumentOutOfRangeException> is thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="14d59-250">Pobieranie i modyfikowanie danych ADO.NET</span><span class="sxs-lookup"><span data-stu-id="14d59-250">Retrieving and Modifying Data in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleCommand ^ UpdateCommand { System::Data::OracleClient::OracleCommand ^ get(); void set(System::Data::OracleClient::OracleCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.OracleClient.OracleCommand with get, set" Usage="System.Data.OracleClient.OracleDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="14d59-251">Pobiera lub ustawia instrukcję SQL lub procedurę składowaną używaną do aktualizowania rekordów w bazie danych.</span><span class="sxs-lookup"><span data-stu-id="14d59-251">Gets or sets an SQL statement or stored procedure used to update records in the database.</span></span></summary>
        <value><span data-ttu-id="14d59-252">Używane podczas operacji aktualizowania do aktualizowania rekordów w bazie danych, które odpowiadają zmodyfikowanym wierszom <see cref="T:System.Data.DataSet" />w. <see cref="T:System.Data.OracleClient.OracleCommand" /></span><span class="sxs-lookup"><span data-stu-id="14d59-252">An <see cref="T:System.Data.OracleClient.OracleCommand" /> used during an update operation to update records in the database that correspond to modified rows in the <see cref="T:System.Data.DataSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14d59-253">Gdy <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> jest przypisany do wcześniej utworzonego <xref:System.Data.OracleClient.OracleCommand>elementu, <xref:System.Data.OracleClient.OracleCommand> nie jest sklonowany.</span><span class="sxs-lookup"><span data-stu-id="14d59-253">When <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.OracleClient.OracleCommand>, the <xref:System.Data.OracleClient.OracleCommand> is not cloned.</span></span> <span data-ttu-id="14d59-254">Zamiast tego, <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> utrzymuje odwołanie do wcześniej utworzonego <xref:System.Data.OracleClient.OracleCommand> obiektu.</span><span class="sxs-lookup"><span data-stu-id="14d59-254">Instead, the <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="14d59-255">W trakcie operacji aktualizacji, jeśli <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> nie jest ustawiona, a informacje o kluczu podstawowym są obecne w **zestawie danych**, można <xref:System.Data.OracleClient.OracleCommandBuilder> użyć klasy do automatycznego <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>generowania, a dodatkowe polecenia potrzebne do uzgodnienia <xref:System.Data.DataSet>do bazy danych programu.</span><span class="sxs-lookup"><span data-stu-id="14d59-255">During an update operation, if <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A> is not set and primary key information is present in the **DataSet**, you can use the <xref:System.Data.OracleClient.OracleCommandBuilder> class to automatically generate <xref:System.Data.OracleClient.OracleDataAdapter.InsertCommand%2A>, and additional commands needed to reconcile the <xref:System.Data.DataSet> to the database.</span></span> <span data-ttu-id="14d59-256">W tym celu należy ustawić <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> właściwość. <xref:System.Data.OracleClient.OracleDataAdapter></span><span class="sxs-lookup"><span data-stu-id="14d59-256">To do this, set the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> property of the <xref:System.Data.OracleClient.OracleDataAdapter>.</span></span> <span data-ttu-id="14d59-257">Logika generowania wymaga również, <xref:System.Data.DataSet>aby informacje o kolumnie klucza znajdowały się w.</span><span class="sxs-lookup"><span data-stu-id="14d59-257">The generation logic also requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="14d59-258">Aby uzyskać więcej informacji, zobacz [Generowanie poleceń z CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="14d59-258">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="14d59-259">Jeśli wykonanie tego polecenia zwraca wiersze, te wiersze mogą zostać scalone z w <xref:System.Data.DataSet> zależności od sposobu <xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A> ustawienia właściwości <xref:System.Data.OracleClient.OracleCommand> obiektu.</span><span class="sxs-lookup"><span data-stu-id="14d59-259">If execution of this command returns rows, these rows may be merged with the <xref:System.Data.DataSet> depending upon how you set the <xref:System.Data.OracleClient.OracleCommand.UpdatedRowSource%2A> property of the <xref:System.Data.OracleClient.OracleCommand> object.</span></span>  
  
 <span data-ttu-id="14d59-260">Podczas aktualizowania kolumny z `LONG RAW` typem danych wyjątek jest zgłaszany po wprowadzeniu `NULL` wartości w kolumnie.</span><span class="sxs-lookup"><span data-stu-id="14d59-260">When you update a column with the `LONG RAW` data type, an exception is thrown when you enter a value of `NULL` in the column.</span></span> <span data-ttu-id="14d59-261">Typ danych `LONG RAW` Oracle jest typem przestarzałym w programie Oracle w wersji 8,0.</span><span class="sxs-lookup"><span data-stu-id="14d59-261">The Oracle `LONG RAW` data type is a deprecated type in Oracle version 8.0.</span></span> <span data-ttu-id="14d59-262">Aby uniknąć tego błędu, użyj `BLOB` typu danych `LONG RAW`zamiast.</span><span class="sxs-lookup"><span data-stu-id="14d59-262">To avoid this error, use the `BLOB` data type instead of `LONG RAW`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14d59-263">Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleDataAdapter> i <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> ustawia właściwości i <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> .</span><span class="sxs-lookup"><span data-stu-id="14d59-263">The following example creates an <xref:System.Data.OracleClient.OracleDataAdapter> and sets the <xref:System.Data.OracleClient.OracleDataAdapter.SelectCommand%2A> and <xref:System.Data.OracleClient.OracleDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="14d59-264">Przyjęto założenie, że <xref:System.Data.OracleClient.OracleConnection> obiekt został już utworzony.</span><span class="sxs-lookup"><span data-stu-id="14d59-264">It assumes you have already created an <xref:System.Data.OracleClient.OracleConnection> object.</span></span>  
  
```vb  
Public Shared Function CreateCustomerAdapter(conn As OracleConnection) As OracleDataAdapter   
  
  Dim da As OracleDataAdapter = New OracleDataAdapter()  
  Dim cmd As OracleCommand  
  Dim parm As OracleParameter  
  
  ' Create the SelectCommand.  
  
  cmd = New OracleCommand("SELECT * FROM Dept " & _  
                       "WHERE DName = pDName AND Loc = pLoc", conn)  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14)  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13)  
  
  da.SelectCommand = cmd  
  
  ' Create the UpdateCommand.  
  
  cmd = New OracleCommand("UPDATE Dept SET DeptNo = pDeptNo, DName = pDName " & _  
                       "WHERE DeptNo = poldDeptNo", conn)  
  
  cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo")  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14, "DName")  
  
  parm = cmd.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo")  
  parm.SourceVersion = DataRowVersion.Original  
  
  da.UpdateCommand = cmd  
  
  Return da  
End Function  
```  
  
```csharp  
public static OracleDataAdapter CreateCustomerAdapter(OracleConnection conn)  
{  
  OracleDataAdapter da = new OracleDataAdapter();  
  OracleCommand cmd;  
  OracleParameter parm;  
  
  // Create the SelectCommand.  
  
  cmd = new OracleCommand("SELECT * FROM Dept " +  
                       "WHERE DName = pDName AND Loc = pLoc", conn);  
  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14);  
  cmd.Parameters.Add("pLoc", OracleType.NVarChar, 13);  
  
  da.SelectCommand = cmd;  
  
  // Create the UpdateCommand.  
  
  cmd = new OracleCommand("UPDATE Dept SET DeptNo = pDeptNo, DName = pDName " +  
                       "WHERE DeptNo = poldDeptNo", conn);  
  
  cmd.Parameters.Add("pDeptNo", OracleType.Number, 2, "DeptNo");  
  cmd.Parameters.Add("pDName", OracleType.NVarChar, 14, "DName");  
  
  parm = cmd.Parameters.Add("poldDeptNo", OracleType.Number, 2, "DeptNo");  
  parm.SourceVersion = DataRowVersion.Original;  
  
  da.UpdateCommand = cmd;  
  
  return da;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="14d59-265">Pobieranie i modyfikowanie danych ADO.NET</span><span class="sxs-lookup"><span data-stu-id="14d59-265">Retrieving and Modifying Data in ADO.NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
