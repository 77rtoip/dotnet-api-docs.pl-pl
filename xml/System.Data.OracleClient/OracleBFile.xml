<Type Name="OracleBFile" FullName="System.Data.OracleClient.OracleBFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="475bbf10f41e60d4bec591809354d21c2346bd54" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36684832" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleBFile extends System.IO.Stream implements class System.Data.SqlTypes.INullable, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleBFile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleBFile&#xA;Inherits Stream&#xA;Implements ICloneable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleBFile sealed : System::IO::Stream, ICloneable, System::Data::SqlTypes::INullable" />
  <TypeSignature Language="F#" Value="type OracleBFile = class&#xA;    inherit Stream&#xA;    interface ICloneable&#xA;    interface INullable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje zarządzanego <see cref="T:System.Data.OracleClient.OracleBFile" /> obiekt przeznaczony do pracy z bazą danych Oracle <see langword="BFILE" /> — typ danych. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oracle `BFILE` ma typ danych Oracle `LOB` typ danych, który zawiera odwołanie do danych binarnych o maksymalnym rozmiarze 4 gigabajty. Oracle `BFILE` różni się od innych Oracle `LOB` typy danych, ponieważ jego dane są przechowywane w pliku fizycznego w systemie operacyjnym, a nie na serwerze. Należy pamiętać, że `BFILE` — typ danych zapewnia dostęp do danych tylko do odczytu. W związku z tym zorientowane na zapis metody odziedziczone <xref:System.IO.Stream> klasy nie są obsługiwane.  
  
 Inne właściwości `BFILE` typ danych, który odróżniający go od `LOB` jego są — typ danych:  
  
-   Zawiera dane bez struktury.  
  
-   Obsługuje podziału po stronie serwera.  
  
-   Używa odwoływać się do kopiowania semantyki. Na przykład, jeśli operacja kopiowania na `BFILE`, tylko `BFILE` jest kopiowany Lokalizator (która jest odwołanie do pliku). Dane w pliku nie zostaną skopiowane.  
  
 `BFILE` Typ danych powinien być używany dla przywołującego `LOB`ma duże i w związku z tym praktycznych nie mają być przechowywane w bazie danych. Brak obciążenie klienta, serwera i komunikacji przy użyciu `BFILE` — typ danych w porównaniu do `LOB` — typ danych. Bardziej wydajny dostęp do `BFILE` Jeśli należy uzyskać niewielką ilość danych. Jest bardziej wydajne do dostępu do bazy danych rezydentne `LOB`s, jeśli trzeba uzyskać całego obiektu.  
  
 Każdy z systemem innym niż NULL <xref:System.Data.OracleClient.OracleBFile> obiekt jest skojarzony z dwoma obiektami, które określają lokalizację pliku fizycznego:  
  
-   Obiekt Oracle katalogu, który jest alias bazy danych dla katalogu w systemie plików, a  
  
-   Nazwa pliku źródłowego pliku fizycznego znajduje się w katalogu skojarzone z obiektu katalogu.  
  
 Po `BFILE` jest utworzony, można pobrać jego lokalizatora w formie <xref:System.Data.OracleClient.OracleBFile> przy użyciu <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> lub <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> metody.  
  
 Aby uzyskać <xref:System.Data.OracleClient.OracleBFile> obiekt, należy wywołać <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A> metody.  
  
 Pliku fizycznego <xref:System.Data.OracleClient.OracleBFile> obiekt jest skojarzony z nie musi istnieć do momentu próba do niego dostęp. Aplikację można powiązać <xref:System.Data.OracleClient.OracleBFile> do pliku nieistniejącą utworzenia pliku fizycznego w oczekiwanej lokalizacji, a następnie wywołać <xref:System.Data.OracleClient.OracleBFile.Read%2A>.  
  
 Próby uzyskania dostępu do zamkniętej <xref:System.Data.OracleClient.OracleBFile> przy użyciu <xref:System.Data.OracleClient.OracleBFile.Read%2A> lub <xref:System.Data.OracleClient.OracleBFile.Seek%2A> ponownie otwierane metody <xref:System.Data.OracleClient.OracleBFile> automatycznie strumienia.  
  
 W poniższym przykładzie C# pokazano, jak utworzyć `BFILE` w oprogramowaniu Oracle tabeli, a następnie pobrać go w formie <xref:System.Data.OracleClient.OracleBFile> obiektu. W przykładzie pokazano użycie <xref:System.Data.OracleClient.OracleDataReader> obiektu i <xref:System.Data.OracleClient.OracleBFile> <xref:System.Data.OracleClient.OracleBFile.Seek%2A> i <xref:System.Data.OracleClient.OracleBFile.Read%2A> metody.  
  
 [!code-csharp[DataWorks OracleClient.BFile#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks OracleClient.BFile/CS/source.cs#1)]  
  
 Aby uzyskać więcej informacji na temat tworzenia i używania programu Oracle `BFILE`, zobacz odpowiedni temat w dokumentacji programu Oracle.  
  
> [!NOTE]
>  `BeginWrite`, `EndWrite`, I `WriteByte` metody, które są dziedziczone z `System.IO.Stream` klasa, nie są obsługiwane, ponieważ `BFILE` — typ danych jest tylko do odczytu.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Data.OracleClient.OracleBFile.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see langword="BFILE" /> można odczytać strumienia.</summary>
        <value>
          <see langword="false" /> Jeśli <see langword="BFILE" /> jest zamknięty lub usunięty; w przeciwnym <see langword="true" />. Zawsze <see langword="true" /> dla <see cref="F:System.Data.OracleClient.OracleBFile.Null" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Data.OracleClient.OracleBFile.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy wyszukiwania do przodu i do tyłu — wyszukiwanie działań mogą być wykonywane.</summary>
        <value>
          <see langword="false" /> Jeśli <see langword="BFILE" /> jest zamknięty lub usunięty; w przeciwnym <see langword="true" />. Zawsze <see langword="true" /> dla <see cref="F:System.Data.OracleClient.OracleBFile.Null" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Data.OracleClient.OracleBFile.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy obiekt obsługuje zapisu.</summary>
        <value>Zawsze zwraca <see langword="false" /> ponieważ programu Oracle <see langword="BFILE" /> — typ danych jest tylko do odczytu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="oracleBFile.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię tego <see cref="T:System.Data.OracleClient.OracleBFile" /> obiekt skojarzony z tego samego pliku fizycznego co oryginalny.</summary>
        <returns>Nowy <see cref="T:System.Data.OracleClient.OracleBFile" /> obiekt skojarzony z tego samego pliku fizycznego jak oryginał <see langword="OracleBFile" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości nowego <xref:System.Data.OracleClient.OracleBFile> obiekt początkowo ma takie same wartości jak w przypadku oryginalnego obiektu. Jednak po <xref:System.Data.OracleClient.OracleBFile.Clone%2A> zostanie zakończone, w każdym <xref:System.Data.OracleClient.OracleBFile> obiekt jest niezależna od innych. Na przykład zmiana wartości <xref:System.Data.OracleClient.OracleBFile.Position%2A> właściwości w pierwotnej <xref:System.Data.OracleClient.OracleBFile> nie zmienia wartości <xref:System.Data.OracleClient.OracleBFile.Position%2A> na kopii.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.OracleClient.OracleConnection" Usage="System.Data.OracleClient.OracleBFile.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Data.OracleClient.OracleConnection" /> używane przez to wystąpienie elementu <see cref="T:System.Data.OracleClient.OracleBFile" />.</summary>
        <value>Połączenie ze źródłem danych. Wartość domyślna to wartość null.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Kopiuje dane z tego <see cref="T:System.Data.OracleClient.OracleBFile" /> do miejsca docelowego <see cref="T:System.Data.OracleClient.OracleLob" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.OracleClient.OracleLob -&gt; int64" Usage="oracleBFile.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
      </Parameters>
      <Docs>
        <param name="destination">Miejsce docelowe <see cref="T:System.Data.OracleClient.OracleLob" /></param>
        <summary>Kopiuje całą zawartość <see cref="T:System.Data.OracleClient.OracleBFile" /> na początku miejsca docelowego <see cref="T:System.Data.OracleClient.OracleLob" />.</summary>
        <returns>Liczba bajtów skopiowanych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podstawowe typy danych źródła <xref:System.Data.OracleClient.OracleBFile> i miejsce docelowe <xref:System.Data.OracleClient.OracleLob> muszą być zgodne. Na przykład nie można skopiować dane binarne do miejsca docelowego <xref:System.Data.OracleClient.OracleLob> mający typ danych znakowych.  
  
 Masz dostęp do zapisu do tego miejsca docelowego <xref:System.Data.OracleClient.OracleLob> dla <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> poprawnie wykonanie operacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Miejsce docelowe <see langword="OracleLob" /> jest odwołaniem do obiektu o wartości null.</exception>
        <exception cref="T:System.InvalidOperationException">Obiekt docelowy ma wartość null <see langword="OracleLob" />.  - lub - połączenia, z której ta <see langword="OracleBFile" /> skojarzony jest zamknięty.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see langword="OracleBFile" /> Obiekt jest zamknięty lub usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination, int64 destinationOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob, destinationOffset As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination, long destinationOffset);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.OracleClient.OracleLob * int64 -&gt; int64" Usage="oracleBFile.CopyTo (destination, destinationOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="destination">Miejsce docelowe <see cref="T:System.Data.OracleClient.OracleLob" />.</param>
        <param name="destinationOffset">Przesunięcie, do którego zostaną skopiowane.</param>
        <summary>Kopiuje całą zawartość <see cref="T:System.Data.OracleClient.OracleBFile" /> do miejsca docelowego <see cref="T:System.Data.OracleClient.OracleLob" /> od wskazanego przesunięcia.</summary>
        <returns>Liczba bajtów skopiowanych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podstawowe typy danych źródła <xref:System.Data.OracleClient.OracleBFile> i miejsce docelowe <xref:System.Data.OracleClient.OracleLob> muszą być zgodne. Na przykład nie można skopiować dane binarne do miejsca docelowego <xref:System.Data.OracleClient.OracleLob> mający typ danych znakowych.  
  
 Masz dostęp do zapisu do tego miejsca docelowego <xref:System.Data.OracleClient.OracleLob> dla <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> poprawnie wykonanie operacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Miejsce docelowe <see langword="OracleLob" /> jest odwołaniem do obiektu o wartości null.</exception>
        <exception cref="T:System.InvalidOperationException">Obiekt docelowy ma wartość null <see langword="OracleLob" />.  - lub - połączenia, z której ta <see langword="OracleBFile" /> skojarzony jest zamknięty.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see langword="OracleBFile" /> Obiekt jest zamknięty lub usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(int64 sourceOffset, class System.Data.OracleClient.OracleLob destination, int64 destinationOffset, int64 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (sourceOffset As Long, destination As OracleLob, destinationOffset As Long, amount As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(long sourceOffset, System::Data::OracleClient::OracleLob ^ destination, long destinationOffset, long amount);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : int64 * System.Data.OracleClient.OracleLob * int64 * int64 -&gt; int64" Usage="oracleBFile.CopyTo (sourceOffset, destination, destinationOffset, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceOffset" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
        <Parameter Name="amount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceOffset">Przesunięcie do skopiowania.</param>
        <param name="destination">Miejsce docelowe <see cref="T:System.Data.OracleClient.OracleLob" />.</param>
        <param name="destinationOffset">Przesunięcie, do którego zostaną skopiowane.</param>
        <param name="amount">Ilość danych w bajtach, aby skopiować.</param>
        <summary>Kopie z tej <see cref="T:System.Data.OracleClient.OracleBFile" /> do miejsca docelowego <see cref="T:System.Data.OracleClient.OracleLob" /> z określoną ilością danych, przesunięcie źródła i Przesunięcie docelowe.</summary>
        <returns>Liczba bajtów skopiowanych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podstawowe typy danych źródła <xref:System.Data.OracleClient.OracleBFile> i miejsce docelowe <xref:System.Data.OracleClient.OracleLob> muszą być zgodne. Na przykład nie można skopiować dane binarne do miejsca docelowego <xref:System.Data.OracleClient.OracleLob> mający typ danych znakowych.  
  
 Masz dostęp do zapisu do tego miejsca docelowego <xref:System.Data.OracleClient.OracleLob> dla <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> poprawnie wykonanie operacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Wartość parametru kwota jest mniejsza niż zero lub większa niż 4 GB.</exception>
        <exception cref="T:System.ArgumentNullException">Miejsce docelowe <see langword="OracleLob" /> jest odwołaniem do obiektu o wartości null.</exception>
        <exception cref="T:System.InvalidOperationException">Obiekt docelowy ma wartość null <see langword="OracleLob" />.  - lub - połączenia, z której ta <see langword="OracleBFile" /> skojarzony jest zamknięty.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see langword="OracleBFile" /> Obiekt jest zamknięty lub usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="DirectoryName">
      <MemberSignature Language="C#" Value="public string DirectoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.DirectoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryName : string" Usage="System.Data.OracleClient.OracleBFile.DirectoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę obiektu katalogu, z którym <see cref="T:System.Data.OracleClient.OracleBFile" /> obiekt jest skojarzony.</summary>
        <value>Nazwa obiektu katalogu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy z systemem innym niż NULL <xref:System.Data.OracleClient.OracleBFile> obiekt jest skojarzony z dwoma obiektami definiujące lokalizacji podstawowego pliku fizycznego:  
  
-   Obiekt Oracle katalogu, który jest alias bazy danych dla katalogu w systemie plików, a  
  
-   Nazwa pliku źródłowego pliku fizycznego znajduje się w katalogu skojarzone z obiektu katalogu.  
  
 <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> Właściwość zwraca nazwę obiektu katalogu z bazy danych programu Oracle.  
  
 Aby uzyskać więcej informacji na temat tworzenia i używania programu Oracle `BFILE`, zobacz odpowiedni temat w dokumentacji programu Oracle.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Nastąpiła próba wywołania <see langword="DirectoryName" /> na zamknięty lub usunięty <see langword="OracleBFile" /> obiektu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oracleBFile.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public bool FileExists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FileExists" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileExists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FileExists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.FileExists : bool" Usage="System.Data.OracleClient.OracleBFile.FileExists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy fizycznego pliku zawierającego <see langword="BFILE" /> danych istnieje w systemie operacyjnym.</summary>
        <value>
          <see langword="true" /> Jeśli fizycznego pliku zawierającego <see langword="BFILE" /> danych istnieje; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Data.OracleClient.OracleBFile" /> Obiekt jest zamknięty lub usunięty.</exception>
        <exception cref="T:System.InvalidOperationException">Połączenia, z którym <see langword="BFILE" /> jest skojarzona jest zamknięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Data.OracleClient.OracleBFile.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę <see langword="BFILE" /> bez ścieżki.</summary>
        <value>Nazwa BPLIK.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać <xref:System.Data.OracleClient.OracleBFile.Null>, zwracany jest pustym ciągiem.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Data.OracleClient.OracleBFile" /> Obiekt jest zamknięty lub usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="oracleBFile.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Nie są obecnie obsługiwane.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNull : bool" Usage="System.Data.OracleClient.OracleBFile.IsNull" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Data.OracleClient.OracleBFile" /> jest <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> strumienia.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Data.OracleClient.OracleBFile" /> jest <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> strumienia; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Data.OracleClient.OracleBFile.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która zwraca długość w bajtach pliku fizycznego, z którym <see cref="T:System.Data.OracleClient.OracleBFile" /> obiekt jest skojarzony.</summary>
        <value>Wartość typu long reprezentujący długość fizycznego pliku w bajtach.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Metody wywołane po strumień został zamknięty lub usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleBFile Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.OracleClient.OracleBFile Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleBFile.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleBFile " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleBFile ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.Data.OracleClient.OracleBFile" Usage="System.Data.OracleClient.OracleBFile.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje wartość null <see cref="T:System.Data.OracleClient.OracleBFile" /> obiekt, który nie jest powiązany z pliku fizycznego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.Null> mogą być przydatne, jeśli chcesz wykonać operacji porównywania w <xref:System.Data.OracleClient.OracleBFile> ustalenie dopuszczania wartości null.  
  
 Próby wykonania operacji odczytu na <xref:System.Data.OracleClient.OracleBFile.Null> obiekt zakończy się pomyślnie, ale nie zwrócił żadnych danych. Próby wykonania operacji zapisu na <xref:System.Data.OracleClient.OracleBFile.Null> obiektu generuje wyjątek. Wybieranie `BFILE` kolumny, która zawiera wartość null, zwraca <xref:System.Data.OracleClient.OracleBFile.Null>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Data.OracleClient.OracleBFile.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący odczytu pozycja w <see cref="T:System.Data.OracleClient.OracleBFile" /> strumienia.</summary>
        <value>Bieżąca pozycja w <see cref="T:System.Data.OracleClient.OracleBFile" /> strumienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyszukiwanie w dowolne miejsce powyżej długość strumienia nie jest obsługiwane.  
  
 `Position` Właściwości nie zachować śledzić liczbę bajtów ze strumienia, który zostały wykorzystane, zostało pominięte, lub obie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Podjęto próbę ustawienia pozycji z wartością ujemną lub większą niż długość strumienia.</exception>
        <exception cref="T:System.ObjectDisposedException">Metody wywołane po strumień został zamknięty lub usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="oracleBFile.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica bajtów. Po powrocie z tej metody bufor zawiera określonej tablicy bajtów z wartością pomiędzy <c>przesunięcie</c> i (<c>przesunięcie</c> + <c>liczba</c>) zastępuje bajtów odczytywane z bieżącego źródła.</param>
        <param name="offset">Zerze przesunięcie w <c>buforu</c> rozpoczęcia przechowywania danych przeczytanie z bieżącego strumienia.</param>
        <param name="count">Maksymalna liczba bajtów, które mają być odczytane z bieżącego strumienia.</param>
        <summary>Odczytuje sekwencję bajtów z bieżącego <see cref="T:System.Data.OracleClient.OracleBFile" /> strumienia i poprawę pozycji w strumieniu przez liczbę bajtów do odczytu.</summary>
        <returns>Całkowita liczba bajtów odczytanych w buforze. To może być mniejsza niż żądana liczba bajtów Jeśli czy wiele bajtów nie są obecnie dostępne, lub zero, jeśli został osiągnięty koniec pliku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.Read%2A> Metody odczytu maksymalnie `count` bajtów z bieżącego strumienia i przechowywać je w `buffer` począwszy od `offset`. Bieżącą pozycję w strumieniu jest zaawansowane przez liczbę bajtów odczytanych; Jednak jeśli wystąpi wyjątek, bieżącą pozycję w strumieniu nie jest zmieniany. <xref:System.Data.OracleClient.OracleBFile.Read%2A> Zwraca liczbę bajtów do odczytu. Zwracana wartość wynosi zero, tylko wtedy, gdy pozycja jest obecnie na koniec strumienia. <xref:System.Data.OracleClient.OracleBFile.Read%2A> blokuje dopóki co najmniej jednego bajtu danych mogą być odczytywane; w przypadku, gdy nie są dostępne żadne dane. <xref:System.Data.OracleClient.OracleBFile.Read%2A> Zwraca wartość 0, tylko wtedy, gdy zostanie osiągnięty koniec pliku. <xref:System.Data.OracleClient.OracleBFile.Read%2A> jest bezpłatna do zwrócenia mniej bajtów niż żądana, nawet jeżeli nie osiągnięto koniec strumienia.  
  
 Próby uzyskania dostępu do zamkniętej <xref:System.Data.OracleClient.OracleBFile> przy użyciu <xref:System.Data.OracleClient.OracleBFile.Read%2A> lub <xref:System.Data.OracleClient.OracleBFile.Seek%2A> ponownie otwierane metody <xref:System.Data.OracleClient.OracleBFile> automatycznie strumienia.  
  
 W poniższym przykładzie C# zakłada ten schemat tabeli Oracle:  
  
```  
(col1 number, col2 BFILE)  
```  
  
 W przykładzie pokazano, za pomocą <xref:System.Data.OracleClient.OracleBFile.Read%2A> i <xref:System.Data.OracleClient.OracleBFile.Seek%2A> metod dostępu do <xref:System.Data.OracleClient.OracleBFile> obiektu.  
  
```  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Suma <paramref name="offset" /> i <paramref name="count" /> jest większa niż długość buforu.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> lub <paramref name="count" /> jest ujemna.</exception>
        <exception cref="T:System.InvalidOperationException">Połączenia, z którym <see langword="BFILE" /> jest skojarzona jest zamknięty.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd we/wy.</exception>
        <exception cref="T:System.ObjectDisposedException">Metody wywołane po strumień został zamknięty lub usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="oracleBFile.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Przesunięcie bajtów, względem źródła. Jeśli <c>przesunięcie</c> jest ujemna, Nowa pozycja jest poprzedzony pozycja określona przez <c>pochodzenia</c> przez liczbę bajtów określona przez <c>przesunięcie</c>. Jeśli <c>przesunięcie</c> wynosi zero, nowe miejsce będzie pozycja określona przez <c>pochodzenia</c>. Jeśli <c>przesunięcie</c> jest dodatnia, nowe położenie zastosują się pozycja określona przez <c>pochodzenia</c> przez liczbę bajtów określona przez <c>przesunięcie</c>.</param>
        <param name="origin">Wartości typu <see langword="System.IO.SeekOrigin" /> wskazujący punkt odniesienia używany do uzyskania nowego położenia.</param>
        <summary>Ustawia położenie na bieżącej <see cref="T:System.Data.OracleClient.OracleBFile" /> strumienia.</summary>
        <returns>Nowa pozycja w ramach bieżącego strumienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `offset` jest ujemna, nowe miejsce wymagane do poprzedzać pozycja określona przez `origin` przez liczbę bajtów określona przez `offset`. Jeśli `offset` wynosi zero, nowe położenie jest musi być pozycja określona przez `origin`. Jeśli `offset` jest dodatnia, nowe położenie jest wymagana do wykonania pozycja określona przez `origin` przez liczbę bajtów określona przez `offset`.  
  
 Wyszukiwanie w dowolne miejsce powyżej długość strumienia nie jest obsługiwane.  
  
 Próby uzyskania dostępu do zamkniętej <xref:System.Data.OracleClient.OracleBFile> przy użyciu <xref:System.Data.OracleClient.OracleBFile.Read%2A> lub <xref:System.Data.OracleClient.OracleBFile.Seek%2A> ponownie otwierane metody <xref:System.Data.OracleClient.OracleBFile> automatycznie strumienia.  
  
 W poniższym przykładzie C# zakłada ten schemat tabeli Oracle:  
  
```  
(col1 number, col2 BFILE)  
```  
  
 W przykładzie pokazano, za pomocą <xref:System.Data.OracleClient.OracleBFile.Read%2A> i <xref:System.Data.OracleClient.OracleBFile.Seek%2A> metod dostępu do <xref:System.Data.OracleClient.OracleBFile> obiektu.  
  
```  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
            OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Podjęto próbę ustawienia pozycji z wartością ujemną lub większą niż długość strumienia.</exception>
        <exception cref="T:System.ObjectDisposedException">Metody wywołane po strumień został zamknięty lub usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetFileName">
      <MemberSignature Language="C#" Value="public void SetFileName (string directory, string file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFileName(string directory, string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFileName (directory As String, file As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFileName(System::String ^ directory, System::String ^ file);" />
      <MemberSignature Language="F#" Value="member this.SetFileName : string * string -&gt; unit" Usage="oracleBFile.SetFileName (directory, file)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory">Alias obiektu katalogu, który zawiera plik fizyczny.</param>
        <param name="file">Nazwa pliku w systemie operacyjnym.</param>
        <summary>Wiąże <see cref="T:System.Data.OracleClient.OracleBFile" /> obiektu do innego pliku w systemie operacyjnym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> Operacja musi znajdować się w obrębie transakcji powiodło się. Po prostu wywoływania <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A> na `BFILE` kojarzy <xref:System.Data.OracleClient.OracleBFile> obiektu przy użyciu innego pliku, ale nie została zaktualizowana w tabeli programu Oracle. Aby zaktualizować tabeli Oracle po wywołaniu <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, należy wywołać `Update` metody <xref:System.Data.OracleClient.OracleDataAdapter> , a następnie zatwierdzić transakcji.  
  
 Po pobraniu <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> lub <xref:System.Data.OracleClient.OracleBFile.FileName%2A> właściwości, są one buforowane w <xref:System.Data.OracleClient.OracleBFile> obiektu i nie podlegają żadnego sklonować <xref:System.Data.OracleClient.OracleBFile> wywołań obiektów <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, lub zmiany `BFILE` w bazie danych. Innymi słowy, może nie reprezentują rzeczywiste wartości `BFILE` obiektu na serwerze.  
  
 Ponadto podczas pobierania właściwości albo (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> lub <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) powoduje, że obie wartości właściwości do pobrania z serwera i w pamięci podręcznej <xref:System.Data.OracleClient.OracleBFile> obiektu.  
  
 W poniższym przykładzie C# zakłada ten schemat tabeli Oracle:  
  
```  
(col1 number, col2 BFILE)  
```  
  
 W przykładzie pokazano, za pomocą <xref:System.Data.OracleClient.OracleBFile.SetFileName%2A>, <xref:System.Data.OracleClient.OracleBFile.Read%2A> i <xref:System.Data.OracleClient.OracleBFile.Seek%2A> metod dostępu do <xref:System.Data.OracleClient.OracleBFile> obiektu.  
  
```  
byte[] buffer = new byte[100];  
OracleDataReader dataReader = command.ExecuteReader();  
using (dataReader) {  
    if (dataReader.Read()) {  
        OracleBFile BFile = dataReader.GetOracleBFile(1);  
        using (BFile) {  
            BFile.Seek(0, SeekOrigin.Begin);  
            BFile.Read(buffer, 0, 100);  
            command.Transaction = connection.BeginTransaction();  
            BFile.SetFileName("TESTDIR", "File1.jpg");  
            BFile.Read(buffer, 0, 100);  
        }  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Operacja musi znajdować się w obrębie transakcji.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="oracleBFile.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">Nie są obecnie obsługiwane.</param>
        <summary>Nie są obecnie obsługiwane.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Wyjątek zgłaszany, gdy jest wywoływana metoda nie jest obsługiwany lub jest próba odczytu, wyszukiwanie lub zapisać do strumienia, który nie obsługuje wywołanej funkcji.</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBFile.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Data.OracleClient.OracleBFile.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Array" /> typu <see cref="T:System.Byte" /> zawierający <see cref="T:System.Data.OracleClient.OracleBFile" /> danych.</summary>
        <value>
          <see cref="T:System.Array" /> Typu <see cref="T:System.Byte" /> zawierający <see cref="T:System.Data.OracleClient.OracleBFile" /> danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleBFile.Value%2A> Właściwości odczytuje całą `BFILE` w tym samym czasie.  
  
> [!NOTE]
>  Zaletą używania `BFILE`s jest możliwość pobierania dużych ilości danych w fragmentów po stronie klienta. Jednak jeśli używasz <xref:System.Data.OracleClient.OracleBFile.Value%2A>, uzyskać wszystkie dane dla kolumny BPLIK jako jednym fragmencie ciągłym, która może znacznie zwiększyć obciążenie aplikacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="oracleBFile.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Nie są obecnie obsługiwane.</param>
        <param name="offset">Nie są obecnie obsługiwane.</param>
        <param name="count">Nie są obecnie obsługiwane.</param>
        <summary>Nie są obecnie obsługiwane.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Wyjątek zgłaszany, gdy jest wywoływana metoda nie jest obsługiwany lub jest próba odczytu, wyszukiwanie lub zapisać do strumienia, który nie obsługuje wywołanej funkcji.</exception>
      </Docs>
    </Member>
  </Members>
</Type>