<Type Name="OracleConnection" FullName="System.Data.OracleClient.OracleConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fbd5ff7248667f5d199e03795ea041bbf39656bb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37676350" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleConnection : System.Data.Common.DbConnection, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleConnection extends System.Data.Common.DbConnection implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleConnection sealed : System::Data::Common::DbConnection, ICloneable" />
  <TypeSignature Language="F#" Value="type OracleConnection = class&#xA;    inherit DbConnection&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("OracleConnection has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje otwartego połączenia z bazą danych. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten typ jest przestarzały i zostanie usunięta w przyszłych wersjach programu .NET Framework. Aby uzyskać więcej informacji, zobacz [Oracle i ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).  
  
 <xref:System.Data.OracleClient.OracleConnection> Obiekt reprezentuje unikatowego połączenia z bazą danych Oracle. W przypadku system klienta/serwera bazy danych jest odpowiednikiem połączenie sieciowe z serwerem.  
  
 Aplikacja, która tworzy wystąpienie <xref:System.Data.OracleClient.OracleConnection> obiektu można ustawić deklaratywne lub nadrzędnych zabezpieczeń żądania wymagają wszystkich bezpośrednich i pośrednich wywołujących ma odpowiednie uprawnienia do kodu. <xref:System.Data.OracleClient.OracleConnection> Tworzy wymogów bezpieczeństwa przy użyciu <xref:System.Data.OracleClient.OraclePermission> obiektu. Użytkownikom można sprawdzić, czy ich kod ma odpowiednie uprawnienia za pomocą <xref:System.Data.OracleClient.OraclePermissionAttribute> obiektu. Użytkownicy i Administratorzy również służy narzędzie zasad zabezpieczeń dostępu kodu (Caspol.exe) Aby zmodyfikować zasady zabezpieczeń na poziomie komputera, użytkownika i przedsiębiorstwa. Aby uzyskać więcej informacji, zobacz [zabezpieczeń](http://msdn.microsoft.com/library/9a9621d7-8883-4a4f-a874-65e8e09e20a6).  
  
> [!NOTE]
>  W odróżnieniu od **połączenia** obiektu w innych dostawcy danych .NET Framework (SQL Server, OLE DB i ODBC) <xref:System.Data.OracleClient.OracleConnection> nie obsługuje <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> właściwości. Ustawianie limitu czasu połączenia, jako właściwość lub w parametrach połączenia nie ma znaczenia, a wartość zwracana zawsze wynosi zero. <xref:System.Data.OracleClient.OracleConnection> nie obsługuje również <xref:System.Data.OracleClient.OracleConnection.Database%2A> właściwości lub <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> metody.  
  
 Jeśli <xref:System.Data.OracleClient.OracleConnection> obiekt wykracza poza zakres, zostanie zamknięte. W związku z tym, zawsze należy zamknąć <xref:System.Data.OracleClient.OracleConnection> obiektów, wywołując <xref:System.Data.OracleClient.OracleConnection.Close%2A> lub **Dispose**, lub za pomocą <xref:System.Data.OracleClient.OracleConnection> obiektów w ramach `Using` instrukcji. W przeciwnym razie wyrzucania elementów bezużytecznych może nie zwolnienia je bezpośrednio. Opóźnienia mogą powodować błędy, jeśli maksymalna liczba połączeń zostanie osiągnięty, podczas gdy liczba połączeń oczekują do usunięcia przez moduł odśmiecania pamięci. Z drugiej strony, zamyka połączenia, wywołując <xref:System.Data.OracleClient.OracleConnection.Close%2A> używa zasobów natywnych bardziej wydajnie, poprawy skalowalności i poprawiania wydajności ogólnej aplikacji. Aby upewnić się, że połączenia są zawsze zamknięte, Otwórz połączenie wewnątrz `Using` bloku.  
  
> [!NOTE]
>  Wdrażanie aplikacji o wysokiej wydajności, często musisz użyć puli połączeń. Jednakże korzystając z programu .NET Framework Data Provider for Oracle, nie należy włączyć buforowanie połączeń, ponieważ dostawca zarządza to automatycznie.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleCommand> i <xref:System.Data.OracleClient.OracleConnection>. <xref:System.Data.OracleClient.OracleConnection> Jest otwarty, a następnie ustaw jako <xref:System.Data.OracleClient.OracleCommand.Connection%2A?displayProperty=nameWithType> właściwości. Przykład następnie wywołuje <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>i zamknięcie połączenia. Aby to osiągnąć, <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> jest przekazywany Ciąg połączenia i ciągu zapytania, który jest instrukcji SQL INSERT.  
  
 [!code-csharp[Classic WebData OracleConnection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.OracleClient.OracleDataAdapter" />
    <altmember cref="T:System.Data.OracleClient.OracleCommand" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy i otwiera <xref:System.Data.OracleClient.OracleConnection>.  
  
 [!code-csharp[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleConnection(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.OracleClient.OracleConnection : string -&gt; System.Data.OracleClient.OracleConnection" Usage="new System.Data.OracleClient.OracleConnection connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Połączenie użyte do bazy danych.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.OracleClient.OracleConnection" /> klasy przy użyciu określonych parametrów połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy i otwiera <xref:System.Data.OracleClient.OracleConnection>.  
  
 [!code-csharp[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginDbTransaction : System.Data.IsolationLevel -&gt; System.Data.Common.DbTransaction" Usage="oracleConnection.BeginDbTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rozpoczyna się transakcja w bazie danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleTransaction ^ BeginTransaction();" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : unit -&gt; System.Data.OracleClient.OracleTransaction" Usage="oracleConnection.BeginTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rozpoczyna się transakcja w bazie danych.</summary>
        <returns>Obiekt reprezentujący nową transakcję.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zatwierdź lub Wycofaj tę transakcję, trzeba jawnie użyć <xref:System.Data.OracleClient.OracleTransaction.Commit%2A> lub <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> metody.  
  
 Aby upewnić się, poprawnie wykonuje dostawcy danych programu .NET Framework dla modelu zarządzania transakcji bazy danych Oracle, należy unikać inne modele zarządzania transakcji, np. udostępnianych przez bazę danych.  
  
> [!NOTE]
>  Jeśli nie określisz poziom izolacji, jest używany domyślny poziom izolacji. Aby określić poziom izolacji z <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> metody, użyj <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> przeciążenia.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleConnection> i <xref:System.Data.OracleClient.OracleTransaction>. Ilustruje też sposób używania <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, i <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> metody.  
  
 [!code-csharp[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Równoległych transakcji nie są obsługiwane.</exception>
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Commit" />
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Rollback" />
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction BeginTransaction (System.Data.IsolationLevel il);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleTransaction BeginTransaction(valuetype System.Data.IsolationLevel il) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (il As IsolationLevel) As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleTransaction ^ BeginTransaction(System::Data::IsolationLevel il);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.OracleClient.OracleTransaction" Usage="oracleConnection.BeginTransaction il" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="il" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="il">Poziom izolacji transakcji dla tego połączenia.</param>
        <summary>Rozpoczyna się transakcja w bazie danych o określonej <see cref="T:System.Data.IsolationLevel" /> wartość.</summary>
        <returns>Obiekt reprezentujący nową transakcję.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zatwierdź lub Wycofaj tę transakcję, trzeba jawnie użyć <xref:System.Data.OracleClient.OracleTransaction.Commit%2A> lub <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> metody.  
  
 Aby upewnić się, poprawnie wykonuje dostawcy danych programu .NET Framework dla modelu zarządzania transakcji bazy danych Oracle, należy unikać inne modele zarządzania transakcji, np. udostępnianych przez bazę danych.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleConnection> i <xref:System.Data.OracleClient.OracleTransaction>. Ilustruje też sposób używania <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, i <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> metody.  
  
 [!code-csharp[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Równoległych transakcji nie są obsługiwane.</exception>
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Commit" />
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Rollback" />
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.ChangeDatabase : string -&gt; unit" Usage="oracleConnection.ChangeDatabase value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Nazwa bazy danych zamiast bieżącej bazy danych.</param>
        <summary>Zmienia bieżącą bazę danych otwórz <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `value` Parametr musi zawierać prawidłową nazwę bazy danych i nie może zawierać wartości null, pustym ciągiem (""), lub ciągiem zawierającym tylko puste znaków.  
  
> [!NOTE]
>  W odróżnieniu od **połączenia** obiektu w innych dostawcy danych .NET Framework (SQL Server, OLE DB i ODBC) <xref:System.Data.OracleClient.OracleConnection> nie obsługuje <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> właściwości. Ustawianie limitu czasu połączenia, jako właściwość lub w parametrach połączenia nie ma znaczenia, a wartość zwracana zawsze wynosi zero. <xref:System.Data.OracleClient.OracleConnection> nie obsługuje również <xref:System.Data.OracleClient.OracleConnection.Database%2A> właściwości lub <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nazwa bazy danych jest nieprawidłowa.</exception>
        <exception cref="T:System.InvalidOperationException">Połączenie nie jest otwarty.</exception>
        <exception cref="T:System.Data.OracleClient.OracleException">Nie można zmienić bazy danych.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearAllPools">
      <MemberSignature Language="C#" Value="public static void ClearAllPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.ClearAllPools" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllPools ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllPools();" />
      <MemberSignature Language="F#" Value="static member ClearAllPools : unit -&gt; unit" Usage="System.Data.OracleClient.OracleConnection.ClearAllPools " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opróżnia puli połączeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnection.ClearAllPools%2A> Resetuje lub opróżnia puli połączeń. Jeśli połączenia są używane w momencie wywołania, są odpowiednio oznaczone i są odrzucane, kiedy <xref:System.Data.OracleClient.OracleConnection.Close%2A> nosi nazwę na nich.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPool">
      <MemberSignature Language="C#" Value="public static void ClearPool (System.Data.OracleClient.OracleConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearPool(class System.Data.OracleClient.OracleConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearPool (connection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearPool(System::Data::OracleClient::OracleConnection ^ connection);" />
      <MemberSignature Language="F#" Value="static member ClearPool : System.Data.OracleClient.OracleConnection -&gt; unit" Usage="System.Data.OracleClient.OracleConnection.ClearPool connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <see cref="T:System.Data.OracleClient.OracleConnection" /> Do wyczyszczenia z puli.</param>
        <summary>Opróżnia puli połączeń skojarzonych z określonego połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnection.ClearPool%2A> Metoda czyści puli połączeń, który jest skojarzony z `connection`. Jeśli dodatkowe połączenia skojarzone z `connection` są używana w momencie wywołania, są odpowiednio oznaczone i są odrzucane, kiedy <xref:System.Data.OracleClient.OracleConnection.Close%2A> nosi nazwę na nich.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="oracleConnection.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka połączenie z bazą danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnection.Close%2A> Metoda wycofuje wszystkie oczekujące transakcje. Go następnie zwalnia połączenia z puli połączeń lub zamyka połączenia, jeśli buforowanie połączeń jest wyłączona.  
  
 Aplikacja może wywołać <xref:System.Data.OracleClient.OracleConnection.Close%2A> więcej niż jeden raz bez generowania wyjątku.  
  
> [!NOTE]
>  Korzystając z programu .NET Framework Data Provider for Oracle, nie należy włączyć buforowanie połączeń, ponieważ dostawca zarządza to automatycznie.  
  
> [!CAUTION]
>  Nie wywołuj <xref:System.Data.OracleClient.OracleConnection.Close%2A> na <xref:System.Data.OracleClient.OracleConnection>, <xref:System.Data.OracleClient.OracleDataReader>, lub inne obiekt zarządzany w `Finalize` metody klasy. W finalizator powinien tylko wersji niezarządzane zasoby, które należą bezpośrednio do swojej klasy. Jeśli klasa nie ma żadnych niezarządzanych zasobów, nie dołączaj `Finalize` metody w swojej definicji klasy. Aby uzyskać więcej informacji, zobacz [wyrzucania elementów bezużytecznych](~/docs/standard/garbage-collection/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Data.OracleClient.OracleConnection.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg używany do otwierania bazy danych Oracle.</summary>
        <value>Parametry połączenia bazy danych Oracle, który zawiera ustawienia, takie jak nazwa serwera jest wymagane do nawiązania początkowego połączenia. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> Można ustawić tylko wtedy, gdy połączenie jest zamknięte.  
  
 Możesz użyć <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> właściwość, aby połączyć się z bazą danych. Poniższy przykład ilustruje typowe parametry połączenia.  
  
```  
"Data Source=Oracle8i;Integrated Security=yes"  
```  
  
 Wiele ustawień określonych w ciągu ma odpowiadające właściwości tylko do odczytu (na przykład `Data Source=MyServer`, która odnosi się do <xref:System.Data.OracleClient.OracleConnection.DataSource%2A> właściwości). Po ustawieniu parametrów połączenia, wszystkie te właściwości są aktualizowane, chyba że zostanie wykryty błąd, w którym to przypadku żadnej właściwości są aktualizowane. <xref:System.Data.OracleClient.OracleConnection> właściwości zwracają tylko ustawienia domyślne lub te ustawienia określone w <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.  
  
 Resetowanie <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> zamkniętego połączenia resetuje wszystkie połączenia ciągu wartości (i powiązane właściwości), tym hasła.  
  
 Ciąg połączenia jest analizowany natychmiast po ich ustawiania. Jeśli podczas analizowania, co spowoduje wyświetlenie błędy składni, wyjątek czasu wykonywania, takie jak <xref:System.ArgumentException>, jest generowany. Inne błędy, można znaleźć tylko wtedy, gdy podejmowana jest próba otwarcia połączenia.  
  
 Podstawowy format parametrów połączenia jest szereg — słowo kluczowe/pary wartości, oddziel je średnikami. Znak równości (=) łączy każde słowo kluczowe i jego wartość. Aby uwzględnić wartości, które zawiera średnik, znak pojedynczego cudzysłowu ani znaku podwójnego cudzysłowu, wartości muszą być ujęte w cudzysłów. Jeśli wartość zawiera zarówno średnikami, jak i znaku podwójnego cudzysłowu, wartość mogą być ujęte w apostrofy. Pojedynczy cudzysłów jest również przydatne, jeśli wartość zaczyna się od znaku podwójnego cudzysłowu. Z drugiej strony podwójny cudzysłów służy Jeśli wartość zaczyna się od pojedynczego cudzysłowu. Jeśli wartość zawiera znaki pojedynczego cudzysłowu i podwójnego cudzysłowu, znaku cudzysłowu, używane, aby ująć wartość musi być podwójny każdorazowo, gdy pojawi się w wartości.  
  
 Aby dołączyć poprzedzających i końcowe spacje w wartości ciągu, wartości muszą być ujęte w apostrofy lub podwójnych cudzysłowów. Spacji wiodących i końcowych wokół integer, Boolean lub wartości wyliczenia są ignorowane, nawet jeśli ujęty w cudzysłów. Jednak spacje wewnątrz ciągu literal — słowo kluczowe lub wartość są zachowywane. Pojedynczym lub podwójnym cudzysłowie może służyć w ciągu połączenia bez użycia ograniczników, chyba że znaku cudzysłowu pierwszy lub ostatni znak w wartości, na przykład `Data Source= my'Server` lub `Data Source= my"Server`.  
  
 Aby dołączyć znak równości (=) — słowo kluczowe lub wartość, musi być poprzedzona przez innego znaku równości. Na przykład w parametrach połączenia hipotetyczny  
  
```  
"key==word=value"  
```  
  
 słowo kluczowe jest "klucz = słowo", a wartość to "value".  
  
 Jeśli określonego słowa kluczowego w parę — słowo kluczowe i wartości występuje więcej niż raz w ciągu połączenia, ostatnie wystąpienie jest używany w zestawie wartości.  
  
 Słowa kluczowe są bez uwzględniania wielkości liter.  
  
 W poniższej tabeli wymieniono prawidłowe nazwy wartości w ramach <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.  
  
|Nazwa|Domyślny|Opis|  
|----------|-------------|-----------------|  
|Źródło danych<br /><br /> —lub—<br /><br /> Serwer||Nazwa lub adres sieciowy wystąpienia programu Oracle, którym chcesz się połączyć.|  
|Zabezpieczenia zintegrowane|wartość "false"|Czy połączenie ma być bezpieczne czy nie.<br /><br /> Rozpoznawane są wartości `true` (zdecydowanie zalecane), `false`, `yes`, i `no`.|  
|Hasło||Hasło dla konta bazy danych Oracle, logowanie. Aby zachować wysoki poziom zabezpieczeń, zdecydowanie zalecamy zamiast tego użyj słowa kluczowego zintegrowanych zabezpieczeń.|  
|Utrwal informacje zabezpieczające|wartość "false"|Po ustawieniu `false` lub `no` (zdecydowanie zalecane), informacje związane z zabezpieczeniami, takie jak hasło nie jest zwracana jako część połączenia, jeśli połączenie jest otwarte lub kiedykolwiek było w otwartych <xref:System.Data.OracleClient.OracleConnection.State%2A>. Resetowanie parametrów połączenia powoduje zresetowanie wszystkich wartości parametrów połączeń, w tym hasła.<br /><br /> Rozpoznawane są wartości `true`, `false`, `yes`, i `no`.|  
|Unicode|wartość "false"|Określa, czy dla programu .NET Framework Data Provider for Oracle używa wywołań interfejsu API trybu UTF16. This — słowo kluczowe jest ignorowany, z wyjątkiem sytuacji, gdy za pomocą oprogramowania klienckiego Oracle9i.|  
|Identyfikator użytkownika||Konto logowania programu Oracle. Aby zachować wysoki poziom zabezpieczeń, zdecydowanie zalecamy zamiast tego użyj słowa kluczowego zintegrowanych zabezpieczeń.|  
  
 Poniższa tabela zawiera listę prawidłowych nazw, dla buforowania wartości w ramach połączeń <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.  
  
|Nazwa|Domyślny|Opis|  
|----------|-------------|-----------------|  
|Okres istnienia połączenia|0|Połączenia są zwracane do puli, jej godzina utworzenia jest porównywany z bieżącym czasem, gdy połączenie jest niszczony, jeśli ten przedział czasu (w sekundach) przekracza wartość określoną przez `Connection Lifetime`. Jest to przydatne w konfiguracji klastra, aby wymusić Równoważenie obciążenia między używania serwera i serwera, po prostu przełączyć do trybu online.<br /><br /> Wartość zerowa powoduje, że puli połączeń mieć maksymalny limit czasu połączenia.|  
|Enlist|'true'|Gdy `true` lub `yes`, pulę automatycznie rejestruje połączenia w bieżącym kontekście transakcji wątku tworzenia.<br /><br /> Rozpoznawane są wartości `true`, `false`, `yes`, i `no`.|  
|Maksymalny rozmiar puli|100|Maksymalna liczba dozwolonych w puli połączeń. Ustawienie `Max Pool Size` wartość <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> może wpłynąć na wydajność. Jeśli zamierzasz utworzyć i aktywnie używać więcej niż 100 połączeń, należy zwiększyć `Max Pool Size` wartość przybliża użycia stan połączenia dla aplikacji.|  
|Minimalny rozmiar puli|0|Minimalna liczba dozwolonych w puli połączeń.|  
|Buforowanie|'true'|Gdy `true` lub `yes`, <xref:System.Data.OracleClient.OracleConnection> obiektu jest pobierana z odpowiedniej puli lub jeśli to konieczne, zostanie utworzony i dodany do odpowiedniej puli.<br /><br /> Rozpoznawane są wartości `true`, `false`, `yes`, i `no`.|  
  
 Podczas ustawiania — słowo kluczowe lub wartości, które wymagają typu wartość logiczna buforowania połączeń, służy "yes" zamiast "true" i "nie" zamiast "false". Wartości całkowite są reprezentowane jako ciągi.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleConnection> i ustawia niektóre jego właściwości w parametrach połączenia.  
  
 [!code-csharp[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int" Usage="System.Data.OracleClient.OracleConnection.ConnectionTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera czas oczekiwania, aby ustanowić połączenie przed zakończeniem próby i wygenerowaniem błędu.</summary>
        <value>Czas (w sekundach) oczekiwania na połączenie, aby otworzyć. Wartość domyślna wynosi 15 sekund.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przekroczenie limitu czasu można ustawić czas oczekiwania połączenia, używając `Connect Timeout` lub `Connection Timeout` słów kluczowych w parametrach połączenia. Wartość 0 oznacza brak limitu. Ponadto należy unikać w <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> ponieważ próba połączenia oczekiwania przez czas nieokreślony.  
  
> [!NOTE]
>  W odróżnieniu od `Connection` obiektu w innych dostawcy danych .NET Framework (SQL Server, OLE DB i ODBC) <xref:System.Data.OracleClient.OracleConnection> nie obsługuje <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> właściwości. Ustawiając limit czasu połączenia z właściwością lub w parametrach połączenia nie ma wpływu, a wartość zwracana zawsze wynosi zero. <xref:System.Data.OracleClient.OracleConnection> nie obsługuje również <xref:System.Data.OracleClient.OracleConnection.Database%2A> właściwości lub <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określona wartość jest mniejsza niż 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ CreateCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateCommand : unit -&gt; System.Data.OracleClient.OracleCommand" Usage="oracleConnection.CreateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca <see cref="T:System.Data.OracleClient.OracleCommand" /> obiekt skojarzony z <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
        <returns>
          <see cref="T:System.Data.OracleClient.OracleCommand" /> Obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateDbCommand : unit -&gt; System.Data.Common.DbCommand" Usage="oracleConnection.CreateDbCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Database : string" Usage="System.Data.OracleClient.OracleConnection.Database" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę aktualnie używana baza danych lub bazy danych, który ma być używany po otwarciu połączenia.</summary>
        <value>Nazwa bieżącej bazy danych lub nazwę bazy danych do użycia po otwarciu połączenia. Wartością domyślną jest ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnection.Database%2A> Właściwość aktualizacje dynamiczne. Jeśli zmienisz bieżącej bazy danych za pomocą instrukcji SQL lub <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> metoda, jest wysyłany komunikat informacyjny i właściwości są aktualizowane automatycznie.  
  
> [!NOTE]
>  W odróżnieniu od `Connection` obiektu w innych dostawcy danych .NET Framework (SQL Server, OLE DB i ODBC) <xref:System.Data.OracleClient.OracleConnection> nie obsługuje <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> właściwości. Ustawiając limit czasu połączenia z właściwością lub w parametrach połączenia nie ma wpływu, a wartość zwracana zawsze wynosi zero. <xref:System.Data.OracleClient.OracleConnection> nie obsługuje również <xref:System.Data.OracleClient.OracleConnection.Database%2A> właściwości lub <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OracleClient.OracleConnection.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : string" Usage="System.Data.OracleClient.OracleConnection.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę serwera bazy danych Oracle, którym chcesz się połączyć.</summary>
        <value>Nazwa serwera bazy danych Oracle, którym chcesz się połączyć. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleConnection> i wyświetla niektóre jego właściwości tylko do odczytu.  
  
 [!code-csharp[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OracleClient.OracleConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oracleConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction distributedTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction distributedTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (distributedTransaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ distributedTransaction);" />
      <MemberSignature Language="F#" Value="member this.EnlistDistributedTransaction : System.EnterpriseServices.ITransaction -&gt; unit" Usage="oracleConnection.EnlistDistributedTransaction distributedTransaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distributedTransaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="distributedTransaction">Odwołanie do istniejącego <see cref="T:System.EnterpriseServices.ITransaction" /> w którym można zarejestrować.</param>
        <summary>Rejestruje się w określonej transakcji jako transakcji rozproszonej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nowe w programie ADO.NET 2.0 jest obsługa przy użyciu <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> metodę, aby zarejestrować w transakcji rozproszonej. Ponieważ współdziała on połączenie w <xref:System.Transactions.Transaction> wypadku **EnlistTransaction** korzysta z funkcji dostępnych w <xref:System.Transactions> przestrzeni nazw do zarządzania rozproszonego transakcji, dzięki czemu preferowane ** EnlistDistributedTransaction** do tego celu. Aby uzyskać więcej informacji, zobacz [transakcji rozproszonych](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 Możesz zarejestrować się w istniejącej transakcji rozproszonych za pomocą  
  
 <xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> Metoda wyłączenie automatycznej rejestracji. Rejestrowanie w istniejącej transakcji rozproszonych zapewnia, że w przypadku transakcji nie zostanie zatwierdzona lub wycofana, zmiany dokonane przez kod w źródle danych są również przekazana lub wycofana.  
  
 <xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> Zwraca wyjątek, jeśli <xref:System.Data.OracleClient.OracleConnection> transakcji przy użyciu już się rozpoczął <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>. Jednakże jeśli transakcja jest transakcji lokalnej rozpoczęło się o źródle danych (na przykład, wykonując jawnie za pomocą instrukcji BEGIN TRANSACTION <xref:System.Data.OracleClient.OracleCommand> obiektu), <xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> powoduje wycofanie transakcji lokalnej i powoduje zarejestrowanie w istniejącym Transakcja rozproszona jako żądane. Nie otrzymasz Zwróć uwagę, że lokalne transakcja została wycofana i są odpowiedzialni za zarządzanie wszystkie lokalne transakcje nie uruchomione przy użyciu <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="override this.EnlistTransaction : System.Transactions.Transaction -&gt; unit" Usage="oracleConnection.EnlistTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Odwołanie do istniejącego <see cref="T:System.Transactions.Transaction" /> w którym można zarejestrować.</param>
        <summary>Rejestruje się w określonej transakcji jako transakcji rozproszonej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nowe w programie ADO.NET 2.0 jest obsługa przy użyciu  
  
 <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> metodę, aby zarejestrować w transakcji rozproszonej. Ponieważ współdziała on połączenie w <xref:System.Transactions.Transaction> wypadku **EnlistTransaction** korzysta z funkcji dostępnych w <xref:System.Transactions> przestrzeni nazw do zarządzania rozproszonego transakcji, dzięki czemu preferowane ** EnlistDistributedTransaction**, który używa **System.EnterpriseServices.ITransaction** obiektu. Ma on także semantykę nieco: gdy połączenie jest jawnie zarejestrowana w transakcji, nie może być unenlisted ani zarejestrowany w innej transakcji, dopóki nie zakończy się pierwszej transakcji. Aby uzyskać więcej informacji na temat transakcji rozproszonych, zobacz [transakcje rozproszone](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca informacje o schemacie dla źródła danych to <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberSignature Language="F#" Value="override this.GetSchema : unit -&gt; System.Data.DataTable" Usage="oracleConnection.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca informacje o schemacie dla źródła danych to <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
        <returns>Element <see cref="T:System.Data.DataTable" /> zawierający informacje o schemacie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string -&gt; System.Data.DataTable" Usage="oracleConnection.GetSchema collectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName">Określa nazwę schematu do zwrócenia.</param>
        <summary>Zwraca informacje o schemacie dla źródła danych to <see cref="T:System.Data.OracleClient.OracleConnection" /> przy użyciu określonego ciągu dla nazwy schematu.</summary>
        <returns>Element <see cref="T:System.Data.DataTable" /> zawierający informacje o schemacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wysyła kwerendę za pomocą <xref:System.Data.OracleClient.OracleConnection.GetSchema%2A> jest uwzględniana wielkość liter. Ze względu na traktowanie firmy Oracle przypadków podczas tworzenia schematu może to prowadzić do nieoczekiwanych wyników.  
  
 Jeśli schemat został utworzony bez cudzysłowów`,` Oracle przechowuje nazwę obiektu napisane wielkimi literami. Jeśli schemat został utworzony z cudzysłowami, Oracle przechowuje nazwę obiektu w wielkości liter, pod warunkiem.  
  
 Na przykład załóżmy, że utworzysz tabelę o nazwie MyTable, przy użyciu jednej z następujących dwóch instrukcji:  
  
 `CREATE TABLE MyTable ...`  
  
 `CREATE TABLE "MyTable" ...`  
  
 Aby pobrać informacje o tej tabeli przy użyciu **GetSchema** metody w pierwszym przypadku trzeba przekazać "MYTABLE" jako argumentu. W drugim przypadku trzeba przekazać "MyTable" jako argumentu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="collectionName" /> jest określony jako wartość null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberSignature Language="F#" Value="override this.GetSchema : string * string[] -&gt; System.Data.DataTable" Usage="oracleConnection.GetSchema (collectionName, restrictionValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName">Określa nazwę schematu do zwrócenia.</param>
        <param name="restrictionValues">Zestaw wartości ograniczeń dla żądany schemat.</param>
        <summary>Zwraca informacje o schemacie dla źródła danych to <see cref="T:System.Data.OracleClient.OracleConnection" /> za pomocą określonego ciągu nazwy schematu i tabeli określonego ciągu dla wartości ograniczeń.</summary>
        <returns>Element <see cref="T:System.Data.DataTable" /> zawierający informacje o schemacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `restrictionValues` Parametru można podać głębokość n wartości, które są określone przez kolekcji ograniczeń dla określonej kolekcji. Aby ustawić wartości w danym ograniczeń i nie wartości inne ograniczenia, musisz ustawić poprzednich ograniczeń na wartość null, a następnie przekaż odpowiednią wartość w ograniczenie, które chcesz określić wartość parametru.  
  
 Na przykład to kolekcja "Tabele". Jeśli kolekcja "Tabele" ma ograniczenia 3: bazy danych, właściciela i nazwę tabeli; i chcesz odzyskać tylko w tabelach, które są skojarzone z właścicielem "Carl", a następnie musisz przekazać następujące wartości (co najmniej): null, "Carl". Jeśli wartość ograniczenia nie jest przekazany, wartości domyślne są używane dla tego ograniczenia. Jest to tego samego mapowania jako przekazywanie w wartości null, która różni się od przekazywanie w pusty ciąg jako wartość parametru. W tym przypadku ciąg pusty ("") jest uważany za wartość określonego parametru.  
  
 Wysyła kwerendę za pomocą <xref:System.Data.OracleClient.OracleConnection.GetSchema%2A> jest uwzględniana wielkość liter. Ze względu na traktowanie firmy Oracle przypadków podczas tworzenia schematu może to prowadzić do nieoczekiwanych wyników.  
  
 Jeśli schemat został utworzony bez cudzysłowów`,` Oracle przechowuje nazwę obiektu napisane wielkimi literami. Jeśli schemat został utworzony z cudzysłowami, Oracle przechowuje nazwę obiektu w wielkości liter, pod warunkiem.  
  
 Na przykład załóżmy, że utworzysz tabelę o nazwie MyTable, przy użyciu jednej z następujących dwóch instrukcji:  
  
 `CREATE TABLE MyTable ...`  
  
 `CREATE TABLE "MyTable" ...`  
  
 Aby pobrać informacje o tej tabeli przy użyciu **GetSchema** metody w pierwszym przypadku trzeba przekazać "MYTABLE" jako argumentu. W drugim przypadku trzeba przekazać "MyTable" jako argumentu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="collectionName" /> jest określony jako wartość null.</exception>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.OracleClient.OracleInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OracleClient.OracleInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.OracleClient.OracleConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As OracleInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OracleClient::OracleInfoMessageEventHandler ^ InfoMessage;" />
      <MemberSignature Language="F#" Value="member this.InfoMessage : System.Data.OracleClient.OracleInfoMessageEventHandler " Usage="member this.InfoMessage : System.Data.OracleClient.OracleInfoMessageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wysyła Oracle, ostrzeżenie lub komunikat informacyjny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ dla programu .NET Framework Data Provider for Oracle używa Oracle wywołania interfejsu (OCI), zawsze wtedy, gdy dostawca danych otrzymuje komunikat Powodzenie za pomocą informacji, <xref:System.Data.OracleClient.OracleConnection.InfoMessage> jest generowane zdarzenie. Przykładem będzie Tworzenie procedury składowanej, która zawiera błąd składniowy. Wywołanie <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> metoda powiedzie się. Jednak <xref:System.Data.OracleClient.OracleConnection.InfoMessage> zdarzenie zostanie wygenerowany, informujące o błąd składni.  
  
 Klienci, którzy do przetworzenia, ostrzeżenia i komunikaty informacyjne, wysłanych przez serwer powinien utworzyć <xref:System.Data.OracleClient.OracleInfoMessageEventHandler> delegata do nasłuchiwania do tego zdarzenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberSignature Language="F#" Value="override this.Open : unit -&gt; unit" Usage="oracleConnection.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Otwiera połączenie z bazą danych przy użyciu ustawień właściwości określone przez <see cref="P:System.Data.OracleClient.OracleConnection.ConnectionString" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnection> Rysuje otwartego połączenia z puli połączeń, jeśli jest dostępny. W przeciwnym razie nawiązaniem nowego połączenia z bazą danych.  
  
> [!NOTE]
>  Jeśli <xref:System.Data.OracleClient.OracleConnection> zbliża się poza zakresem, połączenia, czyli przedstawia liczbę nie zamyka się automatycznie. W związku z tym, jawnie należy zamknąć połączenie, wywołując <xref:System.Data.OracleClient.OracleConnection.Close%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Połączenie nie jest otwarty.</exception>
        <exception cref="T:System.Data.OracleClient.OracleException">Nie można zmienić bazy danych.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVersion : string" Usage="System.Data.OracleClient.OracleConnection.ServerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg zawierający wersję serwera, z którym klient jest połączony.</summary>
        <value>Wersja połączony serwer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnection.ServerVersion%2A> Właściwość ma format wersji bazy danych Oracle. Na przykład format wersji programu Oracle8 jest ciągiem w postaci "8.1.7.0.0 programu Oracle8 wersji 8.1.7.0.0 — w środowisku produkcyjnym."  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleConnection> i wyświetla niektóre jego właściwości tylko do odczytu.  
  
 [!code-csharp[Classic WebData OracleConnection.ServerVersion#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.ServerVersion/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.ServerVersion#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.ServerVersion/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Połączenie jest zamknięte.</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.ConnectionState" Usage="System.Data.OracleClient.OracleConnection.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan połączenia.</summary>
        <value>Bitowa kombinacja <see cref="T:System.Data.ConnectionState" /> wartości. Wartość domyślna to <see langword="Closed" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiany stanu dozwolone są następujące:  
  
-   Z `Closed` do `Open`przy użyciu `Open` metody <xref:System.Data.OracleClient.OracleConnection> obiektu.  
  
-   Z `Open` do `Closed`przy użyciu <xref:System.Data.OracleClient.OracleConnection.Close%2A> metody <xref:System.Data.OracleClient.OracleConnection> obiektu.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy pochodnej <xref:System.Data.OracleClient.OracleConnection>, ustawia jego <xref:System.Data.IDbConnection.ConnectionString%2A>i wyświetla jego <xref:System.Data.OracleClient.OracleConnection.State%2A>.  
  
 [!code-csharp[Classic WebData OracleConnection.State#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.State/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.State#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.State/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChange">
      <MemberSignature Language="C#" Value="public event System.Data.StateChangeEventHandler StateChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StateChangeEventHandler StateChange" />
      <MemberSignature Language="DocId" Value="E:System.Data.OracleClient.OracleConnection.StateChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChange As StateChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StateChangeEventHandler ^ StateChange;" />
      <MemberSignature Language="F#" Value="member this.StateChange : System.Data.StateChangeEventHandler " Usage="member this.StateChange : System.Data.StateChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.StateChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.System#Data#IDbConnection#BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction () As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction() = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.BeginTransaction">
      <MemberSignature Language="C#" Value="System.Data.IDbTransaction IDbConnection.BeginTransaction (System.Data.IsolationLevel il);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbTransaction System.Data.IDbConnection.BeginTransaction(valuetype System.Data.IsolationLevel il) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Function BeginTransaction (il As IsolationLevel) As IDbTransaction Implements IDbConnection.BeginTransaction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbTransaction ^ System.Data.IDbConnection.BeginTransaction(System::Data::IsolationLevel il) = System::Data::IDbConnection::BeginTransaction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="il" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="il">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.ChangeDatabase">
      <MemberSignature Language="C#" Value="void IDbConnection.ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.IDbConnection.ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.System#Data#IDbConnection#ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub ChangeDatabase (value As String) Implements IDbConnection.ChangeDatabase" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.IDbConnection.ChangeDatabase(System::String ^ value) = System::Data::IDbConnection::ChangeDatabase;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.ChangeDatabase(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbConnection.CreateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand IDbConnection.CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDbCommand System.Data.IDbConnection.CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.System#Data#IDbConnection#CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Function CreateCommand () As IDbCommand Implements IDbConnection.CreateCommand" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDbCommand ^ System.Data.IDbConnection.CreateCommand() = System::Data::IDbConnection::CreateCommand;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbConnection.CreateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy obiekt, który jest kopią bieżącego wystąpienia.</summary>
        <returns>Nowy obiekt, który jest kopią tego wystąpienia...</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Data.OracleClient.OracleConnection> wystąpienia jest rzutowany na <xref:System.ICloneable> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>