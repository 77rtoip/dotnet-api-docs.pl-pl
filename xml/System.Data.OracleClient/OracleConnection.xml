<Type Name="OracleConnection" FullName="System.Data.OracleClient.OracleConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d7fa285b2eb8e74d96ac0fc161882363b9909835" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34452219" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OracleConnection : System.Data.Common.DbConnection, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleConnection extends System.Data.Common.DbConnection implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleConnection sealed : System::Data::Common::DbConnection, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("OracleConnection has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje otwartego połączenia z bazą danych. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten typ jest przestarzałe i zostanie usunięta w przyszłych wersjach programu .NET Framework. Aby uzyskać więcej informacji, zobacz [Oracle i ADO.NET](~/docs/framework/data/adonet/oracle-and-adonet.md).  
  
 <xref:System.Data.OracleClient.OracleConnection> Obiekt reprezentuje unikatowe połączenia z bazą danych Oracle. W przypadku system klienta/serwera bazy danych jest odpowiednikiem połączenie sieciowe z serwerem.  
  
 Aplikacja, która tworzy wystąpienie <xref:System.Data.OracleClient.OracleConnection> obiektu można ustawić zabezpieczenia deklaratywne lub imperatywnych żądania wymagają wszystkich bezpośrednich i pośrednich wywołującym ma odpowiednie uprawnienia do kodu. <xref:System.Data.OracleClient.OracleConnection> Tworzy żądania kontroli zabezpieczeń przy użyciu <xref:System.Data.OracleClient.OraclePermission> obiektu. Użytkownicy można sprawdzić, czy ich kod ma odpowiednie uprawnienia za pomocą <xref:System.Data.OracleClient.OraclePermissionAttribute> obiektu. Użytkownicy i Administratorzy również służy narzędzie zasad zabezpieczenia dostępu kodu (Caspol.exe) do modyfikowania zasad zabezpieczeń na poziomie komputera, użytkownika i enterprise. Aby uzyskać więcej informacji, zobacz [zabezpieczeń](http://msdn.microsoft.com/library/9a9621d7-8883-4a4f-a874-65e8e09e20a6).  
  
> [!NOTE]
>  W odróżnieniu od **połączenia** obiektu w innych .NET Framework dostawców danych (SQL Server, OLE DB i ODBC) <xref:System.Data.OracleClient.OracleConnection> nie obsługuje <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> właściwości. Ustawianie limitu czasu połączenia jako właściwość lub w parametrach połączenia nie ma znaczenia, a wartość zwracana jest zawsze zero. <xref:System.Data.OracleClient.OracleConnection> nie obsługuje również <xref:System.Data.OracleClient.OracleConnection.Database%2A> właściwości lub <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> metody.  
  
 Jeśli <xref:System.Data.OracleClient.OracleConnection> obiektu wykracza poza zakres, zostanie zamknięte. W związku z tym zawsze należy zamknąć <xref:System.Data.OracleClient.OracleConnection> obiektów przez wywołanie metody <xref:System.Data.OracleClient.OracleConnection.Close%2A> lub **Dispose**, lub za pomocą <xref:System.Data.OracleClient.OracleConnection> obiektów w ramach `Using` instrukcji. W przeciwnym razie wyrzucanie elementów bezużytecznych może nie zwolnienia je bezpośrednio. Opóźnienia może powodować błędy, jeśli jest osiągnięto maksymalną liczbę połączeń, podczas gdy liczba połączeń oczekują do usunięcia przez moduł garbage collector. Z kolei, zamykanie połączenia przez wywołanie metody <xref:System.Data.OracleClient.OracleConnection.Close%2A> wydajniej, korzysta z zasobów natywnych rozszerzanie skalowalności i poprawia ogólną wydajnością. Aby upewnić się, że połączenia są zawsze zamknięte, Otwórz połączenie wewnątrz `Using` bloku.  
  
> [!NOTE]
>  Aby wdrożyć aplikacje wysokiej wydajności, często konieczne Użyj puli połączeń. Jednak użycie .NET Framework Data Provider for Oracle, nie trzeba włączyć puli połączeń, ponieważ dostawca zarządza to automatycznie.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleCommand> i <xref:System.Data.OracleClient.OracleConnection>. <xref:System.Data.OracleClient.OracleConnection> Jest otwarte, a następnie ustaw jako <xref:System.Data.OracleClient.OracleCommand.Connection%2A?displayProperty=nameWithType> właściwości. Przykład wywołuje <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>i zamknięcie połączenia. Aby to osiągnąć, <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> jest przekazywany z parametrów połączenia i ciągu zapytania, który jest instrukcji SQL INSERT.  
  
 [!code-csharp[Classic WebData OracleConnection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.OracleClient.OracleDataAdapter" />
    <altmember cref="T:System.Data.OracleClient.OracleCommand" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy i otwiera <xref:System.Data.OracleClient.OracleConnection>.  
  
 [!code-csharp[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleConnection(System::String ^ connectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Połączenie używane do bazy danych.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.OracleClient.OracleConnection" /> klasy z określonych parametrów połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy i otwiera <xref:System.Data.OracleClient.OracleConnection>.  
  
 [!code-csharp[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.OracleConnection1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rozpoczyna się transakcji w bazie danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleTransaction ^ BeginTransaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rozpoczyna się transakcji w bazie danych.</summary>
        <returns>Obiekt reprezentujący nowej transakcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby przekazać ani wycofać transakcji, należy jawnie użyć <xref:System.Data.OracleClient.OracleTransaction.Commit%2A> lub <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> metody.  
  
 Aby upewnić się, że dostawcy danych programu .NET Framework dla Oracle transakcji zarządzania modelu wykonuje prawidłowo, należy unikać innych modeli zarządzania transakcji, np. udostępnianych przez bazę danych.  
  
> [!NOTE]
>  Jeśli nie określisz poziom izolacji, używany jest domyślny poziom izolacji. Określa poziom izolacji z <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> metody, użyj <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> przeciążenia.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleConnection> i <xref:System.Data.OracleClient.OracleTransaction>. Ponadto przedstawiono sposób użycia <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, i <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> metody.  
  
 [!code-csharp[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Transakcje równoległe są nieobsługiwane.</exception>
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Commit" />
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Rollback" />
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleTransaction BeginTransaction (System.Data.IsolationLevel il);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleTransaction BeginTransaction(valuetype System.Data.IsolationLevel il) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (il As IsolationLevel) As OracleTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleTransaction ^ BeginTransaction(System::Data::IsolationLevel il);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="il" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="il">Poziom izolacji transakcji dla tego połączenia.</param>
        <summary>Rozpoczyna się transakcji w bazie danych z określonym <see cref="T:System.Data.IsolationLevel" /> wartość.</summary>
        <returns>Obiekt reprezentujący nowej transakcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby przekazać ani wycofać transakcji, należy jawnie użyć <xref:System.Data.OracleClient.OracleTransaction.Commit%2A> lub <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> metody.  
  
 Aby upewnić się, że dostawcy danych programu .NET Framework dla Oracle transakcji zarządzania modelu wykonuje prawidłowo, należy unikać innych modeli zarządzania transakcji, np. udostępnianych przez bazę danych.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleConnection> i <xref:System.Data.OracleClient.OracleTransaction>. Ponadto przedstawiono sposób użycia <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, i <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> metody.  
  
 [!code-csharp[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.BeginTransaction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Transakcje równoległe są nieobsługiwane.</exception>
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Commit" />
        <altmember cref="M:System.Data.OracleClient.OracleTransaction.Rollback" />
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Nazwa bazy danych do użycia zamiast bieżącej bazy danych.</param>
        <summary>Zmiany bieżącej bazy danych dla otwartego <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `value` Parametr musi zawierać prawidłową nazwę bazy danych i nie może zawierać wartości null, pustym ciągiem (""), lub ciągiem o tylko pustych znaków.  
  
> [!NOTE]
>  W odróżnieniu od **połączenia** obiektu w innych .NET Framework dostawców danych (SQL Server, OLE DB i ODBC) <xref:System.Data.OracleClient.OracleConnection> nie obsługuje <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> właściwości. Ustawianie limitu czasu połączenia jako właściwość lub w parametrach połączenia nie ma znaczenia, a wartość zwracana jest zawsze zero. <xref:System.Data.OracleClient.OracleConnection> nie obsługuje również <xref:System.Data.OracleClient.OracleConnection.Database%2A> właściwości lub <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nazwa bazy danych jest nieprawidłowa.</exception>
        <exception cref="T:System.InvalidOperationException">Połączenie nie jest otwarty.</exception>
        <exception cref="T:System.Data.OracleClient.OracleException">Nie można zmienić bazy danych.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearAllPools">
      <MemberSignature Language="C#" Value="public static void ClearAllPools ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllPools() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.ClearAllPools" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllPools ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllPools();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opróżnia puli połączeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnection.ClearAllPools%2A> Resetuje lub opróżnia puli połączeń. Jeśli połączenia są używane w momencie wywołania, są odpowiednio oznaczone i są odrzucane, kiedy <xref:System.Data.OracleClient.OracleConnection.Close%2A> nazywa się na nich.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPool">
      <MemberSignature Language="C#" Value="public static void ClearPool (System.Data.OracleClient.OracleConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearPool(class System.Data.OracleClient.OracleConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearPool (connection As OracleConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearPool(System::Data::OracleClient::OracleConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.OracleClient.OracleConnection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <see cref="T:System.Data.OracleClient.OracleConnection" /> Do wyczyszczenia z puli.</param>
        <summary>Opróżnia puli połączeń skojarzone z określonego połączenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnection.ClearPool%2A> Metoda czyści puli połączeń, z którym skojarzony jest `connection`. Jeśli dodatkowe połączenia skojarzony z `connection` są używane w momencie wywołania, są odpowiednio oznaczone, a są odrzucone podczas <xref:System.Data.OracleClient.OracleConnection.Close%2A> nazywa się na nich.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka połączenie z bazą danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnection.Close%2A> Metody wycofuje wszystkie transakcje oczekujące. Następnie go zwalnia połączenia z puli połączeń lub zamyka połączenie, jeśli buforowanie połączeń jest wyłączone.  
  
 Aplikacja może wywołać <xref:System.Data.OracleClient.OracleConnection.Close%2A> więcej niż jeden raz bez generowania wyjątku.  
  
> [!NOTE]
>  Gdy używasz .NET Framework Data Provider for Oracle nie trzeba włączyć puli połączeń, ponieważ dostawca zarządza to automatycznie.  
  
> [!CAUTION]
>  Nie wywołuj <xref:System.Data.OracleClient.OracleConnection.Close%2A> na <xref:System.Data.OracleClient.OracleConnection>, <xref:System.Data.OracleClient.OracleDataReader>, lub innego obiektu zarządzanego w `Finalize` metody klasy. W finalizator należy tylko Zwolnij niezarządzane zasoby, które bezpośrednio należą do klasy. Jeśli klasa nie ma żadnych niezarządzanych zasobów, nie dołączaj `Finalize` metody w definicji klasy. Aby uzyskać więcej informacji, zobacz [wyrzucanie elementów bezużytecznych](~/docs/standard/garbage-collection/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Oracle.Design.OracleConnectionStringEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg używany do otwierania bazy danych programu Oracle.</summary>
        <value>Parametry połączenia Oracle, który zawiera ustawienia, takie jak nazwa serwera jest potrzebne do nawiązania połączenia początkowego. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> Można ustawić tylko wtedy, gdy połączenie jest zamknięte.  
  
 Można użyć <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> właściwość, aby połączyć się z bazą danych. Poniższy przykład przedstawia typowe parametry.  
  
```  
"Data Source=Oracle8i;Integrated Security=yes"  
```  
  
 Wiele ustawień określonych w ciągu ma odpowiednie właściwości tylko do odczytu (na przykład `Data Source=MyServer`, które odpowiada <xref:System.Data.OracleClient.OracleConnection.DataSource%2A> właściwości). Po ciągu połączenia jest ustawiona, wszystkie te właściwości zostaną zaktualizowane, chyba że zostanie wykryty błąd, w którym to przypadku żadnej właściwości są aktualizowane. <xref:System.Data.OracleClient.OracleConnection> właściwości zwracają tylko ustawienia domyślne lub tych ustawień określonych w <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.  
  
 Resetowanie <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> zamkniętego połączenia resetuje wszystkie połączenia ciągu wartości (i powiązane właściwości), w tym hasła.  
  
 Natychmiast po ustawiany jest przeanalizować parametrów połączenia. Jeśli podczas analizowania ujawnia błędy składni, wyjątek czasu wykonywania, takie jak <xref:System.ArgumentException>, zostanie wygenerowany. Inne błędy, znajduje się tylko w przypadku próby otwarcia połączenia.  
  
 Podstawowe formaty ciągu połączenia jest szereg par — słowo kluczowe i wartości, oddziel je średnikami. Znak równości (=) łączy każde słowo kluczowe i jego wartość. Dołączenie wartości, które zawiera średnik, znak pojedynczego cudzysłowu ani znaków podwójnego cudzysłowu, wartość musi być ujęta w cudzysłów. Jeśli wartość zawiera średnik i znaku podwójnego cudzysłowu, wartość mogą być ujęte w apostrofy. Pojedynczy cudzysłów jest również przydatne, jeśli wartość rozpoczyna się od znaku podwójnego cudzysłowu. Z drugiej strony podwójny cudzysłów służy Jeżeli wartość rozpoczyna się od pojedynczy cudzysłów. Jeśli wartość zawiera znak pojedynczego cudzysłowu jak podwójnego cudzysłowu, znak cudzysłowu ująć musi być podwójny każdorazowo, gdy pojawi się w wartości.  
  
 Aby dołączyć poprzedzających lub końcowe spacje w wartości ciągu, wartość musi być ujęta w apostrofy albo cudzysłowów. Spacji wiodących lub końcowych wokół liczba całkowita, wartość logiczna lub wartości wyliczenia są ignorowane, nawet jeśli ujęty w cudzysłów. Jednak spacje wewnątrz — słowo kluczowe literału ciągu lub wartość są zachowywane. Pojedynczym lub podwójnym cudzysłowie może być używana w ciągu połączenia bez znaku cudzysłowu jest pierwszy i ostatni znak w wartości, na przykład za pomocą ograniczników `Data Source= my'Server` lub `Data Source= my"Server`.  
  
 Aby dołączyć znakiem równości (=) — słowo kluczowe lub wartość, musi być poprzedzony przez innego znaku równości. Na przykład w parametrach połączenia hipotetyczny  
  
```  
"key==word=value"  
```  
  
 słowo kluczowe jest "klucz = wyraz" a wartość to "value".  
  
 Jeśli określone słowo kluczowe w parę — słowo kluczowe i wartości występuje więcej niż raz w ciągu połączenia, ostatnie wystąpienie jest używany w zestawie wartości.  
  
 Słowa kluczowe są bez uwzględniania wielkości liter.  
  
 W poniższej tabeli wymieniono prawidłowe nazwy dla wartości w ramach <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.  
  
|Nazwa|Domyślny|Opis|  
|----------|-------------|-----------------|  
|Źródło danych<br /><br /> —lub—<br /><br /> Serwer||Nazwa lub adres sieciowy wystąpienia programu Oracle, którym chcesz się połączyć.|  
|Zintegrowane zabezpieczenia|wartość "false"|Określa, czy połączenie ma być bezpieczne, czy nie.<br /><br /> Rozpoznawane są wartości `true` (zalecane), `false`, `yes`, i `no`.|  
|Hasło||Hasło dla konta programu Oracle logowania. Utrzymanie wysokiego poziomu zabezpieczeń, firma Microsoft zaleca użycie słowa kluczowego zintegrowanych zabezpieczeń.|  
|Utrzymuj informacje o zabezpieczeniach|wartość "false"|Jeśli wartość `false` lub `no` (zalecane), informacje związane z zabezpieczeniami, takich jak hasła nie są zwracane jako część połączenia, jeśli połączenie jest otwarte lub kiedykolwiek było w otwartej <xref:System.Data.OracleClient.OracleConnection.State%2A>. Resetowanie parametry połączenia resetuje wszystkie wartości parametrów połączeń, w tym hasła.<br /><br /> Rozpoznawane są wartości `true`, `false`, `yes`, i `no`.|  
|Unicode|wartość "false"|Określa, czy dla programu .NET Framework Data Provider for Oracle używa interfejsu API tryb UTF16. To słowo kluczowe jest ignorowana wyłącznie przy użyciu oprogramowanie klienta Oracle9i.|  
|Identyfikator użytkownika||Konto logowania programu Oracle. Utrzymanie wysokiego poziomu zabezpieczeń, firma Microsoft zaleca użycie słowa kluczowego zintegrowanych zabezpieczeń.|  
  
 W poniższej tabeli wymieniono prawidłowe nazwy do buforowania wartości w ramach połączeń <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>.  
  
|Nazwa|Domyślny|Opis|  
|----------|-------------|-----------------|  
|Okres istnienia połączenia|0|Gdy połączenie jest zwracana do puli, jej godzina utworzenia jest porównywany z bieżącym czasem i połączenie zostanie zniszczony, jeśli ten przedział czasu (w sekundach) przekracza wartość określoną przez `Connection Lifetime`. Jest to przydatne w konfiguracji klastra, aby wymusić zrównoważenia obciążenia między programem server i serwer, który właśnie został przełączony do trybu online.<br /><br /> Wartość zerowa powoduje, że puli połączeń mieć maksymalny limit czasu połączenia.|  
|Enlist|'true'|Gdy `true` lub `yes`, pulę automatycznie rejestruje połączenia w bieżącym kontekście transakcji wątku tworzenia.<br /><br /> Rozpoznawane są wartości `true`, `false`, `yes`, i `no`.|  
|Rozmiar maksymalny buforu|100|Maksymalna liczba dozwolonych w puli połączeń. Ustawienie `Max Pool Size` wartość <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> może wpłynąć na wydajność. Jeśli planujesz tworzenie i aktywnie używać więcej niż 100 połączeń, należy zwiększyć `Max Pool Size` wartość przybliża użycia stan połączenia dla aplikacji.|  
|Minimalny rozmiar puli|0|Minimalna liczba połączeń dozwolonych w puli.|  
|Buforowanie|'true'|Gdy `true` lub `yes`, <xref:System.Data.OracleClient.OracleConnection> obiektu jest przenoszony z odpowiedniej puli lub w razie potrzeby, jest tworzony i dodawany do odpowiedniej puli.<br /><br /> Rozpoznawane są wartości `true`, `false`, `yes`, i `no`.|  
  
 Podczas ustawiania wartości, które wymagają wartość logiczną buforowania połączeń lub słowo kluczowe, służy 'Tak' zamiast 'true' i 'nie' zamiast 'false'. Liczby całkowite są reprezentowane jako ciągi.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleConnection> i ustawia niektóre jego właściwości w parametrach połączenia.  
  
 [!code-csharp[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera czas oczekiwania, aby ustanowić połączenie przed zakończeniem próby i wygenerowaniem błędu.</summary>
        <value>Czas (w sekundach) oczekiwania na połączenie, aby otworzyć. Wartość domyślna to 15 sekund.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy określić ilość czasu oczekiwania połączenia limitu czasu przy użyciu `Connect Timeout` lub `Connection Timeout` słów kluczowych w parametrach połączenia. Wartość 0 oznacza brak limitu i należy unikać w <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> ponieważ próby nawiązania połączenia przez nieokreślony czas oczekiwania.  
  
> [!NOTE]
>  W odróżnieniu od `Connection` obiektu w innych .NET Framework dostawców danych (SQL Server, OLE DB i ODBC) <xref:System.Data.OracleClient.OracleConnection> nie obsługuje <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> właściwości. Ustawianie limitu czasu połączenia z właściwością lub w parametrach połączenia nie ma znaczenia, a wartość zwracana jest zawsze zero. <xref:System.Data.OracleClient.OracleConnection> nie obsługuje również <xref:System.Data.OracleClient.OracleConnection.Database%2A> właściwości lub <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określona wartość jest mniejsza niż 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.OracleClient.OracleCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As OracleCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::OracleClient::OracleCommand ^ CreateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy i zwraca <see cref="T:System.Data.OracleClient.OracleCommand" /> obiekt skojarzony z <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
        <returns>
          <see cref="T:System.Data.OracleClient.OracleCommand" /> Obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę bieżącej bazy danych lub baza danych ma być używany po otwarciu połączenia.</summary>
        <value>Nazwa bieżącej bazy danych lub nazwa bazy danych do użycia po otwarciu połączenia. Wartością domyślną jest ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnection.Database%2A> Właściwość aktualizacje dynamiczne. Jeśli zmienisz bieżącej bazy danych za pomocą instrukcji SQL lub <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> , wysyłany jest komunikat informacyjny i właściwość jest aktualizowane automatycznie.  
  
> [!NOTE]
>  W odróżnieniu od `Connection` obiektu w innych .NET Framework dostawców danych (SQL Server, OLE DB i ODBC) <xref:System.Data.OracleClient.OracleConnection> nie obsługuje <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> właściwości. Ustawianie limitu czasu połączenia z właściwością lub w parametrach połączenia nie ma znaczenia, a wartość zwracana jest zawsze zero. <xref:System.Data.OracleClient.OracleConnection> nie obsługuje również <xref:System.Data.OracleClient.OracleConnection.Database%2A> właściwości lub <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OracleClient.OracleConnection.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę serwera Oracle, którym chcesz się połączyć.</summary>
        <value>Nazwa serwera Oracle, którym chcesz się połączyć. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleConnection> i wyświetla niektóre jego właściwości tylko do odczytu.  
  
 [!code-csharp[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.DataSource/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OracleClient.OracleConnection.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction distributedTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction distributedTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (distributedTransaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ distributedTransaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distributedTransaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="distributedTransaction">Odwołanie do istniejącej <see cref="T:System.EnterpriseServices.ITransaction" /> w którym można zarejestrować.</param>
        <summary>Rejestruje w określonym transakcji jako transakcji rozproszonej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nowy w ADO.NET 2.0 jest obsługa przy użyciu <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> metody można zarejestrować transakcji rozproszonej. Ponieważ współdziała on połączenie w <xref:System.Transactions.Transaction> wystąpienia, **EnlistTransaction** korzysta z funkcji dostępnych w <xref:System.Transactions> transakcji, dzięki czemu preferowane rozproszonychprzestrzeninazwdozarządzania** EnlistDistributedTransaction** w tym celu. Aby uzyskać więcej informacji, zobacz [transakcji rozproszonych](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 Możesz zarejestrować się w istniejących przy użyciu transakcji rozproszonych  
  
 <xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> Metoda po wyłączeniu automatycznej rejestracji. Rejestrowanie w istniejącej transakcji rozproszonych zapewnia, że jeśli transakcja jest zatwierdzona lub wycofana, zmiany dokonane przez kod w źródle danych są również zatwierdzenia lub wycofania.  
  
 <xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> Zwraca wyjątek, jeśli <xref:System.Data.OracleClient.OracleConnection> został już uruchomiony przy użyciu transakcji <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>. Jednak jeśli transakcja jest transakcji lokalnej rozpoczęty o godzinie źródło danych (na przykład, wykonując jawnie za pomocą instrukcji BEGIN TRANSACTION <xref:System.Data.OracleClient.OracleCommand> obiektu), <xref:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction%2A> wycofuje transakcji lokalnej i powoduje zarejestrowanie w istniejących transakcji rozproszonej jako żądanej. Nie otrzymasz powiadomienie, czy lokalny transakcja została wycofana i są odpowiedzialny za zarządzanie wszystkich transakcji lokalnej nie została uruchomiona przy użyciu <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">Odwołanie do istniejącej <see cref="T:System.Transactions.Transaction" /> w którym można zarejestrować.</param>
        <summary>Rejestruje w określonym transakcji jako transakcji rozproszonej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nowy w ADO.NET 2.0 jest obsługa przy użyciu  
  
 <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Metoda można zarejestrować transakcji rozproszonej. Ponieważ współdziała on połączenie w <xref:System.Transactions.Transaction> wystąpienia, **EnlistTransaction** korzysta z funkcji dostępnych w <xref:System.Transactions> transakcji, dzięki czemu preferowane rozproszonychprzestrzeninazwdozarządzania** EnlistDistributedTransaction**, który korzysta z **System.EnterpriseServices.ITransaction** obiektu. Ma również semantyki nieco inne: po połączenie jawnie jest zarejestrowana w transakcji, nie może być unenlisted lub zarejestrowany w innej transakcji, dopóki nie zakończy Pierwsza transakcja. Aby uzyskać więcej informacji na temat transakcji rozproszonych, zobacz [transakcje rozproszone](~/docs/framework/data/adonet/distributed-transactions.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca informacje o schemacie dla źródła danych to <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca informacje o schemacie dla źródła danych to <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
        <returns>A <see cref="T:System.Data.DataTable" /> zawierający informacje o schemacie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName">Określa nazwę schematu do zwrócenia.</param>
        <summary>Zwraca informacje o schemacie dla źródła danych to <see cref="T:System.Data.OracleClient.OracleConnection" /> przy użyciu określonego ciągu dla nazwy schematu.</summary>
        <returns>A <see cref="T:System.Data.DataTable" /> zawierający informacje o schemacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zapytania korzystające z <xref:System.Data.OracleClient.OracleConnection.GetSchema%2A> jest uwzględniana wielkość liter. Ze względu na sposób postępowania programu Oracle przypadków podczas tworzenia schematu może to prowadzić do nieoczekiwanych wyników.  
  
 Jeśli schemat został utworzony bez cudzysłowów`,` Oracle przechowuje nazwę obiektu wielkimi literami. Jeśli schemat został utworzony z cudzysłowami, Oracle przechowuje nazwę obiektu w małych i wielkich liter podane.  
  
 Załóżmy na przykład, można utworzyć tabeli o nazwie MyTable przy użyciu jednej z następujących dwóch instrukcji:  
  
 `CREATE TABLE MyTable ...`  
  
 `CREATE TABLE "MyTable" ...`  
  
 Aby pobrać informacje o tej tabeli za pomocą **GetSchema** metody w pierwszym przypadku należy przekazywane "MYTABLE" jako argumentu. W drugim przypadku trzeba przenieść "MyTable" jako argumentu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="collectionName" /> jest określony jako wartość null.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName">Określa nazwę schematu do zwrócenia.</param>
        <param name="restrictionValues">Zestaw wartości ograniczeń dla żądanego schematu.</param>
        <summary>Zwraca informacje o schemacie dla źródła danych to <see cref="T:System.Data.OracleClient.OracleConnection" /> przy użyciu określonego ciągu dla nazwy schematu i tablicy określony ciąg wartości ograniczeń.</summary>
        <returns>A <see cref="T:System.Data.DataTable" /> zawierający informacje o schemacie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `restrictionValues` Parametrów można podać głębokość n wartości, które są określone przez kolekcji ograniczeń dla określonej kolekcji. Aby ustawić wartości dla danego ograniczeń i nie ustawić wartości właściwości inne ograniczenia, należy ustawić poprzednich ograniczeń do wartości null, a następnie przekaż odpowiednią wartość w ograniczenia, które chcesz określić wartość.  
  
 Na przykład jest kolekcją "Tabele". Jeśli kolekcja "Tabele" ma ograniczenia 3: bazy danych, właściciela i nazwy tabeli; i chcesz odzyskać tylko w tabelach, które są skojarzone z właścicielem "Carl", a następnie będzie potrzebny do przekazywania następujące wartości (co najmniej): null, "Carl". Jeśli wartość ograniczenia nie jest przekazany, wartości domyślne są używane dla tego ograniczenia. To tego samego mapowania jako przekazywanie wartość null, która różni się od przekazywanie w ciągu pustego wartość parametru. W takim przypadku ciąg pusty ("") jest traktowany jako wartość parametru określony.  
  
 Zapytania korzystające z <xref:System.Data.OracleClient.OracleConnection.GetSchema%2A> jest uwzględniana wielkość liter. Ze względu na sposób postępowania programu Oracle przypadków podczas tworzenia schematu może to prowadzić do nieoczekiwanych wyników.  
  
 Jeśli schemat został utworzony bez cudzysłowów`,` Oracle przechowuje nazwę obiektu wielkimi literami. Jeśli schemat został utworzony z cudzysłowami, Oracle przechowuje nazwę obiektu w małych i wielkich liter podane.  
  
 Załóżmy na przykład, można utworzyć tabeli o nazwie MyTable przy użyciu jednej z następujących dwóch instrukcji:  
  
 `CREATE TABLE MyTable ...`  
  
 `CREATE TABLE "MyTable" ...`  
  
 Aby pobrać informacje o tej tabeli za pomocą **GetSchema** metody w pierwszym przypadku należy przekazywane "MYTABLE" jako argumentu. W drugim przypadku trzeba przenieść "MyTable" jako argumentu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="collectionName" /> jest określony jako wartość null.</exception>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.OracleClient.OracleInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.OracleClient.OracleInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.OracleClient.OracleConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As OracleInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::OracleClient::OracleInfoMessageEventHandler ^ InfoMessage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wysyła Oracle, ostrzeżenie lub komunikat informacyjny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ .NET Framework Data Provider for Oracle używa Oracle Call Interface (OCI), gdy dostawca danych odebraniu komunikatu Powodzenie z informacji <xref:System.Data.OracleClient.OracleConnection.InfoMessage> zostanie wygenerowane zdarzenie. Przykład czy tworzenia procedury przechowywanej, która zawiera błąd składniowy. Wywołanie <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> metody powiedzie się. Jednak <xref:System.Data.OracleClient.OracleConnection.InfoMessage> powinien zostać wygenerowany zdarzeń informujące o błąd składni.  
  
 Klienci, którzy Aby przetwarzać ostrzeżenia i komunikaty informacyjne wysyłane przez serwer powinien utworzyć <xref:System.Data.OracleClient.OracleInfoMessageEventHandler> delegata do nasłuchiwania do tego zdarzenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Otwiera połączenie z bazą danych przy użyciu ustawień właściwości określone przez <see cref="P:System.Data.OracleClient.OracleConnection.ConnectionString" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnection> Rysuje otwartego połączenia z puli połączeń, jeśli jest dostępny. W przeciwnym razie nawiązaniem nowego połączenia z bazą danych.  
  
> [!NOTE]
>  Jeśli <xref:System.Data.OracleClient.OracleConnection> zbliża się poza zakresem, reprezentuje połączenie nie jest zamykane automatycznie. W związku z tym należy jawnie zamknąć połączenie przez wywołanie metody <xref:System.Data.OracleClient.OracleConnection.Close%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Połączenie nie jest otwarty.</exception>
        <exception cref="T:System.Data.OracleClient.OracleException">Nie można zmienić bazy danych.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg zawierający wersję serwera, z którym klient jest połączony.</summary>
        <value>Wersja podłączony serwer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.OracleClient.OracleConnection.ServerVersion%2A> Właściwość jest w formacie wersji programu Oracle. Na przykład format wersji programu Oracle8 jest ciągiem w postaci "8.1.7.0.0 programu Oracle8 wersji 8.1.7.0.0 - produkcyjnych."  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.OracleClient.OracleConnection> i wyświetla niektóre jego właściwości tylko do odczytu.  
  
 [!code-csharp[Classic WebData OracleConnection.ServerVersion#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.ServerVersion/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.ServerVersion#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.ServerVersion/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Połączenie jest zamknięte.</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący stan połączenia.</summary>
        <value>Bitowe połączenie <see cref="T:System.Data.ConnectionState" /> wartości. Wartość domyślna to <see langword="Closed" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiany stanu dozwolone są następujące:  
  
-   Z `Closed` do `Open`za pomocą `Open` metody <xref:System.Data.OracleClient.OracleConnection> obiektu.  
  
-   Z `Open` do `Closed`za pomocą <xref:System.Data.OracleClient.OracleConnection.Close%2A> metody <xref:System.Data.OracleClient.OracleConnection> obiektu.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienie klasy pochodnej, <xref:System.Data.OracleClient.OracleConnection>, ustawia jego <xref:System.Data.IDbConnection.ConnectionString%2A>i wyświetla jego <xref:System.Data.OracleClient.OracleConnection.State%2A>.  
  
 [!code-csharp[Classic WebData OracleConnection.State#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OracleConnection.State/CS/source.cs#1)]
 [!code-vb[Classic WebData OracleConnection.State#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OracleConnection.State/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy obiekt, który jest kopią bieżącego wystąpienia.</summary>
        <returns>Nowy obiekt, który jest kopią tego wystąpienia...</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Data.OracleClient.OracleConnection> wystąpienia jest rzutowane na <xref:System.ICloneable> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>