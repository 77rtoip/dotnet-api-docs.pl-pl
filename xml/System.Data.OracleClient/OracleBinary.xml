<Type Name="OracleBinary" FullName="System.Data.OracleClient.OracleBinary">
  <TypeSignature Language="C#" Value="public struct OracleBinary : IComparable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit OracleBinary extends System.ValueType implements class System.Data.SqlTypes.INullable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleBinary" />
  <TypeSignature Language="VB.NET" Value="Public Structure OracleBinary&#xA;Implements IComparable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public value class OracleBinary : IComparable, System::Data::SqlTypes::INullable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c121c-101">Reprezentuje o zmiennej długości strumienia danych binarnych, które mają być przechowywane w lub pobrać z bazy danych.</span><span class="sxs-lookup"><span data-stu-id="c121c-101">Represents a variable-length stream of binary data to be stored in or retrieved from a database.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c121c-102">Aby uzyskać <xref:System.Data.OracleClient.OracleBinary> obiekt, należy wywołać <xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c121c-102">To obtain an <xref:System.Data.OracleClient.OracleBinary> object, call the <xref:System.Data.OracleClient.OracleDataReader.GetOracleBinary%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OracleBinary (byte[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (b As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OracleBinary(cli::array &lt;System::Byte&gt; ^ b);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="b" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="b"><span data-ttu-id="c121c-103">Tablica bajtów do zapisania w <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c121c-103">The byte array to be stored in the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property.</span></span></param>
        <summary><span data-ttu-id="c121c-104">Inicjuje nowe wystąpienie klasy <see langword="OracleBinary" /> struktury, ustawienie <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> zawartości tablicy bajtów podany dla właściwości.</span><span class="sxs-lookup"><span data-stu-id="c121c-104">Initializes a new instance of the <see langword="OracleBinary" /> structure, setting the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property to the contents of the supplied byte array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="c121c-105">Obiekt do porównania z tym <see langword="OracleBinary" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-105">The object to be compared to this <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="c121c-106">Porównuje to <see cref="T:System.Data.OracleClient.OracleBinary" /> obiekt do podanego obiektu i zwraca dane dotyczące ich względne wartości.</span><span class="sxs-lookup"><span data-stu-id="c121c-106">Compares this <see cref="T:System.Data.OracleClient.OracleBinary" /> object to the supplied object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="c121c-107">Podpisem liczbę określającą wartości względne <see langword="OracleBinary" /> struktury i obiektu.</span><span class="sxs-lookup"><span data-stu-id="c121c-107">A signed number indicating the relative values of this <see langword="OracleBinary" /> structure and the object.</span></span>  
  
 <span data-ttu-id="c121c-108"><list type="table"><listheader><term> Wartość zwracana</span><span class="sxs-lookup"><span data-stu-id="c121c-108"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="c121c-109"></term><description> Warunek</span><span class="sxs-lookup"><span data-stu-id="c121c-109"></term><description> Condition</span></span>  
  
 <span data-ttu-id="c121c-110"></description></listheader><item><term> Mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="c121c-110"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="c121c-111"></term><description> Wartość tego <see langword="OracleBinary" /> obiekt jest mniejszy niż obiekt.</span><span class="sxs-lookup"><span data-stu-id="c121c-111"></term><description> The value of this <see langword="OracleBinary" /> object is less than the object.</span></span>  
  
 <span data-ttu-id="c121c-112"></description></item><item><term> Zero</span><span class="sxs-lookup"><span data-stu-id="c121c-112"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="c121c-113"></term><description> To <see langword="OracleBinary" /> obiekt jest taki sam, jak obiekt.</span><span class="sxs-lookup"><span data-stu-id="c121c-113"></term><description> This <see langword="OracleBinary" /> object is the same as the object.</span></span>  
  
 <span data-ttu-id="c121c-114"></description></item><item><term> Większa niż zero</span><span class="sxs-lookup"><span data-stu-id="c121c-114"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="c121c-115"></term><description> To <see langword="OracleBinary" /> obiekt jest większy niż obiekt.</span><span class="sxs-lookup"><span data-stu-id="c121c-115"></term><description> This <see langword="OracleBinary" /> object is greater than the object.</span></span>  
  
 <span data-ttu-id="c121c-116">—lub—</span><span class="sxs-lookup"><span data-stu-id="c121c-116">-or-</span></span>  
  
 <span data-ttu-id="c121c-117">Obiekt jest odwołaniem o wartości zerowej.</span><span class="sxs-lookup"><span data-stu-id="c121c-117">The object is a null reference.</span></span>  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBinary Concat (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBinary Concat(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.Concat(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (x As OracleBinary, y As OracleBinary) As OracleBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBinary Concat(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c121c-118"><see langword="OracleBinary" /> Struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-118">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="c121c-119"><see langword="OracleBinary" /> Struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-119">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="c121c-120">Łączy dwa <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury tak, aby utworzyć nową <see langword="OracleBinary" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-120">Concatenates two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to create a new <see langword="OracleBinary" /> structure.</span></span></summary>
        <returns><span data-ttu-id="c121c-121"><see langword="OracleBinary" /> Struktury połączonych wartościami <paramref name="x" /> i <paramref name="y" /> parametrów.</span><span class="sxs-lookup"><span data-stu-id="c121c-121">An <see langword="OracleBinary" /> structure with the concatenated values of the <paramref name="x" /> and <paramref name="y" /> parameters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c121c-122">Porównuje dwa <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury tak, aby ustalić, czy są równe.</span><span class="sxs-lookup"><span data-stu-id="c121c-122">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c121c-123">Obiekt do porównania.</span><span class="sxs-lookup"><span data-stu-id="c121c-123">The object to be compared.</span></span></param>
        <summary><span data-ttu-id="c121c-124">Porównuje parametru podanego obiektu <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> właściwość <see cref="T:System.Data.OracleClient.OracleBinary" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c121c-124">Compares the supplied object parameter to the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleBinary" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="c121c-125"><see langword="true" /> Jeśli obiekt jest wystąpieniem <see cref="T:System.Data.OracleClient.OracleBinary" /> i są równe; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-125"><see langword="true" /> if object is an instance of <see cref="T:System.Data.OracleClient.OracleBinary" /> and the two are equal; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean Equals (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean Equals(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.Equals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean Equals(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c121c-126"><see langword="OracleBinary" /> Struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-126">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="c121c-127"><see langword="OracleBinary" /> Struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-127">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="c121c-128">Porównuje dwa <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury tak, aby ustalić, czy są równe.</span><span class="sxs-lookup"><span data-stu-id="c121c-128">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span></span></summary>
        <returns><span data-ttu-id="c121c-129"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> dwa wystąpienia są równe lub <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> dwa wystąpienia nie są równe.</span><span class="sxs-lookup"><span data-stu-id="c121c-129">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are not equal.</span></span> <span data-ttu-id="c121c-130">Jeśli wystąpienie albo <see langword="OracleBinary" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see langword="OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-130">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c121c-131">Zwraca wartość skrótu dla tego <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-131">Returns the hash code for this <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span></span></summary>
        <returns><span data-ttu-id="c121c-132">Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</span><span class="sxs-lookup"><span data-stu-id="c121c-132">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean GreaterThan (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean GreaterThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThan (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean GreaterThan(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c121c-133"><see langword="OracleBinary" /> Struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-133">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="c121c-134"><see langword="OracleBinary" /> Struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-134">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="c121c-135">Porównuje dwa <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury tak, aby określić, jeśli pierwsze jest większe od drugiego.</span><span class="sxs-lookup"><span data-stu-id="c121c-135">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than the second.</span></span></summary>
        <returns><span data-ttu-id="c121c-136"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> Jeśli pierwsze wystąpienie jest większa niż drugie wystąpienie, w przeciwnym razie <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-136">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="c121c-137">Jeśli wystąpienie albo <see langword="OracleBinary" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see langword="OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-137">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean GreaterThanOrEqual (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean GreaterThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThanOrEqual (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean GreaterThanOrEqual(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c121c-138"><see langword="OracleBinary" /> Struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-138">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="c121c-139"><see langword="OracleBinary" /> Struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-139">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="c121c-140">Porównuje dwa <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury tak, aby określić, jeśli pierwsze jest większe lub równe drugiemu.</span><span class="sxs-lookup"><span data-stu-id="c121c-140">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than or equal to the second.</span></span></summary>
        <returns><span data-ttu-id="c121c-141"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> Jeśli pierwsze wystąpienie jest większa niż lub równa drugie wystąpienie, w przeciwnym razie <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-141">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="c121c-142">Jeśli wystąpienie albo <see langword="OracleBinary" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see langword="OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-142">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c121c-143">Pobiera wartość wskazującą czy <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> właściwość <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="c121c-143">Gets a value indicating whether the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleBinary" /> structure is null.</span></span></summary>
        <value>
          <span data-ttu-id="c121c-144"><see langword="true" /> Jeśli <see langword="Value" /> ma wartość null, w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-144"><see langword="true" /> if <see langword="Value" /> is null, otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public byte this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte default[int] { System::Byte get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c121c-145">Pozycja bajtów, które mają zostać pobrane.</span><span class="sxs-lookup"><span data-stu-id="c121c-145">The position of the byte to be retrieved.</span></span></param>
        <summary><span data-ttu-id="c121c-146">Pobiera pojedynczy bajt z <see langword="Value" /> właściwości znajdujący się w pozycji parametru liczby całkowitej <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-146">Gets the single byte from the <see langword="Value" /> property located at the position indicated by the integer parameter, <paramref name="index" />.</span></span> <span data-ttu-id="c121c-147">Jeśli <paramref name="index" /> wskazuje położenie poza koniec tablicy bajtów jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="c121c-147">If <paramref name="index" /> indicates a position beyond the end of the byte array, an exception is raised.</span></span></summary>
        <value><span data-ttu-id="c121c-148">Bajt, znajdujący się w pozycji parametru liczby całkowitej.</span><span class="sxs-lookup"><span data-stu-id="c121c-148">The byte located at the position indicated by the integer parameter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c121c-149">Aby uniknąć wywoływanie `OracleNullValueException`, sprawdzać <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> właściwości i `Length` właściwości przed przeczytaniem `this`.</span><span class="sxs-lookup"><span data-stu-id="c121c-149">To avoid raising an `OracleNullValueException`, always check the <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> property and the `Length` property before reading `this`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c121c-150">Pobiera długość w bajtach <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c121c-150">Gets the length in bytes of the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property.</span></span> <span data-ttu-id="c121c-151">Ta właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c121c-151">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="c121c-152">Długość danych binarnych w <see langword="Value" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c121c-152">The length of the binary data in the <see langword="Value" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c121c-153">Aby uniknąć wywoływanie `OracleNullValueException`, sprawdzać <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> właściwości przed przeczytaniem `Length` właściwości.</span><span class="sxs-lookup"><span data-stu-id="c121c-153">To avoid raising an `OracleNullValueException`, always check the <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> property before reading the `Length` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean LessThan (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean LessThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThan (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean LessThan(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c121c-154"><see langword="OracleBinary" /> Struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-154">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="c121c-155"><see langword="OracleBinary" /> Struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-155">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="c121c-156">Porównuje dwa <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury tak, aby określić, jeśli pierwsze jest mniejsze od drugiego.</span><span class="sxs-lookup"><span data-stu-id="c121c-156">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than the second.</span></span></summary>
        <returns><span data-ttu-id="c121c-157"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> Jeśli początkowo mniejszej niż drugi jest wystąpienie, w przeciwnym razie <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-157">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="c121c-158">Jeśli wystąpienie albo <see langword="OracleBinary" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see langword="OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-158">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean LessThanOrEqual (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean LessThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThanOrEqual (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean LessThanOrEqual(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c121c-159"><see langword="OracleBinary" /> Struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-159">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="c121c-160"><see langword="OracleBinary" /> Struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-160">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="c121c-161">Porównuje dwa <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury tak, aby określić, jeśli pierwsze jest mniejsze niż drugi.</span><span class="sxs-lookup"><span data-stu-id="c121c-161">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than or equal to the second.</span></span></summary>
        <returns><span data-ttu-id="c121c-162"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> Jeśli pierwsze wystąpienie jest mniejsza niż drugie wystąpienie, w przeciwnym razie <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-162">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="c121c-163">Jeśli wystąpienie albo <see langword="OracleBinary" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see langword="OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-163">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotEquals">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean NotEquals (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.OracleClient.OracleBoolean NotEquals(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.NotEquals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotEquals (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean NotEquals(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c121c-164"><see langword="OracleBinary" /> Struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-164">An <see langword="OracleBinary" /> structure.</span></span></param>
        <param name="y"><span data-ttu-id="c121c-165"><see langword="OracleBinary" /> Struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-165">An <see langword="OracleBinary" /> structure.</span></span></param>
        <summary><span data-ttu-id="c121c-166">Porównuje dwa <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury tak, aby określić, jeśli nie są takie same.</span><span class="sxs-lookup"><span data-stu-id="c121c-166">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are not equal.</span></span></summary>
        <returns><span data-ttu-id="c121c-167"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> dwa wystąpienia nie są równe lub <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> dwa wystąpienia są równe.</span><span class="sxs-lookup"><span data-stu-id="c121c-167">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal.</span></span> <span data-ttu-id="c121c-168">Jeśli wystąpienie albo <see langword="OracleBinary" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see langword="OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-168">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleBinary Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Data.OracleClient.OracleBinary Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleBinary.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleBinary " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleBinary Null;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c121c-169">Reprezentuje wartość null, które mogą być przypisane do <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> właściwość <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-169">Represents a null value that can be assigned to the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of an <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c121c-170">`Null` działa jako stała dla `OracleBinary` struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-170">`Null` functions as a constant for the `OracleBinary` structure.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.OracleClient.OracleBinary.IsNull" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBinary operator + (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBinary op_Addition(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Addition(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (x As OracleBinary, y As OracleBinary) As OracleBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBinary operator +(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c121c-171"><see langword="OracleBinary" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="c121c-171">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="c121c-172"><see langword="OracleBinary" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="c121c-172">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="c121c-173">Łączy dwa <see cref="T:System.Data.OracleClient.OracleBinary" /> parametrów do utworzenia nowego <see langword="OracleBinary" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-173">Concatenates the two <see cref="T:System.Data.OracleClient.OracleBinary" /> parameters to create a new <see langword="OracleBinary" /> structure.</span></span></summary>
        <returns><span data-ttu-id="c121c-174">Połączone wartości <paramref name="x" /> i <paramref name="y" /> parametrów.</span><span class="sxs-lookup"><span data-stu-id="c121c-174">The concatenated values of the <paramref name="x" /> and <paramref name="y" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c121c-175">`x` będą występować jako pierwszy w wynikowym `OracleBinary`, a następnie `y`.</span><span class="sxs-lookup"><span data-stu-id="c121c-175">`x` will appear first in the resulting `OracleBinary`, followed by `y`.</span></span>  
  
 <span data-ttu-id="c121c-176">[Visual Basic]</span><span class="sxs-lookup"><span data-stu-id="c121c-176">[Visual Basic]</span></span>  
  
 <span data-ttu-id="c121c-177">W języku Visual Basic można używać operatorów zdefiniowanych przez klasę, ale nie można zastąpić je lub Utwórz swój własny.</span><span class="sxs-lookup"><span data-stu-id="c121c-177">In Visual Basic, you can use the operators defined by a class, but you cannot override them or create your own.</span></span>  
  
 <span data-ttu-id="c121c-178">Jest równoważne metodę dla tego operatora <xref:System.Data.OracleClient.OracleBinary.Concat%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c121c-178">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.Concat%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator == (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_Equality(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Equality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator ==(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c121c-179"><see langword="OracleBinary" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="c121c-179">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="c121c-180"><see langword="OracleBinary" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="c121c-180">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="c121c-181">Porównuje dwa <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury tak, aby ustalić, czy są równe.</span><span class="sxs-lookup"><span data-stu-id="c121c-181">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span></span></summary>
        <returns><span data-ttu-id="c121c-182"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> dwa wystąpienia są równe lub <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> dwa wystąpienia nie są równe.</span><span class="sxs-lookup"><span data-stu-id="c121c-182">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are not equal.</span></span> <span data-ttu-id="c121c-183">Jeśli wystąpienie albo <see langword="OracleBinary" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see langword="OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-183">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="c121c-184">Jest równoważne metodę dla tego operatora <xref:System.Data.OracleClient.OracleBinary.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c121c-184">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte[] (System.Data.OracleClient.OracleBinary x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8[] op_Explicit(valuetype System.Data.OracleClient.OracleBinary x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Explicit(System.Data.OracleClient.OracleBinary)~System.Byte[]" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (x As OracleBinary) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator cli::array &lt;System::Byte&gt; ^(System::Data::OracleClient::OracleBinary x);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c121c-185"><see cref="T:System.Data.OracleClient.OracleBinary" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-185">An <see cref="T:System.Data.OracleClient.OracleBinary" />.</span></span></param>
        <summary><span data-ttu-id="c121c-186">Pobiera zawartość <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> właściwość <see cref="T:System.Data.OracleClient.OracleBinary" /> parametr jako tablicę bajtów.</span><span class="sxs-lookup"><span data-stu-id="c121c-186">Gets the contents of the <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleBinary" /> parameter as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="c121c-187">Tablica bajtów.</span><span class="sxs-lookup"><span data-stu-id="c121c-187">An array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c121c-188">[Visual Basic]</span><span class="sxs-lookup"><span data-stu-id="c121c-188">[Visual Basic]</span></span>  
  
 <span data-ttu-id="c121c-189">W języku Visual Basic można używać konwersje zdefiniowane przez klasę, ale nie można zastąpić je lub Utwórz swój własny.</span><span class="sxs-lookup"><span data-stu-id="c121c-189">In Visual Basic, you can use the conversions defined by the class, but you cannot override them or create your own.</span></span> <span data-ttu-id="c121c-190">Jeśli ustawiono wartość Option Strict, należy użyć \<CType operator > Aby przekonwertować <xref:System.Data.OracleClient.OracleBinary> do obiektu binarnego.</span><span class="sxs-lookup"><span data-stu-id="c121c-190">If Option Strict is set, you must use the \<CType operator> to convert the <xref:System.Data.OracleClient.OracleBinary> to a binary object.</span></span>  
  
 <span data-ttu-id="c121c-191">Jest równoważne metodę dla tego operatora <xref:System.Data.OracleClient.OracleBinary.Value?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c121c-191">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.Value?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &gt; (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_GreaterThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &gt;(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c121c-192"><see langword="OracleBinary" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="c121c-192">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="c121c-193"><see langword="OracleBinary" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="c121c-193">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="c121c-194">Porównuje dwa <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury tak, aby określić, jeśli pierwsze jest większe od drugiego.</span><span class="sxs-lookup"><span data-stu-id="c121c-194">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than the second.</span></span></summary>
        <returns><span data-ttu-id="c121c-195"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> Jeśli pierwsze wystąpienie jest większa niż drugie wystąpienie, w przeciwnym razie <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-195">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="c121c-196">Jeśli wystąpienie albo <see langword="OracleBinary" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see langword="OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-196">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="c121c-197">Jest równoważne metodę dla tego operatora <xref:System.Data.OracleClient.OracleBinary.GreaterThan%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c121c-197">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.GreaterThan%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &gt;= (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_GreaterThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &gt;=(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c121c-198"><see langword="OracleBinary" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="c121c-198">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="c121c-199"><see langword="OracleBinary" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="c121c-199">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="c121c-200">Porównuje dwa <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury tak, aby określić, jeśli pierwsze jest większe lub równe drugiemu.</span><span class="sxs-lookup"><span data-stu-id="c121c-200">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is greater than or equal to the second.</span></span></summary>
        <returns><span data-ttu-id="c121c-201"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> Jeśli pierwsze wystąpienie jest większa niż lub równa drugie wystąpienie, w przeciwnym razie <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-201">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="c121c-202">Jeśli wystąpienie albo <see langword="OracleBinary" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see langword="OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-202">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="c121c-203">Jest równoważne metodę dla tego operatora <xref:System.Data.OracleClient.OracleBinary.GreaterThanOrEqual%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c121c-203">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.GreaterThanOrEqual%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Data.OracleClient.OracleBinary (byte[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBinary op_Implicit(unsigned int8[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Implicit(System.Byte[])~System.Data.OracleClient.OracleBinary" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (b As Byte()) As OracleBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Data::OracleClient::OracleBinary(cli::array &lt;System::Byte&gt; ^ b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="b"><span data-ttu-id="c121c-204">Tablica bajtów do skonwertowania.</span><span class="sxs-lookup"><span data-stu-id="c121c-204">The array of bytes to be converted.</span></span></param>
        <summary><span data-ttu-id="c121c-205">Konwertuje tablicę bajtów do <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-205">Converts an array of bytes to an <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span></span></summary>
        <returns><span data-ttu-id="c121c-206"><see langword="OracleBinary" /> Strukturę, która reprezentuje przekonwertowanego tablicę bajtów.</span><span class="sxs-lookup"><span data-stu-id="c121c-206">An <see langword="OracleBinary" /> structure that represents the converted array of bytes.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator != (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_Inequality(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_Inequality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator !=(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c121c-207"><see langword="OracleBinary" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="c121c-207">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="c121c-208"><see langword="OracleBinary" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="c121c-208">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="c121c-209">Porównuje dwa <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury tak, aby ustalić, czy są równe.</span><span class="sxs-lookup"><span data-stu-id="c121c-209">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if they are equal.</span></span></summary>
        <returns><span data-ttu-id="c121c-210"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> dwa wystąpienia nie są równe lub <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> dwa wystąpienia są równe.</span><span class="sxs-lookup"><span data-stu-id="c121c-210">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal.</span></span> <span data-ttu-id="c121c-211">Jeśli wystąpienie albo <see langword="OracleBinary" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see langword="OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-211">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="c121c-212">Jest równoważne metodę dla tego operatora <xref:System.Data.OracleClient.OracleBinary.NotEquals%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c121c-212">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.NotEquals%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &lt; (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_LessThan(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &lt;(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c121c-213"><see langword="OracleBinary" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="c121c-213">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="c121c-214"><see langword="OracleBinary" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="c121c-214">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="c121c-215">Porównuje dwa <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury tak, aby określić, jeśli pierwsze jest mniejsze od drugiego.</span><span class="sxs-lookup"><span data-stu-id="c121c-215">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than the second.</span></span></summary>
        <returns><span data-ttu-id="c121c-216"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> Jeśli początkowo mniejszej niż drugi jest wystąpienie, w przeciwnym razie <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-216">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="c121c-217">Jeśli wystąpienie albo <see langword="OracleBinary" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see langword="OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-217">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="c121c-218">Jest równoważne metodę dla tego operatora <xref:System.Data.OracleClient.OracleBinary.LessThan%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c121c-218">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.LessThan%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.OracleClient.OracleBoolean operator &lt;= (System.Data.OracleClient.OracleBinary x, System.Data.OracleClient.OracleBinary y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.OracleClient.OracleBoolean op_LessThanOrEqual(valuetype System.Data.OracleClient.OracleBinary x, valuetype System.Data.OracleClient.OracleBinary y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleBinary.op_LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (x As OracleBinary, y As OracleBinary) As OracleBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::OracleClient::OracleBoolean operator &lt;=(System::Data::OracleClient::OracleBinary x, System::Data::OracleClient::OracleBinary y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.OracleClient.OracleBinary" />
        <Parameter Name="y" Type="System.Data.OracleClient.OracleBinary" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c121c-219"><see langword="OracleBinary" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="c121c-219">An <see langword="OracleBinary" /> object.</span></span></param>
        <param name="y"><span data-ttu-id="c121c-220"><see langword="OracleBinary" /> Obiektu.</span><span class="sxs-lookup"><span data-stu-id="c121c-220">An <see langword="OracleBinary" /> object.</span></span></param>
        <summary><span data-ttu-id="c121c-221">Porównuje dwa <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury tak, aby określić, jeśli pierwsze jest mniejsze niż drugi.</span><span class="sxs-lookup"><span data-stu-id="c121c-221">Compares two <see cref="T:System.Data.OracleClient.OracleBinary" /> structures to determine if the first is less than or equal to the second.</span></span></summary>
        <returns><span data-ttu-id="c121c-222"><see cref="T:System.Data.OracleClient.OracleBoolean" /> Czyli <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> Jeśli pierwsze wystąpienie jest mniejsza niż drugie wystąpienie, w przeciwnym razie <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-222">An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />.</span></span> <span data-ttu-id="c121c-223">Jeśli wystąpienie albo <see langword="OracleBinary" /> ma wartość null, <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> z <see langword="OracleBoolean" /> będzie <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span><span class="sxs-lookup"><span data-stu-id="c121c-223">If either instance of <see langword="OracleBinary" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see langword="OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="c121c-224">Jest równoważne metodę dla tego operatora <xref:System.Data.OracleClient.OracleBinary.LessThanOrEqual%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c121c-224">The equivalent method for this operator is <xref:System.Data.OracleClient.OracleBinary.LessThanOrEqual%28System.Data.OracleClient.OracleBinary%2CSystem.Data.OracleClient.OracleBinary%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public byte[] Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleBinary.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Value { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c121c-225">Pobiera wartość <see cref="T:System.Data.OracleClient.OracleBinary" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-225">Gets the value of the <see cref="T:System.Data.OracleClient.OracleBinary" /> structure.</span></span> <span data-ttu-id="c121c-226">Ta właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c121c-226">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="c121c-227">Wartość <see langword="OracleBinary" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="c121c-227">The value of the <see langword="OracleBinary" /> structure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c121c-228">Aby uniknąć wywoływanie `OracleNullValueException`, sprawdzać <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> właściwości przed przeczytaniem `Value` właściwości.</span><span class="sxs-lookup"><span data-stu-id="c121c-228">To avoid raising an `OracleNullValueException`, always check the <xref:System.Data.OracleClient.OracleBinary.IsNull%2A> property before reading the `Value` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>