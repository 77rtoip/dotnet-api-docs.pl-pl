<Type Name="ManagementObjectCollection" FullName="System.Management.ManagementObjectCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4ff0926e6f8b27328c9b246bf769232acb680dc" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69116696" /></Metadata><TypeSignature Language="C#" Value="public class ManagementObjectCollection : IDisposable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementObjectCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementObjectCollection&#xA;Implements ICollection, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementObjectCollection : IDisposable, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type ManagementObjectCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="bac6b-101">Reprezentuje różne kolekcje obiektów zarządzania pobrane za pomocą usługi WMI.</span><span class="sxs-lookup"><span data-stu-id="bac6b-101">Represents different collections of management objects retrieved through WMI.</span></span> <span data-ttu-id="bac6b-102">Obiekty w tej kolekcji są <see cref="T:System.Management.ManagementBaseObject" />typami pochodnymi, w tym <see cref="T:System.Management.ManagementObject" /> i <see cref="T:System.Management.ManagementClass" />.</span><span class="sxs-lookup"><span data-stu-id="bac6b-102">The objects in this collection are of <see cref="T:System.Management.ManagementBaseObject" />-derived types, including <see cref="T:System.Management.ManagementObject" /> and <see cref="T:System.Management.ManagementClass" />.</span></span> <span data-ttu-id="bac6b-103">Kolekcja może być wynikiem kwerendy usługi WMI wykonywanej przez <see cref="T:System.Management.ManagementObjectSearcher" />program lub wyliczeniem obiektów zarządzania określonego typu pobranego <see cref="T:System.Management.ManagementClass" /> za pomocą reprezentujący ten typ.</span><span class="sxs-lookup"><span data-stu-id="bac6b-103">The collection can be the result of a WMI query executed through a <see cref="T:System.Management.ManagementObjectSearcher" />, or an enumeration of management objects of a specified type retrieved through a <see cref="T:System.Management.ManagementClass" /> representing that type.</span></span> <span data-ttu-id="bac6b-104">Ponadto może to być kolekcja obiektów zarządzania związana w określony sposób z określonym obiektem zarządzania — w tym przypadku zbieranie jest pobierane za pomocą metody takiej jak <see cref="M:System.Management.ManagementObject.GetRelated" />.</span><span class="sxs-lookup"><span data-stu-id="bac6b-104">In addition, this can be a collection of management objects related in a specified way to a specific management object - in this case the collection would be retrieved through a method such as <see cref="M:System.Management.ManagementObject.GetRelated" />.</span></span> <span data-ttu-id="bac6b-105">Kolekcję można przeszukiwać przy użyciu <see cref="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator" /> obiektów i, które mogą być kontrolowane lub manipulowane różnymi zadaniami zarządzania.</span><span class="sxs-lookup"><span data-stu-id="bac6b-105">The collection can be walked using the <see cref="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator" /> and objects in it can be inspected or manipulated for various management tasks.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bac6b-106">Kopiuje kolekcję do tablicy.</span><span class="sxs-lookup"><span data-stu-id="bac6b-106">Copies the collection to an array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="managementObjectCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="bac6b-107">Tablica, do której mają zostać skopiowane.</span><span class="sxs-lookup"><span data-stu-id="bac6b-107">An array to copy to.</span></span></param>
        <param name="index"><span data-ttu-id="bac6b-108">Indeks do uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="bac6b-108">The index to start from.</span></span></param>
        <summary><span data-ttu-id="bac6b-109">Kopiuje kolekcję do tablicy.</span><span class="sxs-lookup"><span data-stu-id="bac6b-109">Copies the collection to an array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="bac6b-110">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="bac6b-110">.NET Framework Security</span></span>  
 <span data-ttu-id="bac6b-111">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="bac6b-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="bac6b-112">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="bac6b-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="bac6b-113">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="bac6b-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Management.ManagementBaseObject[] objectCollection, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Management.ManagementBaseObject[] objectCollection, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (objectCollection As ManagementBaseObject(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Management::ManagementBaseObject ^&gt; ^ objectCollection, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Management.ManagementBaseObject[] * int -&gt; unit" Usage="managementObjectCollection.CopyTo (objectCollection, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectCollection" Type="System.Management.ManagementBaseObject[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="objectCollection"><span data-ttu-id="bac6b-114">Tablica docelowa.</span><span class="sxs-lookup"><span data-stu-id="bac6b-114">The target array.</span></span></param>
        <param name="index"><span data-ttu-id="bac6b-115">Indeks do uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="bac6b-115">The index to start from.</span></span></param>
        <summary><span data-ttu-id="bac6b-116">Kopiuje elementy w kolekcji do <see cref="T:System.Management.ManagementBaseObject" /> tablicy.</span><span class="sxs-lookup"><span data-stu-id="bac6b-116">Copies the items in the collection to a <see cref="T:System.Management.ManagementBaseObject" /> array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="bac6b-117">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="bac6b-117">.NET Framework Security</span></span>  
 <span data-ttu-id="bac6b-118">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="bac6b-118">Full trust for the immediate caller.</span></span> <span data-ttu-id="bac6b-119">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="bac6b-119">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="bac6b-120">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="bac6b-120">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementObjectCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Management.ManagementObjectCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bac6b-121">Pobiera wartość wskazującą liczbę obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="bac6b-121">Gets a value indicating the number of objects in the collection.</span></span></summary>
        <value><span data-ttu-id="bac6b-122">Liczba obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="bac6b-122">The number of objects in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bac6b-123">Ta właściwość jest bardzo kosztowna — wymaga, aby wszystkie elementy członkowskie kolekcji były wyliczane.</span><span class="sxs-lookup"><span data-stu-id="bac6b-123">This property is very expensive - it requires that all members of the collection be enumerated.</span></span>  
  
## <a name="property-value"></a><span data-ttu-id="bac6b-124">Wartość właściwości</span><span class="sxs-lookup"><span data-stu-id="bac6b-124">Property Value</span></span>  
 <span data-ttu-id="bac6b-125">Liczba obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="bac6b-125">The number of objects in the collection.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="bac6b-126">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="bac6b-126">.NET Framework Security</span></span>  
 <span data-ttu-id="bac6b-127">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="bac6b-127">Full trust for the immediate caller.</span></span> <span data-ttu-id="bac6b-128">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="bac6b-128">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="bac6b-129">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="bac6b-129">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="managementObjectCollection.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bac6b-130">Zwalnia zasoby skojarzone z tym obiektem.</span><span class="sxs-lookup"><span data-stu-id="bac6b-130">Releases resources associated with this object.</span></span> <span data-ttu-id="bac6b-131">Po wywołaniu tej metody próba użycia tego obiektu zostanie <see cref="T:System.ObjectDisposedException" /> wygenerowane.</span><span class="sxs-lookup"><span data-stu-id="bac6b-131">After this method has been called, an attempt to use this object will result in an <see cref="T:System.ObjectDisposedException" /> being thrown.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="bac6b-132">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="bac6b-132">.NET Framework Security</span></span>  
 <span data-ttu-id="bac6b-133">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="bac6b-133">Full trust for the immediate caller.</span></span> <span data-ttu-id="bac6b-134">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="bac6b-134">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="bac6b-135">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="bac6b-135">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IDisposable.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ManagementObjectCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ManagementObjectCollection ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="managementObjectCollection.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bac6b-136">Usuwa zasoby, które obiekt jest w posiadaniu.</span><span class="sxs-lookup"><span data-stu-id="bac6b-136">Disposes of resources the object is holding.</span></span> <span data-ttu-id="bac6b-137">Jest to destruktor dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="bac6b-137">This is the destructor for the object.</span></span> <span data-ttu-id="bac6b-138">Finalizatory są wyrażane przy użyciu składni destruktora.</span><span class="sxs-lookup"><span data-stu-id="bac6b-138">Finalizers are expressed using destructor syntax.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="bac6b-139">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="bac6b-139">.NET Framework Security</span></span>  
 <span data-ttu-id="bac6b-140">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="bac6b-140">Full trust for the immediate caller.</span></span> <span data-ttu-id="bac6b-141">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="bac6b-141">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="bac6b-142">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="bac6b-142">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection.ManagementObjectEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection/ManagementObjectEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As ManagementObjectCollection.ManagementObjectEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection::ManagementObjectEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Management.ManagementObjectCollection.ManagementObjectEnumerator" Usage="managementObjectCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection+ManagementObjectEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bac6b-143">Zwraca moduł wyliczający dla kolekcji.</span><span class="sxs-lookup"><span data-stu-id="bac6b-143">Returns the enumerator for the collection.</span></span></summary>
        <returns><span data-ttu-id="bac6b-144"><see cref="T:System.Collections.IEnumerator" /> , Który może być używany do iteracji kolekcji.</span><span class="sxs-lookup"><span data-stu-id="bac6b-144">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bac6b-145">Można tylko wykonać iterację (jak w Visual Basic instrukcji `For Each` .NET C# `For` lub instrukcji) za pomocą modułu wyliczającego tylko do przodu.</span><span class="sxs-lookup"><span data-stu-id="bac6b-145">You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time.</span></span> <span data-ttu-id="bac6b-146">Pamięć zawierająca wystąpienia jest wydawana przez usługę WMI, aby nie można było oddzielić modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="bac6b-146">The memory containing the instances is released by WMI so that the enumerator cannot be rewound.</span></span> <span data-ttu-id="bac6b-147">W związku z <xref:System.Management.ManagementObjectCollection.Count%2A> tym nie można użyć metody, ponieważ wymaga ona odwinięcia modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="bac6b-147">Therefore, the <xref:System.Management.ManagementObjectCollection.Count%2A> method cannot be used since it requires rewinding the enumerator.</span></span>  
  
 <span data-ttu-id="bac6b-148">Moduły wyliczające tylko do przodu są zwykle znacznie szybsze i używają mniej pamięci niż konwencjonalne moduły wyliczające, ale nie zezwalają na <xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset%2A>wywołania.</span><span class="sxs-lookup"><span data-stu-id="bac6b-148">Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to  <xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset%2A>.</span></span>  
  
 <span data-ttu-id="bac6b-149">W przypadku odwinięcia modułu wyliczającego obiekty w kolekcji będą dostępne dla wielu wyliczeń.</span><span class="sxs-lookup"><span data-stu-id="bac6b-149">If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="bac6b-150">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="bac6b-150">.NET Framework Security</span></span>  
 <span data-ttu-id="bac6b-151">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="bac6b-151">Full trust for the immediate caller.</span></span> <span data-ttu-id="bac6b-152">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="bac6b-152">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="bac6b-153">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="bac6b-153">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementObjectCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Management.ManagementObjectCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bac6b-154">Pobiera wartość wskazującą, czy obiekt jest synchronizowany (bezpieczny wątkowo).</span><span class="sxs-lookup"><span data-stu-id="bac6b-154">Gets a value that indicates whether the object is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="bac6b-155"><see langword="true" />Jeśli obiekt jest synchronizowany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="bac6b-155"><see langword="true" /> if the object is synchronized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="bac6b-156">Wartość właściwości</span><span class="sxs-lookup"><span data-stu-id="bac6b-156">Property Value</span></span>  
 <span data-ttu-id="bac6b-157">`true`, jeśli obiekt jest zsynchronizowany, w `false`przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="bac6b-157">`true`, if the object is synchronized, otherwise `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="bac6b-158">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="bac6b-158">.NET Framework Security</span></span>  
 <span data-ttu-id="bac6b-159">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="bac6b-159">Full trust for the immediate caller.</span></span> <span data-ttu-id="bac6b-160">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="bac6b-160">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="bac6b-161">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="bac6b-161">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementObjectCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Management.ManagementObjectCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bac6b-162">Pobiera obiekt, który ma być używany do synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="bac6b-162">Gets the object to be used for synchronization.</span></span></summary>
        <value><span data-ttu-id="bac6b-163">Obiekt, który może być używany do synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="bac6b-163">An object that can be used for synchronization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="bac6b-164">Wartość właściwości</span><span class="sxs-lookup"><span data-stu-id="bac6b-164">Property Value</span></span>  
 <span data-ttu-id="bac6b-165">Obiekt, który ma być używany do synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="bac6b-165">The object to be used for synchronization.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="bac6b-166">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="bac6b-166">.NET Framework Security</span></span>  
 <span data-ttu-id="bac6b-167">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="bac6b-167">Full trust for the immediate caller.</span></span> <span data-ttu-id="bac6b-168">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="bac6b-168">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="bac6b-169">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="bac6b-169">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bac6b-170">Zwraca wartość <see cref="T:System.Management.ManagementObjectCollection" />, która wykonuje iterację przez. <see cref="T:System.Collections.IEnumerator" /></span><span class="sxs-lookup"><span data-stu-id="bac6b-170">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.ManagementObjectCollection" />.</span></span></summary>
        <returns><span data-ttu-id="bac6b-171"><see cref="T:System.Collections.IEnumerator" /> Dla .<see cref="T:System.Management.ManagementObjectCollection" /></span><span class="sxs-lookup"><span data-stu-id="bac6b-171">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.ManagementObjectCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bac6b-172">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="bac6b-172">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="bac6b-173">Instrukcja języka(`for each` w Visual Basic) ukrywa złożoność modułów wyliczających. C# `foreach`</span><span class="sxs-lookup"><span data-stu-id="bac6b-173">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="bac6b-174">W związku z `foreach` tym zaleca się użycie zamiast bezpośredniego manipulowania modułem wyliczającym.</span><span class="sxs-lookup"><span data-stu-id="bac6b-174">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="bac6b-175">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="bac6b-175">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="bac6b-176">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="bac6b-176">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="bac6b-177"><xref:System.Collections.IEnumerator.Reset%2A>przywraca również moduł wyliczający z powrotem do tego położenia.</span><span class="sxs-lookup"><span data-stu-id="bac6b-177"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="bac6b-178">W tym miejscu wywołanie <xref:System.Collections.IEnumerator.Current%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="bac6b-178">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="bac6b-179">W związku z tym przed <xref:System.Collections.IEnumerator.MoveNext%2A> przeczytaniem <xref:System.Collections.IEnumerator.Current%2A>wartości parametru należy wywołać metodę wyliczającą do pierwszego elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="bac6b-179">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="bac6b-180"><xref:System.Collections.IEnumerator.Current%2A>zwraca ten sam obiekt do <xref:System.Collections.IEnumerator.MoveNext%2A> momentu <xref:System.Collections.IEnumerator.Reset%2A> wywołania metody lub.</span><span class="sxs-lookup"><span data-stu-id="bac6b-180"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="bac6b-181"><xref:System.Collections.IEnumerator.MoveNext%2A>ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="bac6b-181"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="bac6b-182">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje koniec kolekcji, moduł wyliczający jest umieszczony po ostatnim elemencie w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="bac6b-182">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="bac6b-183">Gdy moduł wyliczający znajduje się w tym miejscu, kolejne <xref:System.Collections.IEnumerator.MoveNext%2A> wywołania również `false`zwracają.</span><span class="sxs-lookup"><span data-stu-id="bac6b-183">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="bac6b-184">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócone `false`, wywołanie <xref:System.Collections.IEnumerator.Current%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="bac6b-184">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="bac6b-185">Aby ponownie <xref:System.Collections.IEnumerator.Current%2A> ustawić na pierwszy element kolekcji, możesz wywołać metodę <xref:System.Collections.IEnumerator.Reset%2A> i <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="bac6b-185">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="bac6b-186">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="bac6b-186">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="bac6b-187">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie lub usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniony i następne wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> wygeneruje <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="bac6b-187">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="bac6b-188">Jeśli kolekcja zostanie zmodyfikowana między <xref:System.Collections.IEnumerator.MoveNext%2A> i <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> zwraca element, który jest ustawiony na, nawet jeśli moduł wyliczający jest już unieważniony.</span><span class="sxs-lookup"><span data-stu-id="bac6b-188">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="bac6b-189">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji; w związku z tym Wyliczanie za pomocą kolekcji nie jest w sposób bezpieczny dla wątków.</span><span class="sxs-lookup"><span data-stu-id="bac6b-189">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="bac6b-190">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="bac6b-190">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="bac6b-191">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="bac6b-191">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="bac6b-192">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="bac6b-192">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
