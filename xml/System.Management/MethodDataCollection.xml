<Type Name="MethodDataCollection" FullName="System.Management.MethodDataCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2b78f0d89ce043c7a18a2344c146cae6b64b47d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36554338" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MethodDataCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MethodDataCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Management.MethodDataCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class MethodDataCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class MethodDataCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type MethodDataCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="b1c52-101">Reprezentuje zestaw metod w kolekcji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b1c52-101">Represents the set of methods available in the collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b1c52-102">Poniższy przykład zawiera informacje o **Win32_Process.Create** przy użyciu metody <xref:System.Management.MethodData> klasy.</span><span class="sxs-lookup"><span data-stu-id="b1c52-102">The following example lists information about the **Win32_Process.Create** method using the <xref:System.Management.MethodData> class.</span></span> <span data-ttu-id="b1c52-103">Aby uzyskać więcej informacji na temat **Win32_Process** , zobacz dokumentację Instrumentacji zarządzania Windows w bibliotece MSDN pod http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="b1c52-103">For more information on the **Win32_Process** class, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span>  
  
 [!code-csharp[wminet_MethodDataCollection#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_MethodDataCollection/cs/MethodDataCollection.cs#1)]
 [!code-vb[wminet_MethodDataCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_MethodDataCollection/vb/MethodDataCollection.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b1c52-104">Dodaje <see cref="T:System.Management.MethodData" /> do obiektu <see cref="T:System.Management.MethodDataCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-104">Adds a <see cref="T:System.Management.MethodData" /> object to the <see cref="T:System.Management.MethodDataCollection" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ methodName);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; unit&#xA;override this.Add : string -&gt; unit" Usage="methodDataCollection.Add methodName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="b1c52-105">Nazwa metody w celu dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-105">The name of the method to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1c52-106">Dodaje <see cref="T:System.Management.MethodData" /> do <see cref="T:System.Management.MethodDataCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-106">Adds a <see cref="T:System.Management.MethodData" /> to the <see cref="T:System.Management.MethodDataCollection" />.</span>
          </span>
          <span data-ttu-id="b1c52-107">To przeciążenie doda nową metodę bez parametrów w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-107">This overload will add a new method with no parameters to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c52-108">Dodawanie <xref:System.Management.MethodData> obiekty do <xref:System.Management.MethodDataCollection> może został przeprowadzona tylko, jeśli klasa nie ma żadnych wystąpień.</span><span class="sxs-lookup"><span data-stu-id="b1c52-108">Adding <xref:System.Management.MethodData> objects to the <xref:System.Management.MethodDataCollection> can only be done when the class has no instances.</span></span> <span data-ttu-id="b1c52-109">Innym przypadku wystąpi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="b1c52-109">Any other case will result in an exception.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="b1c52-110">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="b1c52-110">.NET Framework Security</span></span>  
 <span data-ttu-id="b1c52-111">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="b1c52-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="b1c52-112">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="b1c52-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b1c52-113">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="b1c52-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string methodName, System.Management.ManagementBaseObject inParameters, System.Management.ManagementBaseObject outParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string methodName, class System.Management.ManagementBaseObject inParameters, class System.Management.ManagementBaseObject outParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.Add(System.String,System.Management.ManagementBaseObject,System.Management.ManagementBaseObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (methodName As String, inParameters As ManagementBaseObject, outParameters As ManagementBaseObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ methodName, System::Management::ManagementBaseObject ^ inParameters, System::Management::ManagementBaseObject ^ outParameters);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * System.Management.ManagementBaseObject * System.Management.ManagementBaseObject -&gt; unit&#xA;override this.Add : string * System.Management.ManagementBaseObject * System.Management.ManagementBaseObject -&gt; unit" Usage="methodDataCollection.Add (methodName, inParameters, outParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="inParameters" Type="System.Management.ManagementBaseObject" />
        <Parameter Name="outParameters" Type="System.Management.ManagementBaseObject" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="b1c52-114">Nazwa metody w celu dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-114">The name of the method to add.</span>
          </span>
        </param>
        <param name="inParameters">
          <span data-ttu-id="b1c52-115">
            <see cref="T:System.Management.ManagementBaseObject" /> Zawierający parametry wejściowe metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-115">The <see cref="T:System.Management.ManagementBaseObject" /> holding the input parameters to the method.</span>
          </span>
        </param>
        <param name="outParameters">
          <span data-ttu-id="b1c52-116">
            <see cref="T:System.Management.ManagementBaseObject" /> Zawierający parametry wyjściowe metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-116">The <see cref="T:System.Management.ManagementBaseObject" /> holding the output parameters to the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1c52-117">Dodaje <see cref="T:System.Management.MethodData" /> do <see cref="T:System.Management.MethodDataCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-117">Adds a <see cref="T:System.Management.MethodData" /> to the <see cref="T:System.Management.MethodDataCollection" />.</span>
          </span>
          <span data-ttu-id="b1c52-118">To przeciążenie doda nową metodę z obiektami określony parametr w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-118">This overload will add a new method with the specified parameter objects to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c52-119">Dodawanie <xref:System.Management.MethodData> obiekty do <xref:System.Management.MethodDataCollection> może został przeprowadzona tylko, jeśli klasa nie ma żadnych wystąpień.</span><span class="sxs-lookup"><span data-stu-id="b1c52-119">Adding <xref:System.Management.MethodData> objects to the <xref:System.Management.MethodDataCollection> can only be done when the class has no instances.</span></span> <span data-ttu-id="b1c52-120">Innym przypadku wystąpi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="b1c52-120">Any other case will result in an exception.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="b1c52-121">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="b1c52-121">.NET Framework Security</span></span>  
 <span data-ttu-id="b1c52-122">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="b1c52-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="b1c52-123">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="b1c52-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b1c52-124">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="b1c52-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b1c52-125">Kopie <see cref="T:System.Management.MethodDataCollection" /> obiektu w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-125">Copies the <see cref="T:System.Management.MethodDataCollection" /> object into an array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="methodDataCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b1c52-126">Tablica, do którego można skopiować kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-126">The array to which to copy the collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b1c52-127">Indeks, z którego chcesz uruchomić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-127">The index from which to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1c52-128">Kopie <see cref="T:System.Management.MethodDataCollection" /> do tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-128">Copies the <see cref="T:System.Management.MethodDataCollection" /> into an array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="b1c52-129">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="b1c52-129">.NET Framework Security</span></span>  
 <span data-ttu-id="b1c52-130">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="b1c52-130">Full trust for the immediate caller.</span></span> <span data-ttu-id="b1c52-131">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="b1c52-131">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b1c52-132">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="b1c52-132">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Management.MethodData[] methodArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Management.MethodData[] methodArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.CopyTo(System.Management.MethodData[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (methodArray As MethodData(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Management::MethodData ^&gt; ^ methodArray, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Management.MethodData[] * int -&gt; unit" Usage="methodDataCollection.CopyTo (methodArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodArray" Type="System.Management.MethodData[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="methodArray">
          <span data-ttu-id="b1c52-133">Tablica docelowa, do którego zostaną skopiowane <see cref="T:System.Management.MethodData" /> obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-133">The destination array to which to copy the <see cref="T:System.Management.MethodData" /> objects.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b1c52-134">Indeks w tablicy docelowej, w którym należy rozpocząć kopiowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-134">The index in the destination array from which to start the copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1c52-135">Kopie <see cref="T:System.Management.MethodDataCollection" /> do specjalistycznej <see cref="T:System.Management.MethodData" /> tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-135">Copies the <see cref="T:System.Management.MethodDataCollection" /> to a specialized <see cref="T:System.Management.MethodData" /> array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="b1c52-136">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="b1c52-136">.NET Framework Security</span></span>  
 <span data-ttu-id="b1c52-137">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="b1c52-137">Full trust for the immediate caller.</span></span> <span data-ttu-id="b1c52-138">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="b1c52-138">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b1c52-139">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="b1c52-139">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Management.MethodDataCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1c52-140">Pobiera liczbę obiektów w <see cref="T:System.Management.MethodDataCollection" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-140">Gets the number of objects in the <see cref="T:System.Management.MethodDataCollection" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b1c52-141">Zwraca <see cref="T:System.Int32" /> wartość reprezentującą liczbę obiektów w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-141">Returns an <see cref="T:System.Int32" /> value representing the number of objects in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="b1c52-142">Wartość właściwości</span><span class="sxs-lookup"><span data-stu-id="b1c52-142">Property Value</span></span>  
 <span data-ttu-id="b1c52-143">Liczba obiektów w <xref:System.Management.MethodDataCollection>.</span><span class="sxs-lookup"><span data-stu-id="b1c52-143">The number of objects in the <xref:System.Management.MethodDataCollection>.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="b1c52-144">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="b1c52-144">.NET Framework Security</span></span>  
 <span data-ttu-id="b1c52-145">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="b1c52-145">Full trust for the immediate caller.</span></span> <span data-ttu-id="b1c52-146">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="b1c52-146">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b1c52-147">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="b1c52-147">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Management.MethodDataCollection.MethodDataEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.MethodDataCollection/MethodDataEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As MethodDataCollection.MethodDataEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::MethodDataCollection::MethodDataEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Management.MethodDataCollection.MethodDataEnumerator" Usage="methodDataCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.MethodDataCollection+MethodDataEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b1c52-148">Zwraca moduł wyliczający dla <see cref="T:System.Management.MethodDataCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-148">Returns an enumerator for the <see cref="T:System.Management.MethodDataCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b1c52-149">
            <see cref="T:System.Collections.IEnumerator" /> Wyliczyć za pomocą kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-149">An <see cref="T:System.Collections.IEnumerator" /> to enumerate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c52-150">Każde wywołanie tej metody zwraca nowy moduł wyliczający w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b1c52-150">Each call to this method returns a new enumerator on the collection.</span></span> <span data-ttu-id="b1c52-151">Moduły wyliczające wielu można uzyskać dla tej samej kolekcji metody.</span><span class="sxs-lookup"><span data-stu-id="b1c52-151">Multiple enumerators can be obtained for the same method collection.</span></span> <span data-ttu-id="b1c52-152">Jednak każdy moduł wyliczający wykonuje migawkę kolekcji, więc zmiany wprowadzone do kolekcji po uzyskano modułu wyliczającego nie są uwzględniane.</span><span class="sxs-lookup"><span data-stu-id="b1c52-152">However, each enumerator takes a snapshot of the collection, so changes made to the collection after the enumerator was obtained are not reflected.</span></span>  
  
 <span data-ttu-id="b1c52-153">Można tylko iteracji (jak w języku Visual Basic .NET `For Each` instrukcji lub C# `For` instrukcji) za pośrednictwem tylko do przodu wyliczający jeden raz.</span><span class="sxs-lookup"><span data-stu-id="b1c52-153">You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time.</span></span> <span data-ttu-id="b1c52-154">Pamięci, zawierającej wystąpienia został wydany przez WMI tak, aby nie może być przewinięta modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="b1c52-154">The memory containing the instances is released by WMI so that the enumerator cannot be rewound.</span></span> <span data-ttu-id="b1c52-155">W związku z tym <xref:System.Management.MethodDataCollection.Count%2A> nie można użyć metody, ponieważ wymaga ona przewijanie modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="b1c52-155">Therefore, the <xref:System.Management.MethodDataCollection.Count%2A> method cannot be used since it requires rewinding the enumerator.</span></span>  
  
 <span data-ttu-id="b1c52-156">Moduły wyliczające tylko do przodu są zwykle dużo szybsze i używają mniej pamięci niż wyliczenia z konwencjonalnej, ale nie zezwalają na wywołania <xref:System.Management.MethodDataCollection.MethodDataEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="b1c52-156">Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to <xref:System.Management.MethodDataCollection.MethodDataEnumerator.Reset%2A>.</span></span>  
  
 <span data-ttu-id="b1c52-157">Jeśli moduł wyliczający jest rewindable, obiektów w kolekcji pozostaną dostępne dla wielu wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="b1c52-157">If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="b1c52-158">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="b1c52-158">.NET Framework Security</span></span>  
 <span data-ttu-id="b1c52-159">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="b1c52-159">Full trust for the immediate caller.</span></span> <span data-ttu-id="b1c52-160">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="b1c52-160">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b1c52-161">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="b1c52-161">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Management.MethodDataCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1c52-162">Pobiera wartość wskazującą, czy obiekt jest zsynchronizowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-162">Gets a value that indicates whether the object is synchronized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b1c52-163">Zwraca <see cref="T:System.Boolean" /> wartość wskazującą, czy obiekt jest zsynchronizowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-163">Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="b1c52-164">Wartość właściwości</span><span class="sxs-lookup"><span data-stu-id="b1c52-164">Property Value</span></span>  
 <span data-ttu-id="b1c52-165">`true` Jeśli obiekt jest synchronizowane; w przeciwnym razie `false`.</span><span class="sxs-lookup"><span data-stu-id="b1c52-165">`true` if the object is synchronized; otherwise, `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="b1c52-166">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="b1c52-166">.NET Framework Security</span></span>  
 <span data-ttu-id="b1c52-167">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="b1c52-167">Full trust for the immediate caller.</span></span> <span data-ttu-id="b1c52-168">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="b1c52-168">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b1c52-169">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="b1c52-169">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Management.MethodData this[string methodName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.MethodData Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(methodName As String) As MethodData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Management::MethodData ^ default[System::String ^] { System::Management::MethodData ^ get(System::String ^ methodName); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Management.MethodData" Usage="System.Management.MethodDataCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.MethodData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="b1c52-170">Nazwa metody żądanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-170">The name of the method requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1c52-171">Pobiera określony <see cref="T:System.Management.MethodData" /> z <see cref="T:System.Management.MethodDataCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-171">Gets the specified <see cref="T:System.Management.MethodData" /> from the <see cref="T:System.Management.MethodDataCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b1c52-172">Zwraca <see cref="T:System.Management.MethodData" /> zawierający dane metody dla określonej metody z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-172">Returns a <see cref="T:System.Management.MethodData" /> containing the method data for a specified method from the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="b1c52-173">Wartość właściwości</span><span class="sxs-lookup"><span data-stu-id="b1c52-173">Property Value</span></span>  
 <span data-ttu-id="b1c52-174">A <xref:System.Management.MethodData> zawierający wszystkie informacje o określonej metody.</span><span class="sxs-lookup"><span data-stu-id="b1c52-174">A <xref:System.Management.MethodData> containing all information about the specified method.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="b1c52-175">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="b1c52-175">.NET Framework Security</span></span>  
 <span data-ttu-id="b1c52-176">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="b1c52-176">Full trust for the immediate caller.</span></span> <span data-ttu-id="b1c52-177">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="b1c52-177">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b1c52-178">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="b1c52-178">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ methodName);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; unit&#xA;override this.Remove : string -&gt; unit" Usage="methodDataCollection.Remove methodName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="b1c52-179">Nazwa metody do usunięcia z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-179">The name of the method to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b1c52-180">Usuwa <see cref="T:System.Management.MethodData" /> z <see cref="T:System.Management.MethodDataCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-180">Removes a <see cref="T:System.Management.MethodData" /> from the <see cref="T:System.Management.MethodDataCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c52-181">Usuwanie <xref:System.Management.MethodData> obiektów z <xref:System.Management.MethodDataCollection> może został przeprowadzona tylko, jeśli klasa nie ma żadnych wystąpień.</span><span class="sxs-lookup"><span data-stu-id="b1c52-181">Removing <xref:System.Management.MethodData> objects from the <xref:System.Management.MethodDataCollection> can only be done when the class has no instances.</span></span> <span data-ttu-id="b1c52-182">Innym przypadku wystąpi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="b1c52-182">Any other case will result in an exception.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="b1c52-183">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="b1c52-183">.NET Framework Security</span></span>  
 <span data-ttu-id="b1c52-184">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="b1c52-184">Full trust for the immediate caller.</span></span> <span data-ttu-id="b1c52-185">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="b1c52-185">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b1c52-186">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="b1c52-186">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Management.MethodDataCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Management.MethodDataCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b1c52-187">Pobiera obiekt służący do synchronizacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-187">Gets the object to be used for synchronization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b1c52-188">Zwraca <see cref="T:System.Object" /> wartość reprezentujący obiekt służący do synchronizacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-188">Returns an <see cref="T:System.Object" /> value representing the object to be used for synchronization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="b1c52-189">Wartość właściwości</span><span class="sxs-lookup"><span data-stu-id="b1c52-189">Property Value</span></span>  
 <span data-ttu-id="b1c52-190">Obiekt służący do synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="b1c52-190">The object to be used for synchronization.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="b1c52-191">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="b1c52-191">.NET Framework Security</span></span>  
 <span data-ttu-id="b1c52-192">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="b1c52-192">Full trust for the immediate caller.</span></span> <span data-ttu-id="b1c52-193">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="b1c52-193">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="b1c52-194">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="b1c52-194">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.MethodDataCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b1c52-195">Zwraca <see cref="T:System.Collections.IEnumerator" /> który iteruje <see cref="T:System.Management.MethodDataCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-195">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.MethodDataCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b1c52-196">
            <see cref="T:System.Collections.IEnumerator" /> Dla <see cref="T:System.Management.MethodDataCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b1c52-196">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.MethodDataCollection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1c52-197">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="b1c52-197">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="b1c52-198">`foreach` Instrukcji języka C# (`for each` w języku Visual Basic) ukrywa złożoność wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="b1c52-198">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="b1c52-199">W związku z tym przy użyciu `foreach` jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="b1c52-199">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="b1c52-200">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="b1c52-200">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="b1c52-201">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b1c52-201">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="b1c52-202"><xref:System.Collections.IEnumerator.Reset%2A> również wprowadzono moduł wyliczający wróć do tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="b1c52-202"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="b1c52-203">At to pozycja, wywoływania <xref:System.Collections.IEnumerator.Current%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="b1c52-203">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="b1c52-204">W związku z tym należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="b1c52-204">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="b1c52-205"><xref:System.Collections.IEnumerator.Current%2A> zwraca ten sam obiekt do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="b1c52-205"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="b1c52-206"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="b1c52-206"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="b1c52-207">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="b1c52-207">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="b1c52-208">Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.Collections.IEnumerator.MoveNext%2A> zwracają również `false`.</span><span class="sxs-lookup"><span data-stu-id="b1c52-208">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="b1c52-209">Jeśli przez ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócił `false`, wywoływania <xref:System.Collections.IEnumerator.Current%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="b1c52-209">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="b1c52-210">Aby ustawić <xref:System.Collections.IEnumerator.Current%2A> aby pierwszym elementem kolekcji ponownie, należy wywołać <xref:System.Collections.IEnumerator.Reset%2A> następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="b1c52-210">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="b1c52-211">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="b1c52-211">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="b1c52-212">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest bezpowrotnie unieważniona, a następne wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="b1c52-212">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="b1c52-213">Jeśli kolekcja jest zmodyfikowany między <xref:System.Collections.IEnumerator.MoveNext%2A> i <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> zwraca element, który ma ustawioną, nawet wtedy, gdy moduł wyliczający jest już unieważnione.</span><span class="sxs-lookup"><span data-stu-id="b1c52-213">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="b1c52-214">Moduł wyliczający nie ma wyłączny dostęp do kolekcji; w związku z tym wyliczania kolekcji leżą nie jest bezpieczne procedury wątku.</span><span class="sxs-lookup"><span data-stu-id="b1c52-214">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="b1c52-215">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="b1c52-215">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="b1c52-216">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="b1c52-216">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="b1c52-217">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="b1c52-217">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>