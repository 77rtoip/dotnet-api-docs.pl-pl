<Type Name="ManagementOperationObserver" FullName="System.Management.ManagementOperationObserver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7dc16f27645e8663ac255c9eec9ab1a478053459" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30558331" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ManagementOperationObserver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementOperationObserver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementOperationObserver" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementOperationObserver" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementOperationObserver" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zarządza operacji asynchronicznych i informacje o zarządzaniu dojść i zdarzeń odebranych asynchronicznie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak wykonać wyliczenie wystąpienie asynchronicznego. W przykładzie użyto <xref:System.Management.ManagementOperationObserver> klasy do obsługi zarządzania informacji i zdarzeń asynchronicznie.  
  
 [!code-csharp[wminet_ManagementOperationObserver#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver/cs/ManagementOperationObserver.cs#1)]
 [!code-vb[wminet_ManagementOperationObserver#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver/vb/ManagementOperationObserver.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementOperationObserver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementOperationObserver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementOperationObserver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Management.ManagementOperationObserver" /> klasy. Jest to domyślny konstruktor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Zabezpieczenia.NET Framework  
 Pełne zaufanie do bezpośredniego wywołującego. Ten element członkowski nie może być używany przez kod częściowo zaufany. Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak wykonać wyliczenie wystąpienie asynchronicznego. W przykładzie użyto <xref:System.Management.ManagementOperationObserver> klasy do obsługi zarządzania informacji i zdarzeń asynchronicznie.  
  
 [!code-csharp[wminet_ManagementOperationObserver#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver/cs/ManagementOperationObserver.cs#1)]
 [!code-vb[wminet_ManagementOperationObserver#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver/vb/ManagementOperationObserver.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementOperationObserver.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Anuluje wszystkie oczekujące operacje.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Zabezpieczenia.NET Framework  
 Pełne zaufanie do bezpośredniego wywołującego. Ten element członkowski nie może być używany przez kod częściowo zaufany. Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event System.Management.CompletedEventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.CompletedEventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementOperationObserver.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Event Completed As CompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::CompletedEventHandler ^ Completed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.CompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy operacja została ukończona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a>Dane opisujące zdarzenie  
 Program obsługi zdarzeń odbiera argumentu typu <xref:System.Management.CompletedEventArgs> zawierającą dane związane z tym zdarzeniem. Następujące <xref:System.Management.CompletedEventArgs> właściwości zawierają informacje dotyczące danego zdarzenia.  
  
|Właściwość|Opis|  
|--------------|-----------------|  
|<xref:System.Management.ManagementEventArgs.Context%2A> (dziedziczone z <xref:System.Management.ManagementEventArgs>)|Pobiera kontekst operacji powtarzana z operacji, który wywołał zdarzenie.|  
|<xref:System.Management.CompletedEventArgs.Status%2A>|Pobiera stan ukończenia operacji.|  
|<xref:System.Management.CompletedEventArgs.StatusObject%2A>|Pobiera lub ustawia stan dodatkowych informacji w ramach obiektu WMI. Może to być wartość null.|  
  
## <a name="net-framework-security"></a>Zabezpieczenia.NET Framework  
 Pełne zaufanie do bezpośredniego wywołującego. Ten element członkowski nie może być używany przez kod częściowo zaufany. Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak wykonać wyliczenie wystąpienie asynchronicznego. W przykładzie użyto <xref:System.Management.ManagementOperationObserver> klasy do obsługi zarządzania informacji i zdarzeń asynchronicznie.  
  
 [!code-csharp[wminet_ManagementOperationObserver_Completed#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver_Completed/cs/ManagementOperationObserver_Completed.cs#1)]
 [!code-vb[wminet_ManagementOperationObserver_Completed#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver_Completed/vb/ManagementOperationObserver_Completed.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectPut">
      <MemberSignature Language="C#" Value="public event System.Management.ObjectPutEventHandler ObjectPut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.ObjectPutEventHandler ObjectPut" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementOperationObserver.ObjectPut" />
      <MemberSignature Language="VB.NET" Value="Public Event ObjectPut As ObjectPutEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::ObjectPutEventHandler ^ ObjectPut;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ObjectPutEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy obiekt został pomyślnie przekazany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a>Dane opisujące zdarzenie  
 Program obsługi zdarzeń odbiera argumentu typu <xref:System.Management.ObjectPutEventArgs> zawierającą dane związane z tym zdarzeniem. Następujące <xref:System.Management.ObjectPutEventArgs> właściwości zawierają informacje dotyczące danego zdarzenia.  
  
|Właściwość|Opis|  
|--------------|-----------------|  
|<xref:System.Management.ManagementEventArgs.Context%2A> (dziedziczone z <xref:System.Management.ManagementEventArgs>)|Pobiera kontekst operacji powtarzana z operacji, który wywołał zdarzenie.|  
|<xref:System.Management.ObjectPutEventArgs.Path%2A>|Pobiera tożsamość obiektu, który został wprowadzony.|  
  
## <a name="net-framework-security"></a>Zabezpieczenia.NET Framework  
 Pełne zaufanie do bezpośredniego wywołującego. Ten element członkowski nie może być używany przez kod częściowo zaufany. Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectReady">
      <MemberSignature Language="C#" Value="public event System.Management.ObjectReadyEventHandler ObjectReady;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.ObjectReadyEventHandler ObjectReady" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementOperationObserver.ObjectReady" />
      <MemberSignature Language="VB.NET" Value="Public Event ObjectReady As ObjectReadyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::ObjectReadyEventHandler ^ ObjectReady;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ObjectReadyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy dostępny jest nowy obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a>Dane opisujące zdarzenie  
 Program obsługi zdarzeń odbiera argumentu typu <xref:System.Management.ObjectReadyEventArgs> zawierającą dane związane z tym zdarzeniem. Następujące <xref:System.Management.ObjectReadyEventArgs> właściwości zawierają informacje dotyczące danego zdarzenia.  
  
|Właściwość|Opis|  
|--------------|-----------------|  
|<xref:System.Management.ManagementEventArgs.Context%2A> (dziedziczone z <xref:System.Management.ManagementEventArgs>)|Pobiera kontekst operacji powtarzana z operacji, który wywołał zdarzenie.|  
|<xref:System.Management.ObjectReadyEventArgs.NewObject%2A>|Pobiera obiekt nowo zwracane.|  
  
## <a name="net-framework-security"></a>Zabezpieczenia.NET Framework  
 Pełne zaufanie do bezpośredniego wywołującego. Ten element członkowski nie może być używany przez kod częściowo zaufany. Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak wykonać wyliczenie wystąpienie asynchronicznego. W przykładzie użyto <xref:System.Management.ManagementOperationObserver> klasy do obsługi zarządzania informacji i zdarzeń asynchronicznie.  
  
 [!code-csharp[wminet_ManagementOperationObserver_ObjectReady#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver_ObjectReady/cs/ManagementOperationObserver_ObjectReady.cs#1)]
 [!code-vb[wminet_ManagementOperationObserver_ObjectReady#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementOperationObserver_ObjectReady/vb/ManagementOperationObserver_ObjectReady.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Progress">
      <MemberSignature Language="C#" Value="public event System.Management.ProgressEventHandler Progress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.ProgressEventHandler Progress" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementOperationObserver.Progress" />
      <MemberSignature Language="VB.NET" Value="Public Event Progress As ProgressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::ProgressEventHandler ^ Progress;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, aby wskazać postęp trwających operacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a>Dane opisujące zdarzenie  
 Program obsługi zdarzeń odbiera argumentu typu <xref:System.Management.ProgressEventArgs> zawierającą dane związane z tym zdarzeniem. Następujące <xref:System.Management.ProgressEventArgs> właściwości zawierają informacje dotyczące danego zdarzenia.  
  
|Właściwość|Opis|  
|--------------|-----------------|  
|<xref:System.Management.ManagementEventArgs.Context%2A> (dziedziczone z <xref:System.Management.ManagementEventArgs>)|Pobiera kontekst operacji powtarzana z operacji, który wywołał zdarzenie.|  
|<xref:System.Management.ProgressEventArgs.Current%2A>|Pobiera Bieżąca ilość pracy wykonanej przez operację. Jest to zawsze mniejsze niż lub równe <xref:System.Management.ProgressEventArgs.UpperBound%2A>.|  
|<xref:System.Management.ProgressEventArgs.Message%2A>|Pobiera lub ustawia opcjonalne dodatkowe informacje na temat postęp operacji.|  
|<xref:System.Management.ProgressEventArgs.UpperBound%2A>|Pobiera łączną ilość pracy wymaganej do wykonania przez operację.|  
  
## <a name="net-framework-security"></a>Zabezpieczenia.NET Framework  
 Pełne zaufanie do bezpośredniego wywołującego. Ten element członkowski nie może być używany przez kod częściowo zaufany. Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>