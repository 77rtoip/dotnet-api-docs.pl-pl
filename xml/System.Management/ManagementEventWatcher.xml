<Type Name="ManagementEventWatcher" FullName="System.Management.ManagementEventWatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="abb4aa4505fe791575cfdc67554027bd854ee121" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36477995" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ManagementEventWatcher : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementEventWatcher extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementEventWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementEventWatcher&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEventWatcher : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ManagementEventWatcher = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6640d-101">Subskrybuje powiadomień o zdarzeniach tymczasowego na podstawie określonej * zdarzeń zapytania *.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6640d-101">Subscribes to temporary event notifications based on a specified *event query*.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6640d-102">W poniższym przykładzie pokazano, jak klient odbierze powiadomienie, gdy wystąpienie **Win32_Process** jest tworzony, ponieważ jest klasa zdarzenia **klasy __InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6640d-102">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6640d-103">Aby uzyskać więcej informacji, zobacz dokumentację Instrumentacji zarządzania Windows w bibliotece MSDN pod http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6640d-103">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6640d-104">Klient odbiera zdarzenia synchronicznie, wywołując <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6640d-104">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6640d-105">W tym przykładzie można przetestować przez uruchomienie procesu, takiego jak Notatnik, przykładowy kod jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="6640d-105">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6640d-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Management.ManagementEventWatcher" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-106">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6640d-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.Management.ManagementEventWatcher" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-107">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span>
          </span>
          <span data-ttu-id="6640d-108">Dla dalszego inicjowania należy ustawić właściwości w obiekcie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-108">For further initialization, set the properties on the object.</span>
          </span>
          <span data-ttu-id="6640d-109">Jest to domyślny konstruktor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-109">This is the default constructor.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="6640d-110">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="6640d-110">.NET Framework Security</span></span>  
 <span data-ttu-id="6640d-111">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6640d-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="6640d-112">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="6640d-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6640d-113">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6640d-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6640d-114">W poniższym przykładzie pokazano, jak klient odbierze powiadomienie, gdy wystąpienie **Win32_Process** jest tworzony, ponieważ jest klasa zdarzenia **klasy __InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6640d-114">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6640d-115">Aby uzyskać więcej informacji, zobacz dokumentację Instrumentacji zarządzania Windows w bibliotece MSDN pod http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6640d-115">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6640d-116">Klient odbiera zdarzenia synchronicznie, wywołując <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6640d-116">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6640d-117">W tym przykładzie można przetestować przez uruchomienie procesu, takiego jak Notatnik, przykładowy kod jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="6640d-117">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::EventQuery ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.EventQuery -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher query" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="6640d-118">
            <see cref="T:System.Management.EventQuery" /> Reprezentujący kwerendę zdarzeń WMI, która określa zdarzenia, dla których będzie nasłuchiwać obserwatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-118">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6640d-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.Management.ManagementEventWatcher" /> klasy, gdy WMI * zdarzeń zapytania *.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-119">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query*.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6640d-120">Przestrzeń nazw, w którym obserwatora będzie nasłuchiwać zdarzeń jest domyślny obszar nazw, który jest aktualnie ustawione.</span><span class="sxs-lookup"><span data-stu-id="6640d-120">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="6640d-121">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="6640d-121">.NET Framework Security</span></span>  
 <span data-ttu-id="6640d-122">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6640d-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="6640d-123">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="6640d-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6640d-124">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6640d-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6640d-125">W tym przykładzie kodu klient odbierze powiadomienie, gdy wystąpienie **Win32_Process** jest tworzony, ponieważ jest klasa zdarzenia **klasy __InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6640d-125">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6640d-126">Aby uzyskać więcej informacji, zobacz dokumentację Instrumentacji zarządzania Windows w bibliotece MSDN pod http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6640d-126">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6640d-127">Klient odbiera zdarzenia synchronicznie, wywołując <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6640d-127">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6640d-128">W tym przykładzie można przetestować przez uruchomienie procesu, takiego jak Notatnik, przykładowy kod jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="6640d-128">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/cs/ManagementEventWatcher-E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/vb/ManagementEventWatcher-E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher query" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="6640d-129">Zapytanie zdarzeń WMI, który definiuje zdarzenia, dla których będzie nasłuchiwać obserwatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-129">A WMI event query, which defines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6640d-130">Inicjuje nowe wystąpienie klasy <see cref="T:System.Management.ManagementEventWatcher" /> klasy, gdy WMI * zdarzeń zapytania * w formie ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-130">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query* in the form of a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6640d-131">Przestrzeń nazw, w którym obserwatora będzie nasłuchiwać zdarzeń jest domyślny obszar nazw, który jest aktualnie ustawione.</span><span class="sxs-lookup"><span data-stu-id="6640d-131">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="6640d-132">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="6640d-132">.NET Framework Security</span></span>  
 <span data-ttu-id="6640d-133">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6640d-133">Full trust for the immediate caller.</span></span> <span data-ttu-id="6640d-134">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="6640d-134">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6640d-135">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6640d-135">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6640d-136">W poniższym przykładzie pokazano, jak klient odbierze powiadomienie, gdy wystąpienie **Win32_Process** jest tworzony, ponieważ jest klasa zdarzenia **klasy __InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6640d-136">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6640d-137">Aby uzyskać więcej informacji, zobacz dokumentację Instrumentacji zarządzania Windows w bibliotece MSDN pod http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6640d-137">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6640d-138">Klient odbiera zdarzenia synchronicznie, wywołując <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6640d-138">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6640d-139">W tym przykładzie można przetestować przez uruchomienie procesu, takiego jak Notatnik, przykładowy kod jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="6640d-139">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/cs/ManagementEventWatcher-S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/vb/ManagementEventWatcher-S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.ManagementScope * System.Management.EventQuery -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="6640d-140">A <see cref="T:System.Management.ManagementScope" /> reprezentujący zakresu (przestrzeń nazw), w którym obserwatora będzie nasłuchiwać zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-140">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="6640d-141">
            <see cref="T:System.Management.EventQuery" /> Reprezentujący kwerendę zdarzeń WMI, która określa zdarzenia, dla których będzie nasłuchiwać obserwatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-141">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6640d-142">Inicjuje nowe wystąpienie klasy <see cref="T:System.Management.ManagementEventWatcher" /> klasy, która nasłuchuje zdarzeń zgodnych z danym WMI * zdarzeń zapytania *.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-142">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="6640d-143">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="6640d-143">.NET Framework Security</span></span>  
 <span data-ttu-id="6640d-144">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6640d-144">Full trust for the immediate caller.</span></span> <span data-ttu-id="6640d-145">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="6640d-145">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6640d-146">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6640d-146">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6640d-147">W tym przykładzie kodu klient odbierze powiadomienie, gdy wystąpienie **Win32_Process** jest tworzony, ponieważ jest klasa zdarzenia **klasy __InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6640d-147">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6640d-148">Aby uzyskać więcej informacji, zobacz dokumentację Instrumentacji zarządzania Windows w bibliotece MSDN pod http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6640d-148">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6640d-149">Klient odbiera zdarzenia synchronicznie, wywołując <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6640d-149">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6640d-150">W tym przykładzie można przetestować przez uruchomienie procesu, takiego jak Notatnik, przykładowy kod jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="6640d-150">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/cs/ManagementEventWatcher-M_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/vb/ManagementEventWatcher-M_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string * string -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="6640d-151">Zakres zarządzania (przestrzeń nazw) w którym obserwatora będzie nasłuchiwać zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-151">The management scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="6640d-152">Kwerenda, która definiuje zdarzenia, dla których będzie nasłuchiwać obserwatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-152">The query that defines the events for which the watcher will listen.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6640d-153">Inicjuje nowe wystąpienie klasy <see cref="T:System.Management.ManagementEventWatcher" /> klasy, która nasłuchuje zdarzeń zgodnych z danym WMI * zdarzeń zapytania *.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-153">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span>
          </span>
          <span data-ttu-id="6640d-154">Dla tego wariantu zapytania i zakres są określone jako ciągi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-154">For this variant, the query and the scope are specified as strings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="6640d-155">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="6640d-155">.NET Framework Security</span></span>  
 <span data-ttu-id="6640d-156">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6640d-156">Full trust for the immediate caller.</span></span> <span data-ttu-id="6640d-157">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="6640d-157">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6640d-158">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6640d-158">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6640d-159">W poniższym przykładzie pokazano, jak klient odbierze powiadomienie, gdy wystąpienie **Win32_Process** jest tworzony, ponieważ jest klasa zdarzenia **klasy __InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6640d-159">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6640d-160">Aby uzyskać więcej informacji, zobacz dokumentację Instrumentacji zarządzania Windows w bibliotece MSDN pod http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6640d-160">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6640d-161">Klient odbiera zdarzenia synchronicznie, wywołując <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6640d-161">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6640d-162">W tym przykładzie można przetestować przez uruchomienie procesu, takiego jak Notatnik, przykładowy kod jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="6640d-162">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/cs/ManagementEventWatcher-S_S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/vb/ManagementEventWatcher-S_S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.ManagementScope * System.Management.EventQuery * System.Management.EventWatcherOptions -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="6640d-163">A <see cref="T:System.Management.ManagementScope" /> reprezentujący zakresu (przestrzeń nazw), w którym obserwatora będzie nasłuchiwać zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-163">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="6640d-164">
            <see cref="T:System.Management.EventQuery" /> Reprezentujący kwerendę zdarzeń WMI, która określa zdarzenia, dla których będzie nasłuchiwać obserwatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-164">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="6640d-165">
            <see cref="T:System.Management.EventWatcherOptions" /> Reprezentujący dodatkowe opcje używane do monitorowania zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-165">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6640d-166">Inicjuje nowe wystąpienie klasy <see cref="T:System.Management.ManagementEventWatcher" /> klasy, która nasłuchuje zdarzeń zgodnych z określonego zapytania zdarzeń WMI, zgodnie z podanych opcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-166">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query, according to the specified options.</span>
          </span>
          <span data-ttu-id="6640d-167">Dla tego wariantu zapytania i zakres są określonych obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-167">For this variant, the query and the scope are specified objects.</span>
          </span>
          <span data-ttu-id="6640d-168">Obiekt opcje można określić opcje, takie jak limit czasu i kontekst informacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-168">The options object can specify options such as time-out and context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="6640d-169">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="6640d-169">.NET Framework Security</span></span>  
 <span data-ttu-id="6640d-170">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6640d-170">Full trust for the immediate caller.</span></span> <span data-ttu-id="6640d-171">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="6640d-171">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6640d-172">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6640d-172">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6640d-173">W poniższym przykładzie pokazano, jak klient odbierze powiadomienie, gdy wystąpienie **Win32_Process** jest tworzony, ponieważ jest klasa zdarzenia **klasy __InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6640d-173">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6640d-174">Aby uzyskać więcej informacji, zobacz dokumentację Instrumentacji zarządzania Windows w bibliotece MSDN pod http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6640d-174">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6640d-175">Klient odbiera zdarzenia synchronicznie, wywołując <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6640d-175">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6640d-176">W tym przykładzie można przetestować przez uruchomienie procesu, takiego jak Notatnik, przykładowy kod jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="6640d-176">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/cs/ManagementEventWatcher-M_E_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/vb/ManagementEventWatcher-M_E_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string * string * System.Management.EventWatcherOptions -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope">
          <span data-ttu-id="6640d-177">Zakres zarządzania (przestrzeń nazw) w którym obserwatora będzie nasłuchiwać zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-177">The management scope (namespace) in which the watcher will listen for events.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="6640d-178">Kwerenda, która definiuje zdarzenia, dla których będzie nasłuchiwać obserwatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-178">The query that defines the events for which the watcher will listen.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="6640d-179">
            <see cref="T:System.Management.EventWatcherOptions" /> Reprezentujący dodatkowe opcje używane do monitorowania zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-179">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6640d-180">Inicjuje nowe wystąpienie klasy <see cref="T:System.Management.ManagementEventWatcher" /> klasy, która nasłuchuje zdarzeń zgodnych z danym WMI * zdarzeń zapytania *, zgodnie z podanych opcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-180">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*, according to the specified options.</span>
          </span>
          <span data-ttu-id="6640d-181">Dla tego wariantu zapytania i zakres są określone jako ciągi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-181">For this variant, the query and the scope are specified as strings.</span>
          </span>
          <span data-ttu-id="6640d-182">Obiekt opcje można określić opcje, takie jak limit czasu i kontekstu informacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-182">The options object can specify options such as a time-out and context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="6640d-183">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="6640d-183">.NET Framework Security</span></span>  
 <span data-ttu-id="6640d-184">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6640d-184">Full trust for the immediate caller.</span></span> <span data-ttu-id="6640d-185">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="6640d-185">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6640d-186">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6640d-186">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6640d-187">W poniższym przykładzie pokazano, jak klient odbierze powiadomienie, gdy wystąpienie **Win32_Process** jest tworzony, ponieważ jest klasa zdarzenia **klasy __InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6640d-187">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6640d-188">Aby uzyskać więcej informacji, zobacz dokumentację Instrumentacji zarządzania Windows w bibliotece MSDN pod http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6640d-188">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6640d-189">Klient odbiera zdarzenia synchronicznie, wywołując <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6640d-189">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6640d-190">W tym przykładzie można przetestować przez uruchomienie procesu, takiego jak Notatnik, przykładowy kod jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="6640d-190">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/cs/ManagementEventWatcher-S_S_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/vb/ManagementEventWatcher-S_S_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventArrived">
      <MemberSignature Language="C#" Value="public event System.Management.EventArrivedEventHandler EventArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.EventArrivedEventHandler EventArrived" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.EventArrived" />
      <MemberSignature Language="VB.NET" Value="Public Event EventArrived As EventArrivedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::EventArrivedEventHandler ^ EventArrived;" />
      <MemberSignature Language="F#" Value="member this.EventArrived : System.Management.EventArrivedEventHandler " Usage="member this.EventArrived : System.Management.EventArrivedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventArrivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6640d-191">Występuje, gdy dociera do nowego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-191">Occurs when a new event arrives.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="6640d-192">Dane opisujące zdarzenie</span><span class="sxs-lookup"><span data-stu-id="6640d-192">Event Data</span></span>  
 <span data-ttu-id="6640d-193">Program obsługi zdarzeń odbiera argumentu typu <xref:System.Management.EventArrivedEventArgs> zawierającą dane związane z tym zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="6640d-193">The event handler receives an argument of type <xref:System.Management.EventArrivedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="6640d-194">Następujące <xref:System.Management.EventArrivedEventArgs> właściwości zawierają informacje dotyczące danego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="6640d-194">The following <xref:System.Management.EventArrivedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="6640d-195">Właściwość</span><span class="sxs-lookup"><span data-stu-id="6640d-195">Property</span></span>|<span data-ttu-id="6640d-196">Opis</span><span class="sxs-lookup"><span data-stu-id="6640d-196">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="6640d-197"><xref:System.Management.ManagementEventArgs.Context%2A> (dziedziczone z <xref:System.Management.ManagementEventArgs>)</span><span class="sxs-lookup"><span data-stu-id="6640d-197"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="6640d-198">Pobiera kontekst operacji powtarzana z operacji, który wywołał zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="6640d-198">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.EventArrivedEventArgs.NewEvent%2A>|<span data-ttu-id="6640d-199">Pobiera zdarzenia WMI, który został dostarczony.</span><span class="sxs-lookup"><span data-stu-id="6640d-199">Gets the WMI event that was delivered.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="6640d-200">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="6640d-200">.NET Framework Security</span></span>  
 <span data-ttu-id="6640d-201">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6640d-201">Full trust for the immediate caller.</span></span> <span data-ttu-id="6640d-202">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="6640d-202">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6640d-203">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6640d-203">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ManagementEventWatcher ()" />
      <MemberSignature Language="F#" Value="abstract member Finalize : unit -&gt; unit&#xA;override this.Finalize : unit -&gt; unit" Usage="managementEventWatcher.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6640d-204">Zapewnia, że wywołania oczekujące zostały wyczyszczone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-204">Ensures that outstanding calls are cleared.</span>
          </span>
          <span data-ttu-id="6640d-205">Jest to destruktor dla obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-205">This is the destructor for the object.</span>
          </span>
          <span data-ttu-id="6640d-206">W języku C# finalizatory są wyrażane przy użyciu składni destruktora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-206">In C#, finalizers are expressed using destructor syntax.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="6640d-207">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="6640d-207">.NET Framework Security</span></span>  
 <span data-ttu-id="6640d-208">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6640d-208">Full trust for the immediate caller.</span></span> <span data-ttu-id="6640d-209">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="6640d-209">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6640d-210">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6640d-210">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Management.EventWatcherOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventWatcherOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As EventWatcherOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventWatcherOptions ^ Options { System::Management::EventWatcherOptions ^ get(); void set(System::Management::EventWatcherOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Management.EventWatcherOptions with get, set" Usage="System.Management.ManagementEventWatcher.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventWatcherOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6640d-211">Pobiera lub ustawia opcje używane do monitorowania zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-211">Gets or sets the options used to watch for events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6640d-212">Zwraca <see cref="T:System.Management.EventWatcherOptions" /> zawiera opcje zdarzenia używane do monitorowania zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-212">Returns an <see cref="T:System.Management.EventWatcherOptions" /> that contains the event options used to watch for events.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="6640d-213">Wartość właściwości</span><span class="sxs-lookup"><span data-stu-id="6640d-213">Property Value</span></span>  
 <span data-ttu-id="6640d-214">Opcje używane do monitorowania zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="6640d-214">The options used to watch for events.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="6640d-215">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="6640d-215">.NET Framework Security</span></span>  
 <span data-ttu-id="6640d-216">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6640d-216">Full trust for the immediate caller.</span></span> <span data-ttu-id="6640d-217">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="6640d-217">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6640d-218">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6640d-218">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6640d-219">W poniższym przykładzie pokazano, jak klient odbierze powiadomienie, gdy wystąpienie **Win32_Process** jest tworzony, ponieważ jest klasa zdarzenia **klasy __InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6640d-219">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6640d-220">Aby uzyskać więcej informacji, zobacz dokumentację Instrumentacji zarządzania Windows w bibliotece MSDN pod http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6640d-220">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6640d-221">Klient odbiera zdarzenia synchronicznie, wywołując <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6640d-221">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6640d-222">W tym przykładzie można przetestować przez uruchomienie procesu, takiego jak Notatnik, przykładowy kod jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="6640d-222">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/cs/ManagementEventWatcher_Options.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/vb/ManagementEventWatcher_Options.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public System.Management.EventQuery Query { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventQuery Query" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Query" />
      <MemberSignature Language="VB.NET" Value="Public Property Query As EventQuery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventQuery ^ Query { System::Management::EventQuery ^ get(); void set(System::Management::EventQuery ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Query : System.Management.EventQuery with get, set" Usage="System.Management.ManagementEventWatcher.Query" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventQuery</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6640d-223">Pobiera lub ustawia odpowiednie kryteria, aby zastosować do zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-223">Gets or sets the criteria to apply to events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6640d-224">Zwraca <see cref="T:System.Management.EventQuery" /> zawierający zapytanie, aby zastosować do zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-224">Returns an <see cref="T:System.Management.EventQuery" /> that contains the query to apply to events.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="6640d-225">Wartość właściwości</span><span class="sxs-lookup"><span data-stu-id="6640d-225">Property Value</span></span>  
 <span data-ttu-id="6640d-226">Kryteria, aby zastosować do zdarzenia, które jest równa *zapytania zdarzeń*.</span><span class="sxs-lookup"><span data-stu-id="6640d-226">The criteria to apply to the events, which is equal to the *event query*.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="6640d-227">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="6640d-227">.NET Framework Security</span></span>  
 <span data-ttu-id="6640d-228">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6640d-228">Full trust for the immediate caller.</span></span> <span data-ttu-id="6640d-229">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="6640d-229">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6640d-230">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6640d-230">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6640d-231">W poniższym przykładzie pokazano, jak klient odbierze powiadomienie, gdy wystąpienie **Win32_Process** jest tworzony, ponieważ jest klasa zdarzenia **klasy __InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6640d-231">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6640d-232">Aby uzyskać więcej informacji, zobacz dokumentację Instrumentacji zarządzania Windows w bibliotece MSDN pod http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6640d-232">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6640d-233">Klient odbiera zdarzenia synchronicznie, wywołując <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6640d-233">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6640d-234">W tym przykładzie można przetestować przez uruchomienie procesu, takiego jak Notatnik, przykładowy kod jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="6640d-234">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/cs/ManagementEventWatcher_Query.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/vb/ManagementEventWatcher_Query.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Management.ManagementScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.ManagementScope Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As ManagementScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::ManagementScope ^ Scope { System::Management::ManagementScope ^ get(); void set(System::Management::ManagementScope ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Scope : System.Management.ManagementScope with get, set" Usage="System.Management.ManagementEventWatcher.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6640d-235">Pobiera lub ustawia zakres, w których chcesz śledzić zdarzenia (przestrzeni nazw lub zakresie).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-235">Gets or sets the scope in which to watch for events (namespace or scope).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6640d-236">Zwraca <see cref="T:System.Management.ManagementScope" /> zawierający zakres w których chcesz śledzić zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-236">Returns a <see cref="T:System.Management.ManagementScope" /> that contains the scope the in which to watch for events.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="6640d-237">Wartość właściwości</span><span class="sxs-lookup"><span data-stu-id="6640d-237">Property Value</span></span>  
 <span data-ttu-id="6640d-238">Zakres, w których chcesz śledzić zdarzenia (przestrzeni nazw lub zakresie).</span><span class="sxs-lookup"><span data-stu-id="6640d-238">The scope in which to watch for events (namespace or scope).</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="6640d-239">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="6640d-239">.NET Framework Security</span></span>  
 <span data-ttu-id="6640d-240">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6640d-240">Full trust for the immediate caller.</span></span> <span data-ttu-id="6640d-241">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="6640d-241">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6640d-242">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6640d-242">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6640d-243">W poniższym przykładzie pokazano, jak klient odbierze powiadomienie, gdy wystąpienie **Win32_Process** jest tworzony, ponieważ jest klasa zdarzenia **klasy __InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6640d-243">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6640d-244">Aby uzyskać więcej informacji, zobacz dokumentację Instrumentacji zarządzania Windows w bibliotece MSDN pod http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6640d-244">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6640d-245">Klient odbiera zdarzenia synchronicznie, wywołując <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6640d-245">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6640d-246">W tym przykładzie można przetestować przez uruchomienie procesu, takiego jak Notatnik, przykładowy kod jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="6640d-246">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/cs/ManagementEventWatcher_Scope.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/vb/ManagementEventWatcher_Scope.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="managementEventWatcher.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6640d-247">Subskrybuje zdarzenia z danego zapytania, a następnie dostarcza je asynchronicznie, za pośrednictwem <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-247">Subscribes to events with the given query and delivers them, asynchronously, through the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="6640d-248">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="6640d-248">.NET Framework Security</span></span>  
 <span data-ttu-id="6640d-249">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6640d-249">Full trust for the immediate caller.</span></span> <span data-ttu-id="6640d-250">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="6640d-250">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6640d-251">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6640d-251">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="managementEventWatcher.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6640d-252">Umożliwia anulowanie subskrypcji, synchronicznego lub asynchronicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-252">Cancels the subscription whether it is synchronous or asynchronous.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="6640d-253">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="6640d-253">.NET Framework Security</span></span>  
 <span data-ttu-id="6640d-254">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6640d-254">Full trust for the immediate caller.</span></span> <span data-ttu-id="6640d-255">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="6640d-255">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6640d-256">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6640d-256">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6640d-257">W poniższym przykładzie pokazano, jak klient odbierze powiadomienie, gdy wystąpienie **Win32_Process** jest tworzony, ponieważ jest klasa zdarzenia **klasy __InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6640d-257">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6640d-258">Aby uzyskać więcej informacji, zobacz dokumentację Instrumentacji zarządzania Windows w bibliotece MSDN pod http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6640d-258">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6640d-259">Klient odbiera zdarzenia synchronicznie, wywołując <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6640d-259">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6640d-260">W tym przykładzie można przetestować przez uruchomienie procesu, takiego jak Notatnik, przykładowy kod jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="6640d-260">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/cs/ManagementEventWatcher_Stop.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/vb/ManagementEventWatcher_Stop.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="public event System.Management.StoppedEventHandler Stopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.StoppedEventHandler Stopped" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.Stopped" />
      <MemberSignature Language="VB.NET" Value="Public Event Stopped As StoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::StoppedEventHandler ^ Stopped;" />
      <MemberSignature Language="F#" Value="member this.Stopped : System.Management.StoppedEventHandler " Usage="member this.Stopped : System.Management.StoppedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.StoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6640d-261">Występuje po anulowaniu subskrypcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-261">Occurs when a subscription is canceled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="6640d-262">Dane opisujące zdarzenie</span><span class="sxs-lookup"><span data-stu-id="6640d-262">Event Data</span></span>  
 <span data-ttu-id="6640d-263">Program obsługi zdarzeń odbiera argumentu typu <xref:System.Management.StoppedEventArgs> zawierającą dane związane z tym zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="6640d-263">The event handler receives an argument of type <xref:System.Management.StoppedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="6640d-264">Następujące <xref:System.Management.StoppedEventArgs> właściwości zawierają informacje dotyczące danego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="6640d-264">The following <xref:System.Management.StoppedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="6640d-265">Właściwość</span><span class="sxs-lookup"><span data-stu-id="6640d-265">Property</span></span>|<span data-ttu-id="6640d-266">Opis</span><span class="sxs-lookup"><span data-stu-id="6640d-266">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="6640d-267"><xref:System.Management.ManagementEventArgs.Context%2A> (dziedziczone z <xref:System.Management.ManagementEventArgs>)</span><span class="sxs-lookup"><span data-stu-id="6640d-267"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="6640d-268">Pobiera kontekst operacji powtarzana z operacji, który wywołał zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="6640d-268">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.StoppedEventArgs.Status%2A>|<span data-ttu-id="6640d-269">Pobiera stan ukończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="6640d-269">Gets the completion status of the operation.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="6640d-270">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="6640d-270">.NET Framework Security</span></span>  
 <span data-ttu-id="6640d-271">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6640d-271">Full trust for the immediate caller.</span></span> <span data-ttu-id="6640d-272">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="6640d-272">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6640d-273">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6640d-273">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForNextEvent">
      <MemberSignature Language="C#" Value="public System.Management.ManagementBaseObject WaitForNextEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementBaseObject WaitForNextEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.WaitForNextEvent" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForNextEvent () As ManagementBaseObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementBaseObject ^ WaitForNextEvent();" />
      <MemberSignature Language="F#" Value="member this.WaitForNextEvent : unit -&gt; System.Management.ManagementBaseObject" Usage="managementEventWatcher.WaitForNextEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementBaseObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6640d-274">Czeka na następne zdarzenie, odpowiadający określonej kwerendy odebranie i zwraca go.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-274">Waits for the next event that matches the specified query to arrive, and then returns it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6640d-275">A <see cref="T:System.Management.ManagementBaseObject" /> reprezentujący nowo otrzymanej zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6640d-275">A <see cref="T:System.Management.ManagementBaseObject" /> representing the newly arrived event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6640d-276">Jeśli obiekt obserwatora zdarzenia zawiera opcje za pomocą określonego limitu czasu, interfejsu API będzie oczekiwał na następne zdarzenie tylko na określoną ilość czasu; w przeciwnym razie interfejsu API zostanie zablokowane, dopóki nie wystąpi w następnym zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="6640d-276">If the event watcher object contains options with a specified time-out, the API will wait for the next event only for the specified amount of time; otherwise, the API will be blocked until the next event occurs.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="6640d-277">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="6640d-277">.NET Framework Security</span></span>  
 <span data-ttu-id="6640d-278">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="6640d-278">Full trust for the immediate caller.</span></span> <span data-ttu-id="6640d-279">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="6640d-279">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="6640d-280">Aby uzyskać więcej informacji, zobacz [przy użyciu bibliotek pochodzących z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="6640d-280">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6640d-281">W poniższym przykładzie pokazano, jak klient odbierze powiadomienie, gdy wystąpienie **Win32_Process** jest tworzony, ponieważ jest klasa zdarzenia **klasy __InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="6640d-281">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="6640d-282">Aby uzyskać więcej informacji, zobacz dokumentację Instrumentacji zarządzania Windows w bibliotece MSDN pod http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="6640d-282">For more information, see the Windows Management Instrumentation documentation in the MSDN Library at http://msdn.microsoft.com/library.</span></span> <span data-ttu-id="6640d-283">Klient odbiera zdarzenia synchronicznie, wywołując <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6640d-283">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="6640d-284">W tym przykładzie można przetestować przez uruchomienie procesu, takiego jak Notatnik, przykładowy kod jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="6640d-284">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/cs/ManagementEventWatcher_WaitForNextEvent.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/vb/ManagementEventWatcher_WaitForNextEvent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>