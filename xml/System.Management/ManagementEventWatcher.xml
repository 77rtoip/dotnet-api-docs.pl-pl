<Type Name="ManagementEventWatcher" FullName="System.Management.ManagementEventWatcher">
  <Metadata><Meta Name="ms.openlocfilehash" Value="797799001b8545c858b238acd4e042ca19ec4ca5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69116753" /></Metadata><TypeSignature Language="C#" Value="public class ManagementEventWatcher : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementEventWatcher extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementEventWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementEventWatcher&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEventWatcher : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ManagementEventWatcher = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2210c-101">Subskrybuje tymczasowe powiadomienia o zdarzeniach na podstawie określonego *zapytania*dotyczącego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2210c-101">Subscribes to temporary event notifications based on a specified *event query*.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2210c-102">Poniższy przykład pokazuje, jak klient otrzymuje powiadomienie po utworzeniu wystąpienia elementu **Win32_Process** , ponieważ klasa zdarzenia to **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2210c-102">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2210c-103">Aby uzyskać więcej informacji, zobacz dokumentację [Instrumentacja zarządzania Windows](/windows/desktop/wmisdk/wmi-start-page) .</span><span class="sxs-lookup"><span data-stu-id="2210c-103">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="2210c-104">Klient odbiera zdarzenia synchronicznie przez wywołanie <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2210c-104">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2210c-105">Ten przykład może być testowany przez uruchomienie procesu, takiego jak Notatnik, podczas gdy przykładowy kod jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="2210c-105">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2210c-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Management.ManagementEventWatcher" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2210c-106">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2210c-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.Management.ManagementEventWatcher" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2210c-107">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class.</span></span> <span data-ttu-id="2210c-108">W celu dalszej inicjalizacji ustaw właściwości obiektu.</span><span class="sxs-lookup"><span data-stu-id="2210c-108">For further initialization, set the properties on the object.</span></span> <span data-ttu-id="2210c-109">To jest Konstruktor bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="2210c-109">This is the parameterless constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="2210c-110">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="2210c-110">.NET Framework Security</span></span>  
 <span data-ttu-id="2210c-111">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2210c-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="2210c-112">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="2210c-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2210c-113">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2210c-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2210c-114">Poniższy przykład pokazuje, jak klient otrzymuje powiadomienie po utworzeniu wystąpienia elementu **Win32_Process** , ponieważ klasa zdarzenia to **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2210c-114">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2210c-115">Aby uzyskać więcej informacji, zobacz dokumentację [Instrumentacja zarządzania Windows](/windows/desktop/wmisdk/wmi-start-page) .</span><span class="sxs-lookup"><span data-stu-id="2210c-115">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="2210c-116">Klient odbiera zdarzenia synchronicznie przez wywołanie <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2210c-116">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2210c-117">Ten przykład może być testowany przez uruchomienie procesu, takiego jak Notatnik, podczas gdy przykładowy kod jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="2210c-117">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/cs/ManagementEventWatcher.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher/vb/ManagementEventWatcher.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::EventQuery ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.EventQuery -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher query" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="2210c-118"><see cref="T:System.Management.EventQuery" /> Reprezentuje zapytanie zdarzenia usługi WMI, które określa zdarzenia, dla których obserwator będzie nasłuchiwał.</span><span class="sxs-lookup"><span data-stu-id="2210c-118">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="2210c-119">Inicjuje nowe wystąpienie klasy w <see cref="T:System.Management.ManagementEventWatcher" /> przypadku podaną *kwerendę zdarzenia*usługi WMI.</span><span class="sxs-lookup"><span data-stu-id="2210c-119">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query*.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2210c-120">Przestrzeń nazw, w której obserwator będzie nasłuchiwał pod kątem zdarzeń, jest domyślnym obszarem nazw, który jest obecnie ustawiony.</span><span class="sxs-lookup"><span data-stu-id="2210c-120">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2210c-121">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="2210c-121">.NET Framework Security</span></span>  
 <span data-ttu-id="2210c-122">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2210c-122">Full trust for the immediate caller.</span></span> <span data-ttu-id="2210c-123">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="2210c-123">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2210c-124">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2210c-124">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2210c-125">W tym przykładzie kodu klient otrzymuje powiadomienie po utworzeniu wystąpienia elementu **Win32_Process** , ponieważ klasa zdarzenia to **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2210c-125">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2210c-126">Aby uzyskać więcej informacji, zobacz dokumentację [Instrumentacja zarządzania Windows](/windows/desktop/wmisdk/wmi-start-page) .</span><span class="sxs-lookup"><span data-stu-id="2210c-126">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="2210c-127">Klient odbiera zdarzenia synchronicznie przez wywołanie <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2210c-127">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2210c-128">Ten przykład może być testowany przez uruchomienie procesu, takiego jak Notatnik, podczas gdy przykładowy kod jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="2210c-128">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/cs/ManagementEventWatcher-E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-E/vb/ManagementEventWatcher-E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher query" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="2210c-129">Zapytanie zdarzenia usługi WMI definiujące zdarzenia, dla których obserwator będzie nasłuchiwał.</span><span class="sxs-lookup"><span data-stu-id="2210c-129">A WMI event query, which defines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="2210c-130">Inicjuje nowe wystąpienie klasy, <see cref="T:System.Management.ManagementEventWatcher" /> gdy otrzyma *zapytanie zdarzenia* usługi WMI w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="2210c-130">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI *event query* in the form of a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2210c-131">Przestrzeń nazw, w której obserwator będzie nasłuchiwał pod kątem zdarzeń, jest domyślnym obszarem nazw, który jest obecnie ustawiony.</span><span class="sxs-lookup"><span data-stu-id="2210c-131">The namespace in which the watcher will be listening for events is the default namespace that is currently set.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2210c-132">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="2210c-132">.NET Framework Security</span></span>  
 <span data-ttu-id="2210c-133">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2210c-133">Full trust for the immediate caller.</span></span> <span data-ttu-id="2210c-134">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="2210c-134">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2210c-135">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2210c-135">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2210c-136">Poniższy przykład pokazuje, jak klient otrzymuje powiadomienie po utworzeniu wystąpienia elementu **Win32_Process** , ponieważ klasa zdarzenia to **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2210c-136">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2210c-137">Aby uzyskać więcej informacji, zobacz dokumentację [Instrumentacja zarządzania Windows](/windows/desktop/wmisdk/wmi-start-page) .</span><span class="sxs-lookup"><span data-stu-id="2210c-137">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="2210c-138">Klient odbiera zdarzenia synchronicznie przez wywołanie <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2210c-138">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2210c-139">Ten przykład może być testowany przez uruchomienie procesu, takiego jak Notatnik, podczas gdy przykładowy kod jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="2210c-139">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/cs/ManagementEventWatcher-S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S/vb/ManagementEventWatcher-S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.ManagementScope * System.Management.EventQuery -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="2210c-140"><see cref="T:System.Management.ManagementScope" /> Reprezentujący zakres (przestrzeń nazw), w którym obserwator będzie nasłuchiwał zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2210c-140">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="2210c-141"><see cref="T:System.Management.EventQuery" /> Reprezentuje zapytanie zdarzenia usługi WMI, które określa zdarzenia, dla których obserwator będzie nasłuchiwał.</span><span class="sxs-lookup"><span data-stu-id="2210c-141">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="2210c-142">Inicjuje nowe wystąpienie <see cref="T:System.Management.ManagementEventWatcher" /> klasy, które nasłuchuje zdarzeń zgodnych z podaną *kwerendą zdarzenia*usługi WMI.</span><span class="sxs-lookup"><span data-stu-id="2210c-142">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="2210c-143">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="2210c-143">.NET Framework Security</span></span>  
 <span data-ttu-id="2210c-144">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2210c-144">Full trust for the immediate caller.</span></span> <span data-ttu-id="2210c-145">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="2210c-145">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2210c-146">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2210c-146">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2210c-147">W tym przykładzie kodu klient otrzymuje powiadomienie po utworzeniu wystąpienia elementu **Win32_Process** , ponieważ klasa zdarzenia to **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2210c-147">In this code example, the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2210c-148">Aby uzyskać więcej informacji, zobacz dokumentację [Instrumentacja zarządzania Windows](/windows/desktop/wmisdk/wmi-start-page) .</span><span class="sxs-lookup"><span data-stu-id="2210c-148">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="2210c-149">Klient odbiera zdarzenia synchronicznie przez wywołanie <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2210c-149">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2210c-150">Ten przykład może być testowany przez uruchomienie procesu, takiego jak Notatnik, podczas gdy przykładowy kod jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="2210c-150">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/cs/ManagementEventWatcher-M_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E/vb/ManagementEventWatcher-M_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string * string -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="2210c-151">Zakres zarządzania (przestrzeń nazw), w którym obserwator będzie nasłuchiwał zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2210c-151">The management scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="2210c-152">Zapytanie, które definiuje zdarzenia, dla których obserwator będzie nasłuchiwał.</span><span class="sxs-lookup"><span data-stu-id="2210c-152">The query that defines the events for which the watcher will listen.</span></span></param>
        <summary><span data-ttu-id="2210c-153">Inicjuje nowe wystąpienie <see cref="T:System.Management.ManagementEventWatcher" /> klasy, które nasłuchuje zdarzeń zgodnych z podaną *kwerendą zdarzenia*usługi WMI.</span><span class="sxs-lookup"><span data-stu-id="2210c-153">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*.</span></span> <span data-ttu-id="2210c-154">Dla tego wariantu zapytanie i zakres są określone jako ciągi.</span><span class="sxs-lookup"><span data-stu-id="2210c-154">For this variant, the query and the scope are specified as strings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="2210c-155">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="2210c-155">.NET Framework Security</span></span>  
 <span data-ttu-id="2210c-156">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2210c-156">Full trust for the immediate caller.</span></span> <span data-ttu-id="2210c-157">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="2210c-157">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2210c-158">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2210c-158">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2210c-159">Poniższy przykład pokazuje, jak klient otrzymuje powiadomienie po utworzeniu wystąpienia elementu **Win32_Process** , ponieważ klasa zdarzenia to **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2210c-159">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2210c-160">Aby uzyskać więcej informacji, zobacz dokumentację [Instrumentacja zarządzania Windows](/windows/desktop/wmisdk/wmi-start-page) .</span><span class="sxs-lookup"><span data-stu-id="2210c-160">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="2210c-161">Klient odbiera zdarzenia synchronicznie przez wywołanie <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2210c-161">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2210c-162">Ten przykład może być testowany przez uruchomienie procesu, takiego jak Notatnik, podczas gdy przykładowy kod jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="2210c-162">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/cs/ManagementEventWatcher-S_S.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S/vb/ManagementEventWatcher-S_S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (System.Management.ManagementScope scope, System.Management.EventQuery query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.EventQuery query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, query As EventQuery, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::Management::ManagementScope ^ scope, System::Management::EventQuery ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : System.Management.ManagementScope * System.Management.EventQuery * System.Management.EventWatcherOptions -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="query" Type="System.Management.EventQuery" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="2210c-163"><see cref="T:System.Management.ManagementScope" /> Reprezentujący zakres (przestrzeń nazw), w którym obserwator będzie nasłuchiwał zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2210c-163">A <see cref="T:System.Management.ManagementScope" /> representing the scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="2210c-164"><see cref="T:System.Management.EventQuery" /> Reprezentuje zapytanie zdarzenia usługi WMI, które określa zdarzenia, dla których obserwator będzie nasłuchiwał.</span><span class="sxs-lookup"><span data-stu-id="2210c-164">An <see cref="T:System.Management.EventQuery" /> representing a WMI event query, which determines the events for which the watcher will listen.</span></span></param>
        <param name="options"><span data-ttu-id="2210c-165"><see cref="T:System.Management.EventWatcherOptions" /> Reprezentujący dodatkowe opcje używane do oglądania zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2210c-165">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span></span></param>
        <summary><span data-ttu-id="2210c-166">Inicjuje nowe wystąpienie <see cref="T:System.Management.ManagementEventWatcher" /> klasy, które nasłuchuje zdarzeń zgodnych z podaną kwerendą zdarzenia WMI zgodnie z określonymi opcjami.</span><span class="sxs-lookup"><span data-stu-id="2210c-166">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI event query, according to the specified options.</span></span> <span data-ttu-id="2210c-167">Dla tego wariantu zapytanie i zakres są określonymi obiektami.</span><span class="sxs-lookup"><span data-stu-id="2210c-167">For this variant, the query and the scope are specified objects.</span></span> <span data-ttu-id="2210c-168">Obiekt Options może określać opcje, takie jak limit czasu i informacje kontekstu.</span><span class="sxs-lookup"><span data-stu-id="2210c-168">The options object can specify options such as time-out and context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="2210c-169">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="2210c-169">.NET Framework Security</span></span>  
 <span data-ttu-id="2210c-170">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2210c-170">Full trust for the immediate caller.</span></span> <span data-ttu-id="2210c-171">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="2210c-171">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2210c-172">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2210c-172">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2210c-173">Poniższy przykład pokazuje, jak klient otrzymuje powiadomienie po utworzeniu wystąpienia elementu **Win32_Process** , ponieważ klasa zdarzenia to **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2210c-173">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2210c-174">Aby uzyskać więcej informacji, zobacz dokumentację [Instrumentacja zarządzania Windows](/windows/desktop/wmisdk/wmi-start-page) .</span><span class="sxs-lookup"><span data-stu-id="2210c-174">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="2210c-175">Klient odbiera zdarzenia synchronicznie przez wywołanie <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2210c-175">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2210c-176">Ten przykład może być testowany przez uruchomienie procesu, takiego jak Notatnik, podczas gdy przykładowy kod jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="2210c-176">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/cs/ManagementEventWatcher-M_E_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-M_E_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-M_E_E/vb/ManagementEventWatcher-M_E_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEventWatcher (string scope, string query, System.Management.EventWatcherOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string query, class System.Management.EventWatcherOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, query As String, options As EventWatcherOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEventWatcher(System::String ^ scope, System::String ^ query, System::Management::EventWatcherOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementEventWatcher : string * string * System.Management.EventWatcherOptions -&gt; System.Management.ManagementEventWatcher" Usage="new System.Management.ManagementEventWatcher (scope, query, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EventWatcherOptions" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="2210c-177">Zakres zarządzania (przestrzeń nazw), w którym obserwator będzie nasłuchiwał zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2210c-177">The management scope (namespace) in which the watcher will listen for events.</span></span></param>
        <param name="query"><span data-ttu-id="2210c-178">Zapytanie, które definiuje zdarzenia, dla których obserwator będzie nasłuchiwał.</span><span class="sxs-lookup"><span data-stu-id="2210c-178">The query that defines the events for which the watcher will listen.</span></span></param>
        <param name="options"><span data-ttu-id="2210c-179"><see cref="T:System.Management.EventWatcherOptions" /> Reprezentujący dodatkowe opcje używane do oglądania zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2210c-179">An <see cref="T:System.Management.EventWatcherOptions" /> representing additional options used to watch for events.</span></span></param>
        <summary><span data-ttu-id="2210c-180">Inicjuje nowe wystąpienie <see cref="T:System.Management.ManagementEventWatcher" /> klasy, które nasłuchuje zdarzeń zgodnych z podaną *kwerendą zdarzenia*WMI zgodnie z określonymi opcjami.</span><span class="sxs-lookup"><span data-stu-id="2210c-180">Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for events conforming to the given WMI *event query*, according to the specified options.</span></span> <span data-ttu-id="2210c-181">Dla tego wariantu zapytanie i zakres są określone jako ciągi.</span><span class="sxs-lookup"><span data-stu-id="2210c-181">For this variant, the query and the scope are specified as strings.</span></span> <span data-ttu-id="2210c-182">Obiekt Options może określać opcje, takie jak informacje o przekroczeniu limitu czasu i kontekstu.</span><span class="sxs-lookup"><span data-stu-id="2210c-182">The options object can specify options such as a time-out and context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="2210c-183">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="2210c-183">.NET Framework Security</span></span>  
 <span data-ttu-id="2210c-184">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2210c-184">Full trust for the immediate caller.</span></span> <span data-ttu-id="2210c-185">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="2210c-185">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2210c-186">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2210c-186">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2210c-187">Poniższy przykład pokazuje, jak klient otrzymuje powiadomienie po utworzeniu wystąpienia elementu **Win32_Process** , ponieważ klasa zdarzenia to **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2210c-187">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2210c-188">Aby uzyskać więcej informacji, zobacz dokumentację [Instrumentacja zarządzania Windows](/windows/desktop/wmisdk/wmi-start-page) .</span><span class="sxs-lookup"><span data-stu-id="2210c-188">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="2210c-189">Klient odbiera zdarzenia synchronicznie przez wywołanie <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2210c-189">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2210c-190">Ten przykład może być testowany przez uruchomienie procesu, takiego jak Notatnik, podczas gdy przykładowy kod jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="2210c-190">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/cs/ManagementEventWatcher-S_S_E.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher-S_S_E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher-S_S_E/vb/ManagementEventWatcher-S_S_E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventArrived">
      <MemberSignature Language="C#" Value="public event System.Management.EventArrivedEventHandler EventArrived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.EventArrivedEventHandler EventArrived" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.EventArrived" />
      <MemberSignature Language="VB.NET" Value="Public Event EventArrived As EventArrivedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::EventArrivedEventHandler ^ EventArrived;" />
      <MemberSignature Language="F#" Value="member this.EventArrived : System.Management.EventArrivedEventHandler " Usage="member this.EventArrived : System.Management.EventArrivedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventArrivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2210c-191">Występuje po nadejściu nowego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2210c-191">Occurs when a new event arrives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="2210c-192">Dane opisujące zdarzenie</span><span class="sxs-lookup"><span data-stu-id="2210c-192">Event Data</span></span>  
 <span data-ttu-id="2210c-193">Program obsługi zdarzeń odbiera argument typu <xref:System.Management.EventArrivedEventArgs> zawierający dane powiązane z tym zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="2210c-193">The event handler receives an argument of type <xref:System.Management.EventArrivedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="2210c-194">Poniższe <xref:System.Management.EventArrivedEventArgs> właściwości zawierają informacje specyficzne dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2210c-194">The following <xref:System.Management.EventArrivedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="2210c-195">Właściwość</span><span class="sxs-lookup"><span data-stu-id="2210c-195">Property</span></span>|<span data-ttu-id="2210c-196">Opis</span><span class="sxs-lookup"><span data-stu-id="2210c-196">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="2210c-197"><xref:System.Management.ManagementEventArgs.Context%2A>(Odziedziczone z <xref:System.Management.ManagementEventArgs>)</span><span class="sxs-lookup"><span data-stu-id="2210c-197"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="2210c-198">Pobiera kontekst operacji z powrotem z operacji, która wyzwoliła zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2210c-198">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.EventArrivedEventArgs.NewEvent%2A>|<span data-ttu-id="2210c-199">Pobiera zdarzenie usługi WMI, które zostało dostarczone.</span><span class="sxs-lookup"><span data-stu-id="2210c-199">Gets the WMI event that was delivered.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="2210c-200">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="2210c-200">.NET Framework Security</span></span>  
 <span data-ttu-id="2210c-201">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2210c-201">Full trust for the immediate caller.</span></span> <span data-ttu-id="2210c-202">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="2210c-202">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2210c-203">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2210c-203">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ManagementEventWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ManagementEventWatcher ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="managementEventWatcher.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2210c-204">Zapewnia, że oczekujące wywołania są wyczyszczone.</span><span class="sxs-lookup"><span data-stu-id="2210c-204">Ensures that outstanding calls are cleared.</span></span> <span data-ttu-id="2210c-205">Jest to destruktor dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="2210c-205">This is the destructor for the object.</span></span> <span data-ttu-id="2210c-206">W C#programie finalizatory są wyrażane przy użyciu składni destruktora.</span><span class="sxs-lookup"><span data-stu-id="2210c-206">In C#, finalizers are expressed using destructor syntax.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="2210c-207">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="2210c-207">.NET Framework Security</span></span>  
 <span data-ttu-id="2210c-208">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2210c-208">Full trust for the immediate caller.</span></span> <span data-ttu-id="2210c-209">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="2210c-209">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2210c-210">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2210c-210">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Management.EventWatcherOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventWatcherOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As EventWatcherOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventWatcherOptions ^ Options { System::Management::EventWatcherOptions ^ get(); void set(System::Management::EventWatcherOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Management.EventWatcherOptions with get, set" Usage="System.Management.ManagementEventWatcher.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventWatcherOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2210c-211">Pobiera lub ustawia opcje używane do oglądania zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2210c-211">Gets or sets the options used to watch for events.</span></span></summary>
        <value><span data-ttu-id="2210c-212">Opcje zdarzenia używane do oglądania zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2210c-212">The event options used to watch for events.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="2210c-213">Wartość właściwości</span><span class="sxs-lookup"><span data-stu-id="2210c-213">Property Value</span></span>  
 <span data-ttu-id="2210c-214">Opcje używane do oglądania zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2210c-214">The options used to watch for events.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2210c-215">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="2210c-215">.NET Framework Security</span></span>  
 <span data-ttu-id="2210c-216">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2210c-216">Full trust for the immediate caller.</span></span> <span data-ttu-id="2210c-217">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="2210c-217">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2210c-218">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2210c-218">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2210c-219">Poniższy przykład pokazuje, jak klient otrzymuje powiadomienie po utworzeniu wystąpienia elementu **Win32_Process** , ponieważ klasa zdarzenia to **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2210c-219">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2210c-220">Aby uzyskać więcej informacji, zobacz dokumentację [Instrumentacja zarządzania Windows](/windows/desktop/wmisdk/wmi-start-page) .</span><span class="sxs-lookup"><span data-stu-id="2210c-220">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="2210c-221">Klient odbiera zdarzenia synchronicznie przez wywołanie <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2210c-221">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2210c-222">Ten przykład może być testowany przez uruchomienie procesu, takiego jak Notatnik, podczas gdy przykładowy kod jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="2210c-222">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/cs/ManagementEventWatcher_Options.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Options#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Options/vb/ManagementEventWatcher_Options.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public System.Management.EventQuery Query { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.EventQuery Query" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Query" />
      <MemberSignature Language="VB.NET" Value="Public Property Query As EventQuery" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::EventQuery ^ Query { System::Management::EventQuery ^ get(); void set(System::Management::EventQuery ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Query : System.Management.EventQuery with get, set" Usage="System.Management.ManagementEventWatcher.Query" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.EventQuery</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2210c-223">Pobiera lub ustawia kryteria, które mają zostać zastosowane do zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2210c-223">Gets or sets the criteria to apply to events.</span></span></summary>
        <value><span data-ttu-id="2210c-224">Zapytanie, które ma zostać zastosowane do zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2210c-224">The query to apply to events.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="2210c-225">Wartość właściwości</span><span class="sxs-lookup"><span data-stu-id="2210c-225">Property Value</span></span>  
 <span data-ttu-id="2210c-226">Kryteria, które mają zostać zastosowane do zdarzeń, które są równe *kwerendzie zdarzenia*.</span><span class="sxs-lookup"><span data-stu-id="2210c-226">The criteria to apply to the events, which is equal to the *event query*.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2210c-227">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="2210c-227">.NET Framework Security</span></span>  
 <span data-ttu-id="2210c-228">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2210c-228">Full trust for the immediate caller.</span></span> <span data-ttu-id="2210c-229">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="2210c-229">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2210c-230">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2210c-230">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2210c-231">Poniższy przykład pokazuje, jak klient otrzymuje powiadomienie po utworzeniu wystąpienia elementu **Win32_Process** , ponieważ klasa zdarzenia to **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2210c-231">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2210c-232">Aby uzyskać więcej informacji, zobacz dokumentację [Instrumentacja zarządzania Windows](/windows/desktop/wmisdk/wmi-start-page) .</span><span class="sxs-lookup"><span data-stu-id="2210c-232">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="2210c-233">Klient odbiera zdarzenia synchronicznie przez wywołanie <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2210c-233">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2210c-234">Ten przykład może być testowany przez uruchomienie procesu, takiego jak Notatnik, podczas gdy przykładowy kod jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="2210c-234">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/cs/ManagementEventWatcher_Query.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Query#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Query/vb/ManagementEventWatcher_Query.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Management.ManagementScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.ManagementScope Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementEventWatcher.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As ManagementScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::ManagementScope ^ Scope { System::Management::ManagementScope ^ get(); void set(System::Management::ManagementScope ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Scope : System.Management.ManagementScope with get, set" Usage="System.Management.ManagementEventWatcher.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2210c-235">Pobiera lub ustawia zakres, w którym będą obserwowane zdarzenia (przestrzeń nazw lub zakres).</span><span class="sxs-lookup"><span data-stu-id="2210c-235">Gets or sets the scope in which to watch for events (namespace or scope).</span></span></summary>
        <value><span data-ttu-id="2210c-236">Zakres, w którym mają być obserwowane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2210c-236">The scope in which to watch for events.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="2210c-237">Wartość właściwości</span><span class="sxs-lookup"><span data-stu-id="2210c-237">Property Value</span></span>  
 <span data-ttu-id="2210c-238">Zakres, w którym mają być obserwowane zdarzenia (przestrzeń nazw lub zakres).</span><span class="sxs-lookup"><span data-stu-id="2210c-238">The scope in which to watch for events (namespace or scope).</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2210c-239">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="2210c-239">.NET Framework Security</span></span>  
 <span data-ttu-id="2210c-240">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2210c-240">Full trust for the immediate caller.</span></span> <span data-ttu-id="2210c-241">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="2210c-241">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2210c-242">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2210c-242">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2210c-243">Poniższy przykład pokazuje, jak klient otrzymuje powiadomienie po utworzeniu wystąpienia elementu **Win32_Process** , ponieważ klasa zdarzenia to **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2210c-243">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2210c-244">Aby uzyskać więcej informacji, zobacz dokumentację [Instrumentacja zarządzania Windows](/windows/desktop/wmisdk/wmi-start-page) .</span><span class="sxs-lookup"><span data-stu-id="2210c-244">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="2210c-245">Klient odbiera zdarzenia synchronicznie przez wywołanie <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2210c-245">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2210c-246">Ten przykład może być testowany przez uruchomienie procesu, takiego jak Notatnik, podczas gdy przykładowy kod jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="2210c-246">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/cs/ManagementEventWatcher_Scope.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Scope#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Scope/vb/ManagementEventWatcher_Scope.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="managementEventWatcher.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2210c-247">Subskrybuje zdarzenia za pomocą danego zapytania i dostarcza je asynchronicznie przez <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2210c-247">Subscribes to events with the given query and delivers them, asynchronously, through the <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="2210c-248">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="2210c-248">.NET Framework Security</span></span>  
 <span data-ttu-id="2210c-249">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2210c-249">Full trust for the immediate caller.</span></span> <span data-ttu-id="2210c-250">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="2210c-250">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2210c-251">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2210c-251">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="managementEventWatcher.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2210c-252">Anuluje subskrypcję niezależnie od tego, czy jest ona synchroniczna, czy asynchroniczna.</span><span class="sxs-lookup"><span data-stu-id="2210c-252">Cancels the subscription whether it is synchronous or asynchronous.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="2210c-253">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="2210c-253">.NET Framework Security</span></span>  
 <span data-ttu-id="2210c-254">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2210c-254">Full trust for the immediate caller.</span></span> <span data-ttu-id="2210c-255">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="2210c-255">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2210c-256">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2210c-256">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2210c-257">Poniższy przykład pokazuje, jak klient otrzymuje powiadomienie po utworzeniu wystąpienia elementu **Win32_Process** , ponieważ klasa zdarzenia to **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2210c-257">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2210c-258">Aby uzyskać więcej informacji, zobacz dokumentację [Instrumentacja zarządzania Windows](/windows/desktop/wmisdk/wmi-start-page) .</span><span class="sxs-lookup"><span data-stu-id="2210c-258">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="2210c-259">Klient odbiera zdarzenia synchronicznie przez wywołanie <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2210c-259">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2210c-260">Ten przykład może być testowany przez uruchomienie procesu, takiego jak Notatnik, podczas gdy przykładowy kod jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="2210c-260">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/cs/ManagementEventWatcher_Stop.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_Stop#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_Stop/vb/ManagementEventWatcher_Stop.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="public event System.Management.StoppedEventHandler Stopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Management.StoppedEventHandler Stopped" />
      <MemberSignature Language="DocId" Value="E:System.Management.ManagementEventWatcher.Stopped" />
      <MemberSignature Language="VB.NET" Value="Public Event Stopped As StoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Management::StoppedEventHandler ^ Stopped;" />
      <MemberSignature Language="F#" Value="member this.Stopped : System.Management.StoppedEventHandler " Usage="member this.Stopped : System.Management.StoppedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.StoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2210c-261">Występuje, gdy subskrypcja zostanie anulowana.</span><span class="sxs-lookup"><span data-stu-id="2210c-261">Occurs when a subscription is canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="event-data"></a><span data-ttu-id="2210c-262">Dane opisujące zdarzenie</span><span class="sxs-lookup"><span data-stu-id="2210c-262">Event Data</span></span>  
 <span data-ttu-id="2210c-263">Program obsługi zdarzeń odbiera argument typu <xref:System.Management.StoppedEventArgs> zawierający dane powiązane z tym zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="2210c-263">The event handler receives an argument of type <xref:System.Management.StoppedEventArgs> containing data related to this event.</span></span> <span data-ttu-id="2210c-264">Poniższe <xref:System.Management.StoppedEventArgs> właściwości zawierają informacje specyficzne dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2210c-264">The following <xref:System.Management.StoppedEventArgs> properties provide information specific to this event.</span></span>  
  
|<span data-ttu-id="2210c-265">Właściwość</span><span class="sxs-lookup"><span data-stu-id="2210c-265">Property</span></span>|<span data-ttu-id="2210c-266">Opis</span><span class="sxs-lookup"><span data-stu-id="2210c-266">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="2210c-267"><xref:System.Management.ManagementEventArgs.Context%2A>(Odziedziczone z <xref:System.Management.ManagementEventArgs>)</span><span class="sxs-lookup"><span data-stu-id="2210c-267"><xref:System.Management.ManagementEventArgs.Context%2A> (inherited from <xref:System.Management.ManagementEventArgs>)</span></span>|<span data-ttu-id="2210c-268">Pobiera kontekst operacji z powrotem z operacji, która wyzwoliła zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2210c-268">Gets the operation context echoed back from the operation that triggered the event.</span></span>|  
|<xref:System.Management.StoppedEventArgs.Status%2A>|<span data-ttu-id="2210c-269">Pobiera stan ukończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="2210c-269">Gets the completion status of the operation.</span></span>|  
  
## <a name="net-framework-security"></a><span data-ttu-id="2210c-270">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="2210c-270">.NET Framework Security</span></span>  
 <span data-ttu-id="2210c-271">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2210c-271">Full trust for the immediate caller.</span></span> <span data-ttu-id="2210c-272">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="2210c-272">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2210c-273">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2210c-273">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForNextEvent">
      <MemberSignature Language="C#" Value="public System.Management.ManagementBaseObject WaitForNextEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementBaseObject WaitForNextEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementEventWatcher.WaitForNextEvent" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForNextEvent () As ManagementBaseObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementBaseObject ^ WaitForNextEvent();" />
      <MemberSignature Language="F#" Value="member this.WaitForNextEvent : unit -&gt; System.Management.ManagementBaseObject" Usage="managementEventWatcher.WaitForNextEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementBaseObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2210c-274">Czeka na następne zdarzenie, które pasuje do określonego zapytania, a następnie zwraca go.</span><span class="sxs-lookup"><span data-stu-id="2210c-274">Waits for the next event that matches the specified query to arrive, and then returns it.</span></span></summary>
        <returns><span data-ttu-id="2210c-275"><see cref="T:System.Management.ManagementBaseObject" /> Reprezentujący nowo dostarczone zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2210c-275">A <see cref="T:System.Management.ManagementBaseObject" /> representing the newly arrived event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2210c-276">Jeśli obiekt obserwatora zdarzeń zawiera opcje z określonym limitem czasu, interfejs API będzie oczekiwać na następne zdarzenie tylko przez określony czas; w przeciwnym razie interfejs API zostanie zablokowany do momentu wystąpienia następnego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2210c-276">If the event watcher object contains options with a specified time-out, the API will wait for the next event only for the specified amount of time; otherwise, the API will be blocked until the next event occurs.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="2210c-277">Zabezpieczenia.NET Framework</span><span class="sxs-lookup"><span data-stu-id="2210c-277">.NET Framework Security</span></span>  
 <span data-ttu-id="2210c-278">Pełne zaufanie do bezpośredniego wywołującego.</span><span class="sxs-lookup"><span data-stu-id="2210c-278">Full trust for the immediate caller.</span></span> <span data-ttu-id="2210c-279">Ten element członkowski nie może być używany przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="2210c-279">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="2210c-280">Aby uzyskać więcej informacji, zobacz [Używanie bibliotek z częściowo zaufanego kodu](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span><span class="sxs-lookup"><span data-stu-id="2210c-280">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2210c-281">Poniższy przykład pokazuje, jak klient otrzymuje powiadomienie po utworzeniu wystąpienia elementu **Win32_Process** , ponieważ klasa zdarzenia to **__InstanceCreationEvent**.</span><span class="sxs-lookup"><span data-stu-id="2210c-281">The following example shows how the client receives notification when an instance of **Win32_Process** is created because the event class is **__InstanceCreationEvent**.</span></span> <span data-ttu-id="2210c-282">Aby uzyskać więcej informacji, zobacz dokumentację [Instrumentacja zarządzania Windows](/windows/desktop/wmisdk/wmi-start-page) .</span><span class="sxs-lookup"><span data-stu-id="2210c-282">For more information, see the [Windows Management Instrumentation](/windows/desktop/wmisdk/wmi-start-page) documentation.</span></span> <span data-ttu-id="2210c-283">Klient odbiera zdarzenia synchronicznie przez wywołanie <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2210c-283">The client receives events synchronously by calling the <xref:System.Management.ManagementEventWatcher.WaitForNextEvent%2A> method.</span></span> <span data-ttu-id="2210c-284">Ten przykład może być testowany przez uruchomienie procesu, takiego jak Notatnik, podczas gdy przykładowy kod jest uruchomiony.</span><span class="sxs-lookup"><span data-stu-id="2210c-284">This example can be tested by starting a process, such as Notepad, while the example code is running.</span></span>  
  
 [!code-csharp[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/cs/ManagementEventWatcher_WaitForNextEvent.cs#1)]
 [!code-vb[wminet_ManagementEventWatcher_WaitForNextEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementEventWatcher_WaitForNextEvent/vb/ManagementEventWatcher_WaitForNextEvent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
