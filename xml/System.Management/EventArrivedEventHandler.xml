<Type Name="EventArrivedEventHandler" FullName="System.Management.EventArrivedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6b7c14c2ecb7e6141a356d4849c4676401951bc5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36477914" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void EventArrivedEventHandler(object sender, EventArrivedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EventArrivedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Management.EventArrivedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventArrivedEventHandler(sender As Object, e As EventArrivedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void EventArrivedEventHandler(System::Object ^ sender, EventArrivedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type EventArrivedEventHandler = delegate of obj * EventArrivedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Management.EventArrivedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Wystąpienie obiektu, który można wywołać tej metody.</param>
    <param name="e">
      <see cref="T:System.Management.EventArrivedEventArgs" /> , Który określa przyczyny zdarzenia został wywołany.</param>
    <summary>Reprezentuje metodę, która będzie obsługiwać <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład asynchroniczne konfiguruje czasomierza WMI, aby wywołać zdarzenie w ciągu sekundy i spowoduje usunięcie jej, gdy nie są już potrzebne. <xref:System.Management.ManagementEventWatcher> Definiuje kilka [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] zdarzenia, które są wywoływane, gdy są dostarczane zdarzeń WMI. Obiekty delegowane są dołączone do tych zdarzeń do obsługi przychodzących danych.  
  
 [!code-csharp[wminet_EventArrivedEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_EventArrivedEventHandler/cs/EventArrivedEventHandler.cs#1)]
 [!code-vb[wminet_EventArrivedEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_EventArrivedEventHandler/vb/EventArrivedEventHandler.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>