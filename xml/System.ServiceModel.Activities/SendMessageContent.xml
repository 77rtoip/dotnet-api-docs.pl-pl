<Type Name="SendMessageContent" FullName="System.ServiceModel.Activities.SendMessageContent">
  <TypeSignature Language="C#" Value="public sealed class SendMessageContent : System.ServiceModel.Activities.SendContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SendMessageContent extends System.ServiceModel.Activities.SendContent" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activities.SendMessageContent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SendMessageContent&#xA;Inherits SendContent" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendMessageContent sealed : System::ServiceModel::Activities::SendContent" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Activities.SendContent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Message")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9de24-101">Klasa używana do wysyłania pojedynczego elementu (komunikat) i usługi przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="9de24-101">A class used to send a single item (message) to or from a workflow service.</span></span> <span data-ttu-id="9de24-102">Element może być typem wbudowanym, takie jak typy pierwotne, <see cref="T:System.ServiceModel.Channels.Message" />, lub <see cref="T:System.Xml.Linq.XElement" />; lub kontrakt danych zdefiniowanym przez aplikację, kontraktu komunikatu lub typ możliwy do serializacji XML.</span><span class="sxs-lookup"><span data-stu-id="9de24-102">The item can be a built-in type such as primitive types, <see cref="T:System.ServiceModel.Channels.Message" />, or <see cref="T:System.Xml.Linq.XElement" />; or an application-defined data contract, message contract, or XML serializable type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9de24-103">Podczas korzystania z tej klasy, serializacji przesyłania wiadomości są bez otoki, o ile danych jest typ kontraktu komunikatu lub typu <xref:System.ServiceModel.Channels.Message>.</span><span class="sxs-lookup"><span data-stu-id="9de24-103">When using this class, messages serialized on the wire are unwrapped, unless the data is a message contract type or of type <xref:System.ServiceModel.Channels.Message>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de24-104">Poniższy przykład przedstawia użycie <xref:System.ServiceModel.Activities.SendMessageContent> wystąpienia z <xref:System.ServiceModel.Activities.Send> działania.</span><span class="sxs-lookup"><span data-stu-id="9de24-104">The following example shows how to use a <xref:System.ServiceModel.Activities.SendMessageContent> instance with a <xref:System.ServiceModel.Activities.Send> activity.</span></span>  
  
 [!code-csharp[ContentBasedCorrelation#0](~/samples/snippets/csharp/VS_Snippets_CFX/contentbasedcorrelation/cs/client.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9de24-105">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="9de24-105">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendMessageContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.SendMessageContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendMessageContent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9de24-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="9de24-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendMessageContent (System.Activities.InArgument message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.InArgument message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As InArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendMessageContent(System::Activities::InArgument ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.Activities.InArgument" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="9de24-107">Dane do wysłania.</span><span class="sxs-lookup"><span data-stu-id="9de24-107">The data to send.</span></span></param>
        <summary><span data-ttu-id="9de24-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> klasy określone dane do wysłania.</span><span class="sxs-lookup"><span data-stu-id="9de24-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> class with the specified data to send.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9de24-109">Poniższy przykład przedstawia sposób użycia tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="9de24-109">The following example shows how to use this constructor.</span></span>  
  
 [!code-csharp[ContentBasedCorrelation#0](~/samples/snippets/csharp/VS_Snippets_CFX/contentbasedcorrelation/cs/client.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendMessageContent (System.Activities.InArgument message, Type declaredMessageType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.InArgument message, class System.Type declaredMessageType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.SendMessageContent.#ctor(System.Activities.InArgument,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As InArgument, declaredMessageType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendMessageContent(System::Activities::InArgument ^ message, Type ^ declaredMessageType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.Activities.InArgument" />
        <Parameter Name="declaredMessageType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="9de24-110">Dane do wysłania.</span><span class="sxs-lookup"><span data-stu-id="9de24-110">The data to send.</span></span></param>
        <param name="declaredMessageType"><span data-ttu-id="9de24-111">Typ danych, który znajduje się w opisie usługi.</span><span class="sxs-lookup"><span data-stu-id="9de24-111">The data type that appears on the service description.</span></span> <span data-ttu-id="9de24-112">Musi być taki sam typ jak <c>komunikat</c> lub dowolnego typu podstawowego <c>komunikat</c>.</span><span class="sxs-lookup"><span data-stu-id="9de24-112">It must be the same type as <c>message</c> or any base type of <c>message</c>.</span></span></param>
        <summary><span data-ttu-id="9de24-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> klasy z określonym komunikatem i typ wiadomości.</span><span class="sxs-lookup"><span data-stu-id="9de24-113">Initializes a new instance of the <see cref="T:System.ServiceModel.Activities.SendMessageContent" /> class with the specified message and message type.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaredMessageType">
      <MemberSignature Language="C#" Value="public Type DeclaredMessageType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaredMessageType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeclaredMessageType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaredMessageType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9de24-114">Pobiera lub ustawia typ zadeklarowany komunikatu.</span><span class="sxs-lookup"><span data-stu-id="9de24-114">Gets or sets the declared message type.</span></span></summary>
        <value><span data-ttu-id="9de24-115">Typ komunikatu zadeklarowane.</span><span class="sxs-lookup"><span data-stu-id="9de24-115">The declared message type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9de24-116"><xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType%2A> ma typ danych, który będzie wyświetlany w opisie usługi i WSDL.</span><span class="sxs-lookup"><span data-stu-id="9de24-116"><xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType%2A> is the data type that will appear on the service description and WSDL.</span></span> <span data-ttu-id="9de24-117">Możesz opisu usługi zawiera typ klasy podstawowej, dzięki czemu różne klasy pochodne mogą być wysyłane i odbierane przez usługę w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="9de24-117">You may want the service description to contain the base class type so that various derived classes can be sent and received by the service at runtime.</span></span> <span data-ttu-id="9de24-118"><xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType%2A> musi być taki sam jak typ argumentu właściwości wiadomości lub jego typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="9de24-118"><xref:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType%2A> must be either the same as the argument type of the Message property or its base type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Activities.InArgument Message { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.InArgument Message" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Activities.SendMessageContent.Message" />
      <MemberSignature Language="VB.NET" Value="Public Property Message As InArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::InArgument ^ Message { System::Activities::InArgument ^ get(); void set(System::Activities::InArgument ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9de24-119">Pobiera lub ustawia dane do wysłania.</span><span class="sxs-lookup"><span data-stu-id="9de24-119">Gets or sets the data to send.</span></span></summary>
        <value><span data-ttu-id="9de24-120">Dane do wysłania.</span><span class="sxs-lookup"><span data-stu-id="9de24-120">The data to send.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeDeclaredMessageType">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeDeclaredMessageType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeDeclaredMessageType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activities.SendMessageContent.ShouldSerializeDeclaredMessageType" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeDeclaredMessageType () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeDeclaredMessageType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9de24-121">Pobiera wartość wskazującą, czy <see cref="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType" /> właściwości powinny być serializowane XAML.</span><span class="sxs-lookup"><span data-stu-id="9de24-121">Gets a value that indicates whether the <see cref="P:System.ServiceModel.Activities.SendMessageContent.DeclaredMessageType" /> property should be XAML-serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="9de24-122"><see langword="true" /> Jeśli właściwość powinny być serializowane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9de24-122"><see langword="true" /> if the property should be serialized; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>