<Type Name="SoundPlayer" FullName="System.Media.SoundPlayer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f4dfb11078bcf8447c0e3493e7e80d8a93a665b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36553837" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoundPlayer : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable SoundPlayer extends System.ComponentModel.Component implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Media.SoundPlayer" />
  <TypeSignature Language="VB.NET" Value="Public Class SoundPlayer&#xA;Inherits Component&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoundPlayer : System::ComponentModel::Component, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type SoundPlayer = class&#xA;    inherit Component&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Formanty odtwarzanie dźwięku z pliku WAV.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Media.SoundPlayer> Klasa udostępnia prosty interfejs służący do ładowania i odtwarzanie plików WAV. <xref:System.Media.SoundPlayer> Klasa obsługuje ładowanie pliku wav ze ścieżki plików, adres URL, <xref:System.IO.Stream> zawierającego plik .wav lub osadzonego zasobu, który zawiera plik .wav.  
  
 Do odtwarzania dźwięku za pomocą <xref:System.Media.SoundPlayer> klasy, skonfigurować <xref:System.Media.SoundPlayer> ze ścieżką do pliku WAV i wywołanie jednej z metod play. Można określić plik WAV, aby odtworzyć za pomocą jednego z konstruktorów lub przez ustawienie albo <xref:System.Media.SoundPlayer.SoundLocation%2A> lub <xref:System.Media.SoundPlayer.Stream%2A> właściwości. Przed odtwarzanie przy użyciu jednej z metod obciążenia można załadować pliku lub może zostać odroczona ładowania, dopóki nosi nazwę jednej z metod play. A <xref:System.Media.SoundPlayer> skonfigurowany do załadowania pliku wav z <xref:System.IO.Stream> lub adres URL musi załadować pliku wav do pamięci, przed rozpoczęciem odtwarzania.  
  
 Można było ładować lub odtwarzanie plików WAV synchronicznie lub asynchronicznie. Wywołanie synchroniczne obciążenia lub odtworzyć — metoda wątek wywołujący będzie czekać zwraca metody, które mogą powodować malowania i innych zdarzeń zostanie przerwane. Wywołanie asynchroniczne ładowanie lub metoda play umożliwi wątek wywołujący nadal bez przeszkód. Aby uzyskać więcej informacji dotyczących wywołań metod asynchronicznych, zobacz [porady: uruchamianie operacji w tle](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md).  
  
 Gdy <xref:System.Media.SoundPlayer> zakończył ładowanie pliku wav zgłasza <xref:System.Media.SoundPlayer.LoadCompleted> zdarzeń. Można sprawdzić <xref:System.ComponentModel.AsyncCompletedEventArgs> w obsługi zdarzenia, aby określić, czy obciążenie powodzeniem lub niepowodzeniem. <xref:System.Media.SoundPlayer.SoundLocationChanged> Zdarzenie jest wywoływane, gdy ustawiono źródła audio Nowa ścieżka pliku lub adres URL. <xref:System.Media.SoundPlayer.StreamChanged> Zdarzenie jest wywoływane, gdy źródło jest ustawiona na nowy <xref:System.IO.Stream>. Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Aby uzyskać więcej informacji na temat <xref:System.Media.SoundPlayer>, zobacz [Przegląd klasy SoundPlayer](~/docs/framework/winforms/controls/soundplayer-class-overview.md).  
  
> [!NOTE]
>  <xref:System.Media.SoundPlayer> Klasy nie może odtworzyć innych typów plików, takich jak .wma lub .mp3. Jeśli chcesz odtworzyć innych typów plików, można użyć formantu programu Windows Media Player. Aby uzyskać więcej informacji, zobacz [za pomocą formantu programu Windows Media Player w rozwiązaniu Framework .NET](http://go.microsoft.com/fwlink/?LinkId=131267) i [Windows Media Player modelu odwołanie do obiektu .NET Visual Basic i C#](http://go.microsoft.com/fwlink/?LinkId=131269) w zestawie SDK systemu Windows Media Player .  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Media.SoundPlayer> klasy dla odtwarzanie plików WAV ścieżkę lokalną lub jednolity identyfikator zasobów (URI).  
  
 [!code-cpp[System.Windows.Forms.Sound#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#1)]
 [!code-csharp[System.Windows.Forms.Sound#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#1)]
 [!code-vb[System.Windows.Forms.Sound#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Media.SystemSounds" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Media.SoundPlayer" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Media.SoundPlayer" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor inicjuje <xref:System.Media.SoundPlayer> bez źródła audio. Dopóki nie zostanie skonfigurowane ze ścieżką źródła audio <xref:System.Media.SoundPlayer> będzie Odtwórz sygnał dźwiękowy dźwięk, gdy nosi nazwę jednej z metod jej odtwarzania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Media.SoundPlayer : System.IO.Stream -&gt; System.Media.SoundPlayer" Usage="new System.Media.SoundPlayer stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">A <see cref="T:System.IO.Stream" /> do pliku WAV.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Media.SoundPlayer" /> klasy i dołączenie pliku wav w ramach określonego <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Stream> Przekazany do `stream` parametr powinien być <xref:System.IO.Stream> zawierający plik .wav. Dane zwrócone przez <xref:System.IO.Stream.Read%2A> metoda <xref:System.IO.Stream> powinna być dane w pliku WAV.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPlayer (string soundLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string soundLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (soundLocation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoundPlayer(System::String ^ soundLocation);" />
      <MemberSignature Language="F#" Value="new System.Media.SoundPlayer : string -&gt; System.Media.SoundPlayer" Usage="new System.Media.SoundPlayer soundLocation" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="soundLocation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="soundLocation">Lokalizacja pliku wav do załadowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Media.SoundPlayer" /> klasy i dołącza .wav określonego pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg przekazany do `soundLocation` parametr może być ścieżką pliku lub adres URL do pliku WAV. Jeśli ścieżka lub adres URL jest nieprawidłowy, <xref:System.Media.SoundPlayer> nadal będzie utworzone, ale kolejne wywołania obciążenia lub metoda play zakończy się niepowodzeniem.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException">Wartość adresu URL określonego przez <paramref name="soundLocation" /> nie można rozpoznać.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoundPlayer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoundPlayer(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Media.SoundPlayer : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Media.SoundPlayer" Usage="new System.Media.SoundPlayer (serializationInfo, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Służący do deserializacji.</param>
        <param name="context">Lokalizacja docelowa służący do deserializacji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Media.SoundPlayer" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.UriFormatException">
          <see cref="P:System.Media.SoundPlayer.SoundLocation" /> Określony w <paramref name="serializationInfo" /> nie można rozpoznać.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsLoadCompleted">
      <MemberSignature Language="C#" Value="public bool IsLoadCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoadCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.IsLoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoadCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoadCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoadCompleted : bool" Usage="System.Media.SoundPlayer.IsLoadCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy ładowanie pliku wav zostało pomyślnie ukończone.</summary>
        <value>
          <see langword="true" /> Jeśli ładowania pliku wav; <see langword="false" /> Jeśli pliku wav nie została jeszcze załadowana.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load();" />
      <MemberSignature Language="F#" Value="member this.Load : unit -&gt; unit" Usage="soundPlayer.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ładuje dźwięk synchronicznie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Media.SoundPlayer.Load%2A> Metoda używa bieżącego wątku można załadować pliku wav uniemożliwia obsługę inne komunikaty do czasu ukończenia obciążenia wątku.  
  
> [!CAUTION]
>  <xref:System.Media.SoundPlayer.Load%2A> Metody może powodować opóźnienia podczas ładowania pliku wav duże. Ponadto malowania i innych zdarzeń będzie zablokowany do czasu ukończenia obciążenia. Użyj <xref:System.Media.SoundPlayer.LoadAsync%2A> metodę ładowanie dźwięku asynchronicznie, dzięki czemu wątek wywołujący nadal bez przeszkód.  
  
 Ta metoda zgłasza <xref:System.Media.SoundPlayer.LoadCompleted> zdarzeń podczas ładowania zakończeniu nawet wtedy, gdy obciążenie zakończyła się niepowodzeniem.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Media.SoundPlayer.LoadAsync%2A> metodę, aby dołączyć plik .wav do wystąpienia <xref:System.Media.SoundPlayer> klasy. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Media.SoundPlayer> klasy.  
  
 [!code-cpp[System.Windows.Forms.Sound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#2)]
 [!code-csharp[System.Windows.Forms.Sound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#2)]
 [!code-vb[System.Windows.Forms.Sound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">Czas, który upłynął podczas ładowania przekracza czas w milisekundach, określony przez <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Plik określony przez <see cref="P:System.Media.SoundPlayer.SoundLocation" /> nie można odnaleźć.</exception>
        <permission cref="T:System.Net.WebPermission">Aby uzyskać dostęp do zasobów internetowych HTTP. Wyliczenie skojarzone: <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.LoadAsync" />
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public void LoadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.LoadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadAsync();" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : unit -&gt; unit" Usage="soundPlayer.LoadAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ładuje plik .wav ze strumienia lub zasobu sieci Web przy użyciu nowego wątku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Media.SoundPlayer> jest skonfigurowany do załadowania pliku wav z <xref:System.IO.Stream> lub zasobu sieci Web, ta metoda rozpoczyna się załadowanie pliku wav z lokalizacji, za pomocą nowego wątku.  
  
 Ta metoda zgłasza <xref:System.Media.SoundPlayer.LoadCompleted> zdarzeń podczas ładowania zakończeniu nawet wtedy, gdy obciążenie zakończyła się niepowodzeniem.  
  
 Jeśli <xref:System.Media.SoundPlayer> jest skonfigurowany do załadowania pliku wav z ścieżkę do pliku lokalnego, ta metoda nie działa, ponieważ ładowanie została odroczona do momentu rozpoczęcia odtwarzania.  
  
 Aby uzyskać więcej informacji na temat asynchroniczne ładowanie zobacz [porady: ładowanie dźwięku asynchronicznie w formularzu systemu Windows](~/docs/framework/winforms/controls/how-to-load-a-sound-asynchronously-within-a-windows-form.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Media.SoundPlayer.LoadAsync%2A> metody asynchroniczne ładowanie pliku wav do użytku przez wystąpienie <xref:System.Media.SoundPlayer> klasy. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Media.SoundPlayer> klasy.  
  
 [!code-cpp[System.Windows.Forms.Sound#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#3)]
 [!code-csharp[System.Windows.Forms.Sound#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#3)]
 [!code-vb[System.Windows.Forms.Sound#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">Czas, który upłynął podczas ładowania przekracza czas w milisekundach, określony przez <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Plik określony przez <see cref="P:System.Media.SoundPlayer.SoundLocation" /> nie można odnaleźć.</exception>
        <altmember cref="M:System.Media.SoundPlayer.Load" />
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ LoadCompleted;" />
      <MemberSignature Language="F#" Value="member this.LoadCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.LoadCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy plik .wav pomyślnie lub nie załadowano.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane po zakończeniu ładowania pliku WAV. Argumenty zdarzenia wskazują, czy ładowanie dźwięku został zakończyła się pomyślnie lub nie powiodło się.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> obsługi zdarzeń, aby otrzymać powiadomienie wskazujące, że zawartość pliku wav zostały załadowane. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Media.SoundPlayer> klasy.  
  
 [!code-cpp[System.Windows.Forms.Sound#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#8)]
 [!code-csharp[System.Windows.Forms.Sound#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#8)]
 [!code-vb[System.Windows.Forms.Sound#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadTimeout">
      <MemberSignature Language="C#" Value="public int LoadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LoadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.LoadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LoadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LoadTimeout : int with get, set" Usage="System.Media.SoundPlayer.LoadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas (w milisekundach), w których należy załadować pliku WAV.</summary>
        <value>Wyrażony w milisekundach czas oczekiwania. Wartość domyślna to 10 000 (10 sekund).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po upływie tego czasu, ładowanie zostało anulowane i <xref:System.ServiceProcess.TimeoutException> wyjątku.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoadCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnLoadCompleted (System.ComponentModel.AsyncCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoadCompleted(class System.ComponentModel.AsyncCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoadCompleted (e As AsyncCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoadCompleted(System::ComponentModel::AsyncCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoadCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit&#xA;override this.OnLoadCompleted : System.ComponentModel.AsyncCompletedEventArgs -&gt; unit" Usage="soundPlayer.OnLoadCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Media.SoundPlayer.LoadCompleted" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana po zakończeniu ładowania pliku WAV.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="E:System.Media.SoundPlayer.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="OnSoundLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSoundLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSoundLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSoundLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSoundLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSoundLocationChanged : EventArgs -&gt; unit&#xA;override this.OnSoundLocationChanged : EventArgs -&gt; unit" Usage="soundPlayer.OnSoundLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Media.SoundPlayer.SoundLocationChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana po nowej ścieżki źródła audio to <xref:System.Media.SoundPlayer> została ustawiona.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz porady: funkcja Podaj zdarzenia i [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="P:System.Media.SoundPlayer.SoundLocation" />
      </Docs>
    </Member>
    <Member MemberName="OnStreamChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStreamChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStreamChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStreamChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStreamChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStreamChanged : EventArgs -&gt; unit&#xA;override this.OnStreamChanged : EventArgs -&gt; unit" Usage="soundPlayer.OnStreamChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Media.SoundPlayer.StreamChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana podczas tworzenia nowego <xref:System.IO.Stream> audio źródła dla tego <xref:System.Media.SoundPlayer> została ustawiona.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Media.SoundPlayer.OnStreamChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
        <altmember cref="P:System.Media.SoundPlayer.Stream" />
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public void Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Play() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Play" />
      <MemberSignature Language="VB.NET" Value="Public Sub Play ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Play();" />
      <MemberSignature Language="F#" Value="member this.Play : unit -&gt; unit" Usage="soundPlayer.Play " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Plik WAV przy użyciu nowego wątku i ładuje plik .wav najpierw, jeśli nie został załadowany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Media.SoundPlayer.Play%2A> Metody odtwarza dźwięk przy użyciu nowego wątku. Jeśli należy wywołać <xref:System.Media.SoundPlayer.Play%2A> przed pliku wav został załadowany do pamięci, będzie można załadować pliku WAV, przed rozpoczęciem odtwarzania. Można użyć <xref:System.Media.SoundPlayer.LoadAsync%2A> lub <xref:System.Media.SoundPlayer.Load%2A> metody można załadować pliku wav do pamięci z wyprzedzeniem. Po .wav plik zostanie pomyślnie załadowana z <xref:System.IO.Stream> lub adres URL, przyszłe wywołania metody odtwarzania <xref:System.Media.SoundPlayer> nie jest konieczne ponowne załadowanie pliku wav do ścieżki dźwięku zmian.  
  
 Jeśli nie określono pliku wav lub nie jest on załadowany, <xref:System.Media.SoundPlayer.Play%2A> metody odtwarzania dźwięku domyślne dźwięku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Media.SoundPlayer.Play%2A> metodę, aby asynchronicznie odtwarzanie plików WAV. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Media.SoundPlayer> klasy.  
  
 [!code-cpp[System.Windows.Forms.Sound#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#5)]
 [!code-csharp[System.Windows.Forms.Sound#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#5)]
 [!code-vb[System.Windows.Forms.Sound#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">Czas, który upłynął podczas ładowania przekracza czas w milisekundach, określony przez <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Plik określony przez <see cref="P:System.Media.SoundPlayer.SoundLocation" /> nie można odnaleźć.</exception>
        <exception cref="T:System.InvalidOperationException">Nagłówek .wav jest uszkodzony; Plik określony przez <see cref="P:System.Media.SoundPlayer.SoundLocation" /> nie jest plikiem wav PCM.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">do odczytywania plików. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać dostęp do kodu natywnego. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.PlayLooping" />
        <altmember cref="M:System.Media.SoundPlayer.PlaySync" />
      </Docs>
    </Member>
    <Member MemberName="PlayLooping">
      <MemberSignature Language="C#" Value="public void PlayLooping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlayLooping() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.PlayLooping" />
      <MemberSignature Language="VB.NET" Value="Public Sub PlayLooping ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlayLooping();" />
      <MemberSignature Language="F#" Value="member this.PlayLooping : unit -&gt; unit" Usage="soundPlayer.PlayLooping " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odtwarza pętli pliku wav przy użyciu nowego wątku i ładuje plik .wav najpierw, jeśli nie został załadowany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Media.SoundPlayer.PlayLooping%2A> Metody odgrywa i pętlę dźwięk za pomocą nowego wątku. Jeśli należy wywołać <xref:System.Media.SoundPlayer.PlayLooping%2A> przed pliku wav został załadowany do pamięci, będzie można załadować pliku WAV, przed rozpoczęciem odtwarzania. Można użyć <xref:System.Media.SoundPlayer.LoadAsync%2A> lub <xref:System.Media.SoundPlayer.Load%2A> metody można załadować pliku wav do pamięci z wyprzedzeniem. Po .wav plik zostanie pomyślnie załadowana z <xref:System.IO.Stream> lub adres URL, przyszłe wywołania metody odtwarzania <xref:System.Media.SoundPlayer> nie jest konieczne ponowne załadowanie pliku wav do ścieżki dźwięku zmian.  
  
 Jeśli nie określono pliku wav lub nie jest on załadowany, <xref:System.Media.SoundPlayer.PlayLooping%2A> metody odtwarzania dźwięku domyślne dźwięku.  
  
 Aby uzyskać więcej informacji na temat <xref:System.Media.SoundPlayer.PlayLooping%2A>, zobacz [porady: odtwarzanie dźwięku w formularzu systemu Windows w pętli](~/docs/framework/winforms/controls/how-to-loop-a-sound-playing-on-a-windows-form.md).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Media.SoundPlayer.PlayLooping%2A> metodę wielokrotnie odtwarzanie plików WAV. Do odtwarzania WAV <xref:System.Media.SoundPlayer.Stop%2A> metoda jest wywoływana. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Media.SoundPlayer> klasy.  
  
 [!code-cpp[System.Windows.Forms.Sound#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#6)]
 [!code-csharp[System.Windows.Forms.Sound#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#6)]
 [!code-vb[System.Windows.Forms.Sound#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">Czas, który upłynął podczas ładowania przekracza czas w milisekundach, określony przez <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Plik określony przez <see cref="P:System.Media.SoundPlayer.SoundLocation" /> nie można odnaleźć.</exception>
        <exception cref="T:System.InvalidOperationException">Nagłówek .wav jest uszkodzony; Plik określony przez <see cref="P:System.Media.SoundPlayer.SoundLocation" /> nie jest plikiem wav PCM.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">do odczytywania plików. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać dostęp do kodu natywnego. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.Play" />
        <altmember cref="M:System.Media.SoundPlayer.PlaySync" />
      </Docs>
    </Member>
    <Member MemberName="PlaySync">
      <MemberSignature Language="C#" Value="public void PlaySync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PlaySync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.PlaySync" />
      <MemberSignature Language="VB.NET" Value="Public Sub PlaySync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PlaySync();" />
      <MemberSignature Language="F#" Value="member this.PlaySync : unit -&gt; unit" Usage="soundPlayer.PlaySync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Plik .wav i ładuje plik .wav najpierw, jeśli nie został załadowany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Media.SoundPlayer.PlaySync%2A> Metoda używa bieżącego wątku do odtwarzania pliku WAV, uniemożliwia obsługę inne komunikaty do czasu ukończenia obciążenia wątku. Można użyć <xref:System.Media.SoundPlayer.LoadAsync%2A> lub <xref:System.Media.SoundPlayer.Load%2A> metody można załadować pliku wav do pamięci z wyprzedzeniem. Po .wav plik zostanie pomyślnie załadowana z <xref:System.IO.Stream> lub adres URL, przyszłe wywołania metody odtwarzania <xref:System.Media.SoundPlayer> nie jest konieczne ponowne załadowanie pliku wav do ścieżki dźwięku zmian.  
  
 Jeśli nie określono pliku wav lub nie jest on załadowany, <xref:System.Media.SoundPlayer.PlaySync%2A> metody odtwarzania dźwięku domyślne dźwięku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Media.SoundPlayer.PlaySync%2A> metody można synchronicznie odtwarzanie plików WAV.  
  
 [!code-cpp[System.Windows.Forms.PlaySync#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/CPP/system.windows.forms.sound.playasync.cpp#1)]
 [!code-csharp[System.Windows.Forms.PlaySync#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/CS/system.windows.forms.sound.playasync.cs#1)]
 [!code-vb[System.Windows.Forms.PlaySync#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PlaySync/VB/system.windows.forms.sound.playasync.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceProcess.TimeoutException">Czas, który upłynął podczas ładowania przekracza czas w milisekundach, określony przez <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Plik określony przez <see cref="P:System.Media.SoundPlayer.SoundLocation" /> nie można odnaleźć.</exception>
        <exception cref="T:System.InvalidOperationException">Nagłówek .wav jest uszkodzony; Plik określony przez <see cref="P:System.Media.SoundPlayer.SoundLocation" /> nie jest plikiem wav PCM.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">do odczytywania plików. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać dostęp do kodu natywnego. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="M:System.Media.SoundPlayer.Play" />
        <altmember cref="M:System.Media.SoundPlayer.PlayLooping" />
      </Docs>
    </Member>
    <Member MemberName="SoundLocation">
      <MemberSignature Language="C#" Value="public string SoundLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SoundLocation" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.SoundLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property SoundLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SoundLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoundLocation : string with get, set" Usage="System.Media.SoundPlayer.SoundLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę do pliku lub adres URL pliku wav do załadowania.</summary>
        <value>Ścieżka pliku lub adres URL, z którego można załadować pliku wav lub <see cref="F:System.String.Empty" /> Jeśli ścieżka nie jest obecny. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest ustawiona na <xref:System.String.Empty?displayProperty=nameWithType> podczas <xref:System.Media.SoundPlayer.Stream%2A> właściwość jest ustawiona na <xref:System.IO.Stream>.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Media.SoundPlayer.SoundLocation%2A> właściwość do przypisania do wystąpienia elementu źródłowego pliku wav <xref:System.Media.SoundPlayer> klasy. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Media.SoundPlayer> klasy.  
  
 [!code-cpp[System.Windows.Forms.Sound#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#2)]
 [!code-csharp[System.Windows.Forms.Sound#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#2)]
 [!code-vb[System.Windows.Forms.Sound#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">znajdowania plików. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SoundLocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SoundLocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SoundLocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.SoundLocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SoundLocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SoundLocationChanged;" />
      <MemberSignature Language="F#" Value="member this.SoundLocationChanged : EventHandler " Usage="member this.SoundLocationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy nowej ścieżki źródła audio to <see cref="T:System.Media.SoundPlayer" /> została ustawiona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane, gdy nowej ścieżki źródła audio dla tego <xref:System.Media.SoundPlayer> została ustawiona.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> obsługi zdarzeń, aby otrzymać powiadomienie po <xref:System.Media.SoundPlayer> została dołączona do innego pliku .wav. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Media.SoundPlayer> klasy.  
  
 [!code-cpp[System.Windows.Forms.Sound#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#9)]
 [!code-csharp[System.Windows.Forms.Sound#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#9)]
 [!code-vb[System.Windows.Forms.Sound#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="soundPlayer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zatrzymuje odtwarzanie dźwięku, jeśli występuje odtwarzania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Media.SoundPlayer.Stop%2A> metody zatrzymanie pliku WAV, który obecnie jest odtwarzany. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Media.SoundPlayer> klasy.  
  
 [!code-cpp[System.Windows.Forms.Sound#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CPP/soundtestform.cpp#7)]
 [!code-csharp[System.Windows.Forms.Sound#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Sound/CS/soundtestform.cs#7)]
 [!code-vb[System.Windows.Forms.Sound#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Sound/VB/soundtestform.vb#7)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać dostęp do kodu natywnego. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="public System.IO.Stream Stream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Stream" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.Stream" />
      <MemberSignature Language="VB.NET" Value="Public Property Stream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Stream { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Stream : System.IO.Stream with get, set" Usage="System.Media.SoundPlayer.Stream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.IO.Stream" /> z którego można załadować pliku WAV.</summary>
        <value>A <see cref="T:System.IO.Stream" /> z którego można załadować pliku wav lub <see langword="null" /> Jeśli żaden strumień nie jest dostępna. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest ustawiona na `null` podczas <xref:System.Media.SoundPlayer.SoundLocation%2A> właściwość jest ustawiona na nową, prawidłową lokalizację dźwięku.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="StreamChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StreamChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StreamChanged" />
      <MemberSignature Language="DocId" Value="E:System.Media.SoundPlayer.StreamChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StreamChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StreamChanged;" />
      <MemberSignature Language="F#" Value="member this.StreamChanged : EventHandler " Usage="member this.StreamChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy nowy <see cref="T:System.IO.Stream" /> audio źródła dla tego <see cref="T:System.Media.SoundPlayer" /> została ustawiona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest wywoływane podczas tworzenia nowego <xref:System.IO.Stream> audio źródła dla tego <xref:System.Media.SoundPlayer> została ustawiona.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> Do wypełniania danych.</param>
        <param name="context">Miejsce docelowe (zobacz <see cref="T:System.Runtime.Serialization.StreamingContext" />) tej serializacji.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Media.SoundPlayer> wystąpienia jest rzutowane na <xref:System.Runtime.Serialization.ISerializable> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Media.SoundPlayer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Media.SoundPlayer.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Object" /> zawierający dane o <see cref="T:System.Media.SoundPlayer" />.</summary>
        <value>
          <see cref="T:System.Object" /> Zawierający dane o <see cref="T:System.Media.SoundPlayer" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>