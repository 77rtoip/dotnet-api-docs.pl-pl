<Type Name="UdpAnySourceMulticastClient" FullName="System.Net.Sockets.UdpAnySourceMulticastClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="350bc62b0f3c71b25479932badd0504a33e475ae" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36549638" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UdpAnySourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpAnySourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpAnySourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpAnySourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpAnySourceMulticastClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpAnySourceMulticastClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Odbiornik klienta na ruch multiemisji z dowolnego źródła, znana także jako dowolnego źródła multiemisji (ASM) lub Internet standardowe multiemisji (ISM).</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpAnySourceMulticastClient (System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpAnySourceMulticastClient(System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpAnySourceMulticastClient : System.Net.IPAddress * int -&gt; System.Net.Sockets.UdpAnySourceMulticastClient" Usage="new System.Net.Sockets.UdpAnySourceMulticastClient (groupAddress, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="groupAddress">Adres grupy multiemisji dla tego odbiornika do subskrybowania.</param>
        <param name="localPort">Port lokalny dla tego odbiornika powiązać.</param>
        <summary>Tworzy nową <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> UDP klienta, który można subskrybować adres grupy i odbierają datagramy z dowolnego źródła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> Konstruktor kojarzy gniazda multiemisji UDP z grupy adres i port, nie powiązanie lub w przeciwnym razie użyj gniazda.  
  
 `groupAddress` Parametr może być multiemisji IPv6 albo IPv4 adresu.  
  
 `localPort` Parametrów nie mogą określać portu mniejszej niż 1024.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupAddress" /> jest <see langword="null" />. reference</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="localPort" /> jest mniejsza od 0 - lub - <paramref name="localPort" /> jest większy niż 65 535.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginJoinGroup : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginJoinGroup (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Metoda wywołania zwrotnego do wywołania po zakończeniu operacji.</param>
        <param name="state">Informacje o stanie opcjonalne do przekazania do <c>wywołania zwrotnego</c> metody dla tej operacji.</param>
        <summary>Wiąże gniazda i rozpocznie się do grupy multiemisji, aby zezwolić datagramy z dowolnego uczestnika grupy operacji tworzenia sprzężenia.</summary>
        <returns>Zwraca <see cref="T:System.IAsyncResult" />.  <see cref="T:System.IAsyncResult" /> Który odwołuje się do tej operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> Metody wiąże gniazda multiemisji UDP portów lokalnych i tworzy sprzężenie grupy multiemisji, aby umożliwić datagramy z dowolnego uczestnika grupy multiemisji. Port lokalny i adres multiemisji grupy są określone w <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> konstruktora.  
  
 Metoda określona w `callback` parametru jest wywoływana po wykonaniu operacji na dołączenie do grupy multiemisji.  
  
 Jeśli jest to wymagane przez środowisko uruchomieniowe, <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> metoda wykonuje także sprawdzić zasad, aby sprawdzić, czy klient może dostępu do grupy multiemisji. Jeśli klient nie ma mieć dostęp, <xref:System.Net.Sockets.SocketException> jest zgłaszany z <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji została dołączona lub operacji tworzenia sprzężenia jest obecnie w toku.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromGroup(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromGroup (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromGroup(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveFromGroup : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginReceiveFromGroup (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Bufor do przechowywania odebranych danych.</param>
        <param name="offset">Przesunięcie, w bajtach, od początku <c>buforu</c> przechowywania danych.</param>
        <param name="count">Maksymalna liczba bajtów do pobierania i przechowywania w <c>buforu</c>.</param>
        <param name="callback">Metoda wywołania zwrotnego do wywołania po zakończeniu operacji.</param>
        <param name="state">Informacje o stanie opcjonalne do przekazania do <c>wywołania zwrotnego</c> metody dla tej operacji.</param>
        <summary>Rozpoczyna operację odbierania pakietu z połączonych grup multiemisji i wywołuje określony wywołania zwrotnego, gdy pakiet dotarła od wszystkich nadawców w grupie.</summary>
        <returns>Zwraca <see cref="T:System.IAsyncResult" />.  <see cref="T:System.IAsyncResult" /> Który odwołuje się do tej operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> Metoda rozpoczyna operacji odbierania pakietów UDP z dołączonym do grupy multiemisji od dowolnego nadawcy. Port lokalny i adres multiemisji grupy są określone w <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> konstruktora. Klienta multiemisji należy również wykonać na przyłączenie do grupy multiemisji.  
  
 Metoda określona w `callback` parametru jest wywoływane, gdy otrzymano pakiet.  
  
 Istnieje możliwość za błąd gniazda, jeśli operacja receive synchronicznie, kończy się niepowodzeniem, mimo że jest to rzadko z protokołu UDP. Jeśli wystąpi błąd gniazda, <xref:System.Net.Sockets.SocketException> jest generowany. Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> jest mniejsza od 0 - lub - <paramref name="offset" /> jest większa niż długość <paramref name="buffer" />.  - lub - <paramref name="count" /> jest mniejszy niż 0 - lub - <paramref name="offset" /> plus wartość licznika jest większa niż długość <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji nie został przyłączony.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendTo">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendTo (byte[] buffer, int offset, int count, System.Net.IPEndPoint remoteEndPoint, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendTo(unsigned int8[] buffer, int32 offset, int32 count, class System.Net.IPEndPoint remoteEndPoint, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendTo (buffer As Byte(), offset As Integer, count As Integer, remoteEndPoint As IPEndPoint, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendTo(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Net::IPEndPoint ^ remoteEndPoint, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendTo : byte[] * int * int * System.Net.IPEndPoint * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginSendTo (buffer, offset, count, remoteEndPoint, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remoteEndPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Bufor, który zawiera dane do wysłania.</param>
        <param name="offset">Przesunięcie, w bajtach, od początku <c>buforu</c> odczytać dane do wysłania.</param>
        <param name="count">Liczba bajtów do wysłania z <c>buforu</c>.</param>
        <param name="remoteEndPoint">Zdalny punkt końcowy, do którego ma być wysłany pakiet.</param>
        <param name="callback">Metoda wywołania zwrotnego do wywołania po zakończeniu operacji.</param>
        <param name="state">Informacje o stanie opcjonalne do przekazania do <c>wywołania zwrotnego</c> metody dla tej operacji.</param>
        <summary>Rozpoczyna operację wysyłania pakietów emisji pojedynczej do określonej lokalizacji docelowej.</summary>
        <returns>Zwraca <see cref="T:System.IAsyncResult" />.  <see cref="T:System.IAsyncResult" /> Który odwołuje się do tej operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> Metoda rozpoczyna operację wysyłania pakietów UDP do połączonych grup multiemisji.  
  
 Klienta należy wykonać na przyłączenie do grupy multiemisji. Adres docelowy określony w `remoteEndPoint` parametr należy już zostało wysłane pakiety multiemisji do tego odbiorcy. Niektóre protokoły dzięki tym informacjom można przekazać sterowanie przepływem jakości usługi statystyk lub odzyskiwania wiadomości.  
  
 Metoda określona w `callback` parametru jest wywoływane, gdy otrzymano pakiet.  
  
 Przekazywanie jest dozwolone tylko, jeśli adres określony w `remoteEndPoint` parametru już wysłanych pakietów multiemisji tego odbiornika. Jeśli klient nie ma mieć dostęp, <xref:System.Net.Sockets.SocketException> jest zgłaszany z <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Jeśli port docelowy określony w `remoteEndPoint` parametr jest mniejsza niż 1024, <xref:System.Net.Sockets.SocketException> jest zgłaszany z <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Istnieje możliwość za błąd gniazda, jeśli operacja receive synchronicznie, kończy się niepowodzeniem, mimo że jest to rzadko z protokołu UDP. Jeśli wystąpi błąd gniazda, <xref:System.Net.Sockets.SocketException> jest generowany. Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> jest mniejsza od 0 - lub - <paramref name="offset" /> jest większa niż długość <paramref name="buffer" />.  - lub - <paramref name="count" /> jest mniejszy niż 0 - lub - <paramref name="offset" /> plus wartość licznika jest większa niż długość <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji nie został przyłączony.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToGroup(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToGroup (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToGroup(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendToGroup : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginSendToGroup (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Bufor, który zawiera dane do wysłania.</param>
        <param name="offset">Przesunięcie, w bajtach, od początku <c>buforu</c> odczytać dane do wysłania.</param>
        <param name="count">Liczba bajtów do wysłania z <c>buforu</c>.</param>
        <param name="callback">Metoda wywołania zwrotnego do wywołania po zakończeniu operacji.</param>
        <param name="state">Informacje o stanie opcjonalne do przekazania do <c>wywołania zwrotnego</c> metody dla tej operacji.</param>
        <summary>Rozpoczyna operację wysyłania pakietów do dołączonego do grupy multiemisji i wywołuje określony wywołania zwrotnego, jeśli pakiet zostało wysłane do grupy.</summary>
        <returns>Zwraca <see cref="T:System.IAsyncResult" />.  <see cref="T:System.IAsyncResult" /> Który odwołuje się do tej operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> Metoda rozpoczyna operację wysyłania pakietów UDP do połączonych grup multiemisji.  
  
 Klienta należy wykonać na przyłączenie do grupy multiemisji.  
  
 Metoda określona w `callback` parametru jest wywoływane, gdy otrzymano pakiet.  
  
 Istnieje możliwość za błąd gniazda, jeśli operacja receive synchronicznie, kończy się niepowodzeniem, mimo że jest to rzadko z protokołu UDP. Jeśli wystąpi błąd gniazda, <xref:System.Net.Sockets.SocketException> jest generowany. Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> jest mniejsza od 0 - lub - <paramref name="offset" /> jest większa niż długość <paramref name="buffer" />.  - lub - <paramref name="count" /> jest mniejszy niż 0 - lub - <paramref name="offset" /> plus wartość licznika jest większa niż długość <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji nie został przyłączony.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="BlockSource">
      <MemberSignature Language="C#" Value="public void BlockSource (System.Net.IPAddress sourceAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BlockSource(class System.Net.IPAddress sourceAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BlockSource (sourceAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BlockSource(System::Net::IPAddress ^ sourceAddress);" />
      <MemberSignature Language="F#" Value="member this.BlockSource : System.Net.IPAddress -&gt; unit" Usage="udpAnySourceMulticastClient.BlockSource sourceAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">Adres źródła do blokowania.</param>
        <summary>Blokuje źródło, aby pochodzącego od niego pakiety multiemisji nie są odbierane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> Metody blokuje pochodzących z określonego adresu źródłowego z nich odbierane pakietów multiemisji. Klienta należy wykonać na przyłączenie do grupy multiemisji.  
  
 `sourceAddress` Parametr może mieć adres IPv6 albo IPv4, ale `sourceAddress` parametru musi być zgodna Rodzina adresów grupy multiemisji przyłączone do klienta.  
  
 Metoda określona w `callback` parametru jest wywoływane, gdy otrzymano pakiet.  
  
 W przypadku awarii gniazda podczas wykonywania operacji źródła bloku, <xref:System.Net.Sockets.SocketException> jest generowany. Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji nie został przyłączony.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpAnySourceMulticastClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pozostawia grupy multiemisji i zwalnia wszystkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> klasy i podstawowych <see cref="T:System.Net.Sockets.Socket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> po zakończeniu przy użyciu <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. Metoda Dispose pozostawia <xref:System.Net.Sockets.UdpAnySourceMulticastClient> w stanie uniemożliwiającym jego używanie. Po wywołaniu <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Net.Sockets.UdpAnySourceMulticastClient> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Net.Sockets.UdpAnySourceMulticastClient> klasy.  
  
 Wywoływanie zawsze <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> przed zwolnieniem ostatniego odwołania do <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Net.Sockets.UdpAnySourceMulticastClient> obiektu <xref:System.Object.Finalize%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndJoinGroup : IAsyncResult -&gt; unit" Usage="udpAnySourceMulticastClient.EndJoinGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Wynik operacji asynchronicznej sprzężenia.</param>
        <summary>Wykonuje operację asynchroniczną sprzężenia grupy do grupy multiemisji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> Ukończeniu metody asynchroniczne bind gniazda i Dołącz do operacji do grupy multiemisji.  
  
 Jeśli jest to wymagane przez środowisko uruchomieniowe, <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> metoda wykonuje także sprawdzić zasad, aby sprawdzić, czy klient może dostępu do grupy multiemisji. Jeśli klient nie ma mieć dostęp, <xref:System.Net.Sockets.SocketException> jest zgłaszany z <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 W przypadku awarii gniazda podczas wykonywania operacji łączenia grupy, <xref:System.Net.Sockets.SocketException> jest generowany. Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromGroup">
      <MemberSignature Language="C#" Value="public int EndReceiveFromGroup (IAsyncResult result, out System.Net.IPEndPoint source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromGroup(class System.IAsyncResult result, [out] class System.Net.IPEndPoint&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromGroup (result As IAsyncResult, ByRef source As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromGroup(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::Net::IPEndPoint ^ % source);" />
      <MemberSignature Language="F#" Value="member this.EndReceiveFromGroup : IAsyncResult *  -&gt; int" Usage="udpAnySourceMulticastClient.EndReceiveFromGroup (result, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="source" Type="System.Net.IPEndPoint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">Wynik asynchronicznej operacji odbioru.</param>
        <param name="source">Punkt końcowy źródła, gdy pakiet został odebrany z.</param>
        <summary>Kończy operację asynchroniczną odbierania pakietu z połączonych grup multiemisji i zapewnia uzyskanych informacji.</summary>
        <returns>Długość w bajtach wiadomości przechowywanych w parametrze buforu przekazany do <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> metody.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> Metoda kończy operację asynchroniczną do odbierania pakietów multiemisji w grupie.  
  
 W przypadku awarii gniazda podczas wykonywania operacji odbierania <xref:System.Net.Sockets.SocketException> jest generowany. Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji nie został przyłączony.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendTo">
      <MemberSignature Language="C#" Value="public void EndSendTo (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendTo(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendTo (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendTo(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendTo : IAsyncResult -&gt; unit" Usage="udpAnySourceMulticastClient.EndSendTo result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Wynik operacji asynchronicznej wysyłania.</param>
        <summary>Kończy operację wysyłania pakietów emisji pojedynczej do określonej lokalizacji docelowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A> Metoda kończy operację asynchroniczną wysyłać pakietów do określonej lokalizacji docelowej adresu.  
  
 W przypadku awarii gniazda podczas wykonywania operacji odbierania <xref:System.Net.Sockets.SocketException> jest generowany. Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji nie został przyłączony.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToGroup">
      <MemberSignature Language="C#" Value="public void EndSendToGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendToGroup : IAsyncResult -&gt; unit" Usage="udpAnySourceMulticastClient.EndSendToGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Wynik operacji asynchronicznej wysyłania.</param>
        <summary>Kończy operację wysyłania pakietów do grupy multiemisji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A> Metoda kończy operację asynchroniczną wysyłać pakietów do grupy multiemisji.  
  
 W przypadku awarii gniazda podczas wykonywania operacji odbierania <xref:System.Net.Sockets.SocketException> jest generowany. Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji nie został przyłączony.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastLoopback : bool with get, set" Usage="System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy wychodzących pakietów multiemisji są dostarczane do aplikację wysyłającą.</summary>
        <value>Zwraca <see cref="T:System.Boolean" />.  Wartość, która wskazuje, czy wychodzących pakietów multiemisji grupy są dostarczane do aplikację wysyłającą.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ruch multiemisji jest skalowalna metodą wiele do wielu komunikacji w Internecie. Proces subskrybuje adresu grupy multiemisji. Następnie wszystkie pakiety wysyłane przez proces subskrybowanego do grupy multiemisji są odbierane przez każdy inny proces subskrybuje adres multiemisji. <xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A> Formantów właściwości czy dowolny przetwarzać na komputerze lokalnym odbiera pakiety multiemisji wysłanych przez tego klienta do grupy multiemisji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji nie został przyłączony.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> Został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar w bajtach buforu odbioru z <see cref="T:System.Net.Sockets.Socket" /> używane dla operacji odbierania multiemisji na tym <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wystąpienia.</summary>
        <value>Zwraca <see cref="T:System.Int32" />.  Rozmiar w bajtach buforu odbioru.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> Właściwości pobiera lub ustawia rozmiar w bajtach buforu odbioru podstawowych <xref:System.Net.Sockets.Socket> używane dla operacji odbierania multiemisji na tym <xref:System.Net.Sockets.UdpAnySourceMulticastClient> wystąpienia. W szczególności <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> właściwość określa rozmiar bufora używanego przez stos, kiedy pakiet dociera, ale aplikacja nie została jeszcze wywołana <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> metody. Jeśli bufor zapełniane lub pakietów zachować wychodzącego przed wywołaniami aplikacji <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> i <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> będzie pobrać porzucony metod, stare pakietów. Aplikacja nigdy nie będzie mogła odbierać pakiety starego, a zamiast tego otrzymają nowsze pakiety, gdy wywołuje <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> metody.  
  
 Domyślny rozmiar buforu odbioru w systemie Windows jest 8192 bajtów.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony rozmiar buforu jest mniejszy niż 0.</exception>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji nie został przyłączony.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> Został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar w bajtach buforu wysyłania z <see cref="T:System.Net.Sockets.Socket" /> używane dla operacji wysyłania multiemisji na tym <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wystąpienia.</summary>
        <value>Zwraca <see cref="T:System.Int32" />.  Rozmiar w bajtach buforu wysyłania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> Właściwości pobiera lub ustawia rozmiar w bajtach buforu wysyłania podstawowej gniazda używane dla operacji wysyłania multiemisji na tym <xref:System.Net.Sockets.UdpAnySourceMulticastClient> wystąpienia.  
  
 wywołuje się <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> lub <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> metod będzie trwać dłużej wywołania zwrotnego, w zależności od wartości <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> właściwości, jeśli bufor wysyłania jest pełny. <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> Tylko formanty właściwości, czy bufor użytkownika jest zablokowane w pamięci fizycznej do momentu ukończenia wysyłania.  
  
 Domyślny rozmiar buforu wysyłania w systemie Windows jest 8192 bajtów.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony rozmiar buforu jest mniejszy niż 0.</exception>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji nie został przyłączony.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> Został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnblockSource">
      <MemberSignature Language="C#" Value="public void UnblockSource (System.Net.IPAddress sourceAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnblockSource(class System.Net.IPAddress sourceAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnblockSource (sourceAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnblockSource(System::Net::IPAddress ^ sourceAddress);" />
      <MemberSignature Language="F#" Value="member this.UnblockSource : System.Net.IPAddress -&gt; unit" Usage="udpAnySourceMulticastClient.UnblockSource sourceAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">Adres źródła, aby odblokować.</param>
        <summary>Odblokowuje źródła, która wcześniej została zablokowana przez wywołanie do <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" /> metody, dzięki czemu mogą być odbierane pochodzącego od niego pakiety multiemisji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A> Metody odblokowuje pochodzących z określonego adresu źródłowego, może zostać odebrany pakietów multiemisji. Określonego adresu źródłowego musi wcześniej zostały zablokowane przez wywołanie do <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> metody.  
  
 Klienta należy wykonać na przyłączenie do grupy multiemisji.  
  
 `sourceAddress` Parametr może być multiemisji IPv6 albo IPv4 adresu.  
  
 Jeśli adres określonego źródła w `sourceAddress` parametr nie został wcześniej blokowane przez wywołanie do <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> metody <xref:System.Net.Sockets.SocketException> jest zgłaszany z <xref:System.Net.Sockets.SocketError.AddressNotAvailable>.  
  
 W przypadku awarii gniazda podczas wykonywania operacji odblokowania źródła, <xref:System.Net.Sockets.SocketException> jest generowany. Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji nie został przyłączony.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
  </Members>
</Type>