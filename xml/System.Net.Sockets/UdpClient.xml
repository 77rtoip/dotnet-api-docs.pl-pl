<Type Name="UdpClient" FullName="System.Net.Sockets.UdpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6637514a0d67fe6299f5e3d0a20f346399311c43" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30558841" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UdpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpClient : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="2bc79-101">Udostępnia usługi sieciowe protokołu UDP (User Datagram).</span>
      <span class="sxs-lookup">
        <span data-stu-id="2bc79-101">Provides User Datagram Protocol (UDP) network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-102"><xref:System.Net.Sockets.UdpClient> Klasa udostępnia prosty metod wysyłania i odbierania przesyłanie datagramy protokołu UDP w trybie synchronicznym blokowania.</span><span class="sxs-lookup"><span data-stu-id="2bc79-102">The <xref:System.Net.Sockets.UdpClient> class provides simple methods for sending and receiving connectionless UDP datagrams in blocking synchronous mode.</span></span> <span data-ttu-id="2bc79-103">Ponieważ protokół UDP jest protokołem transportu bez połączenia, nie trzeba ustanowić połączenie przed wysyłania i odbierania danych hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-103">Because UDP is a connectionless transport protocol, you do not need to establish a remote host connection prior to sending and receiving data.</span></span> <span data-ttu-id="2bc79-104">Jednak istnieje możliwość utworzenia domyślnego hosta zdalnego w jednym z dwóch sposobów:</span><span class="sxs-lookup"><span data-stu-id="2bc79-104">You do, however, have the option of establishing a default remote host in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="2bc79-105">Utwórz wystąpienie <xref:System.Net.Sockets.UdpClient> przy użyciu nazwy hosta zdalnego i numer portu jako parametry.</span><span class="sxs-lookup"><span data-stu-id="2bc79-105">Create an instance of the <xref:System.Net.Sockets.UdpClient> class using the remote host name and port number as parameters.</span></span>  
  
-   <span data-ttu-id="2bc79-106">Utwórz wystąpienie <xref:System.Net.Sockets.UdpClient> klasy, a następnie wywołać <xref:System.Net.Sockets.UdpClient.Connect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-106">Create an instance of the <xref:System.Net.Sockets.UdpClient> class and then call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span>  
  
 <span data-ttu-id="2bc79-107">Można użyć dowolnego z metody send dostarczone w <xref:System.Net.Sockets.UdpClient> do przesyłania danych do urządzenia zdalnego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-107">You can use any of the send methods provided in the <xref:System.Net.Sockets.UdpClient> to send data to a remote device.</span></span> <span data-ttu-id="2bc79-108">Użyj <xref:System.Net.Sockets.UdpClient.Receive%2A> metody na odbieranie danych z hostów zdalnych.</span><span class="sxs-lookup"><span data-stu-id="2bc79-108">Use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method to receive data from remote hosts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-109">Nie wywołuj <xref:System.Net.Sockets.UdpClient.Send%2A> przy użyciu nazwy hosta lub <xref:System.Net.IPEndPoint> zdefiniowano już domyślnego hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-109">Do not call <xref:System.Net.Sockets.UdpClient.Send%2A> using a host name or <xref:System.Net.IPEndPoint> if you have already specified a default remote host.</span></span> <span data-ttu-id="2bc79-110">Jeśli to zrobisz, <xref:System.Net.Sockets.UdpClient> spowoduje zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="2bc79-110">If you do, <xref:System.Net.Sockets.UdpClient> will throw an exception.</span></span>  
  
 <span data-ttu-id="2bc79-111"><xref:System.Net.Sockets.UdpClient> metody umożliwiają również wysyłać i odbierać datagramy multiemisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-111"><xref:System.Net.Sockets.UdpClient> methods also allow you to send and receive multicast datagrams.</span></span> <span data-ttu-id="2bc79-112">Użyj <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> metody do subskrybowania <xref:System.Net.Sockets.UdpClient> do grupy multiemisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-112">Use the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method to subscribe a <xref:System.Net.Sockets.UdpClient> to a multicast group.</span></span> <span data-ttu-id="2bc79-113">Użyj <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> metodę, aby anulować subskrypcję <xref:System.Net.Sockets.UdpClient> z grupy multiemisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-113">Use the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method to unsubscribe a <xref:System.Net.Sockets.UdpClient> from a multicast group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-114">Poniższy przykład ustanawia <xref:System.Net.Sockets.UdpClient> połączenia na porcie 11000 przy użyciu nazwy www.contoso.com hosta.</span><span class="sxs-lookup"><span data-stu-id="2bc79-114">The following example establishes a <xref:System.Net.Sockets.UdpClient> connection using the host name www.contoso.com on port 11000.</span></span> <span data-ttu-id="2bc79-115">Mała komunikat są wysyłane do dwóch oddzielnych hosta zdalnego maszyn.</span><span class="sxs-lookup"><span data-stu-id="2bc79-115">A small string message is sent to two separate remote host machines.</span></span> <span data-ttu-id="2bc79-116"><xref:System.Net.Sockets.UdpClient.Receive%2A> Metody blokuje wykonywanie do momentu otrzymania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="2bc79-116">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until a message is received.</span></span> <span data-ttu-id="2bc79-117">Przy użyciu <xref:System.Net.IPEndPoint> przekazany do <xref:System.Net.Sockets.UdpClient.Receive%2A>, tożsamość odpowiadający host zostanie ujawniony.</span><span class="sxs-lookup"><span data-stu-id="2bc79-117">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClientExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClientExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClientExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClientExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClientExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClientExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="2bc79-118">Do nawiązywania połączenia wychodzącego, lub zaakceptować żądania przychodzącego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2bc79-118">To establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.UdpClient" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-119">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-120">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.UdpClient" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-121">Ten konstruktor tworzy nową <xref:System.Net.Sockets.UdpClient> i umożliwia podstawowego dostawcy usług można przypisać najbardziej odpowiednia lokalnego IPv4 adres i numer portu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-121">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and allows the underlying service provider to assign the most appropriate local IPv4 address and port number.</span></span> <span data-ttu-id="2bc79-122">Jeśli ten konstruktor jest używany, <xref:System.Net.Sockets.UdpClient> wystąpienia została skonfigurowana z rodziny adres IPv4, którego nie można zmienić ani zastąpione przez wywołanie metody Połącz z elementem docelowym IPv6.</span><span class="sxs-lookup"><span data-stu-id="2bc79-122">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-123">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-123">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-124">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-124">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="2bc79-125">Ten konstruktor nie jest odpowiedni dla dołączanie do grupy multiemisji, ponieważ nie wykonuje powiązanie gniazda.</span><span class="sxs-lookup"><span data-stu-id="2bc79-125">This constructor is not suitable for joining a multicast group because it does not perform socket binding.</span></span> <span data-ttu-id="2bc79-126">Ponadto działa tylko z typami adresów IPv4.</span><span class="sxs-lookup"><span data-stu-id="2bc79-126">Also, it works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-127">W poniższym przykładzie pokazano, jak używać domyślnego konstruktora do utworzenia wystąpienia <xref:System.Net.Sockets.UdpClient> klasy.</span><span class="sxs-lookup"><span data-stu-id="2bc79-127">The following example demonstrates how to use the default constructor to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-128">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-128">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="2bc79-129">Numer portu lokalnego, z którego chcesz nawiązać połączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-129">The local port number from which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-130">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.UdpClient" /> klasy i wiąże go z numerem portu lokalnego pod warunkiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-130">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-131">Ten konstruktor tworzy podstawowej <xref:System.Net.Sockets.Socket> i wiąże go z numeru portu, z którego chcesz nawiązać połączenia.</span><span class="sxs-lookup"><span data-stu-id="2bc79-131">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span> <span data-ttu-id="2bc79-132">Jeśli interesuje Cię tylko ustawienie numerem portu lokalnego, należy użyć tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="2bc79-132">Use this constructor if you are only interested in setting the local port number.</span></span> <span data-ttu-id="2bc79-133">Źródłowy dostawca usługi przypisze lokalny adres IP.</span><span class="sxs-lookup"><span data-stu-id="2bc79-133">The underlying service provider will assign the local IP address.</span></span> <span data-ttu-id="2bc79-134">Jeśli przekazujesz 0 do konstruktora podstawowego dostawcy usług przypisze numeru portu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-134">If you pass 0 to the constructor, the underlying service provider will assign a port number.</span></span> <span data-ttu-id="2bc79-135">Jeśli ten konstruktor jest używany, <xref:System.Net.Sockets.UdpClient> wystąpienia została skonfigurowana z rodziny adres IPv4, którego nie można zmienić ani zastąpione przez wywołanie metody Połącz z elementem docelowym IPv6.</span><span class="sxs-lookup"><span data-stu-id="2bc79-135">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-136">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-136">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-137">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-137">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="2bc79-138">Ten konstruktor działa tylko z typami adresów IPv4.</span><span class="sxs-lookup"><span data-stu-id="2bc79-138">This constructor works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-139">W poniższym przykładzie pokazano tworzenie wystąpienia przy użyciu numeru portu lokalnego <xref:System.Net.Sockets.UdpClient> klasy.</span><span class="sxs-lookup"><span data-stu-id="2bc79-139">The following example demonstrates using a local port number to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2bc79-140">
            <paramref name="port" /> Parametru jest większa niż <see cref="F:System.Net.IPEndPoint.MaxPort" /> lub mniej niż <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-140">The <paramref name="port" /> parameter is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-141">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-141">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="2bc79-142">
            <see cref="T:System.Net.IPEndPoint" /> Tego respresents lokalny punkt końcowy, do którego powiązać połączenia protokołu UDP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-142">An <see cref="T:System.Net.IPEndPoint" /> that respresents the local endpoint to which you bind the UDP connection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-143">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.UdpClient" /> klasy i wiąże go określonym lokalnego punktu końcowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-143">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-144">Ten konstruktor tworzy nowy <xref:System.Net.Sockets.UdpClient> i wiąże go do <xref:System.Net.IPEndPoint> określonego przez `localEP` parametru.</span><span class="sxs-lookup"><span data-stu-id="2bc79-144">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="2bc79-145">Przed wywołaniem konstruktora, należy utworzyć <xref:System.Net.IPEndPoint> przy użyciu adresu IP adres i numer portu z którego chcesz wysyłać i odbierać dane.</span><span class="sxs-lookup"><span data-stu-id="2bc79-145">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="2bc79-146">Nie trzeba określić lokalny adres IP i port numer do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="2bc79-146">You do not need to specify a local IP address and port number for sending and receiving data.</span></span> <span data-ttu-id="2bc79-147">Jeśli nie chcesz, podstawowego dostawcy usług przypisze najbardziej odpowiednia lokalnego IP adres i numer portu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-147">If you do not, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="2bc79-148">Jeśli ten konstruktor jest używany, <xref:System.Net.Sockets.UdpClient> wystąpienia jest ustawiony w rodzinie adresu określonego przez `localEP` parametr, który nie można zmienić ani zastąpione przez wywołanie metody connect w rodzinie inny adres.</span><span class="sxs-lookup"><span data-stu-id="2bc79-148">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `localEP` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-149">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-149">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-150">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-150">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-151">Poniższy przykład przedstawia sposób tworzenia wystąpienia <xref:System.Net.Sockets.UdpClient> przy użyciu lokalnego punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-151">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bc79-152">
            <paramref name="localEP" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-152">
              <paramref name="localEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-153">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-153">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="2bc79-154">Jeden z <see cref="T:System.Net.Sockets.AddressFamily" /> wartości, które określa schemat adresowania gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-154">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-155">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.UdpClient" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-155">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-156">`family` Parametr określa, czy odbiornik używa adresu IP w wersji 4 (IPv4) lub adresu IP w wersji 6 (IPv6) adres.</span><span class="sxs-lookup"><span data-stu-id="2bc79-156">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="2bc79-157">Aby używać adresu IPv4, należy przekazać <xref:System.Net.Sockets.AddressFamily.InterNetwork> wartość.</span><span class="sxs-lookup"><span data-stu-id="2bc79-157">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="2bc79-158">Aby użyć adresu IPv6, należy przekazać <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> wartość.</span><span class="sxs-lookup"><span data-stu-id="2bc79-158">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="2bc79-159">Przekazywanie wszelkie inne wartości spowoduje, że metoda throw <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-159">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="2bc79-160">Jeśli ten konstruktor jest używany, <xref:System.Net.Sockets.UdpClient> wystąpienia jest ustawiony w rodzinie adresu określonego przez `family` parametr, który nie można zmienić ani zastąpione przez wywołanie metody connect w rodzinie inny adres.</span><span class="sxs-lookup"><span data-stu-id="2bc79-160">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-161">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-161">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-162">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-162">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="2bc79-163"><xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> Nie jest odpowiedni dla dołączanie do grupy multiemisji, ponieważ nie wykonuje powiązanie gniazda.</span><span class="sxs-lookup"><span data-stu-id="2bc79-163">The <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> is not suitable for joining a multicast group because it does not perform socket binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2bc79-164">
            <paramref name="family" /> nie jest <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> lub <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-164">
              <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-165">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-165">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port, System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port, valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer, family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port, System::Net::Sockets::AddressFamily family);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="2bc79-166">Port do nasłuchiwania przychodzących prób połączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-166">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="2bc79-167">Jeden z <see cref="T:System.Net.Sockets.AddressFamily" /> wartości, które określa schemat adresowania gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-167">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-168">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.UdpClient" /> klasy i wiąże go z numerem portu lokalnego pod warunkiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-168">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-169">Ten konstruktor tworzy podstawowej <xref:System.Net.Sockets.Socket> i wiąże go z numeru portu, z którego chcesz nawiązać połączenia.</span><span class="sxs-lookup"><span data-stu-id="2bc79-169">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span>  
  
 <span data-ttu-id="2bc79-170">`family` Parametr określa, czy odbiornik używa adresu IP w wersji 4 (IPv4) lub adresu IP w wersji 6 (IPv6) adres.</span><span class="sxs-lookup"><span data-stu-id="2bc79-170">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="2bc79-171">Aby używać adresu IPv4, należy przekazać <xref:System.Net.Sockets.AddressFamily.InterNetwork> wartość.</span><span class="sxs-lookup"><span data-stu-id="2bc79-171">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="2bc79-172">Aby użyć adresu IPv6, należy przekazać <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> wartość.</span><span class="sxs-lookup"><span data-stu-id="2bc79-172">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="2bc79-173">Przekazywanie wszelkie inne wartości spowoduje, że metoda throw <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-173">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="2bc79-174">Jeśli ten konstruktor jest używany, <xref:System.Net.Sockets.UdpClient> wystąpienia jest ustawiony w rodzinie adresu określonego przez `family` parametr, który nie można zmienić ani zastąpione przez wywołanie metody connect w rodzinie inny adres.</span><span class="sxs-lookup"><span data-stu-id="2bc79-174">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-175">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-175">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-176">Po uzyskaniu ten kod, zapoznaj się z usługi Windows Sockets w wersji 2 interfejsu API błąd kodu dokumentacją w witrynie MSDN szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-176">Once you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-177">Poniższy przykładowy kod przedstawia sposób tworzenia klienta UDP do używania grupy multiemisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-177">The following code example shows how to create a UDP client to use in a multicast group.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#3)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2bc79-178">
            <paramref name="family" /> nie jest <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> lub <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-178">
              <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2bc79-179">
            <paramref name="port" /> jest większa niż <see cref="F:System.Net.IPEndPoint.MaxPort" /> lub mniej niż <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-179">
              <paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-180">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-180">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::String ^ hostname, int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="2bc79-181">Nazwa hosta DNS zdalnego, do którego mają zamiar łączyć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-181">The name of the remote DNS host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="2bc79-182">Numer portu zdalnego, do którego mają zamiar łączyć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-182">The remote port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-183">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.UdpClient" /> klasy i ustanawia domyślnego hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-183">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and establishes a default remote host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-184">Ten konstruktor inicjuje nowy <xref:System.Net.Sockets.UdpClient> i ustanawia hosta zdalnego przy użyciu `hostname` i `port` parametrów.</span><span class="sxs-lookup"><span data-stu-id="2bc79-184">This constructor initializes a new <xref:System.Net.Sockets.UdpClient> and establishes a remote host using the `hostname` and `port` parameters.</span></span> <span data-ttu-id="2bc79-185">Ustanowienie domyślnego hosta zdalnego jest opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="2bc79-185">Establishing a default remote host is optional.</span></span> <span data-ttu-id="2bc79-186">Jeśli używasz tego konstruktora nie trzeba określić hosta zdalnego w każdym wywołaniu <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-186">If you use this constructor, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="2bc79-187">Określenie domyślnego hosta zdalnego ogranicza użytkownika tylko do tego hosta.</span><span class="sxs-lookup"><span data-stu-id="2bc79-187">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="2bc79-188">W dowolnym momencie można zmienić domyślnego hosta zdalnego, wywołując <xref:System.Net.Sockets.UdpClient.Connect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-188">You can change the default remote host at any time by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="2bc79-189">Jeśli chcesz określić hosta zdalnego w wywołania do <xref:System.Net.Sockets.UdpClient.Send%2A> metody, nie używaj tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="2bc79-189">If you want to specify a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, do not use this constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-190">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-190">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-191">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-191">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-192">Poniższy przykład przedstawia sposób tworzenia wystąpienia <xref:System.Net.Sockets.UdpClient> przy użyciu nazwy hosta i numer portu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-192">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bc79-193">
            <paramref name="hostname" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-193">
              <paramref name="hostname" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2bc79-194">
            <paramref name="port" /> nie jest pomiędzy <see cref="F:System.Net.IPEndPoint.MinPort" /> i <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-194">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-195">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-195">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-196">Pobiera lub ustawia wartość wskazującą, czy została ustanowiona domyślnego hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-196">Gets or sets a value indicating whether a default remote host has been established.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2bc79-197">
            <see langword="true" /> Jeśli połączenie jest aktywne; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-197">
              <see langword="true" /> if a connection is active; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-198">Klasy wywodzące się z <xref:System.Net.Sockets.UdpClient> tej właściwości można użyć do określenia, czy została ustanowiona domyślnego hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-198">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to determine if a default remote host has been established.</span></span> <span data-ttu-id="2bc79-199">Można utworzyć domyślnego hosta zdalnego przy użyciu odpowiedniego konstruktora lub poprzez wywołanie <xref:System.Net.Sockets.UdpClient.Connect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-199">You can establish a default remote host by using the appropriate constructor or by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="2bc79-200">Jeśli ustanowić domyślnego hosta zdalnego, nie można określić hosta zdalnego w wywołania do <xref:System.Net.Sockets.UdpClient.Send%2A>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-200">If you do establish a default remote host, you cannot specify a remote host in your call to <xref:System.Net.Sockets.UdpClient.Send%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.UdpClient" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowed">
          <span data-ttu-id="2bc79-201">Wartość logiczna określająca, czy włączyć lub wyłączyć przechodzenia translatora adresów Sieciowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-201">A Boolean value that specifies whether to enable or disable NAT traversal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-202">Włącza lub wyłącza funkcję translacji adresów sieciowych (NAT) przechodzenie na <see cref="T:System.Net.Sockets.UdpClient" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-202">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.UdpClient" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-203"><xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> Metoda służy do włączania lub wyłączania przechodzenia translatora adresów Sieciowych dla <xref:System.Net.Sockets.UdpClient> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2bc79-203">The <xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span> <span data-ttu-id="2bc79-204">Przechodzenie translatora adresów Sieciowych mogą być dostarczane za pomocą protokołu Teredo, 6to4 lub tunelu protokołu ISATAP.</span><span class="sxs-lookup"><span data-stu-id="2bc79-204">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="2bc79-205">Gdy `allowed` parametr ma wartość false, <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> ma ustawioną wartość opcji dla gniazda skojarzone <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-205">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="2bc79-206">Powoduje wyłączenie jawnie przechodzenia translatora adresów Sieciowych dla <xref:System.Net.Sockets.UdpClient> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2bc79-206">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span>  
  
 <span data-ttu-id="2bc79-207">Gdy `allowed` parametr ma wartość true, <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> ma ustawioną wartość opcji dla gniazda skojarzone <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-207">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="2bc79-208">Może to umożliwić Przechodzenie translatora adresów Sieciowych dla <xref:System.Net.Sockets.UdpClient> w zależności od reguły zapory w miejscu, w systemie.</span><span class="sxs-lookup"><span data-stu-id="2bc79-208">This may allow NAT traversal for a <xref:System.Net.Sockets.UdpClient> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="2bc79-209">Adresu Teredo jest adres IPv6 z prefiksem 2001:: / 32.</span><span class="sxs-lookup"><span data-stu-id="2bc79-209">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="2bc79-210">Adresy protokołu Teredo można zwrócony przez normalne rozpoznawanie nazw DNS lub wyliczone jako adres IPv6 przypisany do interfejsu lokalnego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-210">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-211">Pobiera ilość danych otrzymywanych z sieci, która jest dostępna do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-211">Gets the amount of data received from the network that is available to read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2bc79-212">Liczba bajtów danych odebranych z sieci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-212">The number of bytes of data received from the network.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-213"><xref:System.Net.Sockets.UdpClient.Available%2A> Właściwość jest używana do określenia ilości danych w kolejce w buforze sieciowej dla odczytu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-213">The <xref:System.Net.Sockets.UdpClient.Available%2A> property is used to determine the amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="2bc79-214">Jeśli dane są dostępne, wywołanie <xref:System.Net.Sockets.NetworkStream.Read%2A> pobierania danych.</span><span class="sxs-lookup"><span data-stu-id="2bc79-214">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="2bc79-215">Jeśli dane są niedostępne, <xref:System.Net.Sockets.UdpClient.Available%2A> właściwość zwraca wartość 0.</span><span class="sxs-lookup"><span data-stu-id="2bc79-215">If no data is available, the <xref:System.Net.Sockets.UdpClient.Available%2A> property returns 0.</span></span>  
  
 <span data-ttu-id="2bc79-216">Jeśli host zdalny zamyka lub zamyka połączenie, <xref:System.Net.Sockets.UdpClient.Available%2A> zgłasza właściwości <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-216">If the remote host shuts down or closes the connection, the <xref:System.Net.Sockets.UdpClient.Available%2A> property throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-217">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu i zapoznaj się z dokumentacją kodu błąd interfejsu API w wersji 2 w Windows Sockets w bibliotece MSDN pod [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)/ szczegółowy opis Wystąpił błąd.</span><span class="sxs-lookup"><span data-stu-id="2bc79-217">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)/ for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-218">W poniższym przykładzie pokazano sposób użycia <xref:System.Net.Sockets.UdpClient.Available%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2bc79-218">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-219">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-219">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-220">
            <see cref="T:System.Net.Sockets.Socket" /> Został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-220">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback">
          <span data-ttu-id="2bc79-221">
            <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-221">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="2bc79-222">Obiekt zdefiniowane przez użytkownika, który zawiera informacje na temat operacji odbioru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-222">A user-defined object that contains information about the receive operation.</span>
          </span>
          <span data-ttu-id="2bc79-223">Ten obiekt jest przekazywany do <c>requestCallback</c> delegować po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-223">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-224">Asynchronicznie odbiera datagram z hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-224">Receives a datagram from a remote host asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bc79-225">
            <see cref="T:System.IAsyncResult" /> Obiekt, który odwołuje się do asynchronicznego odbioru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-225">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous receive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-226">Asynchroniczną <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> musi być zakończona, wywołując <xref:System.Net.Sockets.UdpClient.EndReceive%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-226">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndReceive%2A> method.</span></span> <span data-ttu-id="2bc79-227">Zazwyczaj metoda jest wywoływana przez `requestCallback` delegowanie.</span><span class="sxs-lookup"><span data-stu-id="2bc79-227">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="2bc79-228">Ta metoda nie blokuje przed zakończeniem operacji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-228">This method does not block until the operation is complete.</span></span> <span data-ttu-id="2bc79-229">Aby zablokować aż do zakończenia operacji, należy użyć <xref:System.Net.Sockets.UdpClient.Receive%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-229">To block until the operation is complete, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="2bc79-230">Aby uzyskać szczegółowe informacje o korzystaniu z modelem programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="2bc79-230">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-231">Poniższy przykład kodu wykorzystuje <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> asynchronicznie otrzymywać odpowiedź serwera.</span><span class="sxs-lookup"><span data-stu-id="2bc79-231">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> to asynchronously receive a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSend">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-232">Wysyła asynchronicznie datagram do hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-232">Sends a datagram to a remote host asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="2bc79-233">A <see cref="T:System.Byte" /> tablicy, która zawiera dane do wysłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-233">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="2bc79-234">Liczba bajtów do wysłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-234">The number of bytes to send.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="2bc79-235">
            <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-235">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="2bc79-236">Obiekt użytkownika, który zawiera informacje na temat operacji wysyłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-236">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="2bc79-237">Ten obiekt jest przekazywany do <c>requestCallback</c> delegować po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-237">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-238">Wysyła asynchronicznie datagram do hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-238">Sends a datagram to a remote host asynchronously.</span>
          </span>
          <span data-ttu-id="2bc79-239">Docelowy został wcześniej określony przez wywołanie do <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-239">The destination was specified previously by a call to <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bc79-240">
            <see cref="T:System.IAsyncResult" /> Obiekt, który odwołuje się do asynchronicznego wysyłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-240">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-241">Asynchroniczną <xref:System.Net.Sockets.UdpClient.BeginSend%2A> musi być zakończona, wywołując <xref:System.Net.Sockets.UdpClient.EndSend%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-241">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="2bc79-242">Zazwyczaj metoda jest wywoływana przez `requestCallback` delegowanie.</span><span class="sxs-lookup"><span data-stu-id="2bc79-242">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="2bc79-243">Ta metoda nie blokuje przed zakończeniem operacji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-243">This method does not block until the operation completes.</span></span> <span data-ttu-id="2bc79-244">Aby zablokować do czasu tej operacji, użyj jednej z <xref:System.Net.Sockets.UdpClient.Send%2A> przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-244">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="2bc79-245">Aby uzyskać szczegółowe informacje o korzystaniu z modelem programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="2bc79-245">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-246">Poniższy przykład kodu wykorzystuje <xref:System.Net.Sockets.UdpClient.BeginSend%2A> asynchronicznie wysłać żądania serwera.</span><span class="sxs-lookup"><span data-stu-id="2bc79-246">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="2bc79-247">A <see cref="T:System.Byte" /> tablicy, która zawiera dane do wysłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-247">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="2bc79-248">Liczba bajtów do wysłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-248">The number of bytes to send.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="2bc79-249">
            <see cref="T:System.Net.EndPoint" /> Reprezentujący miejsca docelowego dla danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-249">The <see cref="T:System.Net.EndPoint" /> that represents the destination for the data.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="2bc79-250">
            <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-250">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="2bc79-251">Obiekt użytkownika, który zawiera informacje na temat operacji wysyłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-251">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="2bc79-252">Ten obiekt jest przekazywany do <c>requestCallback</c> delegować po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-252">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-253">Wysyła asynchronicznie datagram do miejsca docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-253">Sends a datagram to a destination asynchronously.</span>
          </span>
          <span data-ttu-id="2bc79-254">Miejsce docelowe jest określona przez <see cref="T:System.Net.EndPoint" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-254">The destination is specified by a <see cref="T:System.Net.EndPoint" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bc79-255">
            <see cref="T:System.IAsyncResult" /> Obiekt, który odwołuje się do asynchronicznego wysyłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-255">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-256">Asynchroniczną <xref:System.Net.Sockets.UdpClient.BeginSend%2A> musi być zakończona, wywołując <xref:System.Net.Sockets.UdpClient.EndSend%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-256">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="2bc79-257">Zazwyczaj metoda jest wywoływana przez `requestCallback` delegowanie.</span><span class="sxs-lookup"><span data-stu-id="2bc79-257">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="2bc79-258">Ta metoda nie blokuje przed zakończeniem operacji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-258">This method does not block until the operation is complete.</span></span> <span data-ttu-id="2bc79-259">Aby zablokować do czasu tej operacji, użyj jednej z <xref:System.Net.Sockets.UdpClient.Send%2A> przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-259">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="2bc79-260">Aby uzyskać szczegółowe informacje o korzystaniu z modelem programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="2bc79-260">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-261">Poniższy przykład kodu wykorzystuje <xref:System.Net.Sockets.UdpClient.BeginSend%2A> asynchronicznie wysłać żądania serwera.</span><span class="sxs-lookup"><span data-stu-id="2bc79-261">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, string hostname, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, string hostname, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, hostname As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="2bc79-262">A <see cref="T:System.Byte" /> tablicy, która zawiera dane do wysłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-262">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="2bc79-263">Liczba bajtów do wysłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-263">The number of bytes to send.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="2bc79-264">Komputer docelowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-264">The destination host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="2bc79-265">Numer portu docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-265">The destination port number.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="2bc79-266">
            <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-266">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="2bc79-267">Obiekt użytkownika, który zawiera informacje na temat operacji wysyłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-267">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="2bc79-268">Ten obiekt jest przekazywany do <c>requestCallback</c> delegować po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-268">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-269">Wysyła asynchronicznie datagram do miejsca docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-269">Sends a datagram to a destination asynchronously.</span>
          </span>
          <span data-ttu-id="2bc79-270">Miejsce docelowe jest określony przez nazwę hosta i numer portu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-270">The destination is specified by the host name and port number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bc79-271">
            <see cref="T:System.IAsyncResult" /> Obiekt, który odwołuje się do asynchronicznego wysyłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-271">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-272">Asynchroniczną <xref:System.Net.Sockets.UdpClient.BeginSend%2A> musi być zakończona, wywołując <xref:System.Net.Sockets.UdpClient.EndSend%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-272">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="2bc79-273">Zazwyczaj metoda jest wywoływana przez `requestCallback` delegowanie.</span><span class="sxs-lookup"><span data-stu-id="2bc79-273">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="2bc79-274">Ta metoda nie blokuje przed zakończeniem operacji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-274">This method does not block until the operation is complete.</span></span> <span data-ttu-id="2bc79-275">Aby zablokować do czasu tej operacji, użyj jednej z <xref:System.Net.Sockets.UdpClient.Send%2A> przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-275">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="2bc79-276">Aby uzyskać szczegółowe informacje o korzystaniu z modelem programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="2bc79-276">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-277">Poniższy przykład kodu wykorzystuje <xref:System.Net.Sockets.UdpClient.BeginSend%2A> asynchronicznie wysłać żądania serwera.</span><span class="sxs-lookup"><span data-stu-id="2bc79-277">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-278">Pobiera lub ustawia odnośnej sieci <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-278">Gets or sets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2bc79-279">Odnośnej sieci <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-279">The underlying Network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-280"><xref:System.Net.Sockets.UdpClient> Tworzy <xref:System.Net.Sockets.Socket> używany do wysyłania i odbierania danych przez sieć.</span><span class="sxs-lookup"><span data-stu-id="2bc79-280"><xref:System.Net.Sockets.UdpClient> creates a <xref:System.Net.Sockets.Socket> used to send and receive data over a network.</span></span> <span data-ttu-id="2bc79-281">Klasy wywodzące się z <xref:System.Net.Sockets.UdpClient> tej właściwości można użyć do pobierania lub ustawiania to <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-281">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="2bc79-282">Użyj odpowiadającego <xref:System.Net.Sockets.Socket> zwrócony z <xref:System.Net.Sockets.UdpClient.Client%2A> Jeśli potrzebujesz dostępu poza <xref:System.Net.Sockets.UdpClient> udostępnia.</span><span class="sxs-lookup"><span data-stu-id="2bc79-282">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.UdpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.UdpClient> provides.</span></span> <span data-ttu-id="2bc79-283">Można również użyć <xref:System.Net.Sockets.UdpClient.Client%2A> do ustawienia odpowiadającego <xref:System.Net.Sockets.Socket> do istniejącej <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-283">You can also use <xref:System.Net.Sockets.UdpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="2bc79-284">Jest to przydatne, jeśli chcesz móc korzystać z prostotę <xref:System.Net.Sockets.UdpClient> przy użyciu istniejących wcześniej <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-284">This is useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.UdpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-285">W poniższym przykładzie pokazano użycie <xref:System.Net.Sockets.UdpClient.Client%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2bc79-285">The following example demonstrates the use of the <xref:System.Net.Sockets.UdpClient.Client%2A> property.</span></span> <span data-ttu-id="2bc79-286">W tym przykładzie emisji jest włączona dla podstawowych <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-286">In this example, broadcasting is enabled for the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-287">Zamyka połączenie protokołu UDP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-287">Closes the UDP connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-288"><xref:System.Net.Sockets.UdpClient.Close%2A> Wyłącza odpowiadającego <xref:System.Net.Sockets.Socket> i zwalnia wszystkie zasoby zarządzane i niezarządzane skojarzone z <xref:System.Net.Sockets.UdpClient>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-288">The <xref:System.Net.Sockets.UdpClient.Close%2A> disables the underlying <xref:System.Net.Sockets.Socket> and releases all managed and unmanaged resources associated with the <xref:System.Net.Sockets.UdpClient>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-289">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-289">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-290">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-290">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-291">W poniższym przykładzie pokazano zamknięcia <xref:System.Net.Sockets.UdpClient> przez wywołanie metody <xref:System.Net.Sockets.UdpClient.Close%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-291">The following example demonstrates closing a <xref:System.Net.Sockets.UdpClient> by calling the <xref:System.Net.Sockets.UdpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-292">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-292">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-293">Ustanawia domyślnego hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-293">Establishes a default remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (endPoint As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ endPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="endPoint">
          <span data-ttu-id="2bc79-294">
            <see cref="T:System.Net.IPEndPoint" /> , Który określa punktu końcowego sieci, do którego chcesz wysyłać dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-294">An <see cref="T:System.Net.IPEndPoint" /> that specifies the network endpoint to which you intend to send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-295">Ustanawia domyślnego hosta zdalnego przy użyciu określonej sieci punktu końcowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-295">Establishes a default remote host using the specified network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-296"><xref:System.Net.Sockets.UdpClient.Connect%2A> Metody ustanawia domyślnego hosta zdalnego przy użyciu wartości określonej w `endPoint` parametru.</span><span class="sxs-lookup"><span data-stu-id="2bc79-296">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the value specified in the `endPoint` parameter.</span></span> <span data-ttu-id="2bc79-297">Po jest konieczne określanie hosta zdalnego w każdym wywołaniu <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-297">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="2bc79-298">Ustanowienie domyślnego hosta zdalnego jest opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="2bc79-298">Establishing a default remote host is optional.</span></span> <span data-ttu-id="2bc79-299">Określenie domyślnego hosta zdalnego ogranicza użytkownika tylko do tego hosta.</span><span class="sxs-lookup"><span data-stu-id="2bc79-299">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="2bc79-300">Jeśli chcesz wysłać datagramy do innego hosta zdalnego, należy się upewnić innym wywołaniu <xref:System.Net.Sockets.UdpClient.Connect%2A> metody lub utworzyć inną <xref:System.Net.Sockets.UdpClient> bez domyślnego hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-300">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="2bc79-301">Jeśli ustaleniu domyślna zdalnego hosta, a także podać hosta zdalnego w wywołania do <xref:System.Net.Sockets.UdpClient.Send%2A> metody <xref:System.Net.Sockets.UdpClient.Send%2A> zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-301">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2bc79-302">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-302">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-303">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-303">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="2bc79-304">Jeśli należy wywołać <xref:System.Net.Sockets.Socket.Connect%2A> metoda, datagramów odbierane z adresu innego niż określoną wartość domyślną zostaną odrzucone.</span><span class="sxs-lookup"><span data-stu-id="2bc79-304">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="2bc79-305">Nie można ustawić domyślnego hosta zdalnego na adres emisji przy użyciu tej metody, o ile nie dziedziczy z <xref:System.Net.Sockets.UdpClient>, użyj metody klienta można uzyskać podstawową <xref:System.Net.Sockets.Socket>i ustaw opcję gniazda na <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-305">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the Client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2bc79-306">Możesz natomiast, emisji danych domyślne emisji adres 255.255.255.255, jeśli określono <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> w wywołania do <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-306">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="2bc79-307">Jeśli aplikacja wymaga większej kontroli nad adresy emisji, możesz również przywrócić za pomocą <xref:System.Net.Sockets.Socket> klasy.</span><span class="sxs-lookup"><span data-stu-id="2bc79-307">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-308">Ponieważ protokół UDP jest przesyłanie, <xref:System.Net.Sockets.UdpClient.Connect%2A> — metoda nie są blokowane.</span><span class="sxs-lookup"><span data-stu-id="2bc79-308">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="2bc79-309">Nie wywołuj <xref:System.Net.Sockets.UdpClient.Connect%2A> metodę, jeśli chcesz otrzymywać multicasted datagramów.</span><span class="sxs-lookup"><span data-stu-id="2bc79-309">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-310">W poniższym przykładzie użyto <xref:System.Net.IPEndPoint> ustanowienie domyślnego hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-310">The following example uses an <xref:System.Net.IPEndPoint> to establish a default remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-311">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-311">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bc79-312">
            <paramref name="endPoint" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-312">
              <paramref name="endPoint" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-313">
            <see cref="T:System.Net.Sockets.UdpClient" /> Jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-313">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress addr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress addr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (addr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ addr, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addr">
          <span data-ttu-id="2bc79-314">
            <see cref="T:System.Net.IPAddress" /> Hosta zdalnego, do którego chcesz wysyłać dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-314">The <see cref="T:System.Net.IPAddress" /> of the remote host to which you intend to send data.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="2bc79-315">Numer portu, do którego ma wysyłać dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-315">The port number to which you intend send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-316">Ustanawia domyślnego hosta zdalnego przy użyciu określonego adresu IP adres i numer portu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-316">Establishes a default remote host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-317"><xref:System.Net.Sockets.UdpClient.Connect%2A> Metody ustanawia domyślnego hosta zdalnego przy użyciu wartości określonej w `addr` i `port` parametrów.</span><span class="sxs-lookup"><span data-stu-id="2bc79-317">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `addr` and `port` parameters.</span></span> <span data-ttu-id="2bc79-318">Po jest konieczne określanie hosta zdalnego w każdym wywołaniu <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-318">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="2bc79-319">Ustanowienie domyślnego hosta zdalnego jest opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="2bc79-319">Establishing a default remote host is optional.</span></span> <span data-ttu-id="2bc79-320">Określenie domyślnego hosta zdalnego ogranicza użytkownika tylko do tego hosta.</span><span class="sxs-lookup"><span data-stu-id="2bc79-320">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="2bc79-321">Jeśli chcesz wysłać datagramy do innego hosta zdalnego, należy się upewnić innym wywołaniu <xref:System.Net.Sockets.UdpClient.Connect%2A> metody lub utworzyć inną <xref:System.Net.Sockets.UdpClient> bez domyślnego hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-321">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="2bc79-322">Jeśli ustaleniu domyślna zdalnego hosta, a także podać hosta zdalnego w wywołania do <xref:System.Net.Sockets.UdpClient.Send%2A> metody <xref:System.Net.Sockets.UdpClient.Send%2A> zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-322">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2bc79-323">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-323">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-324">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-324">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="2bc79-325">Jeśli należy wywołać <xref:System.Net.Sockets.Socket.Connect%2A> metoda, datagramów odbierane z adresu innego niż określoną wartość domyślną zostaną odrzucone.</span><span class="sxs-lookup"><span data-stu-id="2bc79-325">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="2bc79-326">Nie można ustawić domyślnego hosta zdalnego na adres emisji przy użyciu tej metody, o ile nie dziedziczy z <xref:System.Net.Sockets.UdpClient>, użyj metody klienta można uzyskać podstawową <xref:System.Net.Sockets.Socket>i ustaw opcję gniazda na <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-326">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2bc79-327">Możesz natomiast, emisji danych domyślne emisji adres 255.255.255.255, jeśli określono <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> w wywołania do <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-327">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="2bc79-328">Jeśli aplikacja wymaga większej kontroli nad adresy emisji, możesz również przywrócić za pomocą <xref:System.Net.Sockets.Socket> klasy.</span><span class="sxs-lookup"><span data-stu-id="2bc79-328">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-329">Ponieważ protokół UDP jest przesyłanie, <xref:System.Net.Sockets.UdpClient.Connect%2A> — metoda nie są blokowane.</span><span class="sxs-lookup"><span data-stu-id="2bc79-329">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="2bc79-330">Nie wywołuj <xref:System.Net.Sockets.UdpClient.Connect%2A> metodę, jeśli chcesz otrzymywać multicasted datagramów.</span><span class="sxs-lookup"><span data-stu-id="2bc79-330">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-331">W poniższym przykładzie użyto adres IP i port numer nawiązać połączenia z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="2bc79-331">The following example uses an IP address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-332">
            <see cref="T:System.Net.Sockets.UdpClient" /> jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-332">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bc79-333">
            <paramref name="addr" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-333">
              <paramref name="addr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2bc79-334">
            <paramref name="port" /> nie jest pomiędzy <see cref="F:System.Net.IPEndPoint.MinPort" /> i <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-334">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-335">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-335">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="2bc79-336">Nazwa DNS hosta zdalnego, do którego ma wysyłać dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-336">The DNS name of the remote host to which you intend send data.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="2bc79-337">Numer portu na hoście zdalnym, do którego chcesz wysyłać dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-337">The port number on the remote host to which you intend to send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-338">Ustanawia domyślnego hosta zdalnego przy użyciu określonego hosta nazwa i numer portu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-338">Establishes a default remote host using the specified host name and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-339"><xref:System.Net.Sockets.UdpClient.Connect%2A> Metody ustanawia domyślnego hosta zdalnego przy użyciu wartości określonej w `port` i `hostname` parametrów.</span><span class="sxs-lookup"><span data-stu-id="2bc79-339">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `port` and `hostname` parameters.</span></span> <span data-ttu-id="2bc79-340">Po jest konieczne określanie hosta zdalnego w każdym wywołaniu <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-340">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="2bc79-341">Ustanowienie domyślnego hosta zdalnego jest opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="2bc79-341">Establishing a default remote host is optional.</span></span> <span data-ttu-id="2bc79-342">Określenie domyślnego hosta zdalnego ogranicza użytkownika tylko do tego hosta.</span><span class="sxs-lookup"><span data-stu-id="2bc79-342">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="2bc79-343">Jeśli chcesz wysłać datagramy do innego hosta zdalnego, należy się upewnić innym wywołaniu <xref:System.Net.Sockets.UdpClient.Connect%2A> metody lub utworzyć inną <xref:System.Net.Sockets.UdpClient> bez domyślnego hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-343">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span>  
  
 <span data-ttu-id="2bc79-344">Jeśli ustaleniu domyślna zdalnego hosta, a także podać hosta zdalnego w wywołania do <xref:System.Net.Sockets.UdpClient.Send%2A> metody <xref:System.Net.Sockets.UdpClient.Send%2A> zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-344">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2bc79-345">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-345">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-346">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-346">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="2bc79-347">Jeśli należy wywołać <xref:System.Net.Sockets.Socket.Connect%2A> metoda, datagramów odbierane z adresu innego niż określoną wartość domyślną zostaną odrzucone.</span><span class="sxs-lookup"><span data-stu-id="2bc79-347">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="2bc79-348">Nie można ustawić domyślnego hosta zdalnego na adres emisji przy użyciu tej metody, o ile nie dziedziczy z <xref:System.Net.Sockets.UdpClient>, użyj metody klienta można uzyskać podstawową <xref:System.Net.Sockets.Socket>i ustaw opcję gniazda na <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-348">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2bc79-349">Możesz natomiast, emisji danych domyślne emisji adres 255.255.255.255, jeśli określono <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> w wywołania do <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-349">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="2bc79-350">Jeśli aplikacja wymaga większej kontroli nad adresy emisji, możesz również przywrócić za pomocą <xref:System.Net.Sockets.Socket> klasy.</span><span class="sxs-lookup"><span data-stu-id="2bc79-350">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-351">Ponieważ protokół UDP jest przesyłanie, <xref:System.Net.Sockets.UdpClient.Connect%2A> — metoda nie są blokowane.</span><span class="sxs-lookup"><span data-stu-id="2bc79-351">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="2bc79-352">Nie wywołuj <xref:System.Net.Sockets.UdpClient.Connect%2A> metodę, jeśli chcesz otrzymywać multicasted datagramów.</span><span class="sxs-lookup"><span data-stu-id="2bc79-352">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-353">Następujące przykładowe zastosowania nazwę hosta i port number nawiązać połączenia z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="2bc79-353">The following example uses the host name and port number to connect to a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-354">
            <see cref="T:System.Net.Sockets.UdpClient" /> Jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-354">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2bc79-355">
            <paramref name="port" /> nie jest pomiędzy <see cref="F:System.Net.IPEndPoint.MinPort" /> i <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-355">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-356">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-356">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-357">Zwalnia zasoby zarządzane i niezarządzane używane przez <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-357">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="2bc79-358">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-358">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-359">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Net.Sockets.UdpClient" /> i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-359">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-360">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-360">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="2bc79-361">`Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="2bc79-361">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="2bc79-362"><xref:System.Object.Finalize%2A> wywołuje `Dispose` z `disposing` ustawioną `false`.</span><span class="sxs-lookup"><span data-stu-id="2bc79-362"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="2bc79-363">Gdy `disposing` parametr ma wartość true, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.Net.Sockets.UdpClient> odwołania.</span><span class="sxs-lookup"><span data-stu-id="2bc79-363">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.UdpClient> references.</span></span> <span data-ttu-id="2bc79-364">Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-364">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="2bc79-365">
              <see langword="Dispose" /> można wywoływać wielokrotnie przez inne obiekty.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2bc79-365">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="2bc79-366">W przypadku przesłaniania <see langword="Dispose(Boolean)" /> należy uważać, aby nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="2bc79-366">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="2bc79-367">Aby uzyskać więcej informacji na temat sposobu wdrażania <see langword="Dispose(Boolean)" />, zobacz [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="2bc79-367">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="2bc79-368">Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [przesłaniania metody Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            <span class="sxs-lookup">
              <span data-stu-id="2bc79-368">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.DontFragment" />
      <MemberSignature Language="VB.NET" Value="Public Property DontFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DontFragment { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-369">Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość określająca, czy <see cref="T:System.Net.Sockets.UdpClient" /> umożliwia datagramów protokołu internetowego (IP) do fragmentacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-369">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows Internet Protocol (IP) datagrams to be fragmented.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2bc79-370">
            <see langword="true" /> Jeśli <see cref="T:System.Net.Sockets.UdpClient" /> zezwala na fragmentację datagram; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-370">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows datagram fragmentation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2bc79-371">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-371">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-372">Datagramy wymagają fragmentacji, gdy ich rozmiar przekracza maksymalny Transfer jednostki (MTU) nośnika transmisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-372">Datagrams require fragmentation when their size exceeds the Maximum Transfer Unit (MTU) of the transmission medium.</span></span> <span data-ttu-id="2bc79-373">Datagramy może fragmentacji przez hosta lub przez router pośrednie.</span><span class="sxs-lookup"><span data-stu-id="2bc79-373">Datagrams may be fragmented by the sending host or by an intermediate router.</span></span> <span data-ttu-id="2bc79-374">Jeśli datagram musi być pofragmentowane i <xref:System.Net.Sockets.Socket.DontFragment%2A> opcja jest ustawiona, datagram zostaną odrzucone i komunikat o błędzie komunikat protokołu sterowania Internetem (ICMP) są wysyłane do nadawcy datagram.</span><span class="sxs-lookup"><span data-stu-id="2bc79-374">If a datagram must be fragmented, and the <xref:System.Net.Sockets.Socket.DontFragment%2A> option is set, the datagram is discarded, and an Internet Control Message Protocol (ICMP) error message is sent back to the sender of the datagram.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-375">W poniższym przykładzie pokazano sposób użycia <xref:System.Net.Sockets.Socket.DontFragment%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2bc79-375">The following code example shows the use of the <xref:System.Net.Sockets.Socket.DontFragment%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="2bc79-376">Tej właściwości można ustawić tylko dla gniazda, które używają <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flagi lub <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flagi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-376">This property can be set only for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DropMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-377">Pozostawia grupę multiemisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-377">Leaves a multicast group.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="2bc79-378">
            <see cref="T:System.Net.IPAddress" /> Grupy multiemisji, aby pozostawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-378">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-379">Pozostawia grupę multiemisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-379">Leaves a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-380"><xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> Wycofuje metody <xref:System.Net.Sockets.UdpClient> z grupy multiemisji identyfikowana na podstawie określonego <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-380">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="2bc79-381">Po wywołaniu <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> Metoda podstawowa <xref:System.Net.Sockets.Socket> wysyła pakiet grupy zarządzania IGMP (Internet Protocol) do routera, usuwanie router z grupy multiemisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-381">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="2bc79-382">Po <xref:System.Net.Sockets.UdpClient> wycofuje z grupy, go nie będzie już otrzymywać datagramów wysyłanych do tej grupy.</span><span class="sxs-lookup"><span data-stu-id="2bc79-382">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-383">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-383">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-384">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-384">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-385">W poniższym przykładzie pokazano, jak można usunąć grupy multiemisji, podając adres multiemisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-385">The following example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-386">Podstawowa <see cref="T:System.Net.Sockets.Socket" /> został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-386">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-387">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-387">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2bc79-388">Adres IP nie jest zgodny z <see cref="T:System.Net.Sockets.AddressFamily" /> wartość, która definiuje schemat adresowania gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-388">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bc79-389">
            <paramref name="multicastAddr" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-389">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr, int ifindex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr, int32 ifindex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress, ifindex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr, int ifindex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="ifindex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="2bc79-390">
            <see cref="T:System.Net.IPAddress" /> Grupy multiemisji, aby pozostawić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-390">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span>
          </span>
        </param>
        <param name="ifindex">
          <span data-ttu-id="2bc79-391">Lokalny adres grupy multiemisji, aby wyjść.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-391">The local address of the multicast group to leave.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-392">Pozostawia grupę multiemisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-392">Leaves a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-393"><xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> Wycofuje metody <xref:System.Net.Sockets.UdpClient> z grupy multiemisji identyfikowana na podstawie określonego <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-393">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="2bc79-394">Po wywołaniu <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> Metoda podstawowa <xref:System.Net.Sockets.Socket> wysyła pakiet grupy zarządzania IGMP (Internet Protocol) do routera, usuwanie router z grupy multiemisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-394">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="2bc79-395">Po <xref:System.Net.Sockets.UdpClient> wycofuje z grupy, go nie będzie już otrzymywać datagramów wysyłanych do tej grupy.</span><span class="sxs-lookup"><span data-stu-id="2bc79-395">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-396">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> właściwość, aby otrzymać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-396">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-397">Po uzyskaniu ten kod, mogą odwoływać się do usługi Windows Sockets w wersji 2 interfejsu API błąd kodu dokumentacji w witrynie MSDN szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-397">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-398">Poniższy przykład kodu pokazuje, jak można usunąć grupy multiemisji, podając adres multiemisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-398">The following code example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-399">Podstawowa <see cref="T:System.Net.Sockets.Socket" /> został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-399">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-400">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-400">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2bc79-401">Adres IP nie jest zgodny z <see cref="T:System.Net.Sockets.AddressFamily" /> wartość, która definiuje schemat adresowania gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-401">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bc79-402">
            <paramref name="multicastAddr" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-402">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="EnableBroadcast">
      <MemberSignature Language="C#" Value="public bool EnableBroadcast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableBroadcast" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.EnableBroadcast" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableBroadcast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableBroadcast { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-403">Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość określająca, czy <see cref="T:System.Net.Sockets.UdpClient" /> może wysłać lub odbierania pakietów emisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-403">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> may send or receive broadcast packets.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2bc79-404">
            <see langword="true" /> Jeśli <see cref="T:System.Net.Sockets.UdpClient" /> umożliwia pakietów emisji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-404">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows broadcast packets; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2bc79-405">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-405">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-406">Emisja jest ograniczona do określonej podsieci.</span><span class="sxs-lookup"><span data-stu-id="2bc79-406">Broadcasting is limited to a specific subnet.</span></span> <span data-ttu-id="2bc79-407">Można emisji do podsieci lokalnej, wysyłając pakiet do 255.255.255.255; lub skorzystać z adres ukierunkowanej emisji, co jest częścią sieci adresu Internet Protocol (IP) z wszystkie bity w części dotyczącej hosta.</span><span class="sxs-lookup"><span data-stu-id="2bc79-407">You can broadcast to your local subnet by sending a packet to 255.255.255.255; or, you can use the directed broadcast address, which is the network portion of an Internet Protocol (IP) address with all bits set in the host portion.</span></span> <span data-ttu-id="2bc79-408">Na przykład jeśli adres IP jest 192.168.1.40 (klasy C adresu z części sieci jako pierwsze trzy oktety i część hosta jest ostatni oktet), adres ukierunkowanej emisji jest 192.168.1.255.</span><span class="sxs-lookup"><span data-stu-id="2bc79-408">For example, if your IP address is 192.168.1.40 (a Class C address, with the network portion as the first three octets, and the host portion is the last octet), your directed broadcast address is 192.168.1.255.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-409">W poniższym przykładzie pokazano sposób użycia <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2bc79-409">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public byte[] EndReceive (IAsyncResult asyncResult, ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EndReceive(class System.IAsyncResult asyncResult, class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult, ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EndReceive(IAsyncResult ^ asyncResult, System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="2bc79-410">
            <see cref="T:System.IAsyncResult" /> Obiektu zwróconego przez wywołanie do <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-410">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="2bc79-411">Określony zdalny punkt końcowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-411">The specified remote endpoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-412">Kończy się oczekujących asynchronicznych odbierania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-412">Ends a pending asynchronous receive.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bc79-413">W przypadku powodzenia zawierającego datagram dane tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-413">If successful, an array of bytes that contains datagram data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-414">Ukończ ten uniemożliwia metody do czasu tej operacji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-414">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="2bc79-415">Aby wykonać tę operację synchronicznie, użyj <xref:System.Net.Sockets.UdpClient.Receive%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-415">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-416">Poniższy przykład kodu wykorzystuje <xref:System.Net.Sockets.UdpClient.BeginSend%2A> przeprowadzenie asynchronicznego odbioru odpowiedź serwera.</span><span class="sxs-lookup"><span data-stu-id="2bc79-416">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous receive of a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bc79-417">
            <paramref name="asyncResult" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-417">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2bc79-418">
            <paramref name="asyncResult" /> nie został zwrócony przez wywołanie do <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-418">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bc79-419">
            <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> wcześniej została wywołana dla odczyt asynchroniczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-419">
              <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-420">Wystąpił błąd podczas próby dostępu do podstawowych <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-420">An error occurred when attempting to access the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-421">Podstawowa <see cref="T:System.Net.Sockets.Socket" /> został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-421">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public int EndSend (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSend(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSend (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSend(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="2bc79-422">
            <see cref="T:System.IAsyncResult" /> Obiektu zwróconego przez wywołanie do <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-422">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-423">Kończy się oczekujące asynchronicznego wysyłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-423">Ends a pending asynchronous send.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bc79-424">Jeśli się powodzeniem, liczba bajtów wysłanych do <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-424">If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-425">Ukończ ten uniemożliwia metody do czasu tej operacji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-425">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="2bc79-426">Aby wykonać tę operację synchronicznie, użyj <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-426">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-427">Poniższy przykład kodu wykorzystuje <xref:System.Net.Sockets.UdpClient.BeginSend%2A> przeprowadzenie asynchronicznego wysyłania żądania serwera.</span><span class="sxs-lookup"><span data-stu-id="2bc79-427">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous send of a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bc79-428">
            <paramref name="asyncResult" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-428">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2bc79-429">
            <paramref name="asyncResult" /> nie został zwrócony przez wywołanie do <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-429">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bc79-430">
            <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> wcześniej została wywołana dla odczyt asynchroniczny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-430">
              <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-431">Wystąpił błąd podczas próby dostępu podstawowej gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-431">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-432">Podstawowa <see cref="T:System.Net.Sockets.Socket" /> został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-432">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-433">Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość określająca, czy <see cref="T:System.Net.Sockets.UdpClient" /> umożliwia korzystanie z portu tylko jednego klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-433">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2bc79-434">
            <see langword="true" /> Jeśli <see cref="T:System.Net.Sockets.UdpClient" /> umożliwia tylko jednego klienta do używania konkretnego portu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-434">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2bc79-435">Wartość domyślna to <see langword="true" /> dla systemu Windows Server 2003 i Windows XP z dodatkiem Service Pack 2 lub nowszej, a <see langword="false" /> dla wszystkich innych wersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-435">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-436">Domyślnie wielu klientów można użyć określonego portu; jednak tylko jeden klienci mogą wykonywać operacje na ruch sieciowy wysyłane do portu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-436">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="2bc79-437">Można użyć <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> właściwości, aby zapobiec wielu klientów przy użyciu określonego portu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-437">You can use the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="2bc79-438">Tej właściwości należy ustawić przed podstawowej gniazda jest powiązany z portem klienta.</span><span class="sxs-lookup"><span data-stu-id="2bc79-438">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="2bc79-439">Jeśli należy wywołać <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, lub <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, port klienta jest powiązany jako efekt uboczny konstruktora, a następnie nie można ustawić <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> właściwości</span><span class="sxs-lookup"><span data-stu-id="2bc79-439">If you call <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, the client port is bound as a side effect of the constructor, and you cannot subsequently set the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-440">Poniższy przykład kodu tworzy <xref:System.Net.Sockets.UdpClient>, pobiera i ustawia <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2bc79-440">The following code example creates a <xref:System.Net.Sockets.UdpClient>, and gets and sets the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-441">Wystąpił błąd podczas próby dostępu podstawowej gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-441">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-442">Podstawowa <see cref="T:System.Net.Sockets.Socket" /> został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-442">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!UdpClient ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="JoinMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-443">Dodaje <see cref="T:System.Net.Sockets.UdpClient" /> do grupy multiemisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-443">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="2bc79-444">Multiemisji <see cref="T:System.Net.IPAddress" /> chcesz dołączyć do grupy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-444">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-445">Dodaje <see cref="T:System.Net.Sockets.UdpClient" /> do grupy multiemisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-445">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-446"><xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> Subskrybuje metody <xref:System.Net.Sockets.UdpClient> do grupy multiemisji przy użyciu określonego <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-446">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="2bc79-447">Po wywołaniu <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> Metoda podstawowa <xref:System.Net.Sockets.Socket> wysyła pakiet grupy zarządzania IGMP (Internet Protocol) do routera żądającego członkostwa w grupie multiemisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-447">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="2bc79-448">Zakres adresów multiemisji został od 224.0.0.0 do 239.255.255.255.</span><span class="sxs-lookup"><span data-stu-id="2bc79-448">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="2bc79-449">Określ adres znajdujący się poza tym zakresem lub routera, który żądań nie jest multiemisji włączony, <xref:System.Net.Sockets.UdpClient> zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-449">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2bc79-450">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-450">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-451">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-451">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span> <span data-ttu-id="2bc79-452">Raz <xref:System.Net.Sockets.UdpClient> jest wymieniony jako członek grupy multiemisji z routera, będą mogli otrzymywać kierowany datagramy wysyłane do określonego <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-452">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-453">Należy utworzyć <xref:System.Net.Sockets.UdpClient> przy użyciu numeru portu multiemisji; w przeciwnym razie nie będzie mogła odbierać kierowany datagramy.</span><span class="sxs-lookup"><span data-stu-id="2bc79-453">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number; otherwise, you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="2bc79-454">Nie wywołuj <xref:System.Net.Sockets.UdpClient.Connect%2A> metoda przed wywołaniem <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> metody, lub <xref:System.Net.Sockets.UdpClient.Receive%2A> metoda nie będzie działać.</span><span class="sxs-lookup"><span data-stu-id="2bc79-454">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, or the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will not work.</span></span> <span data-ttu-id="2bc79-455">Nie trzeba należeć do grupy multiemisji do przesyłania datagramów na adres IP multiemisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-455">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="2bc79-456">Przed przyłączeniem grupy multiemisji, upewnij się, że gniazda jest powiązany z portem lub punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-456">Before joining a multicast group, make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="2bc79-457">Można to zrobić przez wywoływanie jednej z konstruktorów akceptujących portu lub punktu końcowego jako parametr.</span><span class="sxs-lookup"><span data-stu-id="2bc79-457">You do that by calling one of the constructors that accept a port or an endpoint as a parameter.</span></span>  
  
 <span data-ttu-id="2bc79-458">Aby zrezygnować z otrzymywania datagramy multicasted, należy wywołać <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> — metoda i podaj <xref:System.Net.IPAddress> grupy, z którego chcesz wycofać.</span><span class="sxs-lookup"><span data-stu-id="2bc79-458">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-459">W przypadku protokołu IPv6 istnieje kilka zakresów adresów multiemisji, możesz wybrać z.</span><span class="sxs-lookup"><span data-stu-id="2bc79-459">In the IPv6 case, there are several multicast address ranges you can choose from.</span></span> <span data-ttu-id="2bc79-460">Zapoznaj się 2375 RFC organizacji IETF.</span><span class="sxs-lookup"><span data-stu-id="2bc79-460">Please, refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-461">Nie można wywołać <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> na <xref:System.Net.Sockets.UdpClient> wykonane bez określonych portów lokalnych (czyli przy użyciu <xref:System.Net.Sockets.UdpClient.%23ctor> lub <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> konstruktora).</span><span class="sxs-lookup"><span data-stu-id="2bc79-461">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-462">Poniższy przykład kodu pokazuje, jak sprzęgać grupy multiemisji, podając adres multiemisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-462">The following code example demonstrates how to join a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#1)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-463">Podstawowa <see cref="T:System.Net.Sockets.Socket" /> został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-463">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-464">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-464">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2bc79-465">Adres IP nie jest zgodny z <see cref="T:System.Net.Sockets.AddressFamily" /> wartość, która definiuje schemat adresowania gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-465">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (int ifindex, System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(int32 ifindex, class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (ifindex As Integer, multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(int ifindex, System::Net::IPAddress ^ multicastAddr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifindex" Type="System.Int32" />
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="ifindex">
          <span data-ttu-id="2bc79-466">Indeks skojarzony z lokalny adres IP, na których chcesz dołączyć do grupy multiemisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-466">The interface index associated with the local IP address on which to join the multicast group.</span>
          </span>
        </param>
        <param name="multicastAddr">
          <span data-ttu-id="2bc79-467">Multiemisji <see cref="T:System.Net.IPAddress" /> chcesz dołączyć do grupy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-467">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-468">Dodaje <see cref="T:System.Net.Sockets.UdpClient" /> do grupy multiemisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-468">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-469">Przed przyłączeniem grupy multiemisji, upewnij się, że gniazda jest powiązany z portem lub punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-469">Before joining a multicast group, be sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="2bc79-470">Można to zrobić, wywołując jedną z konstruktorów, które akceptuje portu lub punktu końcowego jako parametr.</span><span class="sxs-lookup"><span data-stu-id="2bc79-470">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
 <span data-ttu-id="2bc79-471">`infindex` Parametr jest używany do identyfikowania interfejs sprzętu tego samego łącza.</span><span class="sxs-lookup"><span data-stu-id="2bc79-471">The `infindex` parameter is used to identify a hardware interface on the same link.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-472">Istnieje kilka zakresów adresów multiemisji do wyboru.</span><span class="sxs-lookup"><span data-stu-id="2bc79-472">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="2bc79-473">Zapoznaj się RFC organizacji IETF 2375.</span><span class="sxs-lookup"><span data-stu-id="2bc79-473">Refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-474">Nie można wywołać <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> na <xref:System.Net.Sockets.UdpClient> wykonane bez określonych portów lokalnych (czyli przy użyciu <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> lub <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> konstruktora).</span><span class="sxs-lookup"><span data-stu-id="2bc79-474">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> constructor).</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#5)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-475">Podstawowa <see cref="T:System.Net.Sockets.Socket" /> został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-475">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-476">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-476">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, int timeToLive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, int32 timeToLive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, timeToLive As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, int timeToLive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="timeToLive" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="2bc79-477">
            <see cref="T:System.Net.IPAddress" /> Grupy multiemisji do przyłączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-477">The <see cref="T:System.Net.IPAddress" /> of the multicast group to join.</span>
          </span>
        </param>
        <param name="timeToLive">
          <span data-ttu-id="2bc79-478">Czas wygaśnięcia (TTL), mierzony w przeskoków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-478">The Time to Live (TTL), measured in router hops.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-479">Dodaje <see cref="T:System.Net.Sockets.UdpClient" /> do grupy multiemisji o określony czas wygaśnięcia (TTL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-479">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group with the specified Time to Live (TTL).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-480"><xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> Subskrybuje metody <xref:System.Net.Sockets.UdpClient> do grupy multiemisji przy użyciu określonego <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-480">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="2bc79-481">Po wywołaniu <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> Metoda podstawowa <xref:System.Net.Sockets.Socket> wysyła pakiet grupy zarządzania IGMP (Internet Protocol) do routera żądającego członkostwa w grupie multiemisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-481">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="2bc79-482">Zakres adresów multiemisji został od 224.0.0.0 do 239.255.255.255.</span><span class="sxs-lookup"><span data-stu-id="2bc79-482">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="2bc79-483">Określ adres znajdujący się poza tym zakresem lub routera, który żądań nie jest multiemisji włączony, <xref:System.Net.Sockets.UdpClient> zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-483">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2bc79-484">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-484">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-485">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-485">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span> <span data-ttu-id="2bc79-486">`timeToLive` Parametr określa liczbę przeskoków między routerami mogą być dla datagramu, zanim zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="2bc79-486">The `timeToLive` parameter specifies how many router hops will be allowed for a multicasted datagram before being discarded.</span></span> <span data-ttu-id="2bc79-487">Raz <xref:System.Net.Sockets.UdpClient> jest wymieniony jako członek grupy multiemisji z routera, będą mogli otrzymywać kierowany datagramy wysyłane do określonego <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-487">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-488">Należy utworzyć <xref:System.Net.Sockets.UdpClient> przy użyciu numeru portu multiemisji w przeciwnym razie nie będzie mogła odbierać kierowany datagramy.</span><span class="sxs-lookup"><span data-stu-id="2bc79-488">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number otherwise you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="2bc79-489">Nie wywołuj <xref:System.Net.Sockets.UdpClient.Connect%2A> metoda przed wywołaniem <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> metody lub metody receive nie będą działać.</span><span class="sxs-lookup"><span data-stu-id="2bc79-489">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method or the receive method will not work.</span></span> <span data-ttu-id="2bc79-490">Nie trzeba należeć do grupy multiemisji do przesyłania datagramów na adres IP multiemisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-490">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="2bc79-491">Przed przyłączeniem grupy multiemisji upewnij się, że gniazda jest powiązany z portem lub punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-491">Before joining a multicast group make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="2bc79-492">Można to zrobić przez wywoływanie jednej z konstruktorów, które akceptują parametr portu lub punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-492">You do that by calling one of the constructors that accept as parameter a port or an endpoint.</span></span>  
  
 <span data-ttu-id="2bc79-493">Aby zrezygnować z otrzymywania datagramy multicasted, należy wywołać <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> — metoda i podaj <xref:System.Net.IPAddress> grupy, z którego chcesz wycofać.</span><span class="sxs-lookup"><span data-stu-id="2bc79-493">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-494">Nie można wywołać <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> na <xref:System.Net.Sockets.UdpClient> wykonane bez określonych portów lokalnych (czyli przy użyciu <xref:System.Net.Sockets.UdpClient.%23ctor> lub <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> konstruktora).</span><span class="sxs-lookup"><span data-stu-id="2bc79-494">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-495">W poniższym przykładzie pokazano, jak sprzęgać grupy multiemisji, zapewniając dwa parametry, adres multiemisji i liczba, która reprezentuje czas wygaśnięcia.</span><span class="sxs-lookup"><span data-stu-id="2bc79-495">The following example demonstrates how to join a multicast group by providing two parameters, a multicast address, and a number that represents the TTL.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2bc79-496">Podany czas wygaśnięcia nie jest od 0 do 255</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-496">The TTL provided is not between 0 and 255</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-497">Podstawowa <see cref="T:System.Net.Sockets.Socket" /> został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-497">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-498">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-498">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bc79-499">
            <paramref name="multicastAddr" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-499">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2bc79-500">Adres IP nie jest zgodny z <see cref="T:System.Net.Sockets.AddressFamily" /> wartość, która definiuje schemat adresowania gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-500">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, System.Net.IPAddress localAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, class System.Net.IPAddress localAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, localAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, System::Net::IPAddress ^ localAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="localAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="2bc79-501">Multiemisji <see cref="T:System.Net.IPAddress" /> chcesz dołączyć do grupy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-501">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <param name="localAddress">
          <span data-ttu-id="2bc79-502">Lokalna <see cref="T:System.Net.IPAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-502">The local <see cref="T:System.Net.IPAddress" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-503">Dodaje <see cref="T:System.Net.Sockets.UdpClient" /> do grupy multiemisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-503">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-504">Przed przyłączyć się do grupy multiemisji, należy pamiętać, że gniazda jest powiązany z portu lub punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-504">Before you join a multicast group, be sure that the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="2bc79-505">Można to zrobić, wywołując jedną z konstruktorów, które akceptuje portu lub punktu końcowego jako parametr.</span><span class="sxs-lookup"><span data-stu-id="2bc79-505">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-506">Istnieje kilka zakresów adresów multiemisji do wyboru.</span><span class="sxs-lookup"><span data-stu-id="2bc79-506">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="2bc79-507">Można je znaleźć w 2375 RFC organizacji IETF.</span><span class="sxs-lookup"><span data-stu-id="2bc79-507">You can find them in the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-508">Nie można wywołać <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> na <xref:System.Net.Sockets.UdpClient> wykonane bez określonych portów lokalnych (czyli przy użyciu <xref:System.Net.Sockets.UdpClient.%23ctor> lub <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> konstruktora).</span><span class="sxs-lookup"><span data-stu-id="2bc79-508">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-509">W poniższym przykładzie pokazano sposób użycia <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-509">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.UdpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-510">Podstawowa <see cref="T:System.Net.Sockets.Socket" /> został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-510">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-511">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-511">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-512">Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość, która określa, czy wychodzących pakietów multiemisji są dostarczane do aplikację wysyłającą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-512">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether outgoing multicast packets are delivered to the sending application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2bc79-513">
            <see langword="true" /> Jeśli <see cref="T:System.Net.Sockets.UdpClient" /> odbiera wychodzących pakietów multiemisji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-513">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> receives outgoing multicast packets; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-514">Multiemisja to metoda skalowalne wiele do wielu komunikacji w Internecie.</span><span class="sxs-lookup"><span data-stu-id="2bc79-514">Multicast is a scalable method for many-to-many communication on the Internet.</span></span> <span data-ttu-id="2bc79-515">Jeśli proces subskrybuje adresu multiemisji, wszystkie pakiety wysyłane przez otrzymanie procesu przez każdy proces, które subskrybuje adres multiemisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-515">If a process subscribes to a multicast address, any packets sent by that process are received by every other process that has subscribed to the multicast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-516">W poniższym przykładzie pokazano sposób użycia <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2bc79-516">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.UdpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public byte[] Receive (ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Receive(class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Receive(System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="2bc79-517">
            <see cref="T:System.Net.IPEndPoint" /> Reprezentujący hosta zdalnego, z którego wysłano danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-517">An <see cref="T:System.Net.IPEndPoint" /> that represents the remote host from which the data was sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-518">Zwraca datagramów protokołu UDP, który został wysłany przez hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-518">Returns a UDP datagram that was sent by a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bc79-519">Tablica typu <see cref="T:System.Byte" /> zawierającego datagram danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-519">An array of type <see cref="T:System.Byte" /> that contains datagram data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-520"><xref:System.Net.Sockets.UdpClient.Receive%2A> Metody zablokuje dopóki datagram dociera z hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-520">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method will block until a datagram arrives from a remote host.</span></span> <span data-ttu-id="2bc79-521">Jeśli dane są dostępne, <xref:System.Net.Sockets.UdpClient.Receive%2A> — metoda odczytuje pierwszy datagram dodawanych do kolejki i zwróć części danych w postaci tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="2bc79-521">When data is available, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will read the first enqueued datagram and return the data portion as a byte array.</span></span> <span data-ttu-id="2bc79-522">Ta metoda umożliwia wypełnienie `remoteEP` parametr <xref:System.Net.IPAddress> i numer portu nadawcy.</span><span class="sxs-lookup"><span data-stu-id="2bc79-522">This method populates the `remoteEP` parameter with the <xref:System.Net.IPAddress> and port number of the sender.</span></span>  
  
 <span data-ttu-id="2bc79-523">Jeśli określisz domyślnego hosta zdalnego w <xref:System.Net.Sockets.UdpClient.Connect%2A> metody <xref:System.Net.Sockets.UdpClient.Receive%2A> metoda będzie akceptować datagramy z tylko tego hosta.</span><span class="sxs-lookup"><span data-stu-id="2bc79-523">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will accept datagrams from that host only.</span></span> <span data-ttu-id="2bc79-524">Wszystkie inne datagramy zostaną odrzucone.</span><span class="sxs-lookup"><span data-stu-id="2bc79-524">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="2bc79-525">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-525">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-526">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-526">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-527">Jeśli chcesz otrzymywać datagramy multicasted, nie należy wywoływać <xref:System.Net.Sockets.UdpClient.Connect%2A> metoda przed wywołaniem <xref:System.Net.Sockets.UdpClient.Receive%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-527">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="2bc79-528"><xref:System.Net.Sockets.UdpClient> Używane do odbierania datagramy musi być utworzony przy użyciu numeru portu multiemisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-528">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-529">W poniższym przykładzie pokazano <xref:System.Net.Sockets.UdpClient.Receive%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-529">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="2bc79-530"><xref:System.Net.Sockets.UdpClient.Receive%2A> Metody blokuje wykonywania, dopóki nie odbierze komunikatu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-530">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until it receives a message.</span></span> <span data-ttu-id="2bc79-531">Przy użyciu <xref:System.Net.IPEndPoint> przekazany do <xref:System.Net.Sockets.UdpClient.Receive%2A>, tożsamość odpowiadający host zostanie ujawniony.</span><span class="sxs-lookup"><span data-stu-id="2bc79-531">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-532">Podstawowa <see cref="T:System.Net.Sockets.Socket" /> został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-532">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-533">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-533">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.IPAddress" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;valuetype System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.ReceiveAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveAsync () As Task(Of UdpReceiveResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::UdpReceiveResult&gt; ^ ReceiveAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-534">Zwraca datagramów protokołu UDP, asynchronicznie przesłanym przez hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-534">Returns a UDP datagram asynchronously that was sent by a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bc79-535">Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-535">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="2bc79-536">Obiekt zadania reprezentujący operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-536">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-537">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="2bc79-537">This operation will not block.</span></span> <span data-ttu-id="2bc79-538">Zwrócona <xref:System.Threading.Tasks.Task%601>> obiekt ukończy po otrzymaniu pakietów UDP.</span><span class="sxs-lookup"><span data-stu-id="2bc79-538">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the UDP packet has been received.</span></span>  
  
 <span data-ttu-id="2bc79-539">Jeśli określisz domyślnego hosta zdalnego w <xref:System.Net.Sockets.UdpClient.Connect%2A> metody, ta metoda przyjmuje datagramy z tylko tego hosta.</span><span class="sxs-lookup"><span data-stu-id="2bc79-539">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, this method will accept datagrams from that host only.</span></span> <span data-ttu-id="2bc79-540">Wszystkie inne datagramy zostaną odrzucone.</span><span class="sxs-lookup"><span data-stu-id="2bc79-540">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="2bc79-541">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-541">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-542">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-542">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="2bc79-543">Jeśli chcesz otrzymywać datagramy multicasted, nie należy wywoływać <xref:System.Net.Sockets.UdpClient.Connect%2A> metoda przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-543">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling this method.</span></span> <span data-ttu-id="2bc79-544"><xref:System.Net.Sockets.UdpClient> Używane do odbierania datagramy musi być utworzony przy użyciu numeru portu multiemisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-544">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-545">Podstawowa <see cref="T:System.Net.Sockets.Socket" /> został zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-545">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-546">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-546">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-547">Wysyła datagramów protokołu UDP do hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-547">Sends a UDP datagram to a remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="2bc79-548">Tablica typu <see cref="T:System.Byte" /> , który określa datagramów protokołu UDP, który ma zostać wysłany reprezentowane jako tablicę bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-548">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="2bc79-549">Liczba bajtów w datagramie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-549">The number of bytes in the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-550">Wysyła datagramów protokołu UDP do hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-550">Sends a UDP datagram to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bc79-551">Liczba wysłanych bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-551">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-552">To przeciążenie datagramu z hostem zdalnym w <xref:System.Net.Sockets.UdpClient.Connect%2A> metodę i zwraca liczbę bajtów wysłanych.</span><span class="sxs-lookup"><span data-stu-id="2bc79-552">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and returns the number of bytes sent.</span></span> <span data-ttu-id="2bc79-553">Jeśli nie zostanie wywołana <xref:System.Net.Sockets.UdpClient.Connect%2A> przed wywołaniem tego przeciążenia <xref:System.Net.Sockets.UdpClient.Send%2A> metoda zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-553">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2bc79-554">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-554">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-555">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-555">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="2bc79-556">Jeśli chcesz wysłać datagramy do innego hosta zdalnego, należy wywołać <xref:System.Net.Sockets.UdpClient.Connect%2A> metodę i określić żądaną hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-556">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="2bc79-557">Użyj jednej z innych <xref:System.Net.Sockets.UdpClient.Send%2A> przeciążenia metody do przesyłania datagramów na adres emisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-557">Use either of the other <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-558">W poniższym przykładzie pokazano <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-558">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="2bc79-559">Należy ustanowić domyślnego hosta zdalnego przed użyciem tego przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="2bc79-559">You must establish a default remote host prior to using this overload.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bc79-560">
            <paramref name="dgram" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-560">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bc79-561">
            <see cref="T:System.Net.Sockets.UdpClient" /> Już przejęło domyślnego hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-561">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-562">
            <see cref="T:System.Net.Sockets.UdpClient" /> Jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-562">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-563">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-563">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="2bc79-564">Tablica typu <see cref="T:System.Byte" /> , który określa datagramów protokołu UDP, który chcesz wysłać, reprezentowane jako tablicę bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-564">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send, represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="2bc79-565">Liczba bajtów w datagramie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-565">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="2bc79-566">
            <see cref="T:System.Net.IPEndPoint" /> Reprezentujący hosta i portu do przesyłania datagramów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-566">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-567">Wysyła datagramów protokołu UDP do hosta w określonym zdalny punkt końcowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-567">Sends a UDP datagram to the host at the specified remote endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bc79-568">Liczba wysłanych bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-568">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-569"><xref:System.Net.Sockets.UdpClient.Send%2A> Metoda datagramu do określonego punktu końcowego i zwraca liczbę bajtów wysłanych pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="2bc79-569">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the specified endpoint and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="2bc79-570">Przed wywołaniem tego przeciążenia, należy najpierw utworzyć <xref:System.Net.IPEndPoint> przy użyciu adres i port numer IP hosta zdalnego, do którego będą dostarczane z datagramów.</span><span class="sxs-lookup"><span data-stu-id="2bc79-570">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="2bc79-571">Datagramy można wysyłać do emisji domyślny adres, 255.255.255.255, określając <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> dla <xref:System.Net.IPAddress.Address%2A> właściwość <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-571">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="2bc79-572">Po utworzeniu to <xref:System.Net.IPEndPoint>, przekaż go do <xref:System.Net.Sockets.UdpClient.Send%2A> metodę jako `endPoint` parametru.</span><span class="sxs-lookup"><span data-stu-id="2bc79-572">After you have created this <xref:System.Net.IPEndPoint>, pass it to the <xref:System.Net.Sockets.UdpClient.Send%2A> method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="2bc79-573">Do przesyłania datagramów na inne adres emisji, należy użyć <xref:System.Net.Sockets.UdpClient.Client%2A> metodę, aby uzyskać podstawową <xref:System.Net.Sockets.Socket>, a ustawiona opcja gniazda <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-573">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2bc79-574">Możesz również przywrócić za pomocą <xref:System.Net.Sockets.Socket> klasy.</span><span class="sxs-lookup"><span data-stu-id="2bc79-574">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-575">Nie podawaj `endPoint` parametru do tej metody, jeśli już zostało ustanowione zdalnego hosta z <xref:System.Net.Sockets.UdpClient.Connect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-575">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="2bc79-576">Jeśli to zrobisz, <xref:System.Net.Sockets.UdpClient.Send%2A> metoda zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-576">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2bc79-577">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-577">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-578">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-578">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-579">W poniższym przykładzie pokazano <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-579">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="2bc79-580">W tym przykładzie użyto <xref:System.Net.IPEndPoint> określić hosta docelowego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-580">This example uses an <xref:System.Net.IPEndPoint> to specify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bc79-581">
            <paramref name="dgram" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-581">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bc79-582">
            <see cref="T:System.Net.Sockets.UdpClient" /> już zostało ustanowione domyślnego hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-582">
              <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-583">
            <see cref="T:System.Net.Sockets.UdpClient" /> jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-583">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-584">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-584">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, hostname As String, port As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::String ^ hostname, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="2bc79-585">Tablica typu <see cref="T:System.Byte" /> , który określa datagramów protokołu UDP, który ma zostać wysłany reprezentowane jako tablicę bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-585">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="2bc79-586">Liczba bajtów w datagramie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-586">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="2bc79-587">Nazwa hosta zdalnego, do którego ma zostać wysłany datagram.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-587">The name of the remote host to which you intend to send the datagram.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="2bc79-588">Numer portu zdalnego, z którym zamierzasz do komunikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-588">The remote port number with which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-589">Wysyła datagramów protokołu UDP do określonego portu na określony host zdalny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-589">Sends a UDP datagram to a specified port on a specified remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bc79-590">Liczba wysłanych bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-590">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-591"><xref:System.Net.Sockets.UdpClient.Send%2A> Metody datagramu wartości określonych przez `hostname` i `port` parametrów i zwraca liczbę bajtów pomyślnie wysłane.</span><span class="sxs-lookup"><span data-stu-id="2bc79-591">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the values specified by the `hostname` and `port` parameters and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="2bc79-592">Możesz wysłać datagramy domyślny adres emisji, określając "255.255.255.255" dla `hostname` wartość parametru.</span><span class="sxs-lookup"><span data-stu-id="2bc79-592">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="2bc79-593">Do przesyłania datagramów na inne adres emisji, należy użyć <xref:System.Net.Sockets.UdpClient.Client%2A> metodę, aby uzyskać podstawową <xref:System.Net.Sockets.Socket>, a ustawiona opcja gniazda <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-593">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2bc79-594">Możesz również przywrócić za pomocą <xref:System.Net.Sockets.Socket> klasy.</span><span class="sxs-lookup"><span data-stu-id="2bc79-594">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2bc79-595">Podaj nazwę hosta lub nie numer_portu do tej metody, jeśli już zostało ustanowione zdalnego hosta z <xref:System.Net.Sockets.UdpClient.Connect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-595">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="2bc79-596">Jeśli to zrobisz, <xref:System.Net.Sockets.UdpClient.Send%2A> metoda zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-596">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2bc79-597">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-597">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-598">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-598">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-599">W poniższym przykładzie pokazano <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-599">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="2bc79-600">W tym przykładzie użyto nazwy hosta i numer portu do identyfikacji hosta docelowego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-600">This example uses a host name and a port number to identify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bc79-601">
            <paramref name="dgram" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-601">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bc79-602">
            <see cref="T:System.Net.Sockets.UdpClient" /> Już przejęło domyślnego hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-602">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-603">
            <see cref="T:System.Net.Sockets.UdpClient" /> Jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-603">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-604">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-604">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-605">Przesyła datagram UDP asynchronicznie do hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-605">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="2bc79-606">Tablica typu <see cref="T:System.Byte" /> , który określa datagramów protokołu UDP, który ma zostać wysłany reprezentowane jako tablicę bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-606">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="2bc79-607">Liczba bajtów w datagramie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-607">The number of bytes in the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-608">Przesyła datagram UDP asynchronicznie do hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-608">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bc79-609">Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-609">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-610">To przeciążenie datagramu z hostem zdalnym w <xref:System.Net.Sockets.UdpClient.Connect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-610">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="2bc79-611">Jeśli nie zostanie wywołana <xref:System.Net.Sockets.UdpClient.Connect%2A> przed wywołaniem tego przeciążenia, metoda zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-611">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2bc79-612">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-612">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-613">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-613">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="2bc79-614">Jeśli chcesz wysłać datagramy do innego hosta zdalnego, należy wywołać <xref:System.Net.Sockets.UdpClient.Connect%2A> metodę i określić żądaną hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-614">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="2bc79-615">Użyj jednej z innych <xref:System.Net.Sockets.UdpClient.SendAsync%2A> przeciążenia metody do przesyłania datagramów na adres emisji.</span><span class="sxs-lookup"><span data-stu-id="2bc79-615">Use either of the other <xref:System.Net.Sockets.UdpClient.SendAsync%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bc79-616">
            <paramref name="dgram" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-616">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bc79-617">
            <see cref="T:System.Net.Sockets.UdpClient" /> Już przejęło domyślnego hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-617">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-618">
            <see cref="T:System.Net.Sockets.UdpClient" /> Jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-618">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-619">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-619">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="2bc79-620">Tablica typu <see cref="T:System.Byte" /> , który określa datagramów protokołu UDP, który ma zostać wysłany reprezentowane jako tablicę bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-620">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="2bc79-621">Liczba bajtów w datagramie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-621">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="2bc79-622">
            <see cref="T:System.Net.IPEndPoint" /> Reprezentujący hosta i portu do przesyłania datagramów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-622">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-623">Przesyła datagram UDP asynchronicznie do hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-623">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bc79-624">Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-624">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-625">Ta metoda datagramu do określonego punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="2bc79-625">This method sends datagrams to the specified endpoint.</span></span> <span data-ttu-id="2bc79-626">Przed wywołaniem tego przeciążenia, należy najpierw utworzyć <xref:System.Net.IPEndPoint> przy użyciu adres i port numer IP hosta zdalnego, do którego będą dostarczane z datagramów.</span><span class="sxs-lookup"><span data-stu-id="2bc79-626">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="2bc79-627">Datagramy można wysyłać do emisji domyślny adres, 255.255.255.255, określając <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> dla <xref:System.Net.IPAddress.Address%2A> właściwość <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-627">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="2bc79-628">Po utworzeniu to <xref:System.Net.IPEndPoint>, przekaż go do tej metody jako `endPoint` parametru.</span><span class="sxs-lookup"><span data-stu-id="2bc79-628">After you have created this <xref:System.Net.IPEndPoint>, pass it to this method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="2bc79-629">Do przesyłania datagramów na inne adres emisji, należy użyć <xref:System.Net.Sockets.UdpClient.Client%2A> metodę, aby uzyskać podstawową <xref:System.Net.Sockets.Socket>, a ustawiona opcja gniazda <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-629">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2bc79-630">Możesz również przywrócić za pomocą <xref:System.Net.Sockets.Socket> klasy.</span><span class="sxs-lookup"><span data-stu-id="2bc79-630">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="2bc79-631">Nie podawaj `endPoint` parametru do tej metody, jeśli już zostało ustanowione zdalnego hosta z <xref:System.Net.Sockets.UdpClient.Connect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-631">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="2bc79-632">Jeśli to zrobisz, ta metoda zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-632">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2bc79-633">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-633">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-634">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-634">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bc79-635">
            <paramref name="dgram" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-635">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bc79-636">
            <see cref="T:System.Net.Sockets.UdpClient" /> już zostało ustanowione domyślnego hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-636">
              <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-637">
            <see cref="T:System.Net.Sockets.UdpClient" /> jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-637">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-638">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-638">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, hostname As String, port As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="2bc79-639">Tablica typu <see cref="T:System.Byte" /> , który określa datagramów protokołu UDP, który ma zostać wysłany reprezentowane jako tablicę bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-639">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="2bc79-640">Liczba bajtów w datagramie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-640">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="2bc79-641">Nazwa hosta zdalnego, do którego ma zostać wysłany datagram.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-641">The name of the remote host to which you intend to send the datagram.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="2bc79-642">Numer portu zdalnego, z którym zamierzasz do komunikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-642">The remote port number with which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2bc79-643">Przesyła datagram UDP asynchronicznie do hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-643">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2bc79-644">Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-644">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-645">Ta metoda datagramu wartości określonych przez `hostname` i `port` parametrów.</span><span class="sxs-lookup"><span data-stu-id="2bc79-645">This method sends datagrams to the values specified by the `hostname` and `port` parameters.</span></span> <span data-ttu-id="2bc79-646">Możesz wysłać datagramy domyślny adres emisji, określając "255.255.255.255" dla `hostname` wartość parametru.</span><span class="sxs-lookup"><span data-stu-id="2bc79-646">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="2bc79-647">Do przesyłania datagramów na inne adres emisji, należy użyć <xref:System.Net.Sockets.UdpClient.Client%2A> metodę, aby uzyskać podstawową <xref:System.Net.Sockets.Socket>, a ustawiona opcja gniazda <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-647">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2bc79-648">Możesz również przywrócić za pomocą <xref:System.Net.Sockets.Socket> klasy.</span><span class="sxs-lookup"><span data-stu-id="2bc79-648">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="2bc79-649">Podaj nazwę hosta lub nie numer_portu do tej metody, jeśli już zostało ustanowione zdalnego hosta z <xref:System.Net.Sockets.UdpClient.Connect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2bc79-649">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="2bc79-650">Jeśli to zrobisz, ta metoda zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2bc79-650">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="2bc79-651">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-651">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="2bc79-652">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="2bc79-652">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2bc79-653">
            <paramref name="dgram" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-653">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2bc79-654">
            <see cref="T:System.Net.Sockets.UdpClient" /> Już przejęło domyślnego hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-654">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2bc79-655">
            <see cref="T:System.Net.Sockets.UdpClient" /> Jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-655">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="2bc79-656">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-656">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public short Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Ttl" />
      <MemberSignature Language="VB.NET" Value="Public Property Ttl As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Ttl { short get(); void set(short value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2bc79-657">Pobiera lub ustawia wartość, która określa czas wygaśnięcia (TTL) wartość pakietów protokołu internetowego (IP) wysyłane przez <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-657">Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2bc79-658">Wartość TTL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2bc79-658">The TTL value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc79-659">Wartość TTL wskazuje maksymalną liczbę routery pakietu można przechodzić między nimi przed routera odrzuca pakiet i kontroli protokołu ICMP (Internet Message) "Przekroczono TTL" nadawcy jest zwracany komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="2bc79-659">The TTL value indicates the maximum number of routers a packet can traverse before the router discards the packet and an Internet Control Message Protocol (ICMP) "TTL exceeded" error message is returned to the sender.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2bc79-660">W poniższym przykładzie pokazano sposób użycia <xref:System.Net.Sockets.UdpClient.Ttl%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2bc79-660">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Ttl%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>