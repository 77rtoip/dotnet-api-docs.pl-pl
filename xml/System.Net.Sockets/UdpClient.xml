<Type Name="UdpClient" FullName="System.Net.Sockets.UdpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f263c49be787811b27cf3eaa57ce140baff48b28" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37644293" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UdpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e141a-101">Udostępnia usługi sieciowe protokołu UDP (User Datagram).</span>
      <span class="sxs-lookup">
        <span data-stu-id="e141a-101">Provides User Datagram Protocol (UDP) network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-102"><xref:System.Net.Sockets.UdpClient> Klasy zapewnia proste metody wysyłania i odbierania przesyłanie datagramy protokołu UDP w trybie synchronicznym blokowania.</span><span class="sxs-lookup"><span data-stu-id="e141a-102">The <xref:System.Net.Sockets.UdpClient> class provides simple methods for sending and receiving connectionless UDP datagrams in blocking synchronous mode.</span></span> <span data-ttu-id="e141a-103">Ponieważ UDP protokołu transportu bez połączenia, nie musisz ustanowić połączenia zdalnego hosta przed wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="e141a-103">Because UDP is a connectionless transport protocol, you do not need to establish a remote host connection prior to sending and receiving data.</span></span> <span data-ttu-id="e141a-104">Masz jednak opcja ustanowienie domyślnego hosta zdalnego w jednym z dwóch sposobów:</span><span class="sxs-lookup"><span data-stu-id="e141a-104">You do, however, have the option of establishing a default remote host in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="e141a-105">Utwórz wystąpienie obiektu <xref:System.Net.Sockets.UdpClient> przy użyciu nazwy hosta zdalnego i numer portu jako parametry.</span><span class="sxs-lookup"><span data-stu-id="e141a-105">Create an instance of the <xref:System.Net.Sockets.UdpClient> class using the remote host name and port number as parameters.</span></span>  
  
-   <span data-ttu-id="e141a-106">Utwórz wystąpienie obiektu <xref:System.Net.Sockets.UdpClient> klasy, a następnie wywołać <xref:System.Net.Sockets.UdpClient.Connect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-106">Create an instance of the <xref:System.Net.Sockets.UdpClient> class and then call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span>  
  
 <span data-ttu-id="e141a-107">Możesz użyć dowolnej metody wysyłania dostarczone w <xref:System.Net.Sockets.UdpClient> wysyłać dane do urządzenia zdalnego.</span><span class="sxs-lookup"><span data-stu-id="e141a-107">You can use any of the send methods provided in the <xref:System.Net.Sockets.UdpClient> to send data to a remote device.</span></span> <span data-ttu-id="e141a-108">Użyj <xref:System.Net.Sockets.UdpClient.Receive%2A> metody na odbieranie danych z hostów zdalnych.</span><span class="sxs-lookup"><span data-stu-id="e141a-108">Use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method to receive data from remote hosts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-109">Nie wywołuj <xref:System.Net.Sockets.UdpClient.Send%2A> przy użyciu nazwy hosta lub <xref:System.Net.IPEndPoint> zdefiniowano już domyślnego hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="e141a-109">Do not call <xref:System.Net.Sockets.UdpClient.Send%2A> using a host name or <xref:System.Net.IPEndPoint> if you have already specified a default remote host.</span></span> <span data-ttu-id="e141a-110">Jeśli to zrobisz, <xref:System.Net.Sockets.UdpClient> spowoduje zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="e141a-110">If you do, <xref:System.Net.Sockets.UdpClient> will throw an exception.</span></span>  
  
 <span data-ttu-id="e141a-111"><xref:System.Net.Sockets.UdpClient> metody umożliwiają także wysyłać i odbierać datagramy multiemisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-111"><xref:System.Net.Sockets.UdpClient> methods also allow you to send and receive multicast datagrams.</span></span> <span data-ttu-id="e141a-112">Użyj <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> metody do subskrybowania <xref:System.Net.Sockets.UdpClient> do grupy multiemisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-112">Use the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method to subscribe a <xref:System.Net.Sockets.UdpClient> to a multicast group.</span></span> <span data-ttu-id="e141a-113">Użyj <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> metodę, aby anulować subskrypcję <xref:System.Net.Sockets.UdpClient> z grupy multiemisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-113">Use the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method to unsubscribe a <xref:System.Net.Sockets.UdpClient> from a multicast group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-114">Poniższy przykład ustanawia <xref:System.Net.Sockets.UdpClient> połączenia przy użyciu hosta nazwa www.contoso.com na porcie 11000.</span><span class="sxs-lookup"><span data-stu-id="e141a-114">The following example establishes a <xref:System.Net.Sockets.UdpClient> connection using the host name www.contoso.com on port 11000.</span></span> <span data-ttu-id="e141a-115">Komunikat w formacie ciągu małych są wysyłane do dwóch oddzielnych hosta zdalnego maszyn.</span><span class="sxs-lookup"><span data-stu-id="e141a-115">A small string message is sent to two separate remote host machines.</span></span> <span data-ttu-id="e141a-116"><xref:System.Net.Sockets.UdpClient.Receive%2A> Metoda blokuje wykonywanie otrzymanie komunikatu.</span><span class="sxs-lookup"><span data-stu-id="e141a-116">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until a message is received.</span></span> <span data-ttu-id="e141a-117">Za pomocą <xref:System.Net.IPEndPoint> przekazany do <xref:System.Net.Sockets.UdpClient.Receive%2A>, tożsamość odpowiadający host jest ujawniona.</span><span class="sxs-lookup"><span data-stu-id="e141a-117">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClientExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClientExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClientExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClientExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClientExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClientExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="e141a-118">Aby ustanowić połączenia wychodzącego, lub zaakceptuj żądanie przychodzące.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e141a-118">To establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e141a-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.UdpClient" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-119">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e141a-120">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.UdpClient" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-121">Ten konstruktor tworzy nową <xref:System.Net.Sockets.UdpClient> i umożliwia podstawowego dostawcy usług można przypisać najodpowiedniejsze IPv4 adres i port numer lokalny.</span><span class="sxs-lookup"><span data-stu-id="e141a-121">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and allows the underlying service provider to assign the most appropriate local IPv4 address and port number.</span></span> <span data-ttu-id="e141a-122">Jeśli ten konstruktor jest używany, <xref:System.Net.Sockets.UdpClient> wystąpienia została ustawiona za pomocą rodziny adresów IPv4, którego nie można zmienić ani zastąpiona przez wywołanie metody connect za pomocą obiektu docelowego protokołu IPv6.</span><span class="sxs-lookup"><span data-stu-id="e141a-122">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-123">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-123">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-124">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-124">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="e141a-125">Ten konstruktor nie jest odpowiednia dla dołączanie do grupy multiemisji, ponieważ nie wykonuje wiązanie gniazda.</span><span class="sxs-lookup"><span data-stu-id="e141a-125">This constructor is not suitable for joining a multicast group because it does not perform socket binding.</span></span> <span data-ttu-id="e141a-126">Ponadto działa tylko z typów adresu IPv4.</span><span class="sxs-lookup"><span data-stu-id="e141a-126">Also, it works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-127">Poniższy przykład pokazuje, jak używać konstruktora domyślnego w celu utworzenia wystąpienia <xref:System.Net.Sockets.UdpClient> klasy.</span><span class="sxs-lookup"><span data-stu-id="e141a-127">The following example demonstrates how to use the default constructor to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-128">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-128">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : int -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="e141a-129">Numer portu lokalnego, z którego chcesz nawiązać połączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-129">The local port number from which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-130">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.UdpClient" /> klasy i wiąże go numer portu lokalnego pod warunkiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-130">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-131">Ten konstruktor tworzy podstawowej <xref:System.Net.Sockets.Socket> i wiąże go do numeru portu, z którego chcesz nawiązać połączenia.</span><span class="sxs-lookup"><span data-stu-id="e141a-131">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span> <span data-ttu-id="e141a-132">Jeśli interesuje Cię tylko ustawienie numer portu lokalnego, należy użyć tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="e141a-132">Use this constructor if you are only interested in setting the local port number.</span></span> <span data-ttu-id="e141a-133">Źródłowy dostawca usługi spowoduje przypisanie lokalny adres IP.</span><span class="sxs-lookup"><span data-stu-id="e141a-133">The underlying service provider will assign the local IP address.</span></span> <span data-ttu-id="e141a-134">Jeśli przekażesz 0 do konstruktora podstawowego dostawcy usług przypisze numeru portu.</span><span class="sxs-lookup"><span data-stu-id="e141a-134">If you pass 0 to the constructor, the underlying service provider will assign a port number.</span></span> <span data-ttu-id="e141a-135">Jeśli ten konstruktor jest używany, <xref:System.Net.Sockets.UdpClient> wystąpienia została ustawiona za pomocą rodziny adresów IPv4, którego nie można zmienić ani zastąpiona przez wywołanie metody connect za pomocą obiektu docelowego protokołu IPv6.</span><span class="sxs-lookup"><span data-stu-id="e141a-135">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-136">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-136">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-137">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-137">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="e141a-138">Ten konstruktor działa tylko w przypadku typów adresu IPv4.</span><span class="sxs-lookup"><span data-stu-id="e141a-138">This constructor works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-139">W poniższym przykładzie pokazano tworzenie wystąpienia przy użyciu numeru portu lokalnego <xref:System.Net.Sockets.UdpClient> klasy.</span><span class="sxs-lookup"><span data-stu-id="e141a-139">The following example demonstrates using a local port number to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e141a-140">
            <paramref name="port" /> Parametru jest większa niż <see cref="F:System.Net.IPEndPoint.MaxPort" /> lub mniej niż <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-140">The <paramref name="port" /> parameter is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-141">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-141">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : System.Net.IPEndPoint -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="e141a-142">
            <see cref="T:System.Net.IPEndPoint" /> Tego respresents lokalny punkt końcowy, do którego można powiązać połączenia protokołu UDP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-142">An <see cref="T:System.Net.IPEndPoint" /> that respresents the local endpoint to which you bind the UDP connection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-143">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.UdpClient" /> klasy i wiąże go z określonego lokalny punkt końcowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-143">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-144">Ten konstruktor tworzy nową <xref:System.Net.Sockets.UdpClient> i wiąże go do <xref:System.Net.IPEndPoint> określony przez `localEP` parametru.</span><span class="sxs-lookup"><span data-stu-id="e141a-144">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="e141a-145">Przed wywołaniem tego konstruktora musi utworzyć <xref:System.Net.IPEndPoint> przy użyciu adresu IP adres i numer portu z którego chcesz wysyłać i odbierać dane.</span><span class="sxs-lookup"><span data-stu-id="e141a-145">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="e141a-146">Nie trzeba określić lokalny adres IP i port numer do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="e141a-146">You do not need to specify a local IP address and port number for sending and receiving data.</span></span> <span data-ttu-id="e141a-147">Jeśli tego nie zrobisz, podstawowego dostawcy usług przypisze najbardziej odpowiedniego adresu IP adres i port numer lokalny.</span><span class="sxs-lookup"><span data-stu-id="e141a-147">If you do not, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="e141a-148">Jeśli ten konstruktor jest używany, <xref:System.Net.Sockets.UdpClient> wystąpienia została ustawiona za pomocą rodziny adresów, określony przez `localEP` parametr, który nie można zmienić ani zastąpiona przez wywołanie metody connect z rodziną inny adres.</span><span class="sxs-lookup"><span data-stu-id="e141a-148">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `localEP` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-149">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-149">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-150">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-150">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-151">Poniższy przykład przedstawia sposób tworzenia wystąpienia <xref:System.Net.Sockets.UdpClient> klasy przy użyciu lokalnego punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="e141a-151">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e141a-152">
            <paramref name="localEP" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-152">
              <paramref name="localEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-153">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-153">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="e141a-154">Jedną z <see cref="T:System.Net.Sockets.AddressFamily" /> wartości, które określa schemat adresowania gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-154">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-155">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.UdpClient" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-155">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-156">`family` Parametr określa, czy odbiornik używa adresu IP w wersji 4 (IPv4) lub adresu IP w wersji 6 (IPv6) adres.</span><span class="sxs-lookup"><span data-stu-id="e141a-156">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="e141a-157">Aby używać adresu IPv4, należy przekazać <xref:System.Net.Sockets.AddressFamily.InterNetwork> wartość.</span><span class="sxs-lookup"><span data-stu-id="e141a-157">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="e141a-158">Aby użyć adresu IPv6, należy przekazać <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> wartość.</span><span class="sxs-lookup"><span data-stu-id="e141a-158">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="e141a-159">Przekazywanie innych wartości spowoduje, że metoda zgłosić <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="e141a-159">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="e141a-160">Jeśli ten konstruktor jest używany, <xref:System.Net.Sockets.UdpClient> wystąpienia została ustawiona za pomocą rodziny adresów, określony przez `family` parametr, który nie można zmienić ani zastąpiona przez wywołanie metody connect z rodziną inny adres.</span><span class="sxs-lookup"><span data-stu-id="e141a-160">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-161">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-161">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-162">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-162">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="e141a-163"><xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> Nie nadaje się na dołączenie do grupy multiemisji, ponieważ nie wykonuje wiązanie gniazda.</span><span class="sxs-lookup"><span data-stu-id="e141a-163">The <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> is not suitable for joining a multicast group because it does not perform socket binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e141a-164">
            <paramref name="family" /> nie jest <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> lub <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-164">
              <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-165">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-165">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port, System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port, valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer, family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port, System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : int * System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient (port, family)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="e141a-166">Port do nasłuchiwania dla przychodzących próby nawiązania połączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-166">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="e141a-167">Jedną z <see cref="T:System.Net.Sockets.AddressFamily" /> wartości, które określa schemat adresowania gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-167">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-168">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.UdpClient" /> klasy i wiąże go numer portu lokalnego pod warunkiem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-168">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-169">Ten konstruktor tworzy podstawowej <xref:System.Net.Sockets.Socket> i wiąże go do numeru portu, z którego chcesz nawiązać połączenia.</span><span class="sxs-lookup"><span data-stu-id="e141a-169">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span>  
  
 <span data-ttu-id="e141a-170">`family` Parametr określa, czy odbiornik używa adresu IP w wersji 4 (IPv4) lub adresu IP w wersji 6 (IPv6) adres.</span><span class="sxs-lookup"><span data-stu-id="e141a-170">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="e141a-171">Aby używać adresu IPv4, należy przekazać <xref:System.Net.Sockets.AddressFamily.InterNetwork> wartość.</span><span class="sxs-lookup"><span data-stu-id="e141a-171">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="e141a-172">Aby użyć adresu IPv6, należy przekazać <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> wartość.</span><span class="sxs-lookup"><span data-stu-id="e141a-172">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="e141a-173">Przekazywanie innych wartości spowoduje, że metoda zgłosić <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="e141a-173">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="e141a-174">Jeśli ten konstruktor jest używany, <xref:System.Net.Sockets.UdpClient> wystąpienia została ustawiona za pomocą rodziny adresów, określony przez `family` parametr, który nie można zmienić ani zastąpiona przez wywołanie metody connect z rodziną inny adres.</span><span class="sxs-lookup"><span data-stu-id="e141a-174">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-175">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-175">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-176">Po otrzymaniu tego kodu, dotyczą Windows Sockets w wersji 2 dokumentacji interfejsu API błąd kodu w bibliotece MSDN szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-176">Once you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-177">W poniższym przykładzie kodu pokazano, jak można utworzyć klienta UDP służące do grupy multiemisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-177">The following code example shows how to create a UDP client to use in a multicast group.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#3)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e141a-178">
            <paramref name="family" /> nie jest <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> lub <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-178">
              <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e141a-179">
            <paramref name="port" /> jest większa niż <see cref="F:System.Net.IPEndPoint.MaxPort" /> lub mniej niż <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-179">
              <paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-180">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-180">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : string * int -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient (hostname, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="e141a-181">Nazwa hosta DNS zdalnego, do której chcesz połączyć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-181">The name of the remote DNS host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="e141a-182">Numer portu zdalnego, w którym ma się połączyć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-182">The remote port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-183">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.UdpClient" /> klasy i ustanawia domyślnego hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-183">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and establishes a default remote host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-184">Ten konstruktor inicjuje nową <xref:System.Net.Sockets.UdpClient> i ustanawia z hostem zdalnym za pomocą `hostname` i `port` parametrów.</span><span class="sxs-lookup"><span data-stu-id="e141a-184">This constructor initializes a new <xref:System.Net.Sockets.UdpClient> and establishes a remote host using the `hostname` and `port` parameters.</span></span> <span data-ttu-id="e141a-185">Ustanowienie domyślnego hosta zdalnego jest opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="e141a-185">Establishing a default remote host is optional.</span></span> <span data-ttu-id="e141a-186">Jeśli używasz tego konstruktora, nie należy określić hosta zdalnego w każdym wywołaniu <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-186">If you use this constructor, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="e141a-187">Określenie domyślnego hosta zdalnego ogranicza użytkownika tylko do tego hosta.</span><span class="sxs-lookup"><span data-stu-id="e141a-187">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="e141a-188">W dowolnym momencie można zmienić domyślnego hosta zdalnego, wywołując <xref:System.Net.Sockets.UdpClient.Connect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-188">You can change the default remote host at any time by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="e141a-189">Jeśli chcesz określić hosta zdalnego w wywołania do <xref:System.Net.Sockets.UdpClient.Send%2A> metody, nie używaj tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="e141a-189">If you want to specify a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, do not use this constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-190">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-190">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-191">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-191">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-192">Poniższy przykład przedstawia sposób tworzenia wystąpienia <xref:System.Net.Sockets.UdpClient> klasy przy użyciu nazwy hosta i numer portu.</span><span class="sxs-lookup"><span data-stu-id="e141a-192">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e141a-193">
            <paramref name="hostname" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-193">
              <paramref name="hostname" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e141a-194">
            <paramref name="port" /> nie przypada między <see cref="F:System.Net.IPEndPoint.MinPort" /> i <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-194">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-195">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-195">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Net.Sockets.UdpClient.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e141a-196">Pobiera lub ustawia wartość wskazującą, czy została ustanowiona domyślnego hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-196">Gets or sets a value indicating whether a default remote host has been established.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e141a-197">
            <see langword="true" /> Jeśli połączenie jest aktywne; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-197">
              <see langword="true" /> if a connection is active; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-198">Klasy wywodzące się z <xref:System.Net.Sockets.UdpClient> można użyć tej właściwości, aby określić, jeśli została ustanowiona domyślnego hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="e141a-198">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to determine if a default remote host has been established.</span></span> <span data-ttu-id="e141a-199">Można utworzyć domyślnego hosta zdalnego za pomocą odpowiedniego konstruktora lub przez wywołanie metody <xref:System.Net.Sockets.UdpClient.Connect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-199">You can establish a default remote host by using the appropriate constructor or by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="e141a-200">Jeśli ustanowisz domyślnego hosta zdalnego hosta zdalnego nie można określić w wywołania do <xref:System.Net.Sockets.UdpClient.Send%2A>.</span><span class="sxs-lookup"><span data-stu-id="e141a-200">If you do establish a default remote host, you cannot specify a remote host in your call to <xref:System.Net.Sockets.UdpClient.Send%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.UdpClient" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberSignature Language="F#" Value="member this.AllowNatTraversal : bool -&gt; unit" Usage="udpClient.AllowNatTraversal allowed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowed">
          <span data-ttu-id="e141a-201">Wartość logiczna określająca, czy włączyć lub wyłączyć Przechodzenie translatora adresów Sieciowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-201">A Boolean value that specifies whether to enable or disable NAT traversal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-202">Włącza lub wyłącza translacji adresów sieciowych (NAT) przechodzenie na <see cref="T:System.Net.Sockets.UdpClient" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-202">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.UdpClient" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-203"><xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> Metoda jest używana do włączania lub wyłączania Przechodzenie translatora adresów Sieciowych dla <xref:System.Net.Sockets.UdpClient> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e141a-203">The <xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span> <span data-ttu-id="e141a-204">Przechodzenie translatora adresów Sieciowych, mogą być udostępniane przy użyciu protokołu Teredo, 6to4 lub tunel protokołu ISATAP.</span><span class="sxs-lookup"><span data-stu-id="e141a-204">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="e141a-205">Gdy `allowed` parametr ma wartość FAŁSZ, <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> ustawiono opcję w gnieździe skojarzone <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span><span class="sxs-lookup"><span data-stu-id="e141a-205">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="e141a-206">Jawnie wyłącza Przechodzenie translatora adresów Sieciowych dla <xref:System.Net.Sockets.UdpClient> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="e141a-206">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span>  
  
 <span data-ttu-id="e141a-207">Gdy `allowed` parametr ma wartość true, <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> ustawiono opcję w gnieździe skojarzone <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span><span class="sxs-lookup"><span data-stu-id="e141a-207">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="e141a-208">Może to umożliwić Przechodzenie translatora adresów Sieciowych dla <xref:System.Net.Sockets.UdpClient> w zależności od reguły zapory w miejscu w systemie.</span><span class="sxs-lookup"><span data-stu-id="e141a-208">This may allow NAT traversal for a <xref:System.Net.Sockets.UdpClient> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="e141a-209">Adres Teredo nie jest adresem IPv6 z prefiksem 2001:: / 32.</span><span class="sxs-lookup"><span data-stu-id="e141a-209">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="e141a-210">Adresy protokołu Teredo można zwrócone za pośrednictwem normalne rozpoznawanie nazw DNS lub wyliczenia jako adres IPv6 przypisany do interfejsu lokalnego.</span><span class="sxs-lookup"><span data-stu-id="e141a-210">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.UdpClient.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e141a-211">Pobiera ilość danych odebranych z sieci, który jest dostępny do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-211">Gets the amount of data received from the network that is available to read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e141a-212">Liczba bajtów danych odebranych z sieci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-212">The number of bytes of data received from the network.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-213"><xref:System.Net.Sockets.UdpClient.Available%2A> Właściwość jest używana do określenia ilości danych w kolejce w buforze sieci do odczytu.</span><span class="sxs-lookup"><span data-stu-id="e141a-213">The <xref:System.Net.Sockets.UdpClient.Available%2A> property is used to determine the amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="e141a-214">Jeśli dane są dostępne, należy wywołać <xref:System.Net.Sockets.NetworkStream.Read%2A> można pobrać danych.</span><span class="sxs-lookup"><span data-stu-id="e141a-214">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="e141a-215">Jeśli dane są niedostępne, <xref:System.Net.Sockets.UdpClient.Available%2A> właściwość zwraca wartość 0.</span><span class="sxs-lookup"><span data-stu-id="e141a-215">If no data is available, the <xref:System.Net.Sockets.UdpClient.Available%2A> property returns 0.</span></span>  
  
 <span data-ttu-id="e141a-216">Jeśli host zdalny zamyka lub zamyka połączenia, <xref:System.Net.Sockets.UdpClient.Available%2A> zgłasza właściwości <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e141a-216">If the remote host shuts down or closes the connection, the <xref:System.Net.Sockets.UdpClient.Available%2A> property throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-217">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu i odwoływać się do dokumentacji kodów błędów systemu Windows Sockets w wersji 2 interfejsu API w bibliotece MSDN pod [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)/ szczegółowy opis działania Wystąpił błąd.</span><span class="sxs-lookup"><span data-stu-id="e141a-217">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)/ for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-218">Poniższy przykład kodu pokazuje użycie <xref:System.Net.Sockets.UdpClient.Available%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e141a-218">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-219">Wystąpił błąd podczas próby dostęp do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-219">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-220">
            <see cref="T:System.Net.Sockets.Socket" /> Zostało zamknięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-220">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginReceive (requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback">
          <span data-ttu-id="e141a-221">
            <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po ukończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-221">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e141a-222">Obiekt zdefiniowany przez użytkownika, który zawiera informacje na temat operacji odbierania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-222">A user-defined object that contains information about the receive operation.</span>
          </span>
          <span data-ttu-id="e141a-223">Ten obiekt jest przekazywany do <c>requestCallback</c> po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-223">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-224">Asynchronicznie odbiera datagram z hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-224">Receives a datagram from a remote host asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e141a-225">
            <see cref="T:System.IAsyncResult" /> Obiektu, który odwołuje się do asynchronicznego odbioru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-225">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous receive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-226">Asynchroniczną <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> można ukończyć operacji, przez wywołanie metody <xref:System.Net.Sockets.UdpClient.EndReceive%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-226">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndReceive%2A> method.</span></span> <span data-ttu-id="e141a-227">Zazwyczaj metoda jest wywoływana przez `requestCallback` delegować.</span><span class="sxs-lookup"><span data-stu-id="e141a-227">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="e141a-228">Ta metoda nie blokuje, aż do zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="e141a-228">This method does not block until the operation is complete.</span></span> <span data-ttu-id="e141a-229">Aby zablokować, aż do zakończenia operacji, należy użyć <xref:System.Net.Sockets.UdpClient.Receive%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-229">To block until the operation is complete, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="e141a-230">Aby uzyskać szczegółowe informacje dotyczące korzystania z modelu programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="e141a-230">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-231">Poniższy przykład kodu wykorzystuje <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> asynchronicznie czekać na odpowiedź serwera.</span><span class="sxs-lookup"><span data-stu-id="e141a-231">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> to asynchronously receive a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSend">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e141a-232">Wysyła asynchronicznie datagram do hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-232">Sends a datagram to a remote host asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="e141a-233">A <see cref="T:System.Byte" /> tablicy, która zawiera dane do wysłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-233">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="e141a-234">Liczba bajtów do wysłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-234">The number of bytes to send.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="e141a-235">
            <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po ukończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-235">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e141a-236">Obiekt zdefiniowany przez użytkownika, który zawiera informacje na temat operacji wysyłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-236">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="e141a-237">Ten obiekt jest przekazywany do <c>requestCallback</c> po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-237">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-238">Wysyła asynchronicznie datagram do hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-238">Sends a datagram to a remote host asynchronously.</span>
          </span>
          <span data-ttu-id="e141a-239">Miejsce docelowe określono wcześniej przez wywołanie <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-239">The destination was specified previously by a call to <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e141a-240">
            <see cref="T:System.IAsyncResult" /> Obiektu, który odwołuje się do asynchronicznego wysyłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-240">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-241">Asynchroniczną <xref:System.Net.Sockets.UdpClient.BeginSend%2A> można ukończyć operacji, przez wywołanie metody <xref:System.Net.Sockets.UdpClient.EndSend%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-241">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="e141a-242">Zazwyczaj metoda jest wywoływana przez `requestCallback` delegować.</span><span class="sxs-lookup"><span data-stu-id="e141a-242">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="e141a-243">Ta metoda nie blokuje, aż do zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="e141a-243">This method does not block until the operation completes.</span></span> <span data-ttu-id="e141a-244">Aby zablokować, aż do zakończenia operacji, użyj jednej z <xref:System.Net.Sockets.UdpClient.Send%2A> przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-244">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e141a-245">Aby uzyskać szczegółowe informacje dotyczące korzystania z modelu programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="e141a-245">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-246">Poniższy przykład kodu wykorzystuje <xref:System.Net.Sockets.UdpClient.BeginSend%2A> asynchronicznie wysłanie żądania serwera.</span><span class="sxs-lookup"><span data-stu-id="e141a-246">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * System.Net.IPEndPoint * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, endPoint, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="e141a-247">A <see cref="T:System.Byte" /> tablicy, która zawiera dane do wysłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-247">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="e141a-248">Liczba bajtów do wysłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-248">The number of bytes to send.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="e141a-249">
            <see cref="T:System.Net.EndPoint" /> Reprezentujący obiekt docelowy danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-249">The <see cref="T:System.Net.EndPoint" /> that represents the destination for the data.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="e141a-250">
            <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po ukończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-250">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e141a-251">Obiekt zdefiniowany przez użytkownika, który zawiera informacje na temat operacji wysyłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-251">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="e141a-252">Ten obiekt jest przekazywany do <c>requestCallback</c> po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-252">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-253">Wysyła asynchronicznie datagram do miejsca docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-253">Sends a datagram to a destination asynchronously.</span>
          </span>
          <span data-ttu-id="e141a-254">Miejsce docelowe jest określona przez <see cref="T:System.Net.EndPoint" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-254">The destination is specified by a <see cref="T:System.Net.EndPoint" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e141a-255">
            <see cref="T:System.IAsyncResult" /> Obiektu, który odwołuje się do asynchronicznego wysyłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-255">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-256">Asynchroniczną <xref:System.Net.Sockets.UdpClient.BeginSend%2A> można ukończyć operacji, przez wywołanie metody <xref:System.Net.Sockets.UdpClient.EndSend%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-256">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="e141a-257">Zazwyczaj metoda jest wywoływana przez `requestCallback` delegować.</span><span class="sxs-lookup"><span data-stu-id="e141a-257">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="e141a-258">Ta metoda nie blokuje, aż do zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="e141a-258">This method does not block until the operation is complete.</span></span> <span data-ttu-id="e141a-259">Aby zablokować, aż do zakończenia operacji, użyj jednej z <xref:System.Net.Sockets.UdpClient.Send%2A> przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-259">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e141a-260">Aby uzyskać szczegółowe informacje dotyczące korzystania z modelu programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="e141a-260">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-261">Poniższy przykład kodu wykorzystuje <xref:System.Net.Sockets.UdpClient.BeginSend%2A> asynchronicznie wysłanie żądania serwera.</span><span class="sxs-lookup"><span data-stu-id="e141a-261">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, string hostname, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, string hostname, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, hostname As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, hostname, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="e141a-262">A <see cref="T:System.Byte" /> tablicy, która zawiera dane do wysłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-262">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="e141a-263">Liczba bajtów do wysłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-263">The number of bytes to send.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="e141a-264">Host docelowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-264">The destination host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="e141a-265">Numer portu docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-265">The destination port number.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="e141a-266">
            <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po ukończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-266">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e141a-267">Obiekt zdefiniowany przez użytkownika, który zawiera informacje na temat operacji wysyłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-267">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="e141a-268">Ten obiekt jest przekazywany do <c>requestCallback</c> po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-268">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-269">Wysyła asynchronicznie datagram do miejsca docelowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-269">Sends a datagram to a destination asynchronously.</span>
          </span>
          <span data-ttu-id="e141a-270">Miejsce docelowe jest określony przez nazwę hosta i numer portu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-270">The destination is specified by the host name and port number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e141a-271">
            <see cref="T:System.IAsyncResult" /> Obiektu, który odwołuje się do asynchronicznego wysyłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-271">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-272">Asynchroniczną <xref:System.Net.Sockets.UdpClient.BeginSend%2A> można ukończyć operacji, przez wywołanie metody <xref:System.Net.Sockets.UdpClient.EndSend%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-272">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="e141a-273">Zazwyczaj metoda jest wywoływana przez `requestCallback` delegować.</span><span class="sxs-lookup"><span data-stu-id="e141a-273">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="e141a-274">Ta metoda nie blokuje, aż do zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="e141a-274">This method does not block until the operation is complete.</span></span> <span data-ttu-id="e141a-275">Aby zablokować, aż do zakończenia operacji, użyj jednej z <xref:System.Net.Sockets.UdpClient.Send%2A> przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-275">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="e141a-276">Aby uzyskać szczegółowe informacje dotyczące korzystania z modelu programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="e141a-276">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-277">Poniższy przykład kodu wykorzystuje <xref:System.Net.Sockets.UdpClient.BeginSend%2A> asynchronicznie wysłanie żądania serwera.</span><span class="sxs-lookup"><span data-stu-id="e141a-277">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Client : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.UdpClient.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e141a-278">Pobiera lub ustawia odnośnej sieci <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-278">Gets or sets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e141a-279">Odnośnej sieci <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-279">The underlying Network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-280"><xref:System.Net.Sockets.UdpClient> Tworzy <xref:System.Net.Sockets.Socket> używany do wysyłania i odbierania danych przez sieć.</span><span class="sxs-lookup"><span data-stu-id="e141a-280"><xref:System.Net.Sockets.UdpClient> creates a <xref:System.Net.Sockets.Socket> used to send and receive data over a network.</span></span> <span data-ttu-id="e141a-281">Klasy wywodzące się z <xref:System.Net.Sockets.UdpClient> ta właściwość służy do pobierania lub ustawiania to <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="e141a-281">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="e141a-282">Używają bazowej <xref:System.Net.Sockets.Socket> zwróciło <xref:System.Net.Sockets.UdpClient.Client%2A> w razie potrzeby dostęp poza tymi, które <xref:System.Net.Sockets.UdpClient> udostępnia.</span><span class="sxs-lookup"><span data-stu-id="e141a-282">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.UdpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.UdpClient> provides.</span></span> <span data-ttu-id="e141a-283">Można również użyć <xref:System.Net.Sockets.UdpClient.Client%2A> można ustawić podstawowe <xref:System.Net.Sockets.Socket> do istniejącego <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="e141a-283">You can also use <xref:System.Net.Sockets.UdpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="e141a-284">Jest to przydatne, jeśli chcesz móc korzystać z prostoty <xref:System.Net.Sockets.UdpClient> przy użyciu istniejących wcześniej <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="e141a-284">This is useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.UdpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-285">W poniższym przykładzie pokazano użycie <xref:System.Net.Sockets.UdpClient.Client%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e141a-285">The following example demonstrates the use of the <xref:System.Net.Sockets.UdpClient.Client%2A> property.</span></span> <span data-ttu-id="e141a-286">W tym przykładzie emisji jest włączona dla podstawowych <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="e141a-286">In this example, broadcasting is enabled for the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="udpClient.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e141a-287">Zamyka połączenie protokołu UDP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-287">Closes the UDP connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-288"><xref:System.Net.Sockets.UdpClient.Close%2A> Wyłącza bazowego <xref:System.Net.Sockets.Socket> i zwalnia wszystkie zasoby zarządzane i niezarządzane skojarzone z <xref:System.Net.Sockets.UdpClient>.</span><span class="sxs-lookup"><span data-stu-id="e141a-288">The <xref:System.Net.Sockets.UdpClient.Close%2A> disables the underlying <xref:System.Net.Sockets.Socket> and releases all managed and unmanaged resources associated with the <xref:System.Net.Sockets.UdpClient>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-289">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-289">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-290">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-290">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-291">W poniższym przykładzie pokazano zamknięcia <xref:System.Net.Sockets.UdpClient> przez wywołanie metody <xref:System.Net.Sockets.UdpClient.Close%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-291">The following example demonstrates closing a <xref:System.Net.Sockets.UdpClient> by calling the <xref:System.Net.Sockets.UdpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-292">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-292">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e141a-293">Ustanawia domyślnego hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-293">Establishes a default remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (endPoint As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPEndPoint -&gt; unit" Usage="udpClient.Connect endPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="endPoint">
          <span data-ttu-id="e141a-294">
            <see cref="T:System.Net.IPEndPoint" /> , Który określa punkt końcowy sieci, do którego ma zostać wysłany danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-294">An <see cref="T:System.Net.IPEndPoint" /> that specifies the network endpoint to which you intend to send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-295">Ustanawia domyślnego hosta zdalnego przy użyciu punktu końcowego określonej sieci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-295">Establishes a default remote host using the specified network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-296"><xref:System.Net.Sockets.UdpClient.Connect%2A> Metoda ustanawia domyślnego hosta zdalnego przy użyciu wartości określonej w `endPoint` parametru.</span><span class="sxs-lookup"><span data-stu-id="e141a-296">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the value specified in the `endPoint` parameter.</span></span> <span data-ttu-id="e141a-297">Gdy nawiązane, nie należy określić hosta zdalnego w każdym wywołaniu <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-297">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="e141a-298">Ustanowienie domyślnego hosta zdalnego jest opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="e141a-298">Establishing a default remote host is optional.</span></span> <span data-ttu-id="e141a-299">Określenie domyślnego hosta zdalnego ogranicza użytkownika tylko do tego hosta.</span><span class="sxs-lookup"><span data-stu-id="e141a-299">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="e141a-300">Jeśli chcesz do przesyłania datagramów na inny host zdalny, należy innym wywołaniu <xref:System.Net.Sockets.UdpClient.Connect%2A> metody lub utworzyć inny <xref:System.Net.Sockets.UdpClient> bez domyślnego hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="e141a-300">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="e141a-301">Jeśli ustalonymi domyślnego elementu zdalnego hosta, a także podać hosta zdalnego w wywołania do <xref:System.Net.Sockets.UdpClient.Send%2A> metody <xref:System.Net.Sockets.UdpClient.Send%2A> zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e141a-301">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e141a-302">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-302">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-303">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-303">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="e141a-304">Jeśli wywołasz <xref:System.Net.Sockets.Socket.Connect%2A> metody, datagramów i odbierane z adresu innego niż określoną wartość domyślną, zostaną odrzucone.</span><span class="sxs-lookup"><span data-stu-id="e141a-304">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="e141a-305">Nie można ustawić domyślnego hosta zdalnego na adres emisji przy użyciu tej metody, o ile nie dziedziczą z <xref:System.Net.Sockets.UdpClient>, użyj metody klienta do uzyskania bazowej <xref:System.Net.Sockets.Socket>i ustawić opcję gniazda na <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e141a-305">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the Client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e141a-306">Możesz jednak znajduje się w emisji dane do domyślnego emisji adres 255.255.255.255, jeśli określisz <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> w wywołania do <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-306">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="e141a-307">Jeśli aplikacja wymaga większą kontrolę nad adresy emisji, można także powrócić za pomocą <xref:System.Net.Sockets.Socket> klasy.</span><span class="sxs-lookup"><span data-stu-id="e141a-307">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-308">Ponieważ protokół UDP jest przesyłanie, <xref:System.Net.Sockets.UdpClient.Connect%2A> metody nie są blokowane.</span><span class="sxs-lookup"><span data-stu-id="e141a-308">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="e141a-309">Nie wywołuj <xref:System.Net.Sockets.UdpClient.Connect%2A> metody, jeśli chcesz otrzymywać multicasted datagramów.</span><span class="sxs-lookup"><span data-stu-id="e141a-309">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-310">W poniższym przykładzie użyto <xref:System.Net.IPEndPoint> ustanowienie domyślnego hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="e141a-310">The following example uses an <xref:System.Net.IPEndPoint> to establish a default remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-311">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-311">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e141a-312">
            <paramref name="endPoint" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-312">
              <paramref name="endPoint" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-313">
            <see cref="T:System.Net.Sockets.UdpClient" /> Jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-313">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress addr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress addr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (addr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ addr, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.Connect (addr, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addr">
          <span data-ttu-id="e141a-314">
            <see cref="T:System.Net.IPAddress" /> Zdalnego hosta, do którego ma zostać wysłany danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-314">The <see cref="T:System.Net.IPAddress" /> of the remote host to which you intend to send data.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="e141a-315">Numer portu, do którego ma wysyłać dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-315">The port number to which you intend send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-316">Ustanawia domyślnego hosta zdalnego przy użyciu określonego adresu IP adres i numer portu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-316">Establishes a default remote host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-317"><xref:System.Net.Sockets.UdpClient.Connect%2A> Metoda ustanawia domyślnego hosta zdalnego przy użyciu wartości określonej w `addr` i `port` parametrów.</span><span class="sxs-lookup"><span data-stu-id="e141a-317">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `addr` and `port` parameters.</span></span> <span data-ttu-id="e141a-318">Gdy nawiązane, nie należy określić hosta zdalnego w każdym wywołaniu <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-318">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="e141a-319">Ustanowienie domyślnego hosta zdalnego jest opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="e141a-319">Establishing a default remote host is optional.</span></span> <span data-ttu-id="e141a-320">Określenie domyślnego hosta zdalnego ogranicza użytkownika tylko do tego hosta.</span><span class="sxs-lookup"><span data-stu-id="e141a-320">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="e141a-321">Jeśli chcesz do przesyłania datagramów na inny host zdalny, należy innym wywołaniu <xref:System.Net.Sockets.UdpClient.Connect%2A> metody lub utworzyć inny <xref:System.Net.Sockets.UdpClient> bez domyślnego hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="e141a-321">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="e141a-322">Jeśli ustalonymi domyślnego elementu zdalnego hosta, a także podać hosta zdalnego w wywołania do <xref:System.Net.Sockets.UdpClient.Send%2A> metody <xref:System.Net.Sockets.UdpClient.Send%2A> zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e141a-322">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e141a-323">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-323">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-324">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-324">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="e141a-325">Jeśli wywołasz <xref:System.Net.Sockets.Socket.Connect%2A> metody, datagramów i odbierane z adresu innego niż określoną wartość domyślną, zostaną odrzucone.</span><span class="sxs-lookup"><span data-stu-id="e141a-325">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="e141a-326">Nie można ustawić domyślnego hosta zdalnego na adres emisji przy użyciu tej metody, o ile nie dziedziczą z <xref:System.Net.Sockets.UdpClient>, użyj metody klienta do uzyskania bazowej <xref:System.Net.Sockets.Socket>i ustawić opcję gniazda na <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e141a-326">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e141a-327">Możesz jednak znajduje się w emisji dane do domyślnego emisji adres 255.255.255.255, jeśli określisz <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> w wywołania do <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-327">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="e141a-328">Jeśli aplikacja wymaga większą kontrolę nad adresy emisji, można także powrócić za pomocą <xref:System.Net.Sockets.Socket> klasy.</span><span class="sxs-lookup"><span data-stu-id="e141a-328">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-329">Ponieważ protokół UDP jest przesyłanie, <xref:System.Net.Sockets.UdpClient.Connect%2A> metody nie są blokowane.</span><span class="sxs-lookup"><span data-stu-id="e141a-329">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="e141a-330">Nie wywołuj <xref:System.Net.Sockets.UdpClient.Connect%2A> metody, jeśli chcesz otrzymywać multicasted datagramów.</span><span class="sxs-lookup"><span data-stu-id="e141a-330">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-331">W poniższym przykładzie użyto IP adres i numer portu do połączenia z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="e141a-331">The following example uses an IP address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-332">
            <see cref="T:System.Net.Sockets.UdpClient" /> wystąpienie jest zamykane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-332">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e141a-333">
            <paramref name="addr" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-333">
              <paramref name="addr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e141a-334">
            <paramref name="port" /> nie przypada między <see cref="F:System.Net.IPEndPoint.MinPort" /> i <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-334">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-335">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-335">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="udpClient.Connect (hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="e141a-336">Nazwa DNS hosta zdalnego, z którym zamierzasz wysłać dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-336">The DNS name of the remote host to which you intend send data.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="e141a-337">Numer portu na hoście zdalnym, do którego ma zostać wysłany danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-337">The port number on the remote host to which you intend to send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-338">Ustanawia domyślnego hosta zdalnego, korzystając z określonego hosta, nazwę i numer portu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-338">Establishes a default remote host using the specified host name and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-339"><xref:System.Net.Sockets.UdpClient.Connect%2A> Metoda ustanawia domyślnego hosta zdalnego przy użyciu wartości określonej w `port` i `hostname` parametrów.</span><span class="sxs-lookup"><span data-stu-id="e141a-339">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `port` and `hostname` parameters.</span></span> <span data-ttu-id="e141a-340">Gdy nawiązane, nie należy określić hosta zdalnego w każdym wywołaniu <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-340">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="e141a-341">Ustanowienie domyślnego hosta zdalnego jest opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="e141a-341">Establishing a default remote host is optional.</span></span> <span data-ttu-id="e141a-342">Określenie domyślnego hosta zdalnego ogranicza użytkownika tylko do tego hosta.</span><span class="sxs-lookup"><span data-stu-id="e141a-342">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="e141a-343">Jeśli chcesz do przesyłania datagramów na inny host zdalny, należy innym wywołaniu <xref:System.Net.Sockets.UdpClient.Connect%2A> metody lub utworzyć inny <xref:System.Net.Sockets.UdpClient> bez domyślnego hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="e141a-343">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span>  
  
 <span data-ttu-id="e141a-344">Jeśli ustalonymi domyślnego elementu zdalnego hosta, a także podać hosta zdalnego w wywołania do <xref:System.Net.Sockets.UdpClient.Send%2A> metody <xref:System.Net.Sockets.UdpClient.Send%2A> zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e141a-344">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e141a-345">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-345">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-346">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-346">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="e141a-347">Jeśli wywołasz <xref:System.Net.Sockets.Socket.Connect%2A> metody, datagramów i odbierane z adresu innego niż określoną wartość domyślną, zostaną odrzucone.</span><span class="sxs-lookup"><span data-stu-id="e141a-347">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="e141a-348">Nie można ustawić domyślnego hosta zdalnego na adres emisji przy użyciu tej metody, o ile nie dziedziczą z <xref:System.Net.Sockets.UdpClient>, użyj metody klienta do uzyskania bazowej <xref:System.Net.Sockets.Socket>i ustawić opcję gniazda na <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e141a-348">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e141a-349">Możesz jednak znajduje się w emisji dane do domyślnego emisji adres 255.255.255.255, jeśli określisz <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> w wywołania do <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-349">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="e141a-350">Jeśli aplikacja wymaga większą kontrolę nad adresy emisji, można także powrócić za pomocą <xref:System.Net.Sockets.Socket> klasy.</span><span class="sxs-lookup"><span data-stu-id="e141a-350">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-351">Ponieważ protokół UDP jest przesyłanie, <xref:System.Net.Sockets.UdpClient.Connect%2A> metody nie są blokowane.</span><span class="sxs-lookup"><span data-stu-id="e141a-351">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="e141a-352">Nie wywołuj <xref:System.Net.Sockets.UdpClient.Connect%2A> metody, jeśli chcesz otrzymywać multicasted datagramów.</span><span class="sxs-lookup"><span data-stu-id="e141a-352">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-353">Następujące przykład zastosowania nazwy hosta i numer portu do połączenia z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="e141a-353">The following example uses the host name and port number to connect to a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-354">
            <see cref="T:System.Net.Sockets.UdpClient" /> Jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-354">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e141a-355">
            <paramref name="port" /> nie przypada między <see cref="F:System.Net.IPEndPoint.MinPort" /> i <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-355">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-356">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-356">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e141a-357">Zwalnia zasoby zarządzane i niezarządzane używane przez <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-357">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="udpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="e141a-358">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-358">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-359">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Net.Sockets.UdpClient" /> i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-359">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-360">Ta metoda jest wywoływana przez publiczną `Dispose()` metody i <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-360">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="e141a-361">`Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="e141a-361">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="e141a-362"><xref:System.Object.Finalize%2A> wywołuje `Dispose` z `disposing` równa `false`.</span><span class="sxs-lookup"><span data-stu-id="e141a-362"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="e141a-363">Gdy `disposing` parametr ma wartość true, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane że <xref:System.Net.Sockets.UdpClient> odwołania.</span><span class="sxs-lookup"><span data-stu-id="e141a-363">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.UdpClient> references.</span></span> <span data-ttu-id="e141a-364">Ta metoda wywołuje `Dispose()` metoda każdego obiektu, do którego istnieje odwołanie.</span><span class="sxs-lookup"><span data-stu-id="e141a-364">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e141a-365">
            <para>
              <see langword="Dispose" /> może być wywoływana wiele razy przez inne obiekty. Podczas zastępowania <see langword="Dispose(Boolean)" /> Uważaj, aby nie odwołują się do obiektów, które zostały wcześniej zlikwidowane wcześniejszym wywołaniem do <see langword="Dispose" />. Aby uzyskać więcej informacji o sposobie wdrażania <see langword="Dispose(Boolean)" />, zobacz [Implementowanie Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [czyszczenia Resources](~/docs/standard/garbage-collection/unmanaged.md) niezarządzanych i [Overriding the Finalize Method] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-365">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.DontFragment" />
      <MemberSignature Language="VB.NET" Value="Public Property DontFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DontFragment { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DontFragment : bool with get, set" Usage="System.Net.Sockets.UdpClient.DontFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e141a-366">Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość określająca, czy <see cref="T:System.Net.Sockets.UdpClient" /> umożliwia datagramów protokołu internetowego (IP) do fragmentacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-366">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows Internet Protocol (IP) datagrams to be fragmented.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e141a-367">
            <see langword="true" /> Jeśli <see cref="T:System.Net.Sockets.UdpClient" /> umożliwia fragmentacji datagram; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-367">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows datagram fragmentation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e141a-368">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-368">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-369">Datagramy wymaga fragmentacji, gdy ich rozmiar przekracza maksymalny transferu jednostki (MTU) nośnika transmisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-369">Datagrams require fragmentation when their size exceeds the Maximum Transfer Unit (MTU) of the transmission medium.</span></span> <span data-ttu-id="e141a-370">Datagramy może fragmentacji przez hosta wysyłającego lub router pośrednich.</span><span class="sxs-lookup"><span data-stu-id="e141a-370">Datagrams may be fragmented by the sending host or by an intermediate router.</span></span> <span data-ttu-id="e141a-371">Jeśli datagram musi fragmentacji i <xref:System.Net.Sockets.Socket.DontFragment%2A> opcja jest ustawiona, datagram jest odrzucana i komunikat o błędzie kontroli komunikat ICMP (Internet Protocol) są wysyłane do nadawcy datagram.</span><span class="sxs-lookup"><span data-stu-id="e141a-371">If a datagram must be fragmented, and the <xref:System.Net.Sockets.Socket.DontFragment%2A> option is set, the datagram is discarded, and an Internet Control Message Protocol (ICMP) error message is sent back to the sender of the datagram.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-372">Poniższy przykład kodu pokazuje użycie <xref:System.Net.Sockets.Socket.DontFragment%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e141a-372">The following code example shows the use of the <xref:System.Net.Sockets.Socket.DontFragment%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e141a-373">Tę właściwość można ustawić tylko dla gniazda, które używają <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flagi lub <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flagi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-373">This property can be set only for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DropMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e141a-374">Pozostawia grupę multiemisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-374">Leaves a multicast group.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.DropMulticastGroup : System.Net.IPAddress -&gt; unit" Usage="udpClient.DropMulticastGroup multicastAddr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="e141a-375">
            <see cref="T:System.Net.IPAddress" /> Grupy multiemisji, aby wyjść.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-375">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-376">Pozostawia grupę multiemisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-376">Leaves a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-377"><xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> Wycofa metoda <xref:System.Net.Sockets.UdpClient> z grupy multiemisji identyfikowane za pomocą określonego <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="e141a-377">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="e141a-378">Po wywołaniu <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> metodzie bazowej <xref:System.Net.Sockets.Socket> wysyła pakiet zarządzania protokołu IGMP (Internet Group) z routerem, usuwając router z grupy multiemisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-378">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="e141a-379">Po <xref:System.Net.Sockets.UdpClient> wycofuje się z grupy, nie jest już będzie mogła odbierać datagramów wysyłanych do tej grupy.</span><span class="sxs-lookup"><span data-stu-id="e141a-379">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-380">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-380">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-381">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-381">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-382">Poniższy przykład pokazuje, jak można usunąć grupy multiemisji, podając adres multiemisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-382">The following example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-383">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> zostało zamknięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-383">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-384">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-384">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e141a-385">Adres IP nie jest zgodny z <see cref="T:System.Net.Sockets.AddressFamily" /> wartość, która definiuje schemat adresowania gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-385">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e141a-386">
            <paramref name="multicastAddr" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-386">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr, int ifindex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr, int32 ifindex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress, ifindex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr, int ifindex);" />
      <MemberSignature Language="F#" Value="member this.DropMulticastGroup : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.DropMulticastGroup (multicastAddr, ifindex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="ifindex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="e141a-387">
            <see cref="T:System.Net.IPAddress" /> Grupy multiemisji, aby wyjść.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-387">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span>
          </span>
        </param>
        <param name="ifindex">
          <span data-ttu-id="e141a-388">Lokalny adres grupy multiemisji, aby wyjść.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-388">The local address of the multicast group to leave.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-389">Pozostawia grupę multiemisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-389">Leaves a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-390"><xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> Wycofa metoda <xref:System.Net.Sockets.UdpClient> z grupy multiemisji identyfikowane za pomocą określonego <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="e141a-390">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="e141a-391">Po wywołaniu <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> metodzie bazowej <xref:System.Net.Sockets.Socket> wysyła pakiet zarządzania protokołu IGMP (Internet Group) z routerem, usuwając router z grupy multiemisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-391">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="e141a-392">Po <xref:System.Net.Sockets.UdpClient> wycofuje się z grupy, nie jest już będzie mogła odbierać datagramów wysyłanych do tej grupy.</span><span class="sxs-lookup"><span data-stu-id="e141a-392">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-393">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> właściwości, aby uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-393">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="e141a-394">Po uzyskaniu ten kod może dotyczyć Windows Sockets w wersji 2 dokumentacji interfejsu API błąd kodu w bibliotece MSDN szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-394">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-395">Poniższy przykład kodu pokazuje, jak można usunąć grupy multiemisji, podając adres multiemisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-395">The following code example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-396">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> zostało zamknięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-396">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-397">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-397">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e141a-398">Adres IP nie jest zgodny z <see cref="T:System.Net.Sockets.AddressFamily" /> wartość, która definiuje schemat adresowania gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-398">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e141a-399">
            <paramref name="multicastAddr" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-399">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="EnableBroadcast">
      <MemberSignature Language="C#" Value="public bool EnableBroadcast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableBroadcast" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.EnableBroadcast" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableBroadcast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableBroadcast { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableBroadcast : bool with get, set" Usage="System.Net.Sockets.UdpClient.EnableBroadcast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e141a-400">Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość określająca, czy <see cref="T:System.Net.Sockets.UdpClient" /> może wysyłania lub odbierania pakietów emisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-400">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> may send or receive broadcast packets.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e141a-401">
            <see langword="true" /> Jeśli <see cref="T:System.Net.Sockets.UdpClient" /> umożliwia pakietów emisji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-401">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows broadcast packets; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e141a-402">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-402">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-403">Emisja jest ograniczona do określonej podsieci.</span><span class="sxs-lookup"><span data-stu-id="e141a-403">Broadcasting is limited to a specific subnet.</span></span> <span data-ttu-id="e141a-404">Emisja na do podsieci lokalnej, wysyłając pakiet do 255.255.255.255; Ewentualnie można użyć adres ukierunkowanej emisji, czyli części sieci adres protokołu internetowego (IP) z wszystkie bity w części hosta.</span><span class="sxs-lookup"><span data-stu-id="e141a-404">You can broadcast to your local subnet by sending a packet to 255.255.255.255; or, you can use the directed broadcast address, which is the network portion of an Internet Protocol (IP) address with all bits set in the host portion.</span></span> <span data-ttu-id="e141a-405">Na przykład jeśli adres IP jest 192.168.1.40 (adresu klasy C z części sieciowej jako pierwsze trzy oktety i część hosta jest ostatni oktet), adres ukierunkowanej emisji jest 192.168.1.255.</span><span class="sxs-lookup"><span data-stu-id="e141a-405">For example, if your IP address is 192.168.1.40 (a Class C address, with the network portion as the first three octets, and the host portion is the last octet), your directed broadcast address is 192.168.1.255.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-406">Poniższy przykład kodu pokazuje użycie <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e141a-406">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public byte[] EndReceive (IAsyncResult asyncResult, ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EndReceive(class System.IAsyncResult asyncResult, class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult, ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EndReceive(IAsyncResult ^ asyncResult, System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.EndReceive : IAsyncResult *  -&gt; byte[]" Usage="udpClient.EndReceive (asyncResult, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="e141a-407">
            <see cref="T:System.IAsyncResult" /> Obiektu zwróconego przez wywołanie <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-407">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="e141a-408">Określonego zdalnego punktu końcowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-408">The specified remote endpoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-409">Kończy się oczekiwanie asynchroniczne odbierania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-409">Ends a pending asynchronous receive.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e141a-410">Jeśli to się powiedzie, tablicę bajtów, która zawiera dane datagram.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-410">If successful, an array of bytes that contains datagram data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-411">Wykonaj to bloki metody do czasu tej operacji.</span><span class="sxs-lookup"><span data-stu-id="e141a-411">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="e141a-412">Aby wykonać tę operację synchronicznie, należy użyć <xref:System.Net.Sockets.UdpClient.Receive%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-412">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-413">Poniższy przykład kodu wykorzystuje <xref:System.Net.Sockets.UdpClient.BeginSend%2A> do ukończenia asynchronicznego odbioru odpowiedź z serwera.</span><span class="sxs-lookup"><span data-stu-id="e141a-413">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous receive of a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e141a-414">
            <paramref name="asyncResult" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-414">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e141a-415">
            <paramref name="asyncResult" /> nie została zwrócona przez wywołanie <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-415">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e141a-416">
            <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> był wcześniej nazywany programem do asynchronicznego odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-416">
              <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-417">Wystąpił błąd podczas próby dostępu do podstawowych <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-417">An error occurred when attempting to access the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-418">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> zostało zamknięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-418">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public int EndSend (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSend(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSend (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSend(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSend : IAsyncResult -&gt; int" Usage="udpClient.EndSend asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="e141a-419">
            <see cref="T:System.IAsyncResult" /> Obiektu zwróconego przez wywołanie <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-419">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-420">Kończy się oczekujące asynchronicznego wysyłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-420">Ends a pending asynchronous send.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e141a-421">Jeśli operacja się powiedzie, liczba bajtów wysłanych do <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-421">If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-422">Wykonaj to bloki metody do czasu tej operacji.</span><span class="sxs-lookup"><span data-stu-id="e141a-422">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="e141a-423">Aby wykonać tę operację synchronicznie, należy użyć <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-423">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-424">Poniższy przykład kodu wykorzystuje <xref:System.Net.Sockets.UdpClient.BeginSend%2A> do ukończenia asynchronicznego wysyłania żądania serwera.</span><span class="sxs-lookup"><span data-stu-id="e141a-424">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous send of a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e141a-425">
            <paramref name="asyncResult" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-425">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e141a-426">
            <paramref name="asyncResult" /> nie została zwrócona przez wywołanie <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-426">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e141a-427">
            <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> był wcześniej nazywany programem do asynchronicznego odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-427">
              <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-428">Wystąpił błąd podczas próby uzyskania dostępu bazowego gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-428">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-429">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> zostało zamknięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-429">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.UdpClient.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e141a-430">Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość określająca, czy <see cref="T:System.Net.Sockets.UdpClient" /> umożliwia korzystanie z portu tylko jednego klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-430">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e141a-431">
            <see langword="true" /> Jeśli <see cref="T:System.Net.Sockets.UdpClient" /> umożliwia tylko jednego klienta do używania konkretnego portu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-431">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e141a-432">Wartość domyślna to <see langword="true" /> dla systemu Windows Server 2003 i Windows XP z dodatkiem Service Pack 2 lub nowszą wersją, a <see langword="false" /> dla wszystkich innych wersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-432">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-433">Domyślnie wielu klientów można użyć określonego portu; jednak tylko jeden z klientów mogą wykonywać operacje na ruch sieciowy, wysyłane do portu.</span><span class="sxs-lookup"><span data-stu-id="e141a-433">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="e141a-434">Możesz użyć <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> właściwości, aby uniemożliwić wielu klientów korzysta z określonego portu.</span><span class="sxs-lookup"><span data-stu-id="e141a-434">You can use the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="e141a-435">Przed podstawowej gniazda jest powiązany z portem klienta, należy ustawić tę właściwość.</span><span class="sxs-lookup"><span data-stu-id="e141a-435">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="e141a-436">Jeśli wywołasz <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, lub <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, port klienta jest powiązany jako efekt uboczny konstruktora, a następnie nie można ustawić <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> właściwości</span><span class="sxs-lookup"><span data-stu-id="e141a-436">If you call <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, the client port is bound as a side effect of the constructor, and you cannot subsequently set the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-437">Poniższy przykład kodu tworzy <xref:System.Net.Sockets.UdpClient>i pobiera i ustawia <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e141a-437">The following code example creates a <xref:System.Net.Sockets.UdpClient>, and gets and sets the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-438">Wystąpił błąd podczas próby uzyskania dostępu bazowego gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-438">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-439">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> zostało zamknięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-439">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!UdpClient ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="udpClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="JoinMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e141a-440">Dodaje <see cref="T:System.Net.Sockets.UdpClient" /> do grupy multiemisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-440">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup multicastAddr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="e141a-441">Multiemisji <see cref="T:System.Net.IPAddress" /> grupy, którą chcesz przyłączyć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-441">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-442">Dodaje <see cref="T:System.Net.Sockets.UdpClient" /> do grupy multiemisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-442">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-443"><xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> Metoda subskrybuje <xref:System.Net.Sockets.UdpClient> do grupy multiemisji przy użyciu określonego <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="e141a-443">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="e141a-444">Po wywołaniu <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> metodzie bazowej <xref:System.Net.Sockets.Socket> wysyła pakiet zarządzania protokołu IGMP (Internet Group) do routera żądającego członkostwa grupy multiemisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-444">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="e141a-445">Zakres adresów multiemisji został od 224.0.0.0 do 239.255.255.255.</span><span class="sxs-lookup"><span data-stu-id="e141a-445">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="e141a-446">Jeśli określisz adres poza tym zakresem lub jeśli routera, do której żądania nie jest multiemisji włączone, <xref:System.Net.Sockets.UdpClient> zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e141a-446">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e141a-447">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-447">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-448">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-448">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span> <span data-ttu-id="e141a-449">Gdy <xref:System.Net.Sockets.UdpClient> znajduje się na liście z routerem, który jest członkiem grupy multiemisji, będą mogli otrzymywać kierowany datagramy wysyłane do określonego <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="e141a-449">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-450">Należy utworzyć <xref:System.Net.Sockets.UdpClient> za pomocą numeru portu multiemisji; w przeciwnym razie nie będzie mogła odbierać datagramy kierowany.</span><span class="sxs-lookup"><span data-stu-id="e141a-450">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number; otherwise, you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="e141a-451">Nie wywołuj <xref:System.Net.Sockets.UdpClient.Connect%2A> metoda przed wywołaniem <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> metody lub <xref:System.Net.Sockets.UdpClient.Receive%2A> metoda nie będzie działać.</span><span class="sxs-lookup"><span data-stu-id="e141a-451">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, or the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will not work.</span></span> <span data-ttu-id="e141a-452">Nie trzeba należeć do grupy multiemisji do przesyłania datagramów na adres IP multiemisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-452">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="e141a-453">Przed dołączeniem do grupy multiemisji, upewnij się, że gniazdo jest powiązany z portem lub punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="e141a-453">Before joining a multicast group, make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="e141a-454">Można to zrobić, wywołując jedną z konstruktorów, które akceptuje portu lub punkt końcowy jako parametr.</span><span class="sxs-lookup"><span data-stu-id="e141a-454">You do that by calling one of the constructors that accept a port or an endpoint as a parameter.</span></span>  
  
 <span data-ttu-id="e141a-455">Aby zrezygnować z otrzymywania datagramy multicasted, należy wywołać <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> metody i podaj <xref:System.Net.IPAddress> grupy, z którego chcesz wycofać.</span><span class="sxs-lookup"><span data-stu-id="e141a-455">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-456">W przypadku protokołu IPv6 istnieje kilka zakresów adresów multiemisji, których mogą wybierać.</span><span class="sxs-lookup"><span data-stu-id="e141a-456">In the IPv6 case, there are several multicast address ranges you can choose from.</span></span> <span data-ttu-id="e141a-457">Zapoznaj się IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="e141a-457">Please, refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-458">Nie można wywołać <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> na <xref:System.Net.Sockets.UdpClient> skonstruowany bez określonych portów lokalnych (czyli używania <xref:System.Net.Sockets.UdpClient.%23ctor> lub <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> konstruktora).</span><span class="sxs-lookup"><span data-stu-id="e141a-458">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-459">Poniższy przykład kodu demonstruje sposób dołączenia do grupy multiemisji, podając adres multiemisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-459">The following code example demonstrates how to join a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#1)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-460">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> zostało zamknięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-460">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-461">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-461">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e141a-462">Adres IP nie jest zgodny z <see cref="T:System.Net.Sockets.AddressFamily" /> wartość, która definiuje schemat adresowania gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-462">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (int ifindex, System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(int32 ifindex, class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (ifindex As Integer, multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(int ifindex, System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : int * System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup (ifindex, multicastAddr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifindex" Type="System.Int32" />
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="ifindex">
          <span data-ttu-id="e141a-463">Indeks interfejsu skojarzony z lokalny adres IP, na którym należy dołączyć do grupy multiemisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-463">The interface index associated with the local IP address on which to join the multicast group.</span>
          </span>
        </param>
        <param name="multicastAddr">
          <span data-ttu-id="e141a-464">Multiemisji <see cref="T:System.Net.IPAddress" /> grupy, którą chcesz przyłączyć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-464">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-465">Dodaje <see cref="T:System.Net.Sockets.UdpClient" /> do grupy multiemisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-465">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-466">Przed dołączeniem do grupy multiemisji, upewnij się, że gniazdo jest powiązany z portem lub punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="e141a-466">Before joining a multicast group, be sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="e141a-467">Można to zrobić, wywołując jedną z konstruktorów, które akceptuje portu lub punkt końcowy jako parametr.</span><span class="sxs-lookup"><span data-stu-id="e141a-467">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
 <span data-ttu-id="e141a-468">`infindex` Parametr jest używany do identyfikowania interfejsu sprzętu, tego samego łącza.</span><span class="sxs-lookup"><span data-stu-id="e141a-468">The `infindex` parameter is used to identify a hardware interface on the same link.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-469">Istnieje kilka zakresów adresów multiemisji do wyboru.</span><span class="sxs-lookup"><span data-stu-id="e141a-469">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="e141a-470">Zapoznaj się z IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="e141a-470">Refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-471">Nie można wywołać <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> na <xref:System.Net.Sockets.UdpClient> skonstruowany bez określonych portów lokalnych (czyli używania <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> lub <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> konstruktora).</span><span class="sxs-lookup"><span data-stu-id="e141a-471">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> constructor).</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#5)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-472">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> zostało zamknięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-472">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-473">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-473">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, int timeToLive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, int32 timeToLive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, timeToLive As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, int timeToLive);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.JoinMulticastGroup (multicastAddr, timeToLive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="timeToLive" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="e141a-474">
            <see cref="T:System.Net.IPAddress" /> Grupy multiemisji do przyłączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-474">The <see cref="T:System.Net.IPAddress" /> of the multicast group to join.</span>
          </span>
        </param>
        <param name="timeToLive">
          <span data-ttu-id="e141a-475">Czas wygaśnięcia (TTL), mierzone w przeskoków między routerami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-475">The Time to Live (TTL), measured in router hops.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-476">Dodaje <see cref="T:System.Net.Sockets.UdpClient" /> do grupy multiemisji z określonym czasem wygaśnięcia (TTL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-476">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group with the specified Time to Live (TTL).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-477"><xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> Metoda subskrybuje <xref:System.Net.Sockets.UdpClient> do grupy multiemisji przy użyciu określonego <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="e141a-477">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="e141a-478">Po wywołaniu <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> metodzie bazowej <xref:System.Net.Sockets.Socket> wysyła pakiet zarządzania protokołu IGMP (Internet Group) do routera żądającego członkostwa grupy multiemisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-478">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="e141a-479">Zakres adresów multiemisji został od 224.0.0.0 do 239.255.255.255.</span><span class="sxs-lookup"><span data-stu-id="e141a-479">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="e141a-480">Jeśli określisz adres poza tym zakresem lub jeśli routera, do której żądania nie jest multiemisji włączone, <xref:System.Net.Sockets.UdpClient> zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e141a-480">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e141a-481">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-481">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-482">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-482">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span> <span data-ttu-id="e141a-483">`timeToLive` Parametr określa liczbę przeskoków między routerami może być dla datagramu, zanim zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="e141a-483">The `timeToLive` parameter specifies how many router hops will be allowed for a multicasted datagram before being discarded.</span></span> <span data-ttu-id="e141a-484">Gdy <xref:System.Net.Sockets.UdpClient> znajduje się na liście z routerem, który jest członkiem grupy multiemisji, będą mogli otrzymywać kierowany datagramy wysyłane do określonego <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="e141a-484">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-485">Należy utworzyć <xref:System.Net.Sockets.UdpClient> za pomocą numeru portu multiemisji w przeciwnym razie nie będzie mogła odbierać datagramy kierowany.</span><span class="sxs-lookup"><span data-stu-id="e141a-485">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number otherwise you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="e141a-486">Nie wywołuj <xref:System.Net.Sockets.UdpClient.Connect%2A> metoda przed wywołaniem <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> metodę lub metodę odbioru nie będzie działać.</span><span class="sxs-lookup"><span data-stu-id="e141a-486">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method or the receive method will not work.</span></span> <span data-ttu-id="e141a-487">Nie trzeba należeć do grupy multiemisji do przesyłania datagramów na adres IP multiemisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-487">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="e141a-488">Przed dołączeniem do grupy multiemisji upewnij się, że gniazdo jest powiązany z portem lub punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="e141a-488">Before joining a multicast group make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="e141a-489">Można to zrobić, wywołując jedną konstruktory, które akceptują parametr, portu lub punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="e141a-489">You do that by calling one of the constructors that accept as parameter a port or an endpoint.</span></span>  
  
 <span data-ttu-id="e141a-490">Aby zrezygnować z otrzymywania datagramy multicasted, należy wywołać <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> metody i podaj <xref:System.Net.IPAddress> grupy, z którego chcesz wycofać.</span><span class="sxs-lookup"><span data-stu-id="e141a-490">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-491">Nie można wywołać <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> na <xref:System.Net.Sockets.UdpClient> skonstruowany bez określonych portów lokalnych (czyli używania <xref:System.Net.Sockets.UdpClient.%23ctor> lub <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> konstruktora).</span><span class="sxs-lookup"><span data-stu-id="e141a-491">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-492">Poniższy przykład przedstawia sposób dołączenia do grupy multiemisji, zapewniając dwóch parametrów adresu multiemisji i numer, który reprezentuje czas wygaśnięcia.</span><span class="sxs-lookup"><span data-stu-id="e141a-492">The following example demonstrates how to join a multicast group by providing two parameters, a multicast address, and a number that represents the TTL.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e141a-493">Podany czas wygaśnięcia nie jest pomiędzy 0 a 255</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-493">The TTL provided is not between 0 and 255</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-494">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> zostało zamknięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-494">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-495">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-495">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e141a-496">
            <paramref name="multicastAddr" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-496">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e141a-497">Adres IP nie jest zgodny z <see cref="T:System.Net.Sockets.AddressFamily" /> wartość, która definiuje schemat adresowania gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-497">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, System.Net.IPAddress localAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, class System.Net.IPAddress localAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, localAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, System::Net::IPAddress ^ localAddress);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress * System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup (multicastAddr, localAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="localAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="e141a-498">Multiemisji <see cref="T:System.Net.IPAddress" /> grupy, którą chcesz przyłączyć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-498">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <param name="localAddress">
          <span data-ttu-id="e141a-499">Lokalny <see cref="T:System.Net.IPAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-499">The local <see cref="T:System.Net.IPAddress" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-500">Dodaje <see cref="T:System.Net.Sockets.UdpClient" /> do grupy multiemisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-500">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-501">Przed można dołączyć do grupy multiemisji, należy pamiętać, że gniazdo jest powiązany z portu lub punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="e141a-501">Before you join a multicast group, be sure that the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="e141a-502">Można to zrobić, wywołując jedną z konstruktorów, które akceptuje portu lub punkt końcowy jako parametr.</span><span class="sxs-lookup"><span data-stu-id="e141a-502">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-503">Istnieje kilka zakresów adresów multiemisji do wyboru.</span><span class="sxs-lookup"><span data-stu-id="e141a-503">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="e141a-504">Można je znaleźć w IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="e141a-504">You can find them in the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-505">Nie można wywołać <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> na <xref:System.Net.Sockets.UdpClient> skonstruowany bez określonych portów lokalnych (czyli używania <xref:System.Net.Sockets.UdpClient.%23ctor> lub <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> konstruktora).</span><span class="sxs-lookup"><span data-stu-id="e141a-505">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-506">Poniższy przykład kodu pokazuje użycie <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-506">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.UdpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-507">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> zostało zamknięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-507">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-508">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-508">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastLoopback : bool with get, set" Usage="System.Net.Sockets.UdpClient.MulticastLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e141a-509">Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość, która określa, czy wychodzących pakietów multiemisji są dostarczane do aplikacji wysyłającej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-509">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether outgoing multicast packets are delivered to the sending application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e141a-510">
            <see langword="true" /> Jeśli <see cref="T:System.Net.Sockets.UdpClient" /> odbiera wychodzących pakietów multiemisji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-510">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> receives outgoing multicast packets; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-511">Multiemisja to metoda skalowalne komunikacji wiele do wielu w Internecie.</span><span class="sxs-lookup"><span data-stu-id="e141a-511">Multicast is a scalable method for many-to-many communication on the Internet.</span></span> <span data-ttu-id="e141a-512">Jeśli proces subskrybuje adresu multiemisji, wszystkie pakiety wysyłane przez jaką proces są odbierane przez każdy proces, który ma adres multiemisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-512">If a process subscribes to a multicast address, any packets sent by that process are received by every other process that has subscribed to the multicast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-513">Poniższy przykład kodu pokazuje użycie <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e141a-513">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.UdpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public byte[] Receive (ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Receive(class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Receive(System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Receive :  -&gt; byte[]" Usage="udpClient.Receive remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="e141a-514">
            <see cref="T:System.Net.IPEndPoint" /> Reprezentujący hosta zdalnego, z którego wysłano danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-514">An <see cref="T:System.Net.IPEndPoint" /> that represents the remote host from which the data was sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-515">Zwraca datagram UDP, który został wysłany przez hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-515">Returns a UDP datagram that was sent by a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e141a-516">Tablica typu <see cref="T:System.Byte" /> zawierającego datagram danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-516">An array of type <see cref="T:System.Byte" /> that contains datagram data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-517"><xref:System.Net.Sockets.UdpClient.Receive%2A> Metoda zablokuje aż datagram dociera z hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="e141a-517">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method will block until a datagram arrives from a remote host.</span></span> <span data-ttu-id="e141a-518">Jeśli dane są dostępne, <xref:System.Net.Sockets.UdpClient.Receive%2A> metoda odczytuje pierwszy datagram umieszczonych w kolejce i zwraca część danych w postaci tablicy bajtów.</span><span class="sxs-lookup"><span data-stu-id="e141a-518">When data is available, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will read the first enqueued datagram and return the data portion as a byte array.</span></span> <span data-ttu-id="e141a-519">Ta metoda wypełni `remoteEP` parametrem <xref:System.Net.IPAddress> i numer portu nadawcy.</span><span class="sxs-lookup"><span data-stu-id="e141a-519">This method populates the `remoteEP` parameter with the <xref:System.Net.IPAddress> and port number of the sender.</span></span>  
  
 <span data-ttu-id="e141a-520">W przypadku określenia domyślnego hosta zdalnego w <xref:System.Net.Sockets.UdpClient.Connect%2A> metody <xref:System.Net.Sockets.UdpClient.Receive%2A> metoda będzie akceptować datagramy z tylko tego hosta.</span><span class="sxs-lookup"><span data-stu-id="e141a-520">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will accept datagrams from that host only.</span></span> <span data-ttu-id="e141a-521">Wszystkie inne datagramy zostaną odrzucone.</span><span class="sxs-lookup"><span data-stu-id="e141a-521">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="e141a-522">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-522">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-523">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-523">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-524">Jeśli zamierzasz odbierają datagramy multicasted Nie wywołuj <xref:System.Net.Sockets.UdpClient.Connect%2A> metoda przed wywołaniem <xref:System.Net.Sockets.UdpClient.Receive%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-524">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="e141a-525"><xref:System.Net.Sockets.UdpClient> Używane do odbierania datagramy musi zostać utworzona za pomocą numeru portu multiemisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-525">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-526">W poniższym przykładzie pokazano <xref:System.Net.Sockets.UdpClient.Receive%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-526">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="e141a-527"><xref:System.Net.Sockets.UdpClient.Receive%2A> Metoda blokuje wykonywanie, dopóki nie odbierze komunikatu.</span><span class="sxs-lookup"><span data-stu-id="e141a-527">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until it receives a message.</span></span> <span data-ttu-id="e141a-528">Za pomocą <xref:System.Net.IPEndPoint> przekazany do <xref:System.Net.Sockets.UdpClient.Receive%2A>, tożsamość odpowiadający host jest ujawniona.</span><span class="sxs-lookup"><span data-stu-id="e141a-528">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-529">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> zostało zamknięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-529">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-530">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-530">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.IPAddress" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;valuetype System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.ReceiveAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveAsync () As Task(Of UdpReceiveResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::UdpReceiveResult&gt; ^ ReceiveAsync();" />
      <MemberSignature Language="F#" Value="member this.ReceiveAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt;" Usage="udpClient.ReceiveAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e141a-531">Zwraca datagram UDP asynchronicznie przesłanym przez hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-531">Returns a UDP datagram asynchronously that was sent by a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e141a-532">Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-532">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="e141a-533">Obiekt zadania reprezentujący operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-533">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-534">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="e141a-534">This operation will not block.</span></span> <span data-ttu-id="e141a-535">Zwrócony <xref:System.Threading.Tasks.Task%601>> obiekt zostanie ukończone po otrzymaniu pakietów UDP.</span><span class="sxs-lookup"><span data-stu-id="e141a-535">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the UDP packet has been received.</span></span>  
  
 <span data-ttu-id="e141a-536">W przypadku określenia domyślnego hosta zdalnego w <xref:System.Net.Sockets.UdpClient.Connect%2A> metody, Metoda ta będzie akceptować datagramy z tylko tego hosta.</span><span class="sxs-lookup"><span data-stu-id="e141a-536">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, this method will accept datagrams from that host only.</span></span> <span data-ttu-id="e141a-537">Wszystkie inne datagramy zostaną odrzucone.</span><span class="sxs-lookup"><span data-stu-id="e141a-537">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="e141a-538">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-538">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-539">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-539">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="e141a-540">Jeśli zamierzasz odbierają datagramy multicasted Nie wywołuj <xref:System.Net.Sockets.UdpClient.Connect%2A> metoda przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-540">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling this method.</span></span> <span data-ttu-id="e141a-541"><xref:System.Net.Sockets.UdpClient> Używane do odbierania datagramy musi zostać utworzona za pomocą numeru portu multiemisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-541">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-542">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> zostało zamknięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-542">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-543">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-543">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e141a-544">Przesyła UDP datagram do hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-544">Sends a UDP datagram to a remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int -&gt; int" Usage="udpClient.Send (dgram, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="e141a-545">Tablica typu <see cref="T:System.Byte" /> określająca datagram UDP, który ma zostać wysłany w postaci tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-545">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="e141a-546">Liczba bajtów w datagramie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-546">The number of bytes in the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-547">Przesyła UDP datagram do hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-547">Sends a UDP datagram to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e141a-548">Liczba wysłanych bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-548">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-549">To przeciążenie datagramu z hostem zdalnym z tym <xref:System.Net.Sockets.UdpClient.Connect%2A> metodę i zwraca liczba bajtów wysłanych.</span><span class="sxs-lookup"><span data-stu-id="e141a-549">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and returns the number of bytes sent.</span></span> <span data-ttu-id="e141a-550">Jeśli nie zostanie wywołana <xref:System.Net.Sockets.UdpClient.Connect%2A> przed wywołaniem tego przeciążenia <xref:System.Net.Sockets.UdpClient.Send%2A> metoda zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e141a-550">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e141a-551">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-551">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-552">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-552">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="e141a-553">Jeśli chcesz do przesyłania datagramów na inny host zdalny, należy wywołać <xref:System.Net.Sockets.UdpClient.Connect%2A> metodę i określić odpowiednią hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="e141a-553">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="e141a-554">Użyj jednej z innych <xref:System.Net.Sockets.UdpClient.Send%2A> przeciążenia metody do przesyłania datagramów na adres emisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-554">Use either of the other <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-555">W poniższym przykładzie pokazano <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-555">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="e141a-556">Należy ustanowić domyślnego hosta zdalnego przed użyciem tego przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="e141a-556">You must establish a default remote host prior to using this overload.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e141a-557">
            <paramref name="dgram" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-557">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e141a-558">
            <see cref="T:System.Net.Sockets.UdpClient" /> Ustanowiła już zdalnego hosta domyślnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-558">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-559">
            <see cref="T:System.Net.Sockets.UdpClient" /> Jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-559">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-560">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-560">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * System.Net.IPEndPoint -&gt; int" Usage="udpClient.Send (dgram, bytes, endPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="e141a-561">Tablica typu <see cref="T:System.Byte" /> określająca datagram UDP, który ma zostać wysłany, reprezentowane jako tablicę bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-561">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send, represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="e141a-562">Liczba bajtów w datagramie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-562">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="e141a-563">
            <see cref="T:System.Net.IPEndPoint" /> Reprezentujący hosta i portu, do którego należy wysłać datagram.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-563">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-564">Przesyła UDP datagram do hosta w określonym zdalnego punktu końcowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-564">Sends a UDP datagram to the host at the specified remote endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e141a-565">Liczba wysłanych bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-565">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-566"><xref:System.Net.Sockets.UdpClient.Send%2A> Metoda datagramu do określonego punktu końcowego i zwraca liczbę bajtów wysłanych pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="e141a-566">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the specified endpoint and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="e141a-567">Przed wywołaniem tego przeciążenia, należy najpierw utworzyć <xref:System.Net.IPEndPoint> za pomocą numeru adres i port IP hosta zdalnego, do którego będą dostarczane usługi datagramów.</span><span class="sxs-lookup"><span data-stu-id="e141a-567">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="e141a-568">Datagramy można wysyłać do emisji domyślnego adresu 255.255.255.255, określając <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> dla <xref:System.Net.IPAddress.Address%2A> właściwość <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="e141a-568">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="e141a-569">Po utworzeniu to <xref:System.Net.IPEndPoint>, przekazać go do <xref:System.Net.Sockets.UdpClient.Send%2A> metodę jako `endPoint` parametru.</span><span class="sxs-lookup"><span data-stu-id="e141a-569">After you have created this <xref:System.Net.IPEndPoint>, pass it to the <xref:System.Net.Sockets.UdpClient.Send%2A> method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="e141a-570">Do przesyłania datagramów na inny adres emisji, należy użyć <xref:System.Net.Sockets.UdpClient.Client%2A> metody w celu uzyskania bazowej <xref:System.Net.Sockets.Socket>i ustawić opcję gniazda na <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e141a-570">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e141a-571">Można także powrócić za pomocą <xref:System.Net.Sockets.Socket> klasy.</span><span class="sxs-lookup"><span data-stu-id="e141a-571">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-572">Nie wpisuj `endPoint` parametru tej metody, jeśli masz już ustanowione zdalnego hosta za pomocą <xref:System.Net.Sockets.UdpClient.Connect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-572">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="e141a-573">Jeśli to zrobisz, <xref:System.Net.Sockets.UdpClient.Send%2A> metoda zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e141a-573">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e141a-574">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-574">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-575">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-575">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-576">W poniższym przykładzie pokazano <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-576">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="e141a-577">W tym przykładzie użyto <xref:System.Net.IPEndPoint> określić hosta docelowego.</span><span class="sxs-lookup"><span data-stu-id="e141a-577">This example uses an <xref:System.Net.IPEndPoint> to specify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e141a-578">
            <paramref name="dgram" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-578">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e141a-579">
            <see cref="T:System.Net.Sockets.UdpClient" /> czy ustanowiła już zdalnego hosta domyślnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-579">
              <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-580">
            <see cref="T:System.Net.Sockets.UdpClient" /> wystąpienie jest zamykane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-580">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-581">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-581">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, hostname As String, port As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * string * int -&gt; int" Usage="udpClient.Send (dgram, bytes, hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="e141a-582">Tablica typu <see cref="T:System.Byte" /> określająca datagram UDP, który ma zostać wysłany w postaci tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-582">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="e141a-583">Liczba bajtów w datagramie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-583">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="e141a-584">Nazwa hosta zdalnego, do którego ma zostać wysłany datagram.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-584">The name of the remote host to which you intend to send the datagram.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="e141a-585">Numer portu zdalnego, z którym zamierzasz nawiązać połączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-585">The remote port number with which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-586">Przesyła UDP datagram do określonego portu na określony host zdalny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-586">Sends a UDP datagram to a specified port on a specified remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e141a-587">Liczba wysłanych bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-587">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-588"><xref:System.Net.Sockets.UdpClient.Send%2A> Metoda datagramu wartości określonych przez `hostname` i `port` parametrów i zwraca liczbę bajtów pomyślnie wysłane.</span><span class="sxs-lookup"><span data-stu-id="e141a-588">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the values specified by the `hostname` and `port` parameters and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="e141a-589">Możesz wysłać datagramy domyślny adres emisji, określając "255.255.255.255" dla `hostname` wartość parametru.</span><span class="sxs-lookup"><span data-stu-id="e141a-589">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="e141a-590">Do przesyłania datagramów na inny adres emisji, należy użyć <xref:System.Net.Sockets.UdpClient.Client%2A> metody w celu uzyskania bazowej <xref:System.Net.Sockets.Socket>i ustawić opcję gniazda na <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e141a-590">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e141a-591">Można także powrócić za pomocą <xref:System.Net.Sockets.Socket> klasy.</span><span class="sxs-lookup"><span data-stu-id="e141a-591">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e141a-592">Podaj nazwę hosta lub nie numer_portu do tej metody, jeśli masz już ustanowione zdalnego hosta za pomocą <xref:System.Net.Sockets.UdpClient.Connect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-592">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="e141a-593">Jeśli to zrobisz, <xref:System.Net.Sockets.UdpClient.Send%2A> metoda zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e141a-593">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e141a-594">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-594">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-595">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-595">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-596">W poniższym przykładzie pokazano <xref:System.Net.Sockets.UdpClient.Send%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-596">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="e141a-597">W tym przykładzie używa nazwy hosta i numer portu w przypadku identyfikowania hosta docelowego.</span><span class="sxs-lookup"><span data-stu-id="e141a-597">This example uses a host name and a port number to identify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e141a-598">
            <paramref name="dgram" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-598">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e141a-599">
            <see cref="T:System.Net.Sockets.UdpClient" /> Ustanowiła już zdalnego hosta domyślnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-599">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-600">
            <see cref="T:System.Net.Sockets.UdpClient" /> Jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-600">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-601">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-601">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e141a-602">Przesyła datagram UDP asynchronicznie do hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-602">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="e141a-603">Tablica typu <see cref="T:System.Byte" /> określająca datagram UDP, który ma zostać wysłany w postaci tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-603">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="e141a-604">Liczba bajtów w datagramie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-604">The number of bytes in the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-605">Przesyła datagram UDP asynchronicznie do hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-605">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e141a-606">Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-606">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-607">To przeciążenie datagramu z hostem zdalnym z tym <xref:System.Net.Sockets.UdpClient.Connect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-607">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="e141a-608">Jeśli nie zostanie wywołana <xref:System.Net.Sockets.UdpClient.Connect%2A> przed wywołaniem tego przeciążenia, metoda wygeneruje <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e141a-608">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e141a-609">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-609">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-610">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-610">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="e141a-611">Jeśli chcesz do przesyłania datagramów na inny host zdalny, należy wywołać <xref:System.Net.Sockets.UdpClient.Connect%2A> metodę i określić odpowiednią hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="e141a-611">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="e141a-612">Użyj jednej z innych <xref:System.Net.Sockets.UdpClient.SendAsync%2A> przeciążenia metody do przesyłania datagramów na adres emisji.</span><span class="sxs-lookup"><span data-stu-id="e141a-612">Use either of the other <xref:System.Net.Sockets.UdpClient.SendAsync%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e141a-613">
            <paramref name="dgram" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-613">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e141a-614">
            <see cref="T:System.Net.Sockets.UdpClient" /> Ustanowiła już zdalnego hosta domyślnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-614">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-615">
            <see cref="T:System.Net.Sockets.UdpClient" /> Jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-615">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-616">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-616">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int * System.Net.IPEndPoint -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes, endPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="e141a-617">Tablica typu <see cref="T:System.Byte" /> określająca datagram UDP, który ma zostać wysłany w postaci tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-617">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="e141a-618">Liczba bajtów w datagramie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-618">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="e141a-619">
            <see cref="T:System.Net.IPEndPoint" /> Reprezentujący hosta i portu, do którego należy wysłać datagram.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-619">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-620">Przesyła datagram UDP asynchronicznie do hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-620">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e141a-621">Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-621">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-622">Ta metoda wysyła datagramy do określonego punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="e141a-622">This method sends datagrams to the specified endpoint.</span></span> <span data-ttu-id="e141a-623">Przed wywołaniem tego przeciążenia, należy najpierw utworzyć <xref:System.Net.IPEndPoint> za pomocą numeru adres i port IP hosta zdalnego, do którego będą dostarczane usługi datagramów.</span><span class="sxs-lookup"><span data-stu-id="e141a-623">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="e141a-624">Datagramy można wysyłać do emisji domyślnego adresu 255.255.255.255, określając <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> dla <xref:System.Net.IPAddress.Address%2A> właściwość <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="e141a-624">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="e141a-625">Po utworzeniu to <xref:System.Net.IPEndPoint>, przekazać go do tej metody jako `endPoint` parametru.</span><span class="sxs-lookup"><span data-stu-id="e141a-625">After you have created this <xref:System.Net.IPEndPoint>, pass it to this method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="e141a-626">Do przesyłania datagramów na inny adres emisji, należy użyć <xref:System.Net.Sockets.UdpClient.Client%2A> metody w celu uzyskania bazowej <xref:System.Net.Sockets.Socket>i ustawić opcję gniazda na <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e141a-626">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e141a-627">Można także powrócić za pomocą <xref:System.Net.Sockets.Socket> klasy.</span><span class="sxs-lookup"><span data-stu-id="e141a-627">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="e141a-628">Nie wpisuj `endPoint` parametru tej metody, jeśli masz już ustanowione zdalnego hosta za pomocą <xref:System.Net.Sockets.UdpClient.Connect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-628">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="e141a-629">Jeśli to zrobisz, ta metoda zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e141a-629">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e141a-630">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-630">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-631">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-631">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e141a-632">
            <paramref name="dgram" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-632">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e141a-633">
            <see cref="T:System.Net.Sockets.UdpClient" /> czy ustanowiła już zdalnego hosta domyślnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-633">
              <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-634">
            <see cref="T:System.Net.Sockets.UdpClient" /> wystąpienie jest zamykane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-634">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-635">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-635">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, hostname As String, port As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int * string * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes, hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="e141a-636">Tablica typu <see cref="T:System.Byte" /> określająca datagram UDP, który ma zostać wysłany w postaci tablicy bajtów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-636">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="e141a-637">Liczba bajtów w datagramie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-637">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="e141a-638">Nazwa hosta zdalnego, do którego ma zostać wysłany datagram.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-638">The name of the remote host to which you intend to send the datagram.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="e141a-639">Numer portu zdalnego, z którym zamierzasz nawiązać połączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-639">The remote port number with which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e141a-640">Przesyła datagram UDP asynchronicznie do hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-640">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e141a-641">Zwraca <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-641">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-642">Ta metoda wysyła datagramy do wartości określonych przez `hostname` i `port` parametrów.</span><span class="sxs-lookup"><span data-stu-id="e141a-642">This method sends datagrams to the values specified by the `hostname` and `port` parameters.</span></span> <span data-ttu-id="e141a-643">Możesz wysłać datagramy domyślny adres emisji, określając "255.255.255.255" dla `hostname` wartość parametru.</span><span class="sxs-lookup"><span data-stu-id="e141a-643">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="e141a-644">Do przesyłania datagramów na inny adres emisji, należy użyć <xref:System.Net.Sockets.UdpClient.Client%2A> metody w celu uzyskania bazowej <xref:System.Net.Sockets.Socket>i ustawić opcję gniazda na <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e141a-644">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e141a-645">Można także powrócić za pomocą <xref:System.Net.Sockets.Socket> klasy.</span><span class="sxs-lookup"><span data-stu-id="e141a-645">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="e141a-646">Podaj nazwę hosta lub nie numer_portu do tej metody, jeśli masz już ustanowione zdalnego hosta za pomocą <xref:System.Net.Sockets.UdpClient.Connect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e141a-646">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="e141a-647">Jeśli to zrobisz, ta metoda zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="e141a-647">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="e141a-648">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-648">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="e141a-649">Po otrzymaniu tego kodu, można odwoływać się do dokumentacji na platformie MSDN na temat kodów błędu API usługi Windows Sockets w wersji 2, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="e141a-649">Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e141a-650">
            <paramref name="dgram" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-650">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e141a-651">
            <see cref="T:System.Net.Sockets.UdpClient" /> Ustanowiła już zdalnego hosta domyślnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-651">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e141a-652">
            <see cref="T:System.Net.Sockets.UdpClient" /> Jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-652">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="e141a-653">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-653">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public short Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Ttl" />
      <MemberSignature Language="VB.NET" Value="Public Property Ttl As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Ttl { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.Ttl : int16 with get, set" Usage="System.Net.Sockets.UdpClient.Ttl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e141a-654">Pobiera lub ustawia wartość, która określa czas wygaśnięcia (TTL) wartości protokołu internetowego (IP) pakiety wysłane przez <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-654">Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e141a-655">Wartość czasu wygaśnięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e141a-655">The TTL value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e141a-656">Wartość TTL wskazuje maksymalną liczbę routerów, które mogą przechodzić przez pakiet, zanim routera odrzuca pakiet i kontroli komunikat ICMP (Internet Protocol) "Przekroczono czas wygaśnięcia" komunikat o błędzie jest zwracany przez nadawcę.</span><span class="sxs-lookup"><span data-stu-id="e141a-656">The TTL value indicates the maximum number of routers a packet can traverse before the router discards the packet and an Internet Control Message Protocol (ICMP) "TTL exceeded" error message is returned to the sender.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e141a-657">Poniższy przykład kodu pokazuje użycie <xref:System.Net.Sockets.UdpClient.Ttl%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e141a-657">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Ttl%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>