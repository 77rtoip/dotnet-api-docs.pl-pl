<Type Name="SendPacketsElement" FullName="System.Net.Sockets.SendPacketsElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1fb6a7bfc20a9476b7f1a6d11b91ed2fdf65deeb" /><Meta Name="ms.sourcegitcommit" Value="f991677a7374c45590a432ff7ab830beb05f2ccd" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/27/2019" /><Meta Name="ms.locfileid" Value="68591483" /></Metadata><TypeSignature Language="C#" Value="public class SendPacketsElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SendPacketsElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.SendPacketsElement" />
  <TypeSignature Language="VB.NET" Value="Public Class SendPacketsElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendPacketsElement" />
  <TypeSignature Language="F#" Value="type SendPacketsElement = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje element w <see cref="T:System.Net.Sockets.SendPacketsElement" /> tablicy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa służy do <xref:System.Net.Sockets.Socket> podniesienia klasy do użycia przez aplikacje serwera, które używają asynchroniczne we/wy sieci, aby osiągnąć najwyższą wydajność. <xref:System.Net.Sockets.SendPacketsElement> Klasa jest używana <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> z właściwością do pobierania lub ustawiania buforu danych lub pliku <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> do wysłania przy użyciu metody. <xref:System.Net.Sockets.SendPacketsElement>  
  
 ]]></format>
    </remarks>
    <threadsafe>Wystąpienia tej klasy są bezpieczne wątkowo.</threadsafe>
    <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.SendPacketsElement" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : byte[] -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement buffer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica bajtów danych do wysłania przy użyciu <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> metody.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Sockets.SendPacketsElement" /> klasy przy użyciu określonego buforu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> z właściwością do pobierania lub ustawiania buforu danych lub pliku <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> do wysłania przy użyciu metody. <xref:System.Net.Sockets.SendPacketsElement>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> Parametr nie może mieć wartości null</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (System.IO.FileStream fileStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.FileStream fileStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::IO::FileStream ^ fileStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : System.IO.FileStream -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement fileStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="fileStream">Plik, który ma zostać przesłany <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> za pomocą metody.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Sockets.SendPacketsElement" /> klasy przy użyciu określonego <see cref="T:System.IO.FileStream" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements?displayProperty=nameWithType> z właściwością do pobierania lub ustawiania buforu danych lub pliku <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> do wysłania przy użyciu metody. <xref:System.Net.Sockets.SendPacketsElement>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="fileStream" />nie jest otwarty do asynchronicznego odczytu i zapisu.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileStream" /> nie może mieć wartości null.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (string filepath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filepath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filepath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::String ^ filepath);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : string -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement filepath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="filepath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filepath">Nazwa pliku, który ma zostać przesłany za pomocą <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> metody.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Sockets.SendPacketsElement" /> klasy przy użyciu określonego pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> z właściwością do pobierania lub ustawiania buforu danych lub pliku <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> do wysłania przy użyciu metody. <xref:System.Net.Sockets.SendPacketsElement>  
  
 Ścieżki Universal Naming Convention (UNC) są obsługiwane przez `filepath` parametr. Jeśli plik znajduje się w bieżącym katalogu roboczym, nie trzeba określać informacji o ścieżce.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="filepath" /> Parametr nie może mieć wartości null</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : byte[] * int * int -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (buffer, offset, count)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica bajtów danych do wysłania przy użyciu <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> metody.</param>
        <param name="offset">Przesunięcie, w bajtach, od początku <paramref name="buffer" /> do lokalizacji w, <paramref name="buffer" /> aby rozpocząć wysyłanie danych określonych w <paramref name="buffer" /> parametrze.</param>
        <param name="count">Liczba bajtów do wysłania, <paramref name="offset" /> rozpoczynając od parametru. Jeśli <paramref name="count" /> jest równa zero, nie są wysyłane żadne bajty.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Sockets.SendPacketsElement" /> klasy przy użyciu określonego zakresu buforu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> z właściwością do pobierania lub ustawiania buforu danych lub pliku <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> do wysłania przy użyciu metody. <xref:System.Net.Sockets.SendPacketsElement>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> Parametr nie może mieć wartości null</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametry <paramref name="offset" /> i<paramref name="count" /> muszą być większe lub równe zeru.  
  
<paramref name="offset" /> I<paramref name="count" /> musi być mniejsza niż rozmiar buforu</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (System.IO.FileStream fileStream, long offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.FileStream fileStream, int64 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::IO::FileStream ^ fileStream, long offset, int count);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : System.IO.FileStream * int64 * int -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (fileStream, offset, count)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="offset" Type="System.Int64" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="fileStream">Plik, który ma zostać przesłany <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> za pomocą metody.</param>
        <param name="offset">Przesunięcie, w bajtach, od początku pliku do lokalizacji w pliku, aby rozpocząć wysyłanie bajtów w pliku.</param>
        <param name="count">Liczba bajtów do wysłania, <paramref name="offset" />rozpoczynając od. Jeśli <paramref name="count" /> jest równa zero, zostanie wysłany cały plik.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Sockets.SendPacketsElement" /> klasy przy użyciu określonego zakresu <see cref="T:System.IO.FileStream" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements?displayProperty=nameWithType> z właściwością do pobierania lub ustawiania buforu danych lub pliku <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> do wysłania przy użyciu metody. <xref:System.Net.Sockets.SendPacketsElement>  
  
 ]]></format>
        </remarks>        
        <exception cref="T:System.ArgumentException"><paramref name="fileStream" /> Parametr musi być otwarty w celu odczytu i zapisu asynchronicznego.</exception>
        <exception cref="T:System.ArgumentNullException">Parametr nie może być <see langword="null" />. <paramref name="fileStream" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametry <paramref name="offset" /> i<paramref name="count" /> muszą być większe lub równe zeru.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (string filepath, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filepath, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filepath As String, offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::String ^ filepath, int offset, int count);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : string * int * int -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (filepath, offset, count)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="filepath" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="filepath">Nazwa pliku, który ma zostać przesłany za pomocą <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> metody.</param>
        <param name="offset">Przesunięcie, w bajtach, od początku pliku do lokalizacji w pliku, aby rozpocząć wysyłanie pliku określonego w <paramref name="filepath" /> parametrze.</param>
        <param name="count">Liczba bajtów do wysłania, <paramref name="offset" /> rozpoczynając od parametru. Jeśli <paramref name="count" /> jest równa zero, zostanie wysłany cały plik.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Sockets.SendPacketsElement" /> klasy przy użyciu określonego zakresu pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> z właściwością do pobierania lub ustawiania buforu danych lub pliku <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> do wysłania przy użyciu metody. <xref:System.Net.Sockets.SendPacketsElement>  
  
 Ścieżki Universal Naming Convention (UNC) są obsługiwane przez `filepath` parametr. Jeśli plik znajduje się w bieżącym katalogu roboczym, nie trzeba określać informacji o ścieżce.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="filepath" /> Parametr nie może mieć wartości null</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametry <paramref name="offset" /> i<paramref name="count" /> muszą być większe lub równe zeru.</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (string filepath, long offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filepath, int64 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filepath As String, offset As Long, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::String ^ filepath, long offset, int count);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : string * int64 * int -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (filepath, offset, count)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filepath" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="offset" Type="System.Int64" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="filepath">Nazwa pliku, który ma zostać przesłany za pomocą <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> metody.</param>
        <param name="offset">Przesunięcie, w bajtach, od początku pliku do lokalizacji w pliku, aby rozpocząć wysyłanie pliku określonego w <paramref name="filepath" /> parametrze.</param>
        <param name="count">Liczba bajtów do wysłania, <paramref name="offset" />rozpoczynając od. Jeśli <paramref name="count" /> jest równa zero, zostanie wysłany cały plik.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Sockets.SendPacketsElement" /> klasy przy użyciu określonego zakresu pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements?displayProperty=nameWithType> z właściwością do pobierania lub ustawiania buforu danych lub pliku <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> do wysłania przy użyciu metody. <xref:System.Net.Sockets.SendPacketsElement>  
  
 Ścieżki Universal Naming Convention (UNC) są obsługiwane przez `filepath` parametr. Jeśli plik znajduje się w bieżącym katalogu roboczym, nie trzeba określać informacji o ścieżce.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr nie może być <see langword="null" />. <paramref name="filepath" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametry <paramref name="offset" /> i<paramref name="count" /> muszą być większe lub równe zeru.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (byte[] buffer, int offset, int count, bool endOfPacket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] buffer, int32 offset, int32 count, bool endOfPacket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (buffer As Byte(), offset As Integer, count As Integer, endOfPacket As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, bool endOfPacket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : byte[] * int * int * bool -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (buffer, offset, count, endOfPacket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="endOfPacket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica bajtów danych do wysłania przy użyciu <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> metody.</param>
        <param name="offset">Przesunięcie, w bajtach, od początku <paramref name="buffer" /> do lokalizacji w, <paramref name="buffer" /> aby rozpocząć wysyłanie danych określonych w <paramref name="buffer" /> parametrze.</param>
        <param name="count">Liczba bajtów do wysłania, rozpoczynając od <paramref name="offset" /> parametru. Jeśli <paramref name="count" /> jest równa zero, nie są wysyłane żadne bajty.</param>
        <param name="endOfPacket">Wartość logiczna określająca, że ten element nie powinien być połączony z następnym elementem w jednym żądaniu wysyłania z warstwy Sockets do transportu. Ta flaga służy do szczegółowej kontroli zawartości poszczególnych komunikatów w datagramie lub w gnieździe zorientowanym na komunikaty.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Sockets.SendPacketsElement" /> klasy przy użyciu określonego zakresu buforu z opcją łączenia tego elementu z następnym elementem w jednym żądaniu wysłania z warstwy Sockets do transportu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> z właściwością do pobierania lub ustawiania buforu danych lub pliku <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> do wysłania przy użyciu metody. <xref:System.Net.Sockets.SendPacketsElement>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> Parametr nie może mieć wartości null</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametry <paramref name="offset" /> i<paramref name="count" /> muszą być większe lub równe zeru.  
  
<paramref name="offset" /> I<paramref name="count" /> musi być mniejsza niż rozmiar buforu</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (System.IO.FileStream fileStream, long offset, int count, bool endOfPacket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.FileStream fileStream, int64 offset, int32 count, bool endOfPacket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.IO.FileStream,System.Int64,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::IO::FileStream ^ fileStream, long offset, int count, bool endOfPacket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : System.IO.FileStream * int64 * int * bool -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (fileStream, offset, count, endOfPacket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="offset" Type="System.Int64" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="endOfPacket" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="fileStream">Plik, który ma zostać przesłany <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> za pomocą metody.</param>
        <param name="offset">Tnie przesunięcie w bajtach od początku pliku do lokalizacji w pliku, aby rozpocząć wysyłanie bajtów w pliku.</param>
        <param name="count">Liczba bajtów do wysłania, rozpoczynając od parametru przesunięcia. Jeśli liczba jest równa zero, zostanie wysłany cały plik.</param>
        <param name="endOfPacket">Określa, że ten element nie powinien być połączony z następnym elementem w jednym żądaniu wysłania z warstwy Sockets do transportu. Ta flaga służy do szczegółowej kontroli zawartości poszczególnych komunikatów w datagramie lub w gnieździe zorientowanym na komunikaty.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Sockets.SendPacketsElement" /> klasy przy użyciu określonego zakresu <see cref="T:System.IO.FileStream" /> obiektu z opcją łączenia tego elementu z następnym elementem w jednym żądaniu wysłania z warstwy Sockets do transportu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements?displayProperty=nameWithType> z właściwością do pobierania lub ustawiania buforu danych lub pliku <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> do wysłania przy użyciu metody. <xref:System.Net.Sockets.SendPacketsElement>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="fileStream" /> Parametr musi być otwarty w celu odczytu i zapisu asynchronicznego.</exception>
        <exception cref="T:System.ArgumentNullException">Parametr nie może być <see langword="null" />. <paramref name="fileStream" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametry <paramref name="offset" /> i<paramref name="count" /> muszą być większe lub równe zeru.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (string filepath, int offset, int count, bool endOfPacket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filepath, int32 offset, int32 count, bool endOfPacket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filepath As String, offset As Integer, count As Integer, endOfPacket As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::String ^ filepath, int offset, int count, bool endOfPacket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : string * int * int * bool -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (filepath, offset, count, endOfPacket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="filepath" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="endOfPacket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filepath">Nazwa pliku, który ma zostać przesłany za pomocą <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> metody.</param>
        <param name="offset">Przesunięcie, w bajtach, od początku pliku do lokalizacji w pliku, aby rozpocząć wysyłanie pliku określonego w <paramref name="filepath" /> parametrze.</param>
        <param name="count">Liczba bajtów do wysłania, <paramref name="offset" /> rozpoczynając od parametru. Jeśli <paramref name="count" /> jest równa zero, zostanie wysłany cały plik.</param>
        <param name="endOfPacket">Wartość logiczna określająca, że ten element nie powinien być połączony z następnym elementem w jednym żądaniu wysyłania z warstwy Sockets do transportu. Ta flaga służy do szczegółowej kontroli zawartości poszczególnych komunikatów w datagramie lub w gnieździe zorientowanym na komunikaty.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Sockets.SendPacketsElement" /> klasy przy użyciu określonego zakresu pliku z opcją łączenia tego elementu z następnym elementem w jednym żądaniu wysłania z warstwy Sockets do transportu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType> z właściwością do pobierania lub ustawiania buforu danych lub pliku <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> do wysłania przy użyciu metody. <xref:System.Net.Sockets.SendPacketsElement>  
  
 Ścieżki Universal Naming Convention (UNC) są obsługiwane przez `filepath` parametr. Jeśli plik znajduje się w bieżącym katalogu roboczym, nie trzeba określać informacji o ścieżce.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="filepath" /> Parametr nie może mieć wartości null</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametry <paramref name="offset" /> i<paramref name="count" /> muszą być większe lub równe zeru.</exception>
        <altmember cref="T:System.ArgumentNullException" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendPacketsElement (string filepath, long offset, int count, bool endOfPacket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filepath, int64 offset, int32 count, bool endOfPacket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int64,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filepath As String, offset As Long, count As Integer, endOfPacket As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendPacketsElement(System::String ^ filepath, long offset, int count, bool endOfPacket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.SendPacketsElement : string * int64 * int * bool -&gt; System.Net.Sockets.SendPacketsElement" Usage="new System.Net.Sockets.SendPacketsElement (filepath, offset, count, endOfPacket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filepath" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="offset" Type="System.Int64" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="endOfPacket" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="filepath">Nazwa pliku, który ma zostać przesłany za pomocą <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> metody.</param>
        <param name="offset">Przesunięcie, w bajtach, od początku pliku do lokalizacji w pliku, aby rozpocząć wysyłanie pliku określonego w <paramref name="filepath" /> parametrze.</param>
        <param name="count">Liczba bajtów do wysłania, <paramref name="offset" /> rozpoczynając od parametru. Jeśli <paramref name="count" /> jest równa zero, zostanie wysłany cały plik.</param>
        <param name="endOfPacket">Określa, że ten element nie powinien być połączony z następnym elementem w jednym żądaniu wysłania z warstwy Sockets do transportu. Ta flaga służy do szczegółowej kontroli zawartości poszczególnych komunikatów w datagramie lub w gnieździe zorientowanym na komunikaty.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Net.Sockets.SendPacketsElement" /> klasy przy użyciu określonego zakresu pliku z opcją łączenia tego elementu z następnym elementem w jednym żądaniu wysłania z warstwy Sockets do transportu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest używana <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements?displayProperty=nameWithType> z właściwością do pobierania lub ustawiania buforu danych lub pliku <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> do wysłania przy użyciu metody. <xref:System.Net.Sockets.SendPacketsElement>  
  
 Ścieżki Universal Naming Convention (UNC) są obsługiwane przez `filepath` parametr. Jeśli plik znajduje się w bieżącym katalogu roboczym, nie trzeba określać informacji o ścieżce.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr nie może być <see langword="null" />. <paramref name="filepath" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametry <paramref name="offset" /> i<paramref name="count" /> muszą być większe lub równe zeru.</exception>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public byte[] Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Buffer { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : byte[]" Usage="System.Net.Sockets.SendPacketsElement.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bufor do wysłania, <see cref="T:System.Net.Sockets.SendPacketsElement" /> Jeśli obiekt został zainicjowany <paramref name="buffer" /> za pomocą parametru.</summary>
        <value>Bufor bajtów do wysłania, <see cref="T:System.Net.Sockets.SendPacketsElement" /> Jeśli obiekt został zainicjowany <paramref name="buffer" /> za pomocą parametru.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Net.Sockets.SendPacketsElement.Buffer> domyślna właściwości to `null` Jeśli <xref:System.Net.Sockets.SendPacketsElement> obiekt nie został zainicjowany przy użyciu `buffer` parametru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Net.Sockets.SendPacketsElement.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę bajtów do wysłania.</summary>
        <value>Liczba bajtów do wysłania, <see cref="T:System.Net.Sockets.SendPacketsElement" /> Jeśli klasa została zainicjowana <paramref name="count" /> za pomocą parametru.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Net.Sockets.SendPacketsElement.Count%2A> domyślna właściwości jest równa zero, <xref:System.Net.Sockets.SendPacketsElement> Jeśli Klasa nie `count` została zainicjowana za pomocą parametru.  
  
 Jeśli <xref:System.Net.Sockets.SendPacketsElement.Count%2A> wartość jest równa zero dla pliku, zostanie wysłany cały plik. Jeśli <xref:System.Net.Sockets.SendPacketsElement.Count%2A> wartość jest równa zero dla buforu, nie są wysyłane żadne bajty.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOfPacket">
      <MemberSignature Language="C#" Value="public bool EndOfPacket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EndOfPacket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.EndOfPacket" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndOfPacket As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EndOfPacket { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EndOfPacket : bool" Usage="System.Net.Sockets.SendPacketsElement.EndOfPacket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość logiczną wskazującą, czy ten element nie powinien być połączony z następnym elementem w jednym żądaniu wysyłania z warstwy Sockets do transportu.</summary>
        <value>Wartość logiczna wskazująca, czy ten element nie powinien być połączony z następnym elementem w pojedynczym żądaniu wysyłania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna dla <xref:System.Net.Sockets.SendPacketsElement.EndOfPacket%2A> właściwości ma wartość false, <xref:System.Net.Sockets.SendPacketsElement> Jeśli Klasa nie `endOfPacket` została zainicjowana z parametrem ustawionym na wartość true.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePath : string" Usage="System.Net.Sockets.SendPacketsElement.FilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę pliku do wysłania, jeśli <see cref="T:System.Net.Sockets.SendPacketsElement" /> obiekt został zainicjowany <paramref name="filepath" /> za pomocą parametru.</summary>
        <value>Nazwa pliku do wysłania, jeśli <see cref="T:System.Net.Sockets.SendPacketsElement" /> obiekt został zainicjowany <paramref name="filepath" /> za pomocą parametru.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ścieżki Universal Naming Convention (UNC) są obsługiwane przez <xref:System.Net.Sockets.SendPacketsElement.FilePath%2A> właściwość. Jeśli plik znajduje się w bieżącym katalogu roboczym, nie trzeba określać informacji o ścieżce.  
  
 Wartość <xref:System.Net.Sockets.SendPacketsElement.FilePath> domyślna właściwości to `null` Jeśli <xref:System.Net.Sockets.SendPacketsElement> obiekt nie został zainicjowany przy użyciu `filepath` parametru.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileStream">
      <MemberSignature Language="C#" Value="public System.IO.FileStream FileStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.FileStream FileStream" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.FileStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileStream As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileStream ^ FileStream { System::IO::FileStream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileStream : System.IO.FileStream" Usage="System.Net.Sockets.SendPacketsElement.FileStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera reprezentację obiektu do wysłania, jeśli <see cref="T:System.Net.Sockets.SendPacketsElement" /> obiekt został zainicjowany <see cref="T:System.IO.FileStream" /> za pomocą parametru.</summary>
        <value>Reprezentacja obiektu do wysłania, jeśli <see cref="T:System.Net.Sockets.SendPacketsElement" /> obiekt został zainicjowany <see cref="T:System.IO.FileStream" /> za pomocą parametru.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 Wartość <xref:System.Net.Sockets.SendPacketsElement.FileStream> domyślna właściwości to `null` Jeśli <xref:System.Net.Sockets.SendPacketsElement> obiekt nie został zainicjowany przy użyciu `fileStream` parametru.
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int" Usage="System.Net.Sockets.SendPacketsElement.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera przesunięcie w bajtach od początku buforu danych lub pliku do lokalizacji w buforze lub pliku, aby rozpocząć wysyłanie danych.</summary>
        <value>Przesunięcie, w bajtach, od początku buforu danych lub pliku do lokalizacji w buforze lub pliku, aby rozpocząć wysyłanie danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Net.Sockets.SendPacketsElement.Offset> domyślna właściwości jest równa zero, <xref:System.Net.Sockets.SendPacketsElement> Jeśli Klasa nie `offset` została zainicjowana przy użyciu parametru.  
  
  Jeśli <xref:System.Net.Sockets.SendPacketsElement.OffsetLong> jest większa niż <xref:System.Int32.MaxValue>, <xref:System.Net.Sockets.SendPacketsElement.Offset> program zgłosi <xref:System.OverflowException> przy próbie uzyskania dostępu. 

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetLong">
      <MemberSignature Language="C#" Value="public long OffsetLong { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 OffsetLong" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SendPacketsElement.OffsetLong" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetLong As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long OffsetLong { long get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetLong : int64" Usage="System.Net.Sockets.SendPacketsElement.OffsetLong" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera przesunięcie w bajtach od początku buforu danych lub pliku do lokalizacji w buforze lub pliku, aby rozpocząć wysyłanie danych.</summary>
        <value>Przesunięcie, w bajtach, od początku buforu danych lub pliku do lokalizacji w buforze lub pliku, aby rozpocząć wysyłanie danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Net.Sockets.SendPacketsElement.OffsetLong> domyślna właściwości jest równa zero, <xref:System.Net.Sockets.SendPacketsElement> Jeśli Klasa nie `offset` została zainicjowana przy użyciu parametru.  
  
  Jeśli <xref:System.Net.Sockets.SendPacketsElement.OffsetLong> jest większa niż <xref:System.Int32.MaxValue>, <xref:System.Net.Sockets.SendPacketsElement.Offset> program zgłosi <xref:System.OverflowException> przy próbie uzyskania dostępu. 

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>