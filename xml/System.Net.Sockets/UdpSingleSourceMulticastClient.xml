<Type Name="UdpSingleSourceMulticastClient" FullName="System.Net.Sockets.UdpSingleSourceMulticastClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22d8e0a33fcc708ac83a1356d04077ab35d0449c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30558817" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpSingleSourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpSingleSourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpSingleSourceMulticastClient : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Odbiornik klienta na ruch multiemisji z jednego źródła, znanej także jako źródło określonego multiemisji (SSM).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Adres multiemisji grupy i adres nadawcy źródła musi być znane.  
  
 Oprócz odbierania danych multiemisji z określonego nadawcy <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> klienta można również wysyłać dane emisji pojedynczej do nadawcy.  
  
 Do otrzymywania multiemisji z wielu źródeł, lub gdy źródła nie są znane z wyprzedzeniem, za pomocą <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> zamiast klasy.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress sourceAddress, class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceAddress As IPAddress, groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpSingleSourceMulticastClient(System::Net::IPAddress ^ sourceAddress, System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">Adres nadawcy źródła dla tego odbiornika do subskrybowania.</param>
        <param name="groupAddress">Adres grupy multiemisji dla tego odbiornika do subskrybowania.</param>
        <param name="localPort">Port lokalny dla tego odbiornika powiązać.</param>
        <summary>Tworzy nową <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> UDP klienta, który można subskrybować adres grupy i odbierają datagramy z jednego źródła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> Konstruktor kojarzy gniazda multiemisji UDP z grupy adres i port, nie powiązanie lub w przeciwnym razie użyj gniazda.  
  
 `groupAddress` Parametr może być multiemisji IPv6 albo IPv4 adresu. Jednak rodziny adres `sourceAddress` i `groupAddress` parametrów musi takie same.  
  
 `localPort` Parametrów nie mogą określać portu mniejszej niż 1024.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceAddress" /> i <paramref name="groupAddress" /> musi być ta sama Rodzina adresów.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceAddress" /> to odwołanie o wartości null (Nothing w języku Visual Basic).  
  
 —lub—  
  
 <paramref name="groupAddress" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="localPort" /> jest mniejsza niż 0  
  
 —lub—  
  
 <paramref name="localPort" /> jest większe niż 65 535.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="localPort" /> jest mniejsze niż 1024</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Metoda wywołania zwrotnego do wywołania po zakończeniu operacji.</param>
        <param name="state">Informacje o stanie opcjonalne do przekazania do <c>wywołania zwrotnego</c> metody dla tej operacji.</param>
        <summary>Wiąże gniazda i rozpocznie się operacji tworzenia sprzężenia do grupy multiemisji, aby umożliwić datagramy z pojedynczego adresu źródłowego.</summary>
        <returns>Zwraca <see cref="T:System.IAsyncResult" />.  
  
 <see cref="T:System.IAsyncResult" /> Który odwołuje się do tej operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> Metody wiąże gniazda multiemisji UDP portów lokalnych i tworzy sprzężenie grupy multiemisji, aby umożliwić datagramy z pojedynczego adresu źródłowego. Adres multiemisji grupy pojedynczego adresu źródłowego i portu lokalnego, aby powiązać są określone w <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> konstruktora.  
  
 Metoda określona w `callback` parametru jest wywoływana po wykonaniu operacji na dołączenie do grupy multiemisji.  
  
 Jeśli jest to wymagane przez środowisko uruchomieniowe, <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> metoda wykonuje także sprawdzić zasad, aby sprawdzić, czy klient może dostępu do grupy multiemisji. Jeśli klient nie ma mieć dostęp, <xref:System.Net.Sockets.SocketException> jest zgłaszany z <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji została dołączona lub operacji tworzenia sprzężenia jest obecnie w toku.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromSource(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromSource (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Bufor do przechowywania odebranych danych.</param>
        <param name="offset">Przesunięcie, w bajtach, od początku <c>buforu</c> przechowywania danych.</param>
        <param name="count">Maksymalna liczba bajtów do pobierania i przechowywania w <c>buforu</c>.</param>
        <param name="callback">Metoda wywołania zwrotnego do wywołania po zakończeniu operacji.</param>
        <param name="state">Informacje o stanie opcjonalne do przekazania do <c>wywołania zwrotnego</c> metody dla tej operacji.</param>
        <summary>Rozpoczyna operację odbierania pakietu z połączonych grup multiemisji i wywołuje określony wywołania zwrotnego, gdy pakiet dotarła od nadawcy określony w grupie.</summary>
        <returns>Zwraca <see cref="T:System.IAsyncResult" />.  
  
 <see cref="T:System.IAsyncResult" /> Który odwołuje się do tej operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> Metoda rozpoczyna operacji odbierania pakietów UDP z dołączonym do grupy multiemisji od jednego nadawcy. Port lokalny, grupy multiemisji i adres nadawcy źródła są określone w <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> konstruktora. Klienta multiemisji należy również wykonać na przyłączenie do grupy multiemisji.  
  
 Metoda określona w `callback` parametru jest wywoływane, gdy otrzymano pakiet.  
  
 Istnieje możliwość za błąd gniazda, jeśli operacja receive synchronicznie, kończy się niepowodzeniem, mimo że jest to rzadko z protokołu UDP. Jeśli wystąpi błąd gniazda, <xref:System.Net.Sockets.SocketException> jest generowany. Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> jest mniejsza niż 0  
  
 —lub—  
  
 <paramref name="offset" /> jest większa niż długość <paramref name="buffer" />.  
  
 —lub—  
  
 <paramref name="count" /> jest mniejsza niż 0  
  
 —lub—  
  
 <paramref name="offset" /> plus wartość licznika jest większa niż długość <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji nie został przyłączony.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do odbierania gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToSource(unsigned int8[] buffer, int32 offset, int32 count, int32 remotePort, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToSource (buffer As Byte(), offset As Integer, count As Integer, remotePort As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, int remotePort, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remotePort" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Bufor, który zawiera dane do wysłania.</param>
        <param name="offset">Przesunięcie, w bajtach, od początku <c>buforu</c> odczytać dane do wysłania.</param>
        <param name="count">Liczba bajtów do wysłania z <c>buforu</c>.</param>
        <param name="remotePort">Port zdalny, do którego ma być wysłany pakiet. Adres zdalnego określono za pomocą <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /> konstruktora.</param>
        <param name="callback">Metoda wywołania zwrotnego do wywołania po zakończeniu operacji.</param>
        <param name="state">Informacje o stanie opcjonalne do przekazania do <c>wywołania zwrotnego</c> metody dla tej operacji.</param>
        <summary>Rozpoczyna operację wysyłania pakietów emisji pojedynczej do wcześniej określone źródło.</summary>
        <returns>Zwraca <see cref="T:System.IAsyncResult" />.  
  
 <see cref="T:System.IAsyncResult" /> Który odwołuje się do tej operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> Metoda rozpoczyna operację wysyłania pakietów UDP do wcześniej określone źródło.  
  
 Niektóre protokoły dzięki tym informacjom można przekazać sterowanie przepływem jakości usługi statystyk lub odzyskiwania wiadomości.  
  
 Metoda określona w `callback` parametru jest wywoływane, gdy pakiet został wysłany.  
  
 Klienta należy wykonać na przyłączenie do grupy multiemisji.  
  
 Jeśli port docelowy określony w `remotePort` parametr jest mniejsza niż 1024, <xref:System.Net.Sockets.SocketException> jest zgłaszany z <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Jest to możliwe błąd gniazda Jeśli operacja wysyłania nie synchronicznie, ale jest to rzadko z protokołu UDP. Jeśli wystąpi błąd gniazda, <xref:System.Net.Sockets.SocketException> jest generowany. Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> jest mniejsza niż 0  
  
 —lub—  
  
 <paramref name="offset" /> jest większa niż długość <paramref name="buffer" />.  
  
 —lub—  
  
 <paramref name="count" /> jest mniejsza niż 0  
  
 —lub—  
  
 <paramref name="offset" /> plus wartość licznika jest większa niż długość <paramref name="buffer" />.  
  
 —lub—  
  
 <paramref name="remotePort" /> jest mniejsza niż 0 lub większy niż 65 535.</exception>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji nie został przyłączony.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pozostawia grupy multiemisji i zwalnia wszystkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> klasy i podstawowych <see cref="T:System.Net.Sockets.Socket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> po zakończeniu przy użyciu <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> Pozostawia metody <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> w stanie uniemożliwiającym jego używanie. Po wywołaniu <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> klasy.  
  
 Wywoływanie zawsze <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> przed zwolnieniem ostatniego odwołania do <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> obiektu <xref:System.Object.Finalize%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Wynik operacji asynchronicznej sprzężenia.</param>
        <summary>Wykonuje operację asynchroniczną sprzężenia grupy do grupy multiemisji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> Ukończeniu metody asynchroniczne bind gniazda i Dołącz do operacji do grupy multiemisji.  
  
 Jeśli jest to wymagane przez środowisko uruchomieniowe, <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> metoda wykonuje także sprawdzić zasad, aby sprawdzić, czy klient może dostępu do grupy multiemisji. Jeśli klient nie ma mieć dostęp, <xref:System.Net.Sockets.SocketException> jest zgłaszany z <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 W przypadku awarii gniazda podczas wykonywania operacji łączenia grupy, <xref:System.Net.Sockets.SocketException> jest generowany. Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromSource">
      <MemberSignature Language="C#" Value="public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromSource(class System.IAsyncResult result, [out] int32&amp; sourcePort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromSource (result As IAsyncResult, ByRef sourcePort As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromSource(IAsyncResult ^ result, [Runtime::InteropServices::Out] int % sourcePort);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="sourcePort" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">Wynik asynchronicznej operacji odbioru.</param>
        <param name="sourcePort">Punkt końcowy źródła, gdy pakiet został odebrany z.</param>
        <summary>Kończy operację asynchroniczną odbierania pakietu z połączonych grup multiemisji i zapewnia uzyskanych informacji.</summary>
        <returns>Zwraca <see cref="T:System.Int32" />.  
  
 Długość w bajtach wiadomości przechowywanych w <paramref name="buffer" /> parametr przekazany do <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> metody.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> Metoda kończy operację asynchroniczną do odbierania pakietów z jednego źródła do grupy multiemisji.  
  
 W przypadku awarii gniazda podczas wykonywania operacji odbierania <xref:System.Net.Sockets.SocketException> jest generowany. Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji nie został przyłączony.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToSource">
      <MemberSignature Language="C#" Value="public void EndSendToSource (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToSource(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToSource (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToSource(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Wynik operacji asynchronicznej wysyłania.</param>
        <summary>Kończy operację wysyłania pakietów emisji pojedynczej do jednego źródła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> Metody kończy operację asynchroniczną wysyłać pakietów do jednego źródła wcześniej określona.  
  
 W przypadku awarii gniazda podczas wykonywania operacji odbierania <xref:System.Net.Sockets.SocketException> jest generowany. Zwrócony błąd jest określony jako element członkowski <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji nie został przyłączony.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar w bajtach buforu odbioru z <see cref="T:System.Net.Sockets.Socket" /> używane dla operacji odbierania multiemisji na tym <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wystąpienia.</summary>
        <value>Zwraca <see cref="T:System.Int32" />.  
  
 Rozmiar w bajtach buforu odbioru.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ReceiveBufferSize` Właściwości pobiera lub ustawia rozmiar w bajtach buforu odbioru podstawowych <xref:System.Net.Sockets.Socket> używane dla operacji odbierania multiemisji na tym <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> wystąpienia. W szczególności `ReceiveBufferSize` właściwość określa rozmiar bufora używanego przez stos, kiedy pakiet dociera, ale aplikacja nie została jeszcze wywołana <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> metody. Jeśli bufor zapełniane lub pakietów zachować wychodzącego przed wywołaniami aplikacji <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> i <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> będzie pobrać porzucony metod, stare pakietów. Aplikacja nigdy nie będzie mogła odbierać pakiety starego, a zamiast tego otrzymają nowsze pakiety, gdy wywołuje <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> metody.  
  
 Domyślny rozmiar buforu odbioru w systemie Windows jest 8192.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony rozmiar buforu jest mniejszy niż 0.</exception>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji nie został przyłączony.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> Został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar w bajtach buforu wysyłania z <see cref="T:System.Net.Sockets.Socket" /> używane dla operacji wysyłania multiemisji na tym <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wystąpienia.</summary>
        <value>Zwraca <see cref="T:System.Int32" />.  
  
 Rozmiar w bajtach buforu wysyłania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość SendBufferSize pobiera lub ustawia rozmiar w bajtach buforu wysyłania podstawowych <xref:System.Net.Sockets.Socket> używane dla operacji wysyłania multiemisji na tym <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> wystąpienia.  
  
 W systemie Mac OS X <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> właściwość określa liczbę bajtów może być w buforze stos sieciowy oczekiwania do wysyłane przed dodatkowe połączenia z <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> metody kończyć się niepowodzeniem. Aplikacje w systemie Mac OS X, może zaistnieć potrzeba dane z tą właściwością ich wysyłania dużej liczby pakietów UDP w krótkim przedziale czasu.  
  
 W systemie Windows, wywołań <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> metoda będzie trwać dłużej wywołania zwrotnego, w zależności od wartości <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> właściwości, jeśli bufor wysyłania jest pełny. <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> Tylko formanty właściwości, czy bufor użytkownika jest zablokowane w pamięci fizycznej do momentu ukończenia wysyłania.  
  
 Domyślny rozmiar buforu wysyłania w systemie Windows jest 8192.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony rozmiar buforu jest mniejszy niż 0.</exception>
        <exception cref="T:System.InvalidOperationException">Grupa multiemisji nie został przyłączony.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> Został usunięty.</exception>
      </Docs>
    </Member>
  </Members>
</Type>