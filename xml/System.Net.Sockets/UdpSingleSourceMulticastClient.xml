<Type Name="UdpSingleSourceMulticastClient" FullName="System.Net.Sockets.UdpSingleSourceMulticastClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1bc6c46c38398b8ad0ec898422553ff48a74b075" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53525504" /></Metadata><TypeSignature Language="C#" Value="public class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpSingleSourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpSingleSourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpSingleSourceMulticastClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Odbiornik klienta na ruch multiemisji z jednego źródła, znany także jako źródła określonego multiemisji (SSM).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Adres multiemisji grupy i nadawcy, adres źródłowy musi być znane.  
  
 Oprócz odbierania danych multiemisji od określonego nadawcy <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> klient może także wysłać danych emisji pojedynczej do nadawcy.  
  
 Odbieranie multiemisji z wielu źródeł i podczas źródła nie są znane z wyprzedzeniem, użyj <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> klasy zamiast tego.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress sourceAddress, class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceAddress As IPAddress, groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpSingleSourceMulticastClient(System::Net::IPAddress ^ sourceAddress, System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpSingleSourceMulticastClient : System.Net.IPAddress * System.Net.IPAddress * int -&gt; System.Net.Sockets.UdpSingleSourceMulticastClient" Usage="new System.Net.Sockets.UdpSingleSourceMulticastClient (sourceAddress, groupAddress, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">Adres nadawcy źródła dla tego odbiornika do subskrybowania.</param>
        <param name="groupAddress">Adres grupy multiemisji dla tego odbiornika do subskrybowania.</param>
        <param name="localPort">Port lokalny dla tego odbiornika można powiązać.</param>
        <summary>Tworzy nową <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> klienta protokołu UDP, który można subskrybować adres grupy i odbierają datagramy z jednego źródła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> Konstruktor kojarzy gniazdo multiemisji UDP z grupy adres i port, nie powiązanie lub w przeciwnym razie użyj gniazda.  
  
 `groupAddress` Parametr może być multiemisji IPv6 lub IPv4 adres. Jednak z rodziny adresów `sourceAddress` i `groupAddress` parametry muszą takie same.  
  
 `localPort` Parametru nie należy określić port, mniej niż 1024.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceAddress" /> i <paramref name="groupAddress" /> muszą być tej samej rodziny adresów.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceAddress" /> to odwołanie o wartości null (Nothing w języku Visual Basic).  
  
—lub— 
 <paramref name="groupAddress" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="localPort" /> jest mniejsza niż 0. 
—lub— 
 <paramref name="localPort" /> jest większy niż 65 535.</exception>
        <exception cref="T:System.Net.Sockets.SocketException"><paramref name="localPort" /> jest mniejsze niż 1024</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginJoinGroup : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginJoinGroup (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Metoda wywołania zwrotnego do wywołania po zakończeniu operacji.</param>
        <param name="state">Informacje o stanie opcjonalne do przekazania do <paramref name="callback" /> metody dla tej operacji.</param>
        <summary>Tworzy powiązanie gniazda i rozpoczyna się operacji tworzenia sprzężenia, do grupy multiemisji, aby umożliwić datagramy z pojedynczego adresu źródłowego.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Odwołujący się tej operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> Metoda wiąże gniazdo multiemisji UDP port lokalny i dołączeniu do grupy multiemisji, aby umożliwić datagramy z pojedynczego adresu źródłowego. Adres multiemisji grupy, adres źródłowy i port lokalny, aby powiązać są określone w <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> konstruktora.  
  
 Metoda określona w `callback` parametru jest wywoływana po wykonaniu operacji do dołączenia do grupy multiemisji.  
  
 Jeśli jest to wymagane przez środowisko uruchomieniowe, <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> metoda wykonuje sprawdzanie zasad, aby sprawdzić, czy klient może uzyskać dostęp do grupy multiemisji. Jeśli klient nie ma mieć dostęp, <xref:System.Net.Sockets.SocketException> zgłaszany <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Już został dołączony grupy multiemisji lub operacji tworzenia sprzężenia jest obecnie w toku.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromSource(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromSource (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveFromSource : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginReceiveFromSource (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Bufor do przechowywania odebranych danych.</param>
        <param name="offset">Przesunięcie w bajtach od początku <paramref name="buffer" /> przechowywania danych.</param>
        <param name="count">Maksymalna liczba bajtów do odbierania i przechowywać w <paramref name="buffer" />.</param>
        <param name="callback">Metoda wywołania zwrotnego do wywołania po zakończeniu operacji.</param>
        <param name="state">Informacje o stanie opcjonalne do przekazania do <paramref name="callback" /> metody dla tej operacji.</param>
        <summary>Rozpoczyna się operacji odbierania pakietów z dołączonym do grupy multiemisji i wywołuje określonego wywołania zwrotnego, gdy pakiet jest już dostępna w grupie od określonego nadawcy.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Odwołujący się tej operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> Metoda rozpoczyna operacji odbierania pakietów UDP z dołączonym do grupy multiemisji od jednego nadawcy. Port lokalny, grupy multiemisji i adres źródłowy nadawcy są określone w <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> konstruktora. Multiemisji klient musi również zostały wykonane na przyłączenie do grupy multiemisji.  
  
 Metoda określona w `callback` parametru jest wywoływana, gdy odebrał pakiet.  
  
 Istnieje możliwość mają błąd gniazda w przypadku operacji odbierania niepowodzenia synchronicznie, mimo że jest to rzadkie przy użyciu protokołu UDP. Jeśli wystąpi błąd gniazda, <xref:System.Net.Sockets.SocketException> zgłaszany. Odebrano błąd jest określony jako członek <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> jest mniejsza niż 0. 
—lub— 
 <paramref name="offset" /> jest większa niż długość <paramref name="buffer" />.  
  
—lub— 
 <paramref name="count" /> jest mniejsza niż 0. 
—lub— 
 <paramref name="offset" /> plus wartość licznika jest większa niż długość <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">Grupy multiemisji nie został dołączony.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda do odbierania.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToSource(unsigned int8[] buffer, int32 offset, int32 count, int32 remotePort, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToSource (buffer As Byte(), offset As Integer, count As Integer, remotePort As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, int remotePort, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendToSource : byte[] * int * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginSendToSource (buffer, offset, count, remotePort, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remotePort" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Bufor, który zawiera dane do wysłania.</param>
        <param name="offset">Przesunięcie w bajtach od początku <paramref name="buffer" /> do odczytywania danych do wysłania.</param>
        <param name="count">Liczba bajtów do wysłania z <paramref name="buffer" />.</param>
        <param name="remotePort">Port zdalny, do którego pakiet jest do wysłania. Zdalny adres jest określony przez <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /> konstruktora.</param>
        <param name="callback">Metoda wywołania zwrotnego do wywołania po zakończeniu operacji.</param>
        <param name="state">Informacje o stanie opcjonalne do przekazania do <paramref name="callback" /> metody dla tej operacji.</param>
        <summary>Rozpoczyna operację wysyłania pakietów emisji pojedynczej do wcześniej określonego źródła.</summary>
        <returns><see cref="T:System.IAsyncResult" /> Odwołujący się tej operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> Metoda rozpoczyna operacji wysyłania pakietów UDP do wcześniej określonego źródła.  
  
 Niektóre protokoły dzięki tym informacjom można przekazać sterowanie przepływem, jakości statystyki dotyczące usługi lub odzyskiwania wiadomości.  
  
 Metoda określona w `callback` parametru jest wywoływana, gdy pakiet został wysłany.  
  
 Klient musi zostały wykonane na przyłączenie do grupy multiemisji.  
  
 Jeśli port docelowy określony w `remotePort` parametr jest mniejsza niż 1024 <xref:System.Net.Sockets.SocketException> zgłaszany <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Istnieje możliwość mają błąd gniazda w przypadku operacji wysyłania niepowodzenia synchronicznie, mimo że jest to rzadkie przy użyciu protokołu UDP. Jeśli wystąpi błąd gniazda, <xref:System.Net.Sockets.SocketException> zgłaszany. Odebrano błąd jest określony jako członek <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> jest mniejsza niż 0. 
—lub— 
 <paramref name="offset" /> jest większa niż długość <paramref name="buffer" />.  
  
—lub— 
 <paramref name="count" /> jest mniejsza niż 0. 
—lub— 
 <paramref name="offset" /> plus wartość licznika jest większa niż długość <paramref name="buffer" />.  
  
—lub— 
 <paramref name="remotePort" /> jest mniejszy niż 0 lub większy niż 65 535.</exception>
        <exception cref="T:System.InvalidOperationException">Grupy multiemisji nie został dołączony.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpSingleSourceMulticastClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pozostawia grupę multiemisji i zwalnia wszystkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> klasy i podstawowych <see cref="T:System.Net.Sockets.Socket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> po zakończeniu przy użyciu <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> Pozostawia metoda <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> w stanie uniemożliwiającym jego używanie. Po wywołaniu <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>, trzeba zwolnić wszystkie odwołania do <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć, <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> zajmowaną przez wystąpienie.  
  
 Zawsze wywołuj <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> przed publikacją swoje ostatnie odwołanie do <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. W przeciwnym razie zasobów jest przy użyciu nie zostanie zwolniona, dopóki moduł odśmiecania pamięci wywołuje <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> obiektu <xref:System.Object.Finalize%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndJoinGroup : IAsyncResult -&gt; unit" Usage="udpSingleSourceMulticastClient.EndJoinGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Wynik operacji asynchronicznej join.</param>
        <summary>Kończy operację grupy asynchronicznego sprzężenia do grupy multiemisji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> Ukończeniu metody asynchroniczne wiązanie z operacją gniazda i Dołącz do grupy multiemisji.  
  
 Jeśli jest to wymagane przez środowisko uruchomieniowe, <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> metoda wykonuje sprawdzanie zasad, aby sprawdzić, czy klient może uzyskać dostęp do grupy multiemisji. Jeśli klient nie ma mieć dostęp, <xref:System.Net.Sockets.SocketException> zgłaszany <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Jeśli podczas wykonywania operacji łączenia grupy, występuje błąd gniazda <xref:System.Net.Sockets.SocketException> zgłaszany. Odebrano błąd jest określony jako członek <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="result" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromSource">
      <MemberSignature Language="C#" Value="public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromSource(class System.IAsyncResult result, [out] int32&amp; sourcePort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromSource (result As IAsyncResult, ByRef sourcePort As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromSource(IAsyncResult ^ result, [Runtime::InteropServices::Out] int % sourcePort);" />
      <MemberSignature Language="F#" Value="member this.EndReceiveFromSource : IAsyncResult *  -&gt; int" Usage="udpSingleSourceMulticastClient.EndReceiveFromSource (result, sourcePort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="sourcePort" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">Wynik asynchronicznej operacji odbioru.</param>
        <param name="sourcePort">Punkt końcowy źródła, gdy pakiet został odebrany z.</param>
        <summary>Kończy operację asynchroniczną odbierania pakietów z dołączonym do grupy multiemisji i zapewnia uzyskanych informacji.</summary>
        <returns>Długość w bajtach, wiadomości, przechowywane w <paramref name="buffer" /> parametr przekazany do <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> metody.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> Metoda kończy operację asynchroniczną do odbierania pakietów z jednego źródła do grupy multiemisji.  
  
 Jeśli występuje błąd gniazda podczas wykonywania operacji odbierania <xref:System.Net.Sockets.SocketException> zgłaszany. Odebrano błąd jest określony jako członek <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="result" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Grupy multiemisji nie został dołączony.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToSource">
      <MemberSignature Language="C#" Value="public void EndSendToSource (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToSource(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToSource (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToSource(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendToSource : IAsyncResult -&gt; unit" Usage="udpSingleSourceMulticastClient.EndSendToSource result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Wynik operacji asynchronicznej wysyłania.</param>
        <summary>Kończy operację wysyłania pakietów emisji pojedynczej do pojedynczego źródła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> Metoda kończy wysyłać pakietów do pojedynczego źródła wcześniej określoną operację asynchroniczną.  
  
 Jeśli występuje błąd gniazda podczas wykonywania operacji odbierania <xref:System.Net.Sockets.SocketException> zgłaszany. Odebrano błąd jest określony jako członek <xref:System.Net.Sockets.SocketError> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="result" /> to odwołanie o wartości null (Nothing w języku Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Grupy multiemisji nie został dołączony.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> Został usunięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar w bajtach, bufor odbioru <see cref="T:System.Net.Sockets.Socket" /> używane dla operacji odbioru multiemisji w tym <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wystąpienia.</summary>
        <value>Zwraca <see cref="T:System.Int32" />.  
  
Rozmiar w bajtach buforu odbioru.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ReceiveBufferSize` Właściwości pobiera lub ustawia rozmiar w bajtach buforu odbioru w bazowym <xref:System.Net.Sockets.Socket> używane dla operacji odbioru multiemisji w tym <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> wystąpienia. W szczególności `ReceiveBufferSize` właściwość określa rozmiar buforu używany przez stos, po odebraniu pakietu, ale aplikacja nie została jeszcze wywołana <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> metody. Jeśli bufor jest wypełniane, a pakiety zachować mieszczących się przed wywołania aplikacji <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> i <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> będzie porzucane metod, stare pakietów. Aplikacja nigdy nie będą mogli odbierać pakiety stary i zamiast tego otrzymają nowszych pakietów, gdy wywołuje <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> metody.  
  
 Domyślny rozmiar buforu odbioru na Windows jest 8192.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony rozmiar buforu jest mniejszy niż 0.</exception>
        <exception cref="T:System.InvalidOperationException">Grupy multiemisji nie został dołączony.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> Został usunięty.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia rozmiar w bajtach, bufor wysyłania <see cref="T:System.Net.Sockets.Socket" /> używane dla operacji Wyślij multiemisji w tym <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wystąpienia.</summary>
        <value>Zwraca <see cref="T:System.Int32" />.  
  
Rozmiar w bajtach buforu wysyłania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość SendBufferSize pobiera lub ustawia rozmiar w bajtach buforu wysyłania podstawowych <xref:System.Net.Sockets.Socket> używane dla operacji Wyślij multiemisji w tym <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> wystąpienia.  
  
 W systemie Mac OS X <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> właściwość kontroluje liczbę bajtów może być w buforze stos sieciowy oczekiwania na wysyłane przed dodatkowych połączeń do <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> metoda będzie kończyć się niepowodzeniem. Aplikacje w systemie Mac OS X może być konieczne są zainteresowani, z tą właściwością, ich wysyłania dużej liczby pakietów UDP w krótkim przedziale czasu.  
  
 W Windows, wywołania <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> metoda będzie trwać dłużej wywołania zwrotnego w zależności od wartości <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> właściwość, jeśli bufor wysyłania jest pełny. <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> Właściwości formantów tylko tego, czy bufor użytkownika pozostanie zablokowana w pamięci fizycznej do momentu ukończenia wysyłania.  
  
 Domyślny rozmiar buforu wysyłania na Windows jest 8192.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony rozmiar buforu jest mniejszy niż 0.</exception>
        <exception cref="T:System.InvalidOperationException">Grupy multiemisji nie został dołączony.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> Został usunięty.</exception>
      </Docs>
    </Member>
  </Members>
</Type>