<Type Name="SocketType" FullName="System.Net.Sockets.SocketType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="59a4f2bc78d0362a266cd20872232210031507d3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30558511" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum SocketType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SocketType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.SocketType" />
  <TypeSignature Language="VB.NET" Value="Public Enum SocketType" />
  <TypeSignature Language="C++ CLI" Value="public enum class SocketType" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa typ gniazda który wystąpienia <see cref="T:System.Net.Sockets.Socket" /> reprezentuje klasy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przed <xref:System.Net.Sockets.Socket> może wysyłać i odbierać dane, należy najpierw utworzyć, używając <xref:System.Net.Sockets.AddressFamily>, <xref:System.Net.Sockets.SocketType>, a <xref:System.Net.Sockets.ProtocolType>. <xref:System.Net.Sockets.SocketType> Wyliczenie zapewnia kilka opcji definiujący typ <xref:System.Net.Sockets.Socket> który chcesz otworzyć.  
  
> [!NOTE]
>  <xref:System.Net.Sockets.SocketType> Czasami niejawnie wskazuje, które <xref:System.Net.Sockets.ProtocolType> jest używana w funkcji <xref:System.Net.Sockets.AddressFamily>. Na przykład, jeśli <xref:System.Net.Sockets.SocketType?displayProperty=nameWithType> jest <xref:System.Net.Sockets.SocketType.Dgram?displayProperty=nameWithType>, <xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType> jest zawsze <xref:System.Net.Sockets.ProtocolType.Udp?displayProperty=nameWithType>. Gdy <xref:System.Net.Sockets.SocketType?displayProperty=nameWithType> jest <xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType>, <xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType> jest zawsze <xref:System.Net.Sockets.ProtocolType.Tcp?displayProperty=nameWithType>. Jeśli próbujesz utworzyć <xref:System.Net.Sockets.Socket> z niezgodną kombinację <xref:System.Net.Sockets.Socket> zgłasza <xref:System.Net.Sockets.SocketException>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType> jako parametr <xref:System.Net.Sockets.Socket> konstruktora.  
  
 [!code-cpp[SelectModeExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SelectModeExample/CPP/source.cpp#1)]
 [!code-csharp[SelectModeExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SelectModeExample/CS/source.cs#1)]
 [!code-vb[SelectModeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SelectModeExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Sockets.AddressFamily" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.Sockets.Socket" />
  </Docs>
  <Members>
    <Member MemberName="Dgram">
      <MemberSignature Language="C#" Value="Dgram" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Dgram = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Dgram" />
      <MemberSignature Language="VB.NET" Value="Dgram" />
      <MemberSignature Language="C++ CLI" Value="Dgram" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Datagramy obsługuje są bez połączenia, zawodne wiadomości stała długość maksymalną (zazwyczaj jest to mała). Komunikaty mogą zostać utracone lub zduplikowane i może pojawiają się poza kolejnością. A <see cref="T:System.Net.Sockets.Socket" /> typu <see cref="F:System.Net.Sockets.SocketType.Dgram" /> wymaga połączenia przed wysyłania i odbierania danych i może komunikować się z wielu elementów równorzędnych. <see cref="F:System.Net.Sockets.SocketType.Dgram" /> korzysta z protokołu Datagram (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) i <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> Rodzina adresów.</summary>
      </Docs>
    </Member>
    <Member MemberName="Raw">
      <MemberSignature Language="C#" Value="Raw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Raw = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Raw" />
      <MemberSignature Language="VB.NET" Value="Raw" />
      <MemberSignature Language="C++ CLI" Value="Raw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Obsługuje dostęp do podstawowych protokołu transportu. Przy użyciu <see cref="F:System.Net.Sockets.SocketType.Raw" />, może komunikować się za pomocą protokołów, takich jak Internet Control Message Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) i Internet Group Management Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />). Aplikacja podać pełną nagłówek IP podczas wysyłania. Odebrane datagramy zwracane z nagłówka adresu IP i opcje bez zmian.</summary>
      </Docs>
    </Member>
    <Member MemberName="Rdm">
      <MemberSignature Language="C#" Value="Rdm" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Rdm = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Rdm" />
      <MemberSignature Language="VB.NET" Value="Rdm" />
      <MemberSignature Language="C++ CLI" Value="Rdm" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Obsługuje przesyłanie, przesyłania wiadomości, niezawodny sposób dostarczyć wiadomości i zachowuje granice wiadomości w danych. Nadchodzą komunikaty Rdm (niezawodnie dostarczyć wiadomości) unduplicated i w kolejności. Ponadto adres nadawcy jest powiadamiany o wiadomości zostaną utracone. Jeśli musisz zainicjować <see cref="T:System.Net.Sockets.Socket" /> przy użyciu <see cref="F:System.Net.Sockets.SocketType.Rdm" />, nie jest wymagane połączenie przed wysyłania i odbierania danych hosta zdalnego. Z <see cref="F:System.Net.Sockets.SocketType.Rdm" />, użytkownik może komunikować się z wielu elementów równorzędnych.</summary>
      </Docs>
    </Member>
    <Member MemberName="Seqpacket">
      <MemberSignature Language="C#" Value="Seqpacket" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Seqpacket = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Seqpacket" />
      <MemberSignature Language="VB.NET" Value="Seqpacket" />
      <MemberSignature Language="C++ CLI" Value="Seqpacket" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Udostępnia nawiązaniem połączenia i niezawodne dwukierunkowe przesyłanie strumienie bajtów uporządkowanej przez sieć. <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> nie zduplikowanych danych który zachowuje granic w ramach strumienia danych. A <see cref="T:System.Net.Sockets.Socket" /> typu <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> komunikuje się z jednym węzłem równorzędnym i wymaga połączenia z hostem zdalnym przed rozpoczęciem komunikacji.</summary>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="Stream" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Stream = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Stream" />
      <MemberSignature Language="VB.NET" Value="Stream" />
      <MemberSignature Language="C++ CLI" Value="Stream" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Obsługuje strumienie bajtów niezawodne, dwukierunkowe, opartego na połączeniach bez duplikatów danych i zachowania granic. A <see cref="T:System.Net.Sockets.Socket" /> tego typu komunikuje się z jednym węzłem równorzędnym i wymaga połączenia z hostem zdalnym przed rozpoczęciem komunikacji. <see cref="F:System.Net.Sockets.SocketType.Stream" /> używa Transmission Control Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) i <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> Rodzina adresów.</summary>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Unknown = int32(-1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Określa nieznany <see cref="Socket" /> typu.</summary>
      </Docs>
    </Member>
  </Members>
</Type>