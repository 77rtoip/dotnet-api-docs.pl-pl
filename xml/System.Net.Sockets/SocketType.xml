<Type Name="SocketType" FullName="System.Net.Sockets.SocketType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e0d8a8f27267a858b0821a519d3a27ae4aec5d39" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36549923" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum SocketType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SocketType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.SocketType" />
  <TypeSignature Language="VB.NET" Value="Public Enum SocketType" />
  <TypeSignature Language="C++ CLI" Value="public enum class SocketType" />
  <TypeSignature Language="F#" Value="type SocketType = " />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="2fbe5-101">Określa typ gniazda który wystąpienia <see cref="T:System.Net.Sockets.Socket" /> reprezentuje klasy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2fbe5-101">Specifies the type of socket that an instance of the <see cref="T:System.Net.Sockets.Socket" /> class represents.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fbe5-102">Przed <xref:System.Net.Sockets.Socket> może wysyłać i odbierać dane, należy najpierw utworzyć, używając <xref:System.Net.Sockets.AddressFamily>, <xref:System.Net.Sockets.SocketType>, a <xref:System.Net.Sockets.ProtocolType>.</span><span class="sxs-lookup"><span data-stu-id="2fbe5-102">Before a <xref:System.Net.Sockets.Socket> can send and receive data, it must first be created using an <xref:System.Net.Sockets.AddressFamily>, a <xref:System.Net.Sockets.SocketType>, and a <xref:System.Net.Sockets.ProtocolType>.</span></span> <span data-ttu-id="2fbe5-103"><xref:System.Net.Sockets.SocketType> Wyliczenie zapewnia kilka opcji definiujący typ <xref:System.Net.Sockets.Socket> który chcesz otworzyć.</span><span class="sxs-lookup"><span data-stu-id="2fbe5-103">The <xref:System.Net.Sockets.SocketType> enumeration provides several options for defining the type of <xref:System.Net.Sockets.Socket> that you intend to open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2fbe5-104"><xref:System.Net.Sockets.SocketType> Czasami niejawnie wskazuje, które <xref:System.Net.Sockets.ProtocolType> jest używana w funkcji <xref:System.Net.Sockets.AddressFamily>.</span><span class="sxs-lookup"><span data-stu-id="2fbe5-104"><xref:System.Net.Sockets.SocketType> sometimes implicitly indicates which <xref:System.Net.Sockets.ProtocolType> is used within an <xref:System.Net.Sockets.AddressFamily>.</span></span> <span data-ttu-id="2fbe5-105">Na przykład, jeśli <xref:System.Net.Sockets.SocketType?displayProperty=nameWithType> jest <xref:System.Net.Sockets.SocketType.Dgram?displayProperty=nameWithType>, <xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType> jest zawsze <xref:System.Net.Sockets.ProtocolType.Udp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2fbe5-105">For example, when the <xref:System.Net.Sockets.SocketType?displayProperty=nameWithType> is <xref:System.Net.Sockets.SocketType.Dgram?displayProperty=nameWithType>, the <xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType> is always <xref:System.Net.Sockets.ProtocolType.Udp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2fbe5-106">Gdy <xref:System.Net.Sockets.SocketType?displayProperty=nameWithType> jest <xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType>, <xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType> jest zawsze <xref:System.Net.Sockets.ProtocolType.Tcp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2fbe5-106">When the <xref:System.Net.Sockets.SocketType?displayProperty=nameWithType> is <xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType>, the <xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType> is always <xref:System.Net.Sockets.ProtocolType.Tcp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2fbe5-107">Jeśli próbujesz utworzyć <xref:System.Net.Sockets.Socket> z niezgodną kombinację <xref:System.Net.Sockets.Socket> zgłasza <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="2fbe5-107">If you try to create a <xref:System.Net.Sockets.Socket> with an incompatible combination, <xref:System.Net.Sockets.Socket> throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fbe5-108">W poniższym przykładzie użyto <xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType> jako parametr <xref:System.Net.Sockets.Socket> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="2fbe5-108">The following example uses <xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType> as a parameter to the <xref:System.Net.Sockets.Socket> constructor.</span></span>  
  
 [!code-cpp[SelectModeExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SelectModeExample/CPP/source.cpp#1)]
 [!code-csharp[SelectModeExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SelectModeExample/CS/source.cs#1)]
 [!code-vb[SelectModeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SelectModeExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Sockets.AddressFamily" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.Sockets.Socket" />
  </Docs>
  <Members>
    <Member MemberName="Dgram">
      <MemberSignature Language="C#" Value="Dgram" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Dgram = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Dgram" />
      <MemberSignature Language="VB.NET" Value="Dgram" />
      <MemberSignature Language="C++ CLI" Value="Dgram" />
      <MemberSignature Language="F#" Value="Dgram = 2" Usage="System.Net.Sockets.SocketType.Dgram" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fbe5-109">Datagramy obsługuje są bez połączenia, zawodne wiadomości stała długość maksymalną (zazwyczaj jest to mała).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-109">Supports datagrams, which are connectionless, unreliable messages of a fixed (typically small) maximum length.</span>
          </span>
          <span data-ttu-id="2fbe5-110">Komunikaty mogą zostać utracone lub zduplikowane i może pojawiają się poza kolejnością.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-110">Messages might be lost or duplicated and might arrive out of order.</span>
          </span>
          <span data-ttu-id="2fbe5-111">A <see cref="T:System.Net.Sockets.Socket" /> typu <see cref="F:System.Net.Sockets.SocketType.Dgram" /> wymaga połączenia przed wysyłania i odbierania danych i może komunikować się z wielu elementów równorzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-111">A <see cref="T:System.Net.Sockets.Socket" /> of type <see cref="F:System.Net.Sockets.SocketType.Dgram" /> requires no connection prior to sending and receiving data, and can communicate with multiple peers.</span>
          </span>
          <span data-ttu-id="2fbe5-112">
            <see cref="F:System.Net.Sockets.SocketType.Dgram" /> korzysta z protokołu Datagram (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) i <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-112">
              <see cref="F:System.Net.Sockets.SocketType.Dgram" /> uses the Datagram Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) and the <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /></span>
          </span>
          <span data-ttu-id="2fbe5-113">Rodzina adresów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-113">address family.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Raw">
      <MemberSignature Language="C#" Value="Raw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Raw = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Raw" />
      <MemberSignature Language="VB.NET" Value="Raw" />
      <MemberSignature Language="C++ CLI" Value="Raw" />
      <MemberSignature Language="F#" Value="Raw = 3" Usage="System.Net.Sockets.SocketType.Raw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fbe5-114">Obsługuje dostęp do podstawowych protokołu transportu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-114">Supports access to the underlying transport protocol.</span>
          </span>
          <span data-ttu-id="2fbe5-115">Przy użyciu <see cref="F:System.Net.Sockets.SocketType.Raw" />, może komunikować się za pomocą protokołów, takich jak Internet Control Message Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) i Internet Group Management Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-115">Using <see cref="F:System.Net.Sockets.SocketType.Raw" />, you can communicate using protocols like Internet Control Message Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) and Internet Group Management Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />).</span>
          </span>
          <span data-ttu-id="2fbe5-116">Aplikacja podać pełną nagłówek IP podczas wysyłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-116">Your application must provide a complete IP header when sending.</span>
          </span>
          <span data-ttu-id="2fbe5-117">Odebrane datagramy zwracane z nagłówka adresu IP i opcje bez zmian.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-117">Received datagrams return with the IP header and options intact.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Rdm">
      <MemberSignature Language="C#" Value="Rdm" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Rdm = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Rdm" />
      <MemberSignature Language="VB.NET" Value="Rdm" />
      <MemberSignature Language="C++ CLI" Value="Rdm" />
      <MemberSignature Language="F#" Value="Rdm = 4" Usage="System.Net.Sockets.SocketType.Rdm" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fbe5-118">Obsługuje przesyłanie, przesyłania wiadomości, niezawodny sposób dostarczyć wiadomości i zachowuje granice wiadomości w danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-118">Supports connectionless, message-oriented, reliably delivered messages, and preserves message boundaries in data.</span>
          </span>
          <span data-ttu-id="2fbe5-119">Nadchodzą komunikaty Rdm (niezawodnie dostarczyć wiadomości) unduplicated i w kolejności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-119">Rdm (Reliably Delivered Messages) messages arrive unduplicated and in order.</span>
          </span>
          <span data-ttu-id="2fbe5-120">Ponadto adres nadawcy jest powiadamiany o wiadomości zostaną utracone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-120">Furthermore, the sender is notified if messages are lost.</span>
          </span>
          <span data-ttu-id="2fbe5-121">Jeśli musisz zainicjować <see cref="T:System.Net.Sockets.Socket" /> przy użyciu <see cref="F:System.Net.Sockets.SocketType.Rdm" />, nie jest wymagane połączenie przed wysyłania i odbierania danych hosta zdalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-121">If you initialize a <see cref="T:System.Net.Sockets.Socket" /> using <see cref="F:System.Net.Sockets.SocketType.Rdm" />, you do not require a remote host connection before sending and receiving data.</span>
          </span>
          <span data-ttu-id="2fbe5-122">Z <see cref="F:System.Net.Sockets.SocketType.Rdm" />, użytkownik może komunikować się z wielu elementów równorzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-122">With <see cref="F:System.Net.Sockets.SocketType.Rdm" />, you can communicate with multiple peers.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Seqpacket">
      <MemberSignature Language="C#" Value="Seqpacket" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Seqpacket = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Seqpacket" />
      <MemberSignature Language="VB.NET" Value="Seqpacket" />
      <MemberSignature Language="C++ CLI" Value="Seqpacket" />
      <MemberSignature Language="F#" Value="Seqpacket = 5" Usage="System.Net.Sockets.SocketType.Seqpacket" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fbe5-123">Udostępnia nawiązaniem połączenia i niezawodne dwukierunkowe przesyłanie strumienie bajtów uporządkowanej przez sieć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-123">Provides connection-oriented and reliable two-way transfer of ordered byte streams across a network.</span>
          </span>
          <span data-ttu-id="2fbe5-124">
            <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> nie zduplikowanych danych który zachowuje granic w ramach strumienia danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-124">
              <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> does not duplicate data, and it preserves boundaries within the data stream.</span>
          </span>
          <span data-ttu-id="2fbe5-125">A <see cref="T:System.Net.Sockets.Socket" /> typu <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> komunikuje się z jednym węzłem równorzędnym i wymaga połączenia z hostem zdalnym przed rozpoczęciem komunikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-125">A <see cref="T:System.Net.Sockets.Socket" /> of type <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> communicates with a single peer and requires a remote host connection before communication can begin.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="Stream" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Stream = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Stream" />
      <MemberSignature Language="VB.NET" Value="Stream" />
      <MemberSignature Language="C++ CLI" Value="Stream" />
      <MemberSignature Language="F#" Value="Stream = 1" Usage="System.Net.Sockets.SocketType.Stream" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fbe5-126">Obsługuje strumienie bajtów niezawodne, dwukierunkowe, opartego na połączeniach bez duplikatów danych i zachowania granic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-126">Supports reliable, two-way, connection-based byte streams without the duplication of data and without preservation of boundaries.</span>
          </span>
          <span data-ttu-id="2fbe5-127">A <see cref="T:System.Net.Sockets.Socket" /> tego typu komunikuje się z jednym węzłem równorzędnym i wymaga połączenia z hostem zdalnym przed rozpoczęciem komunikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-127">A <see cref="T:System.Net.Sockets.Socket" /> of this type communicates with a single peer and requires a remote host connection before communication can begin.</span>
          </span>
          <span data-ttu-id="2fbe5-128">
            <see cref="F:System.Net.Sockets.SocketType.Stream" /> używa Transmission Control Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) i <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-128">
              <see cref="F:System.Net.Sockets.SocketType.Stream" /> uses the Transmission Control Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) and the <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /></span>
          </span>
          <span data-ttu-id="2fbe5-129">Rodzina adresów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-129">address family.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Unknown = int32(-1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = -1" Usage="System.Net.Sockets.SocketType.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fbe5-130">Określa nieznany <see cref="Socket" /> typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fbe5-130">Specifies an unknown <see cref="Socket" /> type.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>