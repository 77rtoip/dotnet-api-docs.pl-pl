<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TcpListener.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac570b4efe2d402b27e3285b56bb7a50aff7def9e09.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">70b4efe2d402b27e3285b56bb7a50aff7def9e09</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpListener">
          <source>Listens for connections from TCP network clients.</source>
          <target state="translated">Nasłuchuje połączeń z klientami sieci TCP.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpListener">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> class provides simple methods that listen for and accept incoming connection requests in blocking synchronous mode.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> Klasa udostępnia prosty metody, które nasłuchiwania i akceptowania żądań połączenia przychodzących w trybie synchronicznym blokowania.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpListener">
          <source>You can use either a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> or a <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> to connect with a <ph id="ph3">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph>.</source>
          <target state="translated">Możesz użyć dowolnej <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> lub <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> nawiązać połączenia z <ph id="ph3">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpListener">
          <source>Create a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> using an <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph>, a Local IP address and port number, or just a port number.</source>
          <target state="translated">Utwórz <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> przy użyciu <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph>, lokalny adres IP i numer portu lub po prostu numeru portu.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpListener">
          <source>Specify <ph id="ph1">&lt;xref:System.Net.IPAddress.Any&gt;</ph> for the local IP address and 0 for the local port number if you want the underlying service provider to assign those values for you.</source>
          <target state="translated">Określ <ph id="ph1">&lt;xref:System.Net.IPAddress.Any&gt;</ph> lokalny adres IP i numerem portu lokalnego, jeśli chcesz podstawowego dostawcy usług można przypisać te wartości 0.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpListener">
          <source>If you choose to do this, you can use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A&gt;</ph> property to identify the assigned information, after the socket has connected.</source>
          <target state="translated">Jeśli chcesz to zrobić, możesz użyć <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A&gt;</ph> właściwość do identyfikacji przypisanej informacje po gniazda został podłączony.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpListener">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> method to begin listening for incoming connection requests.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> metody rozpoczęcie nasłuchiwania żądań połączenia przychodzących.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpListener">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> will queue incoming connections until you either call the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> method or it has queued <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.MaxConnections&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> Kolejka połączeń przychodzących, aż albo wywołać <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> lub metoda ma umieszczonych w kolejce <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.MaxConnections&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpListener">
          <source>Use either <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> to pull a connection from the incoming connection request queue.</source>
          <target state="translated">Użyj jednej <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> lub <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> ściągania połączenia z kolejki żądań połączenia przychodzących.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpListener">
          <source>These two methods will block.</source>
          <target state="translated">Blokuje te dwie metody.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpListener">
          <source>If you want to avoid blocking, you can use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Pending%2A&gt;</ph> method first to determine if connection requests are available in the queue.</source>
          <target state="translated">Jeśli chcesz uniknąć zablokowania, można użyć <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Pending%2A&gt;</ph> metody, aby ustalić, czy żądania połączenia są dostępne w kolejce.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpListener">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> method to close the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph>.</source>
          <target state="translated">Wywołanie <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> metody, aby zamknąć <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpListener">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> method does not close any accepted connections.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> — Metoda nie Zamknij wszystkie połączenia zaakceptowane.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpListener">
          <source>You are responsible for closing these separately.</source>
          <target state="translated">Jest odpowiedzialny za zamknięcie je oddzielnie.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpListener">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu tworzy <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpListener">
          <source>See <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> for a client example.</source>
          <target state="translated">Zobacz <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> na przykład klienta.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpListener">
          <source>to establish an outgoing connection or accept an incoming request.</source>
          <target state="translated">Do nawiązywania połączenia wychodzącego, lub zaakceptować żądania przychodzącego.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpListener">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
          <source>The port on which to listen for incoming connection attempts.</source>
          <target state="translated">Port do nasłuchiwania przychodzących prób połączenia.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> class that listens on the specified port.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> klasy, która nasłuchuje na określonym porcie.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
          <source>This constructor is obsolete.</source>
          <target state="translated">Ten konstruktor jest przestarzały.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType&gt;</ph> constructors.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> lub <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType&gt;</ph> konstruktorów.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
          <source>This constructor allows you to specify the port number on which to listen for incoming connection attempts.</source>
          <target state="translated">Ten konstruktor służy do określenia numeru portu do nasłuchiwania przychodzących prób połączenia.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
          <source>With this constructor, the underlying service provider assigns the most appropriate network address.</source>
          <target state="translated">W tym konstruktorze podstawowego dostawcy usług przypisuje najbardziej odpowiedniego adresu sieciowego.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
          <source>If you do not care which local port is used, you can specify 0 for the port number.</source>
          <target state="translated">Jeśli nie interesują port lokalny, który jest używany, można określić 0 numeru portu.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
          <source>In this case, the service provider will assign an available ephemeral port number.</source>
          <target state="translated">W takim przypadku dostawcy usług przypisze liczbę dostępnych portów tymczasowych.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
          <source>If you use this approach, you can discover what local network address and port number has been assigned by using the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A&gt;</ph> property.</source>
          <target state="translated">Jeśli używasz tej metody, można wykryć jakie sieci lokalnej adres i numer portu przypisany przy użyciu <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> method to begin listening for incoming connection attempts.</source>
          <target state="translated">Wywołanie <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> metody rozpoczęcie nasłuchiwania przychodzących próby nawiązania połączenia.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> using a local port number.</source>
          <target state="translated">Poniższy przykład kodu tworzy <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> za pomocą numeru portu lokalnego.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> nie jest pomiędzy <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> i <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that represents the local endpoint to which to bind the listener <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> Reprezentujący lokalny punkt końcowy, do którego należy powiązać odbiornika <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> class with the specified local endpoint.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> klasy z określonym lokalnego punktu końcowego.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
          <source>This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</source>
          <target state="translated">Ten konstruktor służy do określenia lokalny adres IP i numer portu, na którym do nasłuchiwania przychodzących połączeń prób.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
          <source>Before using this constructor, you must create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using the desired local IP address and port number.</source>
          <target state="translated">Przed użyciem tego konstruktora, należy utworzyć <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> przy użyciu żądanego lokalnego IP adres i numer portu.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
          <source>Pass this <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> to the constructor as the <ph id="ph2">`localEP`</ph> parameter.</source>
          <target state="translated">Przekazany <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> do konstruktora jako <ph id="ph2">`localEP`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
          <source>If you do not care which local address is assigned, you can create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using <ph id="ph2">&lt;xref:System.Net.IPAddress.Any?displayProperty=nameWithType&gt;</ph> as the address parameter, and the underlying service provider will assign the most appropriate network address.</source>
          <target state="translated">Jeśli nie interesują, których adres lokalny jest przypisany, można utworzyć <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> przy użyciu <ph id="ph2">&lt;xref:System.Net.IPAddress.Any?displayProperty=nameWithType&gt;</ph> jako parametr adres i podległej usłudze dostawcy przypisze najbardziej odpowiedniego adresu sieciowego.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
          <source>This might help simplify your application if you have multiple network interfaces.</source>
          <target state="translated">Może to ułatwić uprościć aplikacji, jeśli masz wiele interfejsów sieciowych.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
          <source>If you do not care which local port is used, you can create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using 0 for the port number.</source>
          <target state="translated">Jeśli nie interesują port lokalny, który jest używany, można utworzyć <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> przy użyciu 0 numeru portu.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
          <source>In this case, the service provider will assign an available ephemeral port number.</source>
          <target state="translated">W takim przypadku dostawcy usług przypisze liczbę dostępnych portów tymczasowych.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
          <source>If you use this approach, you can discover what local network address and port number has been assigned by using the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A&gt;</ph> property.</source>
          <target state="translated">Jeśli używasz tej metody, można wykryć jakie sieci lokalnej adres i numer portu przypisany przy użyciu <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> method to begin listening for incoming connection attempts.</source>
          <target state="translated">Wywołanie <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> metody rozpoczęcie nasłuchiwania przychodzących próby nawiązania połączenia.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>śledzenia sieci w programie .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
          <source>The following code example creates an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> class using the local endpoint.</source>
          <target state="translated">Poniższy przykład kodu tworzy wystąpienie <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> przy użyciu lokalnego punktu końcowego.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> that represents the local IP address.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> Reprezentujący lokalny adres IP.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
          <source>The port on which to listen for incoming connection attempts.</source>
          <target state="translated">Port do nasłuchiwania przychodzących prób połączenia.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> class that listens for incoming connection attempts on the specified local IP address and port number.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> klasy, która nasłuchuje przychodzących połączeń próby w określonym lokalnego IP adres i numer portu.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
          <source>This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</source>
          <target state="translated">Ten konstruktor służy do określenia lokalny adres IP i numer portu, na którym do nasłuchiwania przychodzących połączeń prób.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
          <source>Before calling this constructor you must first create an <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> using the desired local address.</source>
          <target state="translated">Przed wywołaniem konstruktora należy najpierw utworzyć <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> przy użyciu żądanego adresu lokalnego.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
          <source>Pass this <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> to the constructor as the <ph id="ph2">`localaddr`</ph> parameter.</source>
          <target state="translated">Przekazany <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> do konstruktora jako <ph id="ph2">`localaddr`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
          <source>If you do not care which local address is assigned, specify <ph id="ph1">&lt;xref:System.Net.IPAddress.Any?displayProperty=nameWithType&gt;</ph> for the <ph id="ph2">`localaddr`</ph> parameter, and the underlying service provider will assign the most appropriate network address.</source>
          <target state="translated">Jeśli nie interesują, których adres lokalny jest przypisany, określ <ph id="ph1">&lt;xref:System.Net.IPAddress.Any?displayProperty=nameWithType&gt;</ph> dla <ph id="ph2">`localaddr`</ph> parametr i podstawowego dostawcy usług przypisze najbardziej odpowiedniego adresu sieciowego.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
          <source>This might help simplify your application if you have multiple network interfaces.</source>
          <target state="translated">Może to ułatwić uprościć aplikacji, jeśli masz wiele interfejsów sieciowych.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
          <source>If you do not care which local port is used, you can specify 0 for the port number.</source>
          <target state="translated">Jeśli nie interesują port lokalny, który jest używany, można określić 0 numeru portu.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
          <source>In this case, the service provider will assign an available port number between 1024 and 5000.</source>
          <target state="translated">W takim przypadku dostawcy usług przypisze numeru portu dostępna od 1024 do 5000.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
          <source>If you use this approach, you can discover what local network address and port number has been assigned by using the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A&gt;</ph> property.</source>
          <target state="translated">Jeśli używasz tej metody, można wykryć jakie sieci lokalnej adres i numer portu przypisany przy użyciu <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> method to begin listening for incoming connection attempts.</source>
          <target state="translated">Wywołanie <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> metody rozpoczęcie nasłuchiwania przychodzących próby nawiązania połączenia.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>śledzenia sieci w programie .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
          <source>The following code example creates an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> class using a local IP address and port number.</source>
          <target state="translated">Poniższy przykład kodu tworzy wystąpienie <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> przy użyciu lokalny adres IP i port numer.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="localaddr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localaddr" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> nie jest pomiędzy <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> i <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptSocket">
          <source>Accepts a pending connection request.</source>
          <target state="translated">Akceptuje żądanie oczekujące połączenia.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptSocket">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> used to send and receive data.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> używany do wysyłania i odbierania danych.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocket">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> is a blocking method that returns a <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> that you can use to send and receive data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> to blokującego metoda, która zwraca <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> czy służy do wysyłania i odbierania danych.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocket">
          <source>If you want to avoid blocking, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Pending%2A&gt;</ph> method to determine if connection requests are available in the incoming connection queue.</source>
          <target state="translated">Jeśli chcesz uniknąć zablokowania, użyj <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Pending%2A&gt;</ph> metodę, aby sprawdzić, czy żądania połączenia są dostępne w kolejce połączeń przychodzących.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocket">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returned is initialized with the IP address and port number of the remote host.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> Zwracane jest inicjowany z adres i port numer IP hosta zdalnego.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocket">
          <source>You can use any of the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Receive%2A&gt;</ph> methods available in the <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class to communicate with the remote host.</source>
          <target state="translated">Można użyć dowolnego z <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Receive%2A&gt;</ph> metod w <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> klasy do komunikowania się ze zdalnym hostem.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocket">
          <source>When you are finished using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, be sure to call its <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Close%2A&gt;</ph> method.</source>
          <target state="translated">Po zakończeniu przy użyciu <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, pamiętaj wywołać jej <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Close%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocket">
          <source>If your application is relatively simple, consider using the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> method rather than the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> method.</source>
          <target state="translated">Jeśli aplikacja jest stosunkowo proste, należy rozważyć użycie <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> metody zamiast <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocket">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> Umożliwia proste metod wysyłania i odbierania danych przez sieć w trybie synchronicznym blokowania.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocket">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocket">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>śledzenia sieci w programie .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocket">
          <source>In the following code example, the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> method is used to return a <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">W poniższym przykładzie kodu <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> metoda służy do zwracania <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocket">
          <source>This <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> is used to communicate with the newly connected client.</source>
          <target state="translated">To <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> jest używany do komunikacji z nowo połączony klient.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptSocket">
          <source>The listener has not been started with a call to <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpListener.Start" /&gt;</ph>.</source>
          <target state="translated">Odbiornik nie został uruchomiony z wywołaniem do <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpListener.Start" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
          <source>Accepts a pending connection request as an asynchronous operation.</source>
          <target state="translated">Akceptuje żądanie połączenia oczekujące jako operację asynchroniczną.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph></source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Obiekt zadania reprezentujący operację asynchroniczną.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
          <source>The <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> property on the task object returns a <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> used to send and receive data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> Zwraca właściwości dla obiektu task <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> używany do wysyłania i odbierania danych.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
          <source>This operation will not block.</source>
          <target state="translated">Ta operacja nie będzie blokować.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the socket connection has been accepted.</source>
          <target state="translated">Zwrócona <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> obiektu ukończy po zaakceptowaniu połączenia gniazda.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returned in <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> is initialized with the IP address and port number of the remote host.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> Zwracane w <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> jest inicjowany z adres i port numer IP hosta zdalnego.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
          <source>You can use any of the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Receive%2A&gt;</ph> methods available in the <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class to communicate with the remote host.</source>
          <target state="translated">Można użyć dowolnego z <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Receive%2A&gt;</ph> metod w <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> klasy do komunikowania się ze zdalnym hostem.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
          <source>When you are finished using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, be sure to call its <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Close%2A&gt;</ph> method.</source>
          <target state="translated">Po zakończeniu przy użyciu <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, pamiętaj wywołać jej <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Close%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
          <source>If your application is relatively simple, consider using the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> method rather than the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A&gt;</ph> method.</source>
          <target state="translated">Jeśli aplikacja jest stosunkowo proste, należy rozważyć użycie <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> metody zamiast <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> Umożliwia proste metod wysyłania i odbierania danych przez sieć w trybie synchronicznym blokowania.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>śledzenia sieci w programie .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
          <source>The listener has not been started with a call to <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpListener.Start" /&gt;</ph>.</source>
          <target state="translated">Odbiornik nie został uruchomiony z wywołaniem do <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpListener.Start" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
          <source>Accepts a pending connection request.</source>
          <target state="translated">Akceptuje żądanie oczekujące połączenia.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> used to send and receive data.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> używany do wysyłania i odbierania danych.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> is a blocking method that returns a <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> that you can use to send and receive data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> to blokującego metoda, która zwraca <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> czy służy do wysyłania i odbierania danych.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Pending%2A&gt;</ph> method to determine if connection requests are available in the incoming connection queue if you want to avoid blocking.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Pending%2A&gt;</ph> metody do ustalenia, czy są dostępne w kolejce połączenia przychodzące żądania połączenia, jeśli chcesz uniknąć zablokowania.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> of the returned <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType&gt;</ph> metodę, aby uzyskać podstawową <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> zwracana <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> will provide you with methods for sending and receiving with the remote host.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> Zapewnia metody do wysyłania i odbierania z hosta zdalnego.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
          <source>When you are through with the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>, be sure to call its <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method.</source>
          <target state="translated">Jeśli jesteś za pośrednictwem z <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>, należy wywołać jej <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
          <source>If you want greater flexibility than a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> offers, consider using <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph>.</source>
          <target state="translated">Jeśli chcesz, aby większą elastyczność niż <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> oferty, rozważ użycie <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>śledzenia sieci w programie .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
          <source>In the following code example, the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> method is used to return a <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</source>
          <target state="translated">W poniższym przykładzie kodu <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> metoda służy do zwracania <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
          <source>This <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> is used to communicate with the newly connected client.</source>
          <target state="translated">To <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> jest używany do komunikacji z nowo połączony klient.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
          <source>The listener has not been started with a call to <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpListener.Start" /&gt;</ph>.</source>
          <target state="translated">Odbiornik nie został uruchomiony z wywołaniem do <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpListener.Start" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
          <source>Use the <ph id="ph1">&lt;see cref="P:System.Net.Sockets.SocketException.ErrorCode" /&gt;</ph> property to obtain the specific error code.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;see cref="P:System.Net.Sockets.SocketException.ErrorCode" /&gt;</ph> właściwość, aby otrzymać kod błędu.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
          <source>When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Po uzyskaniu ten kod, mogą odwoływać się do usługi Windows Sockets w wersji 2 interfejsu API błąd kodu dokumentacji w witrynie MSDN szczegółowy opis błędu.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
          <source>Accepts a pending connection request as an asynchronous operation.</source>
          <target state="translated">Akceptuje żądanie połączenia oczekujące jako operację asynchroniczną.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph></source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Obiekt zadania reprezentujący operację asynchroniczną.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
          <source>The <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> property on the task object returns a <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> used to send and receive data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> Zwraca właściwości dla obiektu task <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> używany do wysyłania i odbierania danych.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
          <source>This operation will not block.</source>
          <target state="translated">Ta operacja nie będzie blokować.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the TCP connection has been accepted.</source>
          <target state="translated">Zwrócona <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> obiektu ukończy po zaakceptowaniu połączenie TCP.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> of the returned <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> in the <ph id="ph4">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType&gt;</ph> metodę, aby uzyskać podstawową <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> zwracana <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> w <ph id="ph4">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> will provide you with methods for sending and receiving with the remote host.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> Zapewnia metody do wysyłania i odbierania z hosta zdalnego.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
          <source>When you are through with the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>, be sure to call its <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method.</source>
          <target state="translated">Jeśli jesteś za pośrednictwem z <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>, należy wywołać jej <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
          <source>If you want greater flexibility than a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> offers, consider using <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A&gt;</ph>.</source>
          <target state="translated">Jeśli chcesz, aby większą elastyczność niż <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> oferty, rozważ użycie <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> lub <ph id="ph3">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>śledzenia sieci w programie .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
          <source>The listener has not been started with a call to <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpListener.Start" /&gt;</ph>.</source>
          <target state="translated">Odbiornik nie został uruchomiony z wywołaniem do <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpListener.Start" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
          <source>Use the <ph id="ph1">&lt;see cref="P:System.Net.Sockets.SocketException.ErrorCode" /&gt;</ph> property to obtain the specific error code.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;see cref="P:System.Net.Sockets.SocketException.ErrorCode" /&gt;</ph> właściwość, aby otrzymać kod błędu.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
          <source>When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Po uzyskaniu ten kod, mogą odwoływać się do usługi Windows Sockets w wersji 2 interfejsu API błąd kodu dokumentacji w witrynie MSDN szczegółowy opis błędu.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpListener.Active">
          <source>Gets a value that indicates whether <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> is actively listening for client connections.</source>
          <target state="translated">Pobiera wartość wskazującą, czy <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> aktywnie nasłuchuje połączeń klienta.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.Active">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> is actively listening; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> jest aktywnie nasłuchujących; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.Active">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> can use this property to determine if the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> is currently listening for incoming connection attempts.</source>
          <target state="translated">Klasy wywodzące się z <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> tej właściwości można użyć do określenia, czy <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> obecnie nasłuchuje przychodzących próby nawiązania połączenia.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.Active">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Active%2A&gt;</ph> property can be used to avoid redundant <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> attempts.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Active%2A&gt;</ph> Właściwości może służyć do uniknięcia nadmiarowe <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> prób.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
          <source>A Boolean value that specifies whether to enable or disable NAT traversal.</source>
          <target state="translated">Wartość logiczna określająca, czy włączyć lub wyłączyć przechodzenia translatora adresów Sieciowych.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
          <source>Enables or disables Network Address Translation (NAT) traversal on a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> instance.</source>
          <target state="translated">Włącza lub wyłącza funkcję translacji adresów sieciowych (NAT) przechodzenie na <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A&gt;</ph> method is used to enable or disable NAT traversal for a <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A&gt;</ph> Metoda służy do włączania lub wyłączania przechodzenia translatora adresów Sieciowych dla <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
          <source>NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</source>
          <target state="translated">Przechodzenie translatora adresów Sieciowych mogą być dostarczane za pomocą protokołu Teredo, 6to4 lub tunelu protokołu ISATAP.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
          <source>When the <ph id="ph1">`allowed`</ph> parameter is false, the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph> option on the associated socket is set to <ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted&gt;</ph>.</source>
          <target state="translated">Gdy <ph id="ph1">`allowed`</ph> parametr ma wartość false, <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph> ma ustawioną wartość opcji dla gniazda skojarzone <ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
          <source>This explicitly disables NAT traversal for a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> instance.</source>
          <target state="translated">Powoduje wyłączenie jawnie przechodzenia translatora adresów Sieciowych dla <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
          <source>When the <ph id="ph1">`allowed`</ph> parameter is true, the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph> option on the associated socket is set to <ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.Unrestricted&gt;</ph>.</source>
          <target state="translated">Gdy <ph id="ph1">`allowed`</ph> parametr ma wartość true, <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph> ma ustawioną wartość opcji dla gniazda skojarzone <ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
          <source>This may allow NAT traversal for a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> depending on firewall rules in place on the system.</source>
          <target state="translated">Może to umożliwić Przechodzenie translatora adresów Sieciowych dla <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> w zależności od reguły zapory w miejscu, w systemie.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A&gt;</ph> method must be invoked prior to calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> method to begin listening for incoming connection requests (before the socket is bound).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A&gt;</ph> Metody należy wywołać przed wywołaniem <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> metodę, aby rozpocząć nasłuchuje przychodzących żądań połączenia (przed gniazda jest powiązany).</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
          <source>If <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A&gt;</ph> method is called after the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> method, then an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A&gt;</ph> metoda jest wywoływana po wykonaniu <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> metody, a następnie <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> zostanie wygenerowany.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
          <source>A Teredo address is an IPv6 address with the prefix of 2001::/32.</source>
          <target state="translated">Adresu Teredo jest adres IPv6 z prefiksem 2001:: / 32.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
          <source>Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</source>
          <target state="translated">Adresy protokołu Teredo można zwrócony przez normalne rozpoznawanie nazw DNS lub wyliczone jako adres IPv6 przypisany do interfejsu lokalnego.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /&gt;</ph> method was called after calling the <ph id="ph2">&lt;see cref="M:System.Net.Sockets.TcpListener.Start" /&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /&gt;</ph> Metoda została wywołana po wywołaniu <ph id="ph2">&lt;see cref="M:System.Net.Sockets.TcpListener.Start" /&gt;</ph> — metoda</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> Delegata, który odwołuje się do metody do wywołania po zakończeniu operacji.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the accept operation.</source>
          <target state="translated">Zdefiniowane przez użytkownika obiekt zawierający informacje na temat operacji accept.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Ten obiekt jest przekazywany do <bpt id="p1">&lt;c&gt;</bpt>wywołania zwrotnego<ept id="p1">&lt;/c&gt;</ept> delegować po zakończeniu operacji.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to accept an incoming connection attempt.</source>
          <target state="translated">Rozpoczyna operację asynchroniczną do akceptowania przychodzących próba połączenia.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous creation of the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> , Która odwołuje się asynchroniczne tworzenie <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A&gt;</ph> method.</source>
          <target state="translated">Asynchroniczną <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A&gt;</ph> musi być zakończona, wywołując <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`callback`</ph> delegate.</source>
          <target state="translated">Zazwyczaj metoda jest wywoływana przez <ph id="ph1">`callback`</ph> delegowanie.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">Ta metoda nie blokuje przed zakończeniem operacji.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> method.</source>
          <target state="translated">Aby zablokować przed zakończeniem operacji, należy użyć <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Aby uzyskać szczegółowe informacje o korzystaniu z modelem programowania asynchronicznego, zobacz <bpt id="p1">[</bpt>wywołanie asynchroniczne synchroniczne metody<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.RemoteEndPoint%2A&gt;</ph> property of the returned <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> to identify the remote host's network address and port number.</source>
          <target state="translated">Możesz wywołać <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.RemoteEndPoint%2A&gt;</ph> właściwości zwracana <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> do identyfikowania hosta zdalnego sieci adres i numer portu.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph3">http://msdn.microsoft.com/library/</ph><ept id="p1">](http://msdn.microsoft.com/library/)</ept> for a detailed description of the error.</source>
          <target state="translated">Jeśli zostanie wyświetlony <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, użyj <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> właściwość, aby otrzymać kod błędu i zapoznaj się z dokumentacji kodów błędów systemu Windows Sockets w wersji 2 interfejsu API w bibliotece MSDN pod <bpt id="p1">[</bpt> <ph id="ph3">http://msdn.microsoft.com/library/</ph> <ept id="p1">](http://msdn.microsoft.com/library/)</ept> dla szczegółowy Opis błędu.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>śledzenia sieci w programie .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A&gt;</ph> method to create and connect a socket.</source>
          <target state="translated">Poniższy przykład kodu pokazuje użycie <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A&gt;</ph> metody w celu utworzenia i połączenia gniazda.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
          <source>The callback delegate calls the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A&gt;</ph> method to end the asynchronous request.</source>
          <target state="translated">Wywołuje delegata wywołania zwrotnego <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A&gt;</ph> metody do zakończenia żądania asynchronicznego.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
          <source>An error occurred while attempting to access the socket.</source>
          <target state="translated">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> Został zamknięty.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> Delegata, który odwołuje się do metody do wywołania po zakończeniu operacji.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
          <source>A user-defined object containing information about the accept operation.</source>
          <target state="translated">Zdefiniowane przez użytkownika obiekt zawierający informacje na temat operacji accept.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Ten obiekt jest przekazywany do <bpt id="p1">&lt;c&gt;</bpt>wywołania zwrotnego<ept id="p1">&lt;/c&gt;</ept> delegować po zakończeniu operacji.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to accept an incoming connection attempt.</source>
          <target state="translated">Rozpoczyna operację asynchroniczną do akceptowania przychodzących próba połączenia.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous creation of the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> , Która odwołuje się asynchroniczne tworzenie <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A&gt;</ph> method.</source>
          <target state="translated">Asynchroniczną <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A&gt;</ph> musi być zakończona, wywołując <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`callback`</ph> delegate.</source>
          <target state="translated">Zazwyczaj metoda jest wywoływana przez <ph id="ph1">`callback`</ph> delegowanie.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">Ta metoda nie blokuje przed zakończeniem operacji.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> method.</source>
          <target state="translated">Aby zablokować przed zakończeniem operacji, należy użyć <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Aby uzyskać szczegółowe informacje o korzystaniu z modelem programowania asynchronicznego, zobacz <bpt id="p1">[</bpt>wywołanie asynchroniczne synchroniczne metody<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph3">http://msdn.microsoft.com/library/</ph><ept id="p1">](http://msdn.microsoft.com/library/)</ept> for a detailed description of the error.</source>
          <target state="translated">Jeśli zostanie wyświetlony <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, użyj <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> właściwość, aby otrzymać kod błędu i zapoznaj się z dokumentacji kodów błędów systemu Windows Sockets w wersji 2 interfejsu API w bibliotece MSDN pod <bpt id="p1">[</bpt> <ph id="ph3">http://msdn.microsoft.com/library/</ph> <ept id="p1">](http://msdn.microsoft.com/library/)</ept> dla szczegółowy Opis błędu.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>śledzenia sieci w programie .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A&gt;</ph> method to create and connect a socket.</source>
          <target state="translated">Poniższy przykład kodu pokazuje użycie <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A&gt;</ph> metody w celu utworzenia i połączenia gniazda.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
          <source>The callback delegate calls the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A&gt;</ph> method to end the asynchronous request.</source>
          <target state="translated">Wywołuje delegata wywołania zwrotnego <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A&gt;</ph> metody do zakończenia żądania asynchronicznego.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
          <source>An error occurred while attempting to access the socket.</source>
          <target state="translated">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> Został zamknięty.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.Create(System.Int32)">
          <source>The port on which to listen for incoming connection attempts.</source>
          <target state="translated">Port do nasłuchiwania przychodzących prób połączenia.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.Create(System.Int32)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> instance to listen on the specified port.</source>
          <target state="translated">Tworzy nową <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> wystąpienie do nasłuchiwania na określonym porcie.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.Create(System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph>.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.Create(System.Int32)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> instance to listen on the specified port.</source>
          <target state="translated">Nowy <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> wystąpienie do nasłuchiwania na określonym porcie.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to the <ph id="ph2">&lt;see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> Zwrócony przez wywołanie do <ph id="ph2">&lt;see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
          <source>Asynchronously accepts an incoming connection attempt and creates a new <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> to handle remote host communication.</source>
          <target state="translated">Asynchronicznie akceptuje przychodzące próba połączenia i tworzy nowy <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> do obsługi komunikacji hosta zdalnego.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> used to send and receive data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> Używany do wysyłania i odbierania danych.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
          <source>This method blocks until the operation is complete.</source>
          <target state="translated">Ukończ ten uniemożliwia metody do czasu tej operacji.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
          <source>To perform this operation synchronously, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> method.</source>
          <target state="translated">Aby wykonać tę operację synchronicznie, użyj <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.RemoteEndPoint%2A&gt;</ph> property of the returned <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> to identify the remote host's network address and port number.</source>
          <target state="translated">Możesz wywołać <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.RemoteEndPoint%2A&gt;</ph> właściwości zwracana <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> do identyfikowania hosta zdalnego sieci adres i numer portu.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph3">http://msdn.microsoft.com/library/</ph><ept id="p1">](http://msdn.microsoft.com/library/)</ept> for a detailed description of the error.</source>
          <target state="translated">Jeśli zostanie wyświetlony <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, użyj <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> właściwość, aby otrzymać kod błędu i zapoznaj się z dokumentacji kodów błędów systemu Windows Sockets w wersji 2 interfejsu API w bibliotece MSDN pod <bpt id="p1">[</bpt> <ph id="ph3">http://msdn.microsoft.com/library/</ph> <ept id="p1">](http://msdn.microsoft.com/library/)</ept> dla szczegółowy Opis błędu.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>śledzenia sieci w programie .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A&gt;</ph> method to create and connect a socket.</source>
          <target state="translated">Poniższy przykład kodu pokazuje użycie <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A&gt;</ph> metody w celu utworzenia i połączenia gniazda.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
          <source>The callback delegate calls the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A&gt;</ph> method to end the asynchronous request.</source>
          <target state="translated">Wywołuje delegata wywołania zwrotnego <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A&gt;</ph> metody do zakończenia żądania asynchronicznego.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Podstawowa <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> został zamknięty.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter was not created by a call to the <ph id="ph2">&lt;see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> Parametrów nie została utworzona przez wywołanie do <ph id="ph2">&lt;see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /&gt;</ph> method was previously called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /&gt;</ph> Wcześniej wywołano metodę.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
          <source>An error occurred while attempting to access the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Wystąpił błąd podczas próby uzyskania dostępu do <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to the <ph id="ph2">&lt;see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> Zwrócony przez wywołanie do <ph id="ph2">&lt;see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
          <source>Asynchronously accepts an incoming connection attempt and creates a new <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> to handle remote host communication.</source>
          <target state="translated">Asynchronicznie akceptuje przychodzące próba połączenia i tworzy nowy <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> do obsługi komunikacji hosta zdalnego.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> used to send and receive data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> Używany do wysyłania i odbierania danych.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
          <source>This method blocks until the operation is complete.</source>
          <target state="translated">Ukończ ten uniemożliwia metody do czasu tej operacji.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
          <source>To perform this operation synchronously, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> method.</source>
          <target state="translated">Aby wykonać tę operację synchronicznie, użyj <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.RemoteEndPoint%2A&gt;</ph> property of the underlying socket (<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph>) to identify the remote host's network address and port number.</source>
          <target state="translated">Możesz wywołać <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.RemoteEndPoint%2A&gt;</ph> właściwości podstawowej gniazda (<ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph>) do identyfikowania hosta zdalnego sieci adres i numer portu.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph3">http://msdn.microsoft.com/library/</ph><ept id="p1">](http://msdn.microsoft.com/library/)</ept> for a detailed description of the error.</source>
          <target state="translated">Jeśli zostanie wyświetlony <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, użyj <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> właściwość, aby otrzymać kod błędu i zapoznaj się z dokumentacji kodów błędów systemu Windows Sockets w wersji 2 interfejsu API w bibliotece MSDN pod <bpt id="p1">[</bpt> <ph id="ph3">http://msdn.microsoft.com/library/</ph> <ept id="p1">](http://msdn.microsoft.com/library/)</ept> dla szczegółowy Opis błędu.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>śledzenia sieci w programie .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A&gt;</ph> method to create and connect a socket.</source>
          <target state="translated">Poniższy przykład kodu pokazuje użycie <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A&gt;</ph> metody w celu utworzenia i połączenia gniazda.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
          <source>The callback delegate calls the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A&gt;</ph> method to end the asynchronous request.</source>
          <target state="translated">Wywołuje delegata wywołania zwrotnego <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A&gt;</ph> metody do zakończenia żądania asynchronicznego.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> allows only one underlying socket to listen to a specific port.</source>
          <target state="translated">Pobiera lub ustawia <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> wartość określająca, czy <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> zezwala na tylko jedną podstawowej gniazda do nasłuchiwania na konkretnym porcie.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> allows only one <ph id="ph3">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> to listen to a specific port; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> zezwala na tylko jedną <ph id="ph3">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> do nasłuchiwania na konkretnym porcie; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
          <source>.</source>
          <target state="translated">.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <ph id="ph2">&lt;see langword="false" /&gt;</ph> for all other versions.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="true" /&gt;</ph> dla systemu Windows Server 2003 i Windows XP z dodatkiem Service Pack 2 lub nowszej, a <ph id="ph2">&lt;see langword="false" /&gt;</ph> dla wszystkich innych wersji.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
          <source>By default, multiple listeners can listen to a specific port.</source>
          <target state="translated">Domyślnie wiele odbiorników można słuchać określonego portu.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
          <source>However, only one of the listeners can perform operations on the network traffic sent to the port.</source>
          <target state="translated">Jednak tylko jeden odbiorniki mogą wykonywać operacje na ruch sieciowy wysyłane do portu.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
          <source>If more than one listener attempts to bind to a particular port, then the one with the more specific IP address handles the network traffic sent to that port.</source>
          <target state="translated">Jeśli więcej niż jeden odbiornik próbuje powiązać z określonego portu, z bardziej określonego adresu IP obsługuje ruch sieciowy wysyłany do tego portu.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A&gt;</ph> property to prevent multiple listeners from listening to a specific port.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A&gt;</ph> właściwość, aby zapobiec wiele odbiorników nasłuchiwania na konkretnym porcie.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
          <source>Set this property before calling <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph>, or call the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> method and then set this property.</source>
          <target state="translated">Ustaw tę właściwość przed wywołaniem <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph>, lub zadzwoń <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> metody, a następnie ustaw dla tej właściwości.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
          <source>The following code example gets and sets the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A&gt;</ph> property.</source>
          <target state="translated">Poniższy przykładowy kod pobiera i ustawia <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> has been started.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph> Została uruchomiona.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
          <source>Call the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpListener.Stop" /&gt;</ph> method and then set the <ph id="ph2">&lt;see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /&gt;</ph> property.</source>
          <target state="translated">Wywołanie <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpListener.Stop" /&gt;</ph> metody, a następnie ustawić <ph id="ph2">&lt;see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
          <source>An error occurred when attempting to access the underlying socket.</source>
          <target state="translated">Wystąpił błąd podczas próby dostępu podstawowej gniazda.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Podstawowa <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> został zamknięty.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpListener.LocalEndpoint">
          <source>Gets the underlying <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> of the current <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph>.</source>
          <target state="translated">Pobiera odpowiadającego <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> bieżącego <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.LocalEndpoint">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> to which the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> is bound.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> Do którego <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> jest powiązany.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.LocalEndpoint">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A&gt;</ph> property to identify the local network interface and port number being used to listen for incoming client connection requests, after a socket connection has been made.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A&gt;</ph> właściwość do identyfikacji sieci lokalnej interfejsu i numer portu używany do nasłuchiwania przychodzących żądań połączenia po nawiązaniu połączenia gniazda.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.LocalEndpoint">
          <source>You must first cast this <ph id="ph1">&lt;xref:System.Net.EndPoint&gt;</ph> to an <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</source>
          <target state="translated">Należy to najpierw rzutować <ph id="ph1">&lt;xref:System.Net.EndPoint&gt;</ph> do <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.LocalEndpoint">
          <source>You can then call the <ph id="ph1">&lt;xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType&gt;</ph> property to retrieve the local IP address, and the <ph id="ph2">&lt;xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType&gt;</ph> property to retrieve the local port number.</source>
          <target state="translated">Można wywołać <ph id="ph1">&lt;xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType&gt;</ph> właściwości do pobrania lokalny adres IP i <ph id="ph2">&lt;xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType&gt;</ph> właściwości do pobrania numerem portu lokalnego.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.LocalEndpoint">
          <source>The following code example displays the local IP address and port number on which the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> is listening for incoming connection requests.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia lokalny adres IP i port numer, na którym <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> nasłuchuje przychodzących żądań połączeń.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.Pending">
          <source>Determines if there are pending connection requests.</source>
          <target state="translated">Określa, czy istnieją żądań oczekujących połączeń.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.Pending">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if connections are pending; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> w przypadku połączeń oczekujących; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Pending">
          <source>This non-blocking method determines if there are any pending connection requests.</source>
          <target state="translated">Metoda nieblokujące Określa, czy istnieją żadnych żądań oczekujących połączeń.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Pending">
          <source>Because the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> methods block execution until the <ph id="ph3">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> method has queued an incoming connection request, the <ph id="ph4">&lt;xref:System.Net.Sockets.TcpListener.Pending%2A&gt;</ph> method can be used to determine if connections are available before attempting to accept them.</source>
          <target state="translated">Ponieważ <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> metody zablokować wykonywanie do momentu <ph id="ph3">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> metody zostało w kolejce żądań połączenia przychodzących, <ph id="ph4">&lt;xref:System.Net.Sockets.TcpListener.Pending%2A&gt;</ph> metody można użyć do ustalenia, czy połączenia są dostępne, przed podjęciem próby je zaakceptować.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Pending">
          <source>The following code example checks the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Pending%2A&gt;</ph> method.</source>
          <target state="translated">Poniższy kod przykładowy kontroli <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Pending%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Pending">
          <source>If a connection request is waiting to be accepted, then a call to the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> method is made.</source>
          <target state="translated">Jeśli żądanie połączenia jest oczekuje na zatwierdzenie, następnie wywołania <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> staje się metody.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.Pending">
          <source>The listener has not been started with a call to <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpListener.Start" /&gt;</ph>.</source>
          <target state="translated">Odbiornik nie został uruchomiony z wywołaniem do <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpListener.Start" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpListener.Server">
          <source>Gets the underlying network <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Pobiera odnośnej sieci <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.Server">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Podstawowa <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.Server">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> creates a <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> to listen for incoming client connection requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> Tworzy <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> nasłuchiwanie przychodzących żądań połączeń klienta.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.Server">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> can use this property to get this <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">Klasy wywodzące się z <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> tej właściwości można użyć do rozwiązania tego <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.Server">
          <source>Use the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.Server%2A&gt;</ph> property if you require access beyond that which <ph id="ph3">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> provides.</source>
          <target state="translated">Użyj odpowiadającego <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> zwrócony przez <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.Server%2A&gt;</ph> właściwości, jeśli potrzebujesz dostępu poza <ph id="ph3">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> udostępnia.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.Server">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Server%2A&gt;</ph> property only returns the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used to listen for incoming client connection requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Server%2A&gt;</ph> Zwraca tylko właściwość <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> używane do nasłuchiwania przychodzących żądań połączenia klienta.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.Server">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> method to accept a pending connection request and obtain a <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> for sending and receiving data.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> metody, aby zaakceptować żądanie połączenia oczekujące i uzyskać <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> do wysyłania i odbierania danych.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.Server">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> method to accept a pending connection request and obtain a <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> for sending and receiving data.</source>
          <target state="translated">Można również użyć <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> metody, aby zaakceptować żądanie połączenia oczekujące i uzyskać <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> do wysyłania i odbierania danych.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.Server">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Server%2A&gt;</ph> property.</source>
          <target state="translated">Poniższy przykład kodu pokazuje użycie <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Server%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpListener.Server">
          <source>The underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> is retrieved and the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.Linger&gt;</ph><ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> option is configured to time out after 10 seconds if data still remains in the network buffer after the connection is closed.</source>
          <target state="translated">Podstawowa <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> są pobierane i <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.Linger&gt;</ph> <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> opcji jest skonfigurowany na potrzeby limit czasu po 10 sekundach, jeśli dane nadal pozostaje w buforze sieci po połączenie jest zamknięte.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpListener">
          <source>Starts listening for incoming connection requests.</source>
          <target state="translated">Rozpoczyna nasłuchiwanie przychodzących żądań połączenia.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.Start">
          <source>Starts listening for incoming connection requests.</source>
          <target state="translated">Rozpoczyna nasłuchiwanie przychodzących żądań połączenia.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> method initializes the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, binds it to a local endpoint, and listens for incoming connection attempts.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> Metoda inicjuje odpowiadającego <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>wiąże ją lokalnego punktu końcowego i nasłuchuje przychodzących próby nawiązania połączenia.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start">
          <source>If a connection request is received, the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> method will queue the request and continue listening for additional requests until you call the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> method.</source>
          <target state="translated">Jeśli żądanie połączenia zostanie odebrana, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> — metoda będzie umieścić żądania w kolejce i kontynuować nasłuchiwania dodatkowych żądań do czasu wywołania <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start">
          <source>If <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> receives a connection request after it has already queued the maximum number of connections, it will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> on the client.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> odbiera żądanie połączenia po ma już w kolejce maksymalną liczbę połączeń, zgłosi <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> na kliencie.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start">
          <source>To remove a connection from the incoming connection queue, use either the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> method.</source>
          <target state="translated">Aby usunąć połączenie z kolejki połączeń przychodzących, użyj <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> metody lub <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> method will remove a connection from the queue and return a <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> that you can use to send and receive data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> Metody spowoduje usunięcie połączenia z kolejki i zwróć <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> czy służy do wysyłania i odbierania danych.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> method will return a <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> that you can use to do the same.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> Metoda zwróci <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> można to zrobić.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start">
          <source>If your application only requires synchronous I/O, use <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph>.</source>
          <target state="translated">Jeśli aplikacja wymaga tylko synchroniczne we/wy, użyj <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start">
          <source>For more detailed behavioral control, use <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph>.</source>
          <target state="translated">Bardziej szczegółowe kontroli zachowania, należy użyć <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start">
          <source>Both of these methods block until a connection request is available in the queue.</source>
          <target state="translated">Obie te metody bloku, dopóki żądanie połączenia jest dostępna w kolejce.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> method to close the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> and stop listening.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> metody, aby zamknąć <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> i zatrzymać nasłuchiwania.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start">
          <source>You are responsible for closing your accepted connections separately.</source>
          <target state="translated">Jest odpowiedzialny za zamknięcie połączenia zaakceptowane oddzielnie.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>śledzenia sieci w programie .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start">
          <source>The following code example demonstrates how <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> is used to listen for incoming client connection attempts.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> służy do nasłuchiwania przychodzących próby połączenia klienta.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.Start">
          <source>Use the <ph id="ph1">&lt;see cref="P:System.Net.Sockets.SocketException.ErrorCode" /&gt;</ph> property to obtain the specific error code.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;see cref="P:System.Net.Sockets.SocketException.ErrorCode" /&gt;</ph> właściwość, aby otrzymać kod błędu.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.Start">
          <source>When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Po uzyskaniu ten kod, mogą odwoływać się do usługi Windows Sockets w wersji 2 interfejsu API błąd kodu dokumentacji w witrynie MSDN szczegółowy opis błędu.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>The maximum length of the pending connections queue.</source>
          <target state="translated">Maksymalna długość kolejki oczekujących połączeń.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>Starts listening for incoming connection requests with a maximum number of pending connection.</source>
          <target state="translated">Rozpoczyna nasłuchiwanie przychodzących żądań połączeń z maksymalną liczbę oczekujących połączeń.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> method initializes the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, binds it to a local endpoint, and listens for incoming connection attempts.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> Metoda inicjuje odpowiadającego <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>wiąże ją lokalnego punktu końcowego i nasłuchuje przychodzących próby nawiązania połączenia.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>If a connection request is received, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> will queue the request and continue listening for additional requests until you call the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> method.</source>
          <target state="translated">Jeśli żądanie połączenia zostanie odebrana, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> będzie kolejkować żądania i kontynuować nasłuchiwania dodatkowych żądań do czasu wywołania <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>If <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> receives a connection request after it has already queued the maximum number of connections it will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> on the client.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> odbiera żądanie połączenia po już jest w kolejce maksymalną liczbę połączeń, będzie zgłaszać wyjątek <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> na kliencie.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>To remove a connection from the incoming connection queue, use either the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> method.</source>
          <target state="translated">Aby usunąć połączenie z kolejki połączeń przychodzących, użyj <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> metody lub <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> method will remove a connection from the queue and return a <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> that you can use to send and receive data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph> Metody spowoduje usunięcie połączenia z kolejki i zwróć <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> czy służy do wysyłania i odbierania danych.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> method will return a <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> that you can use to do the same.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> Metoda zwróci <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> można to zrobić.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>If your application only requires synchronous I/O, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph>.</source>
          <target state="translated">Jeśli aplikacja wymaga tylko synchroniczne we/wy, użyj <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>For more detailed behavioral control, use <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> method.</source>
          <target state="translated">Bardziej szczegółowe kontroli zachowania, należy użyć <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.AcceptSocket%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>Both of these methods block until a connection request is available in the queue.</source>
          <target state="translated">Obie te metody bloku, dopóki żądanie połączenia jest dostępna w kolejce.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> method to close the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> and stop listening.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> metody, aby zamknąć <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> i zatrzymać nasłuchiwania.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>You are responsible for closing your accepted connections separately.</source>
          <target state="translated">Jest odpowiedzialny za zamknięcie połączenia zaakceptowane oddzielnie.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph2">http://msdn.microsoft.com/library/</ph><ept id="p1">](http://msdn.microsoft.com/library/)</ept> for a detailed description of the error.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> właściwość, aby otrzymać kod błędu i zapoznaj się z dokumentacji kodów błędów systemu Windows Sockets w wersji 2 interfejsu API w bibliotece MSDN pod <bpt id="p1">[</bpt> <ph id="ph2">http://msdn.microsoft.com/library/</ph> <ept id="p1">](http://msdn.microsoft.com/library/)</ept> szczegółowy opis błędu.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>śledzenia sieci w programie .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>The following code example demonstrates how <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> is used to listen for incoming client connection attempts.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Start%2A&gt;</ph> służy do nasłuchiwania przychodzących próby połączenia klienta.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>An error occurred while accessing the socket.</source>
          <target state="translated">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="backlog" /&gt;</ph> parameter is less than zero or exceeds the maximum number of permitted connections.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="backlog" /&gt;</ph> Parametr jest mniejsza od zera lub przekracza maksymalną liczbę dozwolonych połączeń.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.Start(System.Int32)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> is null.</source>
          <target state="translated">Podstawowa <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> ma wartość null.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.Stop">
          <source>Closes the listener.</source>
          <target state="translated">Zamyka odbiornik.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Stop">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> closes the listener.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> Zamyka odbiornik.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Stop">
          <source>Any unaccepted connection requests in the queue will be lost.</source>
          <target state="translated">Wszystkie połączenia niezaakceptowanych żądań w kolejce zostaną utracone.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Stop">
          <source>Remote hosts waiting for a connection to be accepted will throw a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Zgłosi hostom zdalnym oczekiwania na połączenie akceptowane <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Stop">
          <source>You are responsible for closing your accepted connections separately.</source>
          <target state="translated">Jest odpowiedzialny za zamknięcie połączenia zaakceptowane oddzielnie.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Stop">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Stop">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>śledzenia sieci w programie .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Stop">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> method to close the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, za pomocą <ph id="ph1">&lt;xref:System.Net.Sockets.TcpListener.Stop%2A&gt;</ph> metody, aby zamknąć odpowiadającego <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.Stop">
          <source>Use the <ph id="ph1">&lt;see cref="P:System.Net.Sockets.SocketException.ErrorCode" /&gt;</ph> property to obtain the specific error code.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;see cref="P:System.Net.Sockets.SocketException.ErrorCode" /&gt;</ph> właściwość, aby otrzymać kod błędu.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpListener.Stop">
          <source>When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Po uzyskaniu ten kod, mogą odwoływać się do usługi Windows Sockets w wersji 2 interfejsu API błąd kodu dokumentacji w witrynie MSDN szczegółowy opis błędu.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Stop">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpListener.Stop" /&gt;</ph> method also closes the underlying <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>, and creates a new <ph id="ph3">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> for the <ph id="ph4">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpListener.Stop" /&gt;</ph> Metody zamyka, odpowiadającego <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>i tworzy nowy <ph id="ph3">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> dla <ph id="ph4">&lt;see cref="T:System.Net.Sockets.TcpListener" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpListener.Stop">
          <source>If you set any properties on the underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> prior to calling the <ph id="ph2">&lt;see cref="M:System.Net.Sockets.TcpListener.Stop" /&gt;</ph> method, those properties will not carry over to the new <ph id="ph3">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Jeśli ustawisz wszystkie właściwości na podstawowych <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> przed wywołaniem <ph id="ph2">&lt;see cref="M:System.Net.Sockets.TcpListener.Stop" /&gt;</ph> metody, te właściwości nie przeniosą się do nowego <ph id="ph3">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>