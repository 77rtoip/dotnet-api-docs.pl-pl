<Type Name="TcpListener" FullName="System.Net.Sockets.TcpListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="084b00bd9020d2544a640e37175f5f85e6bc3944" /><Meta Name="ms.sourcegitcommit" Value="f9e71795ba0f9c2dfaa74bec233343ed0f3ffd99" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/14/2019" /><Meta Name="ms.locfileid" Value="57960269" /></Metadata><TypeSignature Language="C#" Value="public class TcpListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpListener extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpListener" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpListener" />
  <TypeSignature Language="F#" Value="type TcpListener = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="168af-101">Nasłuchuje połączeń z klientami sieci TCP.</span><span class="sxs-lookup"><span data-stu-id="168af-101">Listens for connections from TCP network clients.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-102"><xref:System.Net.Sockets.TcpListener> Klasy zawiera proste metody, które nasłuchiwania i akceptowania żądań połączenia przychodzących w trybie synchronicznym blokowania.</span><span class="sxs-lookup"><span data-stu-id="168af-102">The <xref:System.Net.Sockets.TcpListener> class provides simple methods that listen for and accept incoming connection requests in blocking synchronous mode.</span></span> <span data-ttu-id="168af-103">Można użyć dowolnego <xref:System.Net.Sockets.TcpClient> lub <xref:System.Net.Sockets.Socket> nawiązywanie połączeń z <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="168af-103">You can use either a <xref:System.Net.Sockets.TcpClient> or a <xref:System.Net.Sockets.Socket> to connect with a <xref:System.Net.Sockets.TcpListener>.</span></span> <span data-ttu-id="168af-104">Tworzenie <xref:System.Net.Sockets.TcpListener> przy użyciu <xref:System.Net.IPEndPoint>, lokalny adres IP i numer portu lub po prostu numeru portu.</span><span class="sxs-lookup"><span data-stu-id="168af-104">Create a <xref:System.Net.Sockets.TcpListener> using an <xref:System.Net.IPEndPoint>, a Local IP address and port number, or just a port number.</span></span> <span data-ttu-id="168af-105">Określ <xref:System.Net.IPAddress.Any> dla lokalnego adresu IP i numer portu lokalnego, jeśli chcesz, aby podstawowego dostawcy usług w przypisać te wartości 0.</span><span class="sxs-lookup"><span data-stu-id="168af-105">Specify <xref:System.Net.IPAddress.Any> for the local IP address and 0 for the local port number if you want the underlying service provider to assign those values for you.</span></span> <span data-ttu-id="168af-106">Jeśli zdecydujesz się to zrobić, możesz użyć <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> właściwość do identyfikacji przypisane informacje po jest połączony gniazda.</span><span class="sxs-lookup"><span data-stu-id="168af-106">If you choose to do this, you can use the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property to identify the assigned information, after the socket has connected.</span></span>  
  
 <span data-ttu-id="168af-107">Użyj <xref:System.Net.Sockets.TcpListener.Start%2A> metodę, aby rozpocząć nasłuchuje przychodzących żądań połączeń.</span><span class="sxs-lookup"><span data-stu-id="168af-107">Use the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection requests.</span></span> <span data-ttu-id="168af-108"><xref:System.Net.Sockets.TcpListener.Start%2A> kolejki połączeń przychodzących, dopóki nie zostanie wywołana albo <xref:System.Net.Sockets.TcpListener.Stop%2A> lub metoda ma się w kolejce <xref:System.Net.Sockets.SocketOptionName.MaxConnections>.</span><span class="sxs-lookup"><span data-stu-id="168af-108"><xref:System.Net.Sockets.TcpListener.Start%2A> will queue incoming connections until you either call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method or it has queued <xref:System.Net.Sockets.SocketOptionName.MaxConnections>.</span></span> <span data-ttu-id="168af-109">Użyj jednej <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> lub <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> ściągnąć połączenia z kolejki żądań połączenia przychodzących.</span><span class="sxs-lookup"><span data-stu-id="168af-109">Use either <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> or <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> to pull a connection from the incoming connection request queue.</span></span> <span data-ttu-id="168af-110">Te dwie metody będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="168af-110">These two methods will block.</span></span> <span data-ttu-id="168af-111">Jeśli chcesz uniknąć blokowania, możesz użyć <xref:System.Net.Sockets.TcpListener.Pending%2A> metody, aby ustalić, czy żądania połączenia są dostępne w kolejce.</span><span class="sxs-lookup"><span data-stu-id="168af-111">If you want to avoid blocking, you can use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method first to determine if connection requests are available in the queue.</span></span>  
  
 <span data-ttu-id="168af-112">Wywołaj <xref:System.Net.Sockets.TcpListener.Stop%2A> metodę, aby zamknąć <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="168af-112">Call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-113"><xref:System.Net.Sockets.TcpListener.Stop%2A> Metody nie Zamknij wszystkie połączenia akceptowane.</span><span class="sxs-lookup"><span data-stu-id="168af-113">The <xref:System.Net.Sockets.TcpListener.Stop%2A> method does not close any accepted connections.</span></span> <span data-ttu-id="168af-114">Odpowiedzialność za zamykanie je oddzielnie.</span><span class="sxs-lookup"><span data-stu-id="168af-114">You are responsible for closing these separately.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="168af-115">Poniższy przykład kodu tworzy <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="168af-115">The following code example creates a <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CPP/tcpserver.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CS/tcpserver.cs#1)]
 [!code-vb[System.Net.Sockets.TcpListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/VB/tcpserver.vb#1)]  
  
 <span data-ttu-id="168af-116">Zobacz <xref:System.Net.Sockets.TcpClient> na przykład klienta.</span><span class="sxs-lookup"><span data-stu-id="168af-116">See <xref:System.Net.Sockets.TcpClient> for a client example.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="168af-117">Aby ustanowić połączenia wychodzącego, lub zaakceptuj żądanie przychodzące.</span><span class="sxs-lookup"><span data-stu-id="168af-117">to establish an outgoing connection or accept an incoming request.</span></span></permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="168af-118">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.TcpListener" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="168af-118">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : int -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use TcpListener (IPAddress address, int port) instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use TcpListener(IPAddress localaddr, int port) instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("Use TcpListener(IPAddress localaddr, int port).")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use TcpListener(IPAddress localaddr, int port) instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="168af-119">Port do nasłuchiwania dla przychodzących próby nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="168af-119">The port on which to listen for incoming connection attempts.</span></span></param>
        <summary><span data-ttu-id="168af-120">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.TcpListener" /> klasy, która nasłuchuje na określonym porcie.</span><span class="sxs-lookup"><span data-stu-id="168af-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens on the specified port.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-121">Ten konstruktor jest przestarzały.</span><span class="sxs-lookup"><span data-stu-id="168af-121">This constructor is obsolete.</span></span> <span data-ttu-id="168af-122">Użyj <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType> lub <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType> konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="168af-122">Use the <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType> or <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType> constructors.</span></span>  
  
 <span data-ttu-id="168af-123">Ten konstruktor pozwala określić numer portu, na którym nasłuchuje przychodzących prób nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="168af-123">This constructor allows you to specify the port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="168af-124">Za pomocą tego konstruktora podstawowego dostawcy usług przypisuje najbardziej odpowiedni adres z sieci.</span><span class="sxs-lookup"><span data-stu-id="168af-124">With this constructor, the underlying service provider assigns the most appropriate network address.</span></span> <span data-ttu-id="168af-125">Jeśli nie są istotne, port lokalny, który jest używany, można określić 0 dla numeru portu.</span><span class="sxs-lookup"><span data-stu-id="168af-125">If you do not care which local port is used, you can specify 0 for the port number.</span></span> <span data-ttu-id="168af-126">W tym przypadku dostawcy usług przypisze liczbę dostępnych portów tymczasowych.</span><span class="sxs-lookup"><span data-stu-id="168af-126">In this case, the service provider will assign an available ephemeral port number.</span></span> <span data-ttu-id="168af-127">Jeśli używasz tej metody, można wykryć, jakie sieci lokalnej adres i numer portu przypisany przy użyciu <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="168af-127">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="168af-128">Wywołaj <xref:System.Net.Sockets.TcpListener.Start%2A> metodę, aby rozpocząć nasłuchiwanie przychodzących prób nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="168af-128">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="168af-129">Poniższy przykład kodu tworzy <xref:System.Net.Sockets.TcpListener> za pomocą numeru portu lokalnego.</span><span class="sxs-lookup"><span data-stu-id="168af-129">The following code example creates a <xref:System.Net.Sockets.TcpListener> using a local port number.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="168af-130"><paramref name="port" /> nie przypada między <see cref="F:System.Net.IPEndPoint.MinPort" /> i <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="168af-130"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : System.Net.IPEndPoint -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP"><span data-ttu-id="168af-131"><see cref="T:System.Net.IPEndPoint" /> Reprezentujący lokalny punkt końcowy, do którego ma zostać powiązania odbiornika <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="168af-131">An <see cref="T:System.Net.IPEndPoint" /> that represents the local endpoint to which to bind the listener <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <summary><span data-ttu-id="168af-132">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.TcpListener" /> klasy przy użyciu określonego lokalny punkt końcowy.</span><span class="sxs-lookup"><span data-stu-id="168af-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class with the specified local endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-133">Ten konstruktor pozwala określić lokalny adres IP i numer portu do nasłuchiwania na połączenie przychodzące próby.</span><span class="sxs-lookup"><span data-stu-id="168af-133">This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="168af-134">Przed użyciem tego konstruktora, należy utworzyć <xref:System.Net.IPEndPoint> przy użyciu żądanego adresu IP adres i port numer lokalny.</span><span class="sxs-lookup"><span data-stu-id="168af-134">Before using this constructor, you must create an <xref:System.Net.IPEndPoint> using the desired local IP address and port number.</span></span> <span data-ttu-id="168af-135">Przekazać ten <xref:System.Net.IPEndPoint> do konstruktora jako `localEP` parametru.</span><span class="sxs-lookup"><span data-stu-id="168af-135">Pass this <xref:System.Net.IPEndPoint> to the constructor as the `localEP` parameter.</span></span>  
  
 <span data-ttu-id="168af-136">Jeśli nie są istotne, który adres lokalny jest przypisany, można utworzyć <xref:System.Net.IPEndPoint> przy użyciu <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> jako parametr adres i usłudze podstawowej dostawcy przypisze najbardziej odpowiedni adres z sieci.</span><span class="sxs-lookup"><span data-stu-id="168af-136">If you do not care which local address is assigned, you can create an <xref:System.Net.IPEndPoint> using <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> as the address parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="168af-137">Może to ułatwić, Uprość aplikacji, jeśli masz wiele interfejsów sieciowych.</span><span class="sxs-lookup"><span data-stu-id="168af-137">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="168af-138">Jeśli nie są istotne, port lokalny, który jest używany, można utworzyć <xref:System.Net.IPEndPoint> przy użyciu 0 dla numeru portu.</span><span class="sxs-lookup"><span data-stu-id="168af-138">If you do not care which local port is used, you can create an <xref:System.Net.IPEndPoint> using 0 for the port number.</span></span> <span data-ttu-id="168af-139">W tym przypadku dostawcy usług przypisze liczbę dostępnych portów tymczasowych.</span><span class="sxs-lookup"><span data-stu-id="168af-139">In this case, the service provider will assign an available ephemeral port number.</span></span> <span data-ttu-id="168af-140">Jeśli używasz tej metody, można wykryć, jakie sieci lokalnej adres i numer portu przypisany przy użyciu <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="168af-140">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="168af-141">Wywołaj <xref:System.Net.Sockets.TcpListener.Start%2A> metodę, aby rozpocząć nasłuchiwanie przychodzących prób nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="168af-141">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-142">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="168af-142">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="168af-143">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="168af-143">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="168af-144">Poniższy przykład kodu tworzy wystąpienie <xref:System.Net.Sockets.TcpListener> klasy przy użyciu lokalnego punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="168af-144">The following code example creates an instance of the <xref:System.Net.Sockets.TcpListener> class using the local endpoint.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="168af-145"><paramref name="localEP" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="168af-145"><paramref name="localEP" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (System.Net.IPAddress localaddr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress localaddr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localaddr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(System::Net::IPAddress ^ localaddr, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : System.Net.IPAddress * int -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener (localaddr, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localaddr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="localaddr"><span data-ttu-id="168af-146"><see cref="T:System.Net.IPAddress" /> Reprezentujący lokalny adres IP.</span><span class="sxs-lookup"><span data-stu-id="168af-146">An <see cref="T:System.Net.IPAddress" /> that represents the local IP address.</span></span></param>
        <param name="port"><span data-ttu-id="168af-147">Port do nasłuchiwania dla przychodzących próby nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="168af-147">The port on which to listen for incoming connection attempts.</span></span></param>
        <summary><span data-ttu-id="168af-148">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.TcpListener" /> klasy, która nasłuchuje na połączenie przychodzące próby w określonym IP adres i port numer lokalny.</span><span class="sxs-lookup"><span data-stu-id="168af-148">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens for incoming connection attempts on the specified local IP address and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-149">Ten konstruktor pozwala określić lokalny adres IP i numer portu do nasłuchiwania na połączenie przychodzące próby.</span><span class="sxs-lookup"><span data-stu-id="168af-149">This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="168af-150">Przed wywołaniem tego konstruktora należy najpierw utworzyć <xref:System.Net.IPAddress> przy użyciu żądanego adresu lokalnego.</span><span class="sxs-lookup"><span data-stu-id="168af-150">Before calling this constructor you must first create an <xref:System.Net.IPAddress> using the desired local address.</span></span> <span data-ttu-id="168af-151">Przekazać ten <xref:System.Net.IPAddress> do konstruktora jako `localaddr` parametru.</span><span class="sxs-lookup"><span data-stu-id="168af-151">Pass this <xref:System.Net.IPAddress> to the constructor as the `localaddr` parameter.</span></span> <span data-ttu-id="168af-152">Jeśli nie są istotne, który adres lokalny jest przypisany, należy określić <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> dla `localaddr` parametr i podstawowego dostawcy usług przypisze najbardziej odpowiedni adres z sieci.</span><span class="sxs-lookup"><span data-stu-id="168af-152">If you do not care which local address is assigned, specify <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> for the `localaddr` parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="168af-153">Może to ułatwić, Uprość aplikacji, jeśli masz wiele interfejsów sieciowych.</span><span class="sxs-lookup"><span data-stu-id="168af-153">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="168af-154">Jeśli nie są istotne, port lokalny, który jest używany, można określić 0 dla numeru portu.</span><span class="sxs-lookup"><span data-stu-id="168af-154">If you do not care which local port is used, you can specify 0 for the port number.</span></span> <span data-ttu-id="168af-155">W tym przypadku dostawcy usług przypisze numeru portu dostępne od 1024 do 5000.</span><span class="sxs-lookup"><span data-stu-id="168af-155">In this case, the service provider will assign an available port number between 1024 and 5000.</span></span> <span data-ttu-id="168af-156">Jeśli używasz tej metody, można wykryć, jakie sieci lokalnej adres i numer portu przypisany przy użyciu <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="168af-156">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="168af-157">Wywołaj <xref:System.Net.Sockets.TcpListener.Start%2A> metodę, aby rozpocząć nasłuchiwanie przychodzących prób nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="168af-157">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-158">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="168af-158">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="168af-159">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="168af-159">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="168af-160">Poniższy przykład kodu tworzy wystąpienie <xref:System.Net.Sockets.TcpListener> przy użyciu adresu IP adres i port numer lokalny.</span><span class="sxs-lookup"><span data-stu-id="168af-160">The following code example creates an instance of the <xref:System.Net.Sockets.TcpListener> class using a local IP address and port number.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="168af-161"><paramref name="localaddr" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="168af-161"><paramref name="localaddr" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="168af-162"><paramref name="port" /> nie przypada między <see cref="F:System.Net.IPEndPoint.MinPort" /> i <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="168af-162"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <altmember cref="T:System.Net.IPAddress" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName="AcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket AcceptSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket AcceptSocket() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptSocket" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptSocket () As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ AcceptSocket();" />
      <MemberSignature Language="F#" Value="member this.AcceptSocket : unit -&gt; System.Net.Sockets.Socket" Usage="tcpListener.AcceptSocket " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="168af-163">Akceptuje żądanie połączenia oczekujące.</span><span class="sxs-lookup"><span data-stu-id="168af-163">Accepts a pending connection request.</span></span></summary>
        <returns><span data-ttu-id="168af-164">Element <see cref="T:System.Net.Sockets.Socket" /> używany do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="168af-164">A <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-165"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> jest metodą blokowania, która zwraca <xref:System.Net.Sockets.Socket> służącego do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="168af-165"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> is a blocking method that returns a <xref:System.Net.Sockets.Socket> that you can use to send and receive data.</span></span> <span data-ttu-id="168af-166">Aby uniknąć blokowania, należy użyć <xref:System.Net.Sockets.TcpListener.Pending%2A> metodę, aby sprawdzić, czy żądania połączenia są dostępne w kolejce połączeń przychodzących.</span><span class="sxs-lookup"><span data-stu-id="168af-166">If you want to avoid blocking, use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method to determine if connection requests are available in the incoming connection queue.</span></span>  
  
 <span data-ttu-id="168af-167"><xref:System.Net.Sockets.Socket> Zwracany jest inicjowany za pomocą adres i port numer IP hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="168af-167">The <xref:System.Net.Sockets.Socket> returned is initialized with the IP address and port number of the remote host.</span></span> <span data-ttu-id="168af-168">Można użyć dowolnego z <xref:System.Net.Sockets.Socket.Send%2A> i <xref:System.Net.Sockets.Socket.Receive%2A> metod dostępnych w <xref:System.Net.Sockets.Socket> klasy do komunikowania się z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="168af-168">You can use any of the <xref:System.Net.Sockets.Socket.Send%2A> and <xref:System.Net.Sockets.Socket.Receive%2A> methods available in the <xref:System.Net.Sockets.Socket> class to communicate with the remote host.</span></span> <span data-ttu-id="168af-169">Po zakończeniu przy użyciu <xref:System.Net.Sockets.Socket>, pamiętaj wywołać jego <xref:System.Net.Sockets.Socket.Close%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-169">When you are finished using the <xref:System.Net.Sockets.Socket>, be sure to call its <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="168af-170">Jeśli aplikacja jest stosunkowo prosta, należy wziąć pod uwagę przy użyciu <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody zamiast <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-170">If your application is relatively simple, consider using the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method rather than the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="168af-171"><xref:System.Net.Sockets.TcpClient> zapewnia proste metody do wysyłania i odbierania danych przez sieć w trybie synchronicznym blokowania.</span><span class="sxs-lookup"><span data-stu-id="168af-171"><xref:System.Net.Sockets.TcpClient> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-172">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="168af-172">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="168af-173">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="168af-173">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="168af-174">W poniższym przykładzie kodu <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metoda służy do zwracania <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="168af-174">In the following code example, the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method is used to return a <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="168af-175">To <xref:System.Net.Sockets.Socket> jest używany do komunikacji z klientem nowo połączone.</span><span class="sxs-lookup"><span data-stu-id="168af-175">This <xref:System.Net.Sockets.Socket> is used to communicate with the newly connected client.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="168af-176">Odbiornik nie został uruchomiony z wywołaniem <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="168af-176">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Pending" />
      </Docs>
    </Member>
    <Member MemberName="AcceptSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt; AcceptSocketAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Sockets.Socket&gt; AcceptSocketAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptSocketAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptSocketAsync () As Task(Of Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::Socket ^&gt; ^ AcceptSocketAsync();" />
      <MemberSignature Language="F#" Value="member this.AcceptSocketAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt;" Usage="tcpListener.AcceptSocketAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="168af-177">Akceptuje żądanie połączenia oczekujące jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="168af-177">Accepts a pending connection request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="168af-178">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="168af-178">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="168af-179"><see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Net.Sockets.Socket" /> używany do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="168af-179">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-180">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="168af-180">This operation will not block.</span></span> <span data-ttu-id="168af-181">Zwrócony <xref:System.Threading.Tasks.Task%601> obiektu zakończy się po połączenie gniazda zostało zaakceptowane.</span><span class="sxs-lookup"><span data-stu-id="168af-181">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the socket connection has been accepted.</span></span>  
  
 <span data-ttu-id="168af-182"><xref:System.Net.Sockets.Socket> Zwracane w <xref:System.Threading.Tasks.Task%601> jest inicjowany za pomocą adres i port numer IP hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="168af-182">The <xref:System.Net.Sockets.Socket> returned in <xref:System.Threading.Tasks.Task%601> is initialized with the IP address and port number of the remote host.</span></span> <span data-ttu-id="168af-183">Można użyć dowolnego z <xref:System.Net.Sockets.Socket.Send%2A> i <xref:System.Net.Sockets.Socket.Receive%2A> metod dostępnych w <xref:System.Net.Sockets.Socket> klasy do komunikowania się z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="168af-183">You can use any of the <xref:System.Net.Sockets.Socket.Send%2A> and <xref:System.Net.Sockets.Socket.Receive%2A> methods available in the <xref:System.Net.Sockets.Socket> class to communicate with the remote host.</span></span> <span data-ttu-id="168af-184">Po zakończeniu przy użyciu <xref:System.Net.Sockets.Socket>, pamiętaj wywołać jego <xref:System.Net.Sockets.Socket.Close%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-184">When you are finished using the <xref:System.Net.Sockets.Socket>, be sure to call its <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="168af-185">Jeśli aplikacja jest stosunkowo prosta, należy wziąć pod uwagę przy użyciu <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody zamiast <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-185">If your application is relatively simple, consider using the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method rather than the <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A> method.</span></span> <span data-ttu-id="168af-186"><xref:System.Net.Sockets.TcpClient> zapewnia proste metody do wysyłania i odbierania danych przez sieć w trybie synchronicznym blokowania.</span><span class="sxs-lookup"><span data-stu-id="168af-186"><xref:System.Net.Sockets.TcpClient> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-187">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="168af-187">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="168af-188">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="168af-188">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="168af-189">Odbiornik nie został uruchomiony z wywołaniem <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="168af-189">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Pending" />
      </Docs>
    </Member>
    <Member MemberName="AcceptTcpClient">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TcpClient AcceptTcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.TcpClient AcceptTcpClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptTcpClient () As TcpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::TcpClient ^ AcceptTcpClient();" />
      <MemberSignature Language="F#" Value="member this.AcceptTcpClient : unit -&gt; System.Net.Sockets.TcpClient" Usage="tcpListener.AcceptTcpClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpClient</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="168af-190">Akceptuje żądanie połączenia oczekujące.</span><span class="sxs-lookup"><span data-stu-id="168af-190">Accepts a pending connection request.</span></span></summary>
        <returns><span data-ttu-id="168af-191">Element <see cref="T:System.Net.Sockets.TcpClient" /> używany do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="168af-191">A <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-192"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> jest metodą blokowania, która zwraca <xref:System.Net.Sockets.TcpClient> służącego do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="168af-192"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> is a blocking method that returns a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="168af-193">Użyj <xref:System.Net.Sockets.TcpListener.Pending%2A> metodę, aby sprawdzić, czy żądania połączenia są dostępne w kolejce połączeń przychodzących, jeśli chcesz uniknąć blokowania.</span><span class="sxs-lookup"><span data-stu-id="168af-193">Use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method to determine if connection requests are available in the incoming connection queue if you want to avoid blocking.</span></span>  
  
 <span data-ttu-id="168af-194">Użyj <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> metody w celu uzyskania bazowej <xref:System.Net.Sockets.NetworkStream> zwracanego <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="168af-194">Use the <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream> of the returned <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="168af-195"><xref:System.Net.Sockets.NetworkStream> Zapewnia metody do wysyłania i odbierania z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="168af-195">The <xref:System.Net.Sockets.NetworkStream> will provide you with methods for sending and receiving with the remote host.</span></span> <span data-ttu-id="168af-196">Po osiągnięciu przez z <xref:System.Net.Sockets.TcpClient>, pamiętaj wywołać jego <xref:System.Net.Sockets.TcpClient.Close%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-196">When you are through with the <xref:System.Net.Sockets.TcpClient>, be sure to call its <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span> <span data-ttu-id="168af-197">Jeśli chcesz, aby większą elastyczność niż <xref:System.Net.Sockets.TcpClient> oferty, należy wziąć pod uwagę przy użyciu <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span><span class="sxs-lookup"><span data-stu-id="168af-197">If you want greater flexibility than a <xref:System.Net.Sockets.TcpClient> offers, consider using <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-198">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="168af-198">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="168af-199">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="168af-199">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="168af-200">W poniższym przykładzie kodu <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metoda służy do zwracania <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="168af-200">In the following code example, the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method is used to return a <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="168af-201">To <xref:System.Net.Sockets.TcpClient> jest używany do komunikacji z klientem nowo połączone.</span><span class="sxs-lookup"><span data-stu-id="168af-201">This <xref:System.Net.Sockets.TcpClient> is used to communicate with the newly connected client.</span></span>  
  
 [!code-cpp[Classic TcpListenerExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListenerExample/CPP/source.cpp#1)]
 [!code-csharp[Classic TcpListenerExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListenerExample/CS/source.cs#1)]
 [!code-vb[Classic TcpListenerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListenerExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="168af-202">Odbiornik nie został uruchomiony z wywołaniem <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="168af-202">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="168af-203">Użyj <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> właściwości, aby uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="168af-203">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="168af-204">Po otrzymaniu tego kodu, możesz zapoznać się z <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">kod błędu API Windows Sockets w wersji 2</see> dokumentacji, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="168af-204">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.TcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
      </Docs>
    </Member>
    <Member MemberName="AcceptTcpClientAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt; AcceptTcpClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Sockets.TcpClient&gt; AcceptTcpClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptTcpClientAsync () As Task(Of TcpClient)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::TcpClient ^&gt; ^ AcceptTcpClientAsync();" />
      <MemberSignature Language="F#" Value="member this.AcceptTcpClientAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt;" Usage="tcpListener.AcceptTcpClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="168af-205">Akceptuje żądanie połączenia oczekujące jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="168af-205">Accepts a pending connection request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="168af-206">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="168af-206">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="168af-207"><see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Net.Sockets.TcpClient" /> używany do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="168af-207">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-208">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="168af-208">This operation will not block.</span></span> <span data-ttu-id="168af-209">Zwrócony <xref:System.Threading.Tasks.Task%601> obiektu zakończy się po zaakceptowaniu połączenia TCP.</span><span class="sxs-lookup"><span data-stu-id="168af-209">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the TCP connection has been accepted.</span></span>  
  
 <span data-ttu-id="168af-210">Użyj <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> metody w celu uzyskania bazowej <xref:System.Net.Sockets.NetworkStream> zwracanego <xref:System.Net.Sockets.TcpClient> w <xref:System.Threading.Tasks.Task%601>.</span><span class="sxs-lookup"><span data-stu-id="168af-210">Use the <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream> of the returned <xref:System.Net.Sockets.TcpClient> in the <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="168af-211"><xref:System.Net.Sockets.NetworkStream> Zapewnia metody do wysyłania i odbierania z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="168af-211">The <xref:System.Net.Sockets.NetworkStream> will provide you with methods for sending and receiving with the remote host.</span></span> <span data-ttu-id="168af-212">Po osiągnięciu przez z <xref:System.Net.Sockets.TcpClient>, pamiętaj wywołać jego <xref:System.Net.Sockets.TcpClient.Close%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-212">When you are through with the <xref:System.Net.Sockets.TcpClient>, be sure to call its <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span> <span data-ttu-id="168af-213">Jeśli chcesz, aby większą elastyczność niż <xref:System.Net.Sockets.TcpClient> oferty, należy wziąć pod uwagę przy użyciu <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> lub <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="168af-213">If you want greater flexibility than a <xref:System.Net.Sockets.TcpClient> offers, consider using <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> or <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-214">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="168af-214">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="168af-215">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="168af-215">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="168af-216">Odbiornik nie został uruchomiony z wywołaniem <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="168af-216">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="168af-217">Użyj <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> właściwości, aby uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="168af-217">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="168af-218">Po otrzymaniu tego kodu, możesz zapoznać się z <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">kod błędu API Windows Sockets w wersji 2</see> dokumentacji, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="168af-218">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.TcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.Active" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool" Usage="System.Net.Sockets.TcpListener.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="168af-219">Pobiera wartość wskazującą, czy <see cref="T:System.Net.Sockets.TcpListener" /> aktywnie nasłuchuje połączeń klientów.</span><span class="sxs-lookup"><span data-stu-id="168af-219">Gets a value that indicates whether <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening for client connections.</span></span></summary>
        <value><span data-ttu-id="168af-220"><see langword="true" /> Jeśli <see cref="T:System.Net.Sockets.TcpListener" /> jest aktywnie nasłuchuje; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="168af-220"><see langword="true" /> if <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-221">Klasy wywodzące się z <xref:System.Net.Sockets.TcpListener> ta właściwość służy do określenia, czy <xref:System.Net.Sockets.Socket> obecnie nasłuchuje przychodzących prób nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="168af-221">Classes deriving from <xref:System.Net.Sockets.TcpListener> can use this property to determine if the <xref:System.Net.Sockets.Socket> is currently listening for incoming connection attempts.</span></span> <span data-ttu-id="168af-222"><xref:System.Net.Sockets.TcpClient.Active%2A> Właściwość może służyć do uniknięcia nadmiarowe <xref:System.Net.Sockets.TcpListener.Start%2A> prób.</span><span class="sxs-lookup"><span data-stu-id="168af-222">The <xref:System.Net.Sockets.TcpClient.Active%2A> property can be used to avoid redundant <xref:System.Net.Sockets.TcpListener.Start%2A> attempts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberSignature Language="F#" Value="member this.AllowNatTraversal : bool -&gt; unit" Usage="tcpListener.AllowNatTraversal allowed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="allowed"><span data-ttu-id="168af-223">Wartość logiczna określająca, czy włączyć lub wyłączyć Przechodzenie translatora adresów Sieciowych.</span><span class="sxs-lookup"><span data-stu-id="168af-223">A Boolean value that specifies whether to enable or disable NAT traversal.</span></span></param>
        <summary><span data-ttu-id="168af-224">Włącza lub wyłącza translacji adresów sieciowych (NAT) przechodzenie na <see cref="T:System.Net.Sockets.TcpListener" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="168af-224">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.TcpListener" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-225"><xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> Metoda jest używana do włączania lub wyłączania Przechodzenie translatora adresów Sieciowych dla <xref:System.Net.Sockets.TcpListener> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="168af-225">The <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.TcpListener> instance.</span></span> <span data-ttu-id="168af-226">Przechodzenie translatora adresów Sieciowych, mogą być udostępniane przy użyciu protokołu Teredo, 6to4 lub tunel protokołu ISATAP.</span><span class="sxs-lookup"><span data-stu-id="168af-226">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="168af-227">Gdy `allowed` parametr ma wartość FAŁSZ, <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> ustawiono opcję w gnieździe skojarzone <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span><span class="sxs-lookup"><span data-stu-id="168af-227">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="168af-228">Jawnie wyłącza Przechodzenie translatora adresów Sieciowych dla <xref:System.Net.Sockets.TcpListener> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="168af-228">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.TcpListener> instance.</span></span>  
  
 <span data-ttu-id="168af-229">Gdy `allowed` parametr ma wartość true, <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> ustawiono opcję w gnieździe skojarzone <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span><span class="sxs-lookup"><span data-stu-id="168af-229">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="168af-230">Może to umożliwić Przechodzenie translatora adresów Sieciowych dla <xref:System.Net.Sockets.TcpListener> w zależności od reguły zapory w miejscu w systemie.</span><span class="sxs-lookup"><span data-stu-id="168af-230">This may allow NAT traversal for a <xref:System.Net.Sockets.TcpListener> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="168af-231"><xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> Przed wywołaniem, można wywołać metody <xref:System.Net.Sockets.TcpListener.Start%2A> metodę, aby rozpocząć nasłuchuje przychodzących żądań połączenia (przed gniazda jest powiązana).</span><span class="sxs-lookup"><span data-stu-id="168af-231">The <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method must be invoked prior to calling the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection requests (before the socket is bound).</span></span> <span data-ttu-id="168af-232">Jeśli <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> metoda jest wywoływana po <xref:System.Net.Sockets.TcpListener.Start%2A> metody, a następnie <xref:System.InvalidOperationException> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="168af-232">If <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method is called after the <xref:System.Net.Sockets.TcpListener.Start%2A> method, then an <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
 <span data-ttu-id="168af-233">Adres Teredo nie jest adresem IPv6 z prefiksem 2001:: / 32.</span><span class="sxs-lookup"><span data-stu-id="168af-233">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="168af-234">Adresy protokołu Teredo można zwrócone za pośrednictwem normalne rozpoznawanie nazw DNS lub wyliczenia jako adres IPv6 przypisany do interfejsu lokalnego.</span><span class="sxs-lookup"><span data-stu-id="168af-234">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="168af-235"><see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> Metoda została wywołana po wywołaniu <see cref="M:System.Net.Sockets.TcpListener.Start" /> — metoda</span><span class="sxs-lookup"><span data-stu-id="168af-235">The <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> method was called after calling the <see cref="M:System.Net.Sockets.TcpListener.Start" /> method</span></span></exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptSocket">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptSocket (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAcceptSocket(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptSocket (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptSocket(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAcceptSocket : AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpListener.BeginAcceptSocket (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="168af-236"><see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po ukończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="168af-236">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="168af-237">Zdefiniowane przez użytkownika obiekt zawierający informacje na temat operacji accept.</span><span class="sxs-lookup"><span data-stu-id="168af-237">A user-defined object containing information about the accept operation.</span></span> <span data-ttu-id="168af-238">Ten obiekt jest przekazywany do <paramref name="callback" /> po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="168af-238">This object is passed to the <paramref name="callback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="168af-239">Rozpoczyna operację asynchroniczną do akceptowania przychodzących próba połączenia.</span><span class="sxs-lookup"><span data-stu-id="168af-239">Begins an asynchronous operation to accept an incoming connection attempt.</span></span></summary>
        <returns><span data-ttu-id="168af-240"><see cref="T:System.IAsyncResult" /> Odwołujący się asynchroniczne tworzenie <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="168af-240">An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.Socket" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-241">Asynchroniczną <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> można ukończyć operacji, przez wywołanie metody <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-241">The asynchronous <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method.</span></span> <span data-ttu-id="168af-242">Zazwyczaj metoda jest wywoływana przez `callback` delegować.</span><span class="sxs-lookup"><span data-stu-id="168af-242">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="168af-243">Ta metoda nie blokuje, aż do zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="168af-243">This method does not block until the operation completes.</span></span> <span data-ttu-id="168af-244">Aby zablokować do momentu ukończenia operacji, należy użyć <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-244">To block until the operation completes, use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span>  
  
 <span data-ttu-id="168af-245">Aby uzyskać szczegółowe informacje dotyczące korzystania z modelu programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="168af-245">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-246">Możesz wywołać <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> właściwości zwracanego <xref:System.Net.Sockets.Socket> do identyfikowania hosta zdalnego sieci adres i numer portu.</span><span class="sxs-lookup"><span data-stu-id="168af-246">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-247">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> właściwość, aby uzyskać kod błędu i odnoszą się do [kod błędu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) dokumentacji, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="168af-247">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-248">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="168af-248">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="168af-249">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="168af-249">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="168af-250">Poniższy przykład kodu demonstruje użycie <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> metodę, aby utworzyć i połączenia gniazda.</span><span class="sxs-lookup"><span data-stu-id="168af-250">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> method to create and connect a socket.</span></span> <span data-ttu-id="168af-251">Wywołanie zwrotne delegowanie wywołań <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> metodę, aby zakończyć żądania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="168af-251">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#4)]
 [!code-vb[System.Net.Sockets.TcpListener1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="168af-252">Wystąpił błąd podczas próby dostęp do gniazda.</span><span class="sxs-lookup"><span data-stu-id="168af-252">An error occurred while attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="168af-253"><see cref="T:System.Net.Sockets.Socket" /> Zostało zamknięte.</span><span class="sxs-lookup"><span data-stu-id="168af-253">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptTcpClient">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptTcpClient (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAcceptTcpClient(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptTcpClient (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptTcpClient(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAcceptTcpClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpListener.BeginAcceptTcpClient (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="168af-254"><see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po ukończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="168af-254">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="168af-255">Zdefiniowane przez użytkownika obiekt zawierający informacje na temat operacji accept.</span><span class="sxs-lookup"><span data-stu-id="168af-255">A user-defined object containing information about the accept operation.</span></span> <span data-ttu-id="168af-256">Ten obiekt jest przekazywany do <paramref name="callback" /> po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="168af-256">This object is passed to the <paramref name="callback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="168af-257">Rozpoczyna operację asynchroniczną do akceptowania przychodzących próba połączenia.</span><span class="sxs-lookup"><span data-stu-id="168af-257">Begins an asynchronous operation to accept an incoming connection attempt.</span></span></summary>
        <returns><span data-ttu-id="168af-258"><see cref="T:System.IAsyncResult" /> Odwołujący się asynchroniczne tworzenie <see cref="T:System.Net.Sockets.TcpClient" />.</span><span class="sxs-lookup"><span data-stu-id="168af-258">An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.TcpClient" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-259">Asynchroniczną <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> można ukończyć operacji, przez wywołanie metody <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-259">The asynchronous <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method.</span></span> <span data-ttu-id="168af-260">Zazwyczaj metoda jest wywoływana przez `callback` delegować.</span><span class="sxs-lookup"><span data-stu-id="168af-260">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="168af-261">Ta metoda nie blokuje, aż do zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="168af-261">This method does not block until the operation completes.</span></span> <span data-ttu-id="168af-262">Aby zablokować do momentu ukończenia operacji, należy użyć <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-262">To block until the operation completes, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method.</span></span>  
  
 <span data-ttu-id="168af-263">Aby uzyskać szczegółowe informacje dotyczące korzystania z modelu programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="168af-263">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-264">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> właściwość, aby uzyskać kod błędu i odnoszą się do [kod błędu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) dokumentacji, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="168af-264">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-265">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="168af-265">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="168af-266">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="168af-266">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="168af-267">Poniższy przykład kodu demonstruje użycie <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> metodę, aby utworzyć i połączenia gniazda.</span><span class="sxs-lookup"><span data-stu-id="168af-267">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> method to create and connect a socket.</span></span> <span data-ttu-id="168af-268">Wywołanie zwrotne delegowanie wywołań <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> metodę, aby zakończyć żądania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="168af-268">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#5)]
 [!code-vb[System.Net.Sockets.TcpListener1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="168af-269">Wystąpił błąd podczas próby dostęp do gniazda.</span><span class="sxs-lookup"><span data-stu-id="168af-269">An error occurred while attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="168af-270"><see cref="T:System.Net.Sockets.Socket" /> Zostało zamknięte.</span><span class="sxs-lookup"><span data-stu-id="168af-270">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.Sockets.TcpListener Create (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Sockets.TcpListener Create(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Create(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (port As Integer) As TcpListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Sockets::TcpListener ^ Create(int port);" />
      <MemberSignature Language="F#" Value="static member Create : int -&gt; System.Net.Sockets.TcpListener" Usage="System.Net.Sockets.TcpListener.Create port" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpListener</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="168af-271">Port do nasłuchiwania dla przychodzących próby nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="168af-271">The port on which to listen for incoming connection attempts.</span></span></param>
        <summary><span data-ttu-id="168af-272">Tworzy nową <see cref="T:System.Net.Sockets.TcpListener" /> wystąpienia do nasłuchiwania na określonym porcie.</span><span class="sxs-lookup"><span data-stu-id="168af-272">Creates a new <see cref="T:System.Net.Sockets.TcpListener" /> instance to listen on the specified port.</span></span></summary>
        <returns><span data-ttu-id="168af-273">Nowy <see cref="T:System.Net.Sockets.TcpListener" /> wystąpienia do nasłuchiwania na określonym porcie.</span><span class="sxs-lookup"><span data-stu-id="168af-273">A new <see cref="T:System.Net.Sockets.TcpListener" /> instance to listen on the specified port.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket EndAcceptSocket (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket EndAcceptSocket(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptSocket (asyncResult As IAsyncResult) As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ EndAcceptSocket(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAcceptSocket : IAsyncResult -&gt; System.Net.Sockets.Socket" Usage="tcpListener.EndAcceptSocket asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="168af-274"><see cref="T:System.IAsyncResult" /> Zwracany przez wywołanie <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-274">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="168af-275">Asynchronicznie akceptuje przychodzące próby połączenia i tworzy nową <see cref="T:System.Net.Sockets.Socket" /> do obsługi komunikacji z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="168af-275">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> to handle remote host communication.</span></span></summary>
        <returns><span data-ttu-id="168af-276">A <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="168af-276">A <see cref="T:System.Net.Sockets.Socket" />.</span></span>  
  
<span data-ttu-id="168af-277"><see cref="T:System.Net.Sockets.Socket" /> Używany do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="168af-277">The <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-278">Wykonaj to bloki metody do czasu tej operacji.</span><span class="sxs-lookup"><span data-stu-id="168af-278">This method blocks until the operation is complete.</span></span> <span data-ttu-id="168af-279">Aby wykonać tę operację synchronicznie, należy użyć <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-279">To perform this operation synchronously, use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-280">Możesz wywołać <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> właściwości zwracanego <xref:System.Net.Sockets.Socket> do identyfikowania hosta zdalnego sieci adres i numer portu.</span><span class="sxs-lookup"><span data-stu-id="168af-280">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-281">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> właściwość, aby uzyskać kod błędu i odnoszą się do [kod błędu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) dokumentacji, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="168af-281">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-282">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="168af-282">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="168af-283">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="168af-283">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="168af-284">Poniższy przykład kodu demonstruje użycie <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> metodę, aby utworzyć i połączenia gniazda.</span><span class="sxs-lookup"><span data-stu-id="168af-284">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> method to create and connect a socket.</span></span> <span data-ttu-id="168af-285">Wywołanie zwrotne delegowanie wywołań <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> metodę, aby zakończyć żądania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="168af-285">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#4)]
 [!code-vb[System.Net.Sockets.TcpListener1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="168af-286">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> zostało zamknięte.</span><span class="sxs-lookup"><span data-stu-id="168af-286">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="168af-287"><paramref name="asyncResult" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="168af-287">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="168af-288"><paramref name="asyncResult" /> Parametr nie został utworzony przez wywołanie <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-288">The <paramref name="asyncResult" /> parameter was not created by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="168af-289"><see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> Wcześniej wywołano metodę.</span><span class="sxs-lookup"><span data-stu-id="168af-289">The <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> method was previously called.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="168af-290">Wystąpił błąd podczas próby uzyskania dostępu do <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="168af-290">An error occurred while attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptTcpClient">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TcpClient EndAcceptTcpClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.TcpClient EndAcceptTcpClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptTcpClient (asyncResult As IAsyncResult) As TcpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::TcpClient ^ EndAcceptTcpClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAcceptTcpClient : IAsyncResult -&gt; System.Net.Sockets.TcpClient" Usage="tcpListener.EndAcceptTcpClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="168af-291"><see cref="T:System.IAsyncResult" /> Zwracany przez wywołanie <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-291">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="168af-292">Asynchronicznie akceptuje przychodzące próby połączenia i tworzy nową <see cref="T:System.Net.Sockets.TcpClient" /> do obsługi komunikacji z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="168af-292">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.TcpClient" /> to handle remote host communication.</span></span></summary>
        <returns><span data-ttu-id="168af-293">A <see cref="T:System.Net.Sockets.TcpClient" />.</span><span class="sxs-lookup"><span data-stu-id="168af-293">A <see cref="T:System.Net.Sockets.TcpClient" />.</span></span>  
  
<span data-ttu-id="168af-294"><see cref="T:System.Net.Sockets.TcpClient" /> Używany do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="168af-294">The <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-295">Wykonaj to bloki metody do czasu tej operacji.</span><span class="sxs-lookup"><span data-stu-id="168af-295">This method blocks until the operation is complete.</span></span> <span data-ttu-id="168af-296">Aby wykonać tę operację synchronicznie, należy użyć <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-296">To perform this operation synchronously, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-297">Możesz wywołać <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> właściwości podstawowej gniazda (<xref:System.Net.Sockets.TcpClient.Client%2A>) do identyfikowania hosta zdalnego sieci adres i numer portu.</span><span class="sxs-lookup"><span data-stu-id="168af-297">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the underlying socket (<xref:System.Net.Sockets.TcpClient.Client%2A>) to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-298">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> właściwość, aby uzyskać kod błędu i odnoszą się do [kod błędu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) dokumentacji, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="168af-298">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-299">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="168af-299">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="168af-300">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="168af-300">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="168af-301">Poniższy przykład kodu demonstruje użycie <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> metodę, aby utworzyć i połączenia gniazda.</span><span class="sxs-lookup"><span data-stu-id="168af-301">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> method to create and connect a socket.</span></span> <span data-ttu-id="168af-302">Wywołanie zwrotne delegowanie wywołań <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> metodę, aby zakończyć żądania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="168af-302">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#5)]
 [!code-vb[System.Net.Sockets.TcpListener1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.TcpListener.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="168af-303">Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość określająca, czy <see cref="T:System.Net.Sockets.TcpListener" /> zezwala na tylko jeden podstawowy gniazda do nasłuchiwania na konkretnym porcie.</span><span class="sxs-lookup"><span data-stu-id="168af-303">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one underlying socket to listen to a specific port.</span></span></summary>
        <value><span data-ttu-id="168af-304"><see langword="true" /> Jeśli <see cref="T:System.Net.Sockets.TcpListener" /> zezwala na tylko jeden <see cref="T:System.Net.Sockets.TcpListener" /> do nasłuchiwania na konkretnym porcie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="168af-304"><see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one <see cref="T:System.Net.Sockets.TcpListener" /> to listen to a specific port; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="168af-305">.</span><span class="sxs-lookup"><span data-stu-id="168af-305">.</span></span> <span data-ttu-id="168af-306">Wartość domyślna to <see langword="true" /> dla systemu Windows Server 2003 i Windows XP z dodatkiem Service Pack 2 lub nowszą wersją, a <see langword="false" /> dla wszystkich innych wersji.</span><span class="sxs-lookup"><span data-stu-id="168af-306">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-307">Domyślnie wiele odbiorników może nasłuchiwać na określonym porcie.</span><span class="sxs-lookup"><span data-stu-id="168af-307">By default, multiple listeners can listen to a specific port.</span></span> <span data-ttu-id="168af-308">Jednak tylko jeden odbiorniki mogą wykonywać operacje na ruch sieciowy, wysyłane do portu.</span><span class="sxs-lookup"><span data-stu-id="168af-308">However, only one of the listeners can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="168af-309">Jeśli więcej niż jeden odbiornik próbuje powiązać z określonego portu, z bardziej określonego adresu IP obsługuje ruch sieciowy, wysyłane do tego portu.</span><span class="sxs-lookup"><span data-stu-id="168af-309">If more than one listener attempts to bind to a particular port, then the one with the more specific IP address handles the network traffic sent to that port.</span></span> <span data-ttu-id="168af-310">Możesz użyć <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> właściwości, aby uniemożliwić wiele odbiorników nasłuchiwania na konkretnym porcie.</span><span class="sxs-lookup"><span data-stu-id="168af-310">You can use the <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> property to prevent multiple listeners from listening to a specific port.</span></span>  
  
 <span data-ttu-id="168af-311">Ustaw tę właściwość, przed wywołaniem <xref:System.Net.Sockets.TcpListener.Start%2A>, lub zadzwoń <xref:System.Net.Sockets.TcpListener.Stop%2A> metody i ustaw dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="168af-311">Set this property before calling <xref:System.Net.Sockets.TcpListener.Start%2A>, or call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method and then set this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="168af-312">Poniższy przykładowy kod pobiera i ustawia <xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="168af-312">The following code example gets and sets the <xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpListener1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#2)]
 [!code-vb[System.Net.Sockets.TcpListener1#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="168af-313"><see cref="T:System.Net.Sockets.TcpListener" /> Została uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="168af-313">The <see cref="T:System.Net.Sockets.TcpListener" /> has been started.</span></span> <span data-ttu-id="168af-314">Wywołaj <see cref="M:System.Net.Sockets.TcpListener.Stop" /> metody, a następnie ustaw <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="168af-314">Call the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method and then set the <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /> property.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="168af-315">Wystąpił błąd podczas próby uzyskania dostępu bazowego gniazda.</span><span class="sxs-lookup"><span data-stu-id="168af-315">An error occurred when attempting to access the underlying socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="168af-316">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> zostało zamknięte.</span><span class="sxs-lookup"><span data-stu-id="168af-316">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpListener ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tcpListener.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="168af-317">Zwalnia zasoby używane przez <see cref="T:System.Net.Sockets.TcpListener" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="168af-317">Frees resources used by the <see cref="T:System.Net.Sockets.TcpListener" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="168af-318"><xref:System.Net.Sockets.TcpListener> Klasy finalizator bezpłatne zasoby skojarzone z <xref:System.Net.Sockets.TcpListener> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="168af-318">The <xref:System.Net.Sockets.TcpListener> class finalizer free resources associated with the <xref:System.Net.Sockets.TcpListener> instance.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalEndpoint">
      <MemberSignature Language="C#" Value="public System.Net.EndPoint LocalEndpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.EndPoint LocalEndpoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.LocalEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndpoint As EndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::EndPoint ^ LocalEndpoint { System::Net::EndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndpoint : System.Net.EndPoint" Usage="System.Net.Sockets.TcpListener.LocalEndpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="168af-319">Pobiera podstawowe <see cref="T:System.Net.EndPoint" /> bieżącego <see cref="T:System.Net.Sockets.TcpListener" />.</span><span class="sxs-lookup"><span data-stu-id="168af-319">Gets the underlying <see cref="T:System.Net.EndPoint" /> of the current <see cref="T:System.Net.Sockets.TcpListener" />.</span></span></summary>
        <value><span data-ttu-id="168af-320"><see cref="T:System.Net.EndPoint" /> Do której <see cref="T:System.Net.Sockets.Socket" /> jest powiązany.</span><span class="sxs-lookup"><span data-stu-id="168af-320">The <see cref="T:System.Net.EndPoint" /> to which the <see cref="T:System.Net.Sockets.Socket" /> is bound.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-321">Możesz użyć <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> właściwość do identyfikacji sieci lokalnej interfejsu i numer portu używany do nasłuchiwania żądań przychodzących połączeń klienta, po nawiązaniu połączenia gniazda.</span><span class="sxs-lookup"><span data-stu-id="168af-321">You can use the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property to identify the local network interface and port number being used to listen for incoming client connection requests, after a socket connection has been made.</span></span> <span data-ttu-id="168af-322">Należy to najpierw rzutować <xref:System.Net.EndPoint> do <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="168af-322">You must first cast this <xref:System.Net.EndPoint> to an <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="168af-323">Następnie możesz wywołać <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> właściwość służąca do pobierania lokalny adres IP i <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> właściwość służąca do pobierania numer portu lokalnego.</span><span class="sxs-lookup"><span data-stu-id="168af-323">You can then call the <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> property to retrieve the local IP address, and the <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> property to retrieve the local port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="168af-324">Poniższy przykład kodu wyświetla lokalnego adresu IP adres i numer portu, na którym <xref:System.Net.Sockets.TcpListener> nasłuchuje przychodzących żądań połączenia.</span><span class="sxs-lookup"><span data-stu-id="168af-324">The following code example displays the local IP address and port number on which the <xref:System.Net.Sockets.TcpListener> is listening for incoming connection requests.</span></span>  
  
 [!code-cpp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CPP/source.cpp#1)]
 [!code-csharp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CS/source.cs#1)]
 [!code-vb[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="T:System.Net.EndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Pending">
      <MemberSignature Language="C#" Value="public bool Pending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Pending() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Pending" />
      <MemberSignature Language="VB.NET" Value="Public Function Pending () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Pending();" />
      <MemberSignature Language="F#" Value="member this.Pending : unit -&gt; bool" Usage="tcpListener.Pending " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="168af-325">Określa, czy żądania oczekujące połączenia.</span><span class="sxs-lookup"><span data-stu-id="168af-325">Determines if there are pending connection requests.</span></span></summary>
        <returns><span data-ttu-id="168af-326"><see langword="true" /> w przypadku oczekujących połączenia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="168af-326"><see langword="true" /> if connections are pending; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-327">Metoda nieblokującej na poziomie określa, czy wszystkie żądania oczekujące połączenie.</span><span class="sxs-lookup"><span data-stu-id="168af-327">This non-blocking method determines if there are any pending connection requests.</span></span> <span data-ttu-id="168af-328">Ponieważ <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> i <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody Blokuj wykonywanie aż do <xref:System.Net.Sockets.TcpListener.Start%2A> metoda zostało w kolejce żądań połączenia przychodzących, <xref:System.Net.Sockets.TcpListener.Pending%2A> metody można sprawdzić, czy połączenia są dostępne, przed podjęciem próby je zaakceptować.</span><span class="sxs-lookup"><span data-stu-id="168af-328">Because the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> and <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> methods block execution until the <xref:System.Net.Sockets.TcpListener.Start%2A> method has queued an incoming connection request, the <xref:System.Net.Sockets.TcpListener.Pending%2A> method can be used to determine if connections are available before attempting to accept them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="168af-329">Poniższy kod przykładowy kontroli <xref:System.Net.Sockets.TcpListener.Pending%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-329">The following code example checks the <xref:System.Net.Sockets.TcpListener.Pending%2A> method.</span></span> <span data-ttu-id="168af-330">Jeśli żądanie połączenia jest oczekuje na zatwierdzenie, następnie wywołania <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> wykonano metody.</span><span class="sxs-lookup"><span data-stu-id="168af-330">If a connection request is waiting to be accepted, then a call to the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method is made.</span></span>  
  
 [!code-cpp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CPP/source.cpp#1)]
 [!code-csharp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CS/source.cs#1)]
 [!code-vb[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="168af-331">Odbiornik nie został uruchomiony z wywołaniem <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="168af-331">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Server" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Server { System::Net::Sockets::Socket ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Net.Sockets.Socket" Usage="System.Net.Sockets.TcpListener.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="168af-332">Pobiera odnośnej sieci <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="168af-332">Gets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="168af-333">Podstawowe <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="168af-333">The underlying <see cref="T:System.Net.Sockets.Socket" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-334"><xref:System.Net.Sockets.TcpListener> Tworzy <xref:System.Net.Sockets.Socket> nasłuchiwanie przychodzących żądań połączeń klientów.</span><span class="sxs-lookup"><span data-stu-id="168af-334"><xref:System.Net.Sockets.TcpListener> creates a <xref:System.Net.Sockets.Socket> to listen for incoming client connection requests.</span></span> <span data-ttu-id="168af-335">Klasy wywodzące się z <xref:System.Net.Sockets.TcpListener> można użyć tej właściwości w celu rozwiązania tego <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="168af-335">Classes deriving from <xref:System.Net.Sockets.TcpListener> can use this property to get this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="168af-336">Używają bazowej <xref:System.Net.Sockets.Socket> zwrócone przez <xref:System.Net.Sockets.TcpListener.Server%2A> właściwość, jeśli potrzebujesz dostępu poza tym, które <xref:System.Net.Sockets.TcpListener> udostępnia.</span><span class="sxs-lookup"><span data-stu-id="168af-336">Use the underlying <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpListener.Server%2A> property if you require access beyond that which <xref:System.Net.Sockets.TcpListener> provides.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-337"><xref:System.Net.Sockets.TcpListener.Server%2A> Zwraca tylko właściwości <xref:System.Net.Sockets.Socket> używane do nasłuchiwania żądań przychodzących połączeń klienta.</span><span class="sxs-lookup"><span data-stu-id="168af-337">The <xref:System.Net.Sockets.TcpListener.Server%2A> property only returns the <xref:System.Net.Sockets.Socket> used to listen for incoming client connection requests.</span></span> <span data-ttu-id="168af-338">Użyj <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metodę, aby zaakceptować żądanie połączenia oczekujące i uzyskać <xref:System.Net.Sockets.Socket> do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="168af-338">Use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method to accept a pending connection request and obtain a <xref:System.Net.Sockets.Socket> for sending and receiving data.</span></span> <span data-ttu-id="168af-339">Można również użyć <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metodę, aby zaakceptować żądanie połączenia oczekujące i uzyskać <xref:System.Net.Sockets.TcpClient> do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="168af-339">You can also use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method to accept a pending connection request and obtain a <xref:System.Net.Sockets.TcpClient> for sending and receiving data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="168af-340">Poniższy przykład kodu demonstruje użycie <xref:System.Net.Sockets.TcpListener.Server%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="168af-340">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.Server%2A> property.</span></span> <span data-ttu-id="168af-341">Podstawowe <xref:System.Net.Sockets.Socket> są pobierane i <xref:System.Net.Sockets.SocketOptionName.Linger> <xref:System.Net.Sockets.Socket> opcja jest skonfigurowana przekroczy limit czasu po 10 sekundach, jeśli dane pozostają nadal w buforze sieciowego po zamknięciu połączenia.</span><span class="sxs-lookup"><span data-stu-id="168af-341">The underlying <xref:System.Net.Sockets.Socket> is retrieved and the <xref:System.Net.Sockets.SocketOptionName.Linger><xref:System.Net.Sockets.Socket> option is configured to time out after 10 seconds if data still remains in the network buffer after the connection is closed.</span></span>  
  
 [!code-csharp[TcpListenerProtectedMembers1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListenerProtectedMembers1/CS/source.cs#1)]
 [!code-vb[TcpListenerProtectedMembers1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListenerProtectedMembers1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="168af-342">Rozpoczyna nasłuchiwanie przychodzących żądań połączenia.</span><span class="sxs-lookup"><span data-stu-id="168af-342">Starts listening for incoming connection requests.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="tcpListener.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="168af-343">Rozpoczyna nasłuchiwanie przychodzących żądań połączenia.</span><span class="sxs-lookup"><span data-stu-id="168af-343">Starts listening for incoming connection requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-344"><xref:System.Net.Sockets.TcpListener.Start%2A> Metoda inicjuje, podstawowych <xref:System.Net.Sockets.Socket>wiąże ją do punktu końcowego w lokalnych i nasłuchuje przychodzących prób nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="168af-344">The <xref:System.Net.Sockets.TcpListener.Start%2A> method initializes the underlying <xref:System.Net.Sockets.Socket>, binds it to a local endpoint, and listens for incoming connection attempts.</span></span> <span data-ttu-id="168af-345">Jeśli żądanie połączenia zostanie odebrana, <xref:System.Net.Sockets.TcpListener.Start%2A> metoda będzie żądania w kolejce i Kontynuuj, nasłuchiwać żądań dodatkowych, dopóki nie zostanie wywołana <xref:System.Net.Sockets.TcpListener.Stop%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-345">If a connection request is received, the <xref:System.Net.Sockets.TcpListener.Start%2A> method will queue the request and continue listening for additional requests until you call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method.</span></span> <span data-ttu-id="168af-346">Jeśli <xref:System.Net.Sockets.TcpListener> odbiera żądanie połączenia po zostało już w kolejce maksymalną liczbę połączeń, spowoduje zgłoszenie <xref:System.Net.Sockets.SocketException> na komputerze klienckim.</span><span class="sxs-lookup"><span data-stu-id="168af-346">If <xref:System.Net.Sockets.TcpListener> receives a connection request after it has already queued the maximum number of connections, it will throw a <xref:System.Net.Sockets.SocketException> on the client.</span></span>  
  
 <span data-ttu-id="168af-347">Aby usunąć połączenie z kolejki połączeń przychodzących, należy użyć <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody lub <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-347">To remove a connection from the incoming connection queue, use either the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method or the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="168af-348"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> Metoda spowoduje usunięcie połączenia z kolejki i zwróć <xref:System.Net.Sockets.TcpClient> służącego do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="168af-348">The <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method will remove a connection from the queue and return a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="168af-349"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> Metoda zwróci <xref:System.Net.Sockets.Socket> użyć to samo.</span><span class="sxs-lookup"><span data-stu-id="168af-349">The <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method will return a <xref:System.Net.Sockets.Socket> that you can use to do the same.</span></span> <span data-ttu-id="168af-350">Jeśli aplikacja wymaga tylko synchroniczne operacje We/Wy, użyj <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="168af-350">If your application only requires synchronous I/O, use <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span></span> <span data-ttu-id="168af-351">Aby uzyskać bardziej szczegółową kontrolę zachowania, używać <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span><span class="sxs-lookup"><span data-stu-id="168af-351">For more detailed behavioral control, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span></span> <span data-ttu-id="168af-352">Obie te metody blokuje, dopóki żądanie połączenia jest dostępny w kolejce.</span><span class="sxs-lookup"><span data-stu-id="168af-352">Both of these methods block until a connection request is available in the queue.</span></span>  
  
 <span data-ttu-id="168af-353">Użyj <xref:System.Net.Sockets.TcpListener.Stop%2A> metodę, aby zamknąć <xref:System.Net.Sockets.TcpListener> i przestawaj słuchać.</span><span class="sxs-lookup"><span data-stu-id="168af-353">Use the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener> and stop listening.</span></span> <span data-ttu-id="168af-354">Odpowiedzialność za zamykanie akceptowane połączenia oddzielnie.</span><span class="sxs-lookup"><span data-stu-id="168af-354">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-355">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="168af-355">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="168af-356">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="168af-356">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="168af-357">Poniższy przykład kodu demonstruje sposób <xref:System.Net.Sockets.TcpListener.Start%2A> służy do nasłuchiwania przychodzących próby połączenia klienta.</span><span class="sxs-lookup"><span data-stu-id="168af-357">The following code example demonstrates how <xref:System.Net.Sockets.TcpListener.Start%2A> is used to listen for incoming client connection attempts.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#3)]
 [!code-vb[System.Net.Sockets.TcpListener1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="168af-358">Użyj <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> właściwości, aby uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="168af-358">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="168af-359">Po otrzymaniu tego kodu, możesz zapoznać się z <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">kod błędu API Windows Sockets w wersji 2</see> dokumentacji, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="168af-359">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start (int backlog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start(int32 backlog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Start(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start (backlog As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start(int backlog);" />
      <MemberSignature Language="F#" Value="member this.Start : int -&gt; unit" Usage="tcpListener.Start backlog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backlog" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="backlog"><span data-ttu-id="168af-360">Maksymalna długość kolejki oczekiwania połączenia.</span><span class="sxs-lookup"><span data-stu-id="168af-360">The maximum length of the pending connections queue.</span></span></param>
        <summary><span data-ttu-id="168af-361">Rozpoczyna nasłuchiwanie przychodzących żądań połączenia z maksymalną liczbę oczekujących połączeń.</span><span class="sxs-lookup"><span data-stu-id="168af-361">Starts listening for incoming connection requests with a maximum number of pending connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-362"><xref:System.Net.Sockets.TcpListener.Start%2A> Metoda inicjuje, podstawowych <xref:System.Net.Sockets.Socket>wiąże ją do punktu końcowego w lokalnych i nasłuchuje przychodzących prób nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="168af-362">The <xref:System.Net.Sockets.TcpListener.Start%2A> method initializes the underlying <xref:System.Net.Sockets.Socket>, binds it to a local endpoint, and listens for incoming connection attempts.</span></span> <span data-ttu-id="168af-363">Jeśli żądanie połączenia zostanie odebrana, <xref:System.Net.Sockets.TcpListener.Start%2A> będzie żądania w kolejce i kontynuować nasłuchiwanie żądań dodatkowych, dopóki nie zostanie wywołana <xref:System.Net.Sockets.TcpListener.Stop%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-363">If a connection request is received, <xref:System.Net.Sockets.TcpListener.Start%2A> will queue the request and continue listening for additional requests until you call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method.</span></span> <span data-ttu-id="168af-364">Jeśli <xref:System.Net.Sockets.TcpListener> odbiera żądanie połączenia po już zostało w kolejce maksymalną liczbę połączeń, które będzie zgłaszać wyjątek <xref:System.Net.Sockets.SocketException> na komputerze klienckim.</span><span class="sxs-lookup"><span data-stu-id="168af-364">If <xref:System.Net.Sockets.TcpListener> receives a connection request after it has already queued the maximum number of connections it will throw a <xref:System.Net.Sockets.SocketException> on the client.</span></span>  
  
 <span data-ttu-id="168af-365">Aby usunąć połączenie z kolejki połączeń przychodzących, należy użyć <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody lub <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-365">To remove a connection from the incoming connection queue, use either the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method or the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="168af-366"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> Metoda spowoduje usunięcie połączenia z kolejki i zwróć <xref:System.Net.Sockets.TcpClient> służącego do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="168af-366">The <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method will remove a connection from the queue and return a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="168af-367"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> Metoda zwróci <xref:System.Net.Sockets.Socket> użyć to samo.</span><span class="sxs-lookup"><span data-stu-id="168af-367">The <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method will return a <xref:System.Net.Sockets.Socket> that you can use to do the same.</span></span> <span data-ttu-id="168af-368">Jeśli aplikacja wymaga tylko synchroniczne operacje We/Wy, użyj <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="168af-368">If your application only requires synchronous I/O, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span></span> <span data-ttu-id="168af-369">Aby uzyskać bardziej szczegółową kontrolę zachowania, używać <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="168af-369">For more detailed behavioral control, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="168af-370">Obie te metody blokuje, dopóki żądanie połączenia jest dostępny w kolejce.</span><span class="sxs-lookup"><span data-stu-id="168af-370">Both of these methods block until a connection request is available in the queue.</span></span>  
  
 <span data-ttu-id="168af-371">Użyj <xref:System.Net.Sockets.TcpListener.Stop%2A> metodę, aby zamknąć <xref:System.Net.Sockets.TcpListener> i przestawaj słuchać.</span><span class="sxs-lookup"><span data-stu-id="168af-371">Use the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener> and stop listening.</span></span> <span data-ttu-id="168af-372">Odpowiedzialność za zamykanie akceptowane połączenia oddzielnie.</span><span class="sxs-lookup"><span data-stu-id="168af-372">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-373">Użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> właściwość, aby uzyskać kod błędu i odnoszą się do [kod błędu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) dokumentacji, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="168af-373">Use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-374">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="168af-374">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="168af-375">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="168af-375">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="168af-376">Poniższy przykład kodu demonstruje sposób <xref:System.Net.Sockets.TcpListener.Start%2A> służy do nasłuchiwania przychodzących próby połączenia klienta.</span><span class="sxs-lookup"><span data-stu-id="168af-376">The following code example demonstrates how <xref:System.Net.Sockets.TcpListener.Start%2A> is used to listen for incoming client connection attempts.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#3)]
 [!code-vb[System.Net.Sockets.TcpListener1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="168af-377">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span><span class="sxs-lookup"><span data-stu-id="168af-377">An error occurred while accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="168af-378"><paramref name="backlog" /> Parametr jest mniejsza od zera lub przekracza maksymalną liczbę dozwolonych połączeń.</span><span class="sxs-lookup"><span data-stu-id="168af-378">The <paramref name="backlog" /> parameter is less than zero or exceeds the maximum number of permitted connections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="168af-379">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="168af-379">The underlying <see cref="T:System.Net.Sockets.Socket" /> is null.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="tcpListener.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="168af-380">Zamyka odbiornik.</span><span class="sxs-lookup"><span data-stu-id="168af-380">Closes the listener.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="168af-381"><xref:System.Net.Sockets.TcpListener.Stop%2A> Zamyka odbiornik.</span><span class="sxs-lookup"><span data-stu-id="168af-381"><xref:System.Net.Sockets.TcpListener.Stop%2A> closes the listener.</span></span> <span data-ttu-id="168af-382">Wszelkie żądania połączenia niezaakceptowanych w kolejce zostaną utracone.</span><span class="sxs-lookup"><span data-stu-id="168af-382">Any unaccepted connection requests in the queue will be lost.</span></span> <span data-ttu-id="168af-383">Zgłosi hostom zdalnym oczekiwania na połączenie można zaakceptować <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="168af-383">Remote hosts waiting for a connection to be accepted will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="168af-384">Odpowiedzialność za zamykanie akceptowane połączenia oddzielnie.</span><span class="sxs-lookup"><span data-stu-id="168af-384">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="168af-385">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="168af-385">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="168af-386">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="168af-386">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="168af-387">Poniższy przykład kodu demonstruje sposób użycia <xref:System.Net.Sockets.TcpListener.Stop%2A> metodę, aby zamknąć bazowego <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="168af-387">The following code example demonstrates using the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CPP/tcpserver.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CS/tcpserver.cs#1)]
 [!code-vb[System.Net.Sockets.TcpListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/VB/tcpserver.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="168af-388">Użyj <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> właściwości, aby uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="168af-388">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="168af-389">Po otrzymaniu tego kodu, możesz zapoznać się z <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">kod błędu API Windows Sockets w wersji 2</see> dokumentacji, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="168af-389">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="168af-390"><see cref="M:System.Net.Sockets.TcpListener.Stop" /> Metoda zamyka, podstawowe <see cref="T:System.Net.Sockets.Socket" />i tworzy nowy <see cref="T:System.Net.Sockets.Socket" /> dla <see cref="T:System.Net.Sockets.TcpListener" />.</span><span class="sxs-lookup"><span data-stu-id="168af-390">The <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method also closes the underlying <see cref="T:System.Net.Sockets.Socket" />, and creates a new <see cref="T:System.Net.Sockets.Socket" /> for the <see cref="T:System.Net.Sockets.TcpListener" />.</span></span> <span data-ttu-id="168af-391">Jeśli ustawisz wszystkie właściwości w podstawowych <see cref="T:System.Net.Sockets.Socket" /> przed wywołaniem <see cref="M:System.Net.Sockets.TcpListener.Stop" /> metody te właściwości nie przeniosą się do nowego <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="168af-391">If you set any properties on the underlying <see cref="T:System.Net.Sockets.Socket" /> prior to calling the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method, those properties will not carry over to the new <see cref="T:System.Net.Sockets.Socket" />.</span></span></para></block>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
  </Members>
</Type>