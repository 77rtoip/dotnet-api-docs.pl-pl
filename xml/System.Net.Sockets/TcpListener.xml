<Type Name="TcpListener" FullName="System.Net.Sockets.TcpListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e403c2f9f2db51ad2fe6227d0079b86dfce23711" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51935654" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpListener extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpListener" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpListener" />
  <TypeSignature Language="F#" Value="type TcpListener = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="71707-101">Nasłuchuje połączeń z klientami sieci TCP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71707-101">Listens for connections from TCP network clients.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-102"><xref:System.Net.Sockets.TcpListener> Klasy zawiera proste metody, które nasłuchiwania i akceptowania żądań połączenia przychodzących w trybie synchronicznym blokowania.</span><span class="sxs-lookup"><span data-stu-id="71707-102">The <xref:System.Net.Sockets.TcpListener> class provides simple methods that listen for and accept incoming connection requests in blocking synchronous mode.</span></span> <span data-ttu-id="71707-103">Można użyć dowolnego <xref:System.Net.Sockets.TcpClient> lub <xref:System.Net.Sockets.Socket> nawiązywanie połączeń z <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="71707-103">You can use either a <xref:System.Net.Sockets.TcpClient> or a <xref:System.Net.Sockets.Socket> to connect with a <xref:System.Net.Sockets.TcpListener>.</span></span> <span data-ttu-id="71707-104">Tworzenie <xref:System.Net.Sockets.TcpListener> przy użyciu <xref:System.Net.IPEndPoint>, lokalny adres IP i numer portu lub po prostu numeru portu.</span><span class="sxs-lookup"><span data-stu-id="71707-104">Create a <xref:System.Net.Sockets.TcpListener> using an <xref:System.Net.IPEndPoint>, a Local IP address and port number, or just a port number.</span></span> <span data-ttu-id="71707-105">Określ <xref:System.Net.IPAddress.Any> dla lokalnego adresu IP i numer portu lokalnego, jeśli chcesz, aby podstawowego dostawcy usług w przypisać te wartości 0.</span><span class="sxs-lookup"><span data-stu-id="71707-105">Specify <xref:System.Net.IPAddress.Any> for the local IP address and 0 for the local port number if you want the underlying service provider to assign those values for you.</span></span> <span data-ttu-id="71707-106">Jeśli zdecydujesz się to zrobić, możesz użyć <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> właściwość do identyfikacji przypisane informacje po jest połączony gniazda.</span><span class="sxs-lookup"><span data-stu-id="71707-106">If you choose to do this, you can use the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property to identify the assigned information, after the socket has connected.</span></span>  
  
 <span data-ttu-id="71707-107">Użyj <xref:System.Net.Sockets.TcpListener.Start%2A> metodę, aby rozpocząć nasłuchuje przychodzących żądań połączeń.</span><span class="sxs-lookup"><span data-stu-id="71707-107">Use the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection requests.</span></span> <span data-ttu-id="71707-108"><xref:System.Net.Sockets.TcpListener.Start%2A> kolejki połączeń przychodzących, dopóki nie zostanie wywołana albo <xref:System.Net.Sockets.TcpListener.Stop%2A> lub metoda ma się w kolejce <xref:System.Net.Sockets.SocketOptionName.MaxConnections>.</span><span class="sxs-lookup"><span data-stu-id="71707-108"><xref:System.Net.Sockets.TcpListener.Start%2A> will queue incoming connections until you either call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method or it has queued <xref:System.Net.Sockets.SocketOptionName.MaxConnections>.</span></span> <span data-ttu-id="71707-109">Użyj jednej <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> lub <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> ściągnąć połączenia z kolejki żądań połączenia przychodzących.</span><span class="sxs-lookup"><span data-stu-id="71707-109">Use either <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> or <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> to pull a connection from the incoming connection request queue.</span></span> <span data-ttu-id="71707-110">Te dwie metody będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="71707-110">These two methods will block.</span></span> <span data-ttu-id="71707-111">Jeśli chcesz uniknąć blokowania, możesz użyć <xref:System.Net.Sockets.TcpListener.Pending%2A> metody, aby ustalić, czy żądania połączenia są dostępne w kolejce.</span><span class="sxs-lookup"><span data-stu-id="71707-111">If you want to avoid blocking, you can use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method first to determine if connection requests are available in the queue.</span></span>  
  
 <span data-ttu-id="71707-112">Wywołaj <xref:System.Net.Sockets.TcpListener.Stop%2A> metodę, aby zamknąć <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="71707-112">Call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-113"><xref:System.Net.Sockets.TcpListener.Stop%2A> Metody nie Zamknij wszystkie połączenia akceptowane.</span><span class="sxs-lookup"><span data-stu-id="71707-113">The <xref:System.Net.Sockets.TcpListener.Stop%2A> method does not close any accepted connections.</span></span> <span data-ttu-id="71707-114">Odpowiedzialność za zamykanie je oddzielnie.</span><span class="sxs-lookup"><span data-stu-id="71707-114">You are responsible for closing these separately.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71707-115">Poniższy przykład kodu tworzy <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="71707-115">The following code example creates a <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CPP/tcpserver.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CS/tcpserver.cs#1)]
 [!code-vb[System.Net.Sockets.TcpListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/VB/tcpserver.vb#1)]  
  
 <span data-ttu-id="71707-116">Zobacz <xref:System.Net.Sockets.TcpClient> na przykład klienta.</span><span class="sxs-lookup"><span data-stu-id="71707-116">See <xref:System.Net.Sockets.TcpClient> for a client example.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="71707-117">Aby ustanowić połączenia wychodzącego, lub zaakceptuj żądanie przychodzące.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71707-117">to establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71707-118">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.TcpListener" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-118">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : int -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use TcpListener (IPAddress address, int port) instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use TcpListener(IPAddress localaddr, int port) instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("Use TcpListener(IPAddress localaddr, int port).")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="71707-119">Port do nasłuchiwania dla przychodzących próby nawiązania połączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-119">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71707-120">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.TcpListener" /> klasy, która nasłuchuje na określonym porcie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens on the specified port.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-121">Ten konstruktor jest przestarzały.</span><span class="sxs-lookup"><span data-stu-id="71707-121">This constructor is obsolete.</span></span> <span data-ttu-id="71707-122">Użyj <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType> lub <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType> konstruktorów.</span><span class="sxs-lookup"><span data-stu-id="71707-122">Use the <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType> or <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType> constructors.</span></span>  
  
 <span data-ttu-id="71707-123">Ten konstruktor pozwala określić numer portu, na którym nasłuchuje przychodzących prób nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="71707-123">This constructor allows you to specify the port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="71707-124">Za pomocą tego konstruktora podstawowego dostawcy usług przypisuje najbardziej odpowiedni adres z sieci.</span><span class="sxs-lookup"><span data-stu-id="71707-124">With this constructor, the underlying service provider assigns the most appropriate network address.</span></span> <span data-ttu-id="71707-125">Jeśli nie są istotne, port lokalny, który jest używany, można określić 0 dla numeru portu.</span><span class="sxs-lookup"><span data-stu-id="71707-125">If you do not care which local port is used, you can specify 0 for the port number.</span></span> <span data-ttu-id="71707-126">W tym przypadku dostawcy usług przypisze liczbę dostępnych portów tymczasowych.</span><span class="sxs-lookup"><span data-stu-id="71707-126">In this case, the service provider will assign an available ephemeral port number.</span></span> <span data-ttu-id="71707-127">Jeśli używasz tej metody, można wykryć, jakie sieci lokalnej adres i numer portu przypisany przy użyciu <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="71707-127">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="71707-128">Wywołaj <xref:System.Net.Sockets.TcpListener.Start%2A> metodę, aby rozpocząć nasłuchiwanie przychodzących prób nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="71707-128">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71707-129">Poniższy przykład kodu tworzy <xref:System.Net.Sockets.TcpListener> za pomocą numeru portu lokalnego.</span><span class="sxs-lookup"><span data-stu-id="71707-129">The following code example creates a <xref:System.Net.Sockets.TcpListener> using a local port number.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71707-130">
            <paramref name="port" /> nie przypada między <see cref="F:System.Net.IPEndPoint.MinPort" /> i <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-130">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : System.Net.IPEndPoint -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="71707-131">
            <see cref="T:System.Net.IPEndPoint" /> Reprezentujący lokalny punkt końcowy, do którego ma zostać powiązania odbiornika <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-131">An <see cref="T:System.Net.IPEndPoint" /> that represents the local endpoint to which to bind the listener <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71707-132">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.TcpListener" /> klasy przy użyciu określonego lokalny punkt końcowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class with the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-133">Ten konstruktor pozwala określić lokalny adres IP i numer portu do nasłuchiwania na połączenie przychodzące próby.</span><span class="sxs-lookup"><span data-stu-id="71707-133">This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="71707-134">Przed użyciem tego konstruktora, należy utworzyć <xref:System.Net.IPEndPoint> przy użyciu żądanego adresu IP adres i port numer lokalny.</span><span class="sxs-lookup"><span data-stu-id="71707-134">Before using this constructor, you must create an <xref:System.Net.IPEndPoint> using the desired local IP address and port number.</span></span> <span data-ttu-id="71707-135">Przekazać ten <xref:System.Net.IPEndPoint> do konstruktora jako `localEP` parametru.</span><span class="sxs-lookup"><span data-stu-id="71707-135">Pass this <xref:System.Net.IPEndPoint> to the constructor as the `localEP` parameter.</span></span>  
  
 <span data-ttu-id="71707-136">Jeśli nie są istotne, który adres lokalny jest przypisany, można utworzyć <xref:System.Net.IPEndPoint> przy użyciu <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> jako parametr adres i usłudze podstawowej dostawcy przypisze najbardziej odpowiedni adres z sieci.</span><span class="sxs-lookup"><span data-stu-id="71707-136">If you do not care which local address is assigned, you can create an <xref:System.Net.IPEndPoint> using <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> as the address parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="71707-137">Może to ułatwić, Uprość aplikacji, jeśli masz wiele interfejsów sieciowych.</span><span class="sxs-lookup"><span data-stu-id="71707-137">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="71707-138">Jeśli nie są istotne, port lokalny, który jest używany, można utworzyć <xref:System.Net.IPEndPoint> przy użyciu 0 dla numeru portu.</span><span class="sxs-lookup"><span data-stu-id="71707-138">If you do not care which local port is used, you can create an <xref:System.Net.IPEndPoint> using 0 for the port number.</span></span> <span data-ttu-id="71707-139">W tym przypadku dostawcy usług przypisze liczbę dostępnych portów tymczasowych.</span><span class="sxs-lookup"><span data-stu-id="71707-139">In this case, the service provider will assign an available ephemeral port number.</span></span> <span data-ttu-id="71707-140">Jeśli używasz tej metody, można wykryć, jakie sieci lokalnej adres i numer portu przypisany przy użyciu <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="71707-140">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="71707-141">Wywołaj <xref:System.Net.Sockets.TcpListener.Start%2A> metodę, aby rozpocząć nasłuchiwanie przychodzących prób nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="71707-141">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-142">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="71707-142">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="71707-143">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="71707-143">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71707-144">Poniższy przykład kodu tworzy wystąpienie <xref:System.Net.Sockets.TcpListener> klasy przy użyciu lokalnego punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="71707-144">The following code example creates an instance of the <xref:System.Net.Sockets.TcpListener> class using the local endpoint.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71707-145">
            <paramref name="localEP" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-145">
              <paramref name="localEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (System.Net.IPAddress localaddr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress localaddr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localaddr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(System::Net::IPAddress ^ localaddr, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : System.Net.IPAddress * int -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener (localaddr, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localaddr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="localaddr">
          <span data-ttu-id="71707-146">
            <see cref="T:System.Net.IPAddress" /> Reprezentujący lokalny adres IP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-146">An <see cref="T:System.Net.IPAddress" /> that represents the local IP address.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="71707-147">Port do nasłuchiwania dla przychodzących próby nawiązania połączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-147">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71707-148">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.TcpListener" /> klasy, która nasłuchuje na połączenie przychodzące próby w określonym IP adres i port numer lokalny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-148">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens for incoming connection attempts on the specified local IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-149">Ten konstruktor pozwala określić lokalny adres IP i numer portu do nasłuchiwania na połączenie przychodzące próby.</span><span class="sxs-lookup"><span data-stu-id="71707-149">This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="71707-150">Przed wywołaniem tego konstruktora należy najpierw utworzyć <xref:System.Net.IPAddress> przy użyciu żądanego adresu lokalnego.</span><span class="sxs-lookup"><span data-stu-id="71707-150">Before calling this constructor you must first create an <xref:System.Net.IPAddress> using the desired local address.</span></span> <span data-ttu-id="71707-151">Przekazać ten <xref:System.Net.IPAddress> do konstruktora jako `localaddr` parametru.</span><span class="sxs-lookup"><span data-stu-id="71707-151">Pass this <xref:System.Net.IPAddress> to the constructor as the `localaddr` parameter.</span></span> <span data-ttu-id="71707-152">Jeśli nie są istotne, który adres lokalny jest przypisany, należy określić <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> dla `localaddr` parametr i podstawowego dostawcy usług przypisze najbardziej odpowiedni adres z sieci.</span><span class="sxs-lookup"><span data-stu-id="71707-152">If you do not care which local address is assigned, specify <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> for the `localaddr` parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="71707-153">Może to ułatwić, Uprość aplikacji, jeśli masz wiele interfejsów sieciowych.</span><span class="sxs-lookup"><span data-stu-id="71707-153">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="71707-154">Jeśli nie są istotne, port lokalny, który jest używany, można określić 0 dla numeru portu.</span><span class="sxs-lookup"><span data-stu-id="71707-154">If you do not care which local port is used, you can specify 0 for the port number.</span></span> <span data-ttu-id="71707-155">W tym przypadku dostawcy usług przypisze numeru portu dostępne od 1024 do 5000.</span><span class="sxs-lookup"><span data-stu-id="71707-155">In this case, the service provider will assign an available port number between 1024 and 5000.</span></span> <span data-ttu-id="71707-156">Jeśli używasz tej metody, można wykryć, jakie sieci lokalnej adres i numer portu przypisany przy użyciu <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="71707-156">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="71707-157">Wywołaj <xref:System.Net.Sockets.TcpListener.Start%2A> metodę, aby rozpocząć nasłuchiwanie przychodzących prób nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="71707-157">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-158">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="71707-158">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="71707-159">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="71707-159">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71707-160">Poniższy przykład kodu tworzy wystąpienie <xref:System.Net.Sockets.TcpListener> przy użyciu adresu IP adres i port numer lokalny.</span><span class="sxs-lookup"><span data-stu-id="71707-160">The following code example creates an instance of the <xref:System.Net.Sockets.TcpListener> class using a local IP address and port number.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71707-161">
            <paramref name="localaddr" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-161">
              <paramref name="localaddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71707-162">
            <paramref name="port" /> nie przypada między <see cref="F:System.Net.IPEndPoint.MinPort" /> i <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-162">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPAddress" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName="AcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket AcceptSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket AcceptSocket() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptSocket" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptSocket () As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ AcceptSocket();" />
      <MemberSignature Language="F#" Value="member this.AcceptSocket : unit -&gt; System.Net.Sockets.Socket" Usage="tcpListener.AcceptSocket " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71707-163">Akceptuje żądanie połączenia oczekujące.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-163">Accepts a pending connection request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71707-164">Element <see cref="T:System.Net.Sockets.Socket" /> używany do wysyłania i odbierania danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-164">A <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-165"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> jest metodą blokowania, która zwraca <xref:System.Net.Sockets.Socket> służącego do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="71707-165"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> is a blocking method that returns a <xref:System.Net.Sockets.Socket> that you can use to send and receive data.</span></span> <span data-ttu-id="71707-166">Aby uniknąć blokowania, należy użyć <xref:System.Net.Sockets.TcpListener.Pending%2A> metodę, aby sprawdzić, czy żądania połączenia są dostępne w kolejce połączeń przychodzących.</span><span class="sxs-lookup"><span data-stu-id="71707-166">If you want to avoid blocking, use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method to determine if connection requests are available in the incoming connection queue.</span></span>  
  
 <span data-ttu-id="71707-167"><xref:System.Net.Sockets.Socket> Zwracany jest inicjowany za pomocą adres i port numer IP hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="71707-167">The <xref:System.Net.Sockets.Socket> returned is initialized with the IP address and port number of the remote host.</span></span> <span data-ttu-id="71707-168">Można użyć dowolnego z <xref:System.Net.Sockets.Socket.Send%2A> i <xref:System.Net.Sockets.Socket.Receive%2A> metod dostępnych w <xref:System.Net.Sockets.Socket> klasy do komunikowania się z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="71707-168">You can use any of the <xref:System.Net.Sockets.Socket.Send%2A> and <xref:System.Net.Sockets.Socket.Receive%2A> methods available in the <xref:System.Net.Sockets.Socket> class to communicate with the remote host.</span></span> <span data-ttu-id="71707-169">Po zakończeniu przy użyciu <xref:System.Net.Sockets.Socket>, pamiętaj wywołać jego <xref:System.Net.Sockets.Socket.Close%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71707-169">When you are finished using the <xref:System.Net.Sockets.Socket>, be sure to call its <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="71707-170">Jeśli aplikacja jest stosunkowo prosta, należy wziąć pod uwagę przy użyciu <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody zamiast <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71707-170">If your application is relatively simple, consider using the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method rather than the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="71707-171"><xref:System.Net.Sockets.TcpClient> zapewnia proste metody do wysyłania i odbierania danych przez sieć w trybie synchronicznym blokowania.</span><span class="sxs-lookup"><span data-stu-id="71707-171"><xref:System.Net.Sockets.TcpClient> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-172">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="71707-172">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="71707-173">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="71707-173">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71707-174">W poniższym przykładzie kodu <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metoda służy do zwracania <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="71707-174">In the following code example, the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method is used to return a <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="71707-175">To <xref:System.Net.Sockets.Socket> jest używany do komunikacji z klientem nowo połączone.</span><span class="sxs-lookup"><span data-stu-id="71707-175">This <xref:System.Net.Sockets.Socket> is used to communicate with the newly connected client.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71707-176">Odbiornik nie został uruchomiony z wywołaniem <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-176">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Pending" />
      </Docs>
    </Member>
    <Member MemberName="AcceptSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt; AcceptSocketAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Sockets.Socket&gt; AcceptSocketAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptSocketAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptSocketAsync () As Task(Of Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::Socket ^&gt; ^ AcceptSocketAsync();" />
      <MemberSignature Language="F#" Value="member this.AcceptSocketAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt;" Usage="tcpListener.AcceptSocketAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71707-177">Akceptuje żądanie połączenia oczekujące jako operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-177">Accepts a pending connection request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71707-178">Zwraca <see cref="T:System.Threading.Tasks.Task`1" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-178">Returns <see cref="T:System.Threading.Tasks.Task`1" /></span>
          </span>
          <span data-ttu-id="71707-179">Obiekt zadania reprezentujący operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-179">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="71707-180">
            <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Net.Sockets.Socket" /> używany do wysyłania i odbierania danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-180">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-181">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="71707-181">This operation will not block.</span></span> <span data-ttu-id="71707-182">Zwrócony <xref:System.Threading.Tasks.Task%601> obiektu zakończy się po połączenie gniazda zostało zaakceptowane.</span><span class="sxs-lookup"><span data-stu-id="71707-182">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the socket connection has been accepted.</span></span>  
  
 <span data-ttu-id="71707-183"><xref:System.Net.Sockets.Socket> Zwracane w <xref:System.Threading.Tasks.Task%601> jest inicjowany za pomocą adres i port numer IP hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="71707-183">The <xref:System.Net.Sockets.Socket> returned in <xref:System.Threading.Tasks.Task%601> is initialized with the IP address and port number of the remote host.</span></span> <span data-ttu-id="71707-184">Można użyć dowolnego z <xref:System.Net.Sockets.Socket.Send%2A> i <xref:System.Net.Sockets.Socket.Receive%2A> metod dostępnych w <xref:System.Net.Sockets.Socket> klasy do komunikowania się z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="71707-184">You can use any of the <xref:System.Net.Sockets.Socket.Send%2A> and <xref:System.Net.Sockets.Socket.Receive%2A> methods available in the <xref:System.Net.Sockets.Socket> class to communicate with the remote host.</span></span> <span data-ttu-id="71707-185">Po zakończeniu przy użyciu <xref:System.Net.Sockets.Socket>, pamiętaj wywołać jego <xref:System.Net.Sockets.Socket.Close%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71707-185">When you are finished using the <xref:System.Net.Sockets.Socket>, be sure to call its <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="71707-186">Jeśli aplikacja jest stosunkowo prosta, należy wziąć pod uwagę przy użyciu <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody zamiast <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71707-186">If your application is relatively simple, consider using the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method rather than the <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A> method.</span></span> <span data-ttu-id="71707-187"><xref:System.Net.Sockets.TcpClient> zapewnia proste metody do wysyłania i odbierania danych przez sieć w trybie synchronicznym blokowania.</span><span class="sxs-lookup"><span data-stu-id="71707-187"><xref:System.Net.Sockets.TcpClient> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-188">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="71707-188">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="71707-189">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="71707-189">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71707-190">Odbiornik nie został uruchomiony z wywołaniem <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-190">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Pending" />
      </Docs>
    </Member>
    <Member MemberName="AcceptTcpClient">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TcpClient AcceptTcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.TcpClient AcceptTcpClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptTcpClient () As TcpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::TcpClient ^ AcceptTcpClient();" />
      <MemberSignature Language="F#" Value="member this.AcceptTcpClient : unit -&gt; System.Net.Sockets.TcpClient" Usage="tcpListener.AcceptTcpClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpClient</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71707-191">Akceptuje żądanie połączenia oczekujące.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-191">Accepts a pending connection request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71707-192">Element <see cref="T:System.Net.Sockets.TcpClient" /> używany do wysyłania i odbierania danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-192">A <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-193"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> jest metodą blokowania, która zwraca <xref:System.Net.Sockets.TcpClient> służącego do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="71707-193"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> is a blocking method that returns a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="71707-194">Użyj <xref:System.Net.Sockets.TcpListener.Pending%2A> metodę, aby sprawdzić, czy żądania połączenia są dostępne w kolejce połączeń przychodzących, jeśli chcesz uniknąć blokowania.</span><span class="sxs-lookup"><span data-stu-id="71707-194">Use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method to determine if connection requests are available in the incoming connection queue if you want to avoid blocking.</span></span>  
  
 <span data-ttu-id="71707-195">Użyj <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> metody w celu uzyskania bazowej <xref:System.Net.Sockets.NetworkStream> zwracanego <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="71707-195">Use the <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream> of the returned <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="71707-196"><xref:System.Net.Sockets.NetworkStream> Zapewnia metody do wysyłania i odbierania z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="71707-196">The <xref:System.Net.Sockets.NetworkStream> will provide you with methods for sending and receiving with the remote host.</span></span> <span data-ttu-id="71707-197">Po osiągnięciu przez z <xref:System.Net.Sockets.TcpClient>, pamiętaj wywołać jego <xref:System.Net.Sockets.TcpClient.Close%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71707-197">When you are through with the <xref:System.Net.Sockets.TcpClient>, be sure to call its <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span> <span data-ttu-id="71707-198">Jeśli chcesz, aby większą elastyczność niż <xref:System.Net.Sockets.TcpClient> oferty, należy wziąć pod uwagę przy użyciu <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span><span class="sxs-lookup"><span data-stu-id="71707-198">If you want greater flexibility than a <xref:System.Net.Sockets.TcpClient> offers, consider using <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-199">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="71707-199">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="71707-200">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="71707-200">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71707-201">W poniższym przykładzie kodu <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metoda służy do zwracania <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="71707-201">In the following code example, the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method is used to return a <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="71707-202">To <xref:System.Net.Sockets.TcpClient> jest używany do komunikacji z klientem nowo połączone.</span><span class="sxs-lookup"><span data-stu-id="71707-202">This <xref:System.Net.Sockets.TcpClient> is used to communicate with the newly connected client.</span></span>  
  
 [!code-cpp[Classic TcpListenerExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListenerExample/CPP/source.cpp#1)]
 [!code-csharp[Classic TcpListenerExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListenerExample/CS/source.cs#1)]
 [!code-vb[Classic TcpListenerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListenerExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71707-203">Odbiornik nie został uruchomiony z wywołaniem <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-203">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="71707-204">Użyj <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> właściwości, aby uzyskać kod błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-204">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span>
          </span>
          <span data-ttu-id="71707-205">Po otrzymaniu tego kodu, możesz zapoznać się z <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">kod błędu API Windows Sockets w wersji 2</see> dokumentacji, aby uzyskać szczegółowy opis błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-205">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
      </Docs>
    </Member>
    <Member MemberName="AcceptTcpClientAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt; AcceptTcpClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Sockets.TcpClient&gt; AcceptTcpClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptTcpClientAsync () As Task(Of TcpClient)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::TcpClient ^&gt; ^ AcceptTcpClientAsync();" />
      <MemberSignature Language="F#" Value="member this.AcceptTcpClientAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt;" Usage="tcpListener.AcceptTcpClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71707-206">Akceptuje żądanie połączenia oczekujące jako operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-206">Accepts a pending connection request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71707-207">Zwraca <see cref="T:System.Threading.Tasks.Task`1" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-207">Returns <see cref="T:System.Threading.Tasks.Task`1" /></span>
          </span>
          <span data-ttu-id="71707-208">Obiekt zadania reprezentujący operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-208">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="71707-209">
            <see cref="P:System.Threading.Tasks.Task`1.Result" /> Zwraca właściwości dla obiektu task <see cref="T:System.Net.Sockets.TcpClient" /> używany do wysyłania i odbierania danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-209">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-210">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="71707-210">This operation will not block.</span></span> <span data-ttu-id="71707-211">Zwrócony <xref:System.Threading.Tasks.Task%601> obiektu zakończy się po zaakceptowaniu połączenia TCP.</span><span class="sxs-lookup"><span data-stu-id="71707-211">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the TCP connection has been accepted.</span></span>  
  
 <span data-ttu-id="71707-212">Użyj <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> metody w celu uzyskania bazowej <xref:System.Net.Sockets.NetworkStream> zwracanego <xref:System.Net.Sockets.TcpClient> w <xref:System.Threading.Tasks.Task%601>.</span><span class="sxs-lookup"><span data-stu-id="71707-212">Use the <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream> of the returned <xref:System.Net.Sockets.TcpClient> in the <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="71707-213"><xref:System.Net.Sockets.NetworkStream> Zapewnia metody do wysyłania i odbierania z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="71707-213">The <xref:System.Net.Sockets.NetworkStream> will provide you with methods for sending and receiving with the remote host.</span></span> <span data-ttu-id="71707-214">Po osiągnięciu przez z <xref:System.Net.Sockets.TcpClient>, pamiętaj wywołać jego <xref:System.Net.Sockets.TcpClient.Close%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71707-214">When you are through with the <xref:System.Net.Sockets.TcpClient>, be sure to call its <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span> <span data-ttu-id="71707-215">Jeśli chcesz, aby większą elastyczność niż <xref:System.Net.Sockets.TcpClient> oferty, należy wziąć pod uwagę przy użyciu <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> lub <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="71707-215">If you want greater flexibility than a <xref:System.Net.Sockets.TcpClient> offers, consider using <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> or <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-216">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="71707-216">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="71707-217">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="71707-217">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71707-218">Odbiornik nie został uruchomiony z wywołaniem <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-218">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="71707-219">Użyj <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> właściwości, aby uzyskać kod błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-219">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span>
          </span>
          <span data-ttu-id="71707-220">Po otrzymaniu tego kodu, możesz zapoznać się z <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">kod błędu API Windows Sockets w wersji 2</see> dokumentacji, aby uzyskać szczegółowy opis błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-220">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.Active" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool" Usage="System.Net.Sockets.TcpListener.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71707-221">Pobiera wartość wskazującą, czy <see cref="T:System.Net.Sockets.TcpListener" /> aktywnie nasłuchuje połączeń klientów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-221">Gets a value that indicates whether <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening for client connections.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71707-222">
            <see langword="true" /> Jeśli <see cref="T:System.Net.Sockets.TcpListener" /> jest aktywnie nasłuchuje; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-222">
              <see langword="true" /> if <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-223">Klasy wywodzące się z <xref:System.Net.Sockets.TcpListener> ta właściwość służy do określenia, czy <xref:System.Net.Sockets.Socket> obecnie nasłuchuje przychodzących prób nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="71707-223">Classes deriving from <xref:System.Net.Sockets.TcpListener> can use this property to determine if the <xref:System.Net.Sockets.Socket> is currently listening for incoming connection attempts.</span></span> <span data-ttu-id="71707-224"><xref:System.Net.Sockets.TcpClient.Active%2A> Właściwość może służyć do uniknięcia nadmiarowe <xref:System.Net.Sockets.TcpListener.Start%2A> prób.</span><span class="sxs-lookup"><span data-stu-id="71707-224">The <xref:System.Net.Sockets.TcpClient.Active%2A> property can be used to avoid redundant <xref:System.Net.Sockets.TcpListener.Start%2A> attempts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberSignature Language="F#" Value="member this.AllowNatTraversal : bool -&gt; unit" Usage="tcpListener.AllowNatTraversal allowed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowed">
          <span data-ttu-id="71707-225">Wartość logiczna określająca, czy włączyć lub wyłączyć Przechodzenie translatora adresów Sieciowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-225">A Boolean value that specifies whether to enable or disable NAT traversal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71707-226">Włącza lub wyłącza translacji adresów sieciowych (NAT) przechodzenie na <see cref="T:System.Net.Sockets.TcpListener" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-226">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.TcpListener" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-227"><xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> Metoda jest używana do włączania lub wyłączania Przechodzenie translatora adresów Sieciowych dla <xref:System.Net.Sockets.TcpListener> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="71707-227">The <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.TcpListener> instance.</span></span> <span data-ttu-id="71707-228">Przechodzenie translatora adresów Sieciowych, mogą być udostępniane przy użyciu protokołu Teredo, 6to4 lub tunel protokołu ISATAP.</span><span class="sxs-lookup"><span data-stu-id="71707-228">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="71707-229">Gdy `allowed` parametr ma wartość FAŁSZ, <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> ustawiono opcję w gnieździe skojarzone <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span><span class="sxs-lookup"><span data-stu-id="71707-229">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="71707-230">Jawnie wyłącza Przechodzenie translatora adresów Sieciowych dla <xref:System.Net.Sockets.TcpListener> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="71707-230">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.TcpListener> instance.</span></span>  
  
 <span data-ttu-id="71707-231">Gdy `allowed` parametr ma wartość true, <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> ustawiono opcję w gnieździe skojarzone <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span><span class="sxs-lookup"><span data-stu-id="71707-231">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="71707-232">Może to umożliwić Przechodzenie translatora adresów Sieciowych dla <xref:System.Net.Sockets.TcpListener> w zależności od reguły zapory w miejscu w systemie.</span><span class="sxs-lookup"><span data-stu-id="71707-232">This may allow NAT traversal for a <xref:System.Net.Sockets.TcpListener> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="71707-233"><xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> Przed wywołaniem, można wywołać metody <xref:System.Net.Sockets.TcpListener.Start%2A> metodę, aby rozpocząć nasłuchuje przychodzących żądań połączenia (przed gniazda jest powiązana).</span><span class="sxs-lookup"><span data-stu-id="71707-233">The <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method must be invoked prior to calling the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection requests (before the socket is bound).</span></span> <span data-ttu-id="71707-234">Jeśli <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> metoda jest wywoływana po <xref:System.Net.Sockets.TcpListener.Start%2A> metody, a następnie <xref:System.InvalidOperationException> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="71707-234">If <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method is called after the <xref:System.Net.Sockets.TcpListener.Start%2A> method, then an <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
 <span data-ttu-id="71707-235">Adres Teredo nie jest adresem IPv6 z prefiksem 2001:: / 32.</span><span class="sxs-lookup"><span data-stu-id="71707-235">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="71707-236">Adresy protokołu Teredo można zwrócone za pośrednictwem normalne rozpoznawanie nazw DNS lub wyliczenia jako adres IPv6 przypisany do interfejsu lokalnego.</span><span class="sxs-lookup"><span data-stu-id="71707-236">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71707-237">
            <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> Metoda została wywołana po wywołaniu <see cref="M:System.Net.Sockets.TcpListener.Start" /> — metoda</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-237">The <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> method was called after calling the <see cref="M:System.Net.Sockets.TcpListener.Start" /> method</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptSocket">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptSocket (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAcceptSocket(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptSocket (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptSocket(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAcceptSocket : AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpListener.BeginAcceptSocket (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="71707-238">
            <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po ukończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-238">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="71707-239">Zdefiniowane przez użytkownika obiekt zawierający informacje na temat operacji accept.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-239">A user-defined object containing information about the accept operation.</span>
          </span>
          <span data-ttu-id="71707-240">Ten obiekt jest przekazywany do <c>wywołania zwrotnego</c> po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-240">This object is passed to the <c>callback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71707-241">Rozpoczyna operację asynchroniczną do akceptowania przychodzących próba połączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-241">Begins an asynchronous operation to accept an incoming connection attempt.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71707-242">
            <see cref="T:System.IAsyncResult" /> Odwołujący się asynchroniczne tworzenie <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-242">An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-243">Asynchroniczną <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> można ukończyć operacji, przez wywołanie metody <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71707-243">The asynchronous <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method.</span></span> <span data-ttu-id="71707-244">Zazwyczaj metoda jest wywoływana przez `callback` delegować.</span><span class="sxs-lookup"><span data-stu-id="71707-244">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="71707-245">Ta metoda nie blokuje, aż do zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="71707-245">This method does not block until the operation completes.</span></span> <span data-ttu-id="71707-246">Aby zablokować do momentu ukończenia operacji, należy użyć <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71707-246">To block until the operation completes, use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span>  
  
 <span data-ttu-id="71707-247">Aby uzyskać szczegółowe informacje dotyczące korzystania z modelu programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="71707-247">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-248">Możesz wywołać <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> właściwości zwracanego <xref:System.Net.Sockets.Socket> do identyfikowania hosta zdalnego sieci adres i numer portu.</span><span class="sxs-lookup"><span data-stu-id="71707-248">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-249">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> właściwość, aby uzyskać kod błędu i odnoszą się do dokumentacji kodów błędów systemu Windows Sockets w wersji 2 interfejsu API w bibliotece MSDN pod [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) dla szczegółowe Opis błędu.</span><span class="sxs-lookup"><span data-stu-id="71707-249">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-250">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="71707-250">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="71707-251">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="71707-251">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71707-252">Poniższy przykład kodu demonstruje użycie <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> metodę, aby utworzyć i połączenia gniazda.</span><span class="sxs-lookup"><span data-stu-id="71707-252">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> method to create and connect a socket.</span></span> <span data-ttu-id="71707-253">Wywołanie zwrotne delegowanie wywołań <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> metodę, aby zakończyć żądania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="71707-253">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#4)]
 [!code-vb[System.Net.Sockets.TcpListener1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="71707-254">Wystąpił błąd podczas próby dostęp do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-254">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="71707-255">
            <see cref="T:System.Net.Sockets.Socket" /> Zostało zamknięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-255">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptTcpClient">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptTcpClient (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAcceptTcpClient(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptTcpClient (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptTcpClient(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAcceptTcpClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpListener.BeginAcceptTcpClient (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="71707-256">
            <see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po ukończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-256">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="71707-257">Zdefiniowane przez użytkownika obiekt zawierający informacje na temat operacji accept.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-257">A user-defined object containing information about the accept operation.</span>
          </span>
          <span data-ttu-id="71707-258">Ten obiekt jest przekazywany do <c>wywołania zwrotnego</c> po zakończeniu operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-258">This object is passed to the <c>callback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71707-259">Rozpoczyna operację asynchroniczną do akceptowania przychodzących próba połączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-259">Begins an asynchronous operation to accept an incoming connection attempt.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71707-260">
            <see cref="T:System.IAsyncResult" /> Odwołujący się asynchroniczne tworzenie <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-260">An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-261">Asynchroniczną <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> można ukończyć operacji, przez wywołanie metody <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71707-261">The asynchronous <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method.</span></span> <span data-ttu-id="71707-262">Zazwyczaj metoda jest wywoływana przez `callback` delegować.</span><span class="sxs-lookup"><span data-stu-id="71707-262">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="71707-263">Ta metoda nie blokuje, aż do zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="71707-263">This method does not block until the operation completes.</span></span> <span data-ttu-id="71707-264">Aby zablokować do momentu ukończenia operacji, należy użyć <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71707-264">To block until the operation completes, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method.</span></span>  
  
 <span data-ttu-id="71707-265">Aby uzyskać szczegółowe informacje dotyczące korzystania z modelu programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="71707-265">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-266">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> właściwość, aby uzyskać kod błędu i odnoszą się do dokumentacji kodów błędów systemu Windows Sockets w wersji 2 interfejsu API w bibliotece MSDN pod [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) dla szczegółowe Opis błędu.</span><span class="sxs-lookup"><span data-stu-id="71707-266">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-267">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="71707-267">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="71707-268">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="71707-268">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71707-269">Poniższy przykład kodu demonstruje użycie <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> metodę, aby utworzyć i połączenia gniazda.</span><span class="sxs-lookup"><span data-stu-id="71707-269">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> method to create and connect a socket.</span></span> <span data-ttu-id="71707-270">Wywołanie zwrotne delegowanie wywołań <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> metodę, aby zakończyć żądania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="71707-270">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#5)]
 [!code-vb[System.Net.Sockets.TcpListener1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="71707-271">Wystąpił błąd podczas próby dostęp do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-271">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="71707-272">
            <see cref="T:System.Net.Sockets.Socket" /> Zostało zamknięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-272">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.Sockets.TcpListener Create (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Sockets.TcpListener Create(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Create(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (port As Integer) As TcpListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Sockets::TcpListener ^ Create(int port);" />
      <MemberSignature Language="F#" Value="static member Create : int -&gt; System.Net.Sockets.TcpListener" Usage="System.Net.Sockets.TcpListener.Create port" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpListener</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="71707-273">Port do nasłuchiwania dla przychodzących próby nawiązania połączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-273">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71707-274">Tworzy nową <see cref="T:System.Net.Sockets.TcpListener" /> wystąpienia do nasłuchiwania na określonym porcie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-274">Creates a new <see cref="T:System.Net.Sockets.TcpListener" /> instance to listen on the specified port.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71707-275">Zwraca <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-275">Returns <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          </span>
          <span data-ttu-id="71707-276">Nowy <see cref="T:System.Net.Sockets.TcpListener" /> wystąpienia do nasłuchiwania na określonym porcie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-276">A new <see cref="T:System.Net.Sockets.TcpListener" /> instance to listen on the specified port.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket EndAcceptSocket (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket EndAcceptSocket(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptSocket (asyncResult As IAsyncResult) As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ EndAcceptSocket(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAcceptSocket : IAsyncResult -&gt; System.Net.Sockets.Socket" Usage="tcpListener.EndAcceptSocket asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="71707-277">
            <see cref="T:System.IAsyncResult" /> Zwracany przez wywołanie <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-277">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71707-278">Asynchronicznie akceptuje przychodzące próby połączenia i tworzy nową <see cref="T:System.Net.Sockets.Socket" /> do obsługi komunikacji z hostem zdalnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-278">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> to handle remote host communication.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71707-279">A <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-279">A <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
          <span data-ttu-id="71707-280">
            <see cref="T:System.Net.Sockets.Socket" /> Używany do wysyłania i odbierania danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-280">The <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-281">Wykonaj to bloki metody do czasu tej operacji.</span><span class="sxs-lookup"><span data-stu-id="71707-281">This method blocks until the operation is complete.</span></span> <span data-ttu-id="71707-282">Aby wykonać tę operację synchronicznie, należy użyć <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71707-282">To perform this operation synchronously, use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-283">Możesz wywołać <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> właściwości zwracanego <xref:System.Net.Sockets.Socket> do identyfikowania hosta zdalnego sieci adres i numer portu.</span><span class="sxs-lookup"><span data-stu-id="71707-283">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-284">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> właściwość, aby uzyskać kod błędu i odnoszą się do dokumentacji kodów błędów systemu Windows Sockets w wersji 2 interfejsu API w bibliotece MSDN pod [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) dla szczegółowe Opis błędu.</span><span class="sxs-lookup"><span data-stu-id="71707-284">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-285">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="71707-285">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="71707-286">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="71707-286">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71707-287">Poniższy przykład kodu demonstruje użycie <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> metodę, aby utworzyć i połączenia gniazda.</span><span class="sxs-lookup"><span data-stu-id="71707-287">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> method to create and connect a socket.</span></span> <span data-ttu-id="71707-288">Wywołanie zwrotne delegowanie wywołań <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> metodę, aby zakończyć żądania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="71707-288">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#4)]
 [!code-vb[System.Net.Sockets.TcpListener1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="71707-289">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> zostało zamknięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-289">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="71707-290">
            <paramref name="asyncResult" /> Parametr <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-290">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="71707-291">
            <paramref name="asyncResult" /> Parametr nie został utworzony przez wywołanie <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-291">The <paramref name="asyncResult" /> parameter was not created by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71707-292">
            <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> Wcześniej wywołano metodę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-292">The <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> method was previously called.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="71707-293">Wystąpił błąd podczas próby uzyskania dostępu do <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-293">An error occurred while attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptTcpClient">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TcpClient EndAcceptTcpClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.TcpClient EndAcceptTcpClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptTcpClient (asyncResult As IAsyncResult) As TcpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::TcpClient ^ EndAcceptTcpClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAcceptTcpClient : IAsyncResult -&gt; System.Net.Sockets.TcpClient" Usage="tcpListener.EndAcceptTcpClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="71707-294">
            <see cref="T:System.IAsyncResult" /> Zwracany przez wywołanie <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-294">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71707-295">Asynchronicznie akceptuje przychodzące próby połączenia i tworzy nową <see cref="T:System.Net.Sockets.TcpClient" /> do obsługi komunikacji z hostem zdalnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-295">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.TcpClient" /> to handle remote host communication.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71707-296">A <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-296">A <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
          <span data-ttu-id="71707-297">
            <see cref="T:System.Net.Sockets.TcpClient" /> Używany do wysyłania i odbierania danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-297">The <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-298">Wykonaj to bloki metody do czasu tej operacji.</span><span class="sxs-lookup"><span data-stu-id="71707-298">This method blocks until the operation is complete.</span></span> <span data-ttu-id="71707-299">Aby wykonać tę operację synchronicznie, należy użyć <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71707-299">To perform this operation synchronously, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-300">Możesz wywołać <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> właściwości podstawowej gniazda (<xref:System.Net.Sockets.TcpClient.Client%2A>) do identyfikowania hosta zdalnego sieci adres i numer portu.</span><span class="sxs-lookup"><span data-stu-id="71707-300">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the underlying socket (<xref:System.Net.Sockets.TcpClient.Client%2A>) to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-301">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> właściwość, aby uzyskać kod błędu i odnoszą się do dokumentacji kodów błędów systemu Windows Sockets w wersji 2 interfejsu API w bibliotece MSDN pod [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) dla szczegółowe Opis błędu.</span><span class="sxs-lookup"><span data-stu-id="71707-301">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-302">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="71707-302">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="71707-303">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="71707-303">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71707-304">Poniższy przykład kodu demonstruje użycie <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> metodę, aby utworzyć i połączenia gniazda.</span><span class="sxs-lookup"><span data-stu-id="71707-304">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> method to create and connect a socket.</span></span> <span data-ttu-id="71707-305">Wywołanie zwrotne delegowanie wywołań <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> metodę, aby zakończyć żądania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="71707-305">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#5)]
 [!code-vb[System.Net.Sockets.TcpListener1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.TcpListener.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71707-306">Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość określająca, czy <see cref="T:System.Net.Sockets.TcpListener" /> zezwala na tylko jeden podstawowy gniazda do nasłuchiwania na konkretnym porcie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-306">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one underlying socket to listen to a specific port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71707-307">
            <see langword="true" /> Jeśli <see cref="T:System.Net.Sockets.TcpListener" /> zezwala na tylko jeden <see cref="T:System.Net.Sockets.TcpListener" /> do nasłuchiwania na konkretnym porcie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-307">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one <see cref="T:System.Net.Sockets.TcpListener" /> to listen to a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="71707-308">.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-308">.</span>
          </span>
          <span data-ttu-id="71707-309">Wartość domyślna to <see langword="true" /> dla systemu Windows Server 2003 i Windows XP z dodatkiem Service Pack 2 lub nowszą wersją, a <see langword="false" /> dla wszystkich innych wersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-309">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-310">Domyślnie wiele odbiorników może nasłuchiwać na określonym porcie.</span><span class="sxs-lookup"><span data-stu-id="71707-310">By default, multiple listeners can listen to a specific port.</span></span> <span data-ttu-id="71707-311">Jednak tylko jeden odbiorniki mogą wykonywać operacje na ruch sieciowy, wysyłane do portu.</span><span class="sxs-lookup"><span data-stu-id="71707-311">However, only one of the listeners can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="71707-312">Jeśli więcej niż jeden odbiornik próbuje powiązać z określonego portu, z bardziej określonego adresu IP obsługuje ruch sieciowy, wysyłane do tego portu.</span><span class="sxs-lookup"><span data-stu-id="71707-312">If more than one listener attempts to bind to a particular port, then the one with the more specific IP address handles the network traffic sent to that port.</span></span> <span data-ttu-id="71707-313">Możesz użyć <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> właściwości, aby uniemożliwić wiele odbiorników nasłuchiwania na konkretnym porcie.</span><span class="sxs-lookup"><span data-stu-id="71707-313">You can use the <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> property to prevent multiple listeners from listening to a specific port.</span></span>  
  
 <span data-ttu-id="71707-314">Ustaw tę właściwość, przed wywołaniem <xref:System.Net.Sockets.TcpListener.Start%2A>, lub zadzwoń <xref:System.Net.Sockets.TcpListener.Stop%2A> metody i ustaw dla tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="71707-314">Set this property before calling <xref:System.Net.Sockets.TcpListener.Start%2A>, or call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method and then set this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71707-315">Poniższy przykładowy kod pobiera i ustawia <xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="71707-315">The following code example gets and sets the <xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpListener1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#2)]
 [!code-vb[System.Net.Sockets.TcpListener1#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71707-316">
            <see cref="T:System.Net.Sockets.TcpListener" /> Została uruchomiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-316">The <see cref="T:System.Net.Sockets.TcpListener" /> has been started.</span>
          </span>
          <span data-ttu-id="71707-317">Wywołaj <see cref="M:System.Net.Sockets.TcpListener.Stop" /> metody, a następnie ustaw <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-317">Call the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method and then set the <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="71707-318">Wystąpił błąd podczas próby uzyskania dostępu bazowego gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-318">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="71707-319">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> zostało zamknięte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-319">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpListener ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tcpListener.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalEndpoint">
      <MemberSignature Language="C#" Value="public System.Net.EndPoint LocalEndpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.EndPoint LocalEndpoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.LocalEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndpoint As EndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::EndPoint ^ LocalEndpoint { System::Net::EndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndpoint : System.Net.EndPoint" Usage="System.Net.Sockets.TcpListener.LocalEndpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71707-320">Pobiera podstawowe <see cref="T:System.Net.EndPoint" /> bieżącego <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-320">Gets the underlying <see cref="T:System.Net.EndPoint" /> of the current <see cref="T:System.Net.Sockets.TcpListener" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71707-321">
            <see cref="T:System.Net.EndPoint" /> Do której <see cref="T:System.Net.Sockets.Socket" /> jest powiązany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-321">The <see cref="T:System.Net.EndPoint" /> to which the <see cref="T:System.Net.Sockets.Socket" /> is bound.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-322">Możesz użyć <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> właściwość do identyfikacji sieci lokalnej interfejsu i numer portu używany do nasłuchiwania żądań przychodzących połączeń klienta, po nawiązaniu połączenia gniazda.</span><span class="sxs-lookup"><span data-stu-id="71707-322">You can use the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property to identify the local network interface and port number being used to listen for incoming client connection requests, after a socket connection has been made.</span></span> <span data-ttu-id="71707-323">Należy to najpierw rzutować <xref:System.Net.EndPoint> do <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="71707-323">You must first cast this <xref:System.Net.EndPoint> to an <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="71707-324">Następnie możesz wywołać <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> właściwość służąca do pobierania lokalny adres IP i <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> właściwość służąca do pobierania numer portu lokalnego.</span><span class="sxs-lookup"><span data-stu-id="71707-324">You can then call the <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> property to retrieve the local IP address, and the <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> property to retrieve the local port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71707-325">Poniższy przykład kodu wyświetla lokalnego adresu IP adres i numer portu, na którym <xref:System.Net.Sockets.TcpListener> nasłuchuje przychodzących żądań połączenia.</span><span class="sxs-lookup"><span data-stu-id="71707-325">The following code example displays the local IP address and port number on which the <xref:System.Net.Sockets.TcpListener> is listening for incoming connection requests.</span></span>  
  
 [!code-cpp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CPP/source.cpp#1)]
 [!code-csharp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CS/source.cs#1)]
 [!code-vb[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="T:System.Net.EndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Pending">
      <MemberSignature Language="C#" Value="public bool Pending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Pending() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Pending" />
      <MemberSignature Language="VB.NET" Value="Public Function Pending () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Pending();" />
      <MemberSignature Language="F#" Value="member this.Pending : unit -&gt; bool" Usage="tcpListener.Pending " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71707-326">Określa, czy żądania oczekujące połączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-326">Determines if there are pending connection requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71707-327">
            <see langword="true" /> w przypadku oczekujących połączenia; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-327">
              <see langword="true" /> if connections are pending; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-328">Metoda nieblokującej na poziomie określa, czy wszystkie żądania oczekujące połączenie.</span><span class="sxs-lookup"><span data-stu-id="71707-328">This non-blocking method determines if there are any pending connection requests.</span></span> <span data-ttu-id="71707-329">Ponieważ <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> i <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody Blokuj wykonywanie aż do <xref:System.Net.Sockets.TcpListener.Start%2A> metoda zostało w kolejce żądań połączenia przychodzących, <xref:System.Net.Sockets.TcpListener.Pending%2A> metody można sprawdzić, czy połączenia są dostępne, przed podjęciem próby je zaakceptować.</span><span class="sxs-lookup"><span data-stu-id="71707-329">Because the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> and <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> methods block execution until the <xref:System.Net.Sockets.TcpListener.Start%2A> method has queued an incoming connection request, the <xref:System.Net.Sockets.TcpListener.Pending%2A> method can be used to determine if connections are available before attempting to accept them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71707-330">Poniższy kod przykładowy kontroli <xref:System.Net.Sockets.TcpListener.Pending%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71707-330">The following code example checks the <xref:System.Net.Sockets.TcpListener.Pending%2A> method.</span></span> <span data-ttu-id="71707-331">Jeśli żądanie połączenia jest oczekuje na zatwierdzenie, następnie wywołania <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> wykonano metody.</span><span class="sxs-lookup"><span data-stu-id="71707-331">If a connection request is waiting to be accepted, then a call to the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method is made.</span></span>  
  
 [!code-cpp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CPP/source.cpp#1)]
 [!code-csharp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CS/source.cs#1)]
 [!code-vb[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71707-332">Odbiornik nie został uruchomiony z wywołaniem <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-332">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Server" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Server { System::Net::Sockets::Socket ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Net.Sockets.Socket" Usage="System.Net.Sockets.TcpListener.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71707-333">Pobiera odnośnej sieci <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-333">Gets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71707-334">Podstawowe <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-334">The underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-335"><xref:System.Net.Sockets.TcpListener> Tworzy <xref:System.Net.Sockets.Socket> nasłuchiwanie przychodzących żądań połączeń klientów.</span><span class="sxs-lookup"><span data-stu-id="71707-335"><xref:System.Net.Sockets.TcpListener> creates a <xref:System.Net.Sockets.Socket> to listen for incoming client connection requests.</span></span> <span data-ttu-id="71707-336">Klasy wywodzące się z <xref:System.Net.Sockets.TcpListener> można użyć tej właściwości w celu rozwiązania tego <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="71707-336">Classes deriving from <xref:System.Net.Sockets.TcpListener> can use this property to get this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="71707-337">Używają bazowej <xref:System.Net.Sockets.Socket> zwrócone przez <xref:System.Net.Sockets.TcpListener.Server%2A> właściwość, jeśli potrzebujesz dostępu poza tym, które <xref:System.Net.Sockets.TcpListener> udostępnia.</span><span class="sxs-lookup"><span data-stu-id="71707-337">Use the underlying <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpListener.Server%2A> property if you require access beyond that which <xref:System.Net.Sockets.TcpListener> provides.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-338"><xref:System.Net.Sockets.TcpListener.Server%2A> Zwraca tylko właściwości <xref:System.Net.Sockets.Socket> używane do nasłuchiwania żądań przychodzących połączeń klienta.</span><span class="sxs-lookup"><span data-stu-id="71707-338">The <xref:System.Net.Sockets.TcpListener.Server%2A> property only returns the <xref:System.Net.Sockets.Socket> used to listen for incoming client connection requests.</span></span> <span data-ttu-id="71707-339">Użyj <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metodę, aby zaakceptować żądanie połączenia oczekujące i uzyskać <xref:System.Net.Sockets.Socket> do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="71707-339">Use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method to accept a pending connection request and obtain a <xref:System.Net.Sockets.Socket> for sending and receiving data.</span></span> <span data-ttu-id="71707-340">Można również użyć <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metodę, aby zaakceptować żądanie połączenia oczekujące i uzyskać <xref:System.Net.Sockets.TcpClient> do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="71707-340">You can also use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method to accept a pending connection request and obtain a <xref:System.Net.Sockets.TcpClient> for sending and receiving data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71707-341">Poniższy przykład kodu demonstruje użycie <xref:System.Net.Sockets.TcpListener.Server%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="71707-341">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.Server%2A> property.</span></span> <span data-ttu-id="71707-342">Podstawowe <xref:System.Net.Sockets.Socket> są pobierane i <xref:System.Net.Sockets.SocketOptionName.Linger> <xref:System.Net.Sockets.Socket> opcja jest skonfigurowana przekroczy limit czasu po 10 sekundach, jeśli dane pozostają nadal w buforze sieciowego po zamknięciu połączenia.</span><span class="sxs-lookup"><span data-stu-id="71707-342">The underlying <xref:System.Net.Sockets.Socket> is retrieved and the <xref:System.Net.Sockets.SocketOptionName.Linger><xref:System.Net.Sockets.Socket> option is configured to time out after 10 seconds if data still remains in the network buffer after the connection is closed.</span></span>  
  
 [!code-csharp[TcpListenerProtectedMembers1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListenerProtectedMembers1/CS/source.cs#1)]
 [!code-vb[TcpListenerProtectedMembers1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListenerProtectedMembers1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71707-343">Rozpoczyna nasłuchiwanie przychodzących żądań połączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-343">Starts listening for incoming connection requests.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="tcpListener.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71707-344">Rozpoczyna nasłuchiwanie przychodzących żądań połączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-344">Starts listening for incoming connection requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-345"><xref:System.Net.Sockets.TcpListener.Start%2A> Metoda inicjuje, podstawowych <xref:System.Net.Sockets.Socket>wiąże ją do punktu końcowego w lokalnych i nasłuchuje przychodzących prób nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="71707-345">The <xref:System.Net.Sockets.TcpListener.Start%2A> method initializes the underlying <xref:System.Net.Sockets.Socket>, binds it to a local endpoint, and listens for incoming connection attempts.</span></span> <span data-ttu-id="71707-346">Jeśli żądanie połączenia zostanie odebrana, <xref:System.Net.Sockets.TcpListener.Start%2A> metoda będzie żądania w kolejce i Kontynuuj, nasłuchiwać żądań dodatkowych, dopóki nie zostanie wywołana <xref:System.Net.Sockets.TcpListener.Stop%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71707-346">If a connection request is received, the <xref:System.Net.Sockets.TcpListener.Start%2A> method will queue the request and continue listening for additional requests until you call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method.</span></span> <span data-ttu-id="71707-347">Jeśli <xref:System.Net.Sockets.TcpListener> odbiera żądanie połączenia po zostało już w kolejce maksymalną liczbę połączeń, spowoduje zgłoszenie <xref:System.Net.Sockets.SocketException> na komputerze klienckim.</span><span class="sxs-lookup"><span data-stu-id="71707-347">If <xref:System.Net.Sockets.TcpListener> receives a connection request after it has already queued the maximum number of connections, it will throw a <xref:System.Net.Sockets.SocketException> on the client.</span></span>  
  
 <span data-ttu-id="71707-348">Aby usunąć połączenie z kolejki połączeń przychodzących, należy użyć <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody lub <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71707-348">To remove a connection from the incoming connection queue, use either the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method or the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="71707-349"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> Metoda spowoduje usunięcie połączenia z kolejki i zwróć <xref:System.Net.Sockets.TcpClient> służącego do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="71707-349">The <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method will remove a connection from the queue and return a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="71707-350"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> Metoda zwróci <xref:System.Net.Sockets.Socket> użyć to samo.</span><span class="sxs-lookup"><span data-stu-id="71707-350">The <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method will return a <xref:System.Net.Sockets.Socket> that you can use to do the same.</span></span> <span data-ttu-id="71707-351">Jeśli aplikacja wymaga tylko synchroniczne operacje We/Wy, użyj <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="71707-351">If your application only requires synchronous I/O, use <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span></span> <span data-ttu-id="71707-352">Aby uzyskać bardziej szczegółową kontrolę zachowania, używać <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span><span class="sxs-lookup"><span data-stu-id="71707-352">For more detailed behavioral control, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span></span> <span data-ttu-id="71707-353">Obie te metody blokuje, dopóki żądanie połączenia jest dostępny w kolejce.</span><span class="sxs-lookup"><span data-stu-id="71707-353">Both of these methods block until a connection request is available in the queue.</span></span>  
  
 <span data-ttu-id="71707-354">Użyj <xref:System.Net.Sockets.TcpListener.Stop%2A> metodę, aby zamknąć <xref:System.Net.Sockets.TcpListener> i przestawaj słuchać.</span><span class="sxs-lookup"><span data-stu-id="71707-354">Use the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener> and stop listening.</span></span> <span data-ttu-id="71707-355">Odpowiedzialność za zamykanie akceptowane połączenia oddzielnie.</span><span class="sxs-lookup"><span data-stu-id="71707-355">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-356">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="71707-356">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="71707-357">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="71707-357">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71707-358">Poniższy przykład kodu demonstruje sposób <xref:System.Net.Sockets.TcpListener.Start%2A> służy do nasłuchiwania przychodzących próby połączenia klienta.</span><span class="sxs-lookup"><span data-stu-id="71707-358">The following code example demonstrates how <xref:System.Net.Sockets.TcpListener.Start%2A> is used to listen for incoming client connection attempts.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#3)]
 [!code-vb[System.Net.Sockets.TcpListener1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="71707-359">Użyj <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> właściwości, aby uzyskać kod błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-359">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span>
          </span>
          <span data-ttu-id="71707-360">Po otrzymaniu tego kodu, możesz zapoznać się z <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">kod błędu API Windows Sockets w wersji 2</see> dokumentacji, aby uzyskać szczegółowy opis błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-360">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start (int backlog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start(int32 backlog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Start(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start (backlog As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start(int backlog);" />
      <MemberSignature Language="F#" Value="member this.Start : int -&gt; unit" Usage="tcpListener.Start backlog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backlog" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="backlog">
          <span data-ttu-id="71707-361">Maksymalna długość kolejki oczekiwania połączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-361">The maximum length of the pending connections queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71707-362">Rozpoczyna nasłuchiwanie przychodzących żądań połączenia z maksymalną liczbę oczekujących połączeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-362">Starts listening for incoming connection requests with a maximum number of pending connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-363"><xref:System.Net.Sockets.TcpListener.Start%2A> Metoda inicjuje, podstawowych <xref:System.Net.Sockets.Socket>wiąże ją do punktu końcowego w lokalnych i nasłuchuje przychodzących prób nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="71707-363">The <xref:System.Net.Sockets.TcpListener.Start%2A> method initializes the underlying <xref:System.Net.Sockets.Socket>, binds it to a local endpoint, and listens for incoming connection attempts.</span></span> <span data-ttu-id="71707-364">Jeśli żądanie połączenia zostanie odebrana, <xref:System.Net.Sockets.TcpListener.Start%2A> będzie żądania w kolejce i kontynuować nasłuchiwanie żądań dodatkowych, dopóki nie zostanie wywołana <xref:System.Net.Sockets.TcpListener.Stop%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71707-364">If a connection request is received, <xref:System.Net.Sockets.TcpListener.Start%2A> will queue the request and continue listening for additional requests until you call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method.</span></span> <span data-ttu-id="71707-365">Jeśli <xref:System.Net.Sockets.TcpListener> odbiera żądanie połączenia po już zostało w kolejce maksymalną liczbę połączeń, które będzie zgłaszać wyjątek <xref:System.Net.Sockets.SocketException> na komputerze klienckim.</span><span class="sxs-lookup"><span data-stu-id="71707-365">If <xref:System.Net.Sockets.TcpListener> receives a connection request after it has already queued the maximum number of connections it will throw a <xref:System.Net.Sockets.SocketException> on the client.</span></span>  
  
 <span data-ttu-id="71707-366">Aby usunąć połączenie z kolejki połączeń przychodzących, należy użyć <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody lub <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71707-366">To remove a connection from the incoming connection queue, use either the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method or the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="71707-367"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> Metoda spowoduje usunięcie połączenia z kolejki i zwróć <xref:System.Net.Sockets.TcpClient> służącego do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="71707-367">The <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method will remove a connection from the queue and return a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="71707-368"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> Metoda zwróci <xref:System.Net.Sockets.Socket> użyć to samo.</span><span class="sxs-lookup"><span data-stu-id="71707-368">The <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method will return a <xref:System.Net.Sockets.Socket> that you can use to do the same.</span></span> <span data-ttu-id="71707-369">Jeśli aplikacja wymaga tylko synchroniczne operacje We/Wy, użyj <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="71707-369">If your application only requires synchronous I/O, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span></span> <span data-ttu-id="71707-370">Aby uzyskać bardziej szczegółową kontrolę zachowania, używać <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="71707-370">For more detailed behavioral control, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="71707-371">Obie te metody blokuje, dopóki żądanie połączenia jest dostępny w kolejce.</span><span class="sxs-lookup"><span data-stu-id="71707-371">Both of these methods block until a connection request is available in the queue.</span></span>  
  
 <span data-ttu-id="71707-372">Użyj <xref:System.Net.Sockets.TcpListener.Stop%2A> metodę, aby zamknąć <xref:System.Net.Sockets.TcpListener> i przestawaj słuchać.</span><span class="sxs-lookup"><span data-stu-id="71707-372">Use the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener> and stop listening.</span></span> <span data-ttu-id="71707-373">Odpowiedzialność za zamykanie akceptowane połączenia oddzielnie.</span><span class="sxs-lookup"><span data-stu-id="71707-373">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-374">Użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> właściwość, aby uzyskać kod błędu i odnoszą się do dokumentacji kodów błędów systemu Windows Sockets w wersji 2 interfejsu API w bibliotece MSDN pod [ http://msdn.microsoft.com/library/ ](https://msdn.microsoft.com/library/) szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="71707-374">Use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library/](https://msdn.microsoft.com/library/) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-375">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="71707-375">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="71707-376">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="71707-376">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71707-377">Poniższy przykład kodu demonstruje sposób <xref:System.Net.Sockets.TcpListener.Start%2A> służy do nasłuchiwania przychodzących próby połączenia klienta.</span><span class="sxs-lookup"><span data-stu-id="71707-377">The following code example demonstrates how <xref:System.Net.Sockets.TcpListener.Start%2A> is used to listen for incoming client connection attempts.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#3)]
 [!code-vb[System.Net.Sockets.TcpListener1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="71707-378">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-378">An error occurred while accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="71707-379">
            <paramref name="backlog" /> Parametr jest mniejsza od zera lub przekracza maksymalną liczbę dozwolonych połączeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-379">The <paramref name="backlog" /> parameter is less than zero or exceeds the maximum number of permitted connections.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71707-380">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> ma wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-380">The underlying <see cref="T:System.Net.Sockets.Socket" /> is null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="tcpListener.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71707-381">Zamyka odbiornik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-381">Closes the listener.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71707-382"><xref:System.Net.Sockets.TcpListener.Stop%2A> Zamyka odbiornik.</span><span class="sxs-lookup"><span data-stu-id="71707-382"><xref:System.Net.Sockets.TcpListener.Stop%2A> closes the listener.</span></span> <span data-ttu-id="71707-383">Wszelkie żądania połączenia niezaakceptowanych w kolejce zostaną utracone.</span><span class="sxs-lookup"><span data-stu-id="71707-383">Any unaccepted connection requests in the queue will be lost.</span></span> <span data-ttu-id="71707-384">Zgłosi hostom zdalnym oczekiwania na połączenie można zaakceptować <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="71707-384">Remote hosts waiting for a connection to be accepted will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="71707-385">Odpowiedzialność za zamykanie akceptowane połączenia oddzielnie.</span><span class="sxs-lookup"><span data-stu-id="71707-385">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71707-386">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="71707-386">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="71707-387">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="71707-387">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71707-388">Poniższy przykład kodu demonstruje sposób użycia <xref:System.Net.Sockets.TcpListener.Stop%2A> metodę, aby zamknąć bazowego <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="71707-388">The following code example demonstrates using the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CPP/tcpserver.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CS/tcpserver.cs#1)]
 [!code-vb[System.Net.Sockets.TcpListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/VB/tcpserver.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="71707-389">Użyj <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> właściwości, aby uzyskać kod błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-389">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span>
          </span>
          <span data-ttu-id="71707-390">Po otrzymaniu tego kodu, możesz zapoznać się z <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">kod błędu API Windows Sockets w wersji 2</see> dokumentacji, aby uzyskać szczegółowy opis błędu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71707-390">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="71707-391">
              <see cref="M:System.Net.Sockets.TcpListener.Stop" /> Metoda zamyka, podstawowe <see cref="T:System.Net.Sockets.Socket" />i tworzy nowy <see cref="T:System.Net.Sockets.Socket" /> dla <see cref="T:System.Net.Sockets.TcpListener" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="71707-391">The <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method also closes the underlying <see cref="T:System.Net.Sockets.Socket" />, and creates a new <see cref="T:System.Net.Sockets.Socket" /> for the <see cref="T:System.Net.Sockets.TcpListener" />.</span>
            </span>
            <span data-ttu-id="71707-392">Jeśli ustawisz wszystkie właściwości w podstawowych <see cref="T:System.Net.Sockets.Socket" /> przed wywołaniem <see cref="M:System.Net.Sockets.TcpListener.Stop" /> metody te właściwości nie przeniosą się do nowego <see cref="T:System.Net.Sockets.Socket" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="71707-392">If you set any properties on the underlying <see cref="T:System.Net.Sockets.Socket" /> prior to calling the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method, those properties will not carry over to the new <see cref="T:System.Net.Sockets.Socket" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
  </Members>
</Type>