<Type Name="TcpListener" FullName="System.Net.Sockets.TcpListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14eb87b3d114dd0c716942f6728b14748d3032d6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69112207" /></Metadata><TypeSignature Language="C#" Value="public class TcpListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpListener extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpListener" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpListener" />
  <TypeSignature Language="F#" Value="type TcpListener = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b55ce-101">Nasłuchuje połączeń od klientów sieci TCP.</span><span class="sxs-lookup"><span data-stu-id="b55ce-101">Listens for connections from TCP network clients.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-102"><xref:System.Net.Sockets.TcpListener> Klasa zawiera proste metody, które nasłuchują i akceptują przychodzące żądania połączeń w bloku trybu synchronicznego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-102">The <xref:System.Net.Sockets.TcpListener> class provides simple methods that listen for and accept incoming connection requests in blocking synchronous mode.</span></span> <span data-ttu-id="b55ce-103">Możesz użyć <xref:System.Net.Sockets.TcpClient> albo <xref:System.Net.Sockets.Socket> lub, aby połączyć się z <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="b55ce-103">You can use either a <xref:System.Net.Sockets.TcpClient> or a <xref:System.Net.Sockets.Socket> to connect with a <xref:System.Net.Sockets.TcpListener>.</span></span> <span data-ttu-id="b55ce-104"><xref:System.Net.Sockets.TcpListener> Utwórz<xref:System.Net.IPEndPoint>przy użyciu, lokalny adres IP i numer portu lub tylko numer portu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-104">Create a <xref:System.Net.Sockets.TcpListener> using an <xref:System.Net.IPEndPoint>, a Local IP address and port number, or just a port number.</span></span> <span data-ttu-id="b55ce-105">Określ <xref:System.Net.IPAddress.Any> wartość dla lokalnego adresu IP i wartość 0 dla lokalnego numeru portu, jeśli chcesz, aby Dostawca usługi był przypisany do tych wartości.</span><span class="sxs-lookup"><span data-stu-id="b55ce-105">Specify <xref:System.Net.IPAddress.Any> for the local IP address and 0 for the local port number if you want the underlying service provider to assign those values for you.</span></span> <span data-ttu-id="b55ce-106">Jeśli zdecydujesz się to zrobić, możesz użyć <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> właściwości, aby zidentyfikować przypisane informacje, po nawiązaniu połączenia z gniazdem.</span><span class="sxs-lookup"><span data-stu-id="b55ce-106">If you choose to do this, you can use the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property to identify the assigned information, after the socket has connected.</span></span>  
  
 <span data-ttu-id="b55ce-107">Użyj metody <xref:System.Net.Sockets.TcpListener.Start%2A> , aby rozpocząć nasłuchiwanie żądań połączeń przychodzących.</span><span class="sxs-lookup"><span data-stu-id="b55ce-107">Use the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection requests.</span></span> <span data-ttu-id="b55ce-108"><xref:System.Net.Sockets.TcpListener.Start%2A>będzie kolejkować przychodzące połączenia do momentu wywołania <xref:System.Net.Sockets.TcpListener.Stop%2A> metody lub <xref:System.Net.Sockets.SocketOptionName.MaxConnections>do kolejki.</span><span class="sxs-lookup"><span data-stu-id="b55ce-108"><xref:System.Net.Sockets.TcpListener.Start%2A> will queue incoming connections until you either call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method or it has queued <xref:System.Net.Sockets.SocketOptionName.MaxConnections>.</span></span> <span data-ttu-id="b55ce-109"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> Użyj lub <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> , aby ściągnąć połączenie z kolejki żądań połączeń przychodzących.</span><span class="sxs-lookup"><span data-stu-id="b55ce-109">Use either <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> or <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> to pull a connection from the incoming connection request queue.</span></span> <span data-ttu-id="b55ce-110">Te dwie metody zostaną zablokowane.</span><span class="sxs-lookup"><span data-stu-id="b55ce-110">These two methods will block.</span></span> <span data-ttu-id="b55ce-111">Jeśli chcesz uniknąć blokowania, możesz najpierw użyć metody, <xref:System.Net.Sockets.TcpListener.Pending%2A> aby określić, czy w kolejce są dostępne żądania połączenia.</span><span class="sxs-lookup"><span data-stu-id="b55ce-111">If you want to avoid blocking, you can use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method first to determine if connection requests are available in the queue.</span></span>  
  
 <span data-ttu-id="b55ce-112">Wywołaj <xref:System.Net.Sockets.TcpListener.Stop%2A> metodę, aby <xref:System.Net.Sockets.TcpListener>zamknąć.</span><span class="sxs-lookup"><span data-stu-id="b55ce-112">Call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-113"><xref:System.Net.Sockets.TcpListener.Stop%2A> Metoda nie zamyka żadnych zaakceptowanych połączeń.</span><span class="sxs-lookup"><span data-stu-id="b55ce-113">The <xref:System.Net.Sockets.TcpListener.Stop%2A> method does not close any accepted connections.</span></span> <span data-ttu-id="b55ce-114">Użytkownik jest odpowiedzialny za zamknięcie osobno.</span><span class="sxs-lookup"><span data-stu-id="b55ce-114">You are responsible for closing these separately.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b55ce-115">Poniższy przykład kodu tworzy <xref:System.Net.Sockets.TcpListener>.</span><span class="sxs-lookup"><span data-stu-id="b55ce-115">The following code example creates a <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CPP/tcpserver.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CS/tcpserver.cs#1)]
 [!code-vb[System.Net.Sockets.TcpListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/VB/tcpserver.vb#1)]  
  
 <span data-ttu-id="b55ce-116">Zapoznaj <xref:System.Net.Sockets.TcpClient> się z przykładem dla klienta.</span><span class="sxs-lookup"><span data-stu-id="b55ce-116">See <xref:System.Net.Sockets.TcpClient> for a client example.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="b55ce-117">Aby nawiązać połączenie wychodzące lub zaakceptować żądanie przychodzące.</span><span class="sxs-lookup"><span data-stu-id="b55ce-117">to establish an outgoing connection or accept an incoming request.</span></span></permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b55ce-118">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.TcpListener" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="b55ce-118">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : int -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use TcpListener (IPAddress address, int port) instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use TcpListener(IPAddress localaddr, int port) instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("Use TcpListener(IPAddress localaddr, int port).")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use TcpListener(IPAddress localaddr, int port) instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="b55ce-119">Port, na którym nasłuchuje prób połączenia przychodzącego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-119">The port on which to listen for incoming connection attempts.</span></span></param>
        <summary><span data-ttu-id="b55ce-120">Inicjuje nowe wystąpienie <see cref="T:System.Net.Sockets.TcpListener" /> klasy, która nasłuchuje na określonym porcie.</span><span class="sxs-lookup"><span data-stu-id="b55ce-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens on the specified port.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-121">Ten konstruktor jest przestarzały.</span><span class="sxs-lookup"><span data-stu-id="b55ce-121">This constructor is obsolete.</span></span> <span data-ttu-id="b55ce-122">Użyj konstruktorów <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>lub. <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b55ce-122">Use the <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType> or <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType> constructors.</span></span>  
  
 <span data-ttu-id="b55ce-123">Ten konstruktor pozwala określić numer portu, na którym mają być nasłuchiwane próby połączenia przychodzącego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-123">This constructor allows you to specify the port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="b55ce-124">W przypadku tego konstruktora Dostawca usługi bazowej przypisuje najbardziej odpowiedni adres sieciowy.</span><span class="sxs-lookup"><span data-stu-id="b55ce-124">With this constructor, the underlying service provider assigns the most appropriate network address.</span></span> <span data-ttu-id="b55ce-125">Jeśli nie wiesz, który port lokalny jest używany, możesz określić wartość 0 jako numer portu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-125">If you do not care which local port is used, you can specify 0 for the port number.</span></span> <span data-ttu-id="b55ce-126">W takim przypadku Dostawca usługi przypisze dostępny numer portu tymczasowych.</span><span class="sxs-lookup"><span data-stu-id="b55ce-126">In this case, the service provider will assign an available ephemeral port number.</span></span> <span data-ttu-id="b55ce-127">W przypadku korzystania z <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> tego podejścia można określić, jaki adres sieci lokalnej i numer portu zostały przypisane przy użyciu właściwości.</span><span class="sxs-lookup"><span data-stu-id="b55ce-127">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="b55ce-128">Wywołaj <xref:System.Net.Sockets.TcpListener.Start%2A> metodę, aby rozpocząć nasłuchiwanie prób połączenia przychodzącego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-128">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b55ce-129">Poniższy przykład kodu tworzy <xref:System.Net.Sockets.TcpListener> przy użyciu numeru portu lokalnego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-129">The following code example creates a <xref:System.Net.Sockets.TcpListener> using a local port number.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b55ce-130"><paramref name="port" />nie jest między <see cref="F:System.Net.IPEndPoint.MinPort" /> i <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="b55ce-130"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : System.Net.IPEndPoint -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP"><span data-ttu-id="b55ce-131">Reprezentuje lokalny punkt końcowy, do którego ma zostać powiązany odbiornik <see cref="T:System.Net.Sockets.Socket" />. <see cref="T:System.Net.IPEndPoint" /></span><span class="sxs-lookup"><span data-stu-id="b55ce-131">An <see cref="T:System.Net.IPEndPoint" /> that represents the local endpoint to which to bind the listener <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <summary><span data-ttu-id="b55ce-132">Inicjuje nowe wystąpienie <see cref="T:System.Net.Sockets.TcpListener" /> klasy z określonym lokalnym punktem końcowym.</span><span class="sxs-lookup"><span data-stu-id="b55ce-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class with the specified local endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-133">Ten konstruktor umożliwia określenie lokalnego adresu IP i numeru portu, na którym mają być nasłuchiwane próby połączenia przychodzącego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-133">This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="b55ce-134">Przed użyciem tego konstruktora należy utworzyć <xref:System.Net.IPEndPoint> przy użyciu żądanego lokalnego adresu IP i numeru portu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-134">Before using this constructor, you must create an <xref:System.Net.IPEndPoint> using the desired local IP address and port number.</span></span> <span data-ttu-id="b55ce-135">Przekaż ten <xref:System.Net.IPEndPoint> Konstruktor `localEP` jako parametr.</span><span class="sxs-lookup"><span data-stu-id="b55ce-135">Pass this <xref:System.Net.IPEndPoint> to the constructor as the `localEP` parameter.</span></span>  
  
 <span data-ttu-id="b55ce-136">Jeśli nie wiesz, który adres lokalny jest przypisany, możesz utworzyć <xref:System.Net.IPEndPoint> parametr używany <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> jako adres, a usługodawca źródłowy przypisze najbardziej odpowiedni adres sieciowy.</span><span class="sxs-lookup"><span data-stu-id="b55ce-136">If you do not care which local address is assigned, you can create an <xref:System.Net.IPEndPoint> using <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> as the address parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="b55ce-137">Może to pomóc uprościć aplikację, jeśli masz wiele interfejsów sieciowych.</span><span class="sxs-lookup"><span data-stu-id="b55ce-137">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="b55ce-138">Jeśli nie wiesz, który port lokalny jest używany, możesz utworzyć <xref:System.Net.IPEndPoint> numer portu za pomocą wartości 0.</span><span class="sxs-lookup"><span data-stu-id="b55ce-138">If you do not care which local port is used, you can create an <xref:System.Net.IPEndPoint> using 0 for the port number.</span></span> <span data-ttu-id="b55ce-139">W takim przypadku Dostawca usługi przypisze dostępny numer portu tymczasowych.</span><span class="sxs-lookup"><span data-stu-id="b55ce-139">In this case, the service provider will assign an available ephemeral port number.</span></span> <span data-ttu-id="b55ce-140">W przypadku korzystania z <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> tego podejścia można określić, jaki adres sieci lokalnej i numer portu zostały przypisane przy użyciu właściwości.</span><span class="sxs-lookup"><span data-stu-id="b55ce-140">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="b55ce-141">Wywołaj <xref:System.Net.Sockets.TcpListener.Start%2A> metodę, aby rozpocząć nasłuchiwanie prób połączenia przychodzącego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-141">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-142">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-142">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b55ce-143">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="b55ce-143">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b55ce-144">Poniższy przykład kodu tworzy wystąpienie <xref:System.Net.Sockets.TcpListener> klasy przy użyciu lokalnego punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-144">The following code example creates an instance of the <xref:System.Net.Sockets.TcpListener> class using the local endpoint.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b55ce-145"><paramref name="localEP" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b55ce-145"><paramref name="localEP" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (System.Net.IPAddress localaddr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress localaddr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localaddr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(System::Net::IPAddress ^ localaddr, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : System.Net.IPAddress * int -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener (localaddr, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localaddr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="localaddr"><span data-ttu-id="b55ce-146"><see cref="T:System.Net.IPAddress" /> Reprezentuje lokalny adres IP.</span><span class="sxs-lookup"><span data-stu-id="b55ce-146">An <see cref="T:System.Net.IPAddress" /> that represents the local IP address.</span></span></param>
        <param name="port"><span data-ttu-id="b55ce-147">Port, na którym nasłuchuje prób połączenia przychodzącego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-147">The port on which to listen for incoming connection attempts.</span></span></param>
        <summary><span data-ttu-id="b55ce-148">Inicjuje nowe wystąpienie <see cref="T:System.Net.Sockets.TcpListener" /> klasy, które nasłuchuje dla prób połączenia przychodzącego na określonym lokalnym adresie IP i numer portu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-148">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens for incoming connection attempts on the specified local IP address and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-149">Ten konstruktor umożliwia określenie lokalnego adresu IP i numeru portu, na którym mają być nasłuchiwane próby połączenia przychodzącego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-149">This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="b55ce-150">Przed wywołaniem tego konstruktora należy najpierw utworzyć <xref:System.Net.IPAddress> przy użyciu żądanego adresu lokalnego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-150">Before calling this constructor you must first create an <xref:System.Net.IPAddress> using the desired local address.</span></span> <span data-ttu-id="b55ce-151">Przekaż ten <xref:System.Net.IPAddress> Konstruktor `localaddr` jako parametr.</span><span class="sxs-lookup"><span data-stu-id="b55ce-151">Pass this <xref:System.Net.IPAddress> to the constructor as the `localaddr` parameter.</span></span> <span data-ttu-id="b55ce-152">Jeśli nie wiesz, który adres lokalny jest przypisany, określ <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> `localaddr` dla parametru, a Dostawca usługi bazowej przypisze najbardziej odpowiedni adres sieciowy.</span><span class="sxs-lookup"><span data-stu-id="b55ce-152">If you do not care which local address is assigned, specify <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> for the `localaddr` parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="b55ce-153">Może to pomóc uprościć aplikację, jeśli masz wiele interfejsów sieciowych.</span><span class="sxs-lookup"><span data-stu-id="b55ce-153">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="b55ce-154">Jeśli nie wiesz, który port lokalny jest używany, możesz określić wartość 0 jako numer portu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-154">If you do not care which local port is used, you can specify 0 for the port number.</span></span> <span data-ttu-id="b55ce-155">W takim przypadku dostawca usług przypisze dostępny numer portu z zakresu od 1024 do 5000.</span><span class="sxs-lookup"><span data-stu-id="b55ce-155">In this case, the service provider will assign an available port number between 1024 and 5000.</span></span> <span data-ttu-id="b55ce-156">W przypadku korzystania z <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> tego podejścia można określić, jaki adres sieci lokalnej i numer portu zostały przypisane przy użyciu właściwości.</span><span class="sxs-lookup"><span data-stu-id="b55ce-156">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="b55ce-157">Wywołaj <xref:System.Net.Sockets.TcpListener.Start%2A> metodę, aby rozpocząć nasłuchiwanie prób połączenia przychodzącego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-157">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-158">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-158">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b55ce-159">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="b55ce-159">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b55ce-160">Poniższy przykład kodu tworzy wystąpienie <xref:System.Net.Sockets.TcpListener> klasy przy użyciu lokalnego adresu IP i numeru portu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-160">The following code example creates an instance of the <xref:System.Net.Sockets.TcpListener> class using a local IP address and port number.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b55ce-161"><paramref name="localaddr" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b55ce-161"><paramref name="localaddr" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b55ce-162"><paramref name="port" />nie jest między <see cref="F:System.Net.IPEndPoint.MinPort" /> i <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="b55ce-162"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <altmember cref="T:System.Net.IPAddress" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName="AcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket AcceptSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket AcceptSocket() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptSocket" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptSocket () As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ AcceptSocket();" />
      <MemberSignature Language="F#" Value="member this.AcceptSocket : unit -&gt; System.Net.Sockets.Socket" Usage="tcpListener.AcceptSocket " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b55ce-163">Akceptuje oczekujące żądanie połączenia.</span><span class="sxs-lookup"><span data-stu-id="b55ce-163">Accepts a pending connection request.</span></span></summary>
        <returns><span data-ttu-id="b55ce-164"><see cref="T:System.Net.Sockets.Socket" /> Służy do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="b55ce-164">A <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-165"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>to metoda blokująca zwracająca wartość <xref:System.Net.Sockets.Socket> , której można użyć do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="b55ce-165"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> is a blocking method that returns a <xref:System.Net.Sockets.Socket> that you can use to send and receive data.</span></span> <span data-ttu-id="b55ce-166">Jeśli chcesz uniknąć blokowania, użyj <xref:System.Net.Sockets.TcpListener.Pending%2A> metody, aby określić, czy żądania połączeń są dostępne w kolejce połączeń przychodzących.</span><span class="sxs-lookup"><span data-stu-id="b55ce-166">If you want to avoid blocking, use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method to determine if connection requests are available in the incoming connection queue.</span></span>  
  
 <span data-ttu-id="b55ce-167"><xref:System.Net.Sockets.Socket> Zwrócona wartość jest inicjowana przy użyciu adresu IP i numeru portu hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-167">The <xref:System.Net.Sockets.Socket> returned is initialized with the IP address and port number of the remote host.</span></span> <span data-ttu-id="b55ce-168">Do komunikacji z hostem zdalnym <xref:System.Net.Sockets.Socket.Send%2A> można <xref:System.Net.Sockets.Socket.Receive%2A> użyć dowolnej z metod <xref:System.Net.Sockets.Socket> dostępnych w klasie.</span><span class="sxs-lookup"><span data-stu-id="b55ce-168">You can use any of the <xref:System.Net.Sockets.Socket.Send%2A> and <xref:System.Net.Sockets.Socket.Receive%2A> methods available in the <xref:System.Net.Sockets.Socket> class to communicate with the remote host.</span></span> <span data-ttu-id="b55ce-169">Gdy skończysz korzystać z programu <xref:System.Net.Sockets.Socket>, pamiętaj, aby <xref:System.Net.Sockets.Socket.Close%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="b55ce-169">When you are finished using the <xref:System.Net.Sockets.Socket>, be sure to call its <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="b55ce-170">Jeśli aplikacja jest stosunkowo prosta, rozważ użycie <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody zamiast <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b55ce-170">If your application is relatively simple, consider using the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method rather than the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="b55ce-171"><xref:System.Net.Sockets.TcpClient>zapewnia proste metody wysyłania i otrzymywania danych za pośrednictwem sieci podczas blokowania trybu synchronicznego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-171"><xref:System.Net.Sockets.TcpClient> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-172">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-172">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b55ce-173">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="b55ce-173">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b55ce-174">W poniższym przykładzie <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> kodu Metoda jest używana do <xref:System.Net.Sockets.Socket>zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="b55ce-174">In the following code example, the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method is used to return a <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="b55ce-175">Jest <xref:System.Net.Sockets.Socket> on używany do komunikowania się z nowo połączonym klientem.</span><span class="sxs-lookup"><span data-stu-id="b55ce-175">This <xref:System.Net.Sockets.Socket> is used to communicate with the newly connected client.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b55ce-176">Odbiornik nie został uruchomiony z wywołaniem metody <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="b55ce-176">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Pending" />
      </Docs>
    </Member>
    <Member MemberName="AcceptSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt; AcceptSocketAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Sockets.Socket&gt; AcceptSocketAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptSocketAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptSocketAsync () As Task(Of Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::Socket ^&gt; ^ AcceptSocketAsync();" />
      <MemberSignature Language="F#" Value="member this.AcceptSocketAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt;" Usage="tcpListener.AcceptSocketAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b55ce-177">Akceptuje oczekujące żądanie połączenia jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="b55ce-177">Accepts a pending connection request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="b55ce-178">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="b55ce-178">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="b55ce-179">Właściwość obiektu Task <see cref="T:System.Net.Sockets.Socket" /> zwraca wartość użytą do wysyłania i odbierania danych. <see cref="P:System.Threading.Tasks.Task`1.Result" /></span><span class="sxs-lookup"><span data-stu-id="b55ce-179">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-180">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="b55ce-180">This operation will not block.</span></span> <span data-ttu-id="b55ce-181">Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po zaakceptowaniu połączenia gniazda.</span><span class="sxs-lookup"><span data-stu-id="b55ce-181">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the socket connection has been accepted.</span></span>  
  
 <span data-ttu-id="b55ce-182"><xref:System.Net.Sockets.Socket> Zwracany w<xref:System.Threading.Tasks.Task%601> jest inicjowany przy użyciu adresu IP i numeru portu hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-182">The <xref:System.Net.Sockets.Socket> returned in <xref:System.Threading.Tasks.Task%601> is initialized with the IP address and port number of the remote host.</span></span> <span data-ttu-id="b55ce-183">Do komunikacji z hostem zdalnym <xref:System.Net.Sockets.Socket.Send%2A> można <xref:System.Net.Sockets.Socket.Receive%2A> użyć dowolnej z metod <xref:System.Net.Sockets.Socket> dostępnych w klasie.</span><span class="sxs-lookup"><span data-stu-id="b55ce-183">You can use any of the <xref:System.Net.Sockets.Socket.Send%2A> and <xref:System.Net.Sockets.Socket.Receive%2A> methods available in the <xref:System.Net.Sockets.Socket> class to communicate with the remote host.</span></span> <span data-ttu-id="b55ce-184">Gdy skończysz korzystać z programu <xref:System.Net.Sockets.Socket>, pamiętaj, aby <xref:System.Net.Sockets.Socket.Close%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="b55ce-184">When you are finished using the <xref:System.Net.Sockets.Socket>, be sure to call its <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="b55ce-185">Jeśli aplikacja jest stosunkowo prosta, rozważ użycie <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody zamiast <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b55ce-185">If your application is relatively simple, consider using the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method rather than the <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A> method.</span></span> <span data-ttu-id="b55ce-186"><xref:System.Net.Sockets.TcpClient>zapewnia proste metody wysyłania i otrzymywania danych za pośrednictwem sieci podczas blokowania trybu synchronicznego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-186"><xref:System.Net.Sockets.TcpClient> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-187">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-187">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b55ce-188">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="b55ce-188">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b55ce-189">Odbiornik nie został uruchomiony z wywołaniem metody <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="b55ce-189">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Pending" />
      </Docs>
    </Member>
    <Member MemberName="AcceptTcpClient">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TcpClient AcceptTcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.TcpClient AcceptTcpClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptTcpClient () As TcpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::TcpClient ^ AcceptTcpClient();" />
      <MemberSignature Language="F#" Value="member this.AcceptTcpClient : unit -&gt; System.Net.Sockets.TcpClient" Usage="tcpListener.AcceptTcpClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpClient</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b55ce-190">Akceptuje oczekujące żądanie połączenia.</span><span class="sxs-lookup"><span data-stu-id="b55ce-190">Accepts a pending connection request.</span></span></summary>
        <returns><span data-ttu-id="b55ce-191"><see cref="T:System.Net.Sockets.TcpClient" /> Służy do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="b55ce-191">A <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-192"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>to metoda blokująca zwracająca wartość <xref:System.Net.Sockets.TcpClient> , której można użyć do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="b55ce-192"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> is a blocking method that returns a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="b55ce-193">Użyj metody <xref:System.Net.Sockets.TcpListener.Pending%2A> , aby określić, czy żądania połączeń są dostępne w kolejce połączeń przychodzących, jeśli chcesz uniknąć blokowania.</span><span class="sxs-lookup"><span data-stu-id="b55ce-193">Use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method to determine if connection requests are available in the incoming connection queue if you want to avoid blocking.</span></span>  
  
 <span data-ttu-id="b55ce-194">Użyj metody, aby uzyskać podstawę <xref:System.Net.Sockets.NetworkStream> zwracanej <xref:System.Net.Sockets.TcpClient>wartości. <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b55ce-194">Use the <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream> of the returned <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="b55ce-195"><xref:System.Net.Sockets.NetworkStream> Program udostępnia metody wysyłania i otrzymywania z hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-195">The <xref:System.Net.Sockets.NetworkStream> will provide you with methods for sending and receiving with the remote host.</span></span> <span data-ttu-id="b55ce-196">Gdy korzystasz z programu <xref:System.Net.Sockets.TcpClient>, pamiętaj, aby <xref:System.Net.Sockets.TcpClient.Close%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="b55ce-196">When you are through with the <xref:System.Net.Sockets.TcpClient>, be sure to call its <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span> <span data-ttu-id="b55ce-197">Jeśli potrzebujesz większej elastyczności niż <xref:System.Net.Sockets.TcpClient> oferty, rozważ użycie. <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A></span><span class="sxs-lookup"><span data-stu-id="b55ce-197">If you want greater flexibility than a <xref:System.Net.Sockets.TcpClient> offers, consider using <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-198">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-198">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b55ce-199">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="b55ce-199">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b55ce-200">W poniższym przykładzie <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> kodu Metoda jest używana do <xref:System.Net.Sockets.TcpClient>zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="b55ce-200">In the following code example, the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method is used to return a <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="b55ce-201">Jest <xref:System.Net.Sockets.TcpClient> on używany do komunikowania się z nowo połączonym klientem.</span><span class="sxs-lookup"><span data-stu-id="b55ce-201">This <xref:System.Net.Sockets.TcpClient> is used to communicate with the newly connected client.</span></span>  
  
 [!code-cpp[Classic TcpListenerExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListenerExample/CPP/source.cpp#1)]
 [!code-csharp[Classic TcpListenerExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListenerExample/CS/source.cs#1)]
 [!code-vb[Classic TcpListenerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListenerExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b55ce-202">Odbiornik nie został uruchomiony z wywołaniem metody <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="b55ce-202">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b55ce-203"><see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> Użyj właściwości, aby uzyskać określony kod błędu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-203">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="b55ce-204">Po uzyskaniu tego kodu można odwołać się do dokumentacji <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">kodu błędu interfejsu API Windows Sockets w wersji 2</see> , aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-204">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.TcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
      </Docs>
    </Member>
    <Member MemberName="AcceptTcpClientAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt; AcceptTcpClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Sockets.TcpClient&gt; AcceptTcpClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptTcpClientAsync () As Task(Of TcpClient)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::TcpClient ^&gt; ^ AcceptTcpClientAsync();" />
      <MemberSignature Language="F#" Value="member this.AcceptTcpClientAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt;" Usage="tcpListener.AcceptTcpClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b55ce-205">Akceptuje oczekujące żądanie połączenia jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="b55ce-205">Accepts a pending connection request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="b55ce-206">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="b55ce-206">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="b55ce-207">Właściwość obiektu Task <see cref="T:System.Net.Sockets.TcpClient" /> zwraca wartość użytą do wysyłania i odbierania danych. <see cref="P:System.Threading.Tasks.Task`1.Result" /></span><span class="sxs-lookup"><span data-stu-id="b55ce-207">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-208">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="b55ce-208">This operation will not block.</span></span> <span data-ttu-id="b55ce-209">Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po zaakceptowaniu połączenia TCP.</span><span class="sxs-lookup"><span data-stu-id="b55ce-209">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the TCP connection has been accepted.</span></span>  
  
 <span data-ttu-id="b55ce-210">Użyj metody, aby uzyskać podstawę <xref:System.Net.Sockets.NetworkStream> zwracanej <xref:System.Net.Sockets.TcpClient> w <xref:System.Threading.Tasks.Task%601>. <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b55ce-210">Use the <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream> of the returned <xref:System.Net.Sockets.TcpClient> in the <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="b55ce-211"><xref:System.Net.Sockets.NetworkStream> Program udostępnia metody wysyłania i otrzymywania z hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-211">The <xref:System.Net.Sockets.NetworkStream> will provide you with methods for sending and receiving with the remote host.</span></span> <span data-ttu-id="b55ce-212">Gdy korzystasz z programu <xref:System.Net.Sockets.TcpClient>, pamiętaj, aby <xref:System.Net.Sockets.TcpClient.Close%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="b55ce-212">When you are through with the <xref:System.Net.Sockets.TcpClient>, be sure to call its <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span> <span data-ttu-id="b55ce-213">Jeśli potrzebujesz większej elastyczności niż <xref:System.Net.Sockets.TcpClient> oferty, rozważ użycie <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> lub <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>.</span><span class="sxs-lookup"><span data-stu-id="b55ce-213">If you want greater flexibility than a <xref:System.Net.Sockets.TcpClient> offers, consider using <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> or <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-214">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-214">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b55ce-215">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="b55ce-215">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b55ce-216">Odbiornik nie został uruchomiony z wywołaniem metody <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="b55ce-216">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b55ce-217"><see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> Użyj właściwości, aby uzyskać określony kod błędu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-217">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="b55ce-218">Po uzyskaniu tego kodu można odwołać się do dokumentacji <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">kodu błędu interfejsu API Windows Sockets w wersji 2</see> , aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-218">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.TcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.Active" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool" Usage="System.Net.Sockets.TcpListener.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b55ce-219">Pobiera wartość wskazującą, czy <see cref="T:System.Net.Sockets.TcpListener" /> aktywnie nasłuchuje połączeń klientów.</span><span class="sxs-lookup"><span data-stu-id="b55ce-219">Gets a value that indicates whether <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening for client connections.</span></span></summary>
        <value><span data-ttu-id="b55ce-220"><see langword="true" />Jeśli <see cref="T:System.Net.Sockets.TcpListener" /> program<see langword="false" />aktywnie nasłuchuje; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="b55ce-220"><see langword="true" /> if <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-221">Klasy pochodne z <xref:System.Net.Sockets.TcpListener> mogą używać tej właściwości, aby określić, <xref:System.Net.Sockets.Socket> czy obecnie nasłuchuje w przypadku prób połączenia przychodzącego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-221">Classes deriving from <xref:System.Net.Sockets.TcpListener> can use this property to determine if the <xref:System.Net.Sockets.Socket> is currently listening for incoming connection attempts.</span></span> <span data-ttu-id="b55ce-222">Właściwość może służyć do uniknięcia nadmiarowych <xref:System.Net.Sockets.TcpListener.Start%2A> prób. <xref:System.Net.Sockets.TcpClient.Active%2A></span><span class="sxs-lookup"><span data-stu-id="b55ce-222">The <xref:System.Net.Sockets.TcpClient.Active%2A> property can be used to avoid redundant <xref:System.Net.Sockets.TcpListener.Start%2A> attempts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberSignature Language="F#" Value="member this.AllowNatTraversal : bool -&gt; unit" Usage="tcpListener.AllowNatTraversal allowed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="allowed"><span data-ttu-id="b55ce-223">Wartość logiczna określająca, czy włączyć lub wyłączyć przechodzenie translatora adresów sieciowych.</span><span class="sxs-lookup"><span data-stu-id="b55ce-223">A Boolean value that specifies whether to enable or disable NAT traversal.</span></span></param>
        <summary><span data-ttu-id="b55ce-224">Włącza lub wyłącza przechodzenie translacji adresów sieciowych (NAT) <see cref="T:System.Net.Sockets.TcpListener" /> na wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-224">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.TcpListener" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-225">Metoda jest używana do włączania lub wyłączania przechodzenia <xref:System.Net.Sockets.TcpListener> NAT dla wystąpienia. <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A></span><span class="sxs-lookup"><span data-stu-id="b55ce-225">The <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.TcpListener> instance.</span></span> <span data-ttu-id="b55ce-226">Przechodzenie NAT może być zapewnione przy użyciu protokołu Teredo, 6to4 lub tunelu ISATAP.</span><span class="sxs-lookup"><span data-stu-id="b55ce-226">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="b55ce-227">Gdy parametr ma wartość false <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> , opcja w <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>skojarzonym gnieździe ma ustawioną wartość. `allowed`</span><span class="sxs-lookup"><span data-stu-id="b55ce-227">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="b55ce-228">Spowoduje to jawne wyłączenie przechodzenia NAT <xref:System.Net.Sockets.TcpListener> dla wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="b55ce-228">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.TcpListener> instance.</span></span>  
  
 <span data-ttu-id="b55ce-229">Gdy parametr ma wartość true <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> , opcja w <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>skojarzonym gnieździe ma ustawioną wartość. `allowed`</span><span class="sxs-lookup"><span data-stu-id="b55ce-229">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="b55ce-230">Może to umożliwić Przechodzenie <xref:System.Net.Sockets.TcpListener> translatora adresów sieciowych w zależności od reguł zapory w systemie.</span><span class="sxs-lookup"><span data-stu-id="b55ce-230">This may allow NAT traversal for a <xref:System.Net.Sockets.TcpListener> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="b55ce-231">Metoda musi zostać wywołana przed wywołaniem metody, <xref:System.Net.Sockets.TcpListener.Start%2A> aby rozpocząć nasłuchiwanie żądań połączeń przychodzących (przed powiązaniem gniazda). <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A></span><span class="sxs-lookup"><span data-stu-id="b55ce-231">The <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method must be invoked prior to calling the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection requests (before the socket is bound).</span></span> <span data-ttu-id="b55ce-232">Jeśli <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> Metoda jest wywoływana <xref:System.Net.Sockets.TcpListener.Start%2A> po metodzie, <xref:System.InvalidOperationException> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="b55ce-232">If <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method is called after the <xref:System.Net.Sockets.TcpListener.Start%2A> method, then an <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
 <span data-ttu-id="b55ce-233">Adres Teredo jest adresem IPv6 z prefiksem 2001::/32.</span><span class="sxs-lookup"><span data-stu-id="b55ce-233">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="b55ce-234">Adresy Teredo mogą być zwracane przez normalne rozpoznawanie nazw DNS lub wyliczane jako adres IPv6 przypisany do interfejsu lokalnego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-234">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b55ce-235">Metoda została wywołana po <see cref="M:System.Net.Sockets.TcpListener.Start" /> wywołaniu metody <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /></span><span class="sxs-lookup"><span data-stu-id="b55ce-235">The <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> method was called after calling the <see cref="M:System.Net.Sockets.TcpListener.Start" /> method</span></span></exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptSocket">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptSocket (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAcceptSocket(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptSocket (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptSocket(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAcceptSocket : AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpListener.BeginAcceptSocket (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="b55ce-236"><see cref="T:System.AsyncCallback" /> Delegat, który odwołuje się do metody do wywołania po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-236">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="b55ce-237">Zdefiniowany przez użytkownika obiekt zawierający informacje o operacji akceptacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-237">A user-defined object containing information about the accept operation.</span></span> <span data-ttu-id="b55ce-238">Ten obiekt jest przesyłany do <paramref name="callback" /> delegata po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-238">This object is passed to the <paramref name="callback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="b55ce-239">Rozpoczyna operację asynchroniczną w celu zaakceptowania próby połączenia przychodzącego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-239">Begins an asynchronous operation to accept an incoming connection attempt.</span></span></summary>
        <returns><span data-ttu-id="b55ce-240">, Który odwołuje się do asynchronicznego tworzenia <see cref="T:System.Net.Sockets.Socket" />. <see cref="T:System.IAsyncResult" /></span><span class="sxs-lookup"><span data-stu-id="b55ce-240">An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.Socket" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-241">Operacja asynchroniczna <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> musi być zakończona przez <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> wywołanie metody.</span><span class="sxs-lookup"><span data-stu-id="b55ce-241">The asynchronous <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method.</span></span> <span data-ttu-id="b55ce-242">Zazwyczaj Metoda jest wywoływana przez `callback` delegata.</span><span class="sxs-lookup"><span data-stu-id="b55ce-242">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="b55ce-243">Ta metoda nie jest blokowana do momentu zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-243">This method does not block until the operation completes.</span></span> <span data-ttu-id="b55ce-244">Aby zablokować do momentu zakończenia operacji, użyj <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b55ce-244">To block until the operation completes, use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span>  
  
 <span data-ttu-id="b55ce-245">Aby uzyskać szczegółowe informacje na temat korzystania z modelu programowania asynchronicznego, zobacz [Asynchroniczne wywoływanie metod synchronicznych](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="b55ce-245">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-246">Można wywołać <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> Właściwość zwracaną <xref:System.Net.Sockets.Socket> , aby zidentyfikować adres sieciowy i numer portu hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-246">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-247">Jeśli zostanie wyświetlony komunikat <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> Użyj właściwości w celu uzyskania określonego kodu błędu i zapoznaj się z dokumentacją dotyczącą [kodu błędu interfejsu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-247">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-248">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-248">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b55ce-249">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="b55ce-249">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b55ce-250">Poniższy przykład kodu demonstruje użycie <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> metody do tworzenia i łączenia gniazda.</span><span class="sxs-lookup"><span data-stu-id="b55ce-250">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> method to create and connect a socket.</span></span> <span data-ttu-id="b55ce-251">Delegat wywołania zwrotnego wywołuje <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> metodę, aby zakończyć żądanie asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="b55ce-251">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#4)]
 [!code-vb[System.Net.Sockets.TcpListener1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b55ce-252">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</span><span class="sxs-lookup"><span data-stu-id="b55ce-252">An error occurred while attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b55ce-253"><see cref="T:System.Net.Sockets.Socket" /> Został zamknięty.</span><span class="sxs-lookup"><span data-stu-id="b55ce-253">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptTcpClient">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptTcpClient (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAcceptTcpClient(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptTcpClient (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptTcpClient(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAcceptTcpClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpListener.BeginAcceptTcpClient (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="b55ce-254"><see cref="T:System.AsyncCallback" /> Delegat, który odwołuje się do metody do wywołania po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-254">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="b55ce-255">Zdefiniowany przez użytkownika obiekt zawierający informacje o operacji akceptacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-255">A user-defined object containing information about the accept operation.</span></span> <span data-ttu-id="b55ce-256">Ten obiekt jest przesyłany do <paramref name="callback" /> delegata po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-256">This object is passed to the <paramref name="callback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="b55ce-257">Rozpoczyna operację asynchroniczną w celu zaakceptowania próby połączenia przychodzącego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-257">Begins an asynchronous operation to accept an incoming connection attempt.</span></span></summary>
        <returns><span data-ttu-id="b55ce-258">, Który odwołuje się do asynchronicznego tworzenia <see cref="T:System.Net.Sockets.TcpClient" />. <see cref="T:System.IAsyncResult" /></span><span class="sxs-lookup"><span data-stu-id="b55ce-258">An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.TcpClient" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-259">Operacja asynchroniczna <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> musi być zakończona przez <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> wywołanie metody.</span><span class="sxs-lookup"><span data-stu-id="b55ce-259">The asynchronous <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method.</span></span> <span data-ttu-id="b55ce-260">Zazwyczaj Metoda jest wywoływana przez `callback` delegata.</span><span class="sxs-lookup"><span data-stu-id="b55ce-260">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="b55ce-261">Ta metoda nie jest blokowana do momentu zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-261">This method does not block until the operation completes.</span></span> <span data-ttu-id="b55ce-262">Aby zablokować do momentu zakończenia operacji, użyj <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b55ce-262">To block until the operation completes, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method.</span></span>  
  
 <span data-ttu-id="b55ce-263">Aby uzyskać szczegółowe informacje na temat korzystania z modelu programowania asynchronicznego, zobacz [Asynchroniczne wywoływanie metod synchronicznych](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="b55ce-263">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-264">Jeśli zostanie wyświetlony komunikat <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> Użyj właściwości w celu uzyskania określonego kodu błędu i zapoznaj się z dokumentacją dotyczącą [kodu błędu interfejsu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-264">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-265">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-265">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b55ce-266">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="b55ce-266">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b55ce-267">Poniższy przykład kodu demonstruje użycie <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> metody do tworzenia i łączenia gniazda.</span><span class="sxs-lookup"><span data-stu-id="b55ce-267">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> method to create and connect a socket.</span></span> <span data-ttu-id="b55ce-268">Delegat wywołania zwrotnego wywołuje <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> metodę, aby zakończyć żądanie asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="b55ce-268">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#5)]
 [!code-vb[System.Net.Sockets.TcpListener1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b55ce-269">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</span><span class="sxs-lookup"><span data-stu-id="b55ce-269">An error occurred while attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b55ce-270"><see cref="T:System.Net.Sockets.Socket" /> Został zamknięty.</span><span class="sxs-lookup"><span data-stu-id="b55ce-270">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.Sockets.TcpListener Create (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Sockets.TcpListener Create(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Create(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (port As Integer) As TcpListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Sockets::TcpListener ^ Create(int port);" />
      <MemberSignature Language="F#" Value="static member Create : int -&gt; System.Net.Sockets.TcpListener" Usage="System.Net.Sockets.TcpListener.Create port" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpListener</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="b55ce-271">Port, na którym nasłuchuje prób połączenia przychodzącego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-271">The port on which to listen for incoming connection attempts.</span></span></param>
        <summary><span data-ttu-id="b55ce-272">Tworzy nowe <see cref="T:System.Net.Sockets.TcpListener" /> wystąpienie do nasłuchiwania na określonym porcie.</span><span class="sxs-lookup"><span data-stu-id="b55ce-272">Creates a new <see cref="T:System.Net.Sockets.TcpListener" /> instance to listen on the specified port.</span></span></summary>
        <returns><span data-ttu-id="b55ce-273">Nowe <see cref="T:System.Net.Sockets.TcpListener" /> wystąpienie do nasłuchiwania na określonym porcie.</span><span class="sxs-lookup"><span data-stu-id="b55ce-273">A new <see cref="T:System.Net.Sockets.TcpListener" /> instance to listen on the specified port.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket EndAcceptSocket (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket EndAcceptSocket(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptSocket (asyncResult As IAsyncResult) As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ EndAcceptSocket(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAcceptSocket : IAsyncResult -&gt; System.Net.Sockets.Socket" Usage="tcpListener.EndAcceptSocket asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b55ce-274">Zwracany przez wywołanie <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />metody. <see cref="T:System.IAsyncResult" /></span><span class="sxs-lookup"><span data-stu-id="b55ce-274">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="b55ce-275">Asynchronicznie akceptuje próbę połączenia przychodzącego i tworzy <see cref="T:System.Net.Sockets.Socket" /> nową do obsługi komunikacji z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="b55ce-275">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> to handle remote host communication.</span></span></summary>
        <returns><span data-ttu-id="b55ce-276">A <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="b55ce-276">A <see cref="T:System.Net.Sockets.Socket" />.</span></span>  
  
<span data-ttu-id="b55ce-277"><see cref="T:System.Net.Sockets.Socket" /> Używane do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="b55ce-277">The <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-278">Ta metoda jest blokowana do momentu ukończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-278">This method blocks until the operation is complete.</span></span> <span data-ttu-id="b55ce-279">Aby wykonać tę operację synchronicznie, użyj <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b55ce-279">To perform this operation synchronously, use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-280">Można wywołać <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> Właściwość zwracaną <xref:System.Net.Sockets.Socket> , aby zidentyfikować adres sieciowy i numer portu hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-280">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-281">Jeśli zostanie wyświetlony komunikat <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> Użyj właściwości w celu uzyskania określonego kodu błędu i zapoznaj się z dokumentacją dotyczącą [kodu błędu interfejsu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-281">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-282">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-282">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b55ce-283">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="b55ce-283">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b55ce-284">Poniższy przykład kodu demonstruje użycie <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> metody do tworzenia i łączenia gniazda.</span><span class="sxs-lookup"><span data-stu-id="b55ce-284">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> method to create and connect a socket.</span></span> <span data-ttu-id="b55ce-285">Delegat wywołania zwrotnego wywołuje <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> metodę, aby zakończyć żądanie asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="b55ce-285">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#4)]
 [!code-vb[System.Net.Sockets.TcpListener1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b55ce-286">Bazowy <see cref="T:System.Net.Sockets.Socket" /> został zamknięty.</span><span class="sxs-lookup"><span data-stu-id="b55ce-286">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b55ce-287">Parametr ma wartość <see langword="null" />. <paramref name="asyncResult" /></span><span class="sxs-lookup"><span data-stu-id="b55ce-287">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b55ce-288">Parametr nie został utworzony przez wywołanie <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> metody. <paramref name="asyncResult" /></span><span class="sxs-lookup"><span data-stu-id="b55ce-288">The <paramref name="asyncResult" /> parameter was not created by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b55ce-289"><see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> Metoda została wcześniej wywołana.</span><span class="sxs-lookup"><span data-stu-id="b55ce-289">The <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> method was previously called.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b55ce-290">Wystąpił błąd podczas próby uzyskania dostępu <see cref="T:System.Net.Sockets.Socket" />do elementu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-290">An error occurred while attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptTcpClient">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TcpClient EndAcceptTcpClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.TcpClient EndAcceptTcpClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptTcpClient (asyncResult As IAsyncResult) As TcpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::TcpClient ^ EndAcceptTcpClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAcceptTcpClient : IAsyncResult -&gt; System.Net.Sockets.TcpClient" Usage="tcpListener.EndAcceptTcpClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b55ce-291">Zwracany przez wywołanie <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />metody. <see cref="T:System.IAsyncResult" /></span><span class="sxs-lookup"><span data-stu-id="b55ce-291">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="b55ce-292">Asynchronicznie akceptuje próbę połączenia przychodzącego i tworzy <see cref="T:System.Net.Sockets.TcpClient" /> nową do obsługi komunikacji z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="b55ce-292">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.TcpClient" /> to handle remote host communication.</span></span></summary>
        <returns><span data-ttu-id="b55ce-293">A <see cref="T:System.Net.Sockets.TcpClient" />.</span><span class="sxs-lookup"><span data-stu-id="b55ce-293">A <see cref="T:System.Net.Sockets.TcpClient" />.</span></span>  
  
<span data-ttu-id="b55ce-294"><see cref="T:System.Net.Sockets.TcpClient" /> Używane do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="b55ce-294">The <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-295">Ta metoda jest blokowana do momentu ukończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-295">This method blocks until the operation is complete.</span></span> <span data-ttu-id="b55ce-296">Aby wykonać tę operację synchronicznie, użyj <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b55ce-296">To perform this operation synchronously, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-297">Można wywołać <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> właściwość podstawowego gniazda (<xref:System.Net.Sockets.TcpClient.Client%2A>), aby zidentyfikować adres sieciowy i numer portu hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-297">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the underlying socket (<xref:System.Net.Sockets.TcpClient.Client%2A>) to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-298">Jeśli zostanie wyświetlony komunikat <xref:System.Net.Sockets.SocketException>, <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> Użyj właściwości w celu uzyskania określonego kodu błędu i zapoznaj się z dokumentacją dotyczącą [kodu błędu interfejsu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-298">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-299">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-299">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b55ce-300">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="b55ce-300">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b55ce-301">Poniższy przykład kodu demonstruje użycie <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> metody do tworzenia i łączenia gniazda.</span><span class="sxs-lookup"><span data-stu-id="b55ce-301">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> method to create and connect a socket.</span></span> <span data-ttu-id="b55ce-302">Delegat wywołania zwrotnego wywołuje <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> metodę, aby zakończyć żądanie asynchroniczne.</span><span class="sxs-lookup"><span data-stu-id="b55ce-302">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#5)]
 [!code-vb[System.Net.Sockets.TcpListener1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.TcpListener.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b55ce-303">Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość określającą, <see cref="T:System.Net.Sockets.TcpListener" /> czy zezwala tylko jednemu podstawowemu gnieździi na nasłuchiwanie na określonym porcie.</span><span class="sxs-lookup"><span data-stu-id="b55ce-303">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one underlying socket to listen to a specific port.</span></span></summary>
        <value><span data-ttu-id="b55ce-304"><see langword="true" />Jeśli zezwala na tylko jeden <see cref="T:System.Net.Sockets.TcpListener" /> do nasłuchiwania na konkretnym porcie; w przeciwnym razie, <see langword="false" />. <see cref="T:System.Net.Sockets.TcpListener" /></span><span class="sxs-lookup"><span data-stu-id="b55ce-304"><see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one <see cref="T:System.Net.Sockets.TcpListener" /> to listen to a specific port; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b55ce-305">.</span><span class="sxs-lookup"><span data-stu-id="b55ce-305">.</span></span> <span data-ttu-id="b55ce-306">Wartość domyślna to <see langword="true" /> Windows Server 2003 i Windows XP z dodatkiem Service Pack 2 lub nowszym <see langword="false" /> oraz dla wszystkich innych wersji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-306">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-307">Domyślnie wiele odbiorników może nasłuchiwać określonego portu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-307">By default, multiple listeners can listen to a specific port.</span></span> <span data-ttu-id="b55ce-308">Jednak tylko jeden z odbiorników może wykonywać operacje na ruchu sieciowym wysyłanym do portu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-308">However, only one of the listeners can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="b55ce-309">Jeśli więcej niż jeden odbiornik próbuje powiązać z określonym portem, to ten z bardziej szczegółowym adresem IP obsługuje ruch sieciowy wysyłany do tego portu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-309">If more than one listener attempts to bind to a particular port, then the one with the more specific IP address handles the network traffic sent to that port.</span></span> <span data-ttu-id="b55ce-310">Możesz użyć <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> właściwości, aby uniemożliwić wielu odbiornikom nasłuchiwanie na określonym porcie.</span><span class="sxs-lookup"><span data-stu-id="b55ce-310">You can use the <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> property to prevent multiple listeners from listening to a specific port.</span></span>  
  
 <span data-ttu-id="b55ce-311">Ustaw tę właściwość przed wywołaniem <xref:System.Net.Sockets.TcpListener.Start%2A>lub <xref:System.Net.Sockets.TcpListener.Stop%2A> Wywołaj metodę, a następnie ustaw tę właściwość.</span><span class="sxs-lookup"><span data-stu-id="b55ce-311">Set this property before calling <xref:System.Net.Sockets.TcpListener.Start%2A>, or call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method and then set this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b55ce-312">Poniższy przykład kodu pobiera i ustawia <xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A> właściwość.</span><span class="sxs-lookup"><span data-stu-id="b55ce-312">The following code example gets and sets the <xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpListener1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#2)]
 [!code-vb[System.Net.Sockets.TcpListener1#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b55ce-313"><see cref="T:System.Net.Sockets.TcpListener" /> Została uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="b55ce-313">The <see cref="T:System.Net.Sockets.TcpListener" /> has been started.</span></span> <span data-ttu-id="b55ce-314"><see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /> Wywołaj <see cref="M:System.Net.Sockets.TcpListener.Stop" /> metodę, a następnie ustaw właściwość.</span><span class="sxs-lookup"><span data-stu-id="b55ce-314">Call the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method and then set the <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /> property.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b55ce-315">Wystąpił błąd podczas próby uzyskania dostępu do podstawowego gniazda.</span><span class="sxs-lookup"><span data-stu-id="b55ce-315">An error occurred when attempting to access the underlying socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b55ce-316">Bazowy <see cref="T:System.Net.Sockets.Socket" /> został zamknięty.</span><span class="sxs-lookup"><span data-stu-id="b55ce-316">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpListener ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tcpListener.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b55ce-317">Zwalnia zasoby używane przez <see cref="T:System.Net.Sockets.TcpListener" /> klasę.</span><span class="sxs-lookup"><span data-stu-id="b55ce-317">Frees resources used by the <see cref="T:System.Net.Sockets.TcpListener" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="b55ce-318">Bezpłatnych zasobów <xref:System.Net.Sockets.TcpListener> klasy finalizator skojarzonych z wystąpieniem. <xref:System.Net.Sockets.TcpListener></span><span class="sxs-lookup"><span data-stu-id="b55ce-318">The <xref:System.Net.Sockets.TcpListener> class finalizer free resources associated with the <xref:System.Net.Sockets.TcpListener> instance.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalEndpoint">
      <MemberSignature Language="C#" Value="public System.Net.EndPoint LocalEndpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.EndPoint LocalEndpoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.LocalEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndpoint As EndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::EndPoint ^ LocalEndpoint { System::Net::EndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndpoint : System.Net.EndPoint" Usage="System.Net.Sockets.TcpListener.LocalEndpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b55ce-319">Pobiera podstawową <see cref="T:System.Net.EndPoint" /> bieżącą <see cref="T:System.Net.Sockets.TcpListener" />.</span><span class="sxs-lookup"><span data-stu-id="b55ce-319">Gets the underlying <see cref="T:System.Net.EndPoint" /> of the current <see cref="T:System.Net.Sockets.TcpListener" />.</span></span></summary>
        <value><span data-ttu-id="b55ce-320"><see cref="T:System.Net.EndPoint" /> Z<see cref="T:System.Net.Sockets.Socket" /> którym jest powiązany.</span><span class="sxs-lookup"><span data-stu-id="b55ce-320">The <see cref="T:System.Net.EndPoint" /> to which the <see cref="T:System.Net.Sockets.Socket" /> is bound.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-321">Możesz użyć <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> właściwości, aby zidentyfikować lokalny interfejs sieciowy i numer portu używany do nasłuchiwania przychodzących żądań połączeń klienta po nawiązaniu połączenia z gniazdem.</span><span class="sxs-lookup"><span data-stu-id="b55ce-321">You can use the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property to identify the local network interface and port number being used to listen for incoming client connection requests, after a socket connection has been made.</span></span> <span data-ttu-id="b55ce-322">Najpierw należy rzutować ten <xref:System.Net.EndPoint> element <xref:System.Net.IPEndPoint>na.</span><span class="sxs-lookup"><span data-stu-id="b55ce-322">You must first cast this <xref:System.Net.EndPoint> to an <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="b55ce-323">Następnie można wywołać <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> właściwość w celu pobrania lokalnego adresu IP <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> i właściwości, aby pobrać numer portu lokalnego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-323">You can then call the <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> property to retrieve the local IP address, and the <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> property to retrieve the local port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b55ce-324">Poniższy przykład kodu wyświetla lokalny adres IP i numer portu, na którym <xref:System.Net.Sockets.TcpListener> nasłuchuje żądań połączeń przychodzących.</span><span class="sxs-lookup"><span data-stu-id="b55ce-324">The following code example displays the local IP address and port number on which the <xref:System.Net.Sockets.TcpListener> is listening for incoming connection requests.</span></span>  
  
 [!code-cpp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CPP/source.cpp#1)]
 [!code-csharp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CS/source.cs#1)]
 [!code-vb[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="T:System.Net.EndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Pending">
      <MemberSignature Language="C#" Value="public bool Pending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Pending() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Pending" />
      <MemberSignature Language="VB.NET" Value="Public Function Pending () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Pending();" />
      <MemberSignature Language="F#" Value="member this.Pending : unit -&gt; bool" Usage="tcpListener.Pending " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b55ce-325">Określa, czy istnieją oczekujące żądania połączeń.</span><span class="sxs-lookup"><span data-stu-id="b55ce-325">Determines if there are pending connection requests.</span></span></summary>
        <returns><span data-ttu-id="b55ce-326"><see langword="true" />Jeśli istnieją oczekujące połączenia; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="b55ce-326"><see langword="true" /> if connections are pending; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-327">Ta metoda nieblokująca określa, czy istnieją oczekujące żądania połączeń.</span><span class="sxs-lookup"><span data-stu-id="b55ce-327">This non-blocking method determines if there are any pending connection requests.</span></span> <span data-ttu-id="b55ce-328">Ponieważ metody i <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> blokują wykonywanie do momentu, gdy <xref:System.Net.Sockets.TcpListener.Pending%2A> Metodanieustawiwkolejceżądaniapołączeniaprzychodzącego,możnaużyćmetody,abyokreślić,czypołączeniasądostępneprzedpodjęciempróbyichzaakceptowania.<xref:System.Net.Sockets.TcpListener.Start%2A> <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A></span><span class="sxs-lookup"><span data-stu-id="b55ce-328">Because the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> and <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> methods block execution until the <xref:System.Net.Sockets.TcpListener.Start%2A> method has queued an incoming connection request, the <xref:System.Net.Sockets.TcpListener.Pending%2A> method can be used to determine if connections are available before attempting to accept them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b55ce-329">Poniższy przykład kodu sprawdza <xref:System.Net.Sockets.TcpListener.Pending%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="b55ce-329">The following code example checks the <xref:System.Net.Sockets.TcpListener.Pending%2A> method.</span></span> <span data-ttu-id="b55ce-330">Jeśli żądanie połączenia oczekuje na zaakceptowanie, zostanie wykonane wywołanie <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b55ce-330">If a connection request is waiting to be accepted, then a call to the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method is made.</span></span>  
  
 [!code-cpp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CPP/source.cpp#1)]
 [!code-csharp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CS/source.cs#1)]
 [!code-vb[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b55ce-331">Odbiornik nie został uruchomiony z wywołaniem metody <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span><span class="sxs-lookup"><span data-stu-id="b55ce-331">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Server" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Server { System::Net::Sockets::Socket ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Net.Sockets.Socket" Usage="System.Net.Sockets.TcpListener.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b55ce-332">Pobiera podstawową sieć <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="b55ce-332">Gets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="b55ce-333">Bazowe <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="b55ce-333">The underlying <see cref="T:System.Net.Sockets.Socket" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-334"><xref:System.Net.Sockets.TcpListener><xref:System.Net.Sockets.Socket> tworzy do nasłuchiwania przychodzących żądań połączeń klienta.</span><span class="sxs-lookup"><span data-stu-id="b55ce-334"><xref:System.Net.Sockets.TcpListener> creates a <xref:System.Net.Sockets.Socket> to listen for incoming client connection requests.</span></span> <span data-ttu-id="b55ce-335">Klasy pochodne z mogą <xref:System.Net.Sockets.TcpListener> korzystać z tej właściwości w celu uzyskania <xref:System.Net.Sockets.Socket>tego.</span><span class="sxs-lookup"><span data-stu-id="b55ce-335">Classes deriving from <xref:System.Net.Sockets.TcpListener> can use this property to get this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="b55ce-336">Użyj bazowego <xref:System.Net.Sockets.Socket> zwróconego <xref:System.Net.Sockets.TcpListener.Server%2A> przez właściwość, jeśli jest wymagany dostęp poza tym <xref:System.Net.Sockets.TcpListener> , który zapewnia.</span><span class="sxs-lookup"><span data-stu-id="b55ce-336">Use the underlying <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpListener.Server%2A> property if you require access beyond that which <xref:System.Net.Sockets.TcpListener> provides.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-337"><xref:System.Net.Sockets.TcpListener.Server%2A> Właściwość zwracatylkoużywanydonasłuchiwania<xref:System.Net.Sockets.Socket> przychodzących żądań połączeń klienta.</span><span class="sxs-lookup"><span data-stu-id="b55ce-337">The <xref:System.Net.Sockets.TcpListener.Server%2A> property only returns the <xref:System.Net.Sockets.Socket> used to listen for incoming client connection requests.</span></span> <span data-ttu-id="b55ce-338">Użyj metody, aby zaakceptować oczekujące żądanie połączenia i <xref:System.Net.Sockets.Socket> uzyskać do wysyłania i odbierania danych. <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A></span><span class="sxs-lookup"><span data-stu-id="b55ce-338">Use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method to accept a pending connection request and obtain a <xref:System.Net.Sockets.Socket> for sending and receiving data.</span></span> <span data-ttu-id="b55ce-339">Możesz również użyć metody, <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> aby zaakceptować oczekujące żądanie połączenia i <xref:System.Net.Sockets.TcpClient> uzyskać do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="b55ce-339">You can also use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method to accept a pending connection request and obtain a <xref:System.Net.Sockets.TcpClient> for sending and receiving data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b55ce-340">Poniższy przykład kodu demonstruje użycie <xref:System.Net.Sockets.TcpListener.Server%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="b55ce-340">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.Server%2A> property.</span></span> <span data-ttu-id="b55ce-341">Źródłowy <xref:System.Net.Sockets.Socket> jest <xref:System.Net.Sockets.SocketOptionName.Linger> pobierany<xref:System.Net.Sockets.Socket> , a opcja jest skonfigurowana tak, aby przekroczyć limit czasu po upływie 10 sekund, jeśli dane nadal pozostają w buforze sieciowym po zamknięciu połączenia.</span><span class="sxs-lookup"><span data-stu-id="b55ce-341">The underlying <xref:System.Net.Sockets.Socket> is retrieved and the <xref:System.Net.Sockets.SocketOptionName.Linger><xref:System.Net.Sockets.Socket> option is configured to time out after 10 seconds if data still remains in the network buffer after the connection is closed.</span></span>  
  
 [!code-csharp[TcpListenerProtectedMembers1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListenerProtectedMembers1/CS/source.cs#1)]
 [!code-vb[TcpListenerProtectedMembers1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListenerProtectedMembers1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b55ce-342">Zaczyna nasłuchiwanie żądań połączeń przychodzących.</span><span class="sxs-lookup"><span data-stu-id="b55ce-342">Starts listening for incoming connection requests.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="tcpListener.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b55ce-343">Zaczyna nasłuchiwanie żądań połączeń przychodzących.</span><span class="sxs-lookup"><span data-stu-id="b55ce-343">Starts listening for incoming connection requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-344">Metoda inicjuje obiekt źródłowy <xref:System.Net.Sockets.Socket>, wiąże go z lokalnym punktem końcowym i nasłuchuje prób połączenia przychodzącego. <xref:System.Net.Sockets.TcpListener.Start%2A></span><span class="sxs-lookup"><span data-stu-id="b55ce-344">The <xref:System.Net.Sockets.TcpListener.Start%2A> method initializes the underlying <xref:System.Net.Sockets.Socket>, binds it to a local endpoint, and listens for incoming connection attempts.</span></span> <span data-ttu-id="b55ce-345">W <xref:System.Net.Sockets.TcpListener.Start%2A> przypadku odebrania żądania połączenia Metoda będzie kolejkować żądanie i kontynuuje nasłuchiwanie żądań dodatkowych do momentu <xref:System.Net.Sockets.TcpListener.Stop%2A> wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="b55ce-345">If a connection request is received, the <xref:System.Net.Sockets.TcpListener.Start%2A> method will queue the request and continue listening for additional requests until you call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method.</span></span> <span data-ttu-id="b55ce-346">Jeśli <xref:System.Net.Sockets.TcpListener> odbiera żądanie połączenia, gdy wcześniej umieściło w kolejce maksymalną liczbę połączeń, <xref:System.Net.Sockets.SocketException> wygeneruje on na kliencie.</span><span class="sxs-lookup"><span data-stu-id="b55ce-346">If <xref:System.Net.Sockets.TcpListener> receives a connection request after it has already queued the maximum number of connections, it will throw a <xref:System.Net.Sockets.SocketException> on the client.</span></span>  
  
 <span data-ttu-id="b55ce-347">Aby usunąć połączenie z kolejki połączeń przychodzących, użyj <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> lub metody.</span><span class="sxs-lookup"><span data-stu-id="b55ce-347">To remove a connection from the incoming connection queue, use either the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method or the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="b55ce-348">Metoda usunie połączenie z kolejki i <xref:System.Net.Sockets.TcpClient> zwróci, że można go użyć do wysyłania i odbierania danych. <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A></span><span class="sxs-lookup"><span data-stu-id="b55ce-348">The <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method will remove a connection from the queue and return a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="b55ce-349">Metoda zwróci metodę <xref:System.Net.Sockets.Socket> , która może być używana do wykonania tego samego. <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A></span><span class="sxs-lookup"><span data-stu-id="b55ce-349">The <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method will return a <xref:System.Net.Sockets.Socket> that you can use to do the same.</span></span> <span data-ttu-id="b55ce-350">Jeśli aplikacja wymaga tylko synchronicznych operacji we/wy, <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>Użyj.</span><span class="sxs-lookup"><span data-stu-id="b55ce-350">If your application only requires synchronous I/O, use <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span></span> <span data-ttu-id="b55ce-351">Aby uzyskać bardziej szczegółową kontrolę behawioralną <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>, użyj.</span><span class="sxs-lookup"><span data-stu-id="b55ce-351">For more detailed behavioral control, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span></span> <span data-ttu-id="b55ce-352">Obie te metody blokują do momentu, gdy w kolejce będzie dostępne żądanie połączenia.</span><span class="sxs-lookup"><span data-stu-id="b55ce-352">Both of these methods block until a connection request is available in the queue.</span></span>  
  
 <span data-ttu-id="b55ce-353">Użyj metody, aby zamknąć i zatrzymać nasłuchiwanie. <xref:System.Net.Sockets.TcpListener> <xref:System.Net.Sockets.TcpListener.Stop%2A></span><span class="sxs-lookup"><span data-stu-id="b55ce-353">Use the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener> and stop listening.</span></span> <span data-ttu-id="b55ce-354">Użytkownik jest odpowiedzialny za zamknięcie zaakceptowanych połączeń oddzielnie.</span><span class="sxs-lookup"><span data-stu-id="b55ce-354">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-355">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-355">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b55ce-356">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="b55ce-356">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b55ce-357">Poniższy przykład kodu pokazuje, jak <xref:System.Net.Sockets.TcpListener.Start%2A> używać do nasłuchiwania przychodzących prób połączeń klienta.</span><span class="sxs-lookup"><span data-stu-id="b55ce-357">The following code example demonstrates how <xref:System.Net.Sockets.TcpListener.Start%2A> is used to listen for incoming client connection attempts.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#3)]
 [!code-vb[System.Net.Sockets.TcpListener1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b55ce-358"><see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> Użyj właściwości, aby uzyskać określony kod błędu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-358">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="b55ce-359">Po uzyskaniu tego kodu można odwołać się do dokumentacji <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">kodu błędu interfejsu API Windows Sockets w wersji 2</see> , aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-359">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start (int backlog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start(int32 backlog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Start(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start (backlog As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start(int backlog);" />
      <MemberSignature Language="F#" Value="member this.Start : int -&gt; unit" Usage="tcpListener.Start backlog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backlog" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="backlog"><span data-ttu-id="b55ce-360">Maksymalna długość kolejki oczekujących połączeń.</span><span class="sxs-lookup"><span data-stu-id="b55ce-360">The maximum length of the pending connections queue.</span></span></param>
        <summary><span data-ttu-id="b55ce-361">Rozpoczyna nasłuchiwanie żądań połączeń przychodzących z maksymalną liczbą oczekujących połączeń.</span><span class="sxs-lookup"><span data-stu-id="b55ce-361">Starts listening for incoming connection requests with a maximum number of pending connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-362">Metoda inicjuje obiekt źródłowy <xref:System.Net.Sockets.Socket>, wiąże go z lokalnym punktem końcowym i nasłuchuje prób połączenia przychodzącego. <xref:System.Net.Sockets.TcpListener.Start%2A></span><span class="sxs-lookup"><span data-stu-id="b55ce-362">The <xref:System.Net.Sockets.TcpListener.Start%2A> method initializes the underlying <xref:System.Net.Sockets.Socket>, binds it to a local endpoint, and listens for incoming connection attempts.</span></span> <span data-ttu-id="b55ce-363">W przypadku odebrania <xref:System.Net.Sockets.TcpListener.Start%2A> żądania połączenia program kolejkuje żądanie i kontynuuje nasłuchiwanie żądań dodatkowych do momentu <xref:System.Net.Sockets.TcpListener.Stop%2A> wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="b55ce-363">If a connection request is received, <xref:System.Net.Sockets.TcpListener.Start%2A> will queue the request and continue listening for additional requests until you call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method.</span></span> <span data-ttu-id="b55ce-364">Jeśli <xref:System.Net.Sockets.TcpListener> odbiera żądanie połączenia, gdy wcześniej umieściło w kolejce maksymalną liczbę połączeń, zostanie ona <xref:System.Net.Sockets.SocketException> wyrzucana na kliencie.</span><span class="sxs-lookup"><span data-stu-id="b55ce-364">If <xref:System.Net.Sockets.TcpListener> receives a connection request after it has already queued the maximum number of connections it will throw a <xref:System.Net.Sockets.SocketException> on the client.</span></span>  
  
 <span data-ttu-id="b55ce-365">Aby usunąć połączenie z kolejki połączeń przychodzących, użyj <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> metody <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> lub metody.</span><span class="sxs-lookup"><span data-stu-id="b55ce-365">To remove a connection from the incoming connection queue, use either the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method or the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="b55ce-366">Metoda usunie połączenie z kolejki i <xref:System.Net.Sockets.TcpClient> zwróci, że można go użyć do wysyłania i odbierania danych. <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A></span><span class="sxs-lookup"><span data-stu-id="b55ce-366">The <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method will remove a connection from the queue and return a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="b55ce-367">Metoda zwróci metodę <xref:System.Net.Sockets.Socket> , która może być używana do wykonania tego samego. <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A></span><span class="sxs-lookup"><span data-stu-id="b55ce-367">The <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method will return a <xref:System.Net.Sockets.Socket> that you can use to do the same.</span></span> <span data-ttu-id="b55ce-368">Jeśli aplikacja wymaga tylko synchronicznych operacji we/wy, użyj <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="b55ce-368">If your application only requires synchronous I/O, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span></span> <span data-ttu-id="b55ce-369">Aby uzyskać bardziej szczegółową kontrolę behawioralną <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> , użyj metody.</span><span class="sxs-lookup"><span data-stu-id="b55ce-369">For more detailed behavioral control, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="b55ce-370">Obie te metody blokują do momentu, gdy w kolejce będzie dostępne żądanie połączenia.</span><span class="sxs-lookup"><span data-stu-id="b55ce-370">Both of these methods block until a connection request is available in the queue.</span></span>  
  
 <span data-ttu-id="b55ce-371">Użyj metody, aby zamknąć i zatrzymać nasłuchiwanie. <xref:System.Net.Sockets.TcpListener> <xref:System.Net.Sockets.TcpListener.Stop%2A></span><span class="sxs-lookup"><span data-stu-id="b55ce-371">Use the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener> and stop listening.</span></span> <span data-ttu-id="b55ce-372">Użytkownik jest odpowiedzialny za zamknięcie zaakceptowanych połączeń oddzielnie.</span><span class="sxs-lookup"><span data-stu-id="b55ce-372">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-373">Użyj właściwości, aby uzyskać określony kod błędu i zapoznaj się z dokumentacją dotyczącą [kodu błędu interfejsu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , aby uzyskać szczegółowy opis błędu. <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="b55ce-373">Use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-374">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-374">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b55ce-375">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="b55ce-375">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b55ce-376">Poniższy przykład kodu pokazuje, jak <xref:System.Net.Sockets.TcpListener.Start%2A> używać do nasłuchiwania przychodzących prób połączeń klienta.</span><span class="sxs-lookup"><span data-stu-id="b55ce-376">The following code example demonstrates how <xref:System.Net.Sockets.TcpListener.Start%2A> is used to listen for incoming client connection attempts.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#3)]
 [!code-vb[System.Net.Sockets.TcpListener1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b55ce-377">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span><span class="sxs-lookup"><span data-stu-id="b55ce-377">An error occurred while accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b55ce-378"><paramref name="backlog" /> Parametr jest mniejszy od zera lub przekracza maksymalną liczbę dozwolonych połączeń.</span><span class="sxs-lookup"><span data-stu-id="b55ce-378">The <paramref name="backlog" /> parameter is less than zero or exceeds the maximum number of permitted connections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b55ce-379">Bazowy <see cref="T:System.Net.Sockets.Socket" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="b55ce-379">The underlying <see cref="T:System.Net.Sockets.Socket" /> is null.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="tcpListener.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b55ce-380">Zamyka odbiornik.</span><span class="sxs-lookup"><span data-stu-id="b55ce-380">Closes the listener.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b55ce-381"><xref:System.Net.Sockets.TcpListener.Stop%2A>zamyka odbiornik.</span><span class="sxs-lookup"><span data-stu-id="b55ce-381"><xref:System.Net.Sockets.TcpListener.Stop%2A> closes the listener.</span></span> <span data-ttu-id="b55ce-382">Wszystkie nieakceptowane żądania połączenia w kolejce zostaną utracone.</span><span class="sxs-lookup"><span data-stu-id="b55ce-382">Any unaccepted connection requests in the queue will be lost.</span></span> <span data-ttu-id="b55ce-383">Hosty zdalne oczekujące na zaakceptowanie połączenia spowodują zgłoszenie <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="b55ce-383">Remote hosts waiting for a connection to be accepted will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="b55ce-384">Użytkownik jest odpowiedzialny za zamknięcie zaakceptowanych połączeń oddzielnie.</span><span class="sxs-lookup"><span data-stu-id="b55ce-384">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b55ce-385">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="b55ce-385">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b55ce-386">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="b55ce-386">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b55ce-387">Poniższy przykład kodu demonstruje użycie metody, <xref:System.Net.Sockets.TcpListener.Stop%2A> aby zamknąć bazowe. <xref:System.Net.Sockets.Socket></span><span class="sxs-lookup"><span data-stu-id="b55ce-387">The following code example demonstrates using the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CPP/tcpserver.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CS/tcpserver.cs#1)]
 [!code-vb[System.Net.Sockets.TcpListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/VB/tcpserver.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="b55ce-388"><see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> Użyj właściwości, aby uzyskać określony kod błędu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-388">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="b55ce-389">Po uzyskaniu tego kodu można odwołać się do dokumentacji <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">kodu błędu interfejsu API Windows Sockets w wersji 2</see> , aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="b55ce-389">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b55ce-390">Metoda również zamyka podstawową <see cref="T:System.Net.Sockets.Socket" /> <see cref="T:System.Net.Sockets.Socket" /> i<see cref="T:System.Net.Sockets.TcpListener" />tworzynowądla. <see cref="M:System.Net.Sockets.TcpListener.Stop" /></span><span class="sxs-lookup"><span data-stu-id="b55ce-390">The <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method also closes the underlying <see cref="T:System.Net.Sockets.Socket" />, and creates a new <see cref="T:System.Net.Sockets.Socket" /> for the <see cref="T:System.Net.Sockets.TcpListener" />.</span></span> <span data-ttu-id="b55ce-391">Jeśli <see cref="T:System.Net.Sockets.Socket" /> przed <see cref="T:System.Net.Sockets.Socket" />wywołaniem metody ustawisz właściwości, te właściwości nie będą przenoszone do nowego. <see cref="M:System.Net.Sockets.TcpListener.Stop" /></span><span class="sxs-lookup"><span data-stu-id="b55ce-391">If you set any properties on the underlying <see cref="T:System.Net.Sockets.Socket" /> prior to calling the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method, those properties will not carry over to the new <see cref="T:System.Net.Sockets.Socket" />.</span></span></para></block>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
  </Members>
</Type>
