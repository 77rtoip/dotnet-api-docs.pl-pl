<Type Name="LingerOption" FullName="System.Net.Sockets.LingerOption">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="220b97634aece2bfc4c196565939b807c250bace" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39887624" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LingerOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LingerOption extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.LingerOption" />
  <TypeSignature Language="VB.NET" Value="Public Class LingerOption" />
  <TypeSignature Language="C++ CLI" Value="public ref class LingerOption" />
  <TypeSignature Language="F#" Value="type LingerOption = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Określa, czy <see cref="T:System.Net.Sockets.Socket" /> zostaną połączone po wywołaniu <see cref="M:System.Net.Sockets.Socket.Close" /> lub <see cref="M:System.Net.Sockets.TcpClient.Close" /> metody i czas będzie w dalszym ciągu połączone, jeśli dane pozostają do wysłania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przyczyną może być wciąż danych dostępne w buforze sieciowych wychodzących po wywołuje aplikację <xref:System.Net.Sockets.Socket> lub <xref:System.Net.Sockets.TcpClient> metody. Jeśli chcesz określić ilość czasu, który <xref:System.Net.Sockets.Socket> podejmie próbę przesyłających dane niewysłane po zamknięciu, Utwórz <xref:System.Net.Sockets.LingerOption> z `enable` parametr `true`i `seconds` parametr wartość odpowiednią ilość czasu . `seconds` Parametr jest używany do wskazania, jak długo chcesz <xref:System.Net.Sockets.Socket> pozostać połączone przed przekroczeniem limitu czasu. Jeśli nie chcesz <xref:System.Net.Sockets.Socket> na bieżąco dla dowolnej długości czasu, po zamknięciu, należy utworzyć <xref:System.Net.Sockets.LingerOption> wystąpienia z `enable` parametr `true` i `seconds` parametru równa zero. W tym przypadku <xref:System.Net.Sockets.Socket> zostanie natychmiast zamknięta i dowolne Niewysłane, dane zostaną utracone. Po utworzeniu przekazać <xref:System.Net.Sockets.LingerOption> do <xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=nameWithType> metody. Jeśli jesteś wysyłania i odbierania danych z <xref:System.Net.Sockets.TcpClient>, a następnie ustaw <xref:System.Net.Sockets.LingerOption> wystąpienia w <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=nameWithType> właściwości.  
  
 Stos IP oblicza domyślny okres limitu czasu protokołu IP do użycia na podstawie czasu komunikacji dwustronnej połączenia. W większości przypadków przekroczenia limitu czasu, obliczana przez stos jest większe znaczenie niż jeden zdefiniowany przez aplikację. Jest to domyślne zachowanie dla <xref:System.Net.Sockets.Socket> podczas <xref:System.Net.Sockets.Socket.LingerState%2A> nie ustawiono właściwości i <xref:System.Net.Sockets.TcpClient> podczas <xref:System.Net.Sockets.TcpClient.LingerState%2A> nie ustawiono właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie ustawiono wcześniej utworzony <xref:System.Net.Sockets.Socket> do linger sekundy po wywołaniu <xref:System.Net.Sockets.Socket.Close%2A> metody.  
  
 [!code-cpp[Classic LingerOption Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic LingerOption Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LingerOption Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic LingerOption Example/CS/source.cs#1)]
 [!code-vb[Classic LingerOption Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic LingerOption Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LingerOption (bool enable, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enable, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enable As Boolean, seconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LingerOption(bool enable, int seconds);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.LingerOption : bool * int -&gt; System.Net.Sockets.LingerOption" Usage="new System.Net.Sockets.LingerOption (enable, seconds)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enable">
          <see langword="true" /> Aby zachować nawiązano połączenie po <see cref="M:System.Net.Sockets.Socket.Close" /> metoda jest wywołana; w przeciwnym razie <see langword="false" />.</param>
        <param name="seconds">Liczba sekund, aby pozostać połączone po <see cref="M:System.Net.Sockets.Socket.Close" /> metoda jest wywoływana.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.LingerOption" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przyczyną może być wciąż danych dostępnych w buforze sieciowych wychodzących po zamknięciu <xref:System.Net.Sockets.Socket>. Użyj `enable` parametru do określenia, czy chcesz <xref:System.Net.Sockets.Socket> kontynuować przesyłanie danych Niewysłane, po wywołaniu metody close. Użyj `seconds` parametru, aby wskazać, jak długo chcesz <xref:System.Net.Sockets.Socket> próby transferu danych niewysłane przed przekroczeniem limitu czasu. Jeśli określisz `true` dla `enable` parametr i 0 dla `seconds` parametru <xref:System.Net.Sockets.Socket> podejmie próbę wysłania danych, aż do nie danych, po lewej stronie w buforze wychodzących sieci. Jeśli określisz `false` dla `enable` parametru <xref:System.Net.Sockets.Socket> zostanie natychmiast zamknięta i dowolne Niewysłane, dane zostaną utracone.  
  
 W poniższej tabeli opisano zachowanie na <xref:System.Net.Sockets.Socket.Close%2A?displayProperty=nameWithType> i <xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=nameWithType> metody oparte na dopuszczalne `enable` i `seconds` parametrów, jeśli wystąpienie T:System.Net.Sockets.LingerOption jest tworzony i ustawić w <xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=nameWithType> lub <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=nameWithType> właściwości.  
  
|`enable`|`seconds`|Zachowanie|  
|--------------|---------------|--------------|  
|`false` (wyłączone), wartość domyślna|Nie jest to konieczne, limit czasu (domyślnie).|Wygasa próby wysłania oczekujących danych dla gniazda ukierunkowane na połączenia (na przykład TCP) do momentu domyślny limit czasu protokołu IP.|  
|`true` (włączone)|Wartość różną od zera limitu czasu|Próbuje wysłać oczekujących danych, aż określony limit czasu upłynie, a jeśli próba nie powiedzie się, następnie Winsock resetuje połączenie.|  
|`true` (włączone)|Zero przekroczenie limitu czasu.|Odrzuca wszystkie oczekujące dane. Dla ukierunkowane na połączenia gniazda (na przykład TCP) usługi Winsock resetuje połączenie.|  
  
 Stos IP oblicza domyślny okres limitu czasu protokołu IP do użycia na podstawie czasu komunikacji dwustronnej połączenia. W większości przypadków przekroczenia limitu czasu, obliczana przez stos jest większe znaczenie niż jeden zdefiniowany przez aplikację. Jest to domyślne zachowanie dla gniazda podczas <xref:System.Net.Sockets.Socket.LingerState%2A> nie ustawiono właściwości.  
  
 Gdy <xref:System.Net.Sockets.LingerOption.LingerTime%2A> właściwości przechowywane w <xref:System.Net.Sockets.Socket.LingerState%2A> właściwość ma wartość większą niż domyślny limit czasu protokołu IP, nadal zastosuje i przesłonić domyślny limit czasu protokołu IP.  
  
   
  
## Examples  
 W poniższym przykładzie ustawiono wcześniej utworzony <xref:System.Net.Sockets.Socket> do linger sekundy po wywołaniu <xref:System.Net.Sockets.Socket.Close%2A> metody.  
  
 [!code-cpp[Classic LingerOption Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic LingerOption Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LingerOption Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic LingerOption Example/CS/source.cs#1)]
 [!code-vb[Classic LingerOption Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic LingerOption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.LingerOption.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Net.Sockets.LingerOption.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ma być linger po <see cref="T:System.Net.Sockets.Socket" /> jest zamknięty.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Net.Sockets.Socket" /> powinien linger po <see cref="M:System.Net.Sockets.Socket.Close" /> jest wywołany; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Net.Sockets.LingerOption.Enabled%2A> właściwości, aby określić, czy <xref:System.Net.Sockets.Socket> będzie utrzymywać się po zamknięciu. Zmienić tę wartość na `true` lub `false` i przekaż zmieniony <xref:System.Net.Sockets.LingerOption> do <xref:System.Net.Sockets.Socket.SetSocketOption%2A> metody lub zestawu <xref:System.Net.Sockets.TcpClient.LingerState%2A> lub <xref:System.Net.Sockets.Socket.LingerState%2A> property.to wyłączyć lub włączyć lingering.  
  
 W poniższej tabeli opisano zachowanie dopuszczalne <xref:System.Net.Sockets.LingerOption.Enabled%2A> właściwości i <xref:System.Net.Sockets.LingerOption.LingerTime%2A> właściwości przechowywane w <xref:System.Net.Sockets.Socket.LingerState%2A> właściwości.  
  
|`enable`|`seconds`|Zachowanie|  
|--------------|---------------|--------------|  
|`false` (wyłączone), wartość domyślna|Nie jest to konieczne, limit czasu (domyślnie).|Wygasa próby wysłania oczekujących danych dla gniazda ukierunkowane na połączenia (na przykład TCP) do momentu domyślny limit czasu protokołu IP.|  
|`true` (włączone)|Wartość różną od zera limitu czasu|Próbuje wysłać oczekujących danych, aż określony limit czasu upłynie, a jeśli próba nie powiedzie się, następnie Winsock resetuje połączenie.|  
|`true` (włączone)|Zero przekroczenie limitu czasu.|Odrzuca wszystkie oczekujące dane. Dla ukierunkowane na połączenia gniazda (na przykład TCP) usługi Winsock resetuje połączenie.|  
  
 Stos IP oblicza domyślny okres limitu czasu protokołu IP do użycia na podstawie czasu komunikacji dwustronnej połączenia. W większości przypadków przekroczenia limitu czasu, obliczana przez stos jest większe znaczenie niż jeden zdefiniowany przez aplikację. Jest to domyślne zachowanie dla gniazda podczas <xref:System.Net.Sockets.Socket.LingerState%2A> nie ustawiono właściwości.  
  
 Gdy <xref:System.Net.Sockets.LingerOption.LingerTime%2A> właściwości przechowywane w <xref:System.Net.Sockets.Socket.LingerState%2A> właściwość ma wartość większą niż domyślny limit czasu protokołu IP, nadal zastosuje i przesłonić domyślny limit czasu protokołu IP.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LingerTime">
      <MemberSignature Language="C#" Value="public int LingerTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LingerTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.LingerOption.LingerTime" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LingerTime { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LingerTime : int with get, set" Usage="System.Net.Sockets.LingerOption.LingerTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas, aby utrzymać połączenie po wywołaniu <see cref="M:System.Net.Sockets.Socket.Close" /> metodę, jeśli dane pozostają do wysłania.</summary>
        <value>Czas w sekundach, aby utrzymać połączenie po wywołaniu <see cref="M:System.Net.Sockets.Socket.Close" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej wartości, jeśli chcesz określić, jak długo zamknięte <xref:System.Net.Sockets.Socket> podejmie próbę transferu niewysłanych danych przed przekroczeniem limitu czasu. Można również ustawić tę wartość na żądaną przed upłynięciem limitu czasu, w ciągu kilku sekund.  
  
 Jeśli <xref:System.Net.Sockets.LingerOption.Enabled%2A> właściwość `true`, i ustawiasz <xref:System.Net.Sockets.LingerOption.LingerTime%2A> 0, <xref:System.Net.Sockets.Socket> odrzuca wszystkie oczekujące dane do wysłania wychodzących buforu sieci. Jeśli zmienisz tę wartość, należy przekazać zmienionego <xref:System.Net.Sockets.LingerOption> wystąpienia do <xref:System.Net.Sockets.Socket.SetSocketOption%2A> metody lub zestawu <xref:System.Net.Sockets.TcpClient.LingerState%2A> lub <xref:System.Net.Sockets.Socket.LingerState%2A> właściwości.  
  
 W poniższej tabeli opisano zachowanie dopuszczalne <xref:System.Net.Sockets.LingerOption.Enabled%2A> właściwości i <xref:System.Net.Sockets.LingerOption.LingerTime%2A> właściwości przechowywane w <xref:System.Net.Sockets.Socket.LingerState%2A> właściwości.  
  
|`enable`|`seconds`|Zachowanie|  
|--------------|---------------|--------------|  
|`false` (wyłączone), wartość domyślna|Nie jest to konieczne, limit czasu (domyślnie).|Wygasa próby wysłania oczekujących danych dla gniazda ukierunkowane na połączenia (na przykład TCP) do momentu domyślny limit czasu protokołu IP.|  
|`true` (włączone)|Wartość różną od zera limitu czasu|Próbuje wysłać oczekujących danych, aż określony limit czasu upłynie, a jeśli próba nie powiedzie się, następnie Winsock resetuje połączenie.|  
|`true` (włączone)|Zero przekroczenie limitu czasu.|Odrzuca wszystkie oczekujące dane. Dla ukierunkowane na połączenia gniazda (na przykład TCP) usługi Winsock resetuje połączenie.|  
  
 Stos IP oblicza domyślny okres limitu czasu protokołu IP do użycia na podstawie czasu komunikacji dwustronnej połączenia. W większości przypadków przekroczenia limitu czasu, obliczana przez stos jest większe znaczenie niż jeden zdefiniowany przez aplikację. Jest to domyślne zachowanie dla gniazda podczas <xref:System.Net.Sockets.Socket.LingerState%2A> nie ustawiono właściwości.  
  
 Gdy <xref:System.Net.Sockets.LingerOption.LingerTime%2A> właściwości przechowywane w <xref:System.Net.Sockets.Socket.LingerState%2A> właściwość ma wartość większą niż domyślny limit czasu protokołu IP, nadal zastosuje i przesłonić domyślny limit czasu protokołu IP.  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość tej właściwości.  
  
 [!code-cpp[Socket_Socket_Options#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#2)]
 [!code-csharp[Socket_Socket_Options#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#2)]
 [!code-vb[Socket_Socket_Options#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>