<Type Name="LingerOption" FullName="System.Net.Sockets.LingerOption">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cb8ae307f2beeee884316616773a1e30713d0a21" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69072610" /></Metadata><TypeSignature Language="C#" Value="public class LingerOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LingerOption extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.LingerOption" />
  <TypeSignature Language="VB.NET" Value="Public Class LingerOption" />
  <TypeSignature Language="C++ CLI" Value="public ref class LingerOption" />
  <TypeSignature Language="F#" Value="type LingerOption = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Określa, czy <see cref="T:System.Net.Sockets.Socket" /> pozostanie połączony po wywołaniu <see cref="M:System.Net.Sockets.Socket.Close" /> metody lub <see cref="M:System.Net.Sockets.TcpClient.Close" /> , oraz czas pozostały połączenia, jeśli dane pozostaną wysłane.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W buforze sieci wychodzącej nadal mogą być dostępne dane, gdy aplikacja wywoła <xref:System.Net.Sockets.Socket> metodę <xref:System.Net.Sockets.TcpClient> lub. Jeśli chcesz określić czas, <xref:System.Net.Sockets.Socket> przez jaki program podejmie próbę przesłania niewysłane dane po zamknięciu, <xref:System.Net.Sockets.LingerOption> Utwórz z `enable` parametrem ustawionym na `true`, a `seconds` parametr ustawiony na żądany czas . Parametr jest używany do wskazania, <xref:System.Net.Sockets.Socket> jak długo ma pozostawać połączony przed upływem limitu czasu. `seconds` Jeśli nie <xref:System.Net.Sockets.Socket> chcesz, aby pozostały połączenie przez jakiś czas po zamknięciu, <xref:System.Net.Sockets.LingerOption> Utwórz wystąpienie z `enable` parametrem ustawionym na `true` , a `seconds` parametr ustawiony na wartość zero. W takim przypadku <xref:System.Net.Sockets.Socket> zostanie natychmiast zamknięty i wszystkie niewysłane dane zostaną utracone. Po utworzeniu należy przekazać <xref:System.Net.Sockets.LingerOption> <xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=nameWithType> do metody. W przypadku wysyłania i otrzymywania danych za pomocą <xref:System.Net.Sockets.TcpClient>, należy <xref:System.Net.Sockets.LingerOption> ustawić wystąpienie we <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=nameWithType> właściwości.  
  
 Stos IP oblicza domyślny limit czasu protokołu IP do użycia na podstawie czasu błądzenia połączenia. W większości przypadków limit czasu obliczony przez stos jest bardziej istotny niż jeden zdefiniowany przez aplikację. Jest <xref:System.Net.Sockets.Socket> to domyślne zachowanie w <xref:System.Net.Sockets.Socket.LingerState%2A> przypadku, gdy właściwość <xref:System.Net.Sockets.TcpClient> nie jest ustawiona <xref:System.Net.Sockets.TcpClient.LingerState%2A> i dla gdy właściwość nie jest ustawiona.  
  
   
  
## Examples  
 Poniższy przykład ustawia wcześniej utworzony <xref:System.Net.Sockets.Socket> , aby wartość pokutujący była jednosekundowa po <xref:System.Net.Sockets.Socket.Close%2A> wywołaniu metody.  
  
 [!code-cpp[Classic LingerOption Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic LingerOption Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LingerOption Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic LingerOption Example/CS/source.cs#1)]
 [!code-vb[Classic LingerOption Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic LingerOption Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LingerOption (bool enable, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enable, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enable As Boolean, seconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LingerOption(bool enable, int seconds);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.LingerOption : bool * int -&gt; System.Net.Sockets.LingerOption" Usage="new System.Net.Sockets.LingerOption (enable, seconds)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enable"><see langword="true" />aby pozostała łączność <see cref="M:System.Net.Sockets.Socket.Close" /> po wywołaniu metody; <see langword="false" />w przeciwnym razie.</param>
        <param name="seconds">Liczba sekund, która ma pozostać połączona po <see cref="M:System.Net.Sockets.Socket.Close" /> wywołaniu metody.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.LingerOption" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po zamknięciu <xref:System.Net.Sockets.Socket>można nadal korzystać z danych w buforze sieci wychodzącej. Użyj parametru, aby określić, <xref:System.Net.Sockets.Socket> czy chcesz kontynuować przekazywanie niewysłanych danych po wywołaniu metody Close. `enable` Użyj parametru `seconds` , aby określić, <xref:System.Net.Sockets.Socket> jak długo ma być podejmowana próba transferu niewysłanych danych przed upływem limitu czasu. Jeśli określisz `true` `enable` parametri<xref:System.Net.Sockets.Socket> wartość 0 dla parametru,zostaniepodjętapróbawysłaniadanychdomomentu,gdywbuforzesieciwychodzącejniemażadnychdanych.`seconds` Jeśli określisz `false` `enable` parametr, <xref:System.Net.Sockets.Socket> zostanie natychmiast zamknięty i wszystkie niewysłane dane zostaną utracone.  
  
 W poniższej <xref:System.Net.Sockets.Socket.Close%2A?displayProperty=nameWithType> tabeli opisano zachowanie metod i <xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=nameWithType> w oparciu o możliwe wartości `enable` parametrów i `seconds` , gdy wystąpienie T:System.NET.Sockets.LingerOption zostało utworzone i ustawione w <xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=nameWithType> lub<xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=nameWithType> właściwość.  
  
|`enable`|`seconds`|Zachowanie|  
|--------------|---------------|--------------|  
|`false`(wyłączone), wartość domyślna|Limit czasu nie ma zastosowania (wartość domyślna).|Próbuje wysłać oczekujące dane dla gniazda zorientowanego na połączenia (na przykład TCP) do momentu wygaśnięcia domyślnego limitu czasu protokołu IP.|  
|`true`dostępny|Limit czasu różny od zera|Próbuje wysłać oczekujące dane do czasu wygaśnięcia określonego limitu czasu, a jeśli próba nie powiedzie się, usługa Winsock resetuje połączenie.|  
|`true`dostępny|Limit czasu równy zero.|Odrzuca wszystkie oczekujące dane. W przypadku gniazda zorientowanego na połączenia (na przykład TCP), Winsock resetuje połączenie.|  
  
 Stos IP oblicza domyślny limit czasu protokołu IP do użycia na podstawie czasu błądzenia połączenia. W większości przypadków limit czasu obliczony przez stos jest bardziej istotny niż jeden zdefiniowany przez aplikację. Jest to domyślne zachowanie dla gniazda, gdy <xref:System.Net.Sockets.Socket.LingerState%2A> właściwość nie jest ustawiona.  
  
 Gdy właściwość przechowywana <xref:System.Net.Sockets.Socket.LingerState%2A> we właściwości jest ustawiona na wartość większą niż domyślny limit czasu protokołu IP, domyślny limit czasu protokołu IP będzie nadal stosowany i przesłonięty. <xref:System.Net.Sockets.LingerOption.LingerTime%2A>  
  
   
  
## Examples  
 Poniższy przykład ustawia wcześniej utworzony <xref:System.Net.Sockets.Socket> , aby wartość pokutujący była jednosekundowa po <xref:System.Net.Sockets.Socket.Close%2A> wywołaniu metody.  
  
 [!code-cpp[Classic LingerOption Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic LingerOption Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LingerOption Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic LingerOption Example/CS/source.cs#1)]
 [!code-vb[Classic LingerOption Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic LingerOption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.LingerOption.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Net.Sockets.LingerOption.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ma być pokutujący po <see cref="T:System.Net.Sockets.Socket" /> zamknięciu.</summary>
        <value><see langword="true" />Jeśli powinien być pokutujący po <see cref="M:System.Net.Sockets.Socket.Close" /> wywołaniu; w przeciwnym razie <see langword="false" />. <see cref="T:System.Net.Sockets.Socket" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Net.Sockets.LingerOption.Enabled%2A> właściwości, aby określić, <xref:System.Net.Sockets.Socket> czy będzie on pokutujący po zamknięciu. Zmień tę wartość na `true` lub `false` i <xref:System.Net.Sockets.LingerOption> <xref:System.Net.Sockets.TcpClient.LingerState%2A> <xref:System.Net.Sockets.Socket.LingerState%2A> przekazanie zmiany do metodyalboustawlubProperty.todisablelubEnable.<xref:System.Net.Sockets.Socket.SetSocketOption%2A>  
  
 W poniższej tabeli opisano zachowanie dla możliwych wartości <xref:System.Net.Sockets.LingerOption.Enabled%2A> właściwości <xref:System.Net.Sockets.LingerOption.LingerTime%2A> i właściwości przechowywane we <xref:System.Net.Sockets.Socket.LingerState%2A> właściwości.  
  
|`enable`|`seconds`|Zachowanie|  
|--------------|---------------|--------------|  
|`false`(wyłączone), wartość domyślna|Limit czasu nie ma zastosowania (wartość domyślna).|Próbuje wysłać oczekujące dane dla gniazda zorientowanego na połączenia (na przykład TCP) do momentu wygaśnięcia domyślnego limitu czasu protokołu IP.|  
|`true`dostępny|Limit czasu różny od zera|Próbuje wysłać oczekujące dane do czasu wygaśnięcia określonego limitu czasu, a jeśli próba nie powiedzie się, usługa Winsock resetuje połączenie.|  
|`true`dostępny|Limit czasu równy zero.|Odrzuca wszystkie oczekujące dane. W przypadku gniazda zorientowanego na połączenia (na przykład TCP), Winsock resetuje połączenie.|  
  
 Stos IP oblicza domyślny limit czasu protokołu IP do użycia na podstawie czasu błądzenia połączenia. W większości przypadków limit czasu obliczony przez stos jest bardziej istotny niż jeden zdefiniowany przez aplikację. Jest to domyślne zachowanie dla gniazda, gdy <xref:System.Net.Sockets.Socket.LingerState%2A> właściwość nie jest ustawiona.  
  
 Gdy właściwość przechowywana <xref:System.Net.Sockets.Socket.LingerState%2A> we właściwości jest ustawiona na wartość większą niż domyślny limit czasu protokołu IP, domyślny limit czasu protokołu IP będzie nadal stosowany i przesłonięty. <xref:System.Net.Sockets.LingerOption.LingerTime%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LingerTime">
      <MemberSignature Language="C#" Value="public int LingerTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LingerTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.LingerOption.LingerTime" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LingerTime { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LingerTime : int with get, set" Usage="System.Net.Sockets.LingerOption.LingerTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas pozostawania połączenia po wywołaniu metody, <see cref="M:System.Net.Sockets.Socket.Close" /> Jeśli dane pozostają do wysłania.</summary>
        <value>Czas (w sekundach) pozostawania połączenia po wywołaniu <see cref="M:System.Net.Sockets.Socket.Close" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej wartości, jeśli chcesz określić, jak długo zamknięte <xref:System.Net.Sockets.Socket> dane będą podejmowane przed upływem limitu czasu. Możesz również ustawić tę wartość na żądany limit czasu w sekundach.  
  
 Jeśli właściwość ma `true`wartość, a <xref:System.Net.Sockets.LingerOption.LingerTime%2A> <xref:System.Net.Sockets.Socket> ustawiono wartość 0, odrzuca wszystkie oczekujące dane do wysłania w buforze sieci wychodzącej. <xref:System.Net.Sockets.LingerOption.Enabled%2A> Jeśli zmienisz tę <xref:System.Net.Sockets.LingerOption> wartość, musisz przekazać zmieniony wystąpienie <xref:System.Net.Sockets.Socket.SetSocketOption%2A> do metody lub ustawić <xref:System.Net.Sockets.TcpClient.LingerState%2A> Właściwość or <xref:System.Net.Sockets.Socket.LingerState%2A> .  
  
 W poniższej tabeli opisano zachowanie dla możliwych wartości <xref:System.Net.Sockets.LingerOption.Enabled%2A> właściwości <xref:System.Net.Sockets.LingerOption.LingerTime%2A> i właściwości przechowywane we <xref:System.Net.Sockets.Socket.LingerState%2A> właściwości.  
  
|`enable`|`seconds`|Zachowanie|  
|--------------|---------------|--------------|  
|`false`(wyłączone), wartość domyślna|Limit czasu nie ma zastosowania (wartość domyślna).|Próbuje wysłać oczekujące dane dla gniazda zorientowanego na połączenia (na przykład TCP) do momentu wygaśnięcia domyślnego limitu czasu protokołu IP.|  
|`true`dostępny|Limit czasu różny od zera|Próbuje wysłać oczekujące dane do czasu wygaśnięcia określonego limitu czasu, a jeśli próba nie powiedzie się, usługa Winsock resetuje połączenie.|  
|`true`dostępny|Limit czasu równy zero.|Odrzuca wszystkie oczekujące dane. W przypadku gniazda zorientowanego na połączenia (na przykład TCP), Winsock resetuje połączenie.|  
  
 Stos IP oblicza domyślny limit czasu protokołu IP do użycia na podstawie czasu błądzenia połączenia. W większości przypadków limit czasu obliczony przez stos jest bardziej istotny niż jeden zdefiniowany przez aplikację. Jest to domyślne zachowanie dla gniazda, gdy <xref:System.Net.Sockets.Socket.LingerState%2A> właściwość nie jest ustawiona.  
  
 Gdy właściwość przechowywana <xref:System.Net.Sockets.Socket.LingerState%2A> we właściwości jest ustawiona na wartość większą niż domyślny limit czasu protokołu IP, domyślny limit czasu protokołu IP będzie nadal stosowany i przesłonięty. <xref:System.Net.Sockets.LingerOption.LingerTime%2A>  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość tej właściwości.  
  
 [!code-cpp[Socket_Socket_Options#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#2)]
 [!code-csharp[Socket_Socket_Options#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#2)]
 [!code-vb[Socket_Socket_Options#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
