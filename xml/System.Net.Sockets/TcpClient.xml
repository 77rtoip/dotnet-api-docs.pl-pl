<Type Name="TcpClient" FullName="System.Net.Sockets.TcpClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6c4ef2337a11e9eaacb653f83b646a604476f21e" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55367419" /></Metadata><TypeSignature Language="C#" Value="public class TcpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type TcpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="eb476-101">Udostępnia połączenia klienta dla usługi sieciowe TCP.</span><span class="sxs-lookup"><span data-stu-id="eb476-101">Provides client connections for TCP network services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-102">`TcpClient` Klasy zapewnia proste metody łączenie, wysyłanie, i odbieranie przesyłanie strumieniowe danych przez sieć w trybie synchronicznym blokowania.</span><span class="sxs-lookup"><span data-stu-id="eb476-102">The `TcpClient` class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</span></span>  
  
 <span data-ttu-id="eb476-103">Aby `TcpClient` łączyć się i wymieniać dane, <xref:System.Net.Sockets.TcpListener> lub <xref:System.Net.Sockets.Socket> utworzone przy użyciu protokołu TCP <xref:System.Net.Sockets.ProtocolType> musi nasłuchiwać żądań połączenia przychodzących.</span><span class="sxs-lookup"><span data-stu-id="eb476-103">In order for `TcpClient` to connect and exchange data, a <xref:System.Net.Sockets.TcpListener> or <xref:System.Net.Sockets.Socket> created with the TCP <xref:System.Net.Sockets.ProtocolType> must be listening for incoming connection requests.</span></span> <span data-ttu-id="eb476-104">Można połączyć tego odbiornika, w jednej z dwóch sposobów:</span><span class="sxs-lookup"><span data-stu-id="eb476-104">You can connect to this listener in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="eb476-105">Tworzenie `TcpClient` wywołać jedną z trzech dostępnych <xref:System.Net.Sockets.TcpClient.Connect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-105">Create a `TcpClient` and call one of the three available <xref:System.Net.Sockets.TcpClient.Connect%2A> methods.</span></span>  
  
-   <span data-ttu-id="eb476-106">Utwórz `TcpClient` przy użyciu nazwy hosta i portu numer hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="eb476-106">Create a `TcpClient` using the host name and port number of the remote host.</span></span> <span data-ttu-id="eb476-107">Ten konstruktor automatycznie podejmie próbę połączenia.</span><span class="sxs-lookup"><span data-stu-id="eb476-107">This constructor will automatically attempt a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-108">Do przesyłania datagramów bez połączenia w trybie synchronicznym blokowania, należy użyć <xref:System.Net.Sockets.UdpClient> klasy.</span><span class="sxs-lookup"><span data-stu-id="eb476-108">If you want to send connectionless datagrams in synchronous blocking mode, use the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-109">Poniższy przykład kodu Określa `TcpClient` połączenia.</span><span class="sxs-lookup"><span data-stu-id="eb476-109">The following code example establishes a `TcpClient` connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CPP/tcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CS/tcpclient.cs#1)]
 [!code-vb[System.Net.Sockets.TcpClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/VB/tcpclient.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="eb476-110">Uprawnienie do nawiązywania połączenia wychodzącego, lub zaakceptować żądanie przychodzące.</span><span class="sxs-lookup"><span data-stu-id="eb476-110">Permission to establish an outgoing connection or accept an incoming request.</span></span></permission>
    <block subset="none" type="overrides"><para><span data-ttu-id="eb476-111">Aby wysyłać i odbierać dane, należy użyć <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> metodę, aby uzyskać <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-111">To send and receive data, use the <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> method to obtain a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span> <span data-ttu-id="eb476-112">Wywołaj <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> i <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> metody <see cref="T:System.Net.Sockets.NetworkStream" /> do wysyłania i odbierania danych z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="eb476-112">Call the <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> methods of the <see cref="T:System.Net.Sockets.NetworkStream" /> to send and receive data with the remote host.</span></span> <span data-ttu-id="eb476-113">Użyj <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> metodę, aby zwolnić wszystkie zasoby skojarzone z <see cref="T:System.Net.Sockets.TcpClient" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-113">Use the <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> method to release all resources associated with the <see cref="T:System.Net.Sockets.TcpClient" />.</span></span></para></block>
    <altmember cref="T:System.Net.Sockets.TcpListener" />
    <altmember cref="T:System.Net.Sockets.NetworkStream" />
    <altmember cref="T:System.Net.Sockets.Socket" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.IPEndPoint" />
    <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
    <related type="Article" href="~/docs/framework/network-programming/tcp-udp.md"><span data-ttu-id="eb476-114">TCP-UDP</span><span class="sxs-lookup"><span data-stu-id="eb476-114">TCP-UDP</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb476-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.TcpClient" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="eb476-115">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb476-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.TcpClient" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="eb476-116">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-117">Ten konstruktor tworzy nową <xref:System.Net.Sockets.TcpClient> i umożliwia podstawowego dostawcy usług można przypisać najbardziej odpowiedniego adresu IP adres i port numer lokalny.</span><span class="sxs-lookup"><span data-stu-id="eb476-117">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and allows the underlying service provider to assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="eb476-118">Najpierw musisz wywołać <xref:System.Net.Sockets.TcpClient.Connect%2A> metody przed wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="eb476-118">You must first call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-119">Ten konstruktor działa tylko w przypadku typów adresu IPv4.</span><span class="sxs-lookup"><span data-stu-id="eb476-119">This constructor works only with IPv4 address types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-120">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-120">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb476-121">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb476-121">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-122">Poniższy przykład kodu pokazuje, jak użyć konstruktora domyślnego, aby utworzyć nowy <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="eb476-122">The following code example demonstrates how to use the default constructor to create a new <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.IPEndPoint -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP"><span data-ttu-id="eb476-123"><see cref="T:System.Net.IPEndPoint" /> Do której powiązanie TCP <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-123">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <summary><span data-ttu-id="eb476-124">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.TcpClient" /> klasy i wiąże go z określonego lokalny punkt końcowy.</span><span class="sxs-lookup"><span data-stu-id="eb476-124">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-125">Ten konstruktor tworzy nową <xref:System.Net.Sockets.TcpClient> i wiąże go do <xref:System.Net.IPEndPoint> określony przez `localEP` parametru.</span><span class="sxs-lookup"><span data-stu-id="eb476-125">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="eb476-126">Przed wywołaniem tego konstruktora musi utworzyć `IPEndPoint` przy użyciu adresu IP adres i numer portu z którego chcesz wysyłać i odbierać dane.</span><span class="sxs-lookup"><span data-stu-id="eb476-126">Before you call this constructor, you must create an `IPEndPoint` using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="eb476-127">Nie trzeba określić lokalny adres IP i port numer przed łączenia i komunikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-127">You do not need to specify a local IP address and port number before connecting and communicating.</span></span> <span data-ttu-id="eb476-128">Jeśli tworzysz `TcpClient` przy użyciu dowolnego innego konstruktora, podstawowego dostawcy usług przypisze najbardziej odpowiedniego adresu IP adres i port numer lokalny.</span><span class="sxs-lookup"><span data-stu-id="eb476-128">If you create a `TcpClient` using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="eb476-129">Należy wywołać <xref:System.Net.Sockets.TcpClient.Connect%2A> metody przed wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="eb476-129">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-130">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-130">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb476-131">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb476-131">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-132">Poniższy przykład kodu pokazuje, jak utworzyć wystąpienie <xref:System.Net.Sockets.TcpClient> klasy przy użyciu lokalnego punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="eb476-132">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb476-133"><paramref name="localEP" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-133">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family"><span data-ttu-id="eb476-134"><see cref="P:System.Net.IPAddress.AddressFamily" /> Protokołu IP.</span><span class="sxs-lookup"><span data-stu-id="eb476-134">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span></span></param>
        <summary><span data-ttu-id="eb476-135">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.TcpClient" /> klasy z określonej rodziny.</span><span class="sxs-lookup"><span data-stu-id="eb476-135">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eb476-136">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-136">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb476-137">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb476-137">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-138">Poniższy przykład kodu pokazuje, jak utworzyć wystąpienie <xref:System.Net.Sockets.TcpClient> klasy.</span><span class="sxs-lookup"><span data-stu-id="eb476-138">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb476-139"><paramref name="family" /> Parametr nie jest równa AddressFamily.InterNetwork</span><span class="sxs-lookup"><span data-stu-id="eb476-139">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork</span></span> 
<span data-ttu-id="eb476-140">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb476-140">-or-</span></span> 
<span data-ttu-id="eb476-141"><paramref name="family" /> Parametr nie jest równa AddressFamily.InterNetworkV6</span><span class="sxs-lookup"><span data-stu-id="eb476-141">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : string * int -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient (hostname, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname"><span data-ttu-id="eb476-142">Nazwa DNS hosta zdalnego, w którym ma się połączyć.</span><span class="sxs-lookup"><span data-stu-id="eb476-142">The DNS name of the remote host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="eb476-143">Numer portu zdalnego hosta, na którym ma się połączyć.</span><span class="sxs-lookup"><span data-stu-id="eb476-143">The port number of the remote host to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="eb476-144">Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.TcpClient" /> klasy i nawiązanie połączenia z określonego portu na określonym hoście.</span><span class="sxs-lookup"><span data-stu-id="eb476-144">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-145">Ten konstruktor tworzy nową <xref:System.Net.Sockets.TcpClient> i nawiązuje połączenie synchroniczne próba podanej nazwy hosta i numer portu.</span><span class="sxs-lookup"><span data-stu-id="eb476-145">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and makes a synchronous connection attempt to the provided host name and port number.</span></span> <span data-ttu-id="eb476-146">Źródłowy dostawca usługi spowoduje przypisanie najbardziej odpowiedniego adresu IP adres i port numer lokalny.</span><span class="sxs-lookup"><span data-stu-id="eb476-146">The underlying service provider will assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="eb476-147">`TcpClient` blokuje, aż do jego łączy się lub kończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="eb476-147">`TcpClient` will block until it either connects or fails.</span></span> <span data-ttu-id="eb476-148">Ten konstruktor Pozwala zainicjować rozpoznać nazwy hosta DNS oraz połączyć w jednym kroku wygodne.</span><span class="sxs-lookup"><span data-stu-id="eb476-148">This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</span></span>  
  
 <span data-ttu-id="eb476-149">Jeśli był włączony protokół IPv6 i <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> metoda jest wywoływana, aby połączyć się z hostem, który jest rozpoznawany jako IPv6 i adresów IPv4, połączenia protokołu IPv6 adres będzie próba przed adresem IPv4.</span><span class="sxs-lookup"><span data-stu-id="eb476-149">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="eb476-150">Może to mieć wpływu opóźnienia czasu do nawiązania połączenia, jeśli host nie nasłuchuje na adres IPv6.</span><span class="sxs-lookup"><span data-stu-id="eb476-150">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-151">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-151">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="eb476-152">Po otrzymaniu tego kodu, możesz zapoznać się z [kod błędu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) dokumentacji, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-152">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-153">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-153">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb476-154">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb476-154">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-155">Poniższy przykład kodu pokazuje, jak utworzyć wystąpienie <xref:System.Net.Sockets.TcpClient> klasy przy użyciu nazwy hosta i numer portu.</span><span class="sxs-lookup"><span data-stu-id="eb476-155">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb476-156"><paramref name="hostname" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-156">The <paramref name="hostname" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eb476-157"><paramref name="port" /> Parametru nie przypada między <see cref="F:System.Net.IPEndPoint.MinPort" /> i <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-157">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="eb476-158">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span><span class="sxs-lookup"><span data-stu-id="eb476-158">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="Overload:System.Net.Sockets.TcpClient.#ctor" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Net.Sockets.TcpClient.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb476-159">Pobiera lub ustawia wartość wskazującą, czy nawiązać połączenia.</span><span class="sxs-lookup"><span data-stu-id="eb476-159">Gets or sets a value that indicates whether a connection has been made.</span></span></summary>
        <value><span data-ttu-id="eb476-160"><see langword="true" /> Jeśli połączenie zostało nawiązane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-160"><see langword="true" /> if the connection has been made; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-161">Klasy wywodzące się z <xref:System.Net.Sockets.TcpClient> można użyć tej właściwości, aby określić, jeśli próba połączenia zakończyła się pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="eb476-161">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to determine if a connection attempt has succeeded.</span></span> <span data-ttu-id="eb476-162">Monitoruje stan połączenia trwającej `TcpClient`.</span><span class="sxs-lookup"><span data-stu-id="eb476-162">It does not monitor the ongoing connection state of `TcpClient`.</span></span> <span data-ttu-id="eb476-163">Jeśli host zdalny zamyka połączenia, `Active` nie będzie aktualizowana.</span><span class="sxs-lookup"><span data-stu-id="eb476-163">If the remote host closes the connection, `Active` will not be updated.</span></span> <span data-ttu-id="eb476-164">Jeśli są pochodząca od `TcpClient` i wymagają bliżej uwagę na stan połączenia użyj <xref:System.Net.Sockets.Socket.Connected%2A> właściwość <xref:System.Net.Sockets.Socket> zwrócone przez <xref:System.Net.Sockets.TcpClient.Client%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb476-164">If you are deriving from `TcpClient` and require closer attention to the connection state, use the <xref:System.Net.Sockets.Socket.Connected%2A> property of the <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpClient.Client%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.Connected" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.TcpClient.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb476-165">Pobiera ilość danych, który otrzymał od sieci i jest dostępny do odczytu.</span><span class="sxs-lookup"><span data-stu-id="eb476-165">Gets the amount of data that has been received from the network and is available to be read.</span></span></summary>
        <value><span data-ttu-id="eb476-166">Liczba bajtów danych otrzymanych od sieci i dostępnych do odczytu.</span><span class="sxs-lookup"><span data-stu-id="eb476-166">The number of bytes of data received from the network and available to be read.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="eb476-167">`Available` Właściwość jest możliwość określenia, czy dane są umieszczane w kolejce do odczytu.</span><span class="sxs-lookup"><span data-stu-id="eb476-167">The `Available` property is a way to determine whether data is queued for reading.</span></span> <span data-ttu-id="eb476-168">Jeśli dane są dostępne, należy wywołać <xref:System.Net.Sockets.NetworkStream.Read%2A> można pobrać danych.</span><span class="sxs-lookup"><span data-stu-id="eb476-168">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="eb476-169">Łączna ilość danych w kolejce w buforze sieci do odczytu jest dostępnych danych.</span><span class="sxs-lookup"><span data-stu-id="eb476-169">The available data is the total amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="eb476-170">Jeśli żadne dane nie znajduje się w kolejce w buforze sieci `Available` zwraca wartość 0.</span><span class="sxs-lookup"><span data-stu-id="eb476-170">If no data is queued in the network buffer, `Available` returns 0.</span></span>  
  
 <span data-ttu-id="eb476-171">Jeśli host zdalny zamyka lub zamyka połączenia, `Available` może zgłaszać <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="eb476-171">If the remote host shuts down or closes the connection, `Available` may throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="eb476-172">Jeśli zostanie wyświetlony `SocketException`, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-172">If you receive a `SocketException`, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="eb476-173">Po otrzymaniu tego kodu można odwołać się do dokumentacji kodów błędów systemu Windows Sockets w wersji 2 interfejsu API w bibliotece MSDN pod [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library) szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-173">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-174">Poniższy przykład kodu pokazuje użycie `Available` właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb476-174">The following code example shows the use of the `Available` property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="eb476-175">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</span><span class="sxs-lookup"><span data-stu-id="eb476-175">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eb476-176"><see cref="T:System.Net.Sockets.Socket" /> Zostało zamknięte.</span><span class="sxs-lookup"><span data-stu-id="eb476-176">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginConnect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb476-177">Rozpoczyna się asynchroniczne żądanie dla połączenia zdalnego hosta.</span><span class="sxs-lookup"><span data-stu-id="eb476-177">Begins an asynchronous request for a remote host connection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (address As IPAddress, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::IPAddress ^ address, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (address, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="eb476-178"><see cref="T:System.Net.IPAddress" /> Hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="eb476-178">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span></span></param>
        <param name="port"><span data-ttu-id="eb476-179">Numer portu zdalnego hosta.</span><span class="sxs-lookup"><span data-stu-id="eb476-179">The port number of the remote host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="eb476-180"><see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po ukończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-180">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="eb476-181">Obiekt zdefiniowany przez użytkownika, który zawiera informacje o operacji nawiązywania połączenia.</span><span class="sxs-lookup"><span data-stu-id="eb476-181">A user-defined object that contains information about the connect operation.</span></span> <span data-ttu-id="eb476-182">Ten obiekt jest przekazywany do <paramref name="requestCallback" /> po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-182">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="eb476-183">Rozpoczyna się asynchroniczne żądanie dla połączenia zdalnego hosta.</span><span class="sxs-lookup"><span data-stu-id="eb476-183">Begins an asynchronous request for a remote host connection.</span></span> <span data-ttu-id="eb476-184">Host zdalny jest określona przez <see cref="T:System.Net.IPAddress" /> i numer portu (<see cref="T:System.Int32" />).</span><span class="sxs-lookup"><span data-stu-id="eb476-184">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span></span></summary>
        <returns><span data-ttu-id="eb476-185"><see cref="T:System.IAsyncResult" /> Obiektu, który odwołuje się do połączenia asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="eb476-185">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-186">Asynchroniczną `BeginConnect` można ukończyć operacji, przez wywołanie metody <xref:System.Net.Sockets.TcpClient.EndConnect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-186">The asynchronous `BeginConnect` operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="eb476-187">Zazwyczaj metoda jest wywoływana przez `asyncCallback` delegować.</span><span class="sxs-lookup"><span data-stu-id="eb476-187">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="eb476-188">Ta metoda nie blokuje, aż do zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-188">This method does not block until the operation completes.</span></span> <span data-ttu-id="eb476-189">Aby zablokować do momentu ukończenia operacji, użyj jednej z <xref:System.Net.Sockets.TcpClient.Connect%2A> przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-189">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="eb476-190">Aby uzyskać szczegółowe informacje dotyczące korzystania z modelu programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="eb476-190">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-191">Poniższy przykład kodu tworzy <xref:System.Net.Sockets.TcpClient> i nawiązanie połączenia z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="eb476-191">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb476-192"><paramref name="address" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-192">The <paramref name="address" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="eb476-193">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</span><span class="sxs-lookup"><span data-stu-id="eb476-193">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eb476-194"><see cref="T:System.Net.Sockets.Socket" /> Zostało zamknięte.</span><span class="sxs-lookup"><span data-stu-id="eb476-194">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="eb476-195">Obiekt wywołujący wyżej w stosie wywołań ma uprawnienie dla żądanej operacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-195">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eb476-196">Numer portu jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="eb476-196">The port number is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (addresses As IPAddress(), port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (addresses, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addresses"><span data-ttu-id="eb476-197">Co najmniej jeden <see cref="T:System.Net.IPAddress" /> który wyznacza hostów zdalnych.</span><span class="sxs-lookup"><span data-stu-id="eb476-197">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span></span></param>
        <param name="port"><span data-ttu-id="eb476-198">Numer portu hostów zdalnych.</span><span class="sxs-lookup"><span data-stu-id="eb476-198">The port number of the remote hosts.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="eb476-199"><see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po ukończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-199">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="eb476-200">Obiekt zdefiniowany przez użytkownika, który zawiera informacje o operacji nawiązywania połączenia.</span><span class="sxs-lookup"><span data-stu-id="eb476-200">A user-defined object that contains information about the connect operation.</span></span> <span data-ttu-id="eb476-201">Ten obiekt jest przekazywany do <paramref name="requestCallback" /> po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-201">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="eb476-202">Rozpoczyna się asynchroniczne żądanie dla połączenia zdalnego hosta.</span><span class="sxs-lookup"><span data-stu-id="eb476-202">Begins an asynchronous request for a remote host connection.</span></span> <span data-ttu-id="eb476-203">Host zdalny jest określona przez <see cref="T:System.Net.IPAddress" /> tablicy i numer portu (<see cref="T:System.Int32" />).</span><span class="sxs-lookup"><span data-stu-id="eb476-203">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span></span></summary>
        <returns><span data-ttu-id="eb476-204"><see cref="T:System.IAsyncResult" /> Obiektu, który odwołuje się do połączenia asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="eb476-204">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-205">Asynchroniczną `BeginConnect` można ukończyć operacji, przez wywołanie metody <xref:System.Net.Sockets.TcpClient.EndConnect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-205">The asynchronous `BeginConnect` operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="eb476-206">Zazwyczaj metoda jest wywoływana przez `asyncCallback` delegować.</span><span class="sxs-lookup"><span data-stu-id="eb476-206">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="eb476-207">Ta metoda nie blokuje, aż do zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-207">This method does not block until the operation completes.</span></span> <span data-ttu-id="eb476-208">Aby zablokować do momentu ukończenia operacji, użyj jednej z <xref:System.Net.Sockets.TcpClient.Connect%2A> przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-208">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="eb476-209">Aby uzyskać szczegółowe informacje dotyczące korzystania z modelu programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="eb476-209">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 <span data-ttu-id="eb476-210">Ta metoda jest zwykle używana natychmiast po wywołaniu <xref:System.Net.Dns.BeginGetHostAddresses%2A> metody, która może zwrócić wiele adresów IP dla jednego hosta.</span><span class="sxs-lookup"><span data-stu-id="eb476-210">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-211">Poniższy przykład kodu tworzy <xref:System.Net.Sockets.TcpClient> i nawiązanie połączenia z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="eb476-211">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb476-212"><paramref name="addresses" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-212">The <paramref name="addresses" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="eb476-213">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</span><span class="sxs-lookup"><span data-stu-id="eb476-213">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eb476-214"><see cref="T:System.Net.Sockets.Socket" /> Zostało zamknięte.</span><span class="sxs-lookup"><span data-stu-id="eb476-214">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="eb476-215">Obiekt wywołujący wyżej w stosie wywołań ma uprawnienie dla żądanej operacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-215">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eb476-216">Numer portu jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="eb476-216">The port number is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (string host, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(string host, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (host As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::String ^ host, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (host, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="eb476-217">Nazwa hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="eb476-217">The name of the remote host.</span></span></param>
        <param name="port"><span data-ttu-id="eb476-218">Numer portu zdalnego hosta.</span><span class="sxs-lookup"><span data-stu-id="eb476-218">The port number of the remote host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="eb476-219"><see cref="T:System.AsyncCallback" /> Delegata, który odwołuje się do metody do wywołania po ukończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-219">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="eb476-220">Obiekt zdefiniowany przez użytkownika, który zawiera informacje o operacji nawiązywania połączenia.</span><span class="sxs-lookup"><span data-stu-id="eb476-220">A user-defined object that contains information about the connect operation.</span></span> <span data-ttu-id="eb476-221">Ten obiekt jest przekazywany do <paramref name="requestCallback" /> po zakończeniu operacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-221">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="eb476-222">Rozpoczyna się asynchroniczne żądanie dla połączenia zdalnego hosta.</span><span class="sxs-lookup"><span data-stu-id="eb476-222">Begins an asynchronous request for a remote host connection.</span></span> <span data-ttu-id="eb476-223">Host zdalny jest określony przez nazwę hosta (<see cref="T:System.String" />) i numer portu (<see cref="T:System.Int32" />).</span><span class="sxs-lookup"><span data-stu-id="eb476-223">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span></span></summary>
        <returns><span data-ttu-id="eb476-224"><see cref="T:System.IAsyncResult" /> Obiektu, który odwołuje się do połączenia asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="eb476-224">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-225">Asynchroniczną `BeginConnect` można ukończyć operacji, przez wywołanie metody <xref:System.Net.Sockets.TcpClient.EndConnect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-225">The asynchronous `BeginConnect` operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="eb476-226">Zazwyczaj metoda jest wywoływana przez `asyncCallback` delegować.</span><span class="sxs-lookup"><span data-stu-id="eb476-226">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="eb476-227">Ta metoda nie blokuje, aż do zakończenia operacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-227">This method does not block until the operation completes.</span></span> <span data-ttu-id="eb476-228">Aby zablokować do momentu ukończenia operacji, użyj jednej z <xref:System.Net.Sockets.TcpClient.Connect%2A> przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-228">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="eb476-229">Aby uzyskać szczegółowe informacje dotyczące korzystania z modelu programowania asynchronicznego, zobacz [wywołanie asynchroniczne synchroniczne metody](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="eb476-229">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-230">Poniższy przykład kodu tworzy <xref:System.Net.Sockets.TcpClient> i nawiązanie połączenia z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="eb476-230">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb476-231"><paramref name="host" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-231">The <paramref name="host" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="eb476-232">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</span><span class="sxs-lookup"><span data-stu-id="eb476-232">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eb476-233"><see cref="T:System.Net.Sockets.Socket" /> Zostało zamknięte.</span><span class="sxs-lookup"><span data-stu-id="eb476-233">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="eb476-234">Obiekt wywołujący wyżej w stosie wywołań ma uprawnienie dla żądanej operacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-234">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eb476-235">Numer portu jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="eb476-235">The port number is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Client : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.TcpClient.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb476-236">Pobiera lub ustawia podstawową <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-236">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="eb476-237">Odnośnej sieci <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-237">The underlying network <see cref="T:System.Net.Sockets.Socket" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-238"><xref:System.Net.Sockets.TcpClient> Tworzy <xref:System.Net.Sockets.Socket> do wysyłania i odbierania danych przez sieć.</span><span class="sxs-lookup"><span data-stu-id="eb476-238"><xref:System.Net.Sockets.TcpClient> creates a <xref:System.Net.Sockets.Socket> to send and receive data over a network.</span></span> <span data-ttu-id="eb476-239">Klasy wywodzące się z `TcpClient` ta właściwość służy do pobierania lub ustawiania to `Socket`.</span><span class="sxs-lookup"><span data-stu-id="eb476-239">Classes deriving from `TcpClient` can use this property to get or set this `Socket`.</span></span> <span data-ttu-id="eb476-240">Używają bazowej `Socket` zwróciło `Client` w razie potrzeby dostęp poza tymi, które `TcpClient` udostępnia.</span><span class="sxs-lookup"><span data-stu-id="eb476-240">Use the underlying `Socket` returned from `Client` if you require access beyond that which `TcpClient` provides.</span></span> <span data-ttu-id="eb476-241">Można również użyć `Client` można ustawić podstawowe `Socket` do istniejącego `Socket`.</span><span class="sxs-lookup"><span data-stu-id="eb476-241">You can also use `Client` to set the underlying `Socket` to an existing `Socket`.</span></span> <span data-ttu-id="eb476-242">Może to być przydatne, jeśli chcesz móc korzystać z prostoty `TcpClient` przy użyciu istniejących wcześniej `Socket`.</span><span class="sxs-lookup"><span data-stu-id="eb476-242">This might be useful if you want to take advantage of the simplicity of `TcpClient` using a pre-existing `Socket`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-243">Poniższy przykład kodu demonstruje użycie `Client` właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb476-243">The following code example demonstrates the use of the `Client` property.</span></span> <span data-ttu-id="eb476-244">W tym przykładzie rozmiar buforów odbioru w bazowym <xref:System.Net.Sockets.Socket> zostanie zmieniony.</span><span class="sxs-lookup"><span data-stu-id="eb476-244">In this example, the receive buffer size of the underlying <xref:System.Net.Sockets.Socket> is changed.</span></span>  
  
 [!code-csharp[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="tcpClient.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb476-245">Usuwa to <see cref="T:System.Net.Sockets.TcpClient" /> wystąpienie i żądań zamknięte podstawowego połączenia TCP.</span><span class="sxs-lookup"><span data-stu-id="eb476-245">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-246">`Close` Metoda oznacza wystąpienia, ponieważ usunięty i żądania wysyłane przez skojarzony <xref:System.Net.Sockets.Socket> zamknij połączenie TCP.</span><span class="sxs-lookup"><span data-stu-id="eb476-246">The `Close` method marks the instance as disposed and requests that the associated <xref:System.Net.Sockets.Socket> close the TCP connection.</span></span> <span data-ttu-id="eb476-247">Na podstawie <xref:System.Net.Sockets.TcpClient.LingerState%2A> właściwości połączenia TCP może pozostać otwarte przez pewien czas, po `Close` metoda jest wywoływana, gdy dane pozostają do wysłania.</span><span class="sxs-lookup"><span data-stu-id="eb476-247">Based on the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property, the TCP connection may stay open for some time after the `Close` method is called when data remains to be sent.</span></span> <span data-ttu-id="eb476-248">Nie ma żadnych powiadomień podany przy wywołaniu metody połączenie podstawowe zostało zakończone zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="eb476-248">There is no notification provided when the underlying connection has completed closing.</span></span>  
  
 <span data-ttu-id="eb476-249">Wywołanie tej metody może spowodować w zamknięciu skojarzonego `Socket` i zostaną także zamknięte skojarzonego <xref:System.Net.Sockets.NetworkStream> używany do wysyłania i odbierania danych, jeśli jedna z nich została utworzona.</span><span class="sxs-lookup"><span data-stu-id="eb476-249">Calling this method will eventually result in the close of the associated `Socket` and will also close the associated <xref:System.Net.Sockets.NetworkStream> that is used to send and receive data if one was created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-250">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-250">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb476-251">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb476-251">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-252">Poniższy przykład kodu demonstruje zamknięcia <xref:System.Net.Sockets.TcpClient> przez wywołanie metody `Close` metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-252">The following code example demonstrates closing a <xref:System.Net.Sockets.TcpClient> by calling the `Close` method.</span></span>  
  
 [!code-cpp[NCLTCPClientSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLTcpClientSync/CPP/tcpclient.cpp#1)]
 [!code-csharp[NCLTCPClientSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb476-253">Klient nawiązanie połączenia z hostem zdalnym TCP przy użyciu określonego hosta, nazwę i numer portu.</span><span class="sxs-lookup"><span data-stu-id="eb476-253">Connects the client to a remote TCP host using the specified host name and port number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (remoteEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPEndPoint -&gt; unit" Usage="tcpClient.Connect remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="remoteEP"><span data-ttu-id="eb476-254"><see cref="T:System.Net.IPEndPoint" /> Do której zamierzasz połączyć.</span><span class="sxs-lookup"><span data-stu-id="eb476-254">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="eb476-255">Łączy z klienta do hosta zdalnego TCP przy użyciu określonej sieci zdalnego punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="eb476-255">Connects the client to a remote TCP host using the specified remote network endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-256">Wywołaj tę metodę w celu ustanowienia połączenia synchroniczne hosta zdalnego określonego <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="eb476-256">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="eb476-257">Przed wywołaniem `Connect`, należy utworzyć wystąpienie `IPEndPoint` przy użyciu adresu IP i numer portu.</span><span class="sxs-lookup"><span data-stu-id="eb476-257">Before you call `Connect`, you must create an instance of the `IPEndPoint` class using an IP address and a port number.</span></span> <span data-ttu-id="eb476-258">Użyj tego `IPEndPoint` jako `remoteEP` parametru.</span><span class="sxs-lookup"><span data-stu-id="eb476-258">Use this `IPEndPoint` as the `remoteEP` parameter.</span></span> <span data-ttu-id="eb476-259">`Connect` Metoda zablokuje aż do jego łączy się lub kończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="eb476-259">The `Connect` method will block until it either connects or fails.</span></span> <span data-ttu-id="eb476-260">Po nawiązaniu połączenia z hostem zdalnym, należy użyć <xref:System.Net.Sockets.TcpClient.GetStream%2A> metody w celu uzyskania bazowej <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="eb476-260">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="eb476-261">Użyj tego `NetworkStream` do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="eb476-261">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-262">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-262">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="eb476-263">Po otrzymaniu tego kodu, możesz zapoznać się z [kod błędu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) dokumentacji, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-263">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-264">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-264">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb476-265">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span><span class="sxs-lookup"><span data-stu-id="eb476-265">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-266">Poniższy przykład kodu wykorzystuje <xref:System.Net.IPEndPoint> nawiązywanie połączeń z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="eb476-266">The following code example uses an <xref:System.Net.IPEndPoint> to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb476-267"><paramref name="remoteEp" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-267">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="eb476-268">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span><span class="sxs-lookup"><span data-stu-id="eb476-268">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eb476-269"><see cref="T:System.Net.Sockets.TcpClient" /> Jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="eb476-269">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span></span></exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="tcpClient.Connect (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="eb476-270"><see cref="T:System.Net.IPAddress" /> Hosta, do której chcesz połączyć.</span><span class="sxs-lookup"><span data-stu-id="eb476-270">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="eb476-271">Numer portu, w którym ma się połączyć.</span><span class="sxs-lookup"><span data-stu-id="eb476-271">The port number to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="eb476-272">Łączy się z hostem zdalnym TCP przy użyciu określonego adresu IP adres i numer portu z klienta.</span><span class="sxs-lookup"><span data-stu-id="eb476-272">Connects the client to a remote TCP host using the specified IP address and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-273">Wywołaj tę metodę w celu ustanowienia połączenia synchroniczne hosta zdalnego określonego <xref:System.Net.IPAddress> i numer portu.</span><span class="sxs-lookup"><span data-stu-id="eb476-273">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number.</span></span> <span data-ttu-id="eb476-274"><xref:System.Net.Sockets.TcpClient.Connect%2A> Metoda zablokuje aż do jego łączy się lub kończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="eb476-274">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="eb476-275">Po nawiązaniu połączenia z hostem zdalnym, należy użyć <xref:System.Net.Sockets.TcpClient.GetStream%2A> metody w celu uzyskania bazowej <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="eb476-275">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="eb476-276">Użyj tego `NetworkStream` do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="eb476-276">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-277">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-277">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="eb476-278">Po otrzymaniu tego kodu, możesz zapoznać się z [kod błędu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) dokumentacji, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-278">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-279">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-279">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb476-280">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb476-280">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-281">Poniższy przykład kodu używa adresu IP i numer portu do połączenia z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="eb476-281">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb476-282"><paramref name="address" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-282">The <paramref name="address" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eb476-283"><paramref name="port" /> Nie przypada między <see cref="F:System.Net.IPEndPoint.MinPort" /> i <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-283">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="eb476-284">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span><span class="sxs-lookup"><span data-stu-id="eb476-284">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eb476-285"><see cref="T:System.Net.Sockets.TcpClient" /> wystąpienie jest zamykane.</span><span class="sxs-lookup"><span data-stu-id="eb476-285"><see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress[] ipAddresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress[] ipAddresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (ipAddresses As IPAddress(), port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(cli::array &lt;System::Net::IPAddress ^&gt; ^ ipAddresses, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress[] * int -&gt; unit" Usage="tcpClient.Connect (ipAddresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ipAddresses"><span data-ttu-id="eb476-286"><see cref="T:System.Net.IPAddress" /> Tablicy hosta, na którym ma się połączyć.</span><span class="sxs-lookup"><span data-stu-id="eb476-286">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="eb476-287">Numer portu, w którym ma się połączyć.</span><span class="sxs-lookup"><span data-stu-id="eb476-287">The port number to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="eb476-288">Łączy się z hostem zdalnym TCP przy użyciu określonych adresów IP i numer portu z klienta.</span><span class="sxs-lookup"><span data-stu-id="eb476-288">Connects the client to a remote TCP host using the specified IP addresses and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-289">Ta metoda jest zwykle używana natychmiast po wywołaniu <xref:System.Net.Dns.BeginGetHostAddresses%2A> metody, która może zwrócić wiele adresów IP dla jednego hosta.</span><span class="sxs-lookup"><span data-stu-id="eb476-289">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="eb476-290">Wywołaj `Connect` metodę ustanawiania połączenia synchroniczne hosta zdalnego hosta określonego przez tablicę <xref:System.Net.IPAddress> elementów i numer portu.</span><span class="sxs-lookup"><span data-stu-id="eb476-290">Call the `Connect` method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number.</span></span> <span data-ttu-id="eb476-291">`Connect` Metoda zablokuje aż do jego łączy się lub kończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="eb476-291">The `Connect` method will block until it either connects or fails.</span></span> <span data-ttu-id="eb476-292">Po nawiązaniu połączenia z hostem zdalnym, należy użyć <xref:System.Net.Sockets.TcpClient.GetStream%2A> metody w celu uzyskania bazowej <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="eb476-292">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="eb476-293">Użyj tego `NetworkStream` do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="eb476-293">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-294">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-294">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="eb476-295">Po otrzymaniu tego kodu można odwołać się do dokumentacji kodów błędów systemu Windows Sockets w wersji 2 interfejsu API w bibliotece MSDN pod [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library) szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-295">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-296">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-296">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb476-297">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb476-297">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-298">Poniższy przykład kodu używa adresu IP i numer portu do połączenia z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="eb476-298">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#8)]
 [!code-csharp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb476-299"><paramref name="ipAddresses" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-299">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eb476-300">Numer portu jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="eb476-300">The port number is not valid.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="eb476-301">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</span><span class="sxs-lookup"><span data-stu-id="eb476-301">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eb476-302"><see cref="T:System.Net.Sockets.Socket" /> Zostało zamknięte.</span><span class="sxs-lookup"><span data-stu-id="eb476-302">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="eb476-303">Obiekt wywołujący wyżej w stosie wywołań ma uprawnienie dla żądanej operacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-303">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="eb476-304">Ta metoda jest nieprawidłowa dla gniazda, które używają <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flagi lub <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flagi.</span><span class="sxs-lookup"><span data-stu-id="eb476-304">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="tcpClient.Connect (hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname"><span data-ttu-id="eb476-305">Nazwa DNS hosta zdalnego, w którym ma się połączyć.</span><span class="sxs-lookup"><span data-stu-id="eb476-305">The DNS name of the remote host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="eb476-306">Numer portu zdalnego hosta, na którym ma się połączyć.</span><span class="sxs-lookup"><span data-stu-id="eb476-306">The port number of the remote host to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="eb476-307">Łączy z klienta do określonego portu na określonym hoście.</span><span class="sxs-lookup"><span data-stu-id="eb476-307">Connects the client to the specified port on the specified host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-308">Wywołaj tę metodę w celu ustanowienia połączenia synchroniczne hosta zdalnego określona nazwa hosta i numer portu.</span><span class="sxs-lookup"><span data-stu-id="eb476-308">Call this method to establish a synchronous remote host connection to the specified host name and port number.</span></span> <span data-ttu-id="eb476-309">`Connect` Metoda zablokuje aż do jego łączy się lub kończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="eb476-309">The `Connect` method will block until it either connects or fails.</span></span> <span data-ttu-id="eb476-310">Po nawiązaniu połączenia z hostem zdalnym, należy użyć <xref:System.Net.Sockets.TcpClient.GetStream%2A> metody w celu uzyskania bazowej <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="eb476-310">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="eb476-311">Użyj tego `NetworkStream` do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="eb476-311">Use this  `NetworkStream` to send and receive data.</span></span>  
  
 <span data-ttu-id="eb476-312">Jeśli był włączony protokół IPv6 i `Connect(String, Int32)` metoda jest wywoływana, aby połączyć się z hostem, który jest rozpoznawany jako IPv6 i adresów IPv4, połączenia protokołu IPv6 adres będzie próba przed adresem IPv4.</span><span class="sxs-lookup"><span data-stu-id="eb476-312">If IPv6 is enabled and the `Connect(String, Int32)` method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="eb476-313">Może to mieć wpływu opóźnienia czasu do nawiązania połączenia, jeśli host nie nasłuchuje na adres IPv6.</span><span class="sxs-lookup"><span data-stu-id="eb476-313">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-314">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-314">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="eb476-315">Po otrzymaniu tego kodu, możesz zapoznać się z [kod błędu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) dokumentacji, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-315">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-316">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-316">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb476-317">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb476-317">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-318">Poniższy kod używa przykład nazwy hosta i numer portu do połączenia z hostem zdalnym</span><span class="sxs-lookup"><span data-stu-id="eb476-318">The following code example uses the host name and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb476-319"><paramref name="hostname" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-319">The <paramref name="hostname" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eb476-320"><paramref name="port" /> Parametru nie przypada między <see cref="F:System.Net.IPEndPoint.MinPort" /> i <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-320">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="eb476-321">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span><span class="sxs-lookup"><span data-stu-id="eb476-321">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eb476-322"><see cref="T:System.Net.Sockets.TcpClient" /> wystąpienie jest zamykane.</span><span class="sxs-lookup"><span data-stu-id="eb476-322"><see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb476-323">Klient nawiązanie połączenia z hostem zdalnym TCP przy użyciu określonego hosta, nazwę i numer portu jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="eb476-323">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (address As IPAddress, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="eb476-324"><see cref="T:System.Net.IPAddress" /> Hosta, do której chcesz połączyć.</span><span class="sxs-lookup"><span data-stu-id="eb476-324">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="eb476-325">Numer portu, w którym ma się połączyć.</span><span class="sxs-lookup"><span data-stu-id="eb476-325">The port number to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="eb476-326">Łączy się z hostem zdalnym TCP przy użyciu określonego adresu IP adres i numer portu jako operację asynchroniczną z klienta.</span><span class="sxs-lookup"><span data-stu-id="eb476-326">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="eb476-327">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="eb476-327">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-328">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="eb476-328">This operation will not block.</span></span> <span data-ttu-id="eb476-329">Zwraca zwrócone <xref:System.Threading.Tasks.Task> obiektu zakończy się po nawiązaniu połączenia TCP.</span><span class="sxs-lookup"><span data-stu-id="eb476-329">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="eb476-330">Ta metoda nie blokuje wątek wywołujący podczas żądania połączenia jest w toku.</span><span class="sxs-lookup"><span data-stu-id="eb476-330">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="eb476-331">Wywołaj tę metodę w celu ustanowienia połączenia synchroniczne hosta zdalnego określonego <xref:System.Net.IPAddress> i numer portu jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="eb476-331">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number as an asynchronous operation.</span></span> <span data-ttu-id="eb476-332">Po nawiązaniu połączenia z hostem zdalnym, należy użyć <xref:System.Net.Sockets.TcpClient.GetStream%2A> metody w celu uzyskania bazowej <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="eb476-332">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="eb476-333">Użyj tego `NetworkStream` do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="eb476-333">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-334">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-334">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="eb476-335">Po otrzymaniu tego kodu, możesz zapoznać się z [kod błędu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) dokumentacji, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-335">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-336">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-336">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb476-337">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb476-337">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb476-338"><paramref name="address" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-338">The <paramref name="address" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eb476-339"><paramref name="port" /> Nie przypada między <see cref="F:System.Net.IPEndPoint.MinPort" /> i <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-339">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="eb476-340">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span><span class="sxs-lookup"><span data-stu-id="eb476-340">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eb476-341"><see cref="T:System.Net.Sockets.TcpClient" /> wystąpienie jest zamykane.</span><span class="sxs-lookup"><span data-stu-id="eb476-341"><see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress[] addresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress[] addresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (addresses As IPAddress(), port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress[] * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (addresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addresses"><span data-ttu-id="eb476-342"><see cref="T:System.Net.IPAddress" /> Tablicy hosta, na którym ma się połączyć.</span><span class="sxs-lookup"><span data-stu-id="eb476-342">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="eb476-343">Numer portu, w którym ma się połączyć.</span><span class="sxs-lookup"><span data-stu-id="eb476-343">The port number to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="eb476-344">Łączy się z hostem zdalnym TCP przy użyciu określonych adresów IP i numer portu jako operację asynchroniczną z klienta.</span><span class="sxs-lookup"><span data-stu-id="eb476-344">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="eb476-345">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="eb476-345">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-346">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="eb476-346">This operation will not block.</span></span> <span data-ttu-id="eb476-347">Zwraca zwrócone <xref:System.Threading.Tasks.Task> obiektu zakończy się po nawiązaniu połączenia TCP.</span><span class="sxs-lookup"><span data-stu-id="eb476-347">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="eb476-348">Ta metoda nie blokuje wątek wywołujący podczas żądania połączenia jest w toku.</span><span class="sxs-lookup"><span data-stu-id="eb476-348">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="eb476-349">Ta metoda jest zwykle używana natychmiast po wywołaniu <xref:System.Net.Dns.BeginGetHostAddresses%2A> metody, która może zwrócić wiele adresów IP dla jednego hosta.</span><span class="sxs-lookup"><span data-stu-id="eb476-349">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="eb476-350">Wywołaj tę metodę w celu ustanowienia połączenia synchroniczne hosta zdalnego hosta określonego przez tablicę <xref:System.Net.IPAddress> elementów i numer portu jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="eb476-350">Call this method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number as an asynchronous operation.</span></span> <span data-ttu-id="eb476-351">Po nawiązaniu połączenia z hostem zdalnym, należy użyć <xref:System.Net.Sockets.TcpClient.GetStream%2A> metody w celu uzyskania bazowej <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="eb476-351">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="eb476-352">Użyj tego `NetworkStream` do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="eb476-352">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-353">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-353">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="eb476-354">Po otrzymaniu tego kodu można odwołać się do dokumentacji kodów błędów systemu Windows Sockets w wersji 2 interfejsu API w bibliotece MSDN pod [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library) szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-354">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-355">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-355">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb476-356">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb476-356">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb476-357"><paramref name="ipAddresses" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-357">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eb476-358">Numer portu jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="eb476-358">The port number is not valid.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="eb476-359">Wystąpił błąd podczas próby uzyskania dostępu do gniazda.</span><span class="sxs-lookup"><span data-stu-id="eb476-359">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eb476-360"><see cref="T:System.Net.Sockets.Socket" /> Zostało zamknięte.</span><span class="sxs-lookup"><span data-stu-id="eb476-360">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="eb476-361">Obiekt wywołujący wyżej w stosie wywołań ma uprawnienie dla żądanej operacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-361">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="eb476-362">Ta metoda jest nieprawidłowa dla gniazda, które używają <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flagi lub <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flagi.</span><span class="sxs-lookup"><span data-stu-id="eb476-362">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (host As String, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : string * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (host, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="eb476-363">Nazwa DNS hosta zdalnego, w którym ma się połączyć.</span><span class="sxs-lookup"><span data-stu-id="eb476-363">The DNS name of the remote host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="eb476-364">Numer portu zdalnego hosta, na którym ma się połączyć.</span><span class="sxs-lookup"><span data-stu-id="eb476-364">The port number of the remote host to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="eb476-365">Klient łączy się z określonego portu TCP na określonym hoście jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="eb476-365">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="eb476-366">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="eb476-366">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-367">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="eb476-367">This operation will not block.</span></span> <span data-ttu-id="eb476-368">Zwraca zwrócone <xref:System.Threading.Tasks.Task> obiektu zakończy się po nawiązaniu połączenia TCP.</span><span class="sxs-lookup"><span data-stu-id="eb476-368">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="eb476-369">Ta metoda nie blokuje wątek wywołujący podczas żądania połączenia jest w toku.</span><span class="sxs-lookup"><span data-stu-id="eb476-369">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="eb476-370">Wywołaj tę metodę w celu ustanowienia połączenia synchroniczne hosta zdalnego określona nazwa hosta i numer_portu jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="eb476-370">Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</span></span> <span data-ttu-id="eb476-371">Po nawiązaniu połączenia z hostem zdalnym, należy użyć <xref:System.Net.Sockets.TcpClient.GetStream%2A> metody w celu uzyskania bazowej <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="eb476-371">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="eb476-372">Użyj tego `NetworkStream` do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="eb476-372">Use this `NetworkStream` to send and receive data.</span></span>  
  
 <span data-ttu-id="eb476-373">Jeśli był włączony protokół IPv6 i <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> metoda jest wywoływana, aby połączyć się z hostem, który jest rozpoznawany jako IPv6 i adresów IPv4, połączenia protokołu IPv6 adres będzie próba przed adresem IPv4.</span><span class="sxs-lookup"><span data-stu-id="eb476-373">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="eb476-374">Może to mieć wpływu opóźnienia czasu do nawiązania połączenia, jeśli host nie nasłuchuje na adres IPv6.</span><span class="sxs-lookup"><span data-stu-id="eb476-374">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-375">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-375">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="eb476-376">Po otrzymaniu tego kodu, możesz zapoznać się z [kod błędu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) dokumentacji, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-376">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-377">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-377">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb476-378">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb476-378">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb476-379"><paramref name="hostname" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-379">The <paramref name="hostname" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="eb476-380"><paramref name="port" /> Parametru nie przypada między <see cref="F:System.Net.IPEndPoint.MinPort" /> i <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-380">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="eb476-381">Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</span><span class="sxs-lookup"><span data-stu-id="eb476-381">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eb476-382"><see cref="T:System.Net.Sockets.TcpClient" /> wystąpienie jest zamykane.</span><span class="sxs-lookup"><span data-stu-id="eb476-382"><see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connected">
      <MemberSignature Language="C#" Value="public bool Connected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Connected" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Connected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Connected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Connected : bool" Usage="System.Net.Sockets.TcpClient.Connected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb476-383">Pobiera wartość wskazującą czy bazowego <see cref="T:System.Net.Sockets.Socket" /> dla <see cref="T:System.Net.Sockets.TcpClient" /> jest połączony z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="eb476-383">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span></span></summary>
        <value><span data-ttu-id="eb476-384"><see langword="true" /> Jeśli <see cref="P:System.Net.Sockets.TcpClient.Client" /> gniazdo zostało podłączone do zdalnego zasobu, począwszy od najbardziej aktualną operacji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-384"><see langword="true" /> if the <see cref="P:System.Net.Sockets.TcpClient.Client" /> socket was connected to a remote resource as of the most recent operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-385">`Connected` Właściwości pobiera stan połączenia <xref:System.Net.Sockets.TcpClient.Client%2A> gniazda, począwszy od ostatniej operacji We/Wy.</span><span class="sxs-lookup"><span data-stu-id="eb476-385">The `Connected` property gets the connection state of the <xref:System.Net.Sockets.TcpClient.Client%2A> socket as of the last I/O operation.</span></span> <span data-ttu-id="eb476-386">Gdy zwraca `false`, `Client` gniazda nigdy nie był połączony lub nie jest już połączony.</span><span class="sxs-lookup"><span data-stu-id="eb476-386">When it returns `false`, the `Client` socket was either never connected, or is no longer connected.</span></span>  
  
 <span data-ttu-id="eb476-387">Ponieważ `Connected` właściwość tylko odzwierciedla stan połączenia od najnowszych operację, należy podjąć próbę wysyłania i odbierania wiadomości, aby określić bieżący stan.</span><span class="sxs-lookup"><span data-stu-id="eb476-387">Because the `Connected` property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</span></span> <span data-ttu-id="eb476-388">Po wiadomości wysłać kończy się niepowodzeniem, ta właściwość nie zwraca już `true`.</span><span class="sxs-lookup"><span data-stu-id="eb476-388">After the message send fails, this property no longer returns `true`.</span></span> <span data-ttu-id="eb476-389">Należy pamiętać, że takie zachowanie jest celowe.</span><span class="sxs-lookup"><span data-stu-id="eb476-389">Note that this behavior is by design.</span></span> <span data-ttu-id="eb476-390">Stan połączenia nie można przetestować niezawodne, ponieważ w okresie między testu i wysyłania i odbierania, połączenie może zostać utracony.</span><span class="sxs-lookup"><span data-stu-id="eb476-390">You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</span></span> <span data-ttu-id="eb476-391">Twój kod założyć, że jest połączony gniazda, a następnie bezpiecznie dojścia nie powiodło się transmisji.</span><span class="sxs-lookup"><span data-stu-id="eb476-391">Your code should assume the socket is connected, and gracefully handle failed transmissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-392">Poniższy przykład kodu łączy do zdalnego punktu końcowego, a następnie sprawdza połączenie.</span><span class="sxs-lookup"><span data-stu-id="eb476-392">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="tcpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb476-393">Zwalnia zasoby zarządzane i niezarządzane używane przez <see cref="T:System.Net.Sockets.TcpClient" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-393">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="tcpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="eb476-394">Ustaw <see langword="true" /> aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="eb476-394">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="eb476-395">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Net.Sockets.TcpClient" /> i opcjonalnie zwalnia zasoby zarządzane.</span><span class="sxs-lookup"><span data-stu-id="eb476-395">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-396">Ta metoda jest wywoływana przez publiczną `Dispose()` metody i <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-396">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="eb476-397">`Dispose()` Wywołanie tej metody za pomocą `disposing` parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="eb476-397">`Dispose()` invokes this method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="eb476-398">`Finalize` Wywołanie tej metody za pomocą `disposing` równa `false`.</span><span class="sxs-lookup"><span data-stu-id="eb476-398">`Finalize` invokes this method with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="eb476-399">Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane że <xref:System.Net.Sockets.TcpClient> odwołania.</span><span class="sxs-lookup"><span data-stu-id="eb476-399">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.TcpClient> references.</span></span> <span data-ttu-id="eb476-400">Jest to realizowane za pomocą wywołania `Dispose()` metoda każdego obiektu, do którego istnieje odwołanie.</span><span class="sxs-lookup"><span data-stu-id="eb476-400">It does this by invoking the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-401">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-401">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb476-402">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb476-402">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="eb476-403">
            <see langword="Dispose" /> może być wywoływana wiele razy przez inne obiekty.</span><span class="sxs-lookup"><span data-stu-id="eb476-403">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="eb476-404">Podczas zastępowania <see langword="Dispose(Boolean)" />, nie należy odwoływać się do obiektów, które zostały wcześniej zlikwidowane wcześniejszym wywołaniem do <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-404">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="eb476-405">Aby uzyskać więcej informacji o sposobie wdrażania <see langword="Dispose(Boolean)" />, zobacz [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="eb476-405">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="eb476-406">Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) i [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="eb476-406">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndConnect(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndConnect : IAsyncResult -&gt; unit" Usage="tcpClient.EndConnect asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="eb476-407"><see cref="T:System.IAsyncResult" /> Obiektu zwróconego przez wywołanie <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-407">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span></span></param>
        <summary><span data-ttu-id="eb476-408">Kończy się próba połączenia asynchronicznego oczekujące.</span><span class="sxs-lookup"><span data-stu-id="eb476-408">Ends a pending asynchronous connection attempt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-409">Wykonaj to bloki metody do czasu tej operacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-409">This method blocks until the operation is complete.</span></span> <span data-ttu-id="eb476-410">Aby wykonać tę operację synchronicznie, należy użyć <xref:System.Net.Sockets.TcpClient.Connect%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-410">To perform this operation synchronously, use a <xref:System.Net.Sockets.TcpClient.Connect%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-411">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-411">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="eb476-412">Po otrzymaniu tego kodu można odwołać się do dokumentacji kodów błędów systemu Windows Sockets w wersji 2 interfejsu API w bibliotece MSDN pod [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library) szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-412">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-413">Poniższy przykład kodu kończy się próba połączenia asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="eb476-413">The following code example ends the asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb476-414"><paramref name="asyncResult" /> Parametr <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-414">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb476-415"><paramref name="asyncResult" /> Parametr nie został zwrócony przez wywołanie <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-415">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb476-416"><see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> Wcześniej wywołano metodę połączenia asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="eb476-416">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="eb476-417">Wystąpił błąd podczas próby uzyskania dostępu do <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-417">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eb476-418">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> zostało zamknięte.</span><span class="sxs-lookup"><span data-stu-id="eb476-418">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb476-419">Pobiera lub ustawia <see cref="T:System.Boolean" /> wartość określająca, czy <see cref="T:System.Net.Sockets.TcpClient" /> umożliwia korzystanie z portu tylko jednego klienta.</span><span class="sxs-lookup"><span data-stu-id="eb476-419">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span></span></summary>
        <value><span data-ttu-id="eb476-420"><see langword="true" /> Jeśli <see cref="T:System.Net.Sockets.TcpClient" /> umożliwia tylko jednego klienta do używania konkretnego portu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-420"><see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="eb476-421">Wartość domyślna to <see langword="true" /> dla systemu Windows Server 2003 i Windows XP z dodatkiem Service Pack 2 lub nowszą wersją, a <see langword="false" /> dla wszystkich innych wersji.</span><span class="sxs-lookup"><span data-stu-id="eb476-421">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-422">Domyślnie wielu klientów można użyć określonego portu; jednak tylko jeden z klientów mogą wykonywać operacje na ruch sieciowy, wysyłane do portu.</span><span class="sxs-lookup"><span data-stu-id="eb476-422">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="eb476-423">Możesz użyć `ExclusiveAddressUse` właściwości, aby uniemożliwić wielu klientów korzysta z określonego portu.</span><span class="sxs-lookup"><span data-stu-id="eb476-423">You can use the `ExclusiveAddressUse` property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="eb476-424">Przed podstawowej gniazda jest powiązany z portem klienta, należy ustawić tę właściwość.</span><span class="sxs-lookup"><span data-stu-id="eb476-424">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="eb476-425">Jeśli wywołasz <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, lub <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, port klienta jest powiązany jako efekt uboczny, metody i nie można następnie ustawić `ExclusiveAddressUse` właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb476-425">If you call <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, or <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, the client port is bound as a side effect of the method, and you cannot subsequently set the `ExclusiveAddressUse` property.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="eb476-426">Poniższy przykład kodu tworzy <xref:System.Net.Sockets.TcpClient> pobiera i ustawia wartość `ExclusiveAddressUse` właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb476-426">The following code example creates a <xref:System.Net.Sockets.TcpClient> and gets and sets the value of the `ExclusiveAddressUse` property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="eb476-427">Wystąpił błąd podczas próby uzyskania dostępu bazowego gniazda.</span><span class="sxs-lookup"><span data-stu-id="eb476-427">An error occurred when attempting to access the underlying socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eb476-428">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> zostało zamknięte.</span><span class="sxs-lookup"><span data-stu-id="eb476-428">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpClient ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tcpClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb476-429">Zwalnia zasoby używane przez <see cref="T:System.Net.Sockets.TcpClient" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="eb476-429">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-430">Ta metoda zastępuje <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="eb476-430">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="eb476-431">Kod aplikacji nie powinna wywołać tę metodę; obiekt `Finalize` metoda jest wywoływana automatycznie podczas wyrzucania elementów bezużytecznych, chyba że finalizacja przez moduł garbage collector została wyłączona przez wywołanie <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-431">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="eb476-432"><xref:System.Net.Sockets.TcpClient> Finalizatory klasy zamyka połączenie TCP i zwalnia wszystkie zarządzane zasoby skojarzone z `TcpClient`.</span><span class="sxs-lookup"><span data-stu-id="eb476-432">The <xref:System.Net.Sockets.TcpClient> class finalizer closes the TCP connection and releases all managed resources associated with the `TcpClient`.</span></span> <span data-ttu-id="eb476-433">Te zasoby obejmują podstawowe <xref:System.Net.Sockets.Socket> służące do połączenia z hostem zdalnym i <xref:System.Net.Sockets.NetworkStream> używany do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="eb476-433">These resources include the underlying <xref:System.Net.Sockets.Socket> used for connecting with the remote host, and the <xref:System.Net.Sockets.NetworkStream> used to send and receive data.</span></span> <span data-ttu-id="eb476-434">Finalizator zwolnić wszelkie niezarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="eb476-434">The finalizer does not release any unmanaged resources.</span></span>  
  
 <span data-ttu-id="eb476-435">Aby uzyskać więcej informacji, zobacz [Finalize metody i destruktory](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), i [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="eb476-435">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <related type="Article" href="~/docs/standard/garbage-collection/index.md"><span data-ttu-id="eb476-436">Odzyskiwanie pamięci</span><span class="sxs-lookup"><span data-stu-id="eb476-436">Garbage Collection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.NetworkStream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.NetworkStream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As NetworkStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::NetworkStream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.Net.Sockets.NetworkStream" Usage="tcpClient.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.NetworkStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb476-437">Zwraca <see cref="T:System.Net.Sockets.NetworkStream" /> używany do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="eb476-437">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span></span></summary>
        <returns><span data-ttu-id="eb476-438">Podstawowe <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-438">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="eb476-439">`GetStream` Metoda zwraca <xref:System.Net.Sockets.NetworkStream> służącego do wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="eb476-439">The `GetStream` method returns a <xref:System.Net.Sockets.NetworkStream> that you can use to send and receive data.</span></span> <span data-ttu-id="eb476-440">`NetworkStream` Klasa dziedziczy <xref:System.IO.Stream> klasy, która zawiera bogaty zestaw metod i właściwości, używany w celu umożliwienia komunikacji sieciowej.</span><span class="sxs-lookup"><span data-stu-id="eb476-440">The `NetworkStream` class inherits from the <xref:System.IO.Stream> class, which provides a rich collection of methods and properties used to facilitate network communications.</span></span>  
  
 <span data-ttu-id="eb476-441">Należy wywołać <xref:System.Net.Sockets.TcpClient.Connect%2A> metoda najpierw lub <xref:System.Net.Sockets.TcpClient.GetStream%2A> metoda zgłosi <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="eb476-441">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method first, or the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="eb476-442">Po uzyskaniu `NetworkStream`, wywołaj <xref:System.Net.Sockets.NetworkStream.Write%2A> metodę, aby wysyłać dane do hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="eb476-442">After you have obtained the `NetworkStream`, call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method to send data to the remote host.</span></span> <span data-ttu-id="eb476-443">Wywołaj <xref:System.Net.Sockets.NetworkStream.Read%2A> metodę, aby odbierać dane pochodzące z hosta zdalnego.</span><span class="sxs-lookup"><span data-stu-id="eb476-443">Call the <xref:System.Net.Sockets.NetworkStream.Read%2A> method to receive data arriving from the remote host.</span></span> <span data-ttu-id="eb476-444">Obie te metody blokuje, dopóki wykonać określonej operacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-444">Both of these methods block until the specified operation is performed.</span></span> <span data-ttu-id="eb476-445">Należy unikać blokowania na operacje odczytu, sprawdzając <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb476-445">You can avoid blocking on a read operation by checking the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property.</span></span> <span data-ttu-id="eb476-446">A `true` wartość oznacza, że data jest już dostępna z hosta zdalnego jest dostępny do odczytu.</span><span class="sxs-lookup"><span data-stu-id="eb476-446">A `true` value means that data has arrived from the remote host and is available for reading.</span></span> <span data-ttu-id="eb476-447">W tym przypadku <xref:System.Net.Sockets.NetworkStream.Read%2A> jest gwarantowane do wykonania od razu.</span><span class="sxs-lookup"><span data-stu-id="eb476-447">In this case, <xref:System.Net.Sockets.NetworkStream.Read%2A> is guaranteed to complete immediately.</span></span> <span data-ttu-id="eb476-448">Jeśli host zdalny został zamknięty swoje połączenie <xref:System.Net.Sockets.NetworkStream.Read%2A> natychmiast zwróci zero bajtów.</span><span class="sxs-lookup"><span data-stu-id="eb476-448">If the remote host has shutdown its connection, <xref:System.Net.Sockets.NetworkStream.Read%2A> will immediately return with zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-449">Należy zamknąć `NetworkStream` po osiągnięciu przez wysyłania i odbierania danych.</span><span class="sxs-lookup"><span data-stu-id="eb476-449">You must close the `NetworkStream` when you are through sending and receiving data.</span></span> <span data-ttu-id="eb476-450">Zamykanie <xref:System.Net.Sockets.TcpClient> nie spowoduje zwolnienia `NetworkStream`.</span><span class="sxs-lookup"><span data-stu-id="eb476-450">Closing <xref:System.Net.Sockets.TcpClient> does not release the `NetworkStream`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-451">Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> uzyskać kod błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-451">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="eb476-452">Po otrzymaniu tego kodu, możesz zapoznać się z [kod błędu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) dokumentacji, aby uzyskać szczegółowy opis błędu.</span><span class="sxs-lookup"><span data-stu-id="eb476-452">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb476-453">Ten element członkowski generuje informacje ze śledzenia pod warunkiem włączenia funkcji śledzenia sieci w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-453">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="eb476-454">Aby uzyskać więcej informacji, zobacz [Śledzenie sieci w programie .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="eb476-454">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-455">Poniższy przykład kodu wykorzystuje `GetStream` do uzyskania bazowej <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="eb476-455">The following code example uses `GetStream` to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="eb476-456">Po uzyskaniu <xref:System.Net.Sockets.NetworkStream>, wysyła i odbiera za pomocą jego <xref:System.Net.Sockets.NetworkStream.Write%2A> i <xref:System.Net.Sockets.NetworkStream.Read%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-456">After obtaining the <xref:System.Net.Sockets.NetworkStream>, it sends and receives using its <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#14)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#14)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb476-457"><see cref="T:System.Net.Sockets.TcpClient" /> Nie jest połączony z hostem zdalnym.</span><span class="sxs-lookup"><span data-stu-id="eb476-457">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="eb476-458"><see cref="T:System.Net.Sockets.TcpClient" /> Zostało zamknięte.</span><span class="sxs-lookup"><span data-stu-id="eb476-458">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LingerState">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.LingerOption LingerState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.LingerOption LingerState" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.LingerState" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerState As LingerOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::LingerOption ^ LingerState { System::Net::Sockets::LingerOption ^ get(); void set(System::Net::Sockets::LingerOption ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LingerState : System.Net.Sockets.LingerOption with get, set" Usage="System.Net.Sockets.TcpClient.LingerState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.LingerOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb476-459">Pobiera lub ustawia informacje o stanie linger — skojarzone gniazda.</span><span class="sxs-lookup"><span data-stu-id="eb476-459">Gets or sets information about the linger state of the associated socket.</span></span></summary>
        <value><span data-ttu-id="eb476-460">A <see cref="T:System.Net.Sockets.LingerOption" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-460">A <see cref="T:System.Net.Sockets.LingerOption" />.</span></span> <span data-ttu-id="eb476-461">Domyślnie lingering jest wyłączona.</span><span class="sxs-lookup"><span data-stu-id="eb476-461">By default, lingering is disabled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-462">`LingerState` Właściwość zmienia sposób <xref:System.Net.Sockets.Socket.Close%2A> zachowanie metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-462">The `LingerState` property changes the way <xref:System.Net.Sockets.Socket.Close%2A> method behaves.</span></span> <span data-ttu-id="eb476-463">Tej właściwości, gdy zestaw modyfikuje warunki, na jakich połączenia można zresetować za Winsock.</span><span class="sxs-lookup"><span data-stu-id="eb476-463">This property when set modifies the conditions under which the connection can be reset by Winsock.</span></span> <span data-ttu-id="eb476-464">Resetuje połączenie może nadal występują w oparciu o zachowanie protokołu IP.</span><span class="sxs-lookup"><span data-stu-id="eb476-464">Connection resets can still occur based on the IP protocol behavior.</span></span>  
  
 <span data-ttu-id="eb476-465">Ta właściwość określa długość czasu, przez jaki połączenie TCP pozostanie otwarte po wywołaniu <xref:System.Net.Sockets.TcpClient.Close%2A> kiedy dane pozostają do wysłania.</span><span class="sxs-lookup"><span data-stu-id="eb476-465">This property controls the length of time that the TCP connection will remain open after a call to <xref:System.Net.Sockets.TcpClient.Close%2A> when data remains to be sent.</span></span> <span data-ttu-id="eb476-466">Gdy wywołujesz <xref:System.Net.Sockets.NetworkStream.Write%2A> metody, dane są umieszczane w wychodzących buforu sieci.</span><span class="sxs-lookup"><span data-stu-id="eb476-466">When you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, data is placed in the outgoing network buffer.</span></span> <span data-ttu-id="eb476-467">Ta właściwość może służyć do zapewnienia, że te dane są wysyłane do hosta zdalnego przed <xref:System.Net.Sockets.TcpClient.Close%2A> metoda spada połączenia.</span><span class="sxs-lookup"><span data-stu-id="eb476-467">This property can be used to ensure that this data is sent to the remote host before the <xref:System.Net.Sockets.TcpClient.Close%2A> method drops the connection.</span></span>  
  
 <span data-ttu-id="eb476-468">Aby włączyć lingering, Utwórz <xref:System.Net.Sockets.LingerOption> wystąpienia, zawierających odpowiednie wartości, a następnie ustaw `LingerState` właściwości dla tego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="eb476-468">To enable lingering, create a <xref:System.Net.Sockets.LingerOption> instance containing the desired values, and set the `LingerState` property to this instance.</span></span>  
  
 <span data-ttu-id="eb476-469">W poniższej tabeli opisano zachowanie <xref:System.Net.Sockets.TcpClient.Close%2A> metodę dopuszczalne <xref:System.Net.Sockets.LingerOption.Enabled%2A> właściwości i <xref:System.Net.Sockets.LingerOption.LingerTime%2A> właściwości przechowywane w `LingerState` właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb476-469">The following table describes the behavior of the <xref:System.Net.Sockets.TcpClient.Close%2A> method for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the `LingerState` property.</span></span>  
  
|<span data-ttu-id="eb476-470">LingerState.Enabled</span><span class="sxs-lookup"><span data-stu-id="eb476-470">LingerState.Enabled</span></span>|<span data-ttu-id="eb476-471">LingerState.LingerTime</span><span class="sxs-lookup"><span data-stu-id="eb476-471">LingerState.LingerTime</span></span>|<span data-ttu-id="eb476-472">Zachowanie</span><span class="sxs-lookup"><span data-stu-id="eb476-472">Behavior</span></span>|  
|-------------------------|----------------------------|--------------|  
|<span data-ttu-id="eb476-473">`false` (wyłączone), wartość domyślna</span><span class="sxs-lookup"><span data-stu-id="eb476-473">`false` (disabled), the default value</span></span>|<span data-ttu-id="eb476-474">Nie jest to konieczne, limit czasu (domyślnie).</span><span class="sxs-lookup"><span data-stu-id="eb476-474">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="eb476-475">Próbuje wysłać oczekujących danych do momentu wygaśnięcia ważności domyślny limit czasu protokołu IP.</span><span class="sxs-lookup"><span data-stu-id="eb476-475">Attempts to send pending data until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="eb476-476">`true` (włączone)</span><span class="sxs-lookup"><span data-stu-id="eb476-476">`true` (enabled)</span></span>|<span data-ttu-id="eb476-477">Wartość różną od zera limitu czasu</span><span class="sxs-lookup"><span data-stu-id="eb476-477">A nonzero time-out</span></span>|<span data-ttu-id="eb476-478">Próbuje wysłać oczekujących danych, aż określony limit czasu upłynie, a jeśli próba nie powiedzie się, następnie Winsock resetuje połączenie.</span><span class="sxs-lookup"><span data-stu-id="eb476-478">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="eb476-479">`true` (włączone)</span><span class="sxs-lookup"><span data-stu-id="eb476-479">`true` (enabled)</span></span>|<span data-ttu-id="eb476-480">Zero przekroczenie limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="eb476-480">A zero timeout.</span></span>|<span data-ttu-id="eb476-481">Odrzuca wszystkie oczekujące dane i usługi Winsock resetuje połączenie.</span><span class="sxs-lookup"><span data-stu-id="eb476-481">Discards any pending data and Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="eb476-482">Stos IP oblicza domyślny okres limitu czasu protokołu IP do użycia na podstawie czasu komunikacji dwustronnej połączenia.</span><span class="sxs-lookup"><span data-stu-id="eb476-482">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="eb476-483">W większości przypadków przekroczenia limitu czasu, obliczana przez stos jest większe znaczenie niż jeden zdefiniowany przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="eb476-483">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="eb476-484">Jest to domyślne zachowanie dla gniazda podczas `LingerState` nie ustawiono właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb476-484">This is the default behavior for a socket when the `LingerState` property is not set.</span></span>  
  
 <span data-ttu-id="eb476-485">Gdy <xref:System.Net.Sockets.LingerOption.LingerTime%2A> właściwości przechowywane w `LingerState` właściwość ma wartość większą niż domyślny limit czasu protokołu IP, nadal zastosuje i przesłonić domyślny limit czasu protokołu IP.</span><span class="sxs-lookup"><span data-stu-id="eb476-485">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the `LingerState` property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-486">Poniższy kod przykład ustawia i pobiera linger gniazdami czasu.</span><span class="sxs-lookup"><span data-stu-id="eb476-486">The following code example sets and gets the sockets linger time.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#12)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#12)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.LingerOption" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NoDelay">
      <MemberSignature Language="C#" Value="public bool NoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoDelay" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.NoDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property NoDelay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoDelay : bool with get, set" Usage="System.Net.Sockets.TcpClient.NoDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb476-487">Pobiera lub ustawia wartość, która wyłącza opóźnienie podczas wysyłania lub odbierania bufory nie są pełne.</span><span class="sxs-lookup"><span data-stu-id="eb476-487">Gets or sets a value that disables a delay when send or receive buffers are not full.</span></span></summary>
        <value><span data-ttu-id="eb476-488"><see langword="true" /> Jeśli opóźnienie jest wyłączony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-488"><see langword="true" /> if the delay is disabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="eb476-489">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-489">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-490">Gdy `NoDelay` jest `false`, <xref:System.Net.Sockets.TcpClient> nie wysyła pakiet za pośrednictwem sieci do momentu zebrania znaczną ilość danych wychodzących.</span><span class="sxs-lookup"><span data-stu-id="eb476-490">When `NoDelay` is `false`, a <xref:System.Net.Sockets.TcpClient> does not send a packet over the network until it has collected a significant amount of outgoing data.</span></span> <span data-ttu-id="eb476-491">Ze względu na ilość obciążenie w segmencie TCP wysyłania małe ilości danych jest nieefektywne.</span><span class="sxs-lookup"><span data-stu-id="eb476-491">Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</span></span> <span data-ttu-id="eb476-492">Jednak sytuacje istnieją, których należy wysłać bardzo małe ilości danych lub oczekuje się natychmiastowej odpowiedzi od poszczególnych pakietów, które wysyłasz.</span><span class="sxs-lookup"><span data-stu-id="eb476-492">However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</span></span> <span data-ttu-id="eb476-493">Decyzji porównać względnego wydajność sieci i wymagania aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-493">Your decision should weigh the relative importance of network efficiency versus application requirements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-494">Poniższy przykład kodu wyłącza opóźnienie.</span><span class="sxs-lookup"><span data-stu-id="eb476-494">The following code example disables the delay.</span></span> <span data-ttu-id="eb476-495">Następnie sprawdza wartość `NoDelay` Aby sprawdzić, czy właściwość została ustawiona pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="eb476-495">It then checks the value of `NoDelay` to verify that the property was successfully set.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb476-496">Pobiera lub ustawia rozmiar buforu odbierania.</span><span class="sxs-lookup"><span data-stu-id="eb476-496">Gets or sets the size of the receive buffer.</span></span></summary>
        <value><span data-ttu-id="eb476-497">Rozmiar buforu, w bajtach.</span><span class="sxs-lookup"><span data-stu-id="eb476-497">The size of the receive buffer, in bytes.</span></span> <span data-ttu-id="eb476-498">Wartość domyślna to 8192 bajtów.</span><span class="sxs-lookup"><span data-stu-id="eb476-498">The default value is 8192 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-499">`ReceiveBufferSize` Właściwości pobiera lub ustawia liczbę bajtów, które są oczekiwane do przechowywania w buforze receive, dla każdej operacji odczytu.</span><span class="sxs-lookup"><span data-stu-id="eb476-499">The `ReceiveBufferSize` property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</span></span> <span data-ttu-id="eb476-500">Ta właściwość obsługuje faktycznie miejsca w buforze sieci, przydzielone do odbierania przychodzących danych.</span><span class="sxs-lookup"><span data-stu-id="eb476-500">This property actually manipulates the network buffer space allocated for receiving incoming data.</span></span>  
  
 <span data-ttu-id="eb476-501">Usługi buforu sieci powinien wynosić przynajmniej tak duże, jako bufor Twojej aplikacji, aby upewnić się, że żądane dane będą dostępne po wywołaniu <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-501">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="eb476-502">Użyj <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> właściwości do ustawienia tej wielkości.</span><span class="sxs-lookup"><span data-stu-id="eb476-502">Use the <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="eb476-503">Jeśli aplikacja będzie otrzymywał zbiorcze danych, należy przekazać `Read` metoda buforu bardzo dużych aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-503">If your application will be receiving bulk data, you should pass the `Read` method a very large application buffer.</span></span>  
  
 <span data-ttu-id="eb476-504">Jeśli bufor sieci jest mniejsza niż ilość danych, możesz zażądać `Read` metody, nie będzie można pobrać żądanej ilości danych w ramach jednej operacji odczytu.</span><span class="sxs-lookup"><span data-stu-id="eb476-504">If the network buffer is smaller than the amount of data you request in the `Read` method, you will not be able to retrieve the desired amount of data in one read operation.</span></span> <span data-ttu-id="eb476-505">Wiąże się z tym koszty związane z dodatkowych połączeń do `Read` metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-505">This incurs the overhead of additional calls to the `Read` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-506">Poniższy przykład kodu ustawia i pobiera rozmiar buforów odbioru.</span><span class="sxs-lookup"><span data-stu-id="eb476-506">The following code example sets and gets the receive buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="eb476-507">Wystąpił błąd podczas ustawiania rozmiaru buforu.</span><span class="sxs-lookup"><span data-stu-id="eb476-507">An error occurred when setting the buffer size.</span></span>  
  
<span data-ttu-id="eb476-508">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb476-508">-or-</span></span> 
<span data-ttu-id="eb476-509">W aplikacjach platformy .NET Compact Framework nie można ustawić tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb476-509">In .NET Compact Framework applications, you cannot set this property.</span></span> <span data-ttu-id="eb476-510">Obejście tego problemu zobacz Uwaga dotycząca platformy w uwagi.</span><span class="sxs-lookup"><span data-stu-id="eb476-510">For a workaround, see the Platform Note in Remarks.</span></span></exception>
        <altmember cref="P:System.Net.Sockets.TcpClient.SendBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public int ReceiveTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb476-511">Pobiera lub ustawia czas <see cref="T:System.Net.Sockets.TcpClient" /> będzie czekać na odbieranie danych, gdy jest inicjowana operacja odczytu.</span><span class="sxs-lookup"><span data-stu-id="eb476-511">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span></span></summary>
        <value><span data-ttu-id="eb476-512">Wartość limitu czasu połączenia w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="eb476-512">The time-out value of the connection in milliseconds.</span></span> <span data-ttu-id="eb476-513">Wartość domyślna to 0.</span><span class="sxs-lookup"><span data-stu-id="eb476-513">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-514">`ReceiveTimeout` Właściwość określa ilość czasu, przez który <xref:System.Net.Sockets.NetworkStream.Read%2A> metoda spowoduje zablokowanie, dopóki nie jest w stanie odbierać dane.</span><span class="sxs-lookup"><span data-stu-id="eb476-514">The `ReceiveTimeout` property determines the amount of time that the <xref:System.Net.Sockets.NetworkStream.Read%2A> method will block until it is able to receive data.</span></span> <span data-ttu-id="eb476-515">Ten czas jest mierzony w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="eb476-515">This time is measured in milliseconds.</span></span> <span data-ttu-id="eb476-516">Jeśli limit czasu upłynie, zanim `Read` pomyślnym zakończeniu <xref:System.Net.Sockets.TcpClient> zgłasza <xref:System.IO.IOException>.</span><span class="sxs-lookup"><span data-stu-id="eb476-516">If the time-out expires before `Read` successfully completes, <xref:System.Net.Sockets.TcpClient> throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="eb476-517">Domyślnie jest nie limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="eb476-517">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-518">Poniższy przykład kodu ustawia i pobiera limit czasu odbioru.</span><span class="sxs-lookup"><span data-stu-id="eb476-518">The following code example sets and gets the receive time out.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.SendTimeout" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb476-519">Pobiera lub ustawia rozmiar buforu wysyłania.</span><span class="sxs-lookup"><span data-stu-id="eb476-519">Gets or sets the size of the send buffer.</span></span></summary>
        <value><span data-ttu-id="eb476-520">Rozmiar buforu wysyłania, w bajtach.</span><span class="sxs-lookup"><span data-stu-id="eb476-520">The size of the send buffer, in bytes.</span></span> <span data-ttu-id="eb476-521">Wartość domyślna to 8192 bajtów.</span><span class="sxs-lookup"><span data-stu-id="eb476-521">The default value is 8192 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-522">`SendBufferSize` Właściwości pobiera lub ustawia liczbę bajtów, które są oczekiwane wysyłania w każdym wywołaniu <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-522">The `SendBufferSize` property gets or sets the number of bytes that you are expecting to send in each call to the <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="eb476-523">Ta właściwość obsługuje faktycznie sieci buforu miejsce przydzielone dla operacji wysyłania.</span><span class="sxs-lookup"><span data-stu-id="eb476-523">This property actually manipulates the network buffer space allocated for send operation.</span></span>  
  
 <span data-ttu-id="eb476-524">Bufor Twojej sieci powinna być przynajmniej tak duże, jako bufor Twojej aplikacji, aby upewnić się, że żądane dane są przechowywane i wysyłane w ramach jednej operacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-524">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</span></span> <span data-ttu-id="eb476-525">Użyj <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> właściwości do ustawienia tej wielkości.</span><span class="sxs-lookup"><span data-stu-id="eb476-525">Use the <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="eb476-526">Jeśli aplikacja będzie wysyłać zbiorcze danych, należy przekazać `Write` metoda buforu bardzo dużych aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-526">If your application will be sending bulk data, you should pass the `Write` method a very large application buffer.</span></span>  
  
 <span data-ttu-id="eb476-527">Jeśli bufor sieci jest mniejsza niż ilość danych, musisz podać `Write` metody kilka sieci wysyłania operacje będą wykonywane dla każdego wywołania, można dokonać `Write` metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-527">If the network buffer is smaller than the amount of data you provide the `Write` method, several network send operations will be performed for every call you make to the `Write` method.</span></span> <span data-ttu-id="eb476-528">Większa przepustowość danych można osiągnąć przez zapewnienie, że bufor Twojej sieci jest przynajmniej tak duże jak buforu Twojej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="eb476-528">You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-529">Poniższy przykład kodu ustawia i pobiera rozmiar buforu wysyłania.</span><span class="sxs-lookup"><span data-stu-id="eb476-529">The following code example sets and gets the send buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public int SendTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SendTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb476-530">Pobiera lub ustawia czas <see cref="T:System.Net.Sockets.TcpClient" /> będzie czekać na zakończenie pomyślnie operacji wysyłania.</span><span class="sxs-lookup"><span data-stu-id="eb476-530">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span></span></summary>
        <value><span data-ttu-id="eb476-531">Wyślij wartość limitu czasu, w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="eb476-531">The send time-out value, in milliseconds.</span></span> <span data-ttu-id="eb476-532">Wartość domyślna to 0.</span><span class="sxs-lookup"><span data-stu-id="eb476-532">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb476-533">`SendTimeout` Właściwość określa ilość czasu, przez który <xref:System.Net.Sockets.Socket.Send%2A> metoda spowoduje zablokowanie, dopóki nie jest w stanie zwrócić pomyślnie.</span><span class="sxs-lookup"><span data-stu-id="eb476-533">The `SendTimeout` property determines the amount of time that the <xref:System.Net.Sockets.Socket.Send%2A> method will block until it is able to return successfully.</span></span> <span data-ttu-id="eb476-534">Ten czas jest mierzony w milisekundach.</span><span class="sxs-lookup"><span data-stu-id="eb476-534">This time is measured in milliseconds.</span></span>  
  
 <span data-ttu-id="eb476-535">Po wywołaniu metody <xref:System.Net.Sockets.NetworkStream.Write%2A> metodzie bazowej <xref:System.Net.Sockets.Socket> zwraca liczbę bajtów, które faktycznie przesyłane do hosta.</span><span class="sxs-lookup"><span data-stu-id="eb476-535">After you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, the underlying <xref:System.Net.Sockets.Socket> returns the number of bytes actually sent to the host.</span></span> <span data-ttu-id="eb476-536">`SendTimeout` Właściwość określa ilość czasu <xref:System.Net.Sockets.TcpClient> będzie czekać przed zwróceniem odbieranie liczbę bajtów.</span><span class="sxs-lookup"><span data-stu-id="eb476-536">The `SendTimeout` property determines the amount of time a <xref:System.Net.Sockets.TcpClient> will wait before receiving the number of bytes returned.</span></span> <span data-ttu-id="eb476-537">Jeśli limit czasu upłynie, zanim `Send` metoda pomyślnym zakończeniu `TcpClient` zgłosi <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="eb476-537">If the time-out expires before the `Send` method successfully completes, `TcpClient` will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="eb476-538">Domyślnie jest nie limitu czasu.</span><span class="sxs-lookup"><span data-stu-id="eb476-538">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb476-539">Poniższy przykład kodu ustawia i pobiera `SendTimeout` wartość.</span><span class="sxs-lookup"><span data-stu-id="eb476-539">The following code example sets and gets the `SendTimeout` value.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb476-540">Zwalnia wszelkie zasoby używane przez <see cref="T:System.Net.Sockets.TcpClient" />.</span><span class="sxs-lookup"><span data-stu-id="eb476-540">Releases all resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="eb476-541">Wywołanie metody IDisposable.Dispose, po zakończeniu przy użyciu <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="eb476-541">Call IDisposable.Dispose when you are finished using the <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="eb476-542">Metoda metody IDisposable.Dispose pozostawia <xref:System.Net.Sockets.TcpClient> w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="eb476-542">The IDisposable.Dispose method leaves the <xref:System.Net.Sockets.TcpClient> in an unusable state.</span></span> <span data-ttu-id="eb476-543">Po wywołaniu metody IDisposable.Dispose, trzeba zwolnić wszystkie odwołania do <xref:System.Net.Sockets.TcpClient> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć, <xref:System.Net.Sockets.TcpClient> zajmowaną przez wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="eb476-543">After calling IDisposable.Dispose, you must release all references to the <xref:System.Net.Sockets.TcpClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.TcpClient> was occupying.</span></span> <span data-ttu-id="eb476-544">Aby uzyskać więcej informacji, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) i [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="eb476-544">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>

> [!NOTE] 
> <span data-ttu-id="eb476-545">Zawsze wywołuj metody IDisposable.Dispose, przed zwolnieniem swoje ostatnie odwołanie do <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="eb476-545">Always call IDisposable.Dispose before you release your last reference to the <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="eb476-546">W przeciwnym razie zasobów jest przy użyciu nie zostanie zwolniona, dopóki moduł odśmiecania pamięci wywołuje <xref:System.Net.Sockets.TcpClient> obiektu **Finalize** metody.</span><span class="sxs-lookup"><span data-stu-id="eb476-546">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.TcpClient> object's **Finalize** method.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>