<Type Name="NetworkStream" FullName="System.Net.Sockets.NetworkStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="35f9fe1f6b977775d6d368240ca8571813c347c7" />
    <Meta Name="ms.sourcegitcommit" Value="6f3d3181d9ca22a1ab46a7f61f3ee152f2b844ea" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/27/2018" />
    <Meta Name="ms.locfileid" Value="50178266" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NetworkStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetworkStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.NetworkStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NetworkStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetworkStream : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type NetworkStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary>Zasadniczy strumień danych zapewnia dostęp do sieci.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream> Klasa dostarcza metody do wysyłania i odbierania danych za pośrednictwem <xref:System.Net.Sockets.SocketType.Stream> gniazda w trybie blokowania. Aby uzyskać więcej informacji na temat blokowania i nieblokujących <xref:System.Net.Sockets.Socket>s, zobacz [używanie asynchronicznego gniazda klienta](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md). Możesz użyć <xref:System.Net.Sockets.NetworkStream> klasy do obu transferu danych synchroniczne i asynchroniczne. Aby uzyskać więcej informacji na temat Komunikacja synchroniczna i asynchroniczna zobacz [Sockets](~/docs/framework/network-programming/sockets.md).  
  
 Aby utworzyć <xref:System.Net.Sockets.NetworkStream>, musisz podać połączonej <xref:System.Net.Sockets.Socket>. Można również określić, jakie <xref:System.IO.FileAccess> uprawnienie <xref:System.Net.Sockets.NetworkStream> ma za pośrednictwem dostarczonego <xref:System.Net.Sockets.Socket>. Domyślnie zamknięcie <xref:System.Net.Sockets.NetworkStream> nie zamyka podane <xref:System.Net.Sockets.Socket>. Jeśli chcesz <xref:System.Net.Sockets.NetworkStream> mieć uprawnienie do zamknięcia podane <xref:System.Net.Sockets.Socket>, należy określić `true` dla wartości `ownsSocket` parametru.  
  
 Użyj <xref:System.Net.Sockets.NetworkStream.Write%2A> i <xref:System.Net.Sockets.NetworkStream.Read%2A> metody dla prostych pojedynczego wątku synchronicznych operacji We/Wy blokowania. Do przetwarzania z operacji We/Wy przy użyciu oddzielnych wątkach, należy rozważyć użycie <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> i <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> metod, lub <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> i <xref:System.Net.Sockets.NetworkStream.EndRead%2A> metod komunikacji.  
  
 <xref:System.Net.Sockets.NetworkStream> Nie obsługuje dostępu losowego do strumienia danych sieciowych. Wartość <xref:System.Net.Sockets.NetworkStream.CanSeek%2A> właściwość, która wskazuje, czy strumień obsługuje wyszukiwanie, jest zawsze `false`; odczytywania <xref:System.Net.Sockets.NetworkStream.Position%2A> właściwości odczytu <xref:System.Net.Sockets.NetworkStream.Length%2A> właściwość lub wywołanie <xref:System.Net.Sockets.NetworkStream.Seek%2A> metoda zgłosi <xref:System.NotSupportedException>.  
  
 Odczyt i zapis, operacje mogą być wykonywane jednocześnie w wystąpieniu <xref:System.Net.Sockets.NetworkStream> klasy bez konieczności synchronizacji. Tak długo, jak jest jeden wątek unikatowy dla operacji zapisu i jeden wątek unikatowy dla operacji odczytu, nie będzie żadnych zakłóceń między pomiędzy odczytu i zapisu wątków i synchronizacja nie jest wymagana.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób tworzenia <xref:System.Net.Sockets.NetworkStream> z połączonej <xref:System.Net.Sockets.SocketType.Stream> <xref:System.Net.Sockets.Socket> i wykonywać podstawowe synchroniczne blokowanie operacji We/Wy.  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Net.Sockets.NetworkStream" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream socket" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
      </Parameters>
      <Docs>
        <param name="socket">
          <see cref="T:System.Net.Sockets.Socket" /> , <see cref="T:System.Net.Sockets.NetworkStream" /> Będzie używać do wysyłania i odbierania danych.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Net.Sockets.NetworkStream" /> klasy dla określonego <see cref="T:System.Net.Sockets.Socket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream> Jest tworzony z dostępem odczytu/zapisu na określonym <xref:System.Net.Sockets.Socket>. <xref:System.Net.Sockets.NetworkStream> Nie jest właścicielem bazowej <xref:System.Net.Sockets.Socket>, więc wywoływania <xref:System.Net.Sockets.NetworkStream.Close%2A> metody nie zamyka <xref:System.Net.Sockets.Socket>.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia <xref:System.Net.Sockets.NetworkStream> z <xref:System.Net.Sockets.Socket>.  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="socket" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="socket" /> Parametr nie jest połączony.  
  
—lub— 
<see cref="P:System.Net.Sockets.Socket.SocketType" /> właściwość <paramref name="socket" /> parametr nie jest <see cref="F:System.Net.Sockets.SocketType.Stream" />.  
  
—lub— 
<paramref name="socket" /> parametr jest w stanie nieblokujących.</exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
        <related type="Article" href="~/docs/framework/network-programming/using-streams-on-the-network.md">Stosowanie strumieni w sieci</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, bool ownsSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, bool ownsSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, bool ownsSocket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * bool -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, ownsSocket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="ownsSocket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket">
          <see cref="T:System.Net.Sockets.Socket" /> , <see cref="T:System.Net.Sockets.NetworkStream" /> Będzie używać do wysyłania i odbierania danych.</param>
        <param name="ownsSocket">Ustaw <see langword="true" /> z informacją, że <see cref="T:System.Net.Sockets.NetworkStream" /> będzie przejęcie na własność <see cref="T:System.Net.Sockets.Socket" />; w przeciwnym razie <see langword="false" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.NetworkStream" /> klasy dla określonego <see cref="T:System.Net.Sockets.Socket" /> z określonym <see cref="T:System.Net.Sockets.Socket" /> własności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream> Jest tworzony z dostępem odczytu/zapisu na określonym <xref:System.Net.Sockets.Socket>. Jeśli wartość `ownsSocket` parametr jest `true`, <xref:System.Net.Sockets.NetworkStream> przejmuje na własność podstawowych <xref:System.Net.Sockets.Socket>i wywoływać metodę <xref:System.Net.Sockets.NetworkStream.Close%2A> metoda zamyka, podstawowe <xref:System.Net.Sockets.Socket>.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Net.Sockets.NetworkStream> za pomocą własności <xref:System.Net.Sockets.Socket>.  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="socket" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="socket" /> Parametr nie jest połączony.  
  
—lub— 
wartość <see cref="P:System.Net.Sockets.Socket.SocketType" /> właściwość <paramref name="socket" /> parametr nie jest <see cref="F:System.Net.Sockets.SocketType.Stream" />.  
  
—lub— 
<paramref name="socket" /> parametr jest w stanie nieblokujących.</exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * System.IO.FileAccess -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="socket">
          <see cref="T:System.Net.Sockets.Socket" /> , <see cref="T:System.Net.Sockets.NetworkStream" /> Będzie używać do wysyłania i odbierania danych.</param>
        <param name="access">Bitowa kombinacja <see cref="T:System.IO.FileAccess" /> wartości, które określają typ dostępu do <see cref="T:System.Net.Sockets.NetworkStream" /> za pośrednictwem dostarczonego <see cref="T:System.Net.Sockets.Socket" />.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Net.Sockets.NetworkStream" /> klasy dla określonego <see cref="T:System.Net.Sockets.Socket" /> z prawami dostępu określony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream> Jest tworzona przy użyciu określonego dostępu do określonego <xref:System.Net.Sockets.Socket>. Za pomocą tego konstruktora <xref:System.Net.Sockets.NetworkStream> nie jest właścicielem bazowej <xref:System.Net.Sockets.Socket>, więc wywoływania <xref:System.Net.Sockets.NetworkStream.Close%2A> metody nie zamyka bazowego <xref:System.Net.Sockets.Socket>.  
  
 `access` Zestawów parametrów <xref:System.Net.Sockets.NetworkStream.CanRead%2A> i <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> właściwości <xref:System.Net.Sockets.NetworkStream>. Jeśli określisz <xref:System.IO.FileAccess.Write>, a następnie <xref:System.Net.Sockets.NetworkStream> umożliwia wywoływanie <xref:System.Net.Sockets.NetworkStream.Write%2A> metody. Jeśli określisz <xref:System.IO.FileAccess.Read>, a następnie <xref:System.Net.Sockets.NetworkStream> umożliwia wywoływanie <xref:System.Net.Sockets.NetworkStream.Read%2A> metody. Jeśli określisz <xref:System.IO.FileAccess.ReadWrite>, oba wywołania metody są dozwolone.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Net.Sockets.NetworkStream> z możliwością odczytu i zapisu do <xref:System.Net.Sockets.Socket>.  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]
 [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="socket" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="socket" /> Parametr nie jest połączony.  
  
—lub— 
<see cref="P:System.Net.Sockets.Socket.SocketType" /> właściwość <paramref name="socket" /> parametr nie jest <see cref="F:System.Net.Sockets.SocketType.Stream" />.  
  
—lub— 
<paramref name="socket" /> parametr jest w stanie nieblokujących.</exception>
        <altmember cref="T:System.IO.FileAccess" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access, bool ownsSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, valuetype System.IO.FileAccess access, bool ownsSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, System::IO::FileAccess access, bool ownsSocket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * System.IO.FileAccess * bool -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, access, ownsSocket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="ownsSocket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket">
          <see cref="T:System.Net.Sockets.Socket" /> , <see cref="T:System.Net.Sockets.NetworkStream" /> Będzie używać do wysyłania i odbierania danych.</param>
        <param name="access">Bitowa kombinacja <see cref="T:System.IO.FileAccess" /> wartości, które określa rodzaj dostępu do <see cref="T:System.Net.Sockets.NetworkStream" /> za pośrednictwem dostarczonego <see cref="T:System.Net.Sockets.Socket" />.</param>
        <param name="ownsSocket">Ustaw <see langword="true" /> z informacją, że <see cref="T:System.Net.Sockets.NetworkStream" /> będzie przejęcie na własność <see cref="T:System.Net.Sockets.Socket" />; w przeciwnym razie <see langword="false" />.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Net.Sockets.NetworkStream" /> klasy dla określonego <see cref="T:System.Net.Sockets.Socket" /> prawa dostępu określonego i określonego <see cref="T:System.Net.Sockets.Socket" /> własności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream> Jest tworzony z dostępem odczytu/zapisu na określonym <xref:System.Net.Sockets.Socket>. Jeśli wartość `ownsSocket` parametr jest `true`, <xref:System.Net.Sockets.NetworkStream> przejmuje na własność podstawowych <xref:System.Net.Sockets.Socket>i wywoływać metodę <xref:System.Net.Sockets.NetworkStream.Close%2A> metoda zamyka, podstawowe <xref:System.Net.Sockets.Socket>.  
  
 `access` Zestawów parametrów <xref:System.Net.Sockets.NetworkStream.CanRead%2A> i <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> właściwości <xref:System.Net.Sockets.NetworkStream>. Jeśli określisz <xref:System.IO.FileAccess.Write>, a następnie <xref:System.Net.Sockets.NetworkStream> umożliwia wywoływanie <xref:System.Net.Sockets.NetworkStream.Write%2A> metody. Jeśli określisz <xref:System.IO.FileAccess.Read>, a następnie <xref:System.Net.Sockets.NetworkStream> umożliwia wywoływanie <xref:System.Net.Sockets.NetworkStream.Read%2A> metody. Jeśli określisz <xref:System.IO.FileAccess.ReadWrite>, oba wywołania metody są dozwolone.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Net.Sockets.NetworkStream> z możliwością odczytu i zapisu do <xref:System.Net.Sockets.Socket>. Własność <xref:System.Net.Sockets.Socket> znajduje się w tym <xref:System.Net.Sockets.NetworkStream> , określając `true` dla `ownsSocket` parametru.  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]
 [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="socket" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="socket" /> Parametr nie jest połączony.  
  
—lub— 
<see cref="P:System.Net.Sockets.Socket.SocketType" /> właściwość <paramref name="socket" /> parametr nie jest <see cref="F:System.Net.Sockets.SocketType.Stream" />.  
  
—lub— 
<paramref name="socket" /> parametr jest w stanie nieblokujących.</exception>
        <altmember cref="T:System.IO.FileAccess" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, size As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="networkStream.BeginRead (buffer, offset, size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica typu <see cref="T:System.Byte" /> oznacza to lokalizacja w pamięci, aby zachować dane odczytane ze <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
        <param name="offset">Lokalizacja w <c>buforu</c> umożliwiającą przechowywanie danych.</param>
        <param name="size">Liczba bajtów do odczytu z <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> Delegowanie, to znaczy wykonana przy <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> kończy.</param>
        <param name="state">Obiekt, który zawiera wszelkie dodatkowe dane zdefiniowane przez użytkownika.</param>
        <summary>Rozpoczyna odczyt asynchroniczny z <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Reprezentujący wywołania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> Metoda uruchamia asynchronicznego odczytywania danych z przychodzącego buforów sieciowych. Wywoływanie <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> metody daje możliwość odbierania danych w oddzielnych wykonanie wątku.  
  
 Należy utworzyć metody wywołania zwrotnego, która implementuje <xref:System.AsyncCallback> delegować, a następnie przekaż jego nazwę na <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> metody. W bardzo minimalne swoje `state` parametr musi zawierać <xref:System.Net.Sockets.NetworkStream>. Ponieważ można uzyskać danych odebranych w ramach swojej metody wywołania zwrotnego, należy utworzyć małych klasę lub strukturę do przechowywania buforu odczytu oraz inne przydatne informacje. Przekaż wystąpienie struktury lub klasy, aby <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> metody za pomocą `state` parametru.  
  
 Należy wywołać metodę wywołania zwrotnego <xref:System.Net.Sockets.NetworkStream.EndRead%2A> metody. Gdy Twoja aplikacja wywołuje <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, system będzie czekać do momentu odebrania danych lub wystąpi błąd, a następnie system użyje oddzielnego wątku na wykonanie metodą określonego wywołania zwrotnego i bloków na <xref:System.Net.Sockets.NetworkStream.EndRead%2A> aż do podanych <xref:System.Net.Sockets.NetworkStream> odczytuje danych ani nie zgłasza wyjątku. Jeśli chcesz, oryginalnym wątku do blokowania po wywołaniu metody <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> metody, użyj <xref:System.Threading.WaitHandle.WaitOne%2A> metody. Wywołaj <xref:System.Threading.EventWaitHandle.Set%2A> metody wywołania zwrotnego, jeśli chcesz, oryginalnym wątku w celu kontynuowania wykonywania. Aby uzyskać dodatkowe informacje na temat pisania metody wywołania zwrotnego, zobacz [Marshaling delegata jako metoda wywołania zwrotnego](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).  
  
 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> Metoda odczytuje tak dużej ilości danych, jest dostępna — maksymalnie liczbę bajtów określoną przez `size` parametru.  
  
> [!NOTE]
>  Jeśli zostanie wyświetlony <xref:System.IO.IOException>, sprawdź <xref:System.Exception.InnerException%2A> właściwości w celu określenia, jeśli zostało spowodowane przez <xref:System.Net.Sockets.SocketException>. Jeśli tak, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A> właściwość, aby uzyskać kod błędu i odnoszą się do [kod błędu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) dokumentacji, aby uzyskać szczegółowy opis błędu.  
  
 Odczyt i zapis, operacje mogą być wykonywane jednocześnie w wystąpieniu <xref:System.Net.Sockets.NetworkStream> klasy bez konieczności synchronizacji. Tak długo, jak jest jeden wątek unikatowy dla operacji zapisu i jeden wątek unikatowy dla operacji odczytu, nie będzie żadnych zakłóceń między pomiędzy odczytu i zapisu wątków i synchronizacja nie jest wymagana.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> asynchronicznie odczytać danych ze strumienia sieci. `myReadCallBack` Implementuje metodę <xref:System.AsyncCallback> delegować i jest wywoływany przez system po <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> zwraca.  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> Parametru jest mniejszy niż 0.  
  
—lub— 
<paramref name="offset" /> Parametru jest większa niż długość <paramref name="buffer" /> parametr.  
  
—lub— 
<paramref name="size" /> Jest mniejszy niż 0.  
  
—lub— 
<paramref name="size" /> Jest większa niż długość <paramref name="buffer" /> minus wartość <paramref name="offset" /> parametru.</exception>
        <exception cref="T:System.IO.IOException">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> jest zamknięty.  
  
—lub— 
Wystąpił błąd podczas odczytu z sieci.  
  
—lub— 
Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.NetworkStream" /> Jest zamknięty.</exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, size As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="networkStream.BeginWrite (buffer, offset, size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica typu <see cref="T:System.Byte" /> zawierający dane do zapisania <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
        <param name="offset">Lokalizacja w <c>buforu</c> aby rozpocząć wysyłanie danych.</param>
        <param name="size">Liczba bajtów do zapisu do <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> Delegowanie, to znaczy wykonana przy <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> kończy.</param>
        <param name="state">Obiekt, który zawiera wszelkie dodatkowe dane zdefiniowane przez użytkownika.</param>
        <summary>Rozpoczyna się asynchroniczny zapis w strumieniu.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Reprezentujący wywołania asynchronicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> Metoda uruchamia operację asynchronicznego wysyłania do hosta zdalnego. Wywoływanie <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> metoda daje możliwość wysyłania danych w ramach oddzielnych wykonanie wątku.  
  
 Należy utworzyć metody wywołania zwrotnego, która implementuje <xref:System.AsyncCallback> delegować, a następnie przekaż jego nazwę na <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> metody. W bardzo minimalne swoje `state` parametr musi zawierać <xref:System.Net.Sockets.NetworkStream>. Jeśli wywołanie zwrotne potrzebuje więcej informacji, możesz utworzyć małych klasę lub strukturę do przechowywania <xref:System.Net.Sockets.NetworkStream> i inne wymagane informacje. Przekaż wystąpienie struktury lub klasy, aby <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> metody za pomocą `state` parametru.  
  
 Należy zaimplementować metodę wywołania zwrotnego <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> metody. Gdy Twoja aplikacja wywołuje <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, system używa oddzielnego wątku w celu wykonania metodą określonego wywołania zwrotnego i blokuje na <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> aż <xref:System.Net.Sockets.NetworkStream> wysyła liczbę bajtów, ani nie zgłasza wyjątku. Jeśli chcesz, oryginalnym wątku do blokowania po wywołaniu metody <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> metody, użyj <xref:System.Threading.WaitHandle.WaitOne%2A> metody. Wywołaj <xref:System.Threading.EventWaitHandle.Set%2A> metody wywołania zwrotnego, jeśli chcesz, oryginalnym wątku w celu kontynuowania wykonywania. Aby uzyskać dodatkowe informacje na temat pisania metody wywołania zwrotnego, zobacz [Marshaling delegata jako metoda wywołania zwrotnego](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).  
  
> [!NOTE]
>  Jeśli zostanie wyświetlony <xref:System.IO.IOException>, sprawdź <xref:System.Exception.InnerException%2A> właściwości w celu określenia, jeśli zostało spowodowane przez <xref:System.Net.Sockets.SocketException>. Jeśli tak, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A> właściwość, aby uzyskać kod błędu i odnoszą się do [kod błędu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) dokumentacji, aby uzyskać szczegółowy opis błędu.  
  
 Odczyt i zapis, operacje mogą być wykonywane jednocześnie w wystąpieniu <xref:System.Net.Sockets.NetworkStream> klasy bez konieczności synchronizacji. Tak długo, jak jest jeden wątek unikatowy dla operacji zapisu i jeden wątek unikatowy dla operacji odczytu, nie będzie żadnych zakłóceń między pomiędzy odczytu i zapisu wątków i synchronizacja nie jest wymagana.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> asynchronicznie zapisu danych do strumieni sieciowych. `myWriteCallBack` Implementuje metodę <xref:System.AsyncCallback> delegować i jest wywoływany przez system po <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> zwraca.  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> Parametru jest mniejszy niż 0.  
  
—lub— 
<paramref name="offset" /> Parametru jest większa niż długość <paramref name="buffer" />.  
  
—lub— 
<paramref name="size" /> Parametru jest mniejszy niż 0.  
  
—lub— 
<paramref name="size" /> Parametru jest większa niż długość <paramref name="buffer" /> minus wartość <paramref name="offset" /> parametru.</exception>
        <exception cref="T:System.IO.IOException">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> jest zamknięty.  
  
—lub— 
Wystąpił błąd podczas zapisywania do sieci.  
  
—lub— 
Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.NetworkStream" /> Jest zamknięty.</exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Sockets.NetworkStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Net.Sockets.NetworkStream" /> obsługuje Odczyt.</summary>
        <value>
          <see langword="true" /> Jeśli dane mogą być odczytywane ze strumienia; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Net.Sockets.NetworkStream.CanRead%2A> jest `true`, <xref:System.Net.Sockets.NetworkStream> umożliwia wywoływanie <xref:System.Net.Sockets.NetworkStream.Read%2A> metody. Podaj odpowiednie <xref:System.IO.FileAccess> wyliczonych wartości w Konstruktorze można ustawić czytelność i obiekty z <xref:System.Net.Sockets.NetworkStream>. <xref:System.Net.Sockets.NetworkStream.CanRead%2A> Właściwość jest ustawiona, gdy <xref:System.Net.Sockets.NetworkStream> został zainicjowany.  
  
   
  
## Examples  
 Poniższy kod przykładowy kontroli <xref:System.Net.Sockets.NetworkStream.CanRead%2A> do sprawdzenia, czy <xref:System.Net.Sockets.NetworkStream> jest czytelna. Następnie wykonuje operację odczytu na <xref:System.Net.Sockets.NetworkStream>.  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.Readable" />
        <altmember cref="T:System.IO.FileAccess" />
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Sockets.NetworkStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy strumień obsługuje wyszukiwanie. Ta właściwość nie jest obecnie obsługiwane. Właściwość ta zwraca zawsze <see langword="false" />.</summary>
        <value>
          <see langword="false" /> we wszystkich przypadkach w celu wskazania, że <see cref="T:System.Net.Sockets.NetworkStream" /> nie można wyszukać w określonej lokalizacji w strumieniu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Sockets.NetworkStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy właściwości timeout to wykorzystania <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
        <value>
          <see langword="true" /> we wszystkich przypadkach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest obecny, ponieważ zostało ono odziedziczone <xref:System.IO.Stream>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Sockets.NetworkStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Net.Sockets.NetworkStream" /> obsługuje zapis.</summary>
        <value>
          <see langword="true" /> Jeśli dane mogą być zapisywane na <see cref="T:System.Net.Sockets.NetworkStream" />; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> jest `true`, <xref:System.Net.Sockets.NetworkStream> umożliwia wywoływanie <xref:System.Net.Sockets.NetworkStream.Write%2A> metody. Podaj odpowiednie <xref:System.IO.FileAccess> wyliczonych wartości w Konstruktorze można ustawić czytelność i obiekty z <xref:System.Net.Sockets.NetworkStream>. <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> Właściwość jest ustawiona, gdy <xref:System.Net.Sockets.NetworkStream> został zainicjowany.  
  
   
  
## Examples  
 Poniższy kod przykładowy kontroli <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> do sprawdzenia, czy <xref:System.Net.Sockets.NetworkStream> jest zapisywalna. Następnie wykonuje operację zapisu na <xref:System.Net.Sockets.NetworkStream>.  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
        <altmember cref="T:System.IO.FileAccess" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="networkStream.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(int timeout);" />
      <MemberSignature Language="F#" Value="override this.Close : int -&gt; unit" Usage="networkStream.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">32-bitowa liczba całkowita ze znakiem określa liczbę milisekund oczekiwania na wysłanie pozostałych danych przed zamknięciem.</param>
        <summary>Zamyka <see cref="T:System.Net.Sockets.NetworkStream" /> po upływie określonego czasu, aby umożliwić danych do wysłania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream.Close%2A> Metoda zwalnia zasoby zarządzane i niezarządzane skojarzone z <xref:System.Net.Sockets.NetworkStream>. Jeśli <xref:System.Net.Sockets.NetworkStream> jest właścicielem bazowej <xref:System.Net.Sockets.Socket>, jest również zamknięty.  
  
 Jeśli <xref:System.Net.Sockets.NetworkStream> został skojarzony z <xref:System.Net.Sockets.TcpClient>, <xref:System.Net.Sockets.NetworkStream.Close%2A> metody Zamknij połączenie TCP, ale nie usuwaj skojarzonego <xref:System.Net.Sockets.TcpClient>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" /> Parametr jest mniejsza niż -1.</exception>
      </Docs>
    </Member>
    <Member MemberName="DataAvailable">
      <MemberSignature Language="C#" Value="public virtual bool DataAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.DataAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DataAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataAvailable : bool" Usage="System.Net.Sockets.NetworkStream.DataAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dane są dostępne na <see cref="T:System.Net.Sockets.NetworkStream" /> do odczytu.</summary>
        <value>
          <see langword="true" /> Jeśli dane są dostępne w usłudze stream do odczytania. w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> właściwość, aby określić, czy data jest gotowy do odczytu. Jeśli <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> jest `true`, wywołanie <xref:System.Net.Sockets.NetworkStream.Read%2A> zwraca natychmiast. Jeśli host zdalny zamyka lub zamyka połączenia, <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> może zgłaszać <xref:System.Net.Sockets.SocketException>.  
  
   
  
## Examples  
 Poniższy przykład kodu odczytuje z <xref:System.Net.Sockets.NetworkStream> tak długo, jak dane są dostępne.  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.NetworkStream" /> Jest zamknięty.</exception>
        <exception cref="T:System.IO.IOException">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> jest zamknięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Użyj <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> właściwość, aby uzyskać kod błędu i odnoszą się do <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">kod błędu API Windows Sockets w wersji 2</see> dokumentacji, aby uzyskać szczegółowy opis błędu.</exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="networkStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Net.Sockets.NetworkStream" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez publiczną `Dispose` metody i <xref:System.Object.Finalize%2A> metody. `Dispose` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` parametr `true`. <xref:System.Object.Finalize%2A> wywołuje `Dispose` z `disposing` równa `false`.  
  
 Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane że <xref:System.Net.Sockets.NetworkStream> odwołania. Ta metoda wywołuje `Dispose` metoda każdego obiektu, do którego istnieje odwołanie.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> może być wywoływana wiele razy przez inne obiekty. Podczas zastępowania <see langword="Dispose(Boolean)" />, nie należy odwoływać się do obiektów, które zostały wcześniej zlikwidowane wcześniejszym wywołaniem do <see langword="Dispose" />. Aby uzyskać więcej informacji o sposobie wdrażania <see langword="Dispose(Boolean)" />, zobacz [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) i [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="networkStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> Reprezentujący wywołania asynchronicznego.</param>
        <summary>Obsługuje koniec odczyt asynchroniczny.</summary>
        <returns>Liczba bajtów odczytanych z <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream.EndRead%2A> Metoda kończy pracę w operację odczytu asynchronicznego <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> metody.  
  
 Przed wywołaniem <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, musisz utworzyć metody wywołania zwrotnego, która implementuje <xref:System.AsyncCallback> delegować. Ta metoda wywołania zwrotnego jest wykonywany w oddzielnym wątku i jest wywoływana przez system po <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> zwraca. Metoda wywołania zwrotnego musi zaakceptować <xref:System.IAsyncResult> zwróciło <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> metoda jako parametr.  
  
 W ramach metody wywołania zwrotnego, należy wywołać <xref:System.IAsyncResult.AsyncState%2A> właściwość <xref:System.IAsyncResult> można uzyskać stanu obiektu przekazanego do <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> metody. Wyodrębnij odbieranie <xref:System.Net.Sockets.NetworkStream> z tego obiektu stanu. Po uzyskaniu <xref:System.Net.Sockets.NetworkStream>, wywołaj <xref:System.Net.Sockets.NetworkStream.EndRead%2A> metodę, aby pomyślnie wykonać operacji odczytu i zwracają liczbę odczytanych bajtów.  
  
 <xref:System.Net.Sockets.NetworkStream.EndRead%2A> Metoda blokuje, dopóki dane są dostępne. <xref:System.Net.Sockets.NetworkStream.EndRead%2A> Metoda odczytuje tak dużej ilości danych jest dostępna do liczbę bajtów określoną w `size` parametru <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> metody. Jeśli host zdalny zamknięcie <xref:System.Net.Sockets.Socket> Odebrano połączenia i wszystkie dostępne dane <xref:System.Net.Sockets.NetworkStream.EndRead%2A> metoda zakończy się natychmiast i zwraca zero bajtów.  
  
 Aby uzyskać odebrane dane, należy wywołać <xref:System.IAsyncResult.AsyncState%2A> właściwość <xref:System.IAsyncResult>i Wyodrębnij buforu zawartych w obiekcie wynikowym stanu.  
  
> [!NOTE]
>  Jeśli zostanie wyświetlony <xref:System.IO.IOException>, sprawdź <xref:System.Exception.InnerException%2A> właściwości w celu określenia, jeśli zostało spowodowane przez <xref:System.Net.Sockets.SocketException>. Jeśli tak, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A> właściwość, aby uzyskać kod błędu i odnoszą się do [kod błędu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) dokumentacji, aby uzyskać szczegółowy opis błędu.  
  
   
  
## Examples  
 W poniższym przykładzie kodu `myReadCallback` jest dostarczany w celu <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> jako metoda wywołania zwrotnego. <xref:System.Net.Sockets.NetworkStream.EndRead%2A> jest zaimplementowana w `myReadCallback` do ukończenia asynchroniczny odczyt uruchomione przez wywołanie <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>.  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#5)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#5)]
 [!code-vb[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="asyncResult" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> jest zamknięty.  
  
—lub— 
Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.NetworkStream" /> Jest zamknięty.</exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="networkStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> Reprezentujący wywołania asynchronicznego.</param>
        <summary>Obsługuje koniec asynchronicznego zapisu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> wykonuje operację asynchronicznego wysyłania pracę w <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.  
  
 Przed wywołaniem <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, musisz utworzyć metody wywołania zwrotnego, która implementuje <xref:System.AsyncCallback> delegować. Ta metoda wywołania zwrotnego jest wykonywany w oddzielnym wątku i jest wywoływana przez system po <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> zwraca. Metoda wywołania zwrotnego musi zaakceptować <xref:System.IAsyncResult> zwróciło <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> metoda jako parametr.  
  
 W ramach metody wywołania zwrotnego, należy wywołać <xref:System.IAsyncResult.AsyncState%2A> właściwość `IAsyncResult` parametru, aby uzyskać <xref:System.Net.Sockets.NetworkStream>. Po uzyskaniu <xref:System.Net.Sockets.NetworkStream>, można wywołać <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> metodę, aby pomyślnie ukończyć operacji wysyłania i zwraca liczbę bajtów przesłanych.  
  
 <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> Metoda blokuje do momentu wysłaniem żądanej liczby bajtów.  
  
> [!NOTE]
>  Jeśli zostanie wyświetlony <xref:System.IO.IOException>, sprawdź <xref:System.Exception.InnerException%2A> właściwości w celu określenia, jeśli zostało spowodowane przez <xref:System.Net.Sockets.SocketException>. Jeśli tak, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A> właściwość, aby uzyskać kod błędu i odnoszą się do [kod błędu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) dokumentacji, aby uzyskać szczegółowy opis błędu.  
  
   
  
## Examples  
 W poniższym przykładzie kodu `myWriteCallback` jest dostarczany w celu <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> jako metoda wywołania zwrotnego. <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> jest zaimplementowana w `myWriteCallback` do ukończenia wywołania asynchronicznego zapisu uruchomione przez <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> jest zamknięty.  
  
—lub— 
Wystąpił błąd podczas zapisywania do sieci.  
  
—lub— 
Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.NetworkStream" /> Jest zamknięty.</exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~NetworkStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!NetworkStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="networkStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zastępuje <xref:System.Object.Finalize%2A?displayProperty=nameWithType>. Kod aplikacji nie powinna wywołać tę metodę; obiekt <xref:System.Object.Finalize%2A> metoda jest wywoływana automatycznie podczas wyrzucania elementów bezużytecznych, chyba że finalizacja przez moduł garbage collector została wyłączona przez wywołanie <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> metody.  
  
 Aby uzyskać więcej informacji na temat korzystania z metody Finalize, zobacz [Finalize metody i destruktory](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), i [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)) .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="networkStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści dane ze strumienia. Ta metoda jest zarezerwowana do użytku w przyszłości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream.Flush%2A> Implementuje metodę <xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType> metoda; Jednakże, ponieważ <xref:System.Net.Sockets.NetworkStream> jest nie są buforowane, go nie ma wpływu na strumieni sieciowych. Wywoływanie <xref:System.Net.Sockets.NetworkStream.Flush%2A> metody nie zgłasza wyjątku.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="networkStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Token anulowania, wykorzystywany do propagowania powiadomienia, że ta operacja powinna zostać anulowana.</param>
        <summary>Czyści dane ze strumienia jako operację asynchroniczną.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task" />.  
  
Obiekt zadania reprezentujący operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócony <xref:System.Threading.Tasks.Task> obiektu zakończy się po został opróżniony danych ze strumienia dla <xref:System.Net.Sockets.NetworkStream> wystąpienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Sockets.NetworkStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera długość dostępnych danych w strumieniu. Ta właściwość nie jest obecnie obsługiwane i zawsze zgłasza <see cref="T:System.NotSupportedException" />.</summary>
        <value>Długość dostępnych danych w strumieniu.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Użycie tej właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Sockets.NetworkStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia bieżącą pozycję w strumieniu. Ta właściwość nie jest obecnie obsługiwane i zawsze zgłasza <see cref="T:System.NotSupportedException" />.</summary>
        <value>Bieżąca pozycja w strumieniu.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Użycie tej właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, size As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="networkStream.Read (buffer, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica typu <see cref="T:System.Byte" /> oznacza to lokalizacja w pamięci, aby zachować dane odczytane ze <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
        <param name="offset">Lokalizacja w <c>buforu</c> umożliwiającą przechowywanie danych.</param>
        <param name="size">Liczba bajtów do odczytu z <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
        <summary>Odczytuje dane z <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
        <returns>Liczba bajtów odczytanych z <see cref="T:System.Net.Sockets.NetworkStream" />, lub 0, jeśli zamknięto gniazda.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda odczytuje dane `buffer` parametr i zwraca liczbę bajtów odczytanych pomyślnie. Jeśli nastąpi zamknięcie okna gniazda, <xref:System.Net.Sockets.NetworkStream.Read%2A> metoda zwróci wartość 0. <xref:System.Net.Sockets.NetworkStream.Read%2A> Operacji odczytuje tak dużej ilości danych, jest dostępna — maksymalnie liczbę bajtów określoną przez `size` parametru. Jeśli host zdalny zamyka połączenie i otrzymał wszystkie dostępne dane <xref:System.Net.Sockets.NetworkStream.Read%2A> metoda zakończy się natychmiast i zwraca zero bajtów.  
  
> [!NOTE]
>  Zaznacz, aby sprawdzić, czy <xref:System.Net.Sockets.NetworkStream> jest do odczytu przez wywołanie metody <xref:System.Net.Sockets.NetworkStream.CanRead%2A> właściwości. Jeśli użytkownik podejmie próbę odczytu z <xref:System.Net.Sockets.NetworkStream> jest nieczytelny, uzyskasz <xref:System.IO.IOException>.  
  
> [!NOTE]
>  Jeśli zostanie wyświetlony <xref:System.IO.IOException>, sprawdź <xref:System.Exception.InnerException%2A> właściwości w celu określenia, jeśli zostało spowodowane przez <xref:System.Net.Sockets.SocketException>. Jeśli tak, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A> właściwość, aby uzyskać kod błędu i odnoszą się do [kod błędu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) dokumentacji, aby uzyskać szczegółowy opis błędu.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> ustalenie, jeśli dane są dostępne do odczytu. Jeśli dane są dostępne, zostanie odczytanych z <xref:System.Net.Sockets.NetworkStream>.  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> Parametru jest mniejszy niż 0.  
  
—lub— 
<paramref name="offset" /> Parametru jest większa niż długość <paramref name="buffer" />.  
  
—lub— 
<paramref name="size" /> Parametru jest mniejszy niż 0.  
  
—lub— 
<paramref name="size" /> Parametru jest większa niż długość <paramref name="buffer" /> minus wartość <paramref name="offset" /> parametru.  
  
—lub— 
Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</exception>
        <exception cref="T:System.IO.IOException">Podstawowe <see cref="T:System.Net.Sockets.Socket" /> jest zamknięty.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.NetworkStream" /> Jest zamknięty.  
  
—lub— 
Występuje błąd podczas odczytywania z sieci.</exception>
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <related type="Article" href="~/docs/framework/network-programming/using-streams-on-the-network.md">Stosowanie strumieni w sieci</related>
      </Docs>
    </Member>
    <Member MemberName="Readable">
      <MemberSignature Language="C#" Value="protected bool Readable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Readable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Readable" />
      <MemberSignature Language="VB.NET" Value="Protected Property Readable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Readable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Readable : bool with get, set" Usage="System.Net.Sockets.NetworkStream.Readable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Net.Sockets.NetworkStream" /> może zostać odczytany.</summary>
        <value>
          <see langword="true" /> Aby wskazać, że <see cref="T:System.Net.Sockets.NetworkStream" /> może być odczytany; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Muszą pochodzić od <xref:System.Net.Sockets.NetworkStream> klasy <xref:System.Net.Sockets.NetworkStream.Readable%2A> właściwości. Jeśli <xref:System.Net.Sockets.NetworkStream.Readable%2A> jest `true`, <xref:System.Net.Sockets.NetworkStream> umożliwia wywoływanie <xref:System.Net.Sockets.NetworkStream.Read%2A> metody. Można również określić, czy <xref:System.Net.Sockets.NetworkStream> jest do odczytu, sprawdzając dostępny publicznie <xref:System.Net.Sockets.NetworkStream.CanRead%2A> właściwości.  
  
 <xref:System.Net.Sockets.NetworkStream.Readable%2A> Właściwość jest ustawiona, gdy <xref:System.Net.Sockets.NetworkStream> został zainicjowany.  
  
   
  
## Examples  
 W poniższym przykładzie kodu `CanCommunicate` sprawdzenia właściwości <xref:System.Net.Sockets.NetworkStream.Readable%2A> właściwości, aby określić, czy <xref:System.Net.Sockets.NetworkStream> jest czytelna.  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="networkStream.ReadAsync (buffer, offset, size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="size">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Sockets.NetworkStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas, który bloki operacji odczytu, oczekiwanie na dane.</summary>
        <value>A <see cref="T:System.Int32" /> ilość czasu, który określa w milisekundach, jaki ma upłynąć przed operacja odczytu zakończy się niepowodzeniem. Wartość domyślna to <see cref="F:System.Threading.Timeout.Infinite" />, określa, że operacja odczytu nie podlega limitowi czasu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli operacja odczytu zakończy się w czasie określonym przez tę właściwość, operacja odczytu zgłasza <xref:System.IO.IOException>.  
  
> [!NOTE]
>  Ta właściwość dotyczy tylko Synchroniczne odczyty wykonywane przez wywołanie metody <xref:System.Net.Sockets.NetworkStream.Read%2A> metody. Ta właściwość nie ma wpływu na Asynchroniczne odczyty wykonywane przez wywołanie metody <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia limit czasu odczytu dla strumienia sieci 10 milisekund.  
  
 [!code-csharp[NCLTcpClientSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość jest mniejsza niż zero, a nie <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="networkStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Ten parametr nie jest używany.</param>
        <param name="origin">Ten parametr nie jest używany.</param>
        <summary>Ustawia bieżącą pozycję w strumieniu podanej wartości. Ta metoda nie jest obecnie obsługiwane i zawsze zgłasza <see cref="T:System.NotSupportedException" />.</summary>
        <returns>Pozycji w strumieniu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Użycie tej właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="networkStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">Ten parametr nie jest używany.</param>
        <summary>Ustawia długość strumienia. Ta metoda zawsze wyrzuca <see cref="T:System.NotSupportedException" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Użycie tej właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="Socket">
      <MemberSignature Language="C#" Value="protected System.Net.Sockets.Socket Socket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Socket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Socket" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Socket As Socket" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Net::Sockets::Socket ^ Socket { System::Net::Sockets::Socket ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Socket : System.Net.Sockets.Socket" Usage="System.Net.Sockets.NetworkStream.Socket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera podstawowe <see cref="T:System.Net.Sockets.Socket" />.</summary>
        <value>A <see cref="T:System.Net.Sockets.Socket" /> reprezentujący podstawowy połączenia sieciowego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy wywodzące się z <xref:System.Net.Sockets.NetworkStream> można użyć tej właściwości, aby uzyskać podstawową <xref:System.Net.Sockets.Socket>. Używają bazowej <xref:System.Net.Sockets.Socket> zwróciło <xref:System.Net.Sockets.NetworkStream.Socket%2A> właściwość, jeśli potrzebujesz dostępu poza tym, które <xref:System.Net.Sockets.NetworkStream> udostępnia.  
  
> [!NOTE]
>  Ta właściwość jest dostępna tylko za pośrednictwem tej klasy lub klasy pochodnej.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera bazowego <xref:System.Net.Sockets.Socket> można sprawdzić aktywne połączenie.  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="networkStream.Write (buffer, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica typu <see cref="T:System.Byte" /> zawierający dane do zapisania <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
        <param name="offset">Lokalizacja w <c>buforu</c> z którego ma zostać uruchomiony, zapisywanie danych.</param>
        <param name="size">Liczba bajtów do zapisu do <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
        <summary>Zapisuje dane do <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream.Write%2A> Metoda rozpoczyna się od określonego `offset` i wysyła `size` bajtów z zawartości `buffer` do sieci. <xref:System.Net.Sockets.NetworkStream.Write%2A> Metoda blokuje do momentu wysłania jest żądanej liczby bajtów lub a <xref:System.Net.Sockets.SocketException> zgłaszany. Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> właściwość, aby uzyskać kod błędu i odnoszą się do [kod błędu API Windows Sockets w wersji 2](/windows/desktop/winsock/windows-sockets-error-codes-2) dokumentacji, aby uzyskać szczegółowy opis błędu.  
  
> [!NOTE]
>  Zaznacz, aby sprawdzić, czy <xref:System.Net.Sockets.NetworkStream> jest zapisywalny, uzyskując dostęp do <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> właściwości. Jeśli użytkownik podejmie próbę zapisu <xref:System.Net.Sockets.NetworkStream> nie jest zapisywalny, uzyskasz <xref:System.IO.IOException>. Jeśli zostanie wyświetlony <xref:System.IO.IOException>, sprawdź <xref:System.Exception.InnerException%2A> właściwości w celu określenia, jeśli zostało spowodowane przez <xref:System.Net.Sockets.SocketException>.  
  
   
  
## Examples  
 Poniższy kod przykładowy sprawdza, czy <xref:System.Net.Sockets.NetworkStream> jest zapisywalna. Jeśli tak jest, następnie <xref:System.Net.Sockets.NetworkStream.Write%2A> używany do zapisywania małych komunikatów.  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> Parametr <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> Parametru jest mniejszy niż 0.  
  
—lub— 
<paramref name="offset" /> Parametru jest większa niż długość <paramref name="buffer" />.  
  
—lub— 
<paramref name="size" /> Parametru jest mniejszy niż 0.  
  
—lub— 
<paramref name="size" /> Parametru jest większa niż długość <paramref name="buffer" /> minus wartość <paramref name="offset" /> parametru.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas zapisywania do sieci.  
  
—lub— 
Wystąpił błąd podczas uzyskiwania dostępu do gniazda.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.NetworkStream" /> Jest zamknięty.  
  
—lub— 
Wystąpił błąd podczas odczytywania z sieci.</exception>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
      </Docs>
    </Member>
    <Member MemberName="Writeable">
      <MemberSignature Language="C#" Value="protected bool Writeable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Writeable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Writeable" />
      <MemberSignature Language="VB.NET" Value="Protected Property Writeable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Writeable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Writeable : bool with get, set" Usage="System.Net.Sockets.NetworkStream.Writeable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Net.Sockets.NetworkStream" /> jest zapisywalna.</summary>
        <value>
          <see langword="true" /> Jeśli dane mogą być zapisywane do strumienia; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Muszą pochodzić od <xref:System.Net.Sockets.NetworkStream> klasy <xref:System.Net.Sockets.NetworkStream.Writeable%2A> właściwości. Jeśli <xref:System.Net.Sockets.NetworkStream.Writeable%2A> jest `true`, <xref:System.Net.Sockets.NetworkStream> umożliwia wywoływanie <xref:System.Net.Sockets.NetworkStream.Write%2A> metody. Można również określić, czy <xref:System.Net.Sockets.NetworkStream> jest zapisywalny, sprawdzając dostępny publicznie <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> właściwości.  
  
 <xref:System.Net.Sockets.NetworkStream.Writeable%2A> Właściwość jest ustawiona, gdy <xref:System.Net.Sockets.NetworkStream> został zainicjowany.  
  
   
  
## Examples  
 W poniższym przykładzie kodu `CanCommunicate` sprawdzenia właściwości <xref:System.Net.Sockets.NetworkStream.Writeable%2A> właściwości, aby określić, czy <xref:System.Net.Sockets.NetworkStream> jest zapisywalna.  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Readable" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="networkStream.WriteAsync (buffer, offset, size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="size">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Sockets.NetworkStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas, który bloki operacji zapisu, oczekiwanie na dane.</summary>
        <value>A <see cref="T:System.Int32" /> ilość czasu, który określa w milisekundach, jaki ma upłynąć przed operacja zapisu zakończy się niepowodzeniem. Wartość domyślna to <see cref="F:System.Threading.Timeout.Infinite" />, określa, że operacja zapisu nie podlega limitowi czasu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli operacja zapisu nie zostanie zakończone w czasie określonym przez tę właściwość, operacji zapisu, zgłasza <xref:System.IO.IOException>.  
  
> [!NOTE]
>  Ta właściwość ma wpływ na operacje zapisu tylko synchroniczne, wykonywane przez wywołanie metody <xref:System.Net.Sockets.NetworkStream.Write%2A> metody. Ta właściwość nie ma wpływu na zapis asynchroniczny, wykonywane przez wywołanie metody <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia limit czasu zapisu do strumieni sieciowych 10 milisekund.  
  
 [!code-cpp[NCLTcpServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclTcpServerSync/cpp/tcplistener.cpp#0)]
 [!code-csharp[NCLTcpServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclTcpServerSync/CS/tcplistener.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość jest mniejsza niż zero, a nie <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>