<Type Name="NetworkStream" FullName="System.Net.Sockets.NetworkStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da6f477a2cb785859d916208bd6d3718adc35921" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36550630" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NetworkStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetworkStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.NetworkStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NetworkStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetworkStream : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type NetworkStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zasadniczy strumień danych zapewnia dostęp do sieci.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream> Klasa dostarcza metody do wysyłania i odbierania danych za pośrednictwem <xref:System.Net.Sockets.SocketType.Stream> gniazda w trybie blokowania. Aby uzyskać więcej informacji na temat blokowania i nieblokujących <xref:System.Net.Sockets.Socket>s, zobacz [przy użyciu asynchronicznej gniazdo klienta](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md). Można użyć <xref:System.Net.Sockets.NetworkStream> klasy do obu transferu danych synchroniczne i asynchroniczne. Aby uzyskać więcej informacji dotyczących komunikacji synchroniczne i asynchroniczne, zobacz [Sockets](~/docs/framework/network-programming/sockets.md).  
  
 Aby utworzyć <xref:System.Net.Sockets.NetworkStream>, musisz podać połączonych <xref:System.Net.Sockets.Socket>. Można również określić, jakie <xref:System.IO.FileAccess> uprawnienia <xref:System.Net.Sockets.NetworkStream> ma za pośrednictwem dostarczonego <xref:System.Net.Sockets.Socket>. Domyślnie zamknięcie <xref:System.Net.Sockets.NetworkStream> nie zamyka dostarczonych <xref:System.Net.Sockets.Socket>. Jeśli chcesz <xref:System.Net.Sockets.NetworkStream> mają uprawnienia do zamykania dostarczonych <xref:System.Net.Sockets.Socket>, należy określić `true` dla wartości `ownsSocket` parametru.  
  
 Użyj <xref:System.Net.Sockets.NetworkStream.Write%2A> i <xref:System.Net.Sockets.NetworkStream.Read%2A> metody prostego pojedynczego wątku synchroniczne blokowania We/Wy. Do przetworzenia z operacji We/Wy przy użyciu oddzielnych wątkach, należy rozważyć użycie <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> i <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> metody, lub <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> i <xref:System.Net.Sockets.NetworkStream.EndRead%2A> metody komunikacji.  
  
 <xref:System.Net.Sockets.NetworkStream> Nie obsługuje losowe dostęp do strumienia danych sieciowych. Wartość <xref:System.Net.Sockets.NetworkStream.CanSeek%2A> właściwość, która wskazuje, czy strumień obsługuje operacji wyszukiwania, jest zawsze `false`; odczytywania <xref:System.Net.Sockets.NetworkStream.Position%2A> właściwości odczytu <xref:System.Net.Sockets.NetworkStream.Length%2A> właściwość lub wywołanie <xref:System.Net.Sockets.NetworkStream.Seek%2A> metoda zgłosi <xref:System.NotSupportedException>.  
  
 Odczyt i zapis operacje mogą być wykonywane równocześnie w wystąpieniu <xref:System.Net.Sockets.NetworkStream> klasy bez konieczności synchronizacji. Tak długo, jak jest jeden wątek unikatowy dla operacji zapisu i jeden wątek unikatowy dla operacji odczytu, nie będą bez zakłóceń między między odczytu i zapisu wątków i synchronizacja nie jest wymagana.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia <xref:System.Net.Sockets.NetworkStream> z połączonych <xref:System.Net.Sockets.SocketType.Stream> <xref:System.Net.Sockets.Socket> i wykonywać podstawowe synchroniczne blokowania operacji We/Wy.  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Net.Sockets.NetworkStream" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream socket" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
      </Parameters>
      <Docs>
        <param name="socket">
          <see cref="T:System.Net.Sockets.Socket" /> Który <see cref="T:System.Net.Sockets.NetworkStream" /> będzie używany do wysyłania i odbierania danych.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Net.Sockets.NetworkStream" /> klasy dla określonego <see cref="T:System.Net.Sockets.Socket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream> Jest tworzony z dostępem do odczytu i zapisu do określonego <xref:System.Net.Sockets.Socket>. <xref:System.Net.Sockets.NetworkStream> Nie ma odpowiadającego <xref:System.Net.Sockets.Socket>, dlatego wywołania <xref:System.Net.Sockets.NetworkStream.Close%2A> — metoda nie zamyka <xref:System.Net.Sockets.Socket>.  
  
   
  
## Examples  
 Poniższy przykładowy kod ilustruje sposób tworzenia <xref:System.Net.Sockets.NetworkStream> z <xref:System.Net.Sockets.Socket>.  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="socket" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="socket" /> Parametr nie jest połączona.  - lub - <see cref="P:System.Net.Sockets.Socket.SocketType" /> właściwość <paramref name="socket" /> parametr nie jest <see cref="F:System.Net.Sockets.SocketType.Stream" />.  - lub - <paramref name="socket" /> parametr jest w stanie nieblokujących.</exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, bool ownsSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, bool ownsSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, bool ownsSocket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * bool -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, ownsSocket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="ownsSocket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket">
          <see cref="T:System.Net.Sockets.Socket" /> Który <see cref="T:System.Net.Sockets.NetworkStream" /> będzie używany do wysyłania i odbierania danych.</param>
        <param name="ownsSocket">Ustaw <see langword="true" /> z informacją, że <see cref="T:System.Net.Sockets.NetworkStream" /> będzie przejąć na własność <see cref="T:System.Net.Sockets.Socket" />; w przeciwnym razie <see langword="false" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Net.Sockets.NetworkStream" /> klasy dla określonego <see cref="T:System.Net.Sockets.Socket" /> z określonym <see cref="T:System.Net.Sockets.Socket" /> własności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream> Jest tworzony z dostępem do odczytu i zapisu do określonego <xref:System.Net.Sockets.Socket>. Jeśli wartość `ownsSocket` parametr jest `true`, <xref:System.Net.Sockets.NetworkStream> przejmuje podstawowych <xref:System.Net.Sockets.Socket>i wywoływania <xref:System.Net.Sockets.NetworkStream.Close%2A> metody zamyka, odpowiadającego <xref:System.Net.Sockets.Socket>.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Net.Sockets.NetworkStream> właściciela <xref:System.Net.Sockets.Socket>.  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="socket" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="socket" /> Parametr nie jest połączona.  - lub - wartość <see cref="P:System.Net.Sockets.Socket.SocketType" /> właściwość <paramref name="socket" /> parametr nie jest <see cref="F:System.Net.Sockets.SocketType.Stream" />.  - lub - <paramref name="socket" /> parametr jest w stanie nieblokujących.</exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * System.IO.FileAccess -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="socket">
          <see cref="T:System.Net.Sockets.Socket" /> Który <see cref="T:System.Net.Sockets.NetworkStream" /> będzie używany do wysyłania i odbierania danych.</param>
        <param name="access">Bitowe połączenie <see cref="T:System.IO.FileAccess" /> wartości, które określają typ dostępu do <see cref="T:System.Net.Sockets.NetworkStream" /> za pośrednictwem dostarczonego <see cref="T:System.Net.Sockets.Socket" />.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Net.Sockets.NetworkStream" /> klasy dla określonego <see cref="T:System.Net.Sockets.Socket" /> z określonego uprawnienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream> Jest tworzony z określonym dostępu do określonego <xref:System.Net.Sockets.Socket>. W tym konstruktorze <xref:System.Net.Sockets.NetworkStream> nie ma odpowiadającego <xref:System.Net.Sockets.Socket>, dlatego wywołania <xref:System.Net.Sockets.NetworkStream.Close%2A> — metoda nie zamyka odpowiadającego <xref:System.Net.Sockets.Socket>.  
  
 `access` Zestawów parametrów <xref:System.Net.Sockets.NetworkStream.CanRead%2A> i <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> właściwości <xref:System.Net.Sockets.NetworkStream>. Jeśli określisz <xref:System.IO.FileAccess.Write>, a następnie <xref:System.Net.Sockets.NetworkStream> umożliwia wywoływanie <xref:System.Net.Sockets.NetworkStream.Write%2A> metody. Jeśli określisz <xref:System.IO.FileAccess.Read>, a następnie <xref:System.Net.Sockets.NetworkStream> umożliwia wywoływanie <xref:System.Net.Sockets.NetworkStream.Read%2A> metody. Jeśli określisz <xref:System.IO.FileAccess.ReadWrite>, zarówno wywołania metody są dozwolone.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Net.Sockets.NetworkStream> z możliwością odczytu i zapisu do <xref:System.Net.Sockets.Socket>.  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]
 [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="socket" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="socket" /> Parametr nie jest połączona.  - lub - <see cref="P:System.Net.Sockets.Socket.SocketType" /> właściwość <paramref name="socket" /> parametr nie jest <see cref="F:System.Net.Sockets.SocketType.Stream" />.  - lub - <paramref name="socket" /> parametr jest w stanie nieblokujących.</exception>
        <altmember cref="T:System.IO.FileAccess" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access, bool ownsSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, valuetype System.IO.FileAccess access, bool ownsSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, System::IO::FileAccess access, bool ownsSocket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * System.IO.FileAccess * bool -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, access, ownsSocket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="ownsSocket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket">
          <see cref="T:System.Net.Sockets.Socket" /> Który <see cref="T:System.Net.Sockets.NetworkStream" /> będzie używany do wysyłania i odbierania danych.</param>
        <param name="access">Bitowe połączenie <see cref="T:System.IO.FileAccess" /> wartości, które określają typ dostępu do <see cref="T:System.Net.Sockets.NetworkStream" /> za pośrednictwem dostarczonego <see cref="T:System.Net.Sockets.Socket" />.</param>
        <param name="ownsSocket">Ustaw <see langword="true" /> z informacją, że <see cref="T:System.Net.Sockets.NetworkStream" /> będzie przejąć na własność <see cref="T:System.Net.Sockets.Socket" />; w przeciwnym razie <see langword="false" />.</param>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Net.Sockets.NetworkStream" /> klasy dla określonego <see cref="T:System.Net.Sockets.Socket" /> z określonego uprawnienia i określonego <see cref="T:System.Net.Sockets.Socket" /> własności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream> Jest tworzony z dostępem do odczytu i zapisu do określonego <xref:System.Net.Sockets.Socket>. Jeśli wartość `ownsSocket` parametr jest `true`, <xref:System.Net.Sockets.NetworkStream> przejmuje podstawowych <xref:System.Net.Sockets.Socket>i wywoływania <xref:System.Net.Sockets.NetworkStream.Close%2A> metody zamyka, odpowiadającego <xref:System.Net.Sockets.Socket>.  
  
 `access` Zestawów parametrów <xref:System.Net.Sockets.NetworkStream.CanRead%2A> i <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> właściwości <xref:System.Net.Sockets.NetworkStream>. Jeśli określisz <xref:System.IO.FileAccess.Write>, a następnie <xref:System.Net.Sockets.NetworkStream> umożliwia wywoływanie <xref:System.Net.Sockets.NetworkStream.Write%2A> metody. Jeśli określisz <xref:System.IO.FileAccess.Read>, a następnie <xref:System.Net.Sockets.NetworkStream> umożliwia wywoływanie <xref:System.Net.Sockets.NetworkStream.Read%2A> metody. Jeśli określisz <xref:System.IO.FileAccess.ReadWrite>, zarówno wywołania metody są dozwolone.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Net.Sockets.NetworkStream> z możliwością odczytu i zapisu do <xref:System.Net.Sockets.Socket>. Własność <xref:System.Net.Sockets.Socket> nadawane to <xref:System.Net.Sockets.NetworkStream> , określając `true` dla `ownsSocket` parametru.  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]
 [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="socket" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="socket" /> Parametr nie jest połączona.  - lub - <see cref="P:System.Net.Sockets.Socket.SocketType" /> właściwość <paramref name="socket" /> parametr nie jest <see cref="F:System.Net.Sockets.SocketType.Stream" />.  - lub - <paramref name="socket" /> parametr jest w stanie nieblokujących.</exception>
        <altmember cref="T:System.IO.FileAccess" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, size As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="networkStream.BeginRead (buffer, offset, size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica typu <see cref="T:System.Byte" /> oznacza to lokalizacja w pamięci, aby przechowywać dane odczytane ze <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
        <param name="offset">Lokalizacja w <c>buforu</c> do rozpoczęcia przechowywania danych.</param>
        <param name="size">Liczba bajtów do odczytu z <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> Delegata, który jest wykonywane, kiedy <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> zakończeniu.</param>
        <param name="state">Obiekt, który zawiera wszelkie dodatkowe dane zdefiniowane przez użytkownika.</param>
        <summary>Rozpoczyna się asynchroniczny odczyt z <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Reprezentujący wywołanie asynchroniczne.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> Metoda uruchamia asynchronicznie odczytywania danych z przychodzącego buforów sieciowych. Wywoływanie <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> metody daje możliwość odbierania danych w oddzielnych wykonanie wątku.  
  
 Należy utworzyć metody wywołania zwrotnego, który implementuje <xref:System.AsyncCallback> delegować i przekaż jej nazwę, aby <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> metody. W bardzo minimalna sieci `state` musi zawierać parametr <xref:System.Net.Sockets.NetworkStream>. Ponieważ można uzyskać odebranych danych w ramach wybranej metody wywołania zwrotnego, należy utworzyć małych klasę lub strukturę do przechowywania buforu odczytu i inne przydatne informacje. Przekaż wystąpienie struktury lub klasy do <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> formę `state` parametru.  
  
 Należy wywołać metodę wywołania zwrotnego <xref:System.Net.Sockets.NetworkStream.EndRead%2A> metody. Jeśli aplikacja wymaga <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, system będzie czekać, aż odbierania danych lub występuje błąd, a następnie system użyje oddzielnym wątku do wykonania metody wywołania zwrotnego określonego i bloki na <xref:System.Net.Sockets.NetworkStream.EndRead%2A> do dostarczonego <xref:System.Net.Sockets.NetworkStream> odczytuje dane lub zgłasza wyjątek. Jeśli chcesz, aby oryginalnego wątku, aby zablokować po wywołaniu metody <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> metody, użyj <xref:System.Threading.WaitHandle.WaitOne%2A> metody. Wywołanie <xref:System.Threading.EventWaitHandle.Set%2A> w metody wywołania zwrotnego, jeśli chcesz oryginalnego wątku, aby kontynuować wykonywanie. Aby uzyskać dodatkowe informacje na temat pisania metody wywołania zwrotnego, zobacz [Marshaling delegata jako metoda wywołania zwrotnego](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).  
  
 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> Metoda odczytuje jak najwięcej danych, ponieważ są dostępne do liczby bajtów określona przez `size` parametru.  
  
> [!NOTE]
>  Jeśli zostanie wyświetlony <xref:System.IO.IOException>, sprawdź <xref:System.Exception.InnerException%2A> właściwości w celu określenia, czy zostało spowodowane przez <xref:System.Net.Sockets.SocketException>. Jeśli tak, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A> właściwość, aby otrzymać kod błędu i zapoznaj się z usługi Windows Sockets w wersji 2 dokumentacją interfejsu API błąd kodu w bibliotece MSDN szczegółowy opis błędu.  
  
 Odczyt i zapis operacje mogą być wykonywane równocześnie w wystąpieniu <xref:System.Net.Sockets.NetworkStream> klasy bez konieczności synchronizacji. Tak długo, jak jest jeden wątek unikatowy dla operacji zapisu i jeden wątek unikatowy dla operacji odczytu, nie będą bez zakłóceń między między odczytu i zapisu wątków i synchronizacja nie jest wymagana.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> asynchronicznie odczytać danych ze strumienia sieci. `myReadCallBack` Implementuje metody <xref:System.AsyncCallback> delegować i jest wywoływana przez system podczas <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> zwraca.  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> Parametru jest mniejszy niż 0.  - lub - <paramref name="offset" /> parametru jest większa niż długość <paramref name="buffer" /> parametr.  - lub - <paramref name="size" /> jest mniejszy niż 0.  - lub - <paramref name="size" /> jest większa niż długość <paramref name="buffer" /> minus wartość <paramref name="offset" /> parametru.</exception>
        <exception cref="T:System.IO.IOException">Podstawowa <see cref="T:System.Net.Sockets.Socket" /> jest zamknięty.  - lub - wystąpił błąd podczas odczytu z sieci.  - lub - wystąpił błąd podczas uzyskiwania dostępu do gniazda.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.NetworkStream" /> Jest zamknięty.</exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, size As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="networkStream.BeginWrite (buffer, offset, size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica typu <see cref="T:System.Byte" /> zawierający dane do zapisania <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
        <param name="offset">Lokalizacja w <c>buforu</c> aby rozpocząć wysyłanie danych.</param>
        <param name="size">Liczba bajtów do zapisania do <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> Delegata, który jest wykonywane, kiedy <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> zakończeniu.</param>
        <param name="state">Obiekt, który zawiera wszelkie dodatkowe dane zdefiniowane przez użytkownika.</param>
        <summary>Rozpoczyna zapis asynchroniczny w strumieniu.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> Reprezentujący wywołanie asynchroniczne.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> Metoda uruchamia operacja asynchronicznego wysyłania do hosta zdalnego. Wywoływanie <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> metody daje możliwość wysyłania danych w ramach oddzielnego wykonanie wątku.  
  
 Należy utworzyć metody wywołania zwrotnego, który implementuje <xref:System.AsyncCallback> delegować i przekaż jej nazwę, aby <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> metody. W bardzo minimalna sieci `state` musi zawierać parametr <xref:System.Net.Sockets.NetworkStream>. Jeśli wywołanie zwrotne wymaga więcej informacji, można utworzyć małych klasę lub strukturę do przechowywania <xref:System.Net.Sockets.NetworkStream> i inne wymagane informacje. Przekaż wystąpienie struktury lub klasy do <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> formę `state` parametru.  
  
 Należy zaimplementować metodę wywołania zwrotnego <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> metody. Jeśli aplikacja wymaga <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, system używa oddzielnym wątku wykonania metody wywołania zwrotnego określonego i blokuje na <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> do momentu <xref:System.Net.Sockets.NetworkStream> wysyła żądana liczba bajtów lub zgłasza wyjątek. Jeśli chcesz, aby oryginalnego wątku, aby zablokować po wywołaniu metody <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> metody, użyj <xref:System.Threading.WaitHandle.WaitOne%2A> metody. Wywołanie <xref:System.Threading.EventWaitHandle.Set%2A> w metody wywołania zwrotnego, jeśli chcesz oryginalnego wątku, aby kontynuować wykonywanie. Aby uzyskać dodatkowe informacje na temat pisania metody wywołania zwrotnego, zobacz [Marshaling delegata jako metoda wywołania zwrotnego](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).  
  
> [!NOTE]
>  Jeśli zostanie wyświetlony <xref:System.IO.IOException>, sprawdź <xref:System.Exception.InnerException%2A> właściwości w celu określenia, czy zostało spowodowane przez <xref:System.Net.Sockets.SocketException>. Jeśli tak, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A> właściwość, aby otrzymać kod błędu i zapoznaj się z usługi Windows Sockets w wersji 2 dokumentacją interfejsu API błąd kodu w bibliotece MSDN szczegółowy opis błędu.  
  
 Odczyt i zapis operacje mogą być wykonywane równocześnie w wystąpieniu <xref:System.Net.Sockets.NetworkStream> klasy bez konieczności synchronizacji. Tak długo, jak jest jeden wątek unikatowy dla operacji zapisu i jeden wątek unikatowy dla operacji odczytu, nie będą bez zakłóceń między między odczytu i zapisu wątków i synchronizacja nie jest wymagana.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> asynchronicznego zapisu danych do strumienia sieci. `myWriteCallBack` Implementuje metody <xref:System.AsyncCallback> delegować i jest wywoływana przez system podczas <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> zwraca.  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> Parametru jest mniejszy niż 0.  - lub - <paramref name="offset" /> parametru jest większa niż długość <paramref name="buffer" />.  - lub - <paramref name="size" /> parametru jest mniejszy niż 0.  - lub - <paramref name="size" /> parametru jest większa niż długość <paramref name="buffer" /> minus wartość <paramref name="offset" /> parametru.</exception>
        <exception cref="T:System.IO.IOException">Podstawowa <see cref="T:System.Net.Sockets.Socket" /> jest zamknięty.  - lub - wystąpił błąd podczas zapisywania do sieci.  - lub - wystąpił błąd podczas uzyskiwania dostępu do gniazda.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.NetworkStream" /> Jest zamknięty.</exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Sockets.NetworkStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Net.Sockets.NetworkStream" /> obsługuje odczytu.</summary>
        <value>
          <see langword="true" /> Jeśli dane mogą zostać odczytane ze strumienia; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Net.Sockets.NetworkStream.CanRead%2A> jest `true`, <xref:System.Net.Sockets.NetworkStream> umożliwia wywoływanie <xref:System.Net.Sockets.NetworkStream.Read%2A> metody. Podaj odpowiednie <xref:System.IO.FileAccess> wyliczyć wartość w konstruktorze, aby ustawić czytelności i writability z <xref:System.Net.Sockets.NetworkStream>. <xref:System.Net.Sockets.NetworkStream.CanRead%2A> Właściwości jest ustawiana podczas <xref:System.Net.Sockets.NetworkStream> został zainicjowany.  
  
   
  
## Examples  
 Poniższy kod przykładowy kontroli <xref:System.Net.Sockets.NetworkStream.CanRead%2A> do sprawdzenia, czy <xref:System.Net.Sockets.NetworkStream> jest możliwy do odczytu. Następnie wykonuje operację odczytu na <xref:System.Net.Sockets.NetworkStream>.  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.Readable" />
        <altmember cref="T:System.IO.FileAccess" />
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Sockets.NetworkStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy strumień obsługuje operacji wyszukiwania. Ta właściwość nie jest obecnie obsługiwana. Ta właściwość zawsze zwraca <see langword="false" />.</summary>
        <value>
          <see langword="false" /> we wszystkich przypadkach w celu wskazania, że <see cref="T:System.Net.Sockets.NetworkStream" /> nie można przejść do określonej lokalizacji w strumieniu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Sockets.NetworkStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy właściwości timeout są użyteczne do <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
        <value>
          <see langword="true" /> we wszystkich przypadkach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest obecny, ponieważ został on odziedziczony po <xref:System.IO.Stream>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Sockets.NetworkStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Net.Sockets.NetworkStream" /> obsługuje zapis.</summary>
        <value>
          <see langword="true" /> Jeśli dane mogą być zapisywane na <see cref="T:System.Net.Sockets.NetworkStream" />; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> jest `true`, <xref:System.Net.Sockets.NetworkStream> umożliwia wywoływanie <xref:System.Net.Sockets.NetworkStream.Write%2A> metody. Podaj odpowiednie <xref:System.IO.FileAccess> wyliczyć wartość w konstruktorze, aby ustawić czytelności i writability z <xref:System.Net.Sockets.NetworkStream>. <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> Właściwości jest ustawiana podczas <xref:System.Net.Sockets.NetworkStream> został zainicjowany.  
  
   
  
## Examples  
 Poniższy kod przykładowy kontroli <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> do sprawdzenia, czy <xref:System.Net.Sockets.NetworkStream> jest zapisywalna. Następnie wykonuje operację zapisu na <xref:System.Net.Sockets.NetworkStream>.  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
        <altmember cref="T:System.IO.FileAccess" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(int timeout);" />
      <MemberSignature Language="F#" Value="override this.Close : int -&gt; unit" Usage="networkStream.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">32-bitowe całkowita określająca liczbę milisekund do wysyłania pozostałe dane przed zamknięciem.</param>
        <summary>Zamyka <see cref="T:System.Net.Sockets.NetworkStream" /> po upływie określonego czasu, aby umożliwić wysyłanie danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream.Close%2A> Metoda zwalnia zarówno niezarządzane i zarządzane zasoby skojarzone z <xref:System.Net.Sockets.NetworkStream>. Jeśli <xref:System.Net.Sockets.NetworkStream> jest właścicielem odpowiadającego <xref:System.Net.Sockets.Socket>, jest również zamknięte.  
  
 Jeśli <xref:System.Net.Sockets.NetworkStream> został skojarzony z <xref:System.Net.Sockets.TcpClient>, <xref:System.Net.Sockets.NetworkStream.Close%2A> metody zamknąć połączenie TCP, ale nie usuwaj skojarzonego <xref:System.Net.Sockets.TcpClient>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" /> Parametr jest mniejsza niż -1.</exception>
      </Docs>
    </Member>
    <Member MemberName="DataAvailable">
      <MemberSignature Language="C#" Value="public virtual bool DataAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.DataAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DataAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataAvailable : bool" Usage="System.Net.Sockets.NetworkStream.DataAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy dane są dostępne na <see cref="T:System.Net.Sockets.NetworkStream" /> do odczytu.</summary>
        <value>
          <see langword="true" /> Jeśli dane są dostępne na strumień do odczytu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> właściwość, aby określić, czy data jest gotowy do odczytu. Jeśli <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> jest `true`, wywołanie <xref:System.Net.Sockets.NetworkStream.Read%2A> natychmiast kończy pracę. Jeśli host zdalny zamyka lub zamyka połączenie, <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> może zgłaszać <xref:System.Net.Sockets.SocketException>.  
  
   
  
## Examples  
 Poniższy przykładowy kod odczytuje z <xref:System.Net.Sockets.NetworkStream> tak długo, jak dane są dostępne.  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.NetworkStream" /> Jest zamknięty.</exception>
        <exception cref="T:System.IO.IOException">Podstawowa <see cref="T:System.Net.Sockets.Socket" /> jest zamknięty.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Użyj <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> właściwość, aby otrzymać kod błędu i zapoznaj się z usługi Windows Sockets w wersji 2 dokumentacją interfejsu API błąd kodu w bibliotece MSDN szczegółowy opis błędu.</exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="networkStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Net.Sockets.NetworkStream" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez metodę publiczną `Dispose` — metoda i <xref:System.Object.Finalize%2A> metody. `Dispose` wywołuje chronioną metodę `Dispose(Boolean)` metody z `disposing` ustawiono parametr `true`. <xref:System.Object.Finalize%2A> wywołuje `Dispose` z `disposing` ustawioną `false`.  
  
 Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.Net.Sockets.NetworkStream> odwołania. Ta metoda wywołuje `Dispose` metody każdego odwołuje się do obiektu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> można wywoływać wielokrotnie przez inne obiekty. W przypadku przesłaniania <see langword="Dispose(Boolean)" />, nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <see langword="Dispose" />. Aby uzyskać więcej informacji na temat sposobu wdrażania <see langword="Dispose(Boolean)" />, zobacz [implementacja Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see cref="M:System.Object.Finalize" />, zobacz [czyszczenia Resources](~/docs/standard/garbage-collection/unmanaged.md) niezarządzane i [zastąpienie metody Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="networkStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> Reprezentujący wywołanie asynchroniczne.</param>
        <summary>Obsługuje koniec odczyt asynchroniczny.</summary>
        <returns>Liczba bajtów odczytanych z <see cref="T:System.Net.Sockets.NetworkStream" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream.EndRead%2A> Ukończeniu metody asynchronicznej operacji odczytu w <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> metody.  
  
 Przed wywołaniem <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, należy utworzyć metody wywołania zwrotnego, który implementuje <xref:System.AsyncCallback> delegowanie. Ta metoda wywołania zwrotnego wykonuje w oddzielnym wątku i jest wywoływana przez system po <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> zwraca. Metoda wywołania zwrotnego musi obsługiwać <xref:System.IAsyncResult> zwrócony z <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> metody jako parametr.  
  
 W obrębie metody wywołania zwrotnego należy wywołać <xref:System.IAsyncResult.AsyncState%2A> właściwość <xref:System.IAsyncResult> można uzyskać stanu obiekt przekazany do <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> metody. Wyodrębnij odbieranie <xref:System.Net.Sockets.NetworkStream> z tego stanu obiektu. Po uzyskaniu <xref:System.Net.Sockets.NetworkStream>, wywołaj <xref:System.Net.Sockets.NetworkStream.EndRead%2A> metodę, aby pomyślnie wykonać operacji odczytu i zwraca liczbę bajtów do odczytu.  
  
 <xref:System.Net.Sockets.NetworkStream.EndRead%2A> Metody blokuje dopóki dane są dostępne. <xref:System.Net.Sockets.NetworkStream.EndRead%2A> Metoda odczytuje jak najwięcej danych, ponieważ są dostępne do liczby bajtów określonych w `size` parametr <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> metody. Jeśli host zdalny wyłączony <xref:System.Net.Sockets.Socket> zostały odebrane połączenie i wszystkie dostępne dane, <xref:System.Net.Sockets.NetworkStream.EndRead%2A> metoda kończy się natychmiast i zwraca zero bajtów.  
  
 Aby uzyskać odebranych danych, należy wywołać <xref:System.IAsyncResult.AsyncState%2A> właściwość <xref:System.IAsyncResult>i Wyodrębnij buforu zawarte w powstałym obiekcie stanu.  
  
> [!NOTE]
>  Jeśli zostanie wyświetlony <xref:System.IO.IOException>, sprawdź <xref:System.Exception.InnerException%2A> właściwości w celu określenia, czy zostało spowodowane przez <xref:System.Net.Sockets.SocketException>. Jeśli tak, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A> właściwość, aby otrzymać kod błędu i zapoznaj się z usługi Windows Sockets w wersji 2 dokumentacją interfejsu API błąd kodu w bibliotece MSDN szczegółowy opis błędu.  
  
   
  
## Examples  
 W poniższym przykładzie kodu `myReadCallback` został dostarczony do <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> jako metoda wywołania zwrotnego. <xref:System.Net.Sockets.NetworkStream.EndRead%2A> jest zaimplementowana w `myReadCallback` do ukończenia asynchroniczną odczytu uruchomione przez wywołanie <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>.  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#5)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#5)]
 [!code-vb[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="asyncResult" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">Podstawowa <see cref="T:System.Net.Sockets.Socket" /> jest zamknięty.  - lub - wystąpił błąd podczas uzyskiwania dostępu do gniazda.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.NetworkStream" /> Jest zamknięty.</exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="networkStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <see cref="T:System.IAsyncResult" /> Reprezentujący wywołanie asynchroniczne.</param>
        <summary>Obsługuje koniec zapis asynchroniczny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> wykonuje operację asynchronicznego wysyłania w <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.  
  
 Przed wywołaniem <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, należy utworzyć metody wywołania zwrotnego, który implementuje <xref:System.AsyncCallback> delegowanie. Ta metoda wywołania zwrotnego wykonuje w oddzielnym wątku i jest wywoływana przez system po <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> zwraca. Metoda wywołania zwrotnego musi obsługiwać <xref:System.IAsyncResult> zwrócony z <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> metody jako parametr.  
  
 W ramach metody wywołania zwrotnego należy wywołać <xref:System.IAsyncResult.AsyncState%2A> właściwość `IAsyncResult` parametr, aby uzyskać <xref:System.Net.Sockets.NetworkStream>. Po uzyskaniu <xref:System.Net.Sockets.NetworkStream>, można wywołać <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> metodę pomyślnie ukończyć operacji wysyłania i zwraca liczbę bajtów wysłanych.  
  
 <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> Blokuje metody do momentu wysłaniem żądanej liczby bajtów.  
  
> [!NOTE]
>  Jeśli zostanie wyświetlony <xref:System.IO.IOException>, sprawdź <xref:System.Exception.InnerException%2A> właściwości w celu określenia, czy zostało spowodowane przez <xref:System.Net.Sockets.SocketException>. Jeśli tak, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A> właściwość, aby otrzymać kod błędu i zapoznaj się z usługi Windows Sockets w wersji 2 dokumentacją interfejsu API błąd kodu w bibliotece MSDN szczegółowy opis błędu.  
  
   
  
## Examples  
 W poniższym przykładzie kodu `myWriteCallback` został dostarczony do <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> jako metoda wywołania zwrotnego. <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> jest zaimplementowana w `myWriteCallback` do ukończenia wywołania asynchronicznego zapisu uruchomione przez <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">Podstawowa <see cref="T:System.Net.Sockets.Socket" /> jest zamknięty.  - lub - wystąpił błąd podczas zapisywania do sieci.  - lub - wystąpił błąd podczas uzyskiwania dostępu do gniazda.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.NetworkStream" /> Jest zamknięty.</exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~NetworkStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!NetworkStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="networkStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zastępuje <xref:System.Object.Finalize%2A?displayProperty=nameWithType>. Kod aplikacji nie powinny wywoływać tej metody; obiekt <xref:System.Object.Finalize%2A> metoda jest wywoływana automatycznie podczas wyrzucania elementów bezużytecznych, chyba że finalizacji przez moduł garbage collector została wyłączona przez wywołanie do <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> metody.  
  
 Aby uzyskać więcej informacji na temat korzystania z metody Finalize zobacz [metody Finalize i destruktory](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md), i [przesłaniania metody Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3) .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="networkStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Liczba opróżnień danych ze strumienia. Ta metoda jest zarezerwowana do użytku w przyszłości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream.Flush%2A> Implementuje metody <xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType> metody, ale ponieważ <xref:System.Net.Sockets.NetworkStream> jest nie są buforowane, go nie ma wpływu na strumienie sieci. Wywoływanie <xref:System.Net.Sockets.NetworkStream.Flush%2A> — metoda nie zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="networkStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">Token anulowania, używany do propagowania powiadomienie, że można anulować tej operacji.</param>
        <summary>Liczba opróżnień danych ze strumienia jako operację asynchroniczną.</summary>
        <returns>Zwraca <see cref="T:System.Threading.Tasks.Task" />.  Obiekt zadania reprezentujący operację asynchroniczną.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta operacja nie będzie blokować. Zwrócona <xref:System.Threading.Tasks.Task> obiektu ukończy po został opróżniony danych ze strumienia elementu <xref:System.Net.Sockets.NetworkStream> wystąpienia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Sockets.NetworkStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera długość dostępnych danych ze strumienia. Ta właściwość nie jest obecnie obsługiwany i zawsze zwraca <see cref="T:System.NotSupportedException" />.</summary>
        <value>Długość danych ze strumienia.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Użycie tej właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Sockets.NetworkStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia bieżącą pozycję w strumieniu. Ta właściwość nie jest obecnie obsługiwany i zawsze zwraca <see cref="T:System.NotSupportedException" />.</summary>
        <value>Bieżąca pozycja w strumieniu.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Użycie tej właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, size As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="networkStream.Read (buffer, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica typu <see cref="T:System.Byte" /> oznacza to lokalizacja w pamięci, aby przechowywać dane odczytane ze <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
        <param name="offset">Lokalizację w <c>buforu</c> do rozpoczęcia przechowywania danych.</param>
        <param name="size">Liczba bajtów do odczytu z <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
        <summary>Odczytuje dane z <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
        <returns>Liczba bajtów odczytanych z <see cref="T:System.Net.Sockets.NetworkStream" />, lub wartość 0, jeśli gniazda jest zamknięty.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda odczytuje dane do `buffer` parametrów i zwraca liczbę bajtów odczytanych pomyślnie. Jeśli gniazda jest zamknięty, <xref:System.Net.Sockets.NetworkStream.Read%2A> metoda zwraca wartość 0. <xref:System.Net.Sockets.NetworkStream.Read%2A> Operacji odczytuje jak najwięcej danych, ponieważ są dostępne do liczby bajtów określona przez `size` parametru. Jeśli host zdalny zamyka połączenie, a wszystkie dostępne dane zostały odebrane, <xref:System.Net.Sockets.NetworkStream.Read%2A> metoda zakończy się natychmiast i zwraca zero bajtów.  
  
> [!NOTE]
>  Sprawdź, czy <xref:System.Net.Sockets.NetworkStream> jest możliwy do odczytu przez wywołanie metody <xref:System.Net.Sockets.NetworkStream.CanRead%2A> właściwości. Jeśli próba odczytu z <xref:System.Net.Sockets.NetworkStream> jest nieczytelny, otrzymasz <xref:System.IO.IOException>.  
  
> [!NOTE]
>  Jeśli zostanie wyświetlony <xref:System.IO.IOException>, sprawdź <xref:System.Exception.InnerException%2A> właściwości w celu określenia, czy zostało spowodowane przez <xref:System.Net.Sockets.SocketException>. Jeśli tak, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A> właściwość, aby otrzymać kod błędu i zapoznaj się z usługi Windows Sockets w wersji 2 dokumentacją interfejsu API błąd kodu w bibliotece MSDN szczegółowy opis błędu.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> ustalenie, czy dane są dostępne do odczytu. Jeśli dane są dostępne, odczytuje z <xref:System.Net.Sockets.NetworkStream>.  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> Parametru jest mniejszy niż 0.  - lub - <paramref name="offset" /> parametru jest większa niż długość <paramref name="buffer" />.  - lub - <paramref name="size" /> parametru jest mniejszy niż 0.  - lub - <paramref name="size" /> parametru jest większa niż długość <paramref name="buffer" /> minus wartość <paramref name="offset" /> parametru.  - lub - wystąpił błąd podczas uzyskiwania dostępu do gniazda.</exception>
        <exception cref="T:System.IO.IOException">Podstawowa <see cref="T:System.Net.Sockets.Socket" /> jest zamknięty.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.NetworkStream" /> Jest zamknięty.  - lub - wystąpił błąd podczas odczytywania z sieci.</exception>
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
      </Docs>
    </Member>
    <Member MemberName="Readable">
      <MemberSignature Language="C#" Value="protected bool Readable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Readable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Readable" />
      <MemberSignature Language="VB.NET" Value="Protected Property Readable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Readable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Readable : bool with get, set" Usage="System.Net.Sockets.NetworkStream.Readable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Net.Sockets.NetworkStream" /> mogą być odczytywane.</summary>
        <value>
          <see langword="true" /> Aby wskazać, że <see cref="T:System.Net.Sockets.NetworkStream" /> może zostać odczytany; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Musi pochodzić od <xref:System.Net.Sockets.NetworkStream> klasę, aby użyć <xref:System.Net.Sockets.NetworkStream.Readable%2A> właściwości. Jeśli <xref:System.Net.Sockets.NetworkStream.Readable%2A> jest `true`, <xref:System.Net.Sockets.NetworkStream> umożliwia wywoływanie <xref:System.Net.Sockets.NetworkStream.Read%2A> metody. Można także określić, czy <xref:System.Net.Sockets.NetworkStream> jest możliwy sprawdzana jest dostępny publicznie element <xref:System.Net.Sockets.NetworkStream.CanRead%2A> właściwości.  
  
 <xref:System.Net.Sockets.NetworkStream.Readable%2A> Właściwości jest ustawiana podczas <xref:System.Net.Sockets.NetworkStream> został zainicjowany.  
  
   
  
## Examples  
 W poniższym przykładzie kodu `CanCommunicate` sprawdzenia właściwości <xref:System.Net.Sockets.NetworkStream.Readable%2A> właściwości, aby określić, czy <xref:System.Net.Sockets.NetworkStream> jest możliwy do odczytu.  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="networkStream.ReadAsync (buffer, offset, size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="size">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Sockets.NetworkStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas, przez który bloki operacji odczytu, oczekiwanie na dane.</summary>
        <value>A <see cref="T:System.Int32" /> ilość czasu, który określa w milisekundach, jaki ma upłynąć przed operacja odczytu nie powiedzie się. Wartość domyślna to <see cref="F:System.Threading.Timeout.Infinite" />, określa, że operacja odczytu jest nie upłynął limit czasu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli operacja odczytu nie zostanie zakończone w czasie określonym przez tę właściwość, operacji odczytu zgłasza <xref:System.IO.IOException>.  
  
> [!NOTE]
>  Ta właściwość dotyczy tylko Synchroniczne odczyty wykonywane przez wywołanie metody <xref:System.Net.Sockets.NetworkStream.Read%2A> metody. Ta właściwość nie ma wpływu na Asynchroniczne odczyty wykonywane przez wywołanie metody <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia limit czasu odczytu dla strumienia sieci 10 milisekund.  
  
 [!code-csharp[NCLTcpClientSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość jest mniejsza lub równa zero, a nie <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="networkStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Ten parametr nie jest używany.</param>
        <param name="origin">Ten parametr nie jest używany.</param>
        <summary>Ustawia bieżący pozycji strumienia podanej wartości. Ta metoda nie jest obecnie obsługiwany i zawsze zwraca <see cref="T:System.NotSupportedException" />.</summary>
        <returns>Pozycja w strumieniu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Użycie tej właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="networkStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">Ten parametr nie jest używany.</param>
        <summary>Ustawia długość strumienia. Ta metoda zawsze zwraca <see cref="T:System.NotSupportedException" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Użycie tej właściwości.</exception>
      </Docs>
    </Member>
    <Member MemberName="Socket">
      <MemberSignature Language="C#" Value="protected System.Net.Sockets.Socket Socket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Socket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Socket" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Socket As Socket" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Net::Sockets::Socket ^ Socket { System::Net::Sockets::Socket ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Socket : System.Net.Sockets.Socket" Usage="System.Net.Sockets.NetworkStream.Socket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odpowiadającego <see cref="T:System.Net.Sockets.Socket" />.</summary>
        <value>A <see cref="T:System.Net.Sockets.Socket" /> reprezentujący podstawowe połączenie sieciowe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy wywodzące się z <xref:System.Net.Sockets.NetworkStream> tej właściwości można użyć do pobrania odpowiadającego <xref:System.Net.Sockets.Socket>. Użyj odpowiadającego <xref:System.Net.Sockets.Socket> zwrócony z <xref:System.Net.Sockets.NetworkStream.Socket%2A> właściwości, jeśli potrzebujesz dostępu poza <xref:System.Net.Sockets.NetworkStream> udostępnia.  
  
> [!NOTE]
>  Ta właściwość jest dostępna tylko za pośrednictwem tej klasy lub klasy pochodnej.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera odpowiadającego <xref:System.Net.Sockets.Socket> można zweryfikować aktywnego połączenia.  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="networkStream.Write (buffer, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica typu <see cref="T:System.Byte" /> zawierający dane do zapisania <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
        <param name="offset">Lokalizacja w <c>buforu</c> z którego chcesz uruchomić zapisywania danych.</param>
        <param name="size">Liczba bajtów do zapisania do <see cref="T:System.Net.Sockets.NetworkStream" />.</param>
        <summary>Zapisuje dane do <see cref="T:System.Net.Sockets.NetworkStream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.Sockets.NetworkStream.Write%2A> Metody rozpoczyna się od określonego `offset` i wysyła `size` bajtów z zawartości `buffer` do sieci. <xref:System.Net.Sockets.NetworkStream.Write%2A> Metody blokuje momentu wysłania żądanej liczby bajtów lub a <xref:System.Net.Sockets.SocketException> jest generowany. Jeśli zostanie wyświetlony <xref:System.Net.Sockets.SocketException>, użyj <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> właściwość, aby otrzymać kod błędu i zapoznaj się z usługi Windows Sockets w wersji 2 dokumentacją interfejsu API błąd kodu w bibliotece MSDN szczegółowy opis błędu.  
  
> [!NOTE]
>  Sprawdź, czy <xref:System.Net.Sockets.NetworkStream> jest zapisywalny, uzyskując dostęp do <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> właściwości. Przy próbie zapisu <xref:System.Net.Sockets.NetworkStream> to nie jest zapisywalny, otrzymasz <xref:System.IO.IOException>. Jeśli zostanie wyświetlony <xref:System.IO.IOException>, sprawdź <xref:System.Exception.InnerException%2A> właściwości w celu określenia, czy zostało spowodowane przez <xref:System.Net.Sockets.SocketException>.  
  
   
  
## Examples  
 Poniższy kod przykładowy sprawdza, czy <xref:System.Net.Sockets.NetworkStream> jest zapisywalna. Jeśli jest następnie <xref:System.Net.Sockets.NetworkStream.Write%2A> jest używana podczas zapisu małych komunikatów.  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> Parametru jest mniejszy niż 0.  - lub - <paramref name="offset" /> parametru jest większa niż długość <paramref name="buffer" />.  - lub - <paramref name="size" /> parametru jest mniejszy niż 0.  - lub - <paramref name="size" /> parametru jest większa niż długość <paramref name="buffer" /> minus wartość <paramref name="offset" /> parametru.</exception>
        <exception cref="T:System.IO.IOException">Wystąpił błąd podczas zapisywania do sieci.  - lub - wystąpił błąd podczas uzyskiwania dostępu do gniazda.</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.NetworkStream" /> Jest zamknięty.  - lub - wystąpił błąd podczas odczytywania z sieci.</exception>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
      </Docs>
    </Member>
    <Member MemberName="Writeable">
      <MemberSignature Language="C#" Value="protected bool Writeable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Writeable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Writeable" />
      <MemberSignature Language="VB.NET" Value="Protected Property Writeable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Writeable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Writeable : bool with get, set" Usage="System.Net.Sockets.NetworkStream.Writeable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Net.Sockets.NetworkStream" /> jest zapisywalna.</summary>
        <value>
          <see langword="true" /> Jeśli dane mogą być zapisywane do strumienia; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Musi pochodzić od <xref:System.Net.Sockets.NetworkStream> klasę, aby użyć <xref:System.Net.Sockets.NetworkStream.Writeable%2A> właściwości. Jeśli <xref:System.Net.Sockets.NetworkStream.Writeable%2A> jest `true`, <xref:System.Net.Sockets.NetworkStream> umożliwia wywoływanie <xref:System.Net.Sockets.NetworkStream.Write%2A> metody. Można także określić, czy <xref:System.Net.Sockets.NetworkStream> jest zapisywalny, sprawdzając dostępny publicznie <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> właściwości.  
  
 <xref:System.Net.Sockets.NetworkStream.Writeable%2A> Właściwości jest ustawiana podczas <xref:System.Net.Sockets.NetworkStream> został zainicjowany.  
  
   
  
## Examples  
 W poniższym przykładzie kodu `CanCommunicate` sprawdzenia właściwości <xref:System.Net.Sockets.NetworkStream.Writeable%2A> właściwości, aby określić, czy <xref:System.Net.Sockets.NetworkStream> jest zapisywalna.  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Readable" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="networkStream.WriteAsync (buffer, offset, size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="size">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Sockets.NetworkStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas, przez który bloki operacji zapisu, oczekiwanie na dane.</summary>
        <value>A <see cref="T:System.Int32" /> ilość czasu, który określa w milisekundach, jaki ma upłynąć przed operacja zapisu nie powiedzie się. Wartość domyślna to <see cref="F:System.Threading.Timeout.Infinite" />, określa, że operacja zapisu jest nie upłynął limit czasu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli operacja zapisu nie zostanie zakończone w czasie określonym przez tę właściwość, operacji zapisu, zgłasza <xref:System.IO.IOException>.  
  
> [!NOTE]
>  Ta właściwość ma wpływ na operacje zapisu synchronicznego tylko wykonywane przez wywołanie metody <xref:System.Net.Sockets.NetworkStream.Write%2A> metody. Ta właściwość nie ma wpływu na zapis asynchroniczny wykonywane przez wywołanie metody <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia limit czasu zapisu do strumienia sieci 10 milisekund.  
  
 [!code-cpp[NCLTcpServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclTcpServerSync/cpp/tcplistener.cpp#0)]
 [!code-csharp[NCLTcpServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclTcpServerSync/CS/tcplistener.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość jest mniejsza lub równa zero, a nie <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>