<Type Name="PersistenceIOParticipant" FullName="System.Activities.Persistence.PersistenceIOParticipant">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e788c825fb212822c897f4841918a2d40ea7bacb" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36654038" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PersistenceIOParticipant : System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceIOParticipant extends System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Persistence.PersistenceIOParticipant" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PersistenceIOParticipant&#xA;Inherits PersistenceParticipant" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistenceIOParticipant abstract : System::Activities::Persistence::PersistenceParticipant" />
  <TypeSignature Language="F#" Value="type PersistenceIOParticipant = class&#xA;    inherit PersistenceParticipant" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Persistence.PersistenceParticipant</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Pochodne vclass z <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> klasy z metod wykonania danych wejściowych i wyjściowych operacji dodatkowo przechowywanie i ładowanie wystąpienia przepływu pracy przez proces trwałości.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Host wykonuje następujące czynności (lub etapy) po trwałym wystąpienie:  
  
1.  Zbiera wartości utrwalenia.  
  
2.  Mapuje pola wbudowanymi strukturalnych wartości do poszczególnych wartości.  
  
3.  Problemy z <xref:System.Activities.DurableInstancing.SaveWorkflowCommand> dostawcy trwałości.  
  
4.  Wykonuje operacje We/Wy w obrębie transakcji trwałości.  
  
 Host wykonuje etap przed rozpoczęciem kolejnego etapu. Na przykład gdy utrwalanie hosta zbiera wartości od uczestników trwałości przed przejściem do drugiego etapu. W drugim etapie hosta zawiera wszystkie wartości zebranych podczas pierwszego etapu dla wszystkich uczestników trwałości w drugim etapie mapowania. W trzecim etapie hosta zawiera wszystkie zebrane wartości w pierwszego i drugiego etapu dostawcy trwałości podczas wywoływania <xref:System.Activities.DurableInstancing.SaveWorkflowCommand>. Następnie w czwartym etapie hosta zawiera wszystkie zebrane wartości dla wszystkich uczestników we/wy trwałości w obrębie transakcji trwałości.  
  
 Podczas ładowania wystąpienia trwałości, host wykonuje następujące etapy:  
  
1.  Problemy z <xref:System.Activities.DurableInstancing.LoadWorkflowCommand> i <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand> dostawcy trwałości.  
  
2.  Wykonuje operacje We/Wy w obrębie transakcji trwałości.  
  
3.  Publikuje załadować wartości.  
  
 Na najwyższym poziomie, przepływu pracy wystąpienia rozszerzenia wyprowadzonych z <xref:System.Activities.Persistence.PersistenceParticipant> klasy mogą uczestniczyć w pierwszym (zbieranie) i drugie (Map) etapów procesu utrwalanie i trzeciego etapu (Publikuj) proces ładowania.  Wyprowadzanie z klas PersistenceIOParticipant rozszerzeń wystąpienia przepływu pracy Ponadto mogą uczestniczyć w czwartym etapie procesu utrwalanie i drugi etap procesu ładowania (We/Wy).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceIOParticipant (bool isSaveTransactionRequired, bool isLoadTransactionRequired);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isSaveTransactionRequired, bool isLoadTransactionRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (isSaveTransactionRequired As Boolean, isLoadTransactionRequired As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PersistenceIOParticipant(bool isSaveTransactionRequired, bool isLoadTransactionRequired);" />
      <MemberSignature Language="F#" Value="new System.Activities.Persistence.PersistenceIOParticipant : bool * bool -&gt; System.Activities.Persistence.PersistenceIOParticipant" Usage="new System.Activities.Persistence.PersistenceIOParticipant (isSaveTransactionRequired, isLoadTransactionRequired)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isSaveTransactionRequired" Type="System.Boolean" />
        <Parameter Name="isLoadTransactionRequired" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isSaveTransactionRequired">
          <see langword="true" /> Jeśli transakcja jest wymagana dla tej operacji zapisywania. Jeśli <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> obiekt jest tworzony za pomocą tego parametru wartość <see langword="true" />, można ustawić po wywołaniu BeginOnSave Transaction.Current jest gwarancji. Transakcja jest udostępniana między dostawcy trwałości, wszystkie rozszerzenia PersistenceIOParticipant oraz potencjalnie innych uczestników transakcji.</param>
        <param name="isLoadTransactionRequired">
          <see langword="true" /> Jeśli transakcja jest wymagane dla operacji ładowania. Jeśli <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> obiekt jest tworzony za pomocą tego parametru wartość <see langword="true" />, można ustawić po wywołaniu BeginOnLoad Transaction.Current jest gwarancji. Transakcja jest udostępniana między dostawcy trwałości, wszystkie rozszerzenia PersistenceIOParticipant oraz potencjalnie innych uczestników transakcji.</param>
        <summary>Inicjuje wystąpienie klasy <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="protected abstract void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.Abort" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="persistenceIOParticipant.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przerywa oczekujących operacji We/Wy (obciążenia lub Zapisz).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy pochodne, które zastąpić BeginOnSave lub BeginOnLoad i nie może być od razu zawsze ukończyć muszą przesłaniać przerwania. Jeśli przerwania zostanie wywołany, należy anulować wszelkie oczekujące operacje We/Wy. Jeśli operacja została anulowana w ten sposób, odpowiedniej metody End należy zgłosić operationcanceledexception —.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginOnLoad">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginOnLoad (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginOnLoad(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnLoad(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginOnLoad (readWriteValues As IDictionary(Of XName, Object), timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginOnLoad(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOnLoad : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginOnLoad : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceIOParticipant.BeginOnLoad (readWriteValues, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">Słownik wartości odczytu i zapisu załadowanych przez dostawcy trwałości. Odpowiada to zbiór wartości odczytu i zapisu przekazano BeginOnSave najnowszych epizodu trwałości dla tego wystąpienia.</param>
        <param name="timeout">Przedział czasu, w którym można ukończyć operacji bez przekroczeniem limitu czasu.</param>
        <param name="callback">Asynchroniczne wywołanie zwrotne delegata, która odbiera powiadomienia o zakończeniu asynchronicznej operacji ładowania.</param>
        <param name="state">Informacje o stanie skojarzone z operacji asynchronicznej.</param>
        <summary>Rozpoczyna operację asynchroniczną można załadować dodatkowych stanu w połączeniu z wystąpieniem ładowany w sklepie wystąpienia.</summary>
        <returns>Stan operacji asynchronicznej.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginOnSave">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginOnSave (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginOnSave(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginOnSave (readWriteValues As IDictionary(Of XName, Object), writeOnlyValues As IDictionary(Of XName, Object), timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginOnSave(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOnSave : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginOnSave : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceIOParticipant.BeginOnSave (readWriteValues, writeOnlyValues, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="readWriteValues">Słownik wartości odczytu i zapisu pobierane etapami obiektu CollectValues i obiektu MapValues.</param>
        <param name="writeOnlyValues">Słownik tylko do zapisu wartości zbierane etapami obiektu CollectValues i obiektu MapValues.</param>
        <param name="timeout">Przedział czasu, w którym można ukończyć operacji bez przekroczeniem limitu czasu.</param>
        <param name="callback">Delegat asynchroniczne wywołanie zwrotne, która odbiera powiadomienia o ukończeniu operacji asynchronicznej.</param>
        <param name="state">Informacje o stanie skojarzone z operacji asynchronicznej.</param>
        <summary>Rozpoczyna operację asynchroniczną do zapisywania stanu dodatkowe w połączeniu z wystąpieniem są utrwalane w magazynie wystąpień.</summary>
        <returns>Stan operacji asynchronicznej.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOnLoad">
      <MemberSignature Language="C#" Value="protected virtual void EndOnLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndOnLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.EndOnLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EndOnLoad (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EndOnLoad(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndOnLoad : IAsyncResult -&gt; unit&#xA;override this.EndOnLoad : IAsyncResult -&gt; unit" Usage="persistenceIOParticipant.EndOnLoad result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Wynik asynchroniczny zwrócony przez wywołanie do <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" /> metody.</param>
        <summary>Kończy operację asynchroniczną obciążenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndOnSave">
      <MemberSignature Language="C#" Value="protected virtual void EndOnSave (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndOnSave(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceIOParticipant.EndOnSave(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EndOnSave (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EndOnSave(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndOnSave : IAsyncResult -&gt; unit&#xA;override this.EndOnSave : IAsyncResult -&gt; unit" Usage="persistenceIOParticipant.EndOnSave result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Wynik asynchroniczny zwrócony przez wywołanie do <see cref="M:System.Activities.Persistence.PersistenceIOParticipant.BeginOnSave(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" /> metody.</param>
        <summary>Wykonuje asynchroniczną operację zapisywania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>