<Type Name="PersistenceParticipant" FullName="System.Activities.Persistence.PersistenceParticipant">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eff49a6fa1166e060b136d9a92c0e0256da30449" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69324788" /></Metadata><TypeSignature Language="C#" Value="public abstract class PersistenceParticipant" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceParticipant extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Persistence.PersistenceParticipant" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PersistenceParticipant" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistenceParticipant abstract" />
  <TypeSignature Language="F#" Value="type PersistenceParticipant = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f28e4-101">Ta klasa umożliwia jednocześnie <see cref="T:System.Activities.WorkflowApplication" /> i <see cref="T:System.ServiceModel.WorkflowServiceHost" /> uczestnictwo w procesie trwałości.</span><span class="sxs-lookup"><span data-stu-id="f28e4-101">This class allows both <see cref="T:System.Activities.WorkflowApplication" /> and <see cref="T:System.ServiceModel.WorkflowServiceHost" /> to participate in persistence process.</span></span> <span data-ttu-id="f28e4-102">Uczestnik trwałości pochodzi z <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> klasy <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> lub klasy <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> (Klasa pochodna klasy), implementuje metody abstrakcyjne, a następnie Dodaj wystąpienie klasy jako rozszerzenie wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="f28e4-102">A persistence participant derives from the <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> class or the <see cref="T:System.Activities.Persistence.PersistenceIOParticipant" /> class (derived class of the <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> class), implements abstract methods, and then add an instance of the class as a workflow instance extension.</span></span> <span data-ttu-id="f28e4-103"><see cref="T:System.Activities.WorkflowApplication" /> I<see cref="T:System.ServiceModel.WorkflowServiceHost" /> poszukaj takich rozszerzeń podczas utrwalania wystąpienia i Wywołaj odpowiednie metody w odpowiednim czasie.</span><span class="sxs-lookup"><span data-stu-id="f28e4-103">The <see cref="T:System.Activities.WorkflowApplication" /> and <see cref="T:System.ServiceModel.WorkflowServiceHost" /> look for such extensions when persisting an instance and invoke appropriate methods at appropriate times.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f28e4-104">Host wykonuje następujące czynności (lub etapy) w przypadku utrwalania wystąpienia:</span><span class="sxs-lookup"><span data-stu-id="f28e4-104">A host executes the following steps (or stages) when persisting an instance:</span></span>  
  
1.  <span data-ttu-id="f28e4-105">Zbiera wartości, które mają zostać utrwalone.</span><span class="sxs-lookup"><span data-stu-id="f28e4-105">Collects values to be persisted.</span></span>  
  
2.  <span data-ttu-id="f28e4-106">Mapuje pola monolitycznych wartości strukturalnych na poszczególne wartości.</span><span class="sxs-lookup"><span data-stu-id="f28e4-106">Maps fields of monolithic structured values to individual values.</span></span>  
  
3.  <span data-ttu-id="f28e4-107"><xref:System.Activities.DurableInstancing.SaveWorkflowCommand> Wystawia dostawcę trwałości.</span><span class="sxs-lookup"><span data-stu-id="f28e4-107">Issues the <xref:System.Activities.DurableInstancing.SaveWorkflowCommand> to the persistence provider.</span></span>  
  
4.  <span data-ttu-id="f28e4-108">Wykonuje operacje we/wy w ramach transakcji trwałości.</span><span class="sxs-lookup"><span data-stu-id="f28e4-108">Performs I/O under the persistence transaction.</span></span>  
  
 <span data-ttu-id="f28e4-109">Host kończy etap przed rozpoczęciem następnego etapu.</span><span class="sxs-lookup"><span data-stu-id="f28e4-109">A host completes a stage before beginning the next stage.</span></span> <span data-ttu-id="f28e4-110">Na przykład podczas utrwalania Host zbiera wartości ze wszystkich uczestników trwałości przed przejściem do drugiego etapu.</span><span class="sxs-lookup"><span data-stu-id="f28e4-110">For example when persisting, the host collects values from all the persistence participants before moving to the second stage.</span></span> <span data-ttu-id="f28e4-111">Na drugim etapie host dostarcza wszystkie wartości zebrane w pierwszym etapie do wszystkich uczestników trwałości w drugim etapie dla mapowania.</span><span class="sxs-lookup"><span data-stu-id="f28e4-111">In the second stage, the host provides all the values collected in the first stage to all persistence participants in the second stage for mapping.</span></span> <span data-ttu-id="f28e4-112">Na trzecim etapie host udostępnia wszystkie zebrane wartości w pierwszym i drugim etapie do dostawcy trwałości podczas wywoływania <xref:System.Activities.DurableInstancing.SaveWorkflowCommand>.</span><span class="sxs-lookup"><span data-stu-id="f28e4-112">In the third stage, the host provides all the collected values in the first and second stages to the persistence provider when invoking the <xref:System.Activities.DurableInstancing.SaveWorkflowCommand>.</span></span> <span data-ttu-id="f28e4-113">Następnie w czwartym etapie host udostępnia wszystkie zebrane wartości wszystkim uczestnikom operacji we/wy w ramach transakcji trwałości.</span><span class="sxs-lookup"><span data-stu-id="f28e4-113">Then in the fourth stage, the host provides all the collected values to all the persistence IO participants under the persistence transaction.</span></span>  
  
 <span data-ttu-id="f28e4-114">Host wykonuje następujące etapy podczas ładowania wystąpienia trwałości:</span><span class="sxs-lookup"><span data-stu-id="f28e4-114">A host executes the following stages when loading a persistence instance:</span></span>  
  
1.  <span data-ttu-id="f28e4-115">Wystawia <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand> dostawcę trwałości i.<xref:System.Activities.DurableInstancing.LoadWorkflowCommand></span><span class="sxs-lookup"><span data-stu-id="f28e4-115">Issues the <xref:System.Activities.DurableInstancing.LoadWorkflowCommand> and <xref:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand> to the persistence provider.</span></span>  
  
2.  <span data-ttu-id="f28e4-116">Wykonuje operacje we/wy w ramach transakcji trwałości.</span><span class="sxs-lookup"><span data-stu-id="f28e4-116">Performs I/O under the persistence transaction.</span></span>  
  
3.  <span data-ttu-id="f28e4-117">Publikuje załadowane wartości.</span><span class="sxs-lookup"><span data-stu-id="f28e4-117">Publishes the loaded values.</span></span>  
  
 <span data-ttu-id="f28e4-118">Na najwyższym poziomie rozszerzenia wystąpienia przepływu pracy, które pochodzą od <xref:System.Activities.Persistence.PersistenceParticipant> klasy mogą uczestniczyć w pierwszym (zbieraniu) i drugim (mapie) etapów procesu utrwalania, a trzeci etap (Publikuj) procesu ładowania.</span><span class="sxs-lookup"><span data-stu-id="f28e4-118">At the highest level, workflow instance extensions that derive from the <xref:System.Activities.Persistence.PersistenceParticipant> class can participate in the first (Collect) and second (Map) stages of persisting process and the third stage (Publish) of loading process.</span></span>  <span data-ttu-id="f28e4-119">Rozszerzenia wystąpienia przepływu pracy pochodzące z klasy PersistenceIOParticipant mogą dodatkowo uczestniczyć w czwartym etapie procesu utrwalania i drugim etapie procesu ładowania (we/wy).</span><span class="sxs-lookup"><span data-stu-id="f28e4-119">Workflow instance extensions deriving from the PersistenceIOParticipant class can additionally participate in the fourth stage of the persisting process and the second stage of the loading process (I/O).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f28e4-120">Poniższy przykład kodu demonstruje Tworzenie klasy, która pochodzi od <xref:System.Activities.Persistence.PersistenceParticipant>.</span><span class="sxs-lookup"><span data-stu-id="f28e4-120">The following code sample demonstrates creating a class that derives from <xref:System.Activities.Persistence.PersistenceParticipant>.</span></span> <span data-ttu-id="f28e4-121">Ten przykład pochodzi z przykładu [procesu zatrudniania](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md) .</span><span class="sxs-lookup"><span data-stu-id="f28e4-121">This example is from the [Hiring Process](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md) sample.</span></span>  
  
 [!code-csharp[wfs_HiringRequestProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_hiringrequestprocess/cs/hiringrequestpersistenceparticipant.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PersistenceParticipant();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f28e4-122">Inicjuje wystąpienie <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f28e4-122">Initializes an instance of the <see cref="T:System.Activities.Persistence.PersistenceParticipant" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f28e4-123">Poniższy przykład kodu demonstruje Tworzenie klasy, która pochodzi od <xref:System.Activities.Persistence.PersistenceParticipant>.</span><span class="sxs-lookup"><span data-stu-id="f28e4-123">The following code sample demonstrates creating a class that derives from <xref:System.Activities.Persistence.PersistenceParticipant>.</span></span> <span data-ttu-id="f28e4-124">Ten przykład pochodzi z przykładu [procesu zatrudniania](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md) .</span><span class="sxs-lookup"><span data-stu-id="f28e4-124">This example is from the [Hiring Process](~/docs/framework/windows-workflow-foundation/samples/hiring-process.md) sample.</span></span>  
  
 [!code-csharp[wfs_HiringRequestProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_hiringrequestprocess/cs/hiringrequestpersistenceparticipant.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectValues">
      <MemberSignature Language="C#" Value="protected virtual void CollectValues (out System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, out System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CollectValues([out] class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt;&amp; readWriteValues, [out] class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt;&amp; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CollectValues (ByRef readWriteValues As IDictionary(Of XName, Object), ByRef writeOnlyValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CollectValues([Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ % readWriteValues, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ % writeOnlyValues);" />
      <MemberSignature Language="F#" Value="abstract member CollectValues :  *  -&gt; unit&#xA;override this.CollectValues :  *  -&gt; unit" Usage="persistenceParticipant.CollectValues (readWriteValues, writeOnlyValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.IPersistencePipelineModule.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" RefType="out" />
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="readWriteValues"><span data-ttu-id="f28e4-125">Wartości odczytu i zapisu, które mają zostać utrwalone.</span><span class="sxs-lookup"><span data-stu-id="f28e4-125">The read-write values to be persisted.</span></span></param>
        <param name="writeOnlyValues"><span data-ttu-id="f28e4-126">Wartości tylko do zapisu, które mają zostać utrwalone.</span><span class="sxs-lookup"><span data-stu-id="f28e4-126">The write-only values to be persisted.</span></span></param>
        <summary><span data-ttu-id="f28e4-127">Host wywołuje tę metodę na niestandardowym uczestniku trwałości, aby zbierać wartości odczytu i zapisu oraz wartości tylko do zapisu, które mają zostać utrwalone.</span><span class="sxs-lookup"><span data-stu-id="f28e4-127">A host invokes this method on a custom persistence participant to collect read-write values and write-only values, to be persisted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f28e4-128">W przypadku pakietów hosta wartości odczytu i zapisu w pierwszym słowniku <xref:System.Runtime.DurableInstancing.InstanceValue> jako obiekty <xref:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceData*> kolekcji oraz pakiety z wartościami tylko do zapisu w drugim słowniku jako <xref:System.Runtime.DurableInstancing.InstanceValue> obiekty z <xref:System.Runtime.DurableInstancing.InstanceValueOptions.Optional> ustawioną <xref:System.Runtime.DurableInstancing.InstanceValueOptions.WriteOnly> flagą i.</span><span class="sxs-lookup"><span data-stu-id="f28e4-128">The host packages read-write values in the first dictionary as <xref:System.Runtime.DurableInstancing.InstanceValue> objects of an <xref:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceData*> collection, and packages write-only values in the second dictionary as <xref:System.Runtime.DurableInstancing.InstanceValue> objects with <xref:System.Runtime.DurableInstancing.InstanceValueOptions.Optional> and <xref:System.Runtime.DurableInstancing.InstanceValueOptions.WriteOnly> flags set.</span></span> <span data-ttu-id="f28e4-129">Aby uzyskać więcej informacji, zobacz <xref:System.Runtime.DurableInstancing.InstanceValueOptions>.</span><span class="sxs-lookup"><span data-stu-id="f28e4-129">For more information, see <xref:System.Runtime.DurableInstancing.InstanceValueOptions>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f28e4-130">Każda wartość udostępniona przez implementacje <xref:System.Activities.Persistence.PersistenceParticipant.CollectValues%2A> we wszystkich uczestnikach trwałości w jednym odcinku trwałości musi mieć unikatowy XName.</span><span class="sxs-lookup"><span data-stu-id="f28e4-130">Each value provided by implementations of <xref:System.Activities.Persistence.PersistenceParticipant.CollectValues%2A> across all persistence participants within one persistence episode must have a unique XName.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f28e4-131">Poniższy przykład kodu demonstruje użycie CollectValues w klasie, która pochodzi od <xref:System.Activities.Persistence.PersistenceParticipant>.</span><span class="sxs-lookup"><span data-stu-id="f28e4-131">The following code sample demonstrates using CollectValues in a class that derives from <xref:System.Activities.Persistence.PersistenceParticipant>.</span></span> <span data-ttu-id="f28e4-132">Ten przykład pochodzi z przykładu [uczestników trwałości](~/docs/framework/windows-workflow-foundation/persistence-participants.md) .</span><span class="sxs-lookup"><span data-stu-id="f28e4-132">This example is from the [Persistence Participants](~/docs/framework/windows-workflow-foundation/persistence-participants.md) sample.</span></span>  
  
 [!code-csharp[wfs_PersistenceParticipants#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_persistenceparticipants/cs/stepcountextension.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapValues">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; MapValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; MapValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MapValues (readWriteValues As IDictionary(Of XName, Object), writeOnlyValues As IDictionary(Of XName, Object)) As IDictionary(Of XName, Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ MapValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues);" />
      <MemberSignature Language="F#" Value="abstract member MapValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt;&#xA;override this.MapValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt;" Usage="persistenceParticipant.MapValues (readWriteValues, writeOnlyValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.IPersistencePipelineModule.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="readWriteValues"><span data-ttu-id="f28e4-133">Wartości odczytu i zapisu, które mają zostać utrwalone.</span><span class="sxs-lookup"><span data-stu-id="f28e4-133">The read-write values to be persisted.</span></span></param>
        <param name="writeOnlyValues"><span data-ttu-id="f28e4-134">Wartości tylko do zapisu, które mają zostać utrwalone.</span><span class="sxs-lookup"><span data-stu-id="f28e4-134">The write-only values to be persisted.</span></span></param>
        <summary><span data-ttu-id="f28e4-135">Host wywołuje tę metodę po wykonaniu operacji, zbierając wartości z pierwszego etapu.</span><span class="sxs-lookup"><span data-stu-id="f28e4-135">A host invokes this method after it is done with collecting the values in the first stage.</span></span> <span data-ttu-id="f28e4-136">Host przekazuje dwa słowniki tylko do odczytu wartości zebranych ze wszystkich uczestników trwałości podczas pierwszego etapu (CollectValues) do tej metody mapowania.</span><span class="sxs-lookup"><span data-stu-id="f28e4-136">The host forwards two read-only dictionaries of values it collected from all persistence participants during the first stage (CollectValues stage) to this method for mapping.</span></span> <span data-ttu-id="f28e4-137">Host dodaje wartości w słowniku zwracanym przez tę metodę do kolekcji wartości tylko do zapisu.</span><span class="sxs-lookup"><span data-stu-id="f28e4-137">The host adds values in the dictionary returned by this method to the collection of write-only values.</span></span></summary>
        <returns><span data-ttu-id="f28e4-138">Słownik zawierający dodatkowe wartości tylko do zapisu, które mają zostać utrwalone.</span><span class="sxs-lookup"><span data-stu-id="f28e4-138">A dictionary containing additional write-only values to be persisted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f28e4-139">Każda wartość dostarczona przez implementacje wszystkich <xref:System.Activities.Persistence.PersistenceParticipant.MapValues%2A> metod we wszystkich uczestnikach trwałości, w tym wszystkich wartości zebranych w pierwszym etapie (etap CollectValues), musi mieć unikatowy XName.</span><span class="sxs-lookup"><span data-stu-id="f28e4-139">Each value provided by implementations of all the <xref:System.Activities.Persistence.PersistenceParticipant.MapValues%2A> methods across all persistence participants including all the values collected in the first stage (CollectValues stage) must have a unique XName.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f28e4-140">Poniższy przykład kodu demonstruje użycie MapValues w klasie, która pochodzi od <xref:System.Activities.Persistence.PersistenceParticipant>.</span><span class="sxs-lookup"><span data-stu-id="f28e4-140">The following code sample demonstrates using MapValues in a class that derives from <xref:System.Activities.Persistence.PersistenceParticipant>.</span></span> <span data-ttu-id="f28e4-141">Ten przykład pochodzi z przykładowego [procesu zakupów firmy](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) .</span><span class="sxs-lookup"><span data-stu-id="f28e4-141">This example is from the [Corporate Purchase Process](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) sample.</span></span>  
  
 [!code-csharp[wfs_PurchaseProcess#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_purchaseprocess/cs/xmlpersistenceparticipant.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishValues">
      <MemberSignature Language="C#" Value="protected virtual void PublishValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; readWriteValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PublishValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; readWriteValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Persistence.PersistenceParticipant.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PublishValues (readWriteValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PublishValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ readWriteValues);" />
      <MemberSignature Language="F#" Value="abstract member PublishValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; unit&#xA;override this.PublishValues : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, obj&gt; -&gt; unit" Usage="persistenceParticipant.PublishValues readWriteValues" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.IPersistencePipelineModule.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readWriteValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="readWriteValues"><span data-ttu-id="f28e4-142">Wartości odczytu i zapisu, które zostały załadowane z magazynu trwałości.</span><span class="sxs-lookup"><span data-stu-id="f28e4-142">The read-write values that were loaded from the persistence store.</span></span> <span data-ttu-id="f28e4-143">Ten słownik odnosi się do słownika wartości odczytu i zapisu utrwalonych w ostatnim odcinku trwałości.</span><span class="sxs-lookup"><span data-stu-id="f28e4-143">This dictionary corresponds to the dictionary of read-write values persisted in the most recent persistence episode.</span></span></param>
        <summary><span data-ttu-id="f28e4-144">Host wywołuje tę metodę i przekazuje wszystkie załadowane wartości w <see cref="P:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceData" /> kolekcji (wypełnione <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> przez lub <see cref="T:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand" />) jako parametr słownika.</span><span class="sxs-lookup"><span data-stu-id="f28e4-144">The host invokes this method and passes all the loaded values in the <see cref="P:System.Activities.DurableInstancing.SaveWorkflowCommand.InstanceData" /> collection (filled by the <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> or <see cref="T:System.Activities.DurableInstancing.LoadWorkflowByInstanceKeyCommand" />) as a dictionary parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f28e4-145">Poniższy przykład kodu demonstruje użycie PublishValues w klasie, która pochodzi od <xref:System.Activities.Persistence.PersistenceParticipant>.</span><span class="sxs-lookup"><span data-stu-id="f28e4-145">The following code sample demonstrates using PublishValues in a class that derives from <xref:System.Activities.Persistence.PersistenceParticipant>.</span></span> <span data-ttu-id="f28e4-146">Ten przykład pochodzi z przykładu [uczestników trwałości](~/docs/framework/windows-workflow-foundation/persistence-participants.md) .</span><span class="sxs-lookup"><span data-stu-id="f28e4-146">This example is from the [Persistence Participants](~/docs/framework/windows-workflow-foundation/persistence-participants.md) sample.</span></span>  
  
 [!code-csharp[wfs_PersistenceParticipants#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_persistenceparticipants/cs/stepcountextension.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
