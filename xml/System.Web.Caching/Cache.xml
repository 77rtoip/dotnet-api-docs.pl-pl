<Type Name="Cache" FullName="System.Web.Caching.Cache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9898a825a2e90770ebcff9ce24b2c6b0485fddff" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52201121" /></Metadata><TypeSignature Language="C#" Value="public sealed class Cache : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Cache extends System.Object implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.Cache" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cache&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cache sealed : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type Cache = class&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Implementuje pamięci podręcznej dla aplikacji sieci Web. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedno wystąpienie tej klasy jest tworzona dla domeny aplikacji i zachowuje ważność tak długo, jak domeny aplikacji pozostaje aktywna. Informacje na temat wystąpienia tej klasy jest dostępna za pośrednictwem `Cache` właściwość <xref:System.Web.HttpContext> obiektu lub `Cache` właściwość <xref:System.Web.UI.Page> obiektu.  
  
> [!NOTE]
>  <xref:System.Web.Caching.Cache> Klasy nie jest przeznaczona do użytku poza aplikacjami ASP.NET. Był on zaprojektowany i testowane na platformie ASP.NET w celu zapewnienia buforowania dla aplikacji sieci Web. W przypadku innych typów aplikacji, takich jak aplikacje konsoli lub aplikacji Windows Forms, użyj <xref:System.Runtime.Caching.ObjectCache> klasy.  
  
   
  
## Examples  
 Poniższy przykład jest to strona, które ułatwiają użytkownikom wartość przypisana do elementu w pamięci podręcznej, a następnie powiadamia, gdy element zostanie usunięty z pamięci podręcznej. Tworzy `RemovedCallback` metody, która ma podpis z `CacheItemRemovedCallback` delegata, aby powiadomić użytkowników, gdy element pamięci podręcznej został usunięty, przy czym <xref:System.Web.Caching.CacheItemRemovedReason> wyliczeniu, aby sprawdzić, dlaczego został usunięty. Ponadto używa <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> właściwość, aby dodać obiekty do pamięci podręcznej i pobierania wartości tych obiektów. W `AddItemToCache` używa metody <xref:System.Web.Caching.Cache.Add%2A?displayProperty=nameWithType> metody w celu dodania elementu do pamięci podręcznej. Aby użyć `CacheItemRemovedCallback` delegować, należy dodać element do pamięci podręcznej przy użyciu tej metody lub <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> metody, dlatego, że ASP.NET mogą automatycznie przesłać właściwej metody wywołuje, gdy element zostanie usunięty. Niestandardowy `RemoveItemFromCache` metoda używa <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType> metodę, aby jawnie Usuń element z pamięci podręcznej, co powoduje `RemovedCallback` wywoływanej metody.  
  
> [!NOTE]
>  Wystąpienie pamięci podręcznej, która jest dostępna przez poniższy fragment kodu jest elementem członkowskim <xref:System.Web.UI.Page> obiekt, który dziedziczy ten przykład.  
  
 [!code-aspx-csharp[System.Web.Caching Examples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#1)]
 [!code-aspx-vb[System.Web.Caching Examples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#1)]
  
 ]]></format>
    </remarks>
    <threadsafe>Ten typ jest bezpieczny wątkowo.</threadsafe>
    <altmember cref="T:System.Web.HttpContext" />
    <altmember cref="T:System.Web.Caching.CacheDependency" />
    <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
    <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Buforowanie danych aplikacji</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Caching.Cache" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Add(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Add(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemPriority * System.Web.Caching.CacheItemRemovedCallback -&gt; obj" Usage="cache.Add (key, value, dependencies, absoluteExpiration, slidingExpiration, priority, onRemoveCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">Klucz pamięci podręcznej, używany do odwoływać się do elementu.</param>
        <param name="value">Element, który ma zostać dodany do pamięci podręcznej.</param>
        <param name="dependencies">Plik lub pamięci podręcznej klucza zależności dla elementu. Po zmianie wszelkich zależności obiekt staje się nieprawidłowe i zostanie usunięty z pamięci podręcznej. Jeśli nie występują żadne zależności, ten parametr zawiera <see langword="null" />.</param>
        <param name="absoluteExpiration">Czas, w którym dodany obiekt wygaśnie i zostanie usunięty z pamięci podręcznej. Jeśli używasz wygaśniecie, <paramref name="absoluteExpiration" /> parametr musi być <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <param name="slidingExpiration">Interwał między czasem, których nastąpił ostatni dostęp do dodany obiekt i czas, w którym wygasa tego obiektu. Jeśli ta wartość jest odpowiednikiem 20 minut, obiekt wygaśnie i zostanie usunięty z pamięci podręcznej 20 minut od ostatniego jest dostępny. Jeśli używasz bezwzględnych wygaśnięcia <paramref name="slidingExpiration" /> parametr musi być <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="priority">Względny koszt obiektu, wyrażonych w <see cref="T:System.Web.Caching.CacheItemPriority" /> wyliczenia. Pamięć podręczna używa tej wartości podczas jego wyklucza mogą obiektów; obiekty dzięki niższym kosztom są usuwane z pamięci podręcznej przed obiekty o wyższych kosztów.</param>
        <param name="onRemoveCallback">Delegat, który, jeśli podana, jest wywoływana, gdy obiekt zostanie usunięty z pamięci podręcznej. Służy to do powiadamiania aplikacji, które w nich obiekty są usuwane z pamięci podręcznej.</param>
        <summary>Dodaje określony element do <see cref="T:System.Web.Caching.Cache" /> obiektu z zależności, zasady wygasania i priorytet i delegata można użyć, by powiadomić aplikację, gdy wstawiony element zostanie usunięty z <see langword="Cache" />.</summary>
        <returns>Obiekt, który reprezentuje element, który został dodany, jeśli element wcześniej została zapisana w pamięci podręcznej w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołania tej metody zakończy się niepowodzeniem, jeśli element o takim samym `key` parametru jest już przechowywany w `Cache`. Aby zastąpić istniejące `Cache` elementu, korzystając z tych samych `key` parametru, użyj <xref:System.Web.Caching.Cache.Insert%2A> metody.  
  
 Nie można ustawić zarówno `absoluteExpiration` i `slidingExpiration` parametrów. Jeśli planujesz element pamięci podręcznej wygasa o określonej godzinie, należy ustawić `absoluteExpiration` parametru na określony czas i `slidingExpiration` parametr <xref:System.Web.Caching.Cache.NoSlidingExpiration>.  
  
 Jeśli zamierzasz elementu pamięci podręcznej wygaśnie po upływie określonego czasu minęło od ostatniego dostępu do elementu, można ustawić `slidingExpiration` parametr interwał wygasania i `absoluteExpiration` parametr <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
   
  
## Examples  
 Poniższy przykład tworzy `AddItemToCache` metody. Gdy ta metoda jest wywoływana, ustawia `itemRemoved` właściwości `false` i rejestruje `onRemove` metody o nowe wystąpienie klasy <xref:System.Web.Caching.CacheItemRemovedCallback> delegować. Podpis delegata ma być używany w `RemovedCallback` metody. `AddItemToCache` Metoda sprawdza wartość skojarzoną z `Key1` klucza w pamięci podręcznej. Jeśli wartość jest `null`, `Add` metoda umieszcza element w pamięci podręcznej z kluczem `Key1`, wartość `Value 1`, bezwzględnych wygaśnięcia 60 sekund i priorytetów Wysoki pamięci podręcznej. Korzysta również `onRemove` metodę jako argument. Dzięki temu `RemovedCallback` metoda wywoływana, gdy ten element został usunięty z pamięci podręcznej.  
  
> [!NOTE]
>  Aby uzyskać przykłady sposobów użycia <xref:System.Web.Caching.CacheDependency> klasy i <xref:System.Web.Caching.CacheItemRemovedCallback> delegowania, zobacz [buforowanie danych aplikacji](https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)).  
  
 [!code-csharp[System.Web.Caching Examples#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#3)]
 [!code-vb[System.Web.Caching Examples#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" /> Lub <paramref name="value" /> parametr ma wartość <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="slidingExpiration" /> Ustawiona jest mniejsza niż <see langword="TimeSpan.Zero" /> lub więcej niż jeden rok.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="absoluteExpiration" /> i <paramref name="slidingExpiration" /> parametry są ustawione dla elementu, który próbujesz dodać do <see langword="Cache" />.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Buforowanie danych aplikacji</related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.Caching.Cache.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów przechowywanych w pamięci podręcznej.</summary>
        <value>Liczba elementów zapisanych w pamięci podręcznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość może być przydatne podczas monitorowania wydajności aplikacji lub w przypadku używania funkcji śledzenia ASP.NET.  
  
   
  
## Examples  
 W poniższym przykładzie uzyskano wartość `Count` właściwości konwertuje ją na ciąg, a następnie przypisuje ciąg <xref:System.Web.UI.WebControls.Label.Text%2A> właściwość <xref:System.Web.UI.WebControls.Label> formant serwera sieci Web `Label1`.  
  
 [!code-csharp[System.Web.Caching.Cache.Count#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/CS/cachecountcs.aspx#1)]
 [!code-vb[System.Web.Caching.Cache.Count#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/VB/cachecountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EffectivePercentagePhysicalMemoryLimit">
      <MemberSignature Language="C#" Value="public long EffectivePercentagePhysicalMemoryLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePercentagePhysicalMemoryLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePercentagePhysicalMemoryLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectivePercentagePhysicalMemoryLimit : int64" Usage="System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartości procentowej pamięci fizycznej, które mogą być używane przez aplikację, przed uruchomieniem programu ASP.NET, usunięcie elementów z pamięci podręcznej.</summary>
        <value>Procent pamięci fizycznej, które są dostępne dla aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> Właściwość zwraca wartość procentowa pamięci fizycznej, który jest dostępny do aplikacji. Gdy dostępny procent staje się niski, rozpoczyna się algorytm pamięci podręcznej, usuwanie elementów z pamięci podręcznej.  
  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> Właściwość można ustawić za pomocą `percentagePhysicalMemoryUsedLimit` atrybutu [elementu w pamięci podręcznej dla pamięci podręcznej (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/68fa0040-5abf-4c73-93fc-17e3c6af3299) elementu w pliku konfiguracji aplikacji. Jeśli `percentagePhysicalMemoryUsedLimit` atrybut nie jest ustawiony, algorytm pamięci podręcznej określa maksymalny rozmiar pamięci podręcznej i <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> właściwości jest obliczana.  
  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> został wprowadzony w .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      </Docs>
    </Member>
    <Member MemberName="EffectivePrivateBytesLimit">
      <MemberSignature Language="C#" Value="public long EffectivePrivateBytesLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePrivateBytesLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePrivateBytesLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePrivateBytesLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectivePrivateBytesLimit : int64" Usage="System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę bajtów dostępnych dla pamięci podręcznej.</summary>
        <value>Liczba bajtów dostępnych dla pamięci podręcznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> Właściwość zwraca liczbę bajtów, które mogą być używane w procesie aplikacji. Po osiągnięciu tego limitu algorytm pamięci podręcznej rozpoczyna agresywnie Oczyszczanie pamięci podręcznej.  
  
 <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> Właściwość można ustawić za pomocą `privateBytesLimit` atrybutu [elementu w pamięci podręcznej dla pamięci podręcznej (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/68fa0040-5abf-4c73-93fc-17e3c6af3299) elementu w pliku konfiguracji aplikacji. Gdy `privateBytesLimit` atrybut nie jest ustawiony, algorytm pamięci podręcznej określa maksymalny rozmiar pamięci podręcznej i <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> właściwość zawiera rozmiar wybrany przez algorytm.  
  
   
  
## Examples  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Get(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Get : string -&gt; obj" Usage="cache.Get key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Identyfikator elementu pamięci podręcznej do pobrania.</param>
        <summary>Pobiera określony element z <see cref="T:System.Web.Caching.Cache" /> obiektu.</summary>
        <returns>Element pobrany pamięci podręcznej lub <see langword="null" /> Jeśli klucz nie zostanie znaleziony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak można pobrać wartości, formant serwera ASP.NET pola tekstowego w pamięci podręcznej.  
  
 [!code-csharp[Classic Cache.Get Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Get Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Buforowanie danych aplikacji</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="cache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera słownik modułu wyliczającego, używany do iterowania ustawień klucza i wartości zawartych w pamięci podręcznej.</summary>
        <returns>Moduł wyliczający do iterowania po <see cref="T:System.Web.Caching.Cache" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elementy można dodać do lub usunięta z pamięci podręcznej, gdy ta metoda jest wyliczanie elementów.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Collections.IDictionaryEnumerator> obiektu `CacheEnum`przy użyciu `GetEnumerator` metody. Moduł wyliczający przechodzi przez pamięć podręczną, konwertuje wartość każdy element pamięci podręcznej, a następnie zapisuje wartości do strony formularzy sieci Web.  
  
 [!code-csharp[Cache.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Cache.GetEnumerator/CS/getenumcs.aspx#1)]
 [!code-vb[Cache.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Cache.GetEnumerator/VB/getenumvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wstawia element do <see cref="T:System.Web.Caching.Cache" /> obiektu. Użyj jednej z wersji tej metody w celu zastąpienia istniejącego <see langword="Cache" /> element o takim samym <paramref name="key" /> parametru.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj -&gt; unit" Usage="cache.Insert (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">Klucz pamięci podręcznej, używany do odwoływać się do elementu.</param>
        <param name="value">Obiekt, który ma zostać wstawiony do pamięci podręcznej.</param>
        <summary>Wstawia element do <see cref="T:System.Web.Caching.Cache" /> obiektu przy użyciu klucza pamięci podręcznej, aby odwoływać się do jego lokalizacji, przy użyciu wartości domyślnych, dostarczone przez <see cref="T:System.Web.Caching.CacheItemPriority" /> wyliczenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zastąpi istniejący element pamięci podręcznej, w których klucz pasuje `key` parametru. Obiektów dodanych do pamięci podręcznej przy użyciu tego przeciążenia `Insert` metoda dodaje się bez zależności pliku lub buforu, priorytet <xref:System.Web.Caching.CacheItemPriority.Default>, przedłużanie ważności wartość <xref:System.Web.Caching.Cache.NoSlidingExpiration>, a wartość bezwzględna wygaśnięcia <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak wstawianie elementu do pamięci podręcznej aplikacji.  
  
 [!code-csharp[Classic Cache.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" /> Lub <paramref name="value" /> parametr <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Buforowanie danych aplikacji</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency -&gt; unit" Usage="cache.Insert (key, value, dependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
      </Parameters>
      <Docs>
        <param name="key">Klucz pamięci podręcznej, używany do identyfikowania elementu.</param>
        <param name="value">Obiekt, który ma zostać wstawiony w pamięci podręcznej.</param>
        <param name="dependencies">Plik lub pamięci podręcznej klucza zależności dla wstawionych obiektu. Po zmianie wszelkich zależności obiekt staje się nieprawidłowe i zostanie usunięty z pamięci podręcznej. Jeśli nie występują żadne zależności, ten parametr zawiera <see langword="null" />.</param>
        <summary>Wstawienie obiektu do <see cref="T:System.Web.Caching.Cache" /> zawierający plik lub kluczem zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zastąpi istniejący element pamięci podręcznej, w których klucz pasuje `key` parametru. Obiektów dodanych do pamięci podręcznej przy użyciu tego przeciążenia `Insert` metoda dodaje się bez zależności pliku lub buforu, priorytet <xref:System.Web.Caching.CacheItemPriority.Default>, przedłużanie ważności wartość <xref:System.Web.Caching.Cache.NoSlidingExpiration>, a wartość bezwzględna wygaśnięcia <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak wstawianie elementu do pamięci podręcznej aplikacji z zależnością pamięci podręcznej w pliku konfiguracji XML.  
  
 [!code-csharp[Classic Cache.Insert1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" /> Lub <paramref name="value" /> parametr <see langword="null" />.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="key">Klucz pamięci podręcznej, można odwołać się do obiektu.</param>
        <param name="value">Obiekt, który ma zostać wstawiony w pamięci podręcznej.</param>
        <param name="dependencies">Plik lub pamięci podręcznej klucza zależności dla wstawionych obiektu. Po zmianie wszelkich zależności obiekt staje się nieprawidłowe i zostanie usunięty z pamięci podręcznej. Jeśli nie występują żadne zależności, ten parametr zawiera <see langword="null" />.</param>
        <param name="absoluteExpiration">Czas, jaką wstawiony obiekt wygaśnie i zostanie usunięty z pamięci podręcznej. Aby uniknąć możliwych problemów przy użyciu czasu lokalnego, takie jak zmiany od czasu standardowego do czasu letniego, użyj <see cref="P:System.DateTime.UtcNow" /> zamiast <see cref="P:System.DateTime.Now" /> dla wartości tego parametru. Jeśli używasz bezwzględnych wygaśnięcia <paramref name="slidingExpiration" /> parametr musi być <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="slidingExpiration">Interwał czasu ostatniego dostępu do obiektu wstawiony i czas, w którym wygasa tego obiektu. Jeśli ta wartość jest odpowiednikiem 20 minut, obiekt wygaśnie i usunięte z pamięci podręcznej 20 minut od ostatniego dostępu. Jeśli używasz wygaśniecie, <paramref name="absoluteExpiration" /> parametr musi być <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <summary>Wstawienie obiektu do <see cref="T:System.Web.Caching.Cache" /> z zasadami wygasania i zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda spowoduje zastąpienie istniejącego `Cache` element o takim samym `key` parametru.  
  
 Jeśli `slidingExpiration` parametr ma wartość <xref:System.Web.Caching.Cache.NoSlidingExpiration>, przedłużanie ważności jest wyłączona. Jeśli ustawisz `slidingExpiration` parametru na wartość większą niż <xref:System.TimeSpan.Zero>, `absoluteExpiration` parametr ma wartość <xref:System.DateTime.Now%2A> plus wartość znajdująca się na `slidingExpiration` parametru. Jeśli wymagana jest element z pamięci podręcznej przed czas określony przez `absoluteExpiration` parametru, elementu zostanie umieszczona w pamięci podręcznej ponownie i `absoluteExpiration` zostanie ponownie ustawiona `DateTime.Now` plus wartość znajdująca się na `slidingExpiration` parametru. Jeśli element nie jest wymagana z pamięci podręcznej przed datą z `absoluteExpiration` parametru, elementu zostanie usunięty z pamięci podręcznej. . Element dodany do pamięci podręcznej, za pomocą tego przeciążenia metody insert jest wstawiany z priorytetem <xref:System.Web.Caching.CacheItemPriority.Default>.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak wstawianie elementu do pamięci podręcznej aplikacji przy użyciu bezwzględnych wygaśnięcia.  
  
> [!NOTE]
>  Ponieważ ta forma `Insert` metoda obsługuje zależności pamięci podręcznej, jeśli element nie ma zależności, należy zadeklarować `dependency` jako parametr `null` (`Nothing` w języku Visual Basic) w rozdzielana przecinkami lista parametrów.  
  
 [!code-csharp[Classic Cache.Insert2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#1)]  
  
 Poniższy przykład pokazuje, jak wstawianie elementu do pamięci podręcznej przy wygaśniecie.  
  
 [!code-csharp[Classic Cache.Insert2 Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.Insert2 Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" /> Lub <paramref name="value" /> parametr <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Możesz ustawić <paramref name="slidingExpiration" /> parametr do mniej niż <see langword="TimeSpan.Zero" /> lub równoważny więcej niż jeden rok.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="absoluteExpiration" /> i <paramref name="slidingExpiration" /> parametry są ustawione dla elementu, który próbujesz dodać do <see langword="Cache" />.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Buforowanie danych aplikacji</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemUpdateCallback onUpdateCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, class System.Web.Caching.CacheItemUpdateCallback onUpdateCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, onUpdateCallback As CacheItemUpdateCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemUpdateCallback ^ onUpdateCallback);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemUpdateCallback -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration, onUpdateCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="onUpdateCallback" Type="System.Web.Caching.CacheItemUpdateCallback" />
      </Parameters>
      <Docs>
        <param name="key">Klucz pamięci podręcznej, służący do odwoływać się do obiektu.</param>
        <param name="value">Obiekt do wstawienia do pamięci podręcznej.</param>
        <param name="dependencies">Plik lub pamięci podręcznej klucza zależności dla elementu. Po zmianie wszelkich zależności obiekt staje się nieprawidłowe i zostanie usunięty z pamięci podręcznej. Jeśli nie występują żadne zależności, ten parametr zawiera <see langword="null" />.</param>
        <param name="absoluteExpiration">Czas, jaką wstawiony obiekt wygaśnie i zostanie usunięty z pamięci podręcznej. Aby uniknąć możliwych problemów przy użyciu czasu lokalnego, takie jak zmiany od czasu standardowego do czasu letniego, użyj <see cref="P:System.DateTime.UtcNow" /> zamiast <see cref="P:System.DateTime.Now" /> dla wartości tego parametru. Jeśli używasz bezwzględnych wygaśnięcia <paramref name="slidingExpiration" /> parametru musi być równa <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="slidingExpiration">Interwał między czas ostatniego dostępu do obiektu w pamięci podręcznej i czas, w którym wygasa tego obiektu. Jeśli ta wartość jest odpowiednikiem 20 minut, obiekt wygaśnie i usunięte z pamięci podręcznej 20 minut od ostatniego dostępu. Jeśli używasz wygaśniecie, <paramref name="absoluteExpiration" /> parametru musi być równa <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <param name="onUpdateCallback">Delegat, który zostanie wywołany, zanim obiekt zostanie usunięty z pamięci podręcznej. Możesz użyć tego, aby zaktualizować element pamięci podręcznej i upewnij się, że nie został on usunięty z pamięci podręcznej.</param>
        <summary>Wstawienie obiektu do <see cref="T:System.Web.Caching.Cache" /> obiektu wraz z zależnościami, zasadami wygasania i delegat, który można użyć, by powiadomić aplikację, zanim element zostanie usunięty z pamięci podręcznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.Insert%2A> Metoda umożliwia wstawianie nowego elementu w pamięci podręcznej i podasz delegata, która jest wywoływana przed usunięciem elementu z pamięci podręcznej. Dla delegata możesz zaktualizować element pamięci podręcznej i tym samym zapobiec usuwana z pamięci podręcznej.  
  
 Ta metoda spowoduje zastąpienie istniejącego `Cache` element o takim samym `key` parametru.  
  
 Nie można ustawić zarówno `absoluteExpiration` i `slidingExpiration` parametrów. Jeśli planujesz element pamięci podręcznej wygasa o określonej godzinie, należy ustawić `absoluteExpiration` parametru na określony czas i `slidingExpiration` parametr <xref:System.Web.Caching.Cache.NoSlidingExpiration>.  
  
 Jeśli zamierzasz elementu pamięci podręcznej wygasa po pewien okres czasu od momentu elementu nastąpił ostatni dostęp do, możesz ustawić `slidingExpiration` parametr, interwał wygasania, a wartość `absoluteExpiration` parametr <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" />, <paramref name="value" />, Lub <paramref name="onUpdateCallback" /> parametr <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Możesz ustawić <paramref name="slidingExpiration" /> parametr do mniej niż <see langword="TimeSpan.Zero" /> lub równoważny więcej niż jeden rok.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="absoluteExpiration" /> i <paramref name="slidingExpiration" /> parametry są ustawione dla elementu, który próbujesz dodać do <see langword="Cache" />.  
  
—lub— 
<paramref name="dependencies" /> Parametr jest <see langword="null" />i <paramref name="absoluteExpiration" /> parametr ma wartość <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />i <paramref name="slidingExpiration" /> parametr ma wartość <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</exception>
        <altmember cref="T:System.Web.Caching.CacheItemUpdateCallback" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemPriority * System.Web.Caching.CacheItemRemovedCallback -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration, priority, onRemoveCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">Klucz pamięci podręcznej, można odwołać się do obiektu.</param>
        <param name="value">Obiekt, który ma zostać wstawiony w pamięci podręcznej.</param>
        <param name="dependencies">Plik lub pamięci podręcznej klucza zależności dla elementu. Po zmianie wszelkich zależności obiekt staje się nieprawidłowe i zostanie usunięty z pamięci podręcznej. Jeśli nie występują żadne zależności, ten parametr zawiera <see langword="null" />.</param>
        <param name="absoluteExpiration">Czas, jaką wstawiony obiekt wygaśnie i zostanie usunięty z pamięci podręcznej. Aby uniknąć możliwych problemów przy użyciu czasu lokalnego, takie jak zmiany od czasu standardowego do czasu letniego, użyj <see cref="P:System.DateTime.UtcNow" /> zamiast <see cref="P:System.DateTime.Now" /> dla wartości tego parametru. Jeśli używasz bezwzględnych wygaśnięcia <paramref name="slidingExpiration" /> parametr musi być <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="slidingExpiration">Interwał między nastąpił ostatni dostęp do obiektu wstawiono czas i czas, w którym wygasa tego obiektu. Jeśli ta wartość jest odpowiednikiem 20 minut, obiekt wygaśnie i usunięte z pamięci podręcznej 20 minut od ostatniego dostępu. Jeśli używasz wygaśniecie, <paramref name="absoluteExpiration" /> parametr musi być <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <param name="priority">Koszt obiektu względem innych jednostek przechowywanych w pamięci podręcznej, wyrażonych w <see cref="T:System.Web.Caching.CacheItemPriority" /> wyliczenia. Ta wartość jest używana przez pamięć podręczną, gdy jej wyklucza mogą obiektów; obiekty dzięki niższym kosztom są usuwane z pamięci podręcznej przed obiekty o wyższych kosztów.</param>
        <param name="onRemoveCallback">Delegat, który, jeśli podany, zostanie wywołana, gdy obiekt zostanie usunięty z pamięci podręcznej. Służy to do powiadamiania aplikacji, które w nich obiekty są usuwane z pamięci podręcznej.</param>
        <summary>Wstawienie obiektu do <see cref="T:System.Web.Caching.Cache" /> obiektu z zależności, zasady wygasania i priorytet i delegata można użyć, by powiadomić aplikację, gdy wstawiony element zostanie usunięty z <see langword="Cache" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda spowoduje zastąpienie istniejącego `Cache` element o takim samym `key` parametru.  
  
 Nie można ustawić zarówno `absoluteExpiration` i `slidingExpiration` parametrów. Jeśli planujesz element pamięci podręcznej wygasa o określonej godzinie, należy ustawić `absoluteExpiration` parametru na określony czas i `slidingExpiration` parametr <xref:System.Web.Caching.Cache.NoSlidingExpiration>.  
  
 Jeśli zamierzasz elementu pamięci podręcznej wygaśnie po upływie określonego czasu minęło od czasu ostatniego dostępu do elementu, można ustawić `slidingExpiration` parametr interwał wygasania i `absoluteExpiration` parametr <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak można przypisać elementu wysoki priorytet, wstawiając w swojej aplikacji `Cache` obiektu.  
  
> [!NOTE]
>  Aby uzyskać więcej informacji o sposobie używania tej metody za pomocą <xref:System.Web.Caching.CacheItemRemovedCallback> delegowania, zobacz [jak: powiadomienie aplikacji gdy element zostanie usunięty z pamięci podręcznej](https://msdn.microsoft.com/library/38c33aa0-afe9-40ba-a1a4-1ebab95286ef).  
  
 [!code-csharp[Classic Cache.Insert3 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert3 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" /> Lub <paramref name="value" /> parametr <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Możesz ustawić <paramref name="slidingExpiration" /> parametr do mniej niż <see langword="TimeSpan.Zero" /> lub równoważny więcej niż jeden rok.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="absoluteExpiration" /> i <paramref name="slidingExpiration" /> parametry są ustawione dla elementu, który próbujesz dodać do <see langword="Cache" />.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Buforowanie danych aplikacji</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.Caching.Cache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">A <see cref="T:System.String" /> obiekt reprezentujący klucz elementu pamięci podręcznej.</param>
        <summary>Pobiera lub ustawia element pamięci podręcznej w określonym kluczu.</summary>
        <value>Element określony w pamięci podręcznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do pobrania wartości element określony w pamięci podręcznej lub można dodać elementu, jak i klucz dla niego w pamięci podręcznej. Dodawanie pamięci podręcznej elementu przy użyciu <xref:System.Web.Caching.Cache.Item%2A> właściwość jest równoważne z wywoływaniem <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 W poniższym przykładzie użyto `Item` właściwość służąca do pobierania wartości skojarzonych z obiektu w pamięci podręcznej `Key1` klucza. Następnie używa <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType> metodę, aby zapisać wartość i tekst wprowadzający i elementu B HTML do strony formularzy sieci Web.  
  
 [!code-csharp[System.Web.Caching Examples#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#5)]
 [!code-vb[System.Web.Caching Examples#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#5)]  
  
 Poniższy przykład ilustruje używanie tej właściwości, aby wstawić wartość pola tekstowego do pamięci podręcznej.  
  
 [!code-csharp[Classic Cache.this Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.this Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.this Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.this Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Buforowanie danych aplikacji</related>
      </Docs>
    </Member>
    <Member MemberName="NoAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime NoAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoAbsoluteExpiration As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoAbsoluteExpiration : DateTime" Usage="System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Używane w <paramref name="absoluteExpiration" /> parametru w <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" /> wywołania metody, aby wskazać elementu nigdy nie wygaśnie. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku użycia, w tym polu ustawia `absoluteExpiration` równa parametr <xref:System.DateTime.MaxValue>, który jest stała reprezentująca największych możliwych `DateTime` wartość 12/31/9999 11:59:59 PM.  
  
   
  
## Examples  
 Poniższy przykład pokazuje sposób użycia `NoAbsoluteExpiration` pola, aby wyłączyć bezwzględnych wygaśnięcia podczas wstawiania element `Cache`.  
  
 [!code-csharp[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoSlidingExpiration : TimeSpan" Usage="System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Używane jako <paramref name="slidingExpiration" /> parametru w <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" /> lub <see cref="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" /> wywołania metody można wyłączyć przewijania wygasanie ważności poświadczeń. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku użycia, w tym polu ustawia `slidingExpiration` parametr <xref:System.TimeSpan.Zero?displayProperty=nameWithType> pola, które ma stałą wartość zero. Element pamięci podręcznej wygasa zgodnie z `absoluteExpiration` parametr skojarzony z `Insert` lub `Add` wywołania metody.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak dodać element do przy użyciu metody Insert <xref:System.Web.Caching.Cache> przy użyciu `NoSlidingExpiration` pola.  
  
 [!code-csharp[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.TimeSpan.Zero" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public object Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; obj" Usage="cache.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">A <see cref="T:System.String" /> identyfikator elementu pamięci podręcznej do usunięcia.</param>
        <summary>Usuwa określony element z aplikacji <see cref="T:System.Web.Caching.Cache" /> obiektu.</summary>
        <returns>Element usunięty z <see langword="Cache" />. Jeśli wartość parametru klucza nie zostanie znaleziony, zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy `RemoveItemFromCache` metody. Gdy ta metoda jest wywoływana, używa <xref:System.Web.Caching.Cache.Item%2A> właściwość do sprawdzenia, czy pamięć podręczna zawiera obiekt, który jest skojarzony z `Key1` wartość klucza. Jeśli tak jest, `Remove` metoda jest wywoływana, aby usunąć ten obiekt.  
  
 [!code-csharp[System.Web.Caching Examples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#4)]
 [!code-vb[System.Web.Caching Examples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Buforowanie danych aplikacji</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający, który można wykonać iterację <see cref="T:System.Web.Caching.Cache" /> obiektu kolekcji.</summary>
        <returns>Moduł wyliczający, który można wykonać iterację <see cref="T:System.Web.Caching.Cache" /> obiektu kolekcji.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>