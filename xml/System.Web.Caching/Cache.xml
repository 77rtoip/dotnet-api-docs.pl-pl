<Type Name="Cache" FullName="System.Web.Caching.Cache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b20db8e7e7f26c22b439e39913f75678bff9dc1c" /><Meta Name="ms.sourcegitcommit" Value="f991677a7374c45590a432ff7ab830beb05f2ccd" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/27/2019" /><Meta Name="ms.locfileid" Value="68591351" /></Metadata><TypeSignature Language="C#" Value="public sealed class Cache : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Cache extends System.Object implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.Cache" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cache&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cache sealed : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type Cache = class&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Implementuje pamięć podręczną dla aplikacji sieci Web. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedno wystąpienie tej klasy jest tworzone dla każdej domeny aplikacji i pozostaje ważne, dopóki domena aplikacji pozostaje aktywna. Informacje o wystąpieniu tej klasy są dostępne za `Cache` pomocą właściwości <xref:System.Web.HttpContext> obiektu <xref:System.Web.UI.Page> lub `Cache` właściwości obiektu.  
  
> [!NOTE]
>  <xref:System.Web.Caching.Cache> Klasa nie jest przeznaczona do użycia poza aplikacjami ASP.NET. Została zaprojektowana i przetestowana pod kątem użycia w programie ASP.NET, aby zapewnić buforowanie dla aplikacji sieci Web. W przypadku innych typów aplikacji, takich jak aplikacje konsolowe lub Windows Forms aplikacje, użyj <xref:System.Runtime.Caching.ObjectCache> klasy.  
  
   
  
## Examples  
 Poniższy przykład to strona, która pokazuje użytkownikom wartość przypisaną do elementu w pamięci podręcznej, a następnie powiadamia je, gdy element zostanie usunięty z pamięci podręcznej. Tworzy `RemovedCallback` metodę, która ma podpis `CacheItemRemovedCallback` delegata, w celu powiadomienia użytkowników o usunięciu elementu pamięci podręcznej i używa <xref:System.Web.Caching.CacheItemRemovedReason> wyliczenia do poinformowania o tym, dlaczego został usunięty. Ponadto używa <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> właściwości, aby dodać obiekty do pamięci podręcznej i pobrać wartość tych obiektów. W metodzie <xref:System.Web.Caching.Cache.Add%2A?displayProperty=nameWithType> używa metody, aby dodać element do pamięci podręcznej. `AddItemToCache` Aby użyć `CacheItemRemovedCallback` delegata, należy dodać element do pamięci podręcznej za pomocą tej metody <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> lub metody, tak że ASP.NET może automatycznie wprowadzać odpowiednie wywołania metody po usunięciu elementu. Metoda niestandardowa `RemoveItemFromCache` <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType> używa metody w celu jawnego usunięcia elementu z pamięci podręcznej `RemovedCallback` , co powoduje wywołanie metody.  
  
> [!NOTE]
>  Wystąpienie pamięci podręcznej, do której uzyskuje się dostęp za pomocą poniższego <xref:System.Web.UI.Page> fragmentu kodu, jest członkiem obiektu, który ten przykład dziedziczy.  
  
 [!code-aspx-csharp[System.Web.Caching Examples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#1)]
 [!code-aspx-vb[System.Web.Caching Examples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#1)]
  
 ]]></format>
    </remarks>
    <threadsafe>Ten typ jest bezpieczny wątkowo.</threadsafe>
    <altmember cref="T:System.Web.HttpContext" />
    <altmember cref="T:System.Web.Caching.CacheDependency" />
    <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
    <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Buforowanie danych aplikacji</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Caching.Cache" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Add(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Add(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemPriority * System.Web.Caching.CacheItemRemovedCallback -&gt; obj" Usage="cache.Add (key, value, dependencies, absoluteExpiration, slidingExpiration, priority, onRemoveCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">Klucz pamięci podręcznej używany do odwoływania się do elementu.</param>
        <param name="value">Element, który ma zostać dodany do pamięci podręcznej.</param>
        <param name="dependencies">Zależności między plikiem lub pamięcią podręczną dla elementu. Po zmianie zależności obiekt jest nieprawidłowy i zostanie usunięty z pamięci podręcznej. Jeśli nie ma żadnych zależności, ten parametr zawiera <see langword="null" />.</param>
        <param name="absoluteExpiration">Godzina, o której dodany obiekt wygaśnie i zostanie usunięty z pamięci podręcznej. Jeśli używasz okresu ważności przewijania, <paramref name="absoluteExpiration" /> parametr musi być. <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /></param>
        <param name="slidingExpiration">Interwał między ostatnim czasem ostatniego dostępu do dodanego obiektu a czasem wygaśnięcia tego obiektu. Jeśli ta wartość jest odpowiednikiem 20 minut, obiekt wygasa i zostanie usunięty z pamięci podręcznej 20 minut od momentu ostatniego dostępu. Jeśli używasz bezwzględnego wygaśnięcia, <paramref name="slidingExpiration" /> parametr musi być. <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /></param>
        <param name="priority">Względny koszt obiektu, wyrażony przez <see cref="T:System.Web.Caching.CacheItemPriority" /> Wyliczenie. Pamięć podręczna używa tej wartości podczas wykluczania obiektów; obiekty z niższym kosztem są usuwane z pamięci podręcznej przed obiektami o wyższym koszcie.</param>
        <param name="onRemoveCallback">Delegat, który, jeśli jest podany, jest wywoływany, gdy obiekt zostanie usunięty z pamięci podręcznej. Służy do powiadamiania aplikacji o usunięciu obiektów z pamięci podręcznej.</param>
        <summary>Dodaje określony element do <see cref="T:System.Web.Caching.Cache" /> obiektu z zależnościami, zasadami wygasania i priorytetów oraz delegata, którego można użyć do powiadomienia aplikacji po usunięciu wstawionego elementu <see langword="Cache" />z.</summary>
        <returns>Obiekt, który reprezentuje element, który został dodany, jeśli element został wcześniej zapisany w pamięci podręcznej; w przeciwnym razie. <see langword="null" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołania tej metody zakończą się niepowodzeniem w trybie dyskretnym, `key` `Cache`Jeśli element z tym samym parametrem jest już przechowywany w elemencie. Aby zastąpić istniejący `Cache` element przy użyciu tego samego `key` parametru, użyj <xref:System.Web.Caching.Cache.Insert%2A> metody.  
  
 Nie można ustawić `absoluteExpiration` parametrów i `slidingExpiration` . Jeśli zamierzasz wygaśnieć element pamięci podręcznej w określonym czasie, ustaw `absoluteExpiration` parametr na określony czas, `slidingExpiration` a parametr na <xref:System.Web.Caching.Cache.NoSlidingExpiration>.  
  
 Jeśli zamierzasz wygasnąć element pamięci podręcznej po upływie określonego czasu od momentu ostatniego dostępu do elementu, ustaw `slidingExpiration` parametr na wartość interwału wygaśnięcia `absoluteExpiration` i parametr na <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
   
  
## Examples  
 Poniższy przykład tworzy `AddItemToCache` metodę. Gdy ta metoda jest `itemRemoved` wywoływana, ustawia właściwość na `false` i rejestruje `onRemove` metodę z nowym wystąpieniem <xref:System.Web.Caching.CacheItemRemovedCallback> delegata. Podpis delegata jest używany w `RemovedCallback` metodzie. Następnie metoda sprawdza wartość skojarzoną `Key1` z kluczem w pamięci podręcznej. `AddItemToCache` Jeśli `null`wartość to `Add` , metoda umieszcza element w `Key1`pamięci podręcznej z kluczem, wartością `Value 1`, bezwzględnym wygaśnięciem 60 sekund i wysokim priorytetem pamięci podręcznej. Używa `onRemove` również metody jako argumentu. Umożliwia to wywoływanie metody, `RemovedCallback` gdy ten element zostanie usunięty z pamięci podręcznej.  
  
> [!NOTE]
>  Przykłady użycia <xref:System.Web.Caching.CacheDependency> klasy <xref:System.Web.Caching.CacheItemRemovedCallback> i delegata znajdują się w temacie [buforowanie danych aplikacji](https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)).  
  
 [!code-csharp[System.Web.Caching Examples#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#3)]
 [!code-vb[System.Web.Caching Examples#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> <see langword="null" />lub <paramref name="value" /> jest ustawiony na.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Parametr jest ustawiony na mniej niż <see langword="TimeSpan.Zero" /> jeden rok. <paramref name="slidingExpiration" /></exception>
        <exception cref="T:System.ArgumentException">Parametry <paramref name="absoluteExpiration" /> <see langword="Cache" />i <paramref name="slidingExpiration" /> są ustawiane dla elementu, który próbujesz dodać do.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Buforowanie danych aplikacji</related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.Caching.Cache.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów przechowywanych w pamięci podręcznej.</summary>
        <value>Liczba elementów przechowywanych w pamięci podręcznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość może być przydatna w przypadku monitorowania wydajności aplikacji lub korzystania z funkcji śledzenia ASP.NET.  
  
   
  
## Examples  
 `Count` Poniższy przykład pobiera wartość właściwości, konwertuje ją na ciąg i przypisuje ciąg <xref:System.Web.UI.WebControls.Label.Text%2A> do właściwości <xref:System.Web.UI.WebControls.Label> kontrolki `Label1`serwera sieci Web.  
  
 [!code-csharp[System.Web.Caching.Cache.Count#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/CS/cachecountcs.aspx#1)]
 [!code-vb[System.Web.Caching.Cache.Count#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/VB/cachecountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EffectivePercentagePhysicalMemoryLimit">
      <MemberSignature Language="C#" Value="public long EffectivePercentagePhysicalMemoryLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePercentagePhysicalMemoryLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePercentagePhysicalMemoryLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectivePercentagePhysicalMemoryLimit : int64" Usage="System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość procentową pamięci fizycznej, która może być używana przez aplikację, zanim ASP.NET rozpocznie usuwanie elementów z pamięci podręcznej.</summary>
        <value>Wartość procentowa dostępnej pamięci fizycznej dla aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> Właściwość zwraca wartość procentową pamięci fizycznej, która jest dostępna dla aplikacji. Gdy dostępna wartość procentowa jest niska, algorytm pamięci podręcznej rozpocznie usuwanie elementów z pamięci podręcznej.  
  
 Właściwość można ustawić `percentagePhysicalMemoryUsedLimit` przy użyciu atrybutu [elementu pamięci podręcznej w celu buforowania (ASP.NET ustawienia schematu)](https://msdn.microsoft.com/library/68fa0040-5abf-4c73-93fc-17e3c6af3299) w pliku konfiguracyjnym aplikacji. <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> Jeśli atrybut nie jest ustawiony, algorytm pamięci podręcznej określa maksymalny rozmiar pamięci podręcznej, <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> a właściwość jest obliczana. `percentagePhysicalMemoryUsedLimit`  
  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>wprowadzono w .NET Framework w wersji 3,5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      </Docs>
    </Member>
    <Member MemberName="EffectivePrivateBytesLimit">
      <MemberSignature Language="C#" Value="public long EffectivePrivateBytesLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePrivateBytesLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePrivateBytesLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePrivateBytesLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectivePrivateBytesLimit : int64" Usage="System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę bajtów dostępnych dla pamięci podręcznej.</summary>
        <value>Liczba bajtów dostępnych dla pamięci podręcznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> Właściwość zwraca liczbę bajtów, które mogą być używane przez proces aplikacji. Po osiągnięciu tego limitu algorytm pamięci podręcznej rozpocznie agresywne oczyszczanie pamięci podręcznej.  
  
 Właściwość można ustawić `privateBytesLimit` przy użyciu atrybutu [elementu pamięci podręcznej w celu buforowania (ASP.NET ustawienia schematu)](https://msdn.microsoft.com/library/68fa0040-5abf-4c73-93fc-17e3c6af3299) w pliku konfiguracyjnym aplikacji. <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> Gdy atrybut nie jest ustawiony, algorytm pamięci podręcznej określa maksymalny rozmiar pamięci podręcznej, <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> a właściwość zawiera rozmiar wybrany przez algorytm. `privateBytesLimit`  
  
   
  
## Examples  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Get(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Get : string -&gt; obj" Usage="cache.Get key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Identyfikator elementu pamięci podręcznej do pobrania.</param>
        <summary>Pobiera określony element z <see cref="T:System.Web.Caching.Cache" /> obiektu.</summary>
        <returns>Pobrany element pamięci podręcznej <see langword="null" /> lub jeśli nie znaleziono klucza.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak pobrać wartość buforowaną dla kontrolki serwera pola tekstowego ASP.NET.  
  
 [!code-csharp[Classic Cache.Get Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Get Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Buforowanie danych aplikacji</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="cache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera moduł wyliczający słownik używany do iteracji ustawień kluczy i ich wartości znajdujących się w pamięci podręcznej.</summary>
        <returns>Moduł wyliczający do iteracji przez <see cref="T:System.Web.Caching.Cache" /> obiekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elementy mogą być dodawane lub usuwane z pamięci podręcznej, podczas gdy ta metoda jest wyliczana za pośrednictwem elementów.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Collections.IDictionaryEnumerator> obiekt, `CacheEnum`przy użyciu `GetEnumerator` metody. Moduł wyliczający przechodzi przez pamięć podręczną, konwertuje wartość każdego z buforowanych elementów na ciąg, a następnie zapisuje wartości na stronie formularzy sieci Web.  
  
 [!code-csharp[Cache.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Cache.GetEnumerator/CS/getenumcs.aspx#1)]
 [!code-vb[Cache.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Cache.GetEnumerator/VB/getenumvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wstawia element do <see cref="T:System.Web.Caching.Cache" /> obiektu. Użyj jednej z wersji tej metody, aby zastąpić istniejący <see langword="Cache" /> element tym samym <paramref name="key" /> parametrem.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj -&gt; unit" Usage="cache.Insert (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">Klucz pamięci podręcznej używany do odwoływania się do elementu.</param>
        <param name="value">Obiekt, który ma zostać wstawiony do pamięci podręcznej.</param>
        <summary>Wstawia element do <see cref="T:System.Web.Caching.Cache" /> obiektu z kluczem pamięci podręcznej w celu odwoływania się do jego lokalizacji przy użyciu wartości <see cref="T:System.Web.Caching.CacheItemPriority" /> domyślnych dostarczonych przez wyliczenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda spowoduje zastąpienie istniejącego elementu pamięci podręcznej, którego `key` klucz pasuje do parametru. Obiekt dodany do pamięci podręcznej przy użyciu tego przeciążenia `Insert` metody jest wstawiany bez zależności pliku lub pamięci podręcznej, <xref:System.Web.Caching.CacheItemPriority.Default>priorytetu, wartości <xref:System.Web.Caching.Cache.NoSlidingExpiration>wygaśnięcia przewijania i bezwzględnej wartości <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>wygaśnięcia.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób wstawiania elementu do pamięci podręcznej aplikacji.  
  
 [!code-csharp[Classic Cache.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> lub <paramref name="value" /> jest .<see langword="null" /></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Buforowanie danych aplikacji</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency -&gt; unit" Usage="cache.Insert (key, value, dependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
      </Parameters>
      <Docs>
        <param name="key">Klucz pamięci podręcznej służący do identyfikowania elementu.</param>
        <param name="value">Obiekt, który ma zostać wstawiony do pamięci podręcznej.</param>
        <param name="dependencies">Zależności między plikiem lub pamięcią podręczną dla wstawionego obiektu. Po zmianie zależności obiekt jest nieprawidłowy i zostanie usunięty z pamięci podręcznej. Jeśli nie ma żadnych zależności, ten parametr zawiera <see langword="null" />.</param>
        <summary>Wstawia obiekt do <see cref="T:System.Web.Caching.Cache" /> obiektu, który ma zależności pliku lub klucza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda spowoduje zastąpienie istniejącego elementu pamięci podręcznej, którego `key` klucz pasuje do parametru. Obiekt dodany do pamięci podręcznej przy użyciu tego przeciążenia `Insert` metody jest wstawiany bez zależności pliku lub pamięci podręcznej, <xref:System.Web.Caching.CacheItemPriority.Default>priorytetu, wartości <xref:System.Web.Caching.Cache.NoSlidingExpiration>wygaśnięcia przewijania i bezwzględnej wartości <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>wygaśnięcia.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób wstawiania elementu do pamięci podręcznej aplikacji z zależnością pamięci podręcznej w pliku konfiguracyjnym XML.  
  
 [!code-csharp[Classic Cache.Insert1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> lub <paramref name="value" /> jest .<see langword="null" /></exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="key">Klucz pamięci podręcznej używany do odwoływania się do obiektu.</param>
        <param name="value">Obiekt, który ma zostać wstawiony do pamięci podręcznej.</param>
        <param name="dependencies">Zależności między plikiem lub pamięcią podręczną dla wstawionego obiektu. Po zmianie zależności obiekt jest nieprawidłowy i zostanie usunięty z pamięci podręcznej. Jeśli nie ma żadnych zależności, ten parametr zawiera <see langword="null" />.</param>
        <param name="absoluteExpiration">Godzina, o której wstawiony obiekt wygaśnie, i zostanie usunięty z pamięci podręcznej. Aby uniknąć ewentualnych problemów dotyczących czasu lokalnego, takich jak zmiany czasu standardowego do czasu letniego, <see cref="P:System.DateTime.UtcNow" /> Użyj <see cref="P:System.DateTime.Now" /> zamiast tego wartości parametru. Jeśli używasz bezwzględnego wygaśnięcia, <paramref name="slidingExpiration" /> parametr musi być. <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /></param>
        <param name="slidingExpiration">Interwał między czasem ostatniego dostępu do wstawionego obiektu a czasem wygaśnięcia tego obiektu. Jeśli ta wartość jest odpowiednikiem 20 minut, obiekt utraci ważność i zostanie usunięty z pamięci podręcznej 20 minut od momentu ostatniego dostępu. Jeśli używasz okresu ważności przewijania, <paramref name="absoluteExpiration" /> parametr musi być. <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /></param>
        <summary>Wstawia obiekt do programu <see cref="T:System.Web.Caching.Cache" /> z zależnościami i zasadami wygasania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda spowoduje zastąpienie istniejącego `Cache` elementu tym samym `key` parametrem.  
  
 Jeśli parametr jest ustawiony na <xref:System.Web.Caching.Cache.NoSlidingExpiration>, okres wygasania jest wyłączony. `slidingExpiration` Jeśli `slidingExpiration` parametr zostanie ustawiony na wartość większą niż <xref:System.TimeSpan.Zero> `absoluteExpiration` , parametr zostanie `slidingExpiration` ustawiony na <xref:System.DateTime.Now%2A> znak plus wartości zawartej w parametrze. Jeśli element jest żądany z pamięci podręcznej przed `absoluteExpiration` upływem czasu określonego przez parametr, element zostanie ponownie umieszczony w pamięci podręcznej i `absoluteExpiration` zostanie ponownie ustawiony na `DateTime.Now` wartość i wartości zawarte w `slidingExpiration` parametrze. Jeśli element nie jest żądany z pamięci podręcznej przed datą w `absoluteExpiration` parametrze, element zostanie usunięty z pamięci podręcznej. . Element dodany do pamięci podręcznej przy użyciu tego przeciążenia metody INSERT jest wstawiany z priorytetem <xref:System.Web.Caching.CacheItemPriority.Default>.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób wstawiania elementu do pamięci podręcznej aplikacji z bezwzględnym wygaśnięciem.  
  
> [!NOTE]
>  Ponieważ ta forma `Insert` metody obsługuje zależności pamięci podręcznej, jeśli element nie ma żadnych zależności, należy `dependency` zadeklarować parametr jako `null` (`Nothing` w Visual Basic) na liście rozdzielanej przecinkami parametrów.  
  
 [!code-csharp[Classic Cache.Insert2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#1)]  
  
 W poniższym przykładzie pokazano, jak wstawić element do pamięci podręcznej z ruchomym okresem ważności.  
  
 [!code-csharp[Classic Cache.Insert2 Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.Insert2 Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> lub <paramref name="value" /> jest .<see langword="null" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="slidingExpiration" /> Parametr jest ustawiany na wartość <see langword="TimeSpan.Zero" /> mniejszą lub równą więcej niż jeden rok.</exception>
        <exception cref="T:System.ArgumentException">Parametry <paramref name="absoluteExpiration" /> <see langword="Cache" />i <paramref name="slidingExpiration" /> są ustawiane dla elementu, który próbujesz dodać do.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Buforowanie danych aplikacji</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemUpdateCallback onUpdateCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, class System.Web.Caching.CacheItemUpdateCallback onUpdateCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, onUpdateCallback As CacheItemUpdateCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemUpdateCallback ^ onUpdateCallback);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemUpdateCallback -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration, onUpdateCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUpdateCallback" Type="System.Web.Caching.CacheItemUpdateCallback" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Klucz pamięci podręcznej, który jest używany do odwoływania się do obiektu.</param>
        <param name="value">Obiekt, który ma zostać wstawiony do pamięci podręcznej.</param>
        <param name="dependencies">Zależności między plikiem lub pamięcią podręczną dla elementu. Po zmianie zależności obiekt jest nieprawidłowy i zostanie usunięty z pamięci podręcznej. Jeśli nie ma żadnych zależności, ten parametr zawiera <see langword="null" />.</param>
        <param name="absoluteExpiration">Godzina, o której wstawiony obiekt wygaśnie, i zostanie usunięty z pamięci podręcznej. Aby uniknąć potencjalnych problemów dotyczących czasu lokalnego, takich jak zmiany od czasu standardowego do czasu letniego, <see cref="P:System.DateTime.UtcNow" /> należy użyć <see cref="P:System.DateTime.Now" /> zamiast dla tej wartości parametru. Jeśli używasz bezwzględnego wygaśnięcia, <paramref name="slidingExpiration" /> parametr musi być ustawiony na. <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /></param>
        <param name="slidingExpiration">Interwał między upływem czasu ostatniego dostępu do obiektu w pamięci podręcznej a czasem wygaśnięcia tego obiektu. Jeśli ta wartość jest odpowiednikiem 20 minut, obiekt utraci ważność i zostanie usunięty z pamięci podręcznej 20 minut od momentu ostatniego dostępu. Jeśli używasz okresu ważności przewijania, <paramref name="absoluteExpiration" /> parametr musi być ustawiony na. <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /></param>
        <param name="onUpdateCallback">Delegat, który zostanie wywołany, zanim obiekt zostanie usunięty z pamięci podręcznej. Można go użyć do zaktualizowania buforowanego elementu i upewnienia się, że nie został usunięty z pamięci podręcznej.</param>
        <summary>Wstawia obiekt do <see cref="T:System.Web.Caching.Cache" /> obiektu wraz z zależnościami, zasadami wygasania i delegatem, którego można użyć do powiadomienia aplikacji przed usunięciem elementu z pamięci podręcznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.Insert%2A> Metoda umożliwia wstawienie nowego elementu w pamięci podręcznej i dostarczenie delegata, który jest wywoływany przed usunięciem elementu z pamięci podręcznej. W obszarze delegata można zaktualizować element w pamięci podręcznej, a tym samym uniemożliwić usunięcie go z pamięci podręcznej.  
  
 Ta metoda spowoduje zastąpienie istniejącego `Cache` elementu tym samym `key` parametrem.  
  
 Nie można ustawić `absoluteExpiration` parametrów i `slidingExpiration` . Jeśli zamierzasz wygaśnieć element pamięci podręcznej w określonym czasie, ustaw `absoluteExpiration` parametr na określony czas, `slidingExpiration` a parametr na <xref:System.Web.Caching.Cache.NoSlidingExpiration>.  
  
 Jeśli zamierzasz wygasnąć element pamięci podręcznej po upływie określonego czasu od momentu ostatniego dostępu do elementu, ustaw `slidingExpiration` parametr na wartość interwału wygaśnięcia i `absoluteExpiration` ustaw parametr na <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" />, <paramref name="value" />, lub <paramref name="onUpdateCallback" /> jest .<see langword="null" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="slidingExpiration" /> Parametr jest ustawiany na wartość <see langword="TimeSpan.Zero" /> mniejszą lub równą więcej niż jeden rok.</exception>
        <exception cref="T:System.ArgumentException">Parametry <paramref name="absoluteExpiration" /> <see langword="Cache" />i <paramref name="slidingExpiration" /> są ustawiane dla elementu, który próbujesz dodać do.  
  
—lub— 
<see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /> <paramref name="slidingExpiration" /> Parametr jest <see langword="null" /> <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />i maustawionąwartość,aparametrjestustawionyna.<paramref name="absoluteExpiration" /> <paramref name="dependencies" /></exception>
        <altmember cref="T:System.Web.Caching.CacheItemUpdateCallback" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemPriority * System.Web.Caching.CacheItemRemovedCallback -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration, priority, onRemoveCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">Klucz pamięci podręcznej używany do odwoływania się do obiektu.</param>
        <param name="value">Obiekt, który ma zostać wstawiony do pamięci podręcznej.</param>
        <param name="dependencies">Zależności między plikiem lub pamięcią podręczną dla elementu. Po zmianie zależności obiekt jest nieprawidłowy i zostanie usunięty z pamięci podręcznej. Jeśli nie ma żadnych zależności, ten parametr zawiera <see langword="null" />.</param>
        <param name="absoluteExpiration">Godzina, o której wstawiony obiekt wygaśnie, i zostanie usunięty z pamięci podręcznej. Aby uniknąć ewentualnych problemów dotyczących czasu lokalnego, takich jak zmiany czasu standardowego do czasu letniego, <see cref="P:System.DateTime.UtcNow" /> Użyj <see cref="P:System.DateTime.Now" /> zamiast tego wartości parametru. Jeśli używasz bezwzględnego wygaśnięcia, <paramref name="slidingExpiration" /> parametr musi być. <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" /></param>
        <param name="slidingExpiration">Interwał między ostatnim czasem ostatniego dostępu do wstawionego obiektu a czasem wygaśnięcia tego obiektu. Jeśli ta wartość jest odpowiednikiem 20 minut, obiekt utraci ważność i zostanie usunięty z pamięci podręcznej 20 minut od momentu ostatniego dostępu. Jeśli używasz okresu ważności przewijania, <paramref name="absoluteExpiration" /> parametr musi być. <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" /></param>
        <param name="priority">Koszt obiektu względem innych elementów przechowywanych w pamięci podręcznej, wyrażony przez <see cref="T:System.Web.Caching.CacheItemPriority" /> Wyliczenie. Ta wartość jest używana przez pamięć podręczną podczas wykluczania obiektów; obiekty z niższym kosztem są usuwane z pamięci podręcznej przed obiektami o wyższym koszcie.</param>
        <param name="onRemoveCallback">Delegat, który, jeśli jest podany, zostanie wywołany, gdy obiekt zostanie usunięty z pamięci podręcznej. Służy do powiadamiania aplikacji o usunięciu obiektów z pamięci podręcznej.</param>
        <summary>Wstawia obiekt do <see cref="T:System.Web.Caching.Cache" /> obiektu z zależnościami, zasadami wygasania i priorytetów oraz delegata, którego można użyć do powiadomienia aplikacji po usunięciu wstawionego elementu <see langword="Cache" />z.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda spowoduje zastąpienie istniejącego `Cache` elementu tym samym `key` parametrem.  
  
 Nie można ustawić `absoluteExpiration` parametrów i `slidingExpiration` . Jeśli zamierzasz wygaśnieć element pamięci podręcznej w określonym czasie, ustaw `absoluteExpiration` parametr na określony czas, `slidingExpiration` a parametr na <xref:System.Web.Caching.Cache.NoSlidingExpiration>.  
  
 Jeśli zamierzasz wygasnąć element pamięci podręcznej po upływie określonego czasu od ostatniego dostępu do elementu, ustaw `slidingExpiration` parametr na interwał wygaśnięcia `absoluteExpiration` i parametr na <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób przypisywania elementu wysokiego priorytetu podczas wstawiania go do `Cache` obiektu aplikacji.  
  
> [!NOTE]
>  Aby uzyskać więcej informacji o sposobach używania tej metody z <xref:System.Web.Caching.CacheItemRemovedCallback> delegatem, [zobacz How to: Powiadamiaj aplikację, gdy element zostanie usunięty z pamięci podręcznej](https://msdn.microsoft.com/library/38c33aa0-afe9-40ba-a1a4-1ebab95286ef).  
  
 [!code-csharp[Classic Cache.Insert3 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert3 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr <paramref name="key" /> lub <paramref name="value" /> jest .<see langword="null" /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="slidingExpiration" /> Parametr jest ustawiany na wartość <see langword="TimeSpan.Zero" /> mniejszą lub równą więcej niż jeden rok.</exception>
        <exception cref="T:System.ArgumentException">Parametry <paramref name="absoluteExpiration" /> <see langword="Cache" />i <paramref name="slidingExpiration" /> są ustawiane dla elementu, który próbujesz dodać do.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Buforowanie danych aplikacji</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.Caching.Cache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><see cref="T:System.String" /> Obiekt reprezentujący klucz dla elementu pamięci podręcznej.</param>
        <summary>Pobiera lub ustawia element pamięci podręcznej o określonym kluczu.</summary>
        <value>Określony element pamięci podręcznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia pobranie wartości określonego elementu pamięci podręcznej lub dodanie elementu i klucza do pamięci podręcznej. Dodawanie elementu pamięci podręcznej <xref:System.Web.Caching.Cache.Item%2A> przy użyciu właściwości jest równoznaczne <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> z wywołaniem metody.  
  
   
  
## Examples  
 Poniższy przykład używa właściwości, `Item` aby pobrać wartość buforowanego obiektu skojarzonego `Key1` z kluczem. Następnie używa <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType> metody do zapisania wartości i tekstu wprowadzającego oraz elementu HTML B na stronie formularzy sieci Web.  
  
 [!code-csharp[System.Web.Caching Examples#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#5)]
 [!code-vb[System.Web.Caching Examples#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#5)]  
  
 Poniższy przykład demonstruje użycie tej właściwości, aby wstawić wartość pola tekstowego do pamięci podręcznej.  
  
 [!code-csharp[Classic Cache.this Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.this Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.this Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.this Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Buforowanie danych aplikacji</related>
      </Docs>
    </Member>
    <Member MemberName="NoAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime NoAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoAbsoluteExpiration As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoAbsoluteExpiration : DateTime" Usage="System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Używany w <paramref name="absoluteExpiration" /> parametrze <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" /> w wywołaniu metody, aby wskazać, że element nie powinien wygasnąć. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy jest używany, to pole ustawia `absoluteExpiration` parametr <xref:System.DateTime.MaxValue>równy, który jest stałą reprezentującą największą możliwą `DateTime` wartość, 12/31/9999 11:59:59 PM.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, `NoAbsoluteExpiration` jak za pomocą pola wyłączyć bezwzględne wygaśnięcia podczas wstawiania elementu `Cache`w.  
  
 [!code-csharp[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoSlidingExpiration : TimeSpan" Usage="System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Używany jako <paramref name="slidingExpiration" /> parametr <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" /> w wywołaniu metody lub <see cref="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" /> w celu wyłączenia przesuwania wygasania. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy jest używane, to pole ustawia `slidingExpiration` parametr <xref:System.TimeSpan.Zero?displayProperty=nameWithType> do pola, które ma stałą wartość zero. Element w pamięci podręcznej wygasa zgodnie `absoluteExpiration` z parametrem skojarzonym `Add` `Insert` z wywołaniem lub.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak za pomocą metody INSERT dodać element do <xref:System.Web.Caching.Cache> obiektu `NoSlidingExpiration` za pomocą pola.  
  
 [!code-csharp[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.TimeSpan.Zero" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public object Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; obj" Usage="cache.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><see cref="T:System.String" /> Identyfikator elementu pamięci podręcznej do usunięcia.</param>
        <summary>Usuwa określony element z <see cref="T:System.Web.Caching.Cache" /> obiektu aplikacji.</summary>
        <returns>Element usunięty z <see langword="Cache" />. Jeśli wartość w parametrze klucza nie zostanie znaleziona, zwraca <see langword="null" />wartość.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy `RemoveItemFromCache` metodę. Gdy ta metoda jest wywoływana, używa <xref:System.Web.Caching.Cache.Item%2A> właściwości, aby sprawdzić, czy pamięć podręczna zawiera obiekt, który jest skojarzony `Key1` z wartością klucza. Jeśli tak, `Remove` Metoda jest wywoływana w celu usunięcia obiektu.  
  
 [!code-csharp[System.Web.Caching Examples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#4)]
 [!code-vb[System.Web.Caching Examples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d(v=vs.100)">Buforowanie danych aplikacji</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający, który może wykonywać <see cref="T:System.Web.Caching.Cache" /> iterację kolekcji obiektów.</summary>
        <returns>Moduł wyliczający, który może wykonywać <see cref="T:System.Web.Caching.Cache" /> iterację kolekcji obiektów.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
