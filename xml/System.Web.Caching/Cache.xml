<Type Name="Cache" FullName="System.Web.Caching.Cache">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4baaf1458e16f405271bcf072f2f5980e9739aec" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36605041" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Cache : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Cache extends System.Object implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.Cache" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cache&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cache sealed : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type Cache = class&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Implementuje pamięci podręcznej dla aplikacji sieci Web. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedno wystąpienie tej klasy jest tworzony na domeny aplikacji i pozostaje ważny tak długo, jak domena aplikacji pozostaje aktywna. Informacje o wystąpienia tej klasy są dostępne za pośrednictwem `Cache` właściwość <xref:System.Web.HttpContext> obiektu lub `Cache` właściwość <xref:System.Web.UI.Page> obiektu.  
  
> [!NOTE]
>  <xref:System.Web.Caching.Cache> Klasa nie jest przeznaczony do użytku poza aplikacjami ASP.NET. Został on opracowany i sprawdzane pod kątem użycia w programie ASP.NET w celu zapewnienia buforowania dla aplikacji sieci Web. Dla innych typów aplikacji, takich jak aplikacje konsoli lub w aplikacji formularzy systemu Windows, należy użyć <xref:System.Runtime.Caching.ObjectCache> klasy.  
  
   
  
## Examples  
 Poniższy przykład jest strona, która zawiera użytkowników wartość przypisana do elementu w pamięci podręcznej, a następnie powiadamia, gdy element zostanie usunięty z pamięci podręcznej. Tworzy `RemovedCallback` metodę, która ma sygnaturę elementu `CacheItemRemovedCallback` delegata, aby powiadomić użytkowników, gdy element pamięci podręcznej został usunięty i używa <xref:System.Web.Caching.CacheItemRemovedReason> wyliczeniu, aby wiedzieli, dlaczego został usunięty. Ponadto używa <xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType> właściwość, aby dodać obiekty do pamięci podręcznej i pobierania wartości tych obiektów. W `AddItemToCache` używa metody <xref:System.Web.Caching.Cache.Add%2A?displayProperty=nameWithType> metody w celu dodania elementu do pamięci podręcznej. Aby użyć `CacheItemRemovedCallback` delegowanie, należy dodać element do pamięci podręcznej przy użyciu tej metody lub <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> metody, więc ASP.NET automatycznie ułatwia odpowiedniej metody wywołującym po usunięciu elementu. Niestandardowa `RemoveItemFromCache` używa metody <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType> metoda jawnie usunąć elementu z pamięci podręcznej, co powoduje `RemovedCallback` wywoływanej metody.  
  
> [!NOTE]
>  Wystąpienie pamięci podręcznej, który jest dostępny przez poniższy fragment jest członkiem <xref:System.Web.UI.Page> obiektów w tym przykładzie.  
  
 [!code-aspx-csharp[System.Web.Caching Examples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#1)]
 [!code-aspx-vb[System.Web.Caching Examples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#1)]
  
 ]]></format>
    </remarks>
    <threadsafe>Ten typ jest bezpieczny wątkowo.</threadsafe>
    <altmember cref="T:System.Web.HttpContext" />
    <altmember cref="T:System.Web.Caching.CacheDependency" />
    <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Caching.Cache" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Add(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Add(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemPriority * System.Web.Caching.CacheItemRemovedCallback -&gt; obj" Usage="cache.Add (key, value, dependencies, absoluteExpiration, slidingExpiration, priority, onRemoveCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">Klucz pamięci podręcznej, używany do odwołania elementu.</param>
        <param name="value">Element, który ma zostać dodana do pamięci podręcznej.</param>
        <param name="dependencies">Plik lub pamięci podręcznej klucza zależności dla elementu. Po zmianie każda zależność, obiekt staje się nieprawidłowa i zostanie usunięta z pamięci podręcznej. Jeśli nie ma żadnych zależności, ten parametr zawiera <see langword="null" />.</param>
        <param name="absoluteExpiration">Czas, w którym dodany obiekt wygasa i zostanie usunięta z pamięci podręcznej. Jeśli używasz wygaśniecie, <c>absoluteExpiration</c> parametr musi być <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <param name="slidingExpiration">Interwał między czasem ostatniego dostępu do dodany obiekt i czasu, jaką wygasa tego obiektu. Jeśli ta wartość jest odpowiednikiem 20 minut, obiekt wygasa i zostanie usunięta z pamięci podręcznej 20 minut od ostatniego jest on dostępny. Jeśli używasz wygaśnięcia bezwzględne <c>slidingExpiration</c> parametr musi być <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="priority">Względny koszt obiektu wyrażona <see cref="T:System.Web.Caching.CacheItemPriority" /> wyliczenia. Pamięć podręczna używa tej wartości, podczas jej wyklucza mogą obiektów; obiekty z niższym kosztem są usuwane z pamięci podręcznej przed obiekty o wyższe koszty.</param>
        <param name="onRemoveCallback">Delegat, który, jeśli zostanie podana, jest wywoływane, gdy obiekt jest usunięty z pamięci podręcznej. Możesz użyć tego powiadomiono aplikacji podczas ich obiekty są usuwane z pamięci podręcznej.</param>
        <summary>Dodaje określony element do <see cref="T:System.Web.Caching.Cache" /> obiekt zależności, zasady wygasania i priorytet i delegata służy do powiadamiania aplikacji wstawiony element zostanie usunięty z <see langword="Cache" />.</summary>
        <returns>Obiekt, który reprezentuje element, który został dodany, jeśli element wcześniej były przechowywane w pamięci podręcznej; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołania tej metody zakończy się niepowodzeniem, jeśli element o takim samym `key` parametru jest już zapisana w `Cache`. Aby zastąpić istniejącą `Cache` elementu korzystającej z tego samego `key` parametru, użyj <xref:System.Web.Caching.Cache.Insert%2A> metody.  
  
 Nie można jednocześnie ustawić `absoluteExpiration` i `slidingExpiration` parametrów. Jeśli planujesz elementu pamięci podręcznej wygasa w określonym czasie, należy ustawić `absoluteExpiration` parametru na określony czas i `slidingExpiration` parametr <xref:System.Web.Caching.Cache.NoSlidingExpiration>.  
  
 Jeśli planujesz elementu pamięci podręcznej wygasa po określonym czasie upłynął od momentu ostatniego dostępu do elementu, należy ustawić `slidingExpiration` parametr interwał wygaśnięcia i `absoluteExpiration` parametr <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
   
  
## Examples  
 Poniższy przykład tworzy `AddItemToCache` metody. Gdy ta metoda jest wywoływana, ustawia `itemRemoved` właściwości `false` i rejestruje `onRemove` metodę o nowe wystąpienie klasy <xref:System.Web.Caching.CacheItemRemovedCallback> delegowanie. Podpis delegata jest używany w `RemovedCallback` metody. `AddItemToCache` Metoda sprawdza wartość skojarzoną z `Key1` klucza w pamięci podręcznej. Jeśli wartość jest `null`, `Add` metoda umieszcza w pamięci podręcznej element z kluczem `Key1`, wartość `Value 1`, wygaśnięcia bezwzględne 60 sekund i priorytet Wysoki pamięci podręcznej. Ponadto użyto `onRemove` metody jako argument. Dzięki temu `RemovedCallback` metoda wywoływana, gdy ten element został usunięty z pamięci podręcznej.  
  
> [!NOTE]
>  Przykłady dotyczące używania <xref:System.Web.Caching.CacheDependency> klasy i <xref:System.Web.Caching.CacheItemRemovedCallback> delegowania, zobacz [buforowanie danych aplikacji](http://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d).  
  
 [!code-csharp[System.Web.Caching Examples#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#3)]
 [!code-vb[System.Web.Caching Examples#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> Lub <paramref name="value" /> ustawiono parametr <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="slidingExpiration" /> Ustawiona jest mniejsza niż <see langword="TimeSpan.Zero" /> lub więcej niż jeden rok.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="absoluteExpiration" /> i <paramref name="slidingExpiration" /> parametry są ustawione dla elementu, który chcesz dodać do <see langword="Cache" />.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.Caching.Cache.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę elementów przechowywanych w pamięci podręcznej.</summary>
        <value>Liczba elementów przechowywanych w pamięci podręcznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość może być przydatne podczas monitorowania wydajności aplikacji lub w przypadku używania funkcji śledzenia ASP.NET.  
  
   
  
## Examples  
 Poniższy przykład uzyskuje wartość `Count` właściwości, konwertuje go na ciąg, a ciąg do <xref:System.Web.UI.WebControls.Label.Text%2A> właściwość <xref:System.Web.UI.WebControls.Label> formant serwera sieci Web `Label1`.  
  
 [!code-csharp[System.Web.Caching.Cache.Count#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/CS/cachecountcs.aspx#1)]
 [!code-vb[System.Web.Caching.Cache.Count#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/VB/cachecountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EffectivePercentagePhysicalMemoryLimit">
      <MemberSignature Language="C#" Value="public long EffectivePercentagePhysicalMemoryLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePercentagePhysicalMemoryLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePercentagePhysicalMemoryLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectivePercentagePhysicalMemoryLimit : int64" Usage="System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartości procentowej pamięci fizycznej używanej przez aplikację przed uruchomieniem programu ASP.NET, usuwanie elementów z pamięci podręcznej.</summary>
        <value>Procent pamięci fizycznej do aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> Właściwość zwraca wartość procentowa pamięci fizycznej, która jest dostępna dla aplikacji. Gdy dostępny procent staje się niskim, algorytm pamięci podręcznej rozpoczyna się usuwanie elementów z pamięci podręcznej.  
  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> Właściwości można ustawić za pomocą `percentagePhysicalMemoryUsedLimit` atrybutu [pamięci podręcznej elementu do buforowania (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/68fa0040-5abf-4c73-93fc-17e3c6af3299) w pliku konfiguracji aplikacji. Jeśli `percentagePhysicalMemoryUsedLimit` atrybut nie jest ustawiony, algorytm pamięci podręcznej określa maksymalny rozmiar pamięci podręcznej i <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> właściwości jest obliczana.  
  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      </Docs>
    </Member>
    <Member MemberName="EffectivePrivateBytesLimit">
      <MemberSignature Language="C#" Value="public long EffectivePrivateBytesLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePrivateBytesLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePrivateBytesLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePrivateBytesLimit { long get(); };" />
      <MemberSignature Language="F#" Value="member this.EffectivePrivateBytesLimit : int64" Usage="System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę bajtów dostępnych dla pamięci podręcznej.</summary>
        <value>Liczba bajtów dostępnych dla pamięci podręcznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> Właściwość zwraca liczbę bajtów, które mogą być używane przez proces aplikacji. Po osiągnięciu tego limitu algorytm pamięci podręcznej rozpoczyna agresywnie oczyszczania pamięci podręcznej.  
  
 <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> Właściwości można ustawić za pomocą `privateBytesLimit` atrybutu [pamięci podręcznej elementu do buforowania (schemat ustawień programu ASP.NET)](http://msdn.microsoft.com/library/68fa0040-5abf-4c73-93fc-17e3c6af3299) w pliku konfiguracji aplikacji. Gdy `privateBytesLimit` atrybut nie jest ustawiony, algorytm pamięci podręcznej określa maksymalny rozmiar pamięci podręcznej i <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A> właściwość zawiera rozmiar wybrane przez algorytm.  
  
   
  
## Examples  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Get(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Get : string -&gt; obj" Usage="cache.Get key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Identyfikator elementu pamięci podręcznej do pobrania.</param>
        <summary>Pobiera określony element z <see cref="T:System.Web.Caching.Cache" /> obiektu.</summary>
        <returns>Element pamięci podręcznej pobrane lub <see langword="null" /> Jeśli klucz nie zostanie znaleziony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak pobrać wartość w pamięci podręcznej dla formantu serwera ASP.NET pola tekstowego.  
  
 [!code-csharp[Classic Cache.Get Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Get Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="cache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera moduł wyliczający słownik używany do iterowania ustawień klucza i wartości zawartych w pamięci podręcznej.</summary>
        <returns>Moduł wyliczający do iteracji <see cref="T:System.Web.Caching.Cache" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elementy można dodać lub usunąć z pamięci podręcznej, gdy ta metoda jest wyliczania elementów.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Collections.IDictionaryEnumerator> obiektu `CacheEnum`za pomocą `GetEnumerator` metody. Moduł wyliczający przechodzi przez pamięć podręczną, konwertuje wartość każdego elementu pamięci podręcznej na ciąg, a następnie zapisuje wartości strony formularzy sieci Web.  
  
 [!code-csharp[Cache.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Cache.GetEnumerator/CS/getenumcs.aspx#1)]
 [!code-vb[Cache.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Cache.GetEnumerator/VB/getenumvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wstawia element do <see cref="T:System.Web.Caching.Cache" /> obiektu. Użyj jednej wersji tej metody, aby zastąpić istniejące <see langword="Cache" /> element o takim samym <paramref name="key" /> parametru.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj -&gt; unit" Usage="cache.Insert (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">Klucz pamięci podręcznej, używany do odwołania elementu.</param>
        <param name="value">Obiekt, który ma zostać wstawiony do pamięci podręcznej.</param>
        <summary>Wstawia element do <see cref="T:System.Web.Caching.Cache" /> obiektu z kluczem pamięci podręcznej, aby odwołać lokalizacji przy użyciu domyślnych <see cref="T:System.Web.Caching.CacheItemPriority" /> wyliczenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zastąpi istniejący element pamięci podręcznej, którego klucz odpowiada `key` parametru. Obiekt dodanych do pamięci podręcznej, za pomocą tego przeciążenia `Insert` metody dodaje się bez zależności pliku lub pamięci podręcznej, priorytet <xref:System.Web.Caching.CacheItemPriority.Default>, przedłużanie ważności wartość <xref:System.Web.Caching.Cache.NoSlidingExpiration>i wartość bezwzględna wygaśnięcia <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak można wstawić elementu do pamięci podręcznej aplikacji.  
  
 [!code-csharp[Classic Cache.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> Lub <paramref name="value" /> parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency -&gt; unit" Usage="cache.Insert (key, value, dependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
      </Parameters>
      <Docs>
        <param name="key">Klucz pamięci podręcznej, używany do identyfikowania elementu.</param>
        <param name="value">Obiekt, który ma zostać wstawiony w pamięci podręcznej.</param>
        <param name="dependencies">Plik lub pamięci podręcznej klucza zależności dla wstawiony obiekt. Po zmianie każda zależność, obiekt staje się nieprawidłowa i zostanie usunięta z pamięci podręcznej. Jeśli nie ma żadnych zależności, ten parametr zawiera <see langword="null" />.</param>
        <summary>Wstawia obiektu do <see cref="T:System.Web.Caching.Cache" /> zawierającego plik lub klucz zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zastąpi istniejący element pamięci podręcznej, którego klucz odpowiada `key` parametru. Obiekt dodanych do pamięci podręcznej, za pomocą tego przeciążenia `Insert` metody dodaje się bez zależności pliku lub pamięci podręcznej, priorytet <xref:System.Web.Caching.CacheItemPriority.Default>, przedłużanie ważności wartość <xref:System.Web.Caching.Cache.NoSlidingExpiration>i wartość bezwzględna wygaśnięcia <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak można wstawić elementu do pamięci podręcznej aplikacji z pamięci podręcznej zależności pliku konfiguracji XML.  
  
 [!code-csharp[Classic Cache.Insert1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> Lub <paramref name="value" /> parametr jest <see langword="null" />.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="key">Klucz pamięci podręcznej, używany do obiektu.</param>
        <param name="value">Obiekt, który ma zostać wstawiony w pamięci podręcznej.</param>
        <param name="dependencies">Plik lub pamięci podręcznej klucza zależności dla wstawiony obiekt. Po zmianie każda zależność, obiekt staje się nieprawidłowa i zostanie usunięta z pamięci podręcznej. Jeśli nie ma żadnych zależności, ten parametr zawiera <see langword="null" />.</param>
        <param name="absoluteExpiration">Czas, jaką wstawiony obiekt wygasa i zostanie usunięta z pamięci podręcznej. Aby uniknąć możliwe problemy z czasu lokalnego, takie jak zmiany z wsch. czas letni, użyj <see cref="P:System.DateTime.UtcNow" /> zamiast <see cref="P:System.DateTime.Now" /> dla wartości tego parametru. Jeśli używasz wygaśnięcia bezwzględne <c>slidingExpiration</c> parametr musi być <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="slidingExpiration">Interwał między czasem wstawiony obiekt ostatniego uzyskania dostępu do i czasu, jaką wygasa tego obiektu. Jeśli wartość ta jest odpowiednikiem 20 minut, obiekt wygaśnie i usunąć z pamięci podręcznej 20 minut od ostatniego udostępnienia. Jeśli używasz wygaśniecie, <c>absoluteExpiration</c> parametr musi być <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <summary>Wstawia obiektu do <see cref="T:System.Web.Caching.Cache" /> zależności i zasady wygasania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda spowoduje zastąpienie istniejącej `Cache` element o takim samym `key` parametru.  
  
 Jeśli `slidingExpiration` ustawiono parametr <xref:System.Web.Caching.Cache.NoSlidingExpiration>, przedłużanie ważności jest wyłączona. Jeśli ustawisz `slidingExpiration` parametru na wartość większą niż <xref:System.TimeSpan.Zero>, `absoluteExpiration` ustawiono parametr <xref:System.DateTime.Now%2A> oraz wartości zawartych w `slidingExpiration` parametru. Jeśli wymagane jest element z pamięci podręcznej przed ilość czasu określonego przez `absoluteExpiration` parametru elementu zostaną umieszczone w pamięci podręcznej, i `absoluteExpiration` ponownie zostanie ustawiony na `DateTime.Now` oraz wartości zawartych w `slidingExpiration` parametru. Jeśli element nie występuje żądanie z pamięci podręcznej przed datą w `absoluteExpiration` parametrów, element zostanie usunięty z pamięci podręcznej. . Wstawieniem elementu dodanych do pamięci podręcznej, za pomocą tego przeciążenia metody insert z priorytet <xref:System.Web.Caching.CacheItemPriority.Default>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak można wstawić elementu do pamięci podręcznej aplikacji wygaśnięcia bezwzględne.  
  
> [!NOTE]
>  Ponieważ ta forma `Insert` metoda obsługuje zależności w pamięci podręcznej, jeśli element nie ma żadnych zależności, musisz zadeklarować `dependency` parametr jako `null` (`Nothing` w języku Visual Basic) w rozdzielana przecinkami lista parametrów.  
  
 [!code-csharp[Classic Cache.Insert2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#1)]  
  
 W poniższym przykładzie pokazano, jak można wstawić elementu do pamięci podręcznej z wygasanie przewijania.  
  
 [!code-csharp[Classic Cache.Insert2 Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.Insert2 Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> Lub <paramref name="value" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Możesz ustawić <paramref name="slidingExpiration" /> parametr mniej niż <see langword="TimeSpan.Zero" /> lub równoważnej więcej niż jeden rok.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="absoluteExpiration" /> i <paramref name="slidingExpiration" /> parametry są ustawione dla elementu, który chcesz dodać do <see langword="Cache" />.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemUpdateCallback onUpdateCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, class System.Web.Caching.CacheItemUpdateCallback onUpdateCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, onUpdateCallback As CacheItemUpdateCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemUpdateCallback ^ onUpdateCallback);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemUpdateCallback -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration, onUpdateCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="onUpdateCallback" Type="System.Web.Caching.CacheItemUpdateCallback" />
      </Parameters>
      <Docs>
        <param name="key">Klucz pamięci podręcznej, który jest używany do odwołuje się do obiektu.</param>
        <param name="value">Obiekt, który można umieścić w pamięci podręcznej.</param>
        <param name="dependencies">Plik lub pamięci podręcznej klucza zależności dla elementu. Po zmianie każda zależność, obiekt staje się nieprawidłowa i zostanie usunięta z pamięci podręcznej. Jeśli nie ma żadnych zależności, ten parametr zawiera <see langword="null" />.</param>
        <param name="absoluteExpiration">Czas, jaką wstawiony obiekt wygasa i zostanie usunięta z pamięci podręcznej. Aby uniknąć możliwe problemy z czasu lokalnego, takie jak zmiany z wsch. czas letni, użyj <see cref="P:System.DateTime.UtcNow" /> zamiast <see cref="P:System.DateTime.Now" /> dla wartości tego parametru. Jeśli używasz wygaśnięcia bezwzględne <c>slidingExpiration</c> parametr musi być ustawiony na <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="slidingExpiration">Interwał między godzinę, o której nastąpił ostatni dostęp do obiektu w pamięci podręcznej i czasu, jaką wygasa tego obiektu. Jeśli wartość ta jest odpowiednikiem 20 minut, obiekt wygaśnie i usunąć z pamięci podręcznej 20 minut od ostatniego udostępnienia. Jeśli używasz wygaśniecie, <c>absoluteExpiration</c> parametr musi być ustawiony na <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <param name="onUpdateCallback">Delegat, która będzie wywoływana przed wykonaniem obiekt jest usunięty z pamięci podręcznej. Możesz użyć tego, aby zaktualizować element pamięci podręcznej i upewnij się, że nie został on usunięty z pamięci podręcznej.</param>
        <summary>Wstawia obiektu do <see cref="T:System.Web.Caching.Cache" /> obiektu wraz z zależnościami, zasady wygasania i delegata, który służy do powiadomić aplikację, zanim element zostanie usunięty z pamięci podręcznej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.Insert%2A> Metoda pozwala na wstawienie nowego elementu w pamięci podręcznej i podaj delegata, który jest wywoływana przed usunięciem elementu z pamięci podręcznej. W elemencie delegowanym można zaktualizować elementu pamięci podręcznej i tym samym zapobiec jego usunięcie z pamięci podręcznej.  
  
 Ta metoda spowoduje zastąpienie istniejącej `Cache` element o takim samym `key` parametru.  
  
 Nie można jednocześnie ustawić `absoluteExpiration` i `slidingExpiration` parametrów. Jeśli planujesz elementu pamięci podręcznej wygasa w określonym czasie, należy ustawić `absoluteExpiration` parametru na określony czas i `slidingExpiration` parametr <xref:System.Web.Caching.Cache.NoSlidingExpiration>.  
  
 Jeśli planujesz elementu pamięci podręcznej wygasa po upływie ustaw czas od elementu nastąpił ostatni dostęp do, możesz ustawić `slidingExpiration` parametr interwał wygaśnięcia, a wartość `absoluteExpiration` parametr <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" />, <paramref name="value" />, Lub <paramref name="onUpdateCallback" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Możesz ustawić <paramref name="slidingExpiration" /> parametr mniej niż <see langword="TimeSpan.Zero" /> lub równoważnej więcej niż jeden rok.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="absoluteExpiration" /> i <paramref name="slidingExpiration" /> parametry są ustawione dla elementu, który chcesz dodać do <see langword="Cache" />.  - lub - <paramref name="dependencies" /> parametr jest <see langword="null" />i <paramref name="absoluteExpiration" /> ustawiono parametr <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />i <paramref name="slidingExpiration" /> ustawiono parametr <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</exception>
        <altmember cref="T:System.Web.Caching.CacheItemUpdateCallback" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberSignature Language="F#" Value="member this.Insert : string * obj * System.Web.Caching.CacheDependency * DateTime * TimeSpan * System.Web.Caching.CacheItemPriority * System.Web.Caching.CacheItemRemovedCallback -&gt; unit" Usage="cache.Insert (key, value, dependencies, absoluteExpiration, slidingExpiration, priority, onRemoveCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">Klucz pamięci podręcznej, używany do obiektu.</param>
        <param name="value">Obiekt, który ma zostać wstawiony w pamięci podręcznej.</param>
        <param name="dependencies">Plik lub pamięci podręcznej klucza zależności dla elementu. Po zmianie każda zależność, obiekt staje się nieprawidłowa i zostanie usunięta z pamięci podręcznej. Jeśli nie ma żadnych zależności, ten parametr zawiera <see langword="null" />.</param>
        <param name="absoluteExpiration">Czas, jaką wstawiony obiekt wygasa i zostanie usunięta z pamięci podręcznej. Aby uniknąć możliwe problemy z czasu lokalnego, takie jak zmiany z wsch. czas letni, użyj <see cref="P:System.DateTime.UtcNow" /> zamiast <see cref="P:System.DateTime.Now" /> dla wartości tego parametru. Jeśli używasz wygaśnięcia bezwzględne <c>slidingExpiration</c> parametr musi być <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />.</param>
        <param name="slidingExpiration">Interwał między czasem ostatniego dostępu do obiektu wstawionego i czasu, jaką wygasa tego obiektu. Jeśli wartość ta jest odpowiednikiem 20 minut, obiekt wygaśnie i usunąć z pamięci podręcznej 20 minut od ostatniego udostępnienia. Jeśli używasz wygaśniecie, <c>absoluteExpiration</c> parametr musi być <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />.</param>
        <param name="priority">Koszt obiektu względem innych elementów przechowywana w pamięci podręcznej, ponieważ wyrażona <see cref="T:System.Web.Caching.CacheItemPriority" /> wyliczenia. Ta wartość jest używana przez pamięć podręczną po jego wyklucza mogą obiektów; obiekty z niższym kosztem są usuwane z pamięci podręcznej przed obiekty o wyższe koszty.</param>
        <param name="onRemoveCallback">Delegat, który, jeśli zostanie podana, zostanie wywołany, gdy obiekt zostanie usunięty z pamięci podręcznej. Możesz użyć tego powiadomiono aplikacji podczas ich obiekty są usuwane z pamięci podręcznej.</param>
        <summary>Wstawia obiektu do <see cref="T:System.Web.Caching.Cache" /> obiekt zależności, zasady wygasania i priorytet i delegata służy do powiadamiania aplikacji wstawiony element zostanie usunięty z <see langword="Cache" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda spowoduje zastąpienie istniejącej `Cache` element o takim samym `key` parametru.  
  
 Nie można jednocześnie ustawić `absoluteExpiration` i `slidingExpiration` parametrów. Jeśli planujesz elementu pamięci podręcznej wygasa w określonym czasie, należy ustawić `absoluteExpiration` parametru na określony czas i `slidingExpiration` parametr <xref:System.Web.Caching.Cache.NoSlidingExpiration>.  
  
 Jeśli planujesz elementu pamięci podręcznej wygasa po określonym czasie od upłynął ostatniego dostępu do elementu, należy ustawić `slidingExpiration` parametr interwał wygaśnięcia i `absoluteExpiration` parametr <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak można przypisać elementu wysoki priorytet podczas wstawiania do aplikacji `Cache` obiektu.  
  
> [!NOTE]
>  Aby uzyskać więcej informacji o sposobie używania tej metody za pomocą <xref:System.Web.Caching.CacheItemRemovedCallback> delegowania, zobacz [porady: powiadomienie aplikacji gdy element zostanie usunięty z pamięci podręcznej](http://msdn.microsoft.com/library/38c33aa0-afe9-40ba-a1a4-1ebab95286ef).  
  
 [!code-csharp[Classic Cache.Insert3 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert3 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> Lub <paramref name="value" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Możesz ustawić <paramref name="slidingExpiration" /> parametr mniej niż <see langword="TimeSpan.Zero" /> lub równoważnej więcej niż jeden rok.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="absoluteExpiration" /> i <paramref name="slidingExpiration" /> parametry są ustawione dla elementu, który chcesz dodać do <see langword="Cache" />.</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.Caching.Cache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">A <see cref="T:System.String" /> obiekt, który reprezentuje klucz elementu pamięci podręcznej.</param>
        <summary>Pobiera lub ustawia element pamięci podręcznej w określonym kluczu.</summary>
        <value>Element określony w pamięci podręcznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do pobierania wartości elementu określonego w pamięci podręcznej, lub w celu dodania elementu i klucz dla niego do pamięci podręcznej. Dodawanie elementu przy użyciu pamięci podręcznej <xref:System.Web.Caching.Cache.Item%2A> właściwość jest odpowiednikiem wywołania <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 W poniższym przykładzie użyto `Item` właściwości do pobierania wartości skojarzonych z obiektu w pamięci podręcznej `Key1` klucza. Następnie używa <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType> metody do zapisu wartości i tekst wprowadzający i element B HTML strony formularzy sieci Web.  
  
 [!code-csharp[System.Web.Caching Examples#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#5)]
 [!code-vb[System.Web.Caching Examples#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#5)]  
  
 W poniższym przykładzie pokazano, za pomocą tej właściwości można wstawić wartości pola tekstowego do pamięci podręcznej.  
  
 [!code-csharp[Classic Cache.this Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.this Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.this Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.this Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime NoAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoAbsoluteExpiration As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoAbsoluteExpiration : DateTime" Usage="System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Używane w <paramref name="absoluteExpiration" /> parametru w <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" /> wywołania metody w celu wskazania elementu nigdy nie wygaśnie. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku tego pola ustawia `absoluteExpiration` parametru równa <xref:System.DateTime.MaxValue>, która jest stałą reprezentujący największego możliwego `DateTime` wartość 12/31/9999 11:59:59 PM.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia `NoAbsoluteExpiration` pola, aby wyłączyć wygaśnięcia bezwzględne, wstawiając element `Cache`.  
  
 [!code-csharp[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoSlidingExpiration : TimeSpan" Usage="System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Używane jako <paramref name="slidingExpiration" /> parametru w <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" /> lub <see cref="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" /> wywołania metody, aby wyłączyć wygasanie zmienną. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku tego pola ustawia `slidingExpiration` parametr <xref:System.TimeSpan.Zero?displayProperty=nameWithType> pola, które ma wartość stałą równą zero. Element pamięci podręcznej wygasa zgodnie z `absoluteExpiration` parametr skojarzony z `Insert` lub `Add` wywołania metody.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia metody Insert, aby dodać element do <xref:System.Web.Caching.Cache> przy użyciu `NoSlidingExpiration` pola.  
  
 [!code-csharp[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.TimeSpan.Zero" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public object Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; obj" Usage="cache.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">A <see cref="T:System.String" /> identyfikator elementu pamięci podręcznej do usunięcia.</param>
        <summary>Usuwa określony element z aplikacji <see cref="T:System.Web.Caching.Cache" /> obiektu.</summary>
        <returns>Element usunięty z <see langword="Cache" />. Jeśli wartość parametru klucza nie zostanie znaleziony, zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy `RemoveItemFromCache` metody. Gdy ta metoda jest wywoływana, używa <xref:System.Web.Caching.Cache.Item%2A> właściwość do sprawdzenia, czy pamięć podręczna zawiera obiekt, który jest skojarzony z `Key1` wartość klucza. Jeśli tak, `Remove` metoda jest wywoływana w celu usunięcia obiektu.  
  
 [!code-csharp[System.Web.Caching Examples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#4)]
 [!code-vb[System.Web.Caching Examples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca moduł wyliczający, który można wykonać iterację <see cref="T:System.Web.Caching.Cache" /> kolekcja obiektów.</summary>
        <returns>Moduł wyliczający, który można wykonać iterację <see cref="T:System.Web.Caching.Cache" /> kolekcja obiektów.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>