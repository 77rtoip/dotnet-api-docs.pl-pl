<Type Name="CacheItemUpdateCallback" FullName="System.Web.Caching.CacheItemUpdateCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ef9936a6f785c1146a2678a266598f5966761b9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69097798" /></Metadata><TypeSignature Language="C#" Value="public delegate void CacheItemUpdateCallback(string key, CacheItemUpdateReason reason, out object expensiveObject, out CacheDependency dependency, out DateTime absoluteExpiration, out TimeSpan slidingExpiration);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CacheItemUpdateCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.CacheItemUpdateCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub CacheItemUpdateCallback(key As String, reason As CacheItemUpdateReason, ByRef expensiveObject As Object, ByRef dependency As CacheDependency, ByRef absoluteExpiration As DateTime, ByRef slidingExpiration As TimeSpan)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void CacheItemUpdateCallback(System::String ^ key, CacheItemUpdateReason reason, [Runtime::InteropServices::Out] System::Object ^ % expensiveObject, [Runtime::InteropServices::Out] CacheDependency ^ % dependency, [Runtime::InteropServices::Out] DateTime % absoluteExpiration, [Runtime::InteropServices::Out] TimeSpan % slidingExpiration);" />
  <TypeSignature Language="F#" Value="type CacheItemUpdateCallback = delegate of string * CacheItemUpdateReason *  *  *  *  -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="System.String" />
    <Parameter Name="reason" Type="System.Web.Caching.CacheItemUpdateReason" />
    <Parameter Name="expensiveObject" Type="System.Object" RefType="out" />
    <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency" RefType="out" />
    <Parameter Name="absoluteExpiration" Type="System.DateTime" RefType="out" />
    <Parameter Name="slidingExpiration" Type="System.TimeSpan" RefType="out" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key">Identyfikator elementu, który jest usuwany z pamięci podręcznej.</param>
    <param name="reason">Przyczyna usunięcia elementu z pamięci podręcznej.</param>
    <param name="expensiveObject">Gdy ta metoda zwraca, zawiera obiekt elementu w pamięci podręcznej, który zawiera aktualizacje.</param>
    <param name="dependency">Gdy ta metoda zwraca, zawiera obiekt, który definiuje zależność między obiektem elementu a plikiem, kluczem pamięci podręcznej, tablicą lub innym <see cref="T:System.Web.Caching.CacheDependency" /> obiektem.</param>
    <param name="absoluteExpiration">Gdy ta metoda zwraca, zawiera godzinę wygaśnięcia obiektu.</param>
    <param name="slidingExpiration">Gdy ta metoda zwraca, zawiera interwał między czasem ostatniego dostępu do obiektu a czasem, gdy obiekt wygasł.</param>
    <summary>Definiuje metodę wywołania zwrotnego dla powiadamiania aplikacji przed usunięciem z pamięci podręcznej elementu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wygaśnięciu obiektu w pamięci podręcznej ASP.NET wywołuje <xref:System.Web.Caching.CacheItemUpdateCallback> metodę z kluczem dla elementu pamięci podręcznej i przyczynę, którą można zaktualizować dla elementu. Pozostałe parametry tej metody są parametrami out. Podajesz nowy element w pamięci podręcznej i opcjonalne wartości wygaśnięcia oraz zależności, które mają być używane podczas odświeżania elementu w pamięci podręcznej.  
  
 Wywołanie zwrotne aktualizacji nie jest wywoływane, jeśli element w pamięci podręcznej zostanie jawnie usunięty <xref:System.Web.Caching.Cache.Remove%2A>przy użyciu wywołania do.  
  
 Jeśli chcesz, aby element buforowany został usunięty z pamięci podręcznej, musisz zwrócić `null` wartość `expensiveObject` w parametrze. W przeciwnym razie zwracasz odwołanie do nowych danych w pamięci podręcznej `expensiveObject` przy użyciu parametru. Jeśli nie określisz wartości wygaśnięcia lub zależności, element zostanie usunięty z pamięci podręcznej tylko wtedy, gdy wymagana jest pamięć.  
  
 Jeśli metoda wywołania zwrotnego zgłasza wyjątek, ASP.NET pomija wyjątek i usuwa buforowaną wartość.  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
