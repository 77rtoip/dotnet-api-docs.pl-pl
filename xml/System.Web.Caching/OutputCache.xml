<Type Name="OutputCache" FullName="System.Web.Caching.OutputCache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="642eb61a07dd6d91ec6ad14ae96ab30e2afe58ae" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69097735" /></Metadata><TypeSignature Language="C#" Value="public static class OutputCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit OutputCache extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.OutputCache" />
  <TypeSignature Language="VB.NET" Value="Public Class OutputCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutputCache abstract sealed" />
  <TypeSignature Language="F#" Value="type OutputCache = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia programistyczny dostęp do dostawców pamięci podręcznej danych wyjściowych, które są określone w pliku konfiguracji witryny sieci Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Buforowanie danych wyjściowych przechowuje wygenerowane dane wyjściowe stron, kontrolek i odpowiedzi HTTP w pamięci. Buforowanie danych wyjściowych umożliwia przechowywanie w pamięci podręcznej różnych wersji zawartości w zależności od ciągu zapytania i parametrów post formularza do strony, typu przeglądarki lub języka użytkownika. Można skonfigurować ASP.NET do buforowania wpisu pamięci podręcznej w określonym okresie. Możesz również skonfigurować ASP.NET, aby wykluczać wpis pamięci podręcznej automatycznie na podstawie zewnętrznego zdarzenia, takiego jak zmiany w bazie danych, od której zależy pamięć podręczna.  
  
 <xref:System.Web.Caching.OutputCache> Klasa umożliwia rozszerzoną buforowanie danych wyjściowych. Można na przykład skonfigurować co najmniej jednego niestandardowego dostawcę pamięci podręcznej, który jest przeznaczony dla innych urządzeń magazynujących, takich jak dyski lokalne lub zdalne, bazy danych, magazyn w chmurze i aparaty rozproszonej pamięci podręcznej.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DefaultProviderName">
      <MemberSignature Language="C#" Value="public static string DefaultProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.OutputCache.DefaultProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DefaultProviderName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultProviderName : string" Usage="System.Web.Caching.OutputCache.DefaultProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę domyślnego dostawcy skonfigurowanego dla wyjściowej pamięci podręcznej.</summary>
        <value>Nazwa domyślnego dostawcy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie odpowiedzi HTTP, renderowane strony i kontrolki używają `AspNetInternalProvider`dostawcy wyjściowej pamięci podręcznej w pamięci. Aby użyć innego dostawcy, należy ustawić `defaultProvider` atrybut na nazwę alternatywnego dostawcy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public static object Deserialize (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Deserialize(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.OutputCache.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Deserialize(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Deserialize : System.IO.Stream -&gt; obj" Usage="System.Web.Caching.OutputCache.Deserialize stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Dane do deserializacji.</param>
        <summary>Deserializacji obiekt binarny do danych wyjściowych w pamięci podręcznej.</summary>
        <returns>Obiekt, który zawiera deserializowane dane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

Ta metoda jest używana przez dostawców pamięci podręcznej danych wyjściowych, które działają w ramach częściowej relacji zaufania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Deserializowany obiekt, który jest zwracany przez metodę, nie jest prawidłowym typem danych wyjściowych.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Caching.OutputCacheProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Caching.OutputCacheProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.OutputCache.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As OutputCacheProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Caching::OutputCacheProviderCollection ^ Providers { System::Web::Caching::OutputCacheProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Web.Caching.OutputCacheProviderCollection" Usage="System.Web.Caching.OutputCache.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.OutputCacheProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję dostawców pamięci podręcznej danych wyjściowych, które są określone w pliku konfiguracji witryny sieci Web.</summary>
        <value>Kolekcja skonfigurowanych dostawców.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy skonfigurować co najmniej jednego niestandardowego dostawcę pamięci podręcznej, który jest przeznaczony dla innych urządzeń magazynujących, takich jak dyski lokalne lub zdalne, bazy danych, magazyn w chmurze i rozproszone aparaty pamięci podręcznej. Aby skonfigurować niestandardowych dostawców pamięci podręcznej, należy dodać dostawcę do kolekcji, która jest reprezentowana przez <xref:System.Web.Caching.OutputCache.Providers%2A> właściwość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public static void Serialize (System.IO.Stream stream, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Serialize(class System.IO.Stream stream, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.OutputCache.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Serialize(System::IO::Stream ^ stream, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member Serialize : System.IO.Stream * obj -&gt; unit" Usage="System.Web.Caching.OutputCache.Serialize (stream, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">Obiekt, który będzie zawierać serializowane dane binarne.</param>
        <param name="data">Dane wyjściowe pamięci podręcznej do serializacji.</param>
        <summary>Serializowanie danych wyjściowych w pamięci podręcznej do danych binarnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana przez dostawców pamięci podręcznej danych wyjściowych, które działają w ramach częściowej relacji zaufania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="data" />nie jest jednym z określonych typów danych wyjściowych.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="data" />is <see langword="null" /> lub <paramref name="stream" /> is .<see langword="null" /></exception>
      </Docs>
    </Member>
  </Members>
</Type>
