<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CacheDependency.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5971848a65c6d20655c657ffc94cd2e88f373bb0d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">971848a65c6d20655c657ffc94cd2e88f373bb0d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Caching.CacheDependency">
          <source>Establishes a dependency relationship between an item stored in an ASP.NET application's <ph id="ph1">&lt;see cref="T:System.Web.Caching.Cache" /&gt;</ph> object and a file, cache key, an array of either, or another <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">Ustanawia relację zależności między elementu przechowywanych w aplikacji ASP.NET <ph id="ph1">&lt;see cref="T:System.Web.Caching.Cache" /&gt;</ph> obiektu i plik, klucz pamięci podręcznej, tablicę jednego lub drugiego <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.Caching.CacheDependency">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class monitors the dependency relationships so that when any of them changes, the cached item will be automatically removed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> Klasy monitoruje relacji zależności, tak aby ich zmianie elementu pamięci podręcznej zostaną automatycznie usunięte.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>If you add an item to the cache that is dependent on another object, such as a file or array of files, the dependent item is automatically removed from the cache when the object changes.</source>
          <target state="translated">Dodaj element do pamięci podręcznej, który jest zależny od innego obiektu, takiego jak plik lub tablica plików, elementu zależnego zostanie automatycznie usunięta z pamięci podręcznej po zmianie obiektu.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>For example, suppose you create a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object based on data in an XML file.</source>
          <target state="translated">Załóżmy na przykład, możesz utworzyć <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> obiekt na podstawie danych w pliku XML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>You can add the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> to the cache with a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object that makes the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> dependent on the XML file.</source>
          <target state="translated">Możesz dodać <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> do pamięci podręcznej z <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiekt, który sprawia, że <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> zależny od pliku XML.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>If the XML file changes, the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is removed from the cache.</source>
          <target state="translated">W przypadku zmiany pliku XML, <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> zostanie usunięty z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>You can add items with dependencies to your application's cache with the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">Do pamięci podręcznej aplikacji można dodać elementy z zależnościami <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Add%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>You cannot use the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Item%2A&gt;</ph> property to add items to the cache with dependencies.</source>
          <target state="translated">Nie można użyć <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Item%2A&gt;</ph> właściwości, aby dodać elementy do zależności w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>To set up a dependency, you create an instance of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class, specifying the files, keys, or directories on which the item is dependent, and then pass the dependency to the <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Add%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Aby skonfigurować zależności, Utwórz wystąpienie <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> klasy, podając pliki, klucze lub katalogów, na których jest zależna, element, a następnie przekazać zależności do <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Add%2A&gt;</ph> lub <ph id="ph3">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> instance can represent a single file or directory, an array of files or directories, or an array of files or directories along with an array of cache keys (these represent other items stored in the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> object).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Wystąpienia może reprezentować pojedynczy plik lub katalog, tablica plików lub katalogów lub tablicę pliki lub katalogi wraz z tablicy kluczy pamięci podręcznej (reprezentuje inne elementy przechowywane w <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> obiektu).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> property to determine whether a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> changed since the previous request for an item in the <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, za pomocą <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> umożliwia określenie, czy <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> zmienione od czasu poprzedniego żądania dla elementu <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>The <ph id="ph1">`dt`</ph> value passed in the <ph id="ph2">`start`</ph> parameter is set to <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`dt`</ph> Przekazanej wartości <ph id="ph2">`start`</ph> ustawiono parametr <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Web.Caching.CacheDependency">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor">
          <source>If you want to derive your own class from <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>, implement this version of the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Jeśli chcesz dziedziczyć klasy z <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>, wdrożenie tej wersji <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A&gt;</ph> konstruktora.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor">
          <source>The following code example is a class that implements this version of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> constructor as all classes that derive from <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> are required to.</source>
          <target state="translated">Poniższy przykładowy kod jest klasa, która implementuje tę wersję <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> Konstruktor jako wszystkie klasy, które pochodzą z <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> są wymagane.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>The path to a file or directory that the cached object is dependent upon.</source>
          <target state="translated">Ścieżka do pliku lub katalogu, który jest zależny od obiektu w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>When this resource changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Po zmianie tego zasobu, obiektu w pamięci podręcznej staje się przestarzała i zostanie usunięta z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors a file or directory for changes.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> klasy, która monitoruje pliku lub katalogu dla zmian.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>If the directory or file specified in the <ph id="ph1">`filename`</ph> parameter is not found in the file system, it will be treated as missing.</source>
          <target state="translated">Jeśli katalog lub plik określony w <ph id="ph1">`filename`</ph> parametr nie zostanie znaleziony w systemie plików jest traktowany jako brakujące.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>If the directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when the directory or file is created.</source>
          <target state="translated">Jeśli brakuje pliku lub katalogu po obiektu zależności jest dodawany do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, obiektu w pamięci podręcznej zostaną usunięte z <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> podczas tworzenia pliku lub katalogu.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">Załóżmy na przykład, aby dodać obiekt do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> z zależnością następująca ścieżka pliku: c:\stocks\xyz.dat.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">Jeśli ten plik nie zostanie znaleziony podczas <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiekt jest tworzony, ale jest tworzony później, obiektu w pamięci podręcznej zostanie usunięty po utworzeniu pliku xyz.dat.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>The following code example creates an instance of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class with a dependency on an XML file.</source>
          <target state="translated">Poniższy przykład kodu tworzy wystąpienie <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> klasy, w zależności od pliku XML.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method then adds an item to the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> that is dependent upon that file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> Metoda następnie dodaje element do <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> jest zależne od tego pliku.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>You can also use the following technique to add an item to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on a file.</source>
          <target state="translated">Umożliwia także zrobić w następujący sposób, aby dodać element do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> z zależnością pliku.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">Tablica ścieżek (do plików lub katalogów), które jest zależny od obiektu w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Gdy dowolne z tych zmian zasobów obiektu w pamięci podręcznej staje się przestarzałe i zostanie usunięta z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories) for changes.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> klasy, która monitoruje tablicę ścieżki (do plików lub katalogów) dla zmian.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>If any of the files or directories in the array changes or is removed from the array, the cached item becomes obsolete and is removed from the application's <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> object.</source>
          <target state="translated">Jeśli pliki lub katalogi w tablicy zmiany lub jest usuwany z tablicy, pamięci podręcznej element staje się przestarzałe i zostanie usunięte z aplikacji <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">Ponadto jeśli katalogów i plików określonych w <ph id="ph1">`filenames`</ph> parametr nie zostanie znaleziony w systemie plików jest traktowany jako brakujące.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">Jeśli brakuje pliku lub katalogu po obiektu zależności jest dodawany do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, obiektu w pamięci podręcznej zostaną usunięte z <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> utworzenia tego pliku lub katalogu.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">Załóżmy na przykład, aby dodać obiekt do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> z zależnością następująca ścieżka pliku: c:\stocks\xyz.dat.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">Jeśli ten plik nie zostanie znaleziony podczas <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiekt jest tworzony, ale jest tworzony później, obiektu w pamięci podręcznej zostanie usunięty po utworzeniu pliku xyz.dat.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>When you create the array that contains the file dependencies, you must define the number of files that the item you are adding to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> is dependent on.</source>
          <target state="translated">Podczas tworzenia tablicy, która zawiera zależności pliku, należy zdefiniować liczbę plików, czy element jest dodawany do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> jest zależna od.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method to add an item to the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> with dependencies on an array of files.</source>
          <target state="translated">Poniższy przykład kodu pokazuje sposób użycia <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> metodę, aby dodać element do <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> z zależnościami w tablicy plików.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>You can also make the item dependent on an array of directories.</source>
          <target state="translated">Możesz również wprowadzić element zależny od tablicy katalogów.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>The path to a file or directory that the cached object is dependent upon.</source>
          <target state="translated">Ścieżka do pliku lub katalogu, który jest zależny od obiektu w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>When this resource changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Po zmianie tego zasobu, obiektu w pamięci podręcznej staje się przestarzała i zostanie usunięta z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>The time against which to check the last modified date of the directory or file.</source>
          <target state="translated">Czas, względem której Sprawdź datę ostatniej modyfikacji pliku lub katalogu.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors a file or directory for changes.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> klasy, która monitoruje pliku lub katalogu dla zmian.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>If the directory or file specified in the <ph id="ph1">`filename`</ph> parameter is not found in the file system, it will be treated as missing.</source>
          <target state="translated">Jeśli katalog lub plik określony w <ph id="ph1">`filename`</ph> parametr nie zostanie znaleziony w systemie plików jest traktowany jako brakujące.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>If the directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when the directory or file is created.</source>
          <target state="translated">Jeśli brakuje pliku lub katalogu po obiektu zależności jest dodawany do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, obiektu w pamięci podręcznej zostaną usunięte z <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> podczas tworzenia pliku lub katalogu.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">Załóżmy na przykład, aby dodać obiekt do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> z zależnością następująca ścieżka pliku: c:\stocks\xyz.dat.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">Jeśli ten plik nie zostanie znaleziony podczas <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiekt jest tworzony, ale jest tworzony później, obiektu w pamięci podręcznej zostanie usunięty po utworzeniu pliku xyz.dat.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>Change tracking begins immediately and is not directly based on the <ph id="ph1">`start`</ph> parameter.</source>
          <target state="translated">Śledzenie zmian rozpocznie się natychmiast i nie jest oparty bezpośrednio na <ph id="ph1">`start`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>Use the <ph id="ph1">`start`</ph> parameter to pass a date and time in the past against which you want to check the last modified date of the directory or file passed in the <ph id="ph2">`filename`</ph> parameter.</source>
          <target state="translated">Użyj <ph id="ph1">`start`</ph> parametr do przekazania datę i godzinę w przeszłości, względem którego chcesz sprawdzić jego ostatniej modyfikacji Data katalog lub plik przekazany <ph id="ph2">`filename`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>If the last modified date is later than the date and time set passed in the <ph id="ph1">`start`</ph> parameter, the cached item is removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">Jeśli jego ostatniej modyfikacji Data jest późniejsza niż data i czas zestaw przekazane <ph id="ph1">`start`</ph> parametru element pamięci podręcznej zostanie usunięty z <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>The following code example uses this constructor to instantiate a <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, then inserts an item into the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> with that dependency.</source>
          <target state="translated">Poniższy przykład kodu wykorzystuje ten konstruktor do tworzenia wystąpienia <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiekt, a następnie wstawia element do <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> z tym zależności.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>The <ph id="ph1">`dt`</ph> value passed in the <ph id="ph2">`start`</ph> parameter is set to <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`dt`</ph> Przekazanej wartości <ph id="ph2">`start`</ph> ustawiono parametr <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">Tablica ścieżek (do plików lub katalogów), które jest zależny od obiektu w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Gdy dowolne z tych zmian zasobów obiektu w pamięci podręcznej staje się przestarzałe i zostanie usunięta z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>The time against which to check the last modified date of the objects in the array.</source>
          <target state="translated">Czas, względem której Sprawdź datę ostatniej modyfikacji obiektu w tablicy.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories) for changes and specifies a time when change monitoring begins.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> klasy, która monitoruje tablicę ścieżki (do plików lub katalogów) dla zmian i określa czas, kiedy rozpoczyna monitorowanie zmian.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>If any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">Jeśli katalogów i plików określonych w <ph id="ph1">`filenames`</ph> parametr nie zostanie znaleziony w systemie plików jest traktowany jako brakujące.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">Jeśli brakuje pliku lub katalogu po obiektu zależności jest dodawany do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, obiektu w pamięci podręcznej zostaną usunięte z <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> utworzenia tego pliku lub katalogu.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">Załóżmy na przykład, aby dodać obiekt do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> z zależnością następująca ścieżka pliku: c:\stocks\xyz.dat.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">Jeśli ten plik nie zostanie znaleziony podczas <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiekt jest tworzony, ale jest tworzony później, obiektu w pamięci podręcznej zostanie usunięty po utworzeniu pliku xyz.dat.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>Change tracking begins immediately and is not directly based on the <ph id="ph1">`start`</ph> parameter.</source>
          <target state="translated">Śledzenie zmian rozpocznie się natychmiast i nie jest oparty bezpośrednio na <ph id="ph1">`start`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>Use the <ph id="ph1">`start`</ph> parameter to pass a date and time in the past against which you want to check the last modified date of the array passed in the <ph id="ph2">`filenames`</ph> parameter.</source>
          <target state="translated">Użyj <ph id="ph1">`start`</ph> przekazany parametr do przekazania datę i godzinę w przeszłości, względem którego chcesz sprawdzić datę ostatniej modyfikacji tablicy <ph id="ph2">`filenames`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>If the last modified date of any object in the array is later than the date and time set passed in the <ph id="ph1">`start`</ph> parameter, the cached item is removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">Jeśli jego ostatniej modyfikacji data wszystkich obiektów w tablicy jest późniejsza niż data i czas zestaw przekazane <ph id="ph1">`start`</ph> parametru element pamięci podręcznej zostanie usunięty z <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object that passes two XML files and a <ph id="ph2">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> value when the object is included as a parameter argument in an <ph id="ph3">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method call.</source>
          <target state="translated">Poniższy przykład kodu tworzy <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiekt, który przekazuje dwa pliki XML i <ph id="ph2">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> wartość, gdy obiekt jest uwzględniona jako argument parametru <ph id="ph3">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> wywołania metody.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">Tablica ścieżek (do plików lub katalogów), które jest zależny od obiektu w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Gdy dowolne z tych zmian zasobów obiektu w pamięci podręcznej staje się przestarzałe i zostanie usunięta z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>An array of cache keys that the new object monitors for changes.</source>
          <target state="translated">Tablica pamięci podręcznej kluczy, które nowy obiekt monitoruje zmiany.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Gdy dowolne z tych zmian kluczy pamięci podręcznej, skojarzone z tym obiektem zależności obiektu w pamięci podręcznej staje się przestarzała i zostanie usunięta z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> klasy, która monitoruje tablicę ścieżki (do plików lub katalogów) i/lub tablicy kluczy pamięci podręcznej zmian.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">Ponadto jeśli katalogów i plików określonych w <ph id="ph1">`filenames`</ph> parametr nie zostanie znaleziony w systemie plików jest traktowany jako brakujące.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">Jeśli brakuje pliku lub katalogu po obiektu zależności jest dodawany do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, obiektu w pamięci podręcznej zostaną usunięte z <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> utworzenia tego pliku lub katalogu.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">Załóżmy na przykład, aby dodać obiekt do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> z zależnością następująca ścieżka pliku: c:\stocks\xyz.dat.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">Jeśli ten plik nie zostanie znaleziony podczas <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiekt jest tworzony, ale jest tworzony później, obiektu w pamięci podręcznej zostanie usunięty po utworzeniu pliku xyz.dat.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>However, the <ph id="ph1">`cachekeys`</ph> dependency does not work the same way.</source>
          <target state="translated">Jednak <ph id="ph1">`cachekeys`</ph> zależności nie działają tak samo.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>If at least one value in the <ph id="ph1">`cachekeys`</ph> parameter does not exist at the time of an insert, the insert fails.</source>
          <target state="translated">Jeśli co najmniej jednej wartości w <ph id="ph1">`cachekeys`</ph> parametr nie istnieje w tym czasie insert, Wstaw kończy się niepowodzeniem.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>Note that there is no exception thrown for this scenario.</source>
          <target state="translated">Należy pamiętać, że nie ma żadnych wyjątek dla tego scenariusza.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>The following code fragment demonstrates how to insert an item into your application's <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on a key to another item placed in the cache.</source>
          <target state="translated">Poniższy fragment kodu pokazano, jak można wstawić elementu do aplikacji <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> z zależnością klucza do innego elementu umieszczony w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>Since this method uses array syntax, you must define the number of keys on which the item you are adding to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> is dependent.</source>
          <target state="translated">Ponieważ ta metoda używa składni tablicy, należy zdefiniować liczba kluczy na której element jest dodawany do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> jest zależna.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">Tablica ścieżek (do plików lub katalogów), które jest zależny od obiektu w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Gdy dowolne z tych zmian zasobów obiektu w pamięci podręcznej staje się przestarzałe i zostanie usunięta z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>An array of cache keys that the new object monitors for changes.</source>
          <target state="translated">Tablica pamięci podręcznej kluczy, które nowy obiekt monitoruje zmiany.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Gdy dowolne z tych zmian kluczy pamięci podręcznej, skojarzone z tym obiektem zależności obiektu w pamięci podręcznej staje się przestarzała i zostanie usunięta z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>The date and time against which to check the last modified date of the objects passed in the <bpt id="p1">&lt;c&gt;</bpt>filenames<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>cachekeys<ept id="p2">&lt;/c&gt;</ept> arrays.</source>
          <target state="translated">Data i godzina, do którego Sprawdź datę ostatniej modyfikacji obiektu, dla którego przekazano <bpt id="p1">&lt;c&gt;</bpt>nazwy plików<ept id="p1">&lt;/c&gt;</ept> i <bpt id="p2">&lt;c&gt;</bpt>cachekeys<ept id="p2">&lt;/c&gt;</ept> tablic.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> klasy, która monitoruje tablicę ścieżki (do plików lub katalogów) i/lub tablicy kluczy pamięci podręcznej zmian.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">Ponadto jeśli katalogów i plików określonych w <ph id="ph1">`filenames`</ph> parametr nie zostanie znaleziony w systemie plików jest traktowany jako brakujące.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">Jeśli brakuje pliku lub katalogu po obiektu zależności jest dodawany do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, obiektu w pamięci podręcznej zostaną usunięte z <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> utworzenia tego pliku lub katalogu.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">Załóżmy na przykład, aby dodać obiekt do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> z zależnością następująca ścieżka pliku: c:\stocks\xyz.dat.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">Jeśli ten plik nie zostanie znaleziony podczas <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiekt jest tworzony, ale jest tworzony później, obiektu w pamięci podręcznej zostanie usunięty po utworzeniu pliku xyz.dat.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>However, the <ph id="ph1">`cachekeys`</ph> dependency does not work the same way.</source>
          <target state="translated">Jednak <ph id="ph1">`cachekeys`</ph> zależności nie działają tak samo.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>If at least one value in the <ph id="ph1">`cachekeys`</ph> parameter does not exist at the time of an insert, the insert fails.</source>
          <target state="translated">Jeśli co najmniej jednej wartości w <ph id="ph1">`cachekeys`</ph> parametr nie istnieje w tym czasie insert, Wstaw kończy się niepowodzeniem.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Note that there is no exception thrown for this scenario.</source>
          <target state="translated">Należy pamiętać, że nie ma żadnych wyjątek dla tego scenariusza.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Change tracking begins immediately and is not directly based on the <ph id="ph1">`start`</ph> parameter.</source>
          <target state="translated">Śledzenie zmian rozpocznie się natychmiast i nie jest oparty bezpośrednio na <ph id="ph1">`start`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Use the <ph id="ph1">`start`</ph> parameter to pass a date and time in the past against which you want to check the last modified date of any object passed in the <ph id="ph2">`filenames`</ph> or <ph id="ph3">`cachekeys`</ph> parameters.</source>
          <target state="translated">Użyj <ph id="ph1">`start`</ph> przekazany parametr do przekazania datę i godzinę w przeszłości, względem którego chcesz sprawdzić daty ostatniej modyfikacji każdego obiektu <ph id="ph2">`filenames`</ph> lub <ph id="ph3">`cachekeys`</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>If the last modified date of any of those objects is later than the date and time set passed in the <ph id="ph1">`start`</ph> parameter, the cached item is removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">Jeśli jego ostatniej modyfikacji któregokolwiek z tych obiektów Data jest późniejsza niż data i czas zestaw przekazane <ph id="ph1">`start`</ph> parametru element pamięci podręcznej zostanie usunięty z <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>The following code example creates a <ph id="ph1">`CreateDependency`</ph> method.</source>
          <target state="translated">Poniższy przykład kodu tworzy <ph id="ph1">`CreateDependency`</ph> metody.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>When this method is called, it creates a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> property is used to add an item to the cache with a <ph id="ph3">`key`</ph> parameter of <ph id="ph4">`key1`</ph> and a value of <ph id="ph5">`Value 1`</ph>.</source>
          <target state="translated">Gdy ta metoda jest wywoływana, tworzy <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> obiektu i <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> właściwość jest używana do dodania elementu do pamięci podręcznej z <ph id="ph3">`key`</ph> parametr <ph id="ph4">`key1`</ph> i wartości <ph id="ph5">`Value 1`</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>An array of strings, <ph id="ph1">`dependencyKey`</ph>, is then created with the value of <ph id="ph2">`key1`</ph> as well.</source>
          <target state="translated">Tablica ciągów, <ph id="ph1">`dependencyKey`</ph>, zostanie utworzona z wartością <ph id="ph2">`key1`</ph> również.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>This <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> constructor then instantiates a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object that passes <ph id="ph3">`dependencyKey`</ph> and the <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> object as parameter arguments.</source>
          <target state="translated">To <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> następnie tworzy konstruktora <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiekt, który przekazuje <ph id="ph3">`dependencyKey`</ph> i <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> obiektu jako argumenty parametrów.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method is called next, using the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object as a parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> Metoda jest wywoływana następnie przy użyciu <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiektu jako parametr.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>This makes the object added to the cache using the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A&gt;</ph> method dependent on the <ph id="ph2">`key1`</ph> key.</source>
          <target state="translated">Dzięki temu obiekt dodany do pamięci podręcznej przy użyciu <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A&gt;</ph> zależne od metody <ph id="ph2">`key1`</ph> klucza.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">Tablica ścieżek (do plików lub katalogów), które jest zależny od obiektu w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Gdy dowolne z tych zmian zasobów obiektu w pamięci podręcznej staje się przestarzałe i zostanie usunięta z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>An array of cache keys that the new object monitors for changes.</source>
          <target state="translated">Tablica pamięci podręcznej kluczy, które nowy obiekt monitoruje zmiany.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Gdy dowolne z tych zmian kluczy pamięci podręcznej, skojarzone z tym obiektem zależności obiektu w pamięci podręcznej staje się przestarzała i zostanie usunięta z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>Another instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that this instance is dependent upon.</source>
          <target state="translated">Inne wystąpienie <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> klasy, która jest zależne od tego wystąpienia.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> klasy, która monitoruje tablicę ścieżki (do plików lub katalogów) i/lub tablicy kluczy pamięci podręcznej zmian.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>It also makes itself dependent upon a separate instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class.</source>
          <target state="translated">Zapewnia także sam zależne od oddzielnego wystąpienia <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">Ponadto jeśli katalogów i plików określonych w <ph id="ph1">`filenames`</ph> parametr nie zostanie znaleziony w systemie plików jest traktowany jako brakujące.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">Jeśli brakuje pliku lub katalogu po obiektu zależności jest dodawany do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, obiektu w pamięci podręcznej zostaną usunięte z <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> utworzenia tego pliku lub katalogu.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">Załóżmy na przykład, aby dodać obiekt do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> z zależnością następująca ścieżka pliku: c:\stocks\xyz.dat.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">Jeśli ten plik nie zostanie znaleziony podczas <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiekt jest tworzony, ale jest tworzony później, obiektu w pamięci podręcznej zostanie usunięty po utworzeniu pliku xyz.dat.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>However, the <ph id="ph1">`cachekeys`</ph> dependency does not work the same way.</source>
          <target state="translated">Jednak <ph id="ph1">`cachekeys`</ph> zależności nie działają tak samo.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>If at least one value in the <ph id="ph1">`cachekeys`</ph> parameter does not exist at the time of an insert, the insert fails.</source>
          <target state="translated">Jeśli co najmniej jednej wartości w <ph id="ph1">`cachekeys`</ph> parametr nie istnieje w tym czasie insert, Wstaw kończy się niepowodzeniem.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>Note that there is no exception thrown for this scenario.</source>
          <target state="translated">Należy pamiętać, że nie ma żadnych wyjątek dla tego scenariusza.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>The following code example creates a <ph id="ph1">`CreateDependency`</ph> method.</source>
          <target state="translated">Poniższy przykład kodu tworzy <ph id="ph1">`CreateDependency`</ph> metody.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>When this method is called, it uses the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> property to add an item to the cache with a <ph id="ph2">`key`</ph> parameter of <ph id="ph3">`key1`</ph> and a value of <ph id="ph4">`Value 1`</ph>.</source>
          <target state="translated">Gdy ta metoda jest wywoływana, używa <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> właściwości, aby dodać element do pamięci podręcznej z <ph id="ph2">`key`</ph> parametr <ph id="ph3">`key1`</ph> i wartości <ph id="ph4">`Value 1`</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>An array of strings, <ph id="ph1">`dependencyKey`</ph>, is then created with the value of <ph id="ph2">`key1`</ph> as well.</source>
          <target state="translated">Tablica ciągów, <ph id="ph1">`dependencyKey`</ph>, zostanie utworzona z wartością <ph id="ph2">`key1`</ph> również.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor is used to create a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, <ph id="ph3">`dep1`</ph>, which passes <ph id="ph4">`dependencyKey`</ph> as a parameter argument.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType&gt;</ph> Konstruktor jest używany do tworzenia <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiektu <ph id="ph3">`dep1`</ph>, które przechodzą <ph id="ph4">`dependencyKey`</ph> jako argument parametru.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>A second <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, <ph id="ph2">`dep2`</ph>, is created using this constructor, with <ph id="ph3">`dep1`</ph> passed as the third parameter argument.</source>
          <target state="translated">Drugi <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiektu <ph id="ph2">`dep2`</ph>, jest tworzony przy użyciu tego konstruktora z <ph id="ph3">`dep1`</ph> przekazany jako trzeci argument parametru.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>This second dependency is dependent on the first.</source>
          <target state="translated">Ta druga zależność jest zależna od pierwszego.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method is called next, using the second <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object as a parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> Metoda jest wywoływana następnie przy użyciu drugiego <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiektu jako parametr.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>If the first dependency changes in any way, the cached item will be invalidated.</source>
          <target state="translated">W przypadku pierwszego zależności zmiany w dowolny sposób, element pamięci podręcznej zostaną unieważnione.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">Tablica ścieżek (do plików lub katalogów), które jest zależny od obiektu w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Gdy dowolne z tych zmian zasobów obiektu w pamięci podręcznej staje się przestarzałe i zostanie usunięta z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>An array of cache keys that the new object monitors for changes.</source>
          <target state="translated">Tablica pamięci podręcznej kluczy, które nowy obiekt monitoruje zmiany.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</source>
          <target state="translated">Gdy dowolne z tych zmian kluczy pamięci podręcznej, skojarzone z tym obiektem zależności obiektu w pamięci podręcznej staje się przestarzała i zostanie usunięta z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Another instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that this instance is dependent upon.</source>
          <target state="translated">Inne wystąpienie <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> klasy, która jest zależne od tego wystąpienia.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>The time against which to check the last modified date of the objects in the arrays and the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">Zegary Sprawdź datę ostatniej modyfikacji obiektów w tablicach i <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> klasy, która monitoruje tablicę ścieżki (do plików lub katalogów) i/lub tablicy kluczy pamięci podręcznej zmian.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>It also makes itself dependent upon another instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class and a time when the change monitoring begins.</source>
          <target state="translated">Zapewnia także sam zależny od innego wystąpienia <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> klasy i czas rozpoczęcia monitorowania zmian.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">Ponadto jeśli katalogów i plików określonych w <ph id="ph1">`filenames`</ph> parametr nie zostanie znaleziony w systemie plików jest traktowany jako brakujące.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">Jeśli brakuje pliku lub katalogu po obiektu zależności jest dodawany do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, obiektu w pamięci podręcznej zostaną usunięte z <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> utworzenia tego pliku lub katalogu.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">Załóżmy na przykład, aby dodać obiekt do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> z zależnością następująca ścieżka pliku: c:\stocks\xyz.dat.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">Jeśli ten plik nie zostanie znaleziony podczas <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiekt jest tworzony, ale jest tworzony później, obiektu w pamięci podręcznej zostanie usunięty po utworzeniu pliku xyz.dat.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>However, the <ph id="ph1">`cachekeys`</ph> dependency does not work the same way.</source>
          <target state="translated">Jednak <ph id="ph1">`cachekeys`</ph> zależności nie działają tak samo.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If at least one value in the <ph id="ph1">`cachekeys`</ph> parameter does not exist at the time of an insert, the insert fails.</source>
          <target state="translated">Jeśli co najmniej jednej wartości w <ph id="ph1">`cachekeys`</ph> parametr nie istnieje w tym czasie insert, Wstaw kończy się niepowodzeniem.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Note that there is no exception thrown for this scenario.</source>
          <target state="translated">Należy pamiętać, że nie ma żadnych wyjątek dla tego scenariusza.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Change tracking begins immediately and is not directly based on the <ph id="ph1">`start`</ph> parameter.</source>
          <target state="translated">Śledzenie zmian rozpocznie się natychmiast i nie jest oparty bezpośrednio na <ph id="ph1">`start`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Use the <ph id="ph1">`start`</ph> parameter to pass a date and time in the past against which you want to check the last modified date of any of the objects passed in the <ph id="ph2">`filenames`</ph>, <ph id="ph3">`cachekeys`</ph>, or <ph id="ph4">`dependency`</ph> parameters.</source>
          <target state="translated">Użyj <ph id="ph1">`start`</ph> przekazany parametr do przekazania datę i godzinę w przeszłości, względem którego chcesz sprawdzić daty ostatniej modyfikacji w tych obiektów <ph id="ph2">`filenames`</ph>, <ph id="ph3">`cachekeys`</ph>, lub <ph id="ph4">`dependency`</ph> parametrów.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If the last modified date for any of those objects is later than the date and time passed in the <ph id="ph1">`start`</ph> parameter, the cached item is removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">Jeśli jego ostatniej modyfikacji któregokolwiek z tych obiektów Data jest późniejsza niż data i czas, który upłynął w <ph id="ph1">`start`</ph> parametru element pamięci podręcznej zostanie usunięty z <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>The following code example shows a <ph id="ph1">`CreateDependency`</ph> method.</source>
          <target state="translated">Poniższy kod przedstawia przykład <ph id="ph1">`CreateDependency`</ph> metody.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>When this method is called, it creates a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> property is used to add an item to the cache with a key parameter of <ph id="ph3">`key1`</ph> and a value of <ph id="ph4">`Value 1`</ph>.</source>
          <target state="translated">Gdy ta metoda jest wywoływana, tworzy <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> obiektu i <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> właściwość jest używana do dodania elementu do pamięci podręcznej z parametrem klucza <ph id="ph3">`key1`</ph> i wartości <ph id="ph4">`Value 1`</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>An array of strings, <ph id="ph1">`dependencyKey`</ph>, is then created with the value at its first (and only) index set to the value of <ph id="ph2">`key1`</ph> as well.</source>
          <target state="translated">Tablica ciągów, <ph id="ph1">`dependencyKey`</ph>, zostanie utworzona z wartością w jej indeks pierwszego (i tylko) ustawioną wartość <ph id="ph2">`key1`</ph> również.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor is then used to create a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, <ph id="ph3">`dep1`</ph>, which passes <ph id="ph4">`dependencyKey`</ph> as a parameter argument.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType&gt;</ph> Konstruktor jest następnie używany do tworzenia <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiektu <ph id="ph3">`dep1`</ph>, które przechodzą <ph id="ph4">`dependencyKey`</ph> jako argument parametru.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>A second <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, <ph id="ph2">`dep2`</ph>, is then created using this constructor, with <ph id="ph3">`dep1`</ph> and the <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> object passed as parameter arguments.</source>
          <target state="translated">Drugi <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiektu <ph id="ph2">`dep2`</ph>, zostanie utworzona przy użyciu tego konstruktora z <ph id="ph3">`dep1`</ph> i <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> przekazano obiekt jako argumenty parametrów.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>This second dependency is dependent on the first, and dependency monitoring will begin 10 seconds after the <ph id="ph1">`CreateDependency`</ph> method is called.</source>
          <target state="translated">Ta druga zależność jest zależna od pierwszego i zależności, monitorowanie rozpocznie 10 sekund po <ph id="ph1">`CreateDependency`</ph> metoda jest wywoływana.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method is called next, using the second <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object as a parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> Metoda jest wywoływana następnie przy użyciu drugiego <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiektu jako parametr.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If the first dependency changes in any way, the cached item will be invalidated.</source>
          <target state="translated">W przypadku pierwszego zależności zmiany w dowolny sposób, element pamięci podręcznej zostaną unieważnione.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.DependencyDispose">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class and any classes that derive from <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>.</source>
          <target state="translated">Zwalnia zasoby używane przez <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> klasy i wszystkie klasy, które pochodzi od <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.DependencyDispose">
          <source>Any class that derives from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class is required to implement this method to clean up resources the derived class has used.</source>
          <target state="translated">Każda klasa, która pochodzi z <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> klasa jest wymagana, aby zaimplementować tę metodę, aby wyczyścić zasoby został użyty w klasie pochodnej.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.DependencyDispose">
          <source>The following code example shows a class that inherits from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class and overrides the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.DependencyDispose%2A&gt;</ph> method.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia klasy, która dziedziczy <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> klasy i zastąpień <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.DependencyDispose%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.DependencyDispose">
          <source>When this method is called, it sets a custom Boolean property named <ph id="ph1">`Disposed`</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Ta metoda jest wywoływana, ustawia niestandardowe właściwości typu Boolean o nazwie <ph id="ph1">`Disposed`</ph> do <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.Dispose">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">Zwalnia zasoby używane przez <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.FinishInit">
          <source>Completes initialization of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">Kończy inicjowanie <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.FinishInit">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.FinishInit%2A&gt;</ph> method completes the initialization of the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.FinishInit%2A&gt;</ph> Inicjowanie ukończeniu metody <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.FinishInit">
          <source>This method is called by all <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> constructors.</source>
          <target state="translated">Ta metoda jest wywoływana przez wszystkie <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> konstruktorów.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.FinishInit">
          <source>The <ph id="ph1">&lt;see cref="M:System.Web.Caching.CacheDependency.FinishInit" /&gt;</ph> method must be called at the end of the constructor for derived classes to complete the initialization of the <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.Caching.CacheDependency.FinishInit" /&gt;</ph> Metoda musi zostać wywołana na końcu konstruktora dla klasy pochodne zakończyć inicjowanie <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.GetFileDependencies">
          <source>Gets the file dependencies.</source>
          <target state="translated">Pobiera zależnościach plików.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.GetFileDependencies">
          <source>The file dependencies.</source>
          <target state="translated">Zależności pliku.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>Retrieves a unique identifier for a <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">Pobiera unikatowy identyfikator <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>The unique identifier for the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">Unikatowy identyfikator <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>This method can be particularly useful for tracking multiple instances of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class associated with an item or an application.</source>
          <target state="translated">Ta metoda może być szczególnie przydatne do śledzenia wielu wystąpień <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> klasy skojarzone z elementu lub aplikacji.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>The identifier is a combination of either the file name (for a file dependency) or the key name (for a cache-key dependency) and a string that this method assigns to the dependency.</source>
          <target state="translated">Identyfikator jest kombinacją nazwy pliku (pliku zależności) lub nazwę klucza (dla zależności klucz pamięci podręcznej) i ciąg, który przypisuje tej metody do zależności.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>In classes that derive from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class, you can override this method to customize how it generates the unique identifier.</source>
          <target state="translated">W klasach pochodzących od <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> klasy, można przesłonić tę metodę w celu dostosowania sposobu generuje unikatowy identyfikator.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Web.Caching.AggregateCacheDependency&gt;</ph> object, named <ph id="ph2">`aggDep`</ph>, with two <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> objects in its array.</source>
          <target state="translated">Poniższy przykład kodu tworzy <ph id="ph1">&lt;xref:System.Web.Caching.AggregateCacheDependency&gt;</ph> obiektu o nazwie <ph id="ph2">`aggDep`</ph>, przy użyciu dwóch <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiektów w jego tablicy.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>Once <ph id="ph1">`aggDep`</ph> is instantiated, the code calls the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.GetUniqueID%2A&gt;</ph> method to generate a unique identifier for both dependencies that <ph id="ph3">`aggDep`</ph> contains and displays the identifiers to the containing page.</source>
          <target state="translated">Raz <ph id="ph1">`aggDep`</ph> zostanie uruchomiony, kod wywołuje <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.GetUniqueID%2A&gt;</ph> metodę, aby wygenerować unikatowy identyfikator dla obu zależności który <ph id="ph3">`aggDep`</ph> zawiera i Wyświetla identyfikatory do strony zawierającej.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>An item is then added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, using the <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Insert%2A&gt;</ph> method, with <ph id="ph3">`aggDep`</ph> as a dependency.</source>
          <target state="translated">Następnie dodać elementu do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>za pomocą <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Insert%2A&gt;</ph> metody z <ph id="ph3">`aggDep`</ph> jako zależność.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object has changed.</source>
          <target state="translated">Pobiera wartość wskazującą czy <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> obiekt został zmieniony.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object has changed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> obiekt został zmieniony; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>You can add an item to an ASP.NET application's <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>.</source>
          <target state="translated">Można dodać elementu do aplikacji ASP.NET <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> z <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>When the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> changes, the item added to the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> is invalidated and removed from the cache.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> zmienia element dodawany <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> jest unieważniona i usunięty z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>You can use this property to determine whether a <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> has changed, and recreate the item in the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> if that has occurred.</source>
          <target state="translated">Ta właściwość służy do określenia czy <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> został zmieniony i Utwórz ponownie elementu w <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> Jeśli który wystąpił.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> property to determine whether a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> changed since the previous request for an item in the <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu pokazuje, za pomocą <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> umożliwia określenie, czy <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> zmienione od czasu poprzedniego żądania dla elementu <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>The <ph id="ph1">`dt`</ph> value passed in the <ph id="ph2">`start`</ph> parameter is set to <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`dt`</ph> Przekazanej wartości <ph id="ph2">`start`</ph> ustawiono parametr <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.ItemRemoved">
          <source>Called when a monitored cache entry is removed.</source>
          <target state="translated">Wywoływane, gdy wpis monitorowanych pamięci podręcznej zostanie usunięty.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.KeepDependenciesAlive">
          <source>Updates the last access time of every cache item that depends on this item.</source>
          <target state="translated">Aktualizuje czas ostatniego dostępu każdy element pamięci podręcznej, która zależy od tego elementu.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>The source of the event.</source>
          <target state="translated">Źródło zdarzenia.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> object that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> Obiekt, który zawiera dane zdarzenia.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>Notifies the base <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object that the dependency represented by a derived <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class has changed.</source>
          <target state="translated">Powiadamia podstawowym <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> obiekt zależności reprezentowany przez pochodnego <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> klasa uległa zmianie.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>Any class that derives from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class must implement this method.</source>
          <target state="translated">Każda klasa, która pochodzi z <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> klasy należy zaimplementować tę metodę.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>When you derive from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class, you use the base functionality of any method or property that you have not overridden.</source>
          <target state="translated">Jeśli pochodzi od <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> klasy, można skorzystać z podstawowej funkcji metody lub właściwości, która nie przesłonili.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>When you create an instance of the derived class, it represents the files, cache keys, database tables, or other arbitrary objects that you want to make a cached item dependent upon.</source>
          <target state="translated">Podczas tworzenia wystąpienia klasy pochodnej reprezentuje plików, buforowanie kluczy, tabele bazy danych lub inne dowolne obiekty, które mają być zależne od elementu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>When a dependency item changes, this method notifies the base functionality of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class that the item has changed, so that the values of the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.UtcLastModified%2A&gt;</ph> properties can be updated.</source>
          <target state="translated">Podczas zmiany elementu zależności, ta metoda powiadamia podstawowe funkcje <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> klasy, która element został zmieniony, tak aby wartości <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> i <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.UtcLastModified%2A&gt;</ph> można zaktualizować właściwości.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>The following code example shows a class that inherits from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia klasy, która dziedziczy <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>It creates a public method, <ph id="ph1">`ResetDependency`</ph>, that uses the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A&gt;</ph> method to change the time at which the dependency was modified, and then calls the <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A&gt;</ph> method.</source>
          <target state="translated">Tworzy publiczną metodę <ph id="ph1">`ResetDependency`</ph>, która używa <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A&gt;</ph> metodę, aby zmienić czas modyfikacji zależności, a następnie wywołania <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A&gt;</ph> — metoda.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.SetCacheDependencyChanged(System.Action{System.Object,System.EventArgs})">
          <source>The dependency changed action.</source>
          <target state="translated">Zależność zmienić akcji.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.SetCacheDependencyChanged(System.Action{System.Object,System.EventArgs})">
          <source>Adds an Action method to handle notifying interested party in changes to this dependency.</source>
          <target state="translated">Dodaje metody akcji do obsługi powiadamiania zmiany tej zależności z zainteresowanych stron.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)">
          <source>The time when the dependency last changed.</source>
          <target state="translated">Godzina ostatniej zmiany zależności.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)">
          <source>Marks the time when a dependency last changed.</source>
          <target state="translated">Oznacza godzina ostatniej zmiany zależności.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)">
          <source>The following code example shows a class that inherits from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class.</source>
          <target state="translated">Poniższy przykładowy kod przedstawia klasy, która dziedziczy <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)">
          <source>It creates a public method, <ph id="ph1">`ResetDependency`</ph>, that uses the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A&gt;</ph> method to change the time at which the dependency was modified, and then calls the <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A&gt;</ph> method.</source>
          <target state="translated">Tworzy publiczną metodę <ph id="ph1">`ResetDependency`</ph>, która używa <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A&gt;</ph> metodę, aby zmienić czas modyfikacji zależności, a następnie wywołania <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A&gt;</ph> — metoda.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>Allows the first user to declare exclusive ownership of this dependency.</source>
          <target state="translated">Umożliwia pierwszy użytkownik zadeklarować wyłącznego prawa własności do tej zależności.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="true" /&gt;</ph> if the item was the first to take ownership otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="true" /&gt;</ph> Jeśli element został pierwszą osobą, która w przeciwnym razie przejąć na własność <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>This method declares that the dependency is used.</source>
          <target state="translated">Ta metoda deklaruje, że zależności jest używana.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>If another item previously called this method and took ownership, <ph id="ph1">`false`</ph> is returned.</source>
          <target state="translated">Jeśli inny element wcześniej wywołuje tę metodę i przejęcia własności, <ph id="ph1">`false`</ph> jest zwracany.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>A  <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> can only be used by one cache entry.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> może być używany tylko przez wpis pamięci podręcznej jeden.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>When an item is added to a cache with any cache dependencies specified, the cache should take ownership of those dependencies to make sure that they are not reused somewhere else.</source>
          <target state="translated">Gdy element zostanie dodany do pamięci podręcznej z wszelkie zależności w pamięci podręcznej określonych, pamięci podręcznej powinna przejąć na własność tych zależności, aby upewnić się, że ich nie będą używane miejsce else.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>Gets the time when the dependency was last changed.</source>
          <target state="translated">Pobiera godzinę ostatniej zmiany zależności.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>The time when the dependency was last changed.</source>
          <target state="translated">Czas ostatniej zmiany zależności.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>This property is measured in Coordinated Universal Time (UTC) (also known as Greenwich Mean Time).</source>
          <target state="translated">Ta właściwość jest mierzony w uniwersalnego czasu koordynowanego (UTC) (znanej także jako uniwersalny Greenwich).</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Web.Caching.AggregateCacheDependency&gt;</ph> class to add an item, with two <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object dependencies, to the <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">Poniższy przykład kodu wykorzystuje <ph id="ph1">&lt;xref:System.Web.Caching.AggregateCacheDependency&gt;</ph> klasę, aby dodać element, przy użyciu dwóch <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> obiekt zależności, do <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>When a request for the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> item is made, the code checks whether the item is in the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">Gdy żądanie dla <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> element staje się, kod sprawdza, czy element jest <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>If it is, the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.UtcLastModified%2A&gt;</ph> property is converted to a string and displayed on the page.</source>
          <target state="translated">Jeśli tak jest, <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.UtcLastModified%2A&gt;</ph> jest konwertowana na ciąg i wyświetlane na stronie.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>If it is not, the item and its two dependencies are created and added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">Jeśli nie, element i jego zależności dwóch są tworzone i dodawane do <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>