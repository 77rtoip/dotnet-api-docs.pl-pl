<Type Name="IEnumeratorContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.IEnumeratorContract&lt;C&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="025fffc8a5d8a9b5ee8ef5c1dc4593d1d8a2cd62" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36648253" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;C&gt; : System.AddIn.Contract.IContract where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.IEnumeratorContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumeratorContract(Of C)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename C&gt;&#xA; where C : IContractpublic interface class IEnumeratorContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IEnumeratorContract&lt;'C (requires 'C :&gt; IContract)&gt; = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C">
      <span data-ttu-id="4758c-101">Typ obiektów do wyliczenia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4758c-101">The type of objects to enumerate.</span>
      </span>
      <span data-ttu-id="4758c-102">
        <c>C</c> musi implementować <see cref="T:System.AddIn.Contract.IContract" /> interfejsu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4758c-102">
          <c>C</c> must implement the <see cref="T:System.AddIn.Contract.IContract" /> interface.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="4758c-103">Wylicza elementy kolekcji ogólnych <see cref="T:System.AddIn.Contract.IContract" /> obiektów.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4758c-103">Enumerates the elements of a generic collection of <see cref="T:System.AddIn.Contract.IContract" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4758c-104">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="4758c-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="4758c-105">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="4758c-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="4758c-106">W tym miejscu wartość zwracaną <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="4758c-106">At this position, the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span> <span data-ttu-id="4758c-107">W związku z tym należy wywołać <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> można poprawić modułu wyliczającego pierwszy element do kolekcji przed wywołaniem <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="4758c-107">Therefore, you must call <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
 <span data-ttu-id="4758c-108"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> Zwraca tego samego obiektu, dopóki nie <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="4758c-108"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="4758c-109"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> Ustawia wartość zwracaną <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="4758c-109"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 <span data-ttu-id="4758c-110">Jeśli <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="4758c-110">If <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="4758c-111">Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> zwracają również `false`.</span><span class="sxs-lookup"><span data-stu-id="4758c-111">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="4758c-112">Jeśli przez ostatnie wywołanie <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> zwrócił `false`, zwracana wartość <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="4758c-112">If the last call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span>  
  
 <span data-ttu-id="4758c-113">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="4758c-113">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="4758c-114">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="4758c-114">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public C GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !C GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As C" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; C GetCurrent();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrent : unit -&gt; 'C" Usage="iEnumeratorContract.GetCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>C</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4758c-115">Zwraca <see cref="T:System.AddIn.Contract.IContract" /> w kolekcji w bieżącym położeniu modułu wyliczającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4758c-115">Returns the <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4758c-116">
            <see cref="T:System.AddIn.Contract.IContract" /> w kolekcji w bieżącym położeniu modułu wyliczającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4758c-116">The <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4758c-117">Wartość zwracana <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> jest niezdefiniowana we wszystkich następujących warunków:</span><span class="sxs-lookup"><span data-stu-id="4758c-117">The return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="4758c-118">Moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji, natychmiast po utworzeniu modułu wyliczającego lub po <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="4758c-118">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> is called.</span></span> <span data-ttu-id="4758c-119"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> musi zostać wywołana, aby przejść do pierwszego elementu w kolekcji przed wywołaniem modułu wyliczającego <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span><span class="sxs-lookup"><span data-stu-id="4758c-119"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
-   <span data-ttu-id="4758c-120">Ostatnie wywołanie <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> zwrócił `false`, co oznacza koniec kolekcji.</span><span class="sxs-lookup"><span data-stu-id="4758c-120">The last call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="4758c-121">Moduł wyliczający jest unieważnione z powodu zmian wprowadzonych w kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów.</span><span class="sxs-lookup"><span data-stu-id="4758c-121">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="4758c-122"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> Zwraca tego samego obiektu, dopóki nie <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="4758c-122"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="4758c-123"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> Ustawia wartość zwracaną <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="4758c-123"><xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool" Usage="iEnumeratorContract.MoveNext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4758c-124">Moduł wyliczający należy przechodzi do następnego elementu kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4758c-124">Advances the enumerator to the next element of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4758c-125">
            <see langword="true" /> Jeśli moduł wyliczający został pomyślnie poprawionym do następnego elementu; <see langword="false" /> po zakończeniu zbierania moduł wyliczający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4758c-125">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4758c-126">Po utworzeniu modułu wyliczającego lub po <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> metoda jest wywoływana, moduł wyliczający jest umieszczony przed pierwszym elementem kolekcji.</span><span class="sxs-lookup"><span data-stu-id="4758c-126">After an enumerator is created or after the <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> method is called, an enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="4758c-127">W pierwszym wywołaniu <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> metody przenosi modułu wyliczającego pierwszym elementem kolekcji.</span><span class="sxs-lookup"><span data-stu-id="4758c-127">The first call to the <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> method moves the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="4758c-128">Jeśli <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="4758c-128">If <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="4758c-129">Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> zwracają również `false` do momentu <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="4758c-129">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> also return `false` until <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="4758c-130">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="4758c-130">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="4758c-131">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest bezpowrotnie unieważniona, a następne wywołanie <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> lub <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="4758c-131">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4758c-132">Kolekcja została zmodyfikowana po utworzeniu modułu wyliczającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4758c-132">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="iEnumeratorContract.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4758c-133">Ustawia modułu wyliczającego pozycji początkowej, czyli przed pierwszym elementem w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4758c-133">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4758c-134">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="4758c-134">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="4758c-135">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest bezpowrotnie unieważniona, a następne wywołanie <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> lub <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="4758c-135">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4758c-136">Kolekcja została zmodyfikowana po utworzeniu modułu wyliczającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4758c-136">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>