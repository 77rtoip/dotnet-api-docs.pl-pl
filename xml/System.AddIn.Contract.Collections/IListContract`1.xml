<Type Name="IListContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.IListContract&lt;C&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6692cfcfb27a1b3fd98eac28b64ae843b5d07169" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63916032" /></Metadata><TypeSignature Language="C#" Value="public interface IListContract&lt;C&gt; : System.AddIn.Contract.Collections.ICollectionContract&lt;C&gt;, System.AddIn.Contract.Collections.IEnumerableContract&lt;C&gt; where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.Collections.ICollectionContract`1&lt;!C&gt;, class System.AddIn.Contract.Collections.IEnumerableContract`1&lt;!C&gt;, class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.IListContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListContract(Of C)&#xA;Implements ICollectionContract(Of C), IEnumerableContract(Of C)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename C&gt;&#xA; where C : IContractpublic interface class IListContract : System::AddIn::Contract::Collections::ICollectionContract&lt;C&gt;, System::AddIn::Contract::Collections::IEnumerableContract&lt;C&gt;" />
  <TypeSignature Language="F#" Value="type IListContract&lt;'C (requires 'C :&gt; IContract)&gt; = interface&#xA;    interface ICollectionContract&lt;'C (requires 'C :&gt; IContract)&gt;&#xA;    interface IEnumerableContract&lt;'C (requires 'C :&gt; IContract)&gt;&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.Collections.ICollectionContract&lt;C&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.AddIn.Contract.Collections.IEnumerableContract&lt;C&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C"><span data-ttu-id="94e73-101">Typ obiektów na liście.</span><span class="sxs-lookup"><span data-stu-id="94e73-101">The type of objects in the list.</span></span> <span data-ttu-id="94e73-102"><paramref name="C" /> musisz zaimplementować <see cref="T:System.AddIn.Contract.IContract" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="94e73-102"><paramref name="C" /> must implement the <see cref="T:System.AddIn.Contract.IContract" /> interface.</span></span></typeparam>
    <summary><span data-ttu-id="94e73-103">Reprezentuje kolekcję ogólny <see cref="T:System.AddIn.Contract.IContract" /> obiektów, które mogą być indywidualnie uzyskać dostęp przez indeks.</span><span class="sxs-lookup"><span data-stu-id="94e73-103">Represents a generic collection of <see cref="T:System.AddIn.Contract.IContract" /> objects that can be individually accessed by index.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public C GetItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !C GetItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (index As Integer) As C" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; C GetItem(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : int -&gt; 'C" Usage="iListContract.GetItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>C</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="94e73-104">Liczony od zera indeks elementu do pobrania.</span><span class="sxs-lookup"><span data-stu-id="94e73-104">The zero-based index of the element to get.</span></span></param>
        <summary><span data-ttu-id="94e73-105">Zwraca element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="94e73-105">Returns the element at the specified index.</span></span></summary>
        <returns><span data-ttu-id="94e73-106">Element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="94e73-106">The element at the specified index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94e73-107"><xref:System.AddIn.Contract.Collections.IListContract%601.GetItem%2A> Metoda nie powoduje usunięcia elementu pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="94e73-107">The <xref:System.AddIn.Contract.Collections.IListContract%601.GetItem%2A> method does not remove the element at the specified index.</span></span> <span data-ttu-id="94e73-108">Aby usunąć element z <xref:System.AddIn.Contract.Collections.IListContract%601>, użyj <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="94e73-108">To remove an element from the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="94e73-109"><paramref name="index" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="94e73-109"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="94e73-110">—lub—</span><span class="sxs-lookup"><span data-stu-id="94e73-110">-or-</span></span> 
 <span data-ttu-id="94e73-111"><paramref name="index" /> jest równa lub większa niż wartość zwracaną przez <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span><span class="sxs-lookup"><span data-stu-id="94e73-111"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As C) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(C item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'C -&gt; int" Usage="iListContract.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="94e73-112"><see cref="T:System.AddIn.Contract.IContract" /> Do zlokalizowania w <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="94e73-112">The <see cref="T:System.AddIn.Contract.IContract" /> to locate in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span></span></param>
        <summary><span data-ttu-id="94e73-113">Zwraca indeks elementu określonego w <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="94e73-113">Returns the index of a specific element in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span></span></summary>
        <returns><span data-ttu-id="94e73-114">Indeks <paramref name="item" /> Jeśli na liście; w przeciwnym razie wartość -1.</span><span class="sxs-lookup"><span data-stu-id="94e73-114">The index of <paramref name="item" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As C)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, C item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'C -&gt; unit" Usage="iListContract.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="94e73-115">Liczony od zera indeks, w której mają zostać wstawione <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="94e73-115">The zero-based index at which to insert <paramref name="item" />.</span></span></param>
        <param name="item"><span data-ttu-id="94e73-116"><see cref="T:System.AddIn.Contract.IContract" /> Do wstawienia w <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span><span class="sxs-lookup"><span data-stu-id="94e73-116">The <see cref="T:System.AddIn.Contract.IContract" /> to insert in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span></span></param>
        <summary><span data-ttu-id="94e73-117">Wstawia element w <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="94e73-117">Inserts an element in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94e73-118">Po wywołaniu metody <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A>, elementy, które następują punkt wstawiania przenieść pomieścić nowy element.</span><span class="sxs-lookup"><span data-stu-id="94e73-118">After you call <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A>, the elements that follow the insertion point move to accommodate the new element.</span></span> <span data-ttu-id="94e73-119">Indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="94e73-119">The indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="94e73-120">Aby zastąpić element z określonym indeksem, należy użyć <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="94e73-120">To replace an element at a specified index, use the <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method.</span></span>  
  
 <span data-ttu-id="94e73-121">Aby określić, czy <xref:System.AddIn.Contract.Collections.IListContract%601> jest tylko do odczytu, wywołaj <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="94e73-121">To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="94e73-122"><paramref name="index" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="94e73-122"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="94e73-123">—lub—</span><span class="sxs-lookup"><span data-stu-id="94e73-123">-or-</span></span> 
 <span data-ttu-id="94e73-124"><paramref name="index" /> jest równa lub większa niż wartość zwracaną przez <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span><span class="sxs-lookup"><span data-stu-id="94e73-124"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94e73-125"><see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> Jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="94e73-125">The <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iListContract.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="94e73-126">Indeks elementu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="94e73-126">The index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="94e73-127">Usuwa element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="94e73-127">Removes the element at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94e73-128">Po wywołaniu metody <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A>, przenieść elementy umieszczone po usuniętym elemencie zająć zwolnione miejsce.</span><span class="sxs-lookup"><span data-stu-id="94e73-128">After you call <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A>, the elements that follow the removed element move to occupy the vacated spot.</span></span> <span data-ttu-id="94e73-129">Indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="94e73-129">The indexes of the elements that are moved are also updated.</span></span>  
  
 <span data-ttu-id="94e73-130">Aby określić, czy <xref:System.AddIn.Contract.Collections.IListContract%601> jest tylko do odczytu, wywołaj <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="94e73-130">To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="94e73-131"><paramref name="index" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="94e73-131"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="94e73-132">—lub—</span><span class="sxs-lookup"><span data-stu-id="94e73-132">-or-</span></span> 
 <span data-ttu-id="94e73-133"><paramref name="index" /> jest równa lub większa niż wartość zwracaną przez <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span><span class="sxs-lookup"><span data-stu-id="94e73-133"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94e73-134"><see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> Jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="94e73-134">The <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public void SetItem (int index, C value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetItem(int32 index, !C value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItem (index As Integer, value As C)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItem(int index, C value);" />
      <MemberSignature Language="F#" Value="abstract member SetItem : int * 'C -&gt; unit" Usage="iListContract.SetItem (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="C" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="94e73-135">Liczony od zera indeks, od którego należy ustawić element.</span><span class="sxs-lookup"><span data-stu-id="94e73-135">The zero-based index at which to set the element.</span></span></param>
        <param name="value"><span data-ttu-id="94e73-136">Element, aby ustawić pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="94e73-136">The element to set at the specified index.</span></span></param>
        <summary><span data-ttu-id="94e73-137">Zamienia element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="94e73-137">Replaces the element at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94e73-138"><xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> Metoda zastępuje element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="94e73-138">The <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method replaces the element at the specified index.</span></span> <span data-ttu-id="94e73-139">Aby dodać element do <xref:System.AddIn.Contract.Collections.IListContract%601>, użyj <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="94e73-139">To add an element to the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A> method.</span></span>  
  
 <span data-ttu-id="94e73-140">Aby określić, czy <xref:System.AddIn.Contract.Collections.IListContract%601> jest tylko do odczytu, wywołaj <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="94e73-140">To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="94e73-141"><paramref name="index" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="94e73-141"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="94e73-142">—lub—</span><span class="sxs-lookup"><span data-stu-id="94e73-142">-or-</span></span> 
 <span data-ttu-id="94e73-143"><paramref name="index" /> jest równa lub większa niż wartość zwracaną przez <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span><span class="sxs-lookup"><span data-stu-id="94e73-143"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="94e73-144"><see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> Jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="94e73-144">The <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>