<Type Name="MetadataWorkspace" FullName="System.Data.Metadata.Edm.MetadataWorkspace">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5df7178e5f837ed3fa612d84b522fc77e8667b96" /><Meta Name="ms.sourcegitcommit" Value="0807ab0a64414edc9b4d09d3877857e83cb7f7a4" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/13/2019" /><Meta Name="ms.locfileid" Value="68972564" /></Metadata><TypeSignature Language="C#" Value="public sealed class MetadataWorkspace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetadataWorkspace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.MetadataWorkspace" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetadataWorkspace" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataWorkspace sealed" />
  <TypeSignature Language="F#" Value="type MetadataWorkspace = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fd889-101">Reprezentuje składnik usługi ADO.NET metadanych środowiska uruchomieniowego, który zapewnia obsługę pobierania metadanych z różnych źródeł.</span><span class="sxs-lookup"><span data-stu-id="fd889-101">Represents the ADO.NET metadata runtime service component that provides support for retrieving metadata from various sources.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd889-102"><xref:System.Data.Metadata.Edm.MetadataWorkspace> Klasa zawiera centralny składnik usługi uruchomieniowej, którego można użyć do współdziałania z metadanymi modelu koncepcyjnego w kontekście danej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fd889-102">The <xref:System.Data.Metadata.Edm.MetadataWorkspace> class provides a central runtime service component that you can use to interact with conceptual model metadata in the context of a given application.</span></span>
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd889-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="fd889-103">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataWorkspace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetadataWorkspace();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd889-104">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="fd889-104">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataWorkspace (System.Collections.Generic.IEnumerable&lt;string&gt; paths, System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; assembliesToConsider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; paths, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; assembliesToConsider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paths As IEnumerable(Of String), assembliesToConsider As IEnumerable(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetadataWorkspace(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ paths, System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ assembliesToConsider);" />
      <MemberSignature Language="F#" Value="new System.Data.Metadata.Edm.MetadataWorkspace : seq&lt;string&gt; * seq&lt;System.Reflection.Assembly&gt; -&gt; System.Data.Metadata.Edm.MetadataWorkspace" Usage="new System.Data.Metadata.Edm.MetadataWorkspace (paths, assembliesToConsider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paths" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="assembliesToConsider" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="paths"><span data-ttu-id="fd889-105">Ścieżki do metadanych obszaru roboczego.</span><span class="sxs-lookup"><span data-stu-id="fd889-105">The paths to workspace metadata.</span></span></param>
        <param name="assembliesToConsider"><span data-ttu-id="fd889-106">Nazwy zestawów używane do konstruowania obszaru roboczego.</span><span class="sxs-lookup"><span data-stu-id="fd889-106">The names of assemblies used to construct workspace.</span></span></param>
        <summary><span data-ttu-id="fd889-107">Inicjuje nowe wystąpienie <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> klasy przy użyciu określonych ścieżek i zestawów.</span><span class="sxs-lookup"><span data-stu-id="fd889-107">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class using the specified paths and assemblies.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCache">
      <MemberSignature Language="C#" Value="public static void ClearCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.ClearCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearCache();" />
      <MemberSignature Language="F#" Value="static member ClearCache : unit -&gt; unit" Usage="System.Data.Metadata.Edm.MetadataWorkspace.ClearCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd889-108">Czyści wszystkie wpisy pamięci podręcznej metadanych.</span><span class="sxs-lookup"><span data-stu-id="fd889-108">Clears all the metadata cache entries.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntitySqlParser">
      <MemberSignature Language="C#" Value="public System.Data.Common.EntitySql.EntitySqlParser CreateEntitySqlParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.EntitySql.EntitySqlParser CreateEntitySqlParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntitySqlParser () As EntitySqlParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::EntitySql::EntitySqlParser ^ CreateEntitySqlParser();" />
      <MemberSignature Language="F#" Value="member this.CreateEntitySqlParser : unit -&gt; System.Data.Common.EntitySql.EntitySqlParser" Usage="metadataWorkspace.CreateEntitySqlParser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.EntitySql.EntitySqlParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd889-109">Tworzy skonfigurowany do korzystania z przestrzeni <see cref="F:System.Data.Metadata.Edm.DataSpace.CSpace" /> danych. <see cref="T:System.Data.Common.EntitySql.EntitySqlParser" /></span><span class="sxs-lookup"><span data-stu-id="fd889-109">Creates an <see cref="T:System.Data.Common.EntitySql.EntitySqlParser" /> configured to use the <see cref="F:System.Data.Metadata.Edm.DataSpace.CSpace" /> data space.</span></span></summary>
        <returns><span data-ttu-id="fd889-110">Utworzony obiekt parsera.</span><span class="sxs-lookup"><span data-stu-id="fd889-110">The created parser object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryCommandTree">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbQueryCommandTree CreateQueryCommandTree (System.Data.Common.CommandTrees.DbExpression query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.CommandTrees.DbQueryCommandTree CreateQueryCommandTree(class System.Data.Common.CommandTrees.DbExpression query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateQueryCommandTree (query As DbExpression) As DbQueryCommandTree" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::CommandTrees::DbQueryCommandTree ^ CreateQueryCommandTree(System::Data::Common::CommandTrees::DbExpression ^ query);" />
      <MemberSignature Language="F#" Value="member this.CreateQueryCommandTree : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbQueryCommandTree" Usage="metadataWorkspace.CreateQueryCommandTree query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQueryCommandTree</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Common.CommandTrees.DbExpression" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="fd889-111">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> który definiuje zapytanie.</span><span class="sxs-lookup"><span data-stu-id="fd889-111">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the query.</span></span></param>
        <summary><span data-ttu-id="fd889-112">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> powiązaną z tym obszarem roboczym metadanych na podstawie określonego wyrażenia zapytania.</span><span class="sxs-lookup"><span data-stu-id="fd889-112">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> bound to this metadata workspace based on the specified query expression.</span></span></summary>
        <returns><span data-ttu-id="fd889-113">Nowe <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> z określonym wyrażeniem, które jest <see cref="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query" /> jego właściwością.</span><span class="sxs-lookup"><span data-stu-id="fd889-113">A new <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> with the specified expression as it's <see cref="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query" /> property.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="query" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="query" /></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEdmSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd889-114">Zwraca obiekt, który reprezentuje typ <see cref="T:System.Data.Metadata.Edm.EdmType" /> , który jest zgodny z typem dostarczonym <paramref name="objectSpaceType" />przezparametr. <see cref="T:System.Data.Metadata.Edm.StructuralType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-114">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEdmSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EnumType GetEdmSpaceType (System.Data.Metadata.Edm.EnumType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EnumType GetEdmSpaceType(class System.Data.Metadata.Edm.EnumType objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.EnumType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEdmSpaceType (objectSpaceType As EnumType) As EnumType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EnumType ^ GetEdmSpaceType(System::Data::Metadata::Edm::EnumType ^ objectSpaceType);" />
      <MemberSignature Language="F#" Value="member this.GetEdmSpaceType : System.Data.Metadata.Edm.EnumType -&gt; System.Data.Metadata.Edm.EnumType" Usage="metadataWorkspace.GetEdmSpaceType objectSpaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EnumType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="fd889-115"><see cref="T:System.Data.Metadata.Edm.EnumType" /> , Który dostarcza typ w przestrzeni obiektów.</span><span class="sxs-lookup"><span data-stu-id="fd889-115">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> that supplies the type in the object space.</span></span></param>
        <summary><span data-ttu-id="fd889-116">Zwraca obiekt, który reprezentuje typ <see cref="T:System.Data.Metadata.Edm.EdmType" /> , który jest zgodny z typem dostarczonym <paramref name="objectSpaceType" />przezparametr. <see cref="T:System.Data.Metadata.Edm.StructuralType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-116">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="fd889-117">Obiekt, który <see cref="T:System.Data.Metadata.Edm.EdmType" />reprezentuje. <see cref="T:System.Data.Metadata.Edm.StructuralType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-117">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="fd889-118">Jeśli nie ma dopasowanego typu, ta metoda zwraca wartość null.</span><span class="sxs-lookup"><span data-stu-id="fd889-118">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEdmSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.StructuralType GetEdmSpaceType (System.Data.Metadata.Edm.StructuralType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.StructuralType GetEdmSpaceType(class System.Data.Metadata.Edm.StructuralType objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEdmSpaceType (objectSpaceType As StructuralType) As StructuralType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::StructuralType ^ GetEdmSpaceType(System::Data::Metadata::Edm::StructuralType ^ objectSpaceType);" />
      <MemberSignature Language="F#" Value="member this.GetEdmSpaceType : System.Data.Metadata.Edm.StructuralType -&gt; System.Data.Metadata.Edm.StructuralType" Usage="metadataWorkspace.GetEdmSpaceType objectSpaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.StructuralType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="fd889-119"><see cref="T:System.Data.Metadata.Edm.StructuralType" /> , Który dostarcza typ w przestrzeni obiektów.</span><span class="sxs-lookup"><span data-stu-id="fd889-119">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> that supplies the type in the object space.</span></span></param>
        <summary><span data-ttu-id="fd889-120">Zwraca obiekt, który reprezentuje typ <see cref="T:System.Data.Metadata.Edm.EdmType" /> , który jest zgodny z typem dostarczonym <paramref name="objectSpaceType" />przezparametr. <see cref="T:System.Data.Metadata.Edm.StructuralType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-120">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="fd889-121">Obiekt, który <see cref="T:System.Data.Metadata.Edm.EdmType" />reprezentuje. <see cref="T:System.Data.Metadata.Edm.StructuralType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-121">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="fd889-122">Jeśli nie ma dopasowanego typu, ta metoda zwraca wartość null.</span><span class="sxs-lookup"><span data-stu-id="fd889-122">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEntityContainer">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd889-123"><see cref="T:System.Data.Metadata.Edm.EntityContainer" /> Zwraca obiekt przy użyciu określonej nazwy kontenera jednostki i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-123">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntityContainer GetEntityContainer(string name, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntityContainer ^ GetEntityContainer(System::String ^ name, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetEntityContainer : string * System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.EntityContainer" Usage="metadataWorkspace.GetEntityContainer (name, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fd889-124">Nazwa kontenera jednostek.</span><span class="sxs-lookup"><span data-stu-id="fd889-124">The name of the entity container.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="fd889-125">Model koncepcyjny, na którym jest przeszukiwany kontener jednostek.</span><span class="sxs-lookup"><span data-stu-id="fd889-125">The conceptual model on which the entity container is searched.</span></span></param>
        <summary><span data-ttu-id="fd889-126"><see cref="T:System.Data.Metadata.Edm.EntityContainer" /> Zwraca obiekt przy użyciu określonej nazwy kontenera jednostki i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-126">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="fd889-127">Jeśli nie ma kontenera jednostek, ta metoda zwraca wartość null; w przeciwnym razie zwraca kontener pierwszego obiektu Entity.</span><span class="sxs-lookup"><span data-stu-id="fd889-127">If there is no entity container, this method returns null; otherwise, it returns the first entity container.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntityContainer GetEntityContainer(string name, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntityContainer ^ GetEntityContainer(System::String ^ name, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetEntityContainer : string * bool * System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.EntityContainer" Usage="metadataWorkspace.GetEntityContainer (name, ignoreCase, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fd889-128">Nazwa kontenera jednostek.</span><span class="sxs-lookup"><span data-stu-id="fd889-128">The name of the entity container.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="fd889-129"><see langword="true" />Aby wykonać wyszukiwanie bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fd889-129"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="fd889-130">Model koncepcyjny, na którym jest przeszukiwany kontener jednostek.</span><span class="sxs-lookup"><span data-stu-id="fd889-130">The conceptual model on which the entity container is searched.</span></span></param>
        <summary><span data-ttu-id="fd889-131"><see cref="T:System.Data.Metadata.Edm.EntityContainer" /> Zwraca obiekt przy użyciu określonej nazwy kontenera jednostki i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-131">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="fd889-132">Jeśli nie ma kontenera jednostek, ta metoda zwraca wartość null; w przeciwnym razie zwraca kontener pierwszego obiektu Entity.</span><span class="sxs-lookup"><span data-stu-id="fd889-132">If there is no entity container, this method returns null; otherwise, it returns the first entity container.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFunctions">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd889-133">Zwraca wszystkie przeciążenia funkcji przy użyciu określonej nazwy, nazwy przestrzeni nazw i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-133">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetFunctions : string * string * System.Data.Metadata.Edm.DataSpace -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="metadataWorkspace.GetFunctions (name, namespaceName, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fd889-134">Nazwa funkcji.</span><span class="sxs-lookup"><span data-stu-id="fd889-134">The name of the function.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="fd889-135">Przestrzeń nazw funkcji.</span><span class="sxs-lookup"><span data-stu-id="fd889-135">The namespace of the function.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="fd889-136">Model koncepcyjny, w którym przeszukiwane są funkcje.</span><span class="sxs-lookup"><span data-stu-id="fd889-136">The conceptual model in which the functions are searched.</span></span></param>
        <summary><span data-ttu-id="fd889-137">Zwraca wszystkie przeciążenia funkcji przy użyciu określonej nazwy, nazwy przestrzeni nazw i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-137">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="fd889-138">Kolekcja typu <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> , która zawiera wszystkie funkcje, które pasują do określonej nazwy w danej przestrzeni nazw i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-138">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the functions that match the specified name in a given namespace and a data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="member this.GetFunctions : string * string * System.Data.Metadata.Edm.DataSpace * bool -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="metadataWorkspace.GetFunctions (name, namespaceName, dataSpace, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fd889-139">Nazwa funkcji.</span><span class="sxs-lookup"><span data-stu-id="fd889-139">The name of the function.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="fd889-140">Przestrzeń nazw funkcji.</span><span class="sxs-lookup"><span data-stu-id="fd889-140">The namespace of the function.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="fd889-141">Model koncepcyjny, w którym przeszukiwane są funkcje.</span><span class="sxs-lookup"><span data-stu-id="fd889-141">The conceptual model in which the functions are searched.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="fd889-142"><see langword="true" />Aby wykonać wyszukiwanie bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fd889-142"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fd889-143">Zwraca wszystkie przeciążenia funkcji przy użyciu określonej nazwy, nazwy przestrzeni nazw i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-143">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="fd889-144">Kolekcja typu <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> , która zawiera wszystkie funkcje, które pasują do określonej nazwy w danej przestrzeni nazw i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-144">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the functions that match the specified name in a given namespace and a data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItem&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd889-145">Zwraca element przy użyciu określonej tożsamości i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-145">Returns an item by using the specified identity and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetItem&lt;T&gt; (string identity, System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem T GetItem(System::String ^ identity, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItem : string * System.Data.Metadata.Edm.DataSpace -&gt; 'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.GetItem (identity, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="fd889-146">Typ zwracany przez metodę.</span><span class="sxs-lookup"><span data-stu-id="fd889-146">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="fd889-147">Tożsamość elementu.</span><span class="sxs-lookup"><span data-stu-id="fd889-147">The identity of the item.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="fd889-148">Model koncepcyjny, w którym jest przeszukiwany element.</span><span class="sxs-lookup"><span data-stu-id="fd889-148">The conceptual model in which the item is searched.</span></span></param>
        <summary><span data-ttu-id="fd889-149">Zwraca element przy użyciu określonej tożsamości i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-149">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="fd889-150">Element, który jest zgodny z podaną tożsamością w określonym modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-150">The item that matches the given identity in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetItem&lt;T&gt; (string identity, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem T GetItem(System::String ^ identity, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItem : string * bool * System.Data.Metadata.Edm.DataSpace -&gt; 'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.GetItem (identity, ignoreCase, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="fd889-151">Typ zwracany przez metodę.</span><span class="sxs-lookup"><span data-stu-id="fd889-151">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="fd889-152">Tożsamość elementu.</span><span class="sxs-lookup"><span data-stu-id="fd889-152">The identity of the item.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="fd889-153"><see langword="true" />Aby wykonać wyszukiwanie bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fd889-153"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="fd889-154">Model koncepcyjny, na którym jest przeszukiwany element.</span><span class="sxs-lookup"><span data-stu-id="fd889-154">The conceptual model on which the item is searched.</span></span></param>
        <summary><span data-ttu-id="fd889-155">Zwraca element przy użyciu określonej tożsamości i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-155">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="fd889-156">Element, który jest zgodny z podaną tożsamością w określonym modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-156">The item that matches the given identity in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemCollection">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.ItemCollection GetItemCollection (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.ItemCollection GetItemCollection(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::ItemCollection ^ GetItemCollection(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItemCollection : System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.ItemCollection" Usage="metadataWorkspace.GetItemCollection dataSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ItemCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="fd889-157"><see cref="T:System.Data.Metadata.Edm.DataSpace" /> Z którego mają zostać pobrane elementy.</span><span class="sxs-lookup"><span data-stu-id="fd889-157">The <see cref="T:System.Data.Metadata.Edm.DataSpace" /> from which to retrieve items.</span></span></param>
        <summary><span data-ttu-id="fd889-158">Pobiera <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> elementy.</span><span class="sxs-lookup"><span data-stu-id="fd889-158">Gets <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> items.</span></span></summary>
        <returns><span data-ttu-id="fd889-159"><see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> Elementy.</span><span class="sxs-lookup"><span data-stu-id="fd889-159">The <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt; GetItems (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.GlobalItem&gt; GetItems(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::GlobalItem ^&gt; ^ GetItems(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItems : System.Data.Metadata.Edm.DataSpace -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt;" Usage="metadataWorkspace.GetItems dataSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="fd889-160">Model koncepcyjny, dla którego jest wymagana lista elementów.</span><span class="sxs-lookup"><span data-stu-id="fd889-160">The conceptual model for which the list of items is needed.</span></span></param>
        <summary><span data-ttu-id="fd889-161">Pobiera wszystkie elementy w określonym modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-161">Gets all the items in the specified data model.</span></span></summary>
        <returns><span data-ttu-id="fd889-162">Kolekcja typu <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> , która zawiera wszystkie elementy w określonym modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-162">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the items in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; GetItems&lt;T&gt; (System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; GetItems&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems``1(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ GetItems(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItems : System.Data.Metadata.Edm.DataSpace -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)&gt; (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.GetItems dataSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="fd889-163">Typ zwracany przez metodę.</span><span class="sxs-lookup"><span data-stu-id="fd889-163">The type returned by the method.</span></span></typeparam>
        <param name="dataSpace"><span data-ttu-id="fd889-164">Model koncepcyjny, dla którego jest wymagana lista elementów.</span><span class="sxs-lookup"><span data-stu-id="fd889-164">The conceptual model for which the list of items is needed.</span></span></param>
        <summary><span data-ttu-id="fd889-165">Pobiera wszystkie elementy w określonym modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-165">Gets all the items in the specified data model.</span></span></summary>
        <returns><span data-ttu-id="fd889-166">Kolekcja typu <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> , która zawiera wszystkie elementy w określonym modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-166">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the items in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjectSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd889-167">Zwraca obiekt, który reprezentuje typ przestrzeni obiektu, który jest zgodny z typem dostarczonym przez <paramref name="edmSpaceType" />parametr. <see cref="T:System.Data.Metadata.Edm.StructuralType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-167">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjectSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EnumType GetObjectSpaceType (System.Data.Metadata.Edm.EnumType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EnumType GetObjectSpaceType(class System.Data.Metadata.Edm.EnumType edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.EnumType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectSpaceType (edmSpaceType As EnumType) As EnumType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EnumType ^ GetObjectSpaceType(System::Data::Metadata::Edm::EnumType ^ edmSpaceType);" />
      <MemberSignature Language="F#" Value="member this.GetObjectSpaceType : System.Data.Metadata.Edm.EnumType -&gt; System.Data.Metadata.Edm.EnumType" Usage="metadataWorkspace.GetObjectSpaceType edmSpaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EnumType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="fd889-168">Obiekt, który <see cref="T:System.Data.Metadata.Edm.EdmType" />reprezentuje. <see cref="T:System.Data.Metadata.Edm.EnumType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-168">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <summary><span data-ttu-id="fd889-169">Zwraca obiekt, który reprezentuje typ przestrzeni obiektu, który jest zgodny z typem dostarczonym przez <paramref name="edmSpaceType" />parametr. <see cref="T:System.Data.Metadata.Edm.StructuralType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-169">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="fd889-170"><see cref="T:System.Data.Metadata.Edm.StructuralType" /> Obiekt, który reprezentuje typ przestrzeni obiektu.</span><span class="sxs-lookup"><span data-stu-id="fd889-170">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span></span> <span data-ttu-id="fd889-171">Jeśli nie ma dopasowanego typu, ta metoda zwraca wartość null.</span><span class="sxs-lookup"><span data-stu-id="fd889-171">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.StructuralType GetObjectSpaceType (System.Data.Metadata.Edm.StructuralType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.StructuralType GetObjectSpaceType(class System.Data.Metadata.Edm.StructuralType edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.StructuralType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectSpaceType (edmSpaceType As StructuralType) As StructuralType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::StructuralType ^ GetObjectSpaceType(System::Data::Metadata::Edm::StructuralType ^ edmSpaceType);" />
      <MemberSignature Language="F#" Value="member this.GetObjectSpaceType : System.Data.Metadata.Edm.StructuralType -&gt; System.Data.Metadata.Edm.StructuralType" Usage="metadataWorkspace.GetObjectSpaceType edmSpaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.StructuralType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="fd889-172">Obiekt, który <see cref="T:System.Data.Metadata.Edm.EdmType" />reprezentuje. <see cref="T:System.Data.Metadata.Edm.StructuralType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-172">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <summary><span data-ttu-id="fd889-173">Zwraca obiekt, który reprezentuje typ przestrzeni obiektu, który jest zgodny z typem dostarczonym przez <paramref name="edmSpaceType" />parametr. <see cref="T:System.Data.Metadata.Edm.StructuralType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-173">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="fd889-174"><see cref="T:System.Data.Metadata.Edm.StructuralType" /> Obiekt, który reprezentuje typ przestrzeni obiektu.</span><span class="sxs-lookup"><span data-stu-id="fd889-174">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span></span> <span data-ttu-id="fd889-175">Jeśli nie ma dopasowanego typu, ta metoda zwraca wartość null.</span><span class="sxs-lookup"><span data-stu-id="fd889-175">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimitiveTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt; GetPrimitiveTypes (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.PrimitiveType&gt; GetPrimitiveTypes(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ GetPrimitiveTypes(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetPrimitiveTypes : System.Data.Metadata.Edm.DataSpace -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;" Usage="metadataWorkspace.GetPrimitiveTypes dataSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="fd889-176">Model danych, dla którego jest wymagana lista typów pierwotnych.</span><span class="sxs-lookup"><span data-stu-id="fd889-176">The data model for which you need the list of primitive types.</span></span></param>
        <summary><span data-ttu-id="fd889-177">Zwraca listę typów pierwotnych w określonym modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-177">Returns the list of primitive types in the specified data model.</span></span></summary>
        <returns><span data-ttu-id="fd889-178">Kolekcja typu <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> , która zawiera wszystkie typy pierwotne w określonym modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-178">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the primitive types in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelevantMembersForUpdate">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmMember&gt; GetRelevantMembersForUpdate (System.Data.Metadata.Edm.EntitySetBase entitySet, System.Data.Metadata.Edm.EntityTypeBase entityType, bool partialUpdateSupported);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmMember&gt; GetRelevantMembersForUpdate(class System.Data.Metadata.Edm.EntitySetBase entitySet, class System.Data.Metadata.Edm.EntityTypeBase entityType, bool partialUpdateSupported) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelevantMembersForUpdate (entitySet As EntitySetBase, entityType As EntityTypeBase, partialUpdateSupported As Boolean) As ReadOnlyCollection(Of EdmMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmMember ^&gt; ^ GetRelevantMembersForUpdate(System::Data::Metadata::Edm::EntitySetBase ^ entitySet, System::Data::Metadata::Edm::EntityTypeBase ^ entityType, bool partialUpdateSupported);" />
      <MemberSignature Language="F#" Value="member this.GetRelevantMembersForUpdate : System.Data.Metadata.Edm.EntitySetBase * System.Data.Metadata.Edm.EntityTypeBase * bool -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmMember&gt;" Usage="metadataWorkspace.GetRelevantMembersForUpdate (entitySet, entityType, partialUpdateSupported)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySetBase" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityTypeBase" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="partialUpdateSupported" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="fd889-179">Wartość <see cref="T:System.Data.Metadata.Edm.EntitySet" /> należące do obszaru C.</span><span class="sxs-lookup"><span data-stu-id="fd889-179">An <see cref="T:System.Data.Metadata.Edm.EntitySet" /> belonging to the C-Space.</span></span></param>
        <param name="entityType"><span data-ttu-id="fd889-180">Który uczestniczy w danym <see cref="T:System.Data.Metadata.Edm.EntitySet" />. <see cref="T:System.Data.Metadata.Edm.EntityType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-180">An <see cref="T:System.Data.Metadata.Edm.EntityType" /> that participates in the given <see cref="T:System.Data.Metadata.Edm.EntitySet" />.</span></span></param>
        <param name="partialUpdateSupported"><span data-ttu-id="fd889-181"><see langword="true" />Jeśli jednostki mogą być aktualizowane częściowo; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fd889-181"><see langword="true" /> if entities may be updated partially; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fd889-182">Zwraca elementy członkowskie dla danego <see cref="T:System.Data.Metadata.Edm.EntitySet" /> / <see cref="T:System.Data.Metadata.Edm.EntityType" /> elementu, dla którego są odpowiednie oryginalne wartości podczas modyfikowania jednostki.</span><span class="sxs-lookup"><span data-stu-id="fd889-182">Returns members of a given <see cref="T:System.Data.Metadata.Edm.EntitySet" />/<see cref="T:System.Data.Metadata.Edm.EntityType" /> for which original values are needed when modifying an entity.</span></span></summary>
        <returns><span data-ttu-id="fd889-183">S <see cref="T:System.Data.Metadata.Edm.EdmMember" />, dla którego jest wymagana oryginalna wartość.</span><span class="sxs-lookup"><span data-stu-id="fd889-183">The <see cref="T:System.Data.Metadata.Edm.EdmMember" />s for which original value is required.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredOriginalValueMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Metadata.Edm.EdmMember&gt; GetRequiredOriginalValueMembers (System.Data.Metadata.Edm.EntitySetBase entitySet, System.Data.Metadata.Edm.EntityTypeBase entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Metadata.Edm.EdmMember&gt; GetRequiredOriginalValueMembers(class System.Data.Metadata.Edm.EntitySetBase entitySet, class System.Data.Metadata.Edm.EntityTypeBase entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredOriginalValueMembers (entitySet As EntitySetBase, entityType As EntityTypeBase) As IEnumerable(Of EdmMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Metadata::Edm::EdmMember ^&gt; ^ GetRequiredOriginalValueMembers(System::Data::Metadata::Edm::EntitySetBase ^ entitySet, System::Data::Metadata::Edm::EntityTypeBase ^ entityType);" />
      <MemberSignature Language="F#" Value="member this.GetRequiredOriginalValueMembers : System.Data.Metadata.Edm.EntitySetBase * System.Data.Metadata.Edm.EntityTypeBase -&gt; seq&lt;System.Data.Metadata.Edm.EdmMember&gt;" Usage="metadataWorkspace.GetRequiredOriginalValueMembers (entitySet, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase, EntityTypeBase, bool) instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Metadata.Edm.EdmMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySetBase" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityTypeBase" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="fd889-184">Zestaw jednostek, z którego mają zostać pobrane pierwotne wartości.</span><span class="sxs-lookup"><span data-stu-id="fd889-184">The entity set from which to retrieve original values.</span></span></param>
        <param name="entityType"><span data-ttu-id="fd889-185">Typ jednostki, z której mają zostać pobrane oryginalne wartości.</span><span class="sxs-lookup"><span data-stu-id="fd889-185">The entity type of which to retrieve original values.</span></span></param>
        <summary><span data-ttu-id="fd889-186">Pobiera pierwotne składowe wartości z zestawu jednostek i typu jednostki.</span><span class="sxs-lookup"><span data-stu-id="fd889-186">Gets original value members from an entity set and entity type.</span></span></summary>
        <returns><span data-ttu-id="fd889-187">Oryginalne elementy członkowskie wartości z zestawu jednostek i typu jednostki.</span><span class="sxs-lookup"><span data-stu-id="fd889-187">The original value members from an entity set and entity type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd889-188">Zwraca metadane typu, które są opisane za pośrednictwem <see cref="T:System.Data.Metadata.Edm.EdmType" /> obiektu przy użyciu określonej nazwy typu, nazwy przestrzeni nazw i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-188">Returns the type metadata that is described via an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, the namespace name, and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EdmType GetType(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EdmType ^ GetType(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string * System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.EdmType" Usage="metadataWorkspace.GetType (name, namespaceName, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fd889-189">Nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="fd889-189">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="fd889-190">Przestrzeń nazw typu.</span><span class="sxs-lookup"><span data-stu-id="fd889-190">The namespace of the type.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="fd889-191">Model koncepcyjny, na którym jest przeszukiwany typ.</span><span class="sxs-lookup"><span data-stu-id="fd889-191">The conceptual model on which the type is searched.</span></span></param>
        <summary><span data-ttu-id="fd889-192"><see cref="T:System.Data.Metadata.Edm.EdmType" /> Zwraca obiekt przy użyciu określonej nazwy typu, nazwy przestrzeni nazw i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-192">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="fd889-193"><see cref="T:System.Data.Metadata.Edm.EdmType" /> Obiekt reprezentujący typ, który odpowiada danej nazwie typu i nazwie przestrzeni nazw w określonym modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-193">An <see cref="T:System.Data.Metadata.Edm.EdmType" /> object that represents the type that matches the given type name and the namespace name in the specified data model.</span></span> <span data-ttu-id="fd889-194">Jeśli nie ma dopasowanego typu, ta metoda zwraca wartość null.</span><span class="sxs-lookup"><span data-stu-id="fd889-194">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EdmType GetType(string name, string namespaceName, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EdmType ^ GetType(System::String ^ name, System::String ^ namespaceName, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string * bool * System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.EdmType" Usage="metadataWorkspace.GetType (name, namespaceName, ignoreCase, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fd889-195">Nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="fd889-195">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="fd889-196">Przestrzeń nazw typu.</span><span class="sxs-lookup"><span data-stu-id="fd889-196">The namespace of the type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="fd889-197"><see langword="true" />Aby wykonać wyszukiwanie bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fd889-197"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="fd889-198">Model koncepcyjny, na którym jest przeszukiwany typ.</span><span class="sxs-lookup"><span data-stu-id="fd889-198">The conceptual model on which the type is searched.</span></span></param>
        <summary><span data-ttu-id="fd889-199"><see cref="T:System.Data.Metadata.Edm.EdmType" /> Zwraca obiekt przy użyciu określonej nazwy typu, nazwy przestrzeni nazw i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-199">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="fd889-200"><see cref="T:System.Data.Metadata.Edm.EdmType" /> Obiekt.</span><span class="sxs-lookup"><span data-stu-id="fd889-200">An <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFromAssembly">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd889-201">Ładuje metadane z zestawu.</span><span class="sxs-lookup"><span data-stu-id="fd889-201">Loads metadata from an assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFromAssembly">
      <MemberSignature Language="C#" Value="public void LoadFromAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFromAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFromAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="member this.LoadFromAssembly : System.Reflection.Assembly -&gt; unit" Usage="metadataWorkspace.LoadFromAssembly assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="fd889-202">Zestaw, z którego zostaną załadowane metadane.</span><span class="sxs-lookup"><span data-stu-id="fd889-202">The assembly from which the metadata will be loaded.</span></span></param>
        <summary><span data-ttu-id="fd889-203">Ładuje metadane z danego zestawu.</span><span class="sxs-lookup"><span data-stu-id="fd889-203">Loads metadata from the given assembly.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFromAssembly">
      <MemberSignature Language="C#" Value="public void LoadFromAssembly (System.Reflection.Assembly assembly, Action&lt;string&gt; logLoadMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFromAssembly(class System.Reflection.Assembly assembly, class System.Action`1&lt;string&gt; logLoadMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFromAssembly(System::Reflection::Assembly ^ assembly, Action&lt;System::String ^&gt; ^ logLoadMessage);" />
      <MemberSignature Language="F#" Value="member this.LoadFromAssembly : System.Reflection.Assembly * Action&lt;string&gt; -&gt; unit" Usage="metadataWorkspace.LoadFromAssembly (assembly, logLoadMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="logLoadMessage" Type="System.Action&lt;System.String&gt;" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="fd889-204">Zestaw, z którego zostaną załadowane metadane.</span><span class="sxs-lookup"><span data-stu-id="fd889-204">The assembly from which the metadata will be loaded.</span></span></param>
        <param name="logLoadMessage"><span data-ttu-id="fd889-205">Delegat do rejestrowania komunikatów ładowania.</span><span class="sxs-lookup"><span data-stu-id="fd889-205">The delegate for logging the load messages.</span></span></param>
        <summary><span data-ttu-id="fd889-206">Ładuje metadane z danego zestawu.</span><span class="sxs-lookup"><span data-stu-id="fd889-206">Loads metadata from the given assembly.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumEdmVersionSupported">
      <MemberSignature Language="C#" Value="public static readonly double MaximumEdmVersionSupported;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MaximumEdmVersionSupported" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaximumEdmVersionSupported As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MaximumEdmVersionSupported;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaximumEdmVersionSupported : double" Usage="System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd889-207">Reprezentuje maksymalną wersję Entity Data Model (EDM) obsługiwaną przez środowisko uruchomieniowe Entity Framework.</span><span class="sxs-lookup"><span data-stu-id="fd889-207">Represents the maximum Entity Data Model (EDM) version supported by the Entity Framework runtime.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterItemCollection">
      <MemberSignature Language="C#" Value="public void RegisterItemCollection (System.Data.Metadata.Edm.ItemCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterItemCollection(class System.Data.Metadata.Edm.ItemCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(System.Data.Metadata.Edm.ItemCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterItemCollection (collection As ItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterItemCollection(System::Data::Metadata::Edm::ItemCollection ^ collection);" />
      <MemberSignature Language="F#" Value="member this.RegisterItemCollection : System.Data.Metadata.Edm.ItemCollection -&gt; unit" Usage="metadataWorkspace.RegisterItemCollection collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Metadata.Edm.ItemCollection" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="fd889-208">Kolekcja parametrów wyjściowych, która musi zostać wypełniona.</span><span class="sxs-lookup"><span data-stu-id="fd889-208">The output parameter collection that needs to be filled up.</span></span></param>
        <summary><span data-ttu-id="fd889-209">Rejestruje kolekcję elementów z każdym skojarzonym modelem danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-209">Registers the item collection with each associated data model.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd889-210">Argument kolekcji ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="fd889-210">The collection argument is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fd889-211">Określony model danych już zarejestrował kolekcję elementów.</span><span class="sxs-lookup"><span data-stu-id="fd889-211">The specified data model has already a registered an item collection.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetEdmSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd889-212"><paramref name="edmSpaceType" /> <paramref name="objectSpaceType" /> <see cref="T:System.Data.Metadata.Edm.EdmType" /> Zwraca obiekt <see cref="T:System.Data.Metadata.Edm.EnumType" /> lub za pośrednictwem parametru out, który reprezentuje typ, który jest zgodny z typem dostarczonym przez parametr. <see cref="T:System.Data.Metadata.Edm.StructuralType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-212">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> or <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetEdmSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetEdmSpaceType (System.Data.Metadata.Edm.EnumType objectSpaceType, out System.Data.Metadata.Edm.EnumType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEdmSpaceType(class System.Data.Metadata.Edm.EnumType objectSpaceType, [out] class System.Data.Metadata.Edm.EnumType&amp; edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEdmSpaceType (objectSpaceType As EnumType, ByRef edmSpaceType As EnumType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEdmSpaceType(System::Data::Metadata::Edm::EnumType ^ objectSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EnumType ^ % edmSpaceType);" />
      <MemberSignature Language="F#" Value="member this.TryGetEdmSpaceType : System.Data.Metadata.Edm.EnumType *  -&gt; bool" Usage="metadataWorkspace.TryGetEdmSpaceType (objectSpaceType, edmSpaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType" RefType="out" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="fd889-213"><see cref="T:System.Data.Metadata.Edm.EnumType" /> Obiekt, który reprezentuje typ przestrzeni obiektu.</span><span class="sxs-lookup"><span data-stu-id="fd889-213">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the object space type.</span></span></param>
        <param name="edmSpaceType"><span data-ttu-id="fd889-214">Gdy ta metoda zwraca, zawiera <see cref="T:System.Data.Metadata.Edm.EnumType" /> obiekt, który <see cref="T:System.Data.Metadata.Edm.EdmType" />reprezentuje.</span><span class="sxs-lookup"><span data-stu-id="fd889-214">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="fd889-215">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="fd889-215">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="fd889-216">Zwraca obiekt za pośrednictwem parametru <paramref name="edmSpaceType" /> out, który reprezentuje <see cref="T:System.Data.Metadata.Edm.EdmType" /> typ, który jest zgodny z typem dostarczonym przez parametr <paramref name="objectSpaceType" />. <see cref="T:System.Data.Metadata.Edm.EnumType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-216">Returns a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="fd889-217"><see langword="true" />Po pomyślnym <see langword="false" /> wystąpieniu błędu.</span><span class="sxs-lookup"><span data-stu-id="fd889-217"><see langword="true" /> on success, <see langword="false" /> on failure.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEdmSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetEdmSpaceType (System.Data.Metadata.Edm.StructuralType objectSpaceType, out System.Data.Metadata.Edm.StructuralType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEdmSpaceType(class System.Data.Metadata.Edm.StructuralType objectSpaceType, [out] class System.Data.Metadata.Edm.StructuralType&amp; edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEdmSpaceType (objectSpaceType As StructuralType, ByRef edmSpaceType As StructuralType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEdmSpaceType(System::Data::Metadata::Edm::StructuralType ^ objectSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::StructuralType ^ % edmSpaceType);" />
      <MemberSignature Language="F#" Value="member this.TryGetEdmSpaceType : System.Data.Metadata.Edm.StructuralType *  -&gt; bool" Usage="metadataWorkspace.TryGetEdmSpaceType (objectSpaceType, edmSpaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="fd889-218"><see cref="T:System.Data.Metadata.Edm.StructuralType" /> Obiekt, który reprezentuje typ przestrzeni obiektu.</span><span class="sxs-lookup"><span data-stu-id="fd889-218">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type.</span></span></param>
        <param name="edmSpaceType"><span data-ttu-id="fd889-219">Gdy ta metoda zwraca, zawiera <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiekt, który <see cref="T:System.Data.Metadata.Edm.EdmType" />reprezentuje.</span><span class="sxs-lookup"><span data-stu-id="fd889-219">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="fd889-220">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="fd889-220">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="fd889-221">Zwraca obiekt za pośrednictwem parametru <paramref name="edmSpaceType" /> out, który reprezentuje <see cref="T:System.Data.Metadata.Edm.EdmType" /> typ, który jest zgodny z typem dostarczonym przez parametr <paramref name="objectSpaceType" />. <see cref="T:System.Data.Metadata.Edm.StructuralType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-221">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="fd889-222"><see langword="true" />Jeśli istnieje typ, który pasuje do kryteriów wyszukiwania; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fd889-222"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetEntityContainer">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd889-223"><see cref="T:System.Data.Metadata.Edm.EntityContainer" /> Zwraca obiekt przy użyciu określonej nazwy kontenera jednostki i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-223">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetEntityContainer">
      <MemberSignature Language="C#" Value="public bool TryGetEntityContainer (string name, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EntityContainer entityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntityContainer(string name, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EntityContainer&amp; entityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntityContainer(System::String ^ name, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntityContainer ^ % entityContainer);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntityContainer : string * System.Data.Metadata.Edm.DataSpace *  -&gt; bool" Usage="metadataWorkspace.TryGetEntityContainer (name, dataSpace, entityContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="entityContainer" Type="System.Data.Metadata.Edm.EntityContainer" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fd889-224">Nazwa kontenera jednostek.</span><span class="sxs-lookup"><span data-stu-id="fd889-224">The name of the entity container.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="fd889-225">Model koncepcyjny, na którym jest przeszukiwany kontener jednostek.</span><span class="sxs-lookup"><span data-stu-id="fd889-225">The conceptual model on which the entity container is searched.</span></span></param>
        <param name="entityContainer"><span data-ttu-id="fd889-226">Gdy ta metoda zwraca, zawiera <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="fd889-226">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object.</span></span> <span data-ttu-id="fd889-227">Jeśli nie ma kontenera jednostek, ten parametr wyjściowy zawiera wartość null; w przeciwnym razie zwraca kontener pierwszego obiektu Entity.</span><span class="sxs-lookup"><span data-stu-id="fd889-227">If there is no entity container, this output parameter contains null; otherwise, it returns the first entity container.</span></span> <span data-ttu-id="fd889-228">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="fd889-228">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="fd889-229"><see cref="T:System.Data.Metadata.Edm.EntityContainer" /> Zwraca obiekt przy użyciu określonej nazwy kontenera jednostki i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-229">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="fd889-230"><see langword="true" />Jeśli istnieje kontener jednostki zgodny z kryteriami wyszukiwania; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fd889-230"><see langword="true" /> if there is an entity container that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntityContainer">
      <MemberSignature Language="C#" Value="public bool TryGetEntityContainer (string name, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EntityContainer entityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntityContainer(string name, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EntityContainer&amp; entityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntityContainer(System::String ^ name, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntityContainer ^ % entityContainer);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntityContainer : string * bool * System.Data.Metadata.Edm.DataSpace *  -&gt; bool" Usage="metadataWorkspace.TryGetEntityContainer (name, ignoreCase, dataSpace, entityContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="entityContainer" Type="System.Data.Metadata.Edm.EntityContainer" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fd889-231">Nazwa kontenera jednostek.</span><span class="sxs-lookup"><span data-stu-id="fd889-231">The name of the entity container.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="fd889-232"><see langword="true" />Aby wykonać wyszukiwanie bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fd889-232"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="fd889-233">Model koncepcyjny, na którym jest przeszukiwany kontener jednostek.</span><span class="sxs-lookup"><span data-stu-id="fd889-233">The conceptual model on which the entity container is searched.</span></span></param>
        <param name="entityContainer"><span data-ttu-id="fd889-234">Gdy ta metoda zwraca, zawiera <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="fd889-234">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object.</span></span> <span data-ttu-id="fd889-235">Jeśli nie ma kontenera jednostek, ten parametr wyjściowy zawiera wartość null; w przeciwnym razie zwraca kontener pierwszego obiektu Entity.</span><span class="sxs-lookup"><span data-stu-id="fd889-235">If there is no entity container, this output parameter contains null; otherwise, it returns the first entity container.</span></span> <span data-ttu-id="fd889-236">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="fd889-236">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="fd889-237"><see cref="T:System.Data.Metadata.Edm.EntityContainer" /> Zwraca obiekt przy użyciu określonej nazwy kontenera jednostki i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-237">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="fd889-238"><see langword="true" />Jeśli istnieje kontener jednostki zgodny z kryteriami wyszukiwania; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fd889-238"><see langword="true" /> if there is an entity container that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetItem&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd889-239">Zwraca element przy użyciu określonej tożsamości i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-239">Returns an item by using the specified identity and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetItem&lt;T&gt; (string identity, System.Data.Metadata.Edm.DataSpace space, out T item) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, valuetype System.Data.Metadata.Edm.DataSpace space, [out] !!T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Data.Metadata.Edm.DataSpace,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetItem(Of T As GlobalItem) (identity As String, space As DataSpace, ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem bool TryGetItem(System::String ^ identity, System::Data::Metadata::Edm::DataSpace space, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetItem : string * System.Data.Metadata.Edm.DataSpace *  -&gt; bool (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.TryGetItem (identity, space, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="space" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="fd889-240">Typ zwracany przez metodę.</span><span class="sxs-lookup"><span data-stu-id="fd889-240">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="fd889-241">Model koncepcyjny, na którym jest przeszukiwany element.</span><span class="sxs-lookup"><span data-stu-id="fd889-241">The conceptual model on which the item is searched.</span></span></param>
        <param name="space"><span data-ttu-id="fd889-242">Model koncepcyjny, na którym jest przeszukiwany element.</span><span class="sxs-lookup"><span data-stu-id="fd889-242">The conceptual model on which the item is searched.</span></span></param>
        <param name="item"><span data-ttu-id="fd889-243">Gdy ta metoda zwraca, zawiera <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="fd889-243">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> object.</span></span> <span data-ttu-id="fd889-244">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="fd889-244">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="fd889-245">Zwraca element przy użyciu określonej tożsamości i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-245">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="fd889-246"><see langword="true" />Jeśli istnieje element pasujący do kryteriów wyszukiwania, w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fd889-246"><see langword="true" /> if there is an item that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetItem&lt;T&gt; (string identity, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out T item) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] !!T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem bool TryGetItem(System::String ^ identity, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetItem : string * bool * System.Data.Metadata.Edm.DataSpace *  -&gt; bool (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.TryGetItem (identity, ignoreCase, dataSpace, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="fd889-247">Typ zwracany przez metodę.</span><span class="sxs-lookup"><span data-stu-id="fd889-247">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="fd889-248">Model koncepcyjny, na którym jest przeszukiwany element.</span><span class="sxs-lookup"><span data-stu-id="fd889-248">The conceptual model on which the item is searched.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="fd889-249"><see langword="true" />Aby wykonać wyszukiwanie bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fd889-249"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="fd889-250">Model koncepcyjny, na którym jest przeszukiwany element.</span><span class="sxs-lookup"><span data-stu-id="fd889-250">The conceptual model on which the item is searched.</span></span></param>
        <param name="item"><span data-ttu-id="fd889-251">Gdy ta metoda zwraca, zawiera <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="fd889-251">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> object.</span></span> <span data-ttu-id="fd889-252">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="fd889-252">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="fd889-253">Zwraca element przy użyciu określonej tożsamości i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-253">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="fd889-254"><see langword="true" />Jeśli istnieje element pasujący do kryteriów wyszukiwania, w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fd889-254"><see langword="true" /> if there is an item that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetItemCollection">
      <MemberSignature Language="C#" Value="public bool TryGetItemCollection (System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.ItemCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItemCollection(valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.ItemCollection&amp; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.ItemCollection@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetItemCollection(System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::ItemCollection ^ % collection);" />
      <MemberSignature Language="F#" Value="member this.TryGetItemCollection : System.Data.Metadata.Edm.DataSpace *  -&gt; bool" Usage="metadataWorkspace.TryGetItemCollection (dataSpace, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="collection" Type="System.Data.Metadata.Edm.ItemCollection" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="fd889-255">Z którego ma zostać podjęta próba <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />pobrania. <see cref="T:System.Data.Metadata.Edm.DataSpace" /></span><span class="sxs-lookup"><span data-stu-id="fd889-255">The <see cref="T:System.Data.Metadata.Edm.DataSpace" /> from which to attempt retrieval of <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span></span></param>
        <param name="collection"><span data-ttu-id="fd889-256">Gdy ta metoda zwraca, zawiera kolekcję elementów.</span><span class="sxs-lookup"><span data-stu-id="fd889-256">When this method returns, contains the item collection.</span></span> <span data-ttu-id="fd889-257">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="fd889-257">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="fd889-258">Testuje pobieranie <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="fd889-258">Tests the retrieval of <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span></span></summary>
        <returns><span data-ttu-id="fd889-259"><see langword="true" />Jeśli pobieranie zakończyło się pomyślnie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fd889-259"><see langword="true" /> if the retrieval was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetObjectSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd889-260"><paramref name="objectSpaceType" /> <paramref name="edmSpaceType" /> <see cref="T:System.Data.Metadata.Edm.EdmType" /> Zwraca obiekt <see cref="T:System.Data.Metadata.Edm.EnumType" /> lub za pośrednictwem parametru out, który reprezentuje typ, który jest zgodny z podanym parametrem. <see cref="T:System.Data.Metadata.Edm.StructuralType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-260">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> or <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetObjectSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetObjectSpaceType (System.Data.Metadata.Edm.EnumType edmSpaceType, out System.Data.Metadata.Edm.EnumType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectSpaceType(class System.Data.Metadata.Edm.EnumType edmSpaceType, [out] class System.Data.Metadata.Edm.EnumType&amp; objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectSpaceType (edmSpaceType As EnumType, ByRef objectSpaceType As EnumType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectSpaceType(System::Data::Metadata::Edm::EnumType ^ edmSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EnumType ^ % objectSpaceType);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectSpaceType : System.Data.Metadata.Edm.EnumType *  -&gt; bool" Usage="metadataWorkspace.TryGetObjectSpaceType (edmSpaceType, objectSpaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType" RefType="out" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="fd889-261">Obiekt, który <see cref="T:System.Data.Metadata.Edm.EdmType" />reprezentuje. <see cref="T:System.Data.Metadata.Edm.EnumType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-261">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <param name="objectSpaceType"><span data-ttu-id="fd889-262">Gdy ta metoda zwraca, zawiera <see cref="T:System.Data.Metadata.Edm.EnumType" /> obiekt, który reprezentuje typ przestrzeni obiektu.</span><span class="sxs-lookup"><span data-stu-id="fd889-262">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the Object space type.</span></span> <span data-ttu-id="fd889-263">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="fd889-263">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="fd889-264">Zwraca obiekt za pośrednictwem parametru <paramref name="objectSpaceType" /> out, który reprezentuje typ, który jest <see cref="T:System.Data.Metadata.Edm.EdmType" /> zgodny z podanym <paramref name="edmSpaceType" />parametrem. <see cref="T:System.Data.Metadata.Edm.EnumType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-264">Returns a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="fd889-265"><see langword="true" />Jeśli istnieje typ, który pasuje do kryteriów wyszukiwania; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fd889-265"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetObjectSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetObjectSpaceType (System.Data.Metadata.Edm.StructuralType edmSpaceType, out System.Data.Metadata.Edm.StructuralType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectSpaceType(class System.Data.Metadata.Edm.StructuralType edmSpaceType, [out] class System.Data.Metadata.Edm.StructuralType&amp; objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectSpaceType (edmSpaceType As StructuralType, ByRef objectSpaceType As StructuralType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectSpaceType(System::Data::Metadata::Edm::StructuralType ^ edmSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::StructuralType ^ % objectSpaceType);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectSpaceType : System.Data.Metadata.Edm.StructuralType *  -&gt; bool" Usage="metadataWorkspace.TryGetObjectSpaceType (edmSpaceType, objectSpaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="fd889-266">Obiekt, który <see cref="T:System.Data.Metadata.Edm.EdmType" />reprezentuje. <see cref="T:System.Data.Metadata.Edm.StructuralType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-266">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <param name="objectSpaceType"><span data-ttu-id="fd889-267">Gdy ta metoda zwraca, zawiera <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiekt, który reprezentuje typ przestrzeni obiektu.</span><span class="sxs-lookup"><span data-stu-id="fd889-267">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span></span> <span data-ttu-id="fd889-268">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="fd889-268">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="fd889-269">Zwraca obiekt za pośrednictwem parametru <paramref name="objectSpaceType" /> out, który reprezentuje typ, który jest <see cref="T:System.Data.Metadata.Edm.EdmType" /> zgodny z podanym <paramref name="edmSpaceType" />parametrem. <see cref="T:System.Data.Metadata.Edm.StructuralType" /></span><span class="sxs-lookup"><span data-stu-id="fd889-269">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="fd889-270"><see langword="true" />Jeśli istnieje typ, który pasuje do kryteriów wyszukiwania; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fd889-270"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd889-271"><see cref="T:System.Data.Metadata.Edm.EdmType" /> Zwraca obiekt przy użyciu określonej nazwy typu, nazwy przestrzeni nazw i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-271">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetType">
      <MemberSignature Language="C#" Value="public bool TryGetType (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetType(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EdmType&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetType(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EdmType ^ % type);" />
      <MemberSignature Language="F#" Value="member this.TryGetType : string * string * System.Data.Metadata.Edm.DataSpace *  -&gt; bool" Usage="metadataWorkspace.TryGetType (name, namespaceName, dataSpace, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fd889-272">Nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="fd889-272">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="fd889-273">Przestrzeń nazw typu.</span><span class="sxs-lookup"><span data-stu-id="fd889-273">The namespace of the type.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="fd889-274">Model koncepcyjny, na którym jest przeszukiwany typ.</span><span class="sxs-lookup"><span data-stu-id="fd889-274">The conceptual model on which the type is searched.</span></span></param>
        <param name="type"><span data-ttu-id="fd889-275">Gdy ta metoda zwraca, zawiera <see cref="T:System.Data.Metadata.Edm.EdmType" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="fd889-275">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span></span> <span data-ttu-id="fd889-276">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="fd889-276">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="fd889-277"><see cref="T:System.Data.Metadata.Edm.EdmType" /> Zwraca obiekt przy użyciu określonej nazwy typu, nazwy przestrzeni nazw i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-277">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="fd889-278"><see langword="true" />Jeśli istnieje typ, który pasuje do kryteriów wyszukiwania; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fd889-278"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetType">
      <MemberSignature Language="C#" Value="public bool TryGetType (string name, string namespaceName, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetType(string name, string namespaceName, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EdmType&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetType(System::String ^ name, System::String ^ namespaceName, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EdmType ^ % type);" />
      <MemberSignature Language="F#" Value="member this.TryGetType : string * string * bool * System.Data.Metadata.Edm.DataSpace *  -&gt; bool" Usage="metadataWorkspace.TryGetType (name, namespaceName, ignoreCase, dataSpace, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fd889-279">Nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="fd889-279">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="fd889-280">Przestrzeń nazw typu.</span><span class="sxs-lookup"><span data-stu-id="fd889-280">The namespace of the type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="fd889-281"><see langword="true" />Aby wykonać wyszukiwanie bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fd889-281"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="fd889-282">Model koncepcyjny, na którym jest przeszukiwany typ.</span><span class="sxs-lookup"><span data-stu-id="fd889-282">The conceptual model on which the type is searched.</span></span></param>
        <param name="type"><span data-ttu-id="fd889-283">Gdy ta metoda zwraca, zawiera <see cref="T:System.Data.Metadata.Edm.EdmType" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="fd889-283">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span></span> <span data-ttu-id="fd889-284">Ten parametr jest przekazywany niezainicjowany.</span><span class="sxs-lookup"><span data-stu-id="fd889-284">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="fd889-285"><see cref="T:System.Data.Metadata.Edm.EdmType" /> Zwraca obiekt przy użyciu określonej nazwy typu, nazwy przestrzeni nazw i modelu danych.</span><span class="sxs-lookup"><span data-stu-id="fd889-285">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="fd889-286"><see langword="true" />Jeśli istnieje typ, który pasuje do kryteriów wyszukiwania; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fd889-286"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
