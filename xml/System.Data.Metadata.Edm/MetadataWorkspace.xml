<Type Name="MetadataWorkspace" FullName="System.Data.Metadata.Edm.MetadataWorkspace">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e50c45cf12ee5bdf39e2841846563f0360a9034d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MetadataWorkspace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetadataWorkspace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.MetadataWorkspace" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetadataWorkspace" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataWorkspace sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1c379-101">Reprezentuje składnik usługi środowiska wykonawczego metadanych ADO.NET, która zapewnia obsługę dla pobierania metadanych z różnych źródeł.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1c379-101">Represents the ADO.NET metadata runtime service component that provides support for retrieving metadata from various sources.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c379-102"><xref:System.Data.Metadata.Edm.MetadataWorkspace> Klasa zawiera składnik usługi centralnej środowiska uruchomieniowego, który służy do interakcji z metadanych modelu koncepcyjnego w ramach danej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="1c379-102">The <xref:System.Data.Metadata.Edm.MetadataWorkspace> class provides a central runtime service component that you can use to interact with conceptual model metadata in the context of a given application.</span></span> <span data-ttu-id="1c379-103">Aby uzyskać więcej informacji, zobacz [obszaru roboczego metadanych](http://msdn.microsoft.com/library/601aee56-3eda-4caa-9082-a01df76c5e84).</span><span class="sxs-lookup"><span data-stu-id="1c379-103">For more information, see [Metadata Workspace](http://msdn.microsoft.com/library/601aee56-3eda-4caa-9082-a01df76c5e84).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c379-104">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-104">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataWorkspace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetadataWorkspace();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c379-105">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-105">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataWorkspace (System.Collections.Generic.IEnumerable&lt;string&gt; paths, System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; assembliesToConsider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; paths, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; assembliesToConsider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paths As IEnumerable(Of String), assembliesToConsider As IEnumerable(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetadataWorkspace(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ paths, System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ assembliesToConsider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paths" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="assembliesToConsider" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="paths">
          <span data-ttu-id="1c379-106">Ścieżki do obszaru roboczego metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-106">The paths to workspace metadata.</span>
          </span>
        </param>
        <param name="assembliesToConsider">
          <span data-ttu-id="1c379-107">Nazwy zestawów użyty do utworzenia obszaru roboczego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-107">The names of assemblies used to construct workspace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> przy użyciu określonych ścieżek i zestawów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-108">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class using the specified paths and assemblies.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCache">
      <MemberSignature Language="C#" Value="public static void ClearCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.ClearCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearCache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c379-109">Czyści wszystkie wpisy pamięci podręcznej metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-109">Clears all the metadata cache entries.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntitySqlParser">
      <MemberSignature Language="C#" Value="public System.Data.Common.EntitySql.EntitySqlParser CreateEntitySqlParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.EntitySql.EntitySqlParser CreateEntitySqlParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntitySqlParser () As EntitySqlParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::EntitySql::EntitySqlParser ^ CreateEntitySqlParser();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.EntitySql.EntitySqlParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c379-110">Tworzy <see cref="T:System.Data.Common.EntitySql.EntitySqlParser" /> skonfigurowana do używania <see cref="F:System.Data.Metadata.Edm.DataSpace.CSpace" /> przestrzeni danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-110">Creates an <see cref="T:System.Data.Common.EntitySql.EntitySqlParser" /> configured to use the <see cref="F:System.Data.Metadata.Edm.DataSpace.CSpace" /> data space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-111">Obiekt utworzony analizatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-111">The created parser object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryCommandTree">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbQueryCommandTree CreateQueryCommandTree (System.Data.Common.CommandTrees.DbExpression query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.CommandTrees.DbQueryCommandTree CreateQueryCommandTree(class System.Data.Common.CommandTrees.DbExpression query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateQueryCommandTree (query As DbExpression) As DbQueryCommandTree" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::CommandTrees::DbQueryCommandTree ^ CreateQueryCommandTree(System::Data::Common::CommandTrees::DbExpression ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQueryCommandTree</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="1c379-112">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> definiuje zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-112">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-113">Tworzy nową <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> powiązany z tego obszaru roboczego metadanych, oparte na wyrażeniu określonego zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-113">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> bound to this metadata workspace based on the specified query expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-114">Nowy <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> z określonego wyrażenia, ponieważ jest <see cref="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-114">A new <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> with the specified expression as it's <see cref="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query" /> property.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="query" />
        </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="query" />
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEdmSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c379-115">Zwraca <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiekt, który reprezentuje <see cref="T:System.Data.Metadata.Edm.EdmType" /> odpowiedniego typu dostarczony przez parametr <paramref name="objectSpaceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-115">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEdmSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EnumType GetEdmSpaceType (System.Data.Metadata.Edm.EnumType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EnumType GetEdmSpaceType(class System.Data.Metadata.Edm.EnumType objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.EnumType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEdmSpaceType (objectSpaceType As EnumType) As EnumType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EnumType ^ GetEdmSpaceType(System::Data::Metadata::Edm::EnumType ^ objectSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EnumType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType">
          <span data-ttu-id="1c379-116">A <see cref="T:System.Data.Metadata.Edm.EnumlType" /> który dostarcza typu w przestrzeni obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-116">A <see cref="T:System.Data.Metadata.Edm.EnumlType" /> that supplies the type in the object space.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-117">Zwraca <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiekt, który reprezentuje <see cref="T:System.Data.Metadata.Edm.EdmType" /> odpowiedniego typu dostarczony przez parametr <paramref name="objectSpaceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-117">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-118">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiekt, który reprezentuje <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-118">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span>
          </span>
          <span data-ttu-id="1c379-119">Jeśli nie ma typu dopasowane, ta metoda zwraca wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-119">If there is no matched type, this method returns null.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEdmSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.StructuralType GetEdmSpaceType (System.Data.Metadata.Edm.StructuralType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.StructuralType GetEdmSpaceType(class System.Data.Metadata.Edm.StructuralType objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEdmSpaceType (objectSpaceType As StructuralType) As StructuralType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::StructuralType ^ GetEdmSpaceType(System::Data::Metadata::Edm::StructuralType ^ objectSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.StructuralType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType">
          <span data-ttu-id="1c379-120">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> który dostarcza typu w przestrzeni obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-120">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> that supplies the type in the object space.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-121">Zwraca <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiekt, który reprezentuje <see cref="T:System.Data.Metadata.Edm.EdmType" /> odpowiedniego typu dostarczony przez parametr <paramref name="objectSpaceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-121">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-122">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiekt, który reprezentuje <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-122">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span>
          </span>
          <span data-ttu-id="1c379-123">Jeśli nie ma typu dopasowane, ta metoda zwraca wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-123">If there is no matched type, this method returns null.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEntityContainer">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c379-124">Zwraca <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> obiektu przy użyciu nazwy kontenera określonej jednostki i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-124">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntityContainer GetEntityContainer(string name, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntityContainer ^ GetEntityContainer(System::String ^ name, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1c379-125">Nazwa kontenera jednostek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-125">The name of the entity container.</span>
          </span>
        </param>
        <param name="dataSpace">
          <span data-ttu-id="1c379-126">Model koncepcyjny, na którym będzie przeszukiwana kontenera jednostek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-126">The conceptual model on which the entity container is searched.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-127">Zwraca <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> obiektu przy użyciu nazwy kontenera określonej jednostki i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-127">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-128">Jeśli nie ma żadnych kontenera jednostek, ta metoda zwraca wartość null; w przeciwnym wypadku zwraca pierwszy kontenera jednostek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-128">If there is no entity container, this method returns null; otherwise, it returns the first entity container.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntityContainer GetEntityContainer(string name, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntityContainer ^ GetEntityContainer(System::String ^ name, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1c379-129">Nazwa kontenera jednostek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-129">The name of the entity container.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1c379-130">
            <see langword="true" /> Aby wykonać wyszukiwanie bez uwzględniania wielkości liter; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-130">
              <see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataSpace">
          <span data-ttu-id="1c379-131">Model koncepcyjny, na którym będzie przeszukiwana kontenera jednostek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-131">The conceptual model on which the entity container is searched.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-132">Zwraca <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> obiektu przy użyciu nazwy kontenera określonej jednostki i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-132">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-133">Jeśli nie ma żadnych kontenera jednostek, ta metoda zwraca wartość null; w przeciwnym wypadku zwraca pierwszy kontenera jednostek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-133">If there is no entity container, this method returns null; otherwise, it returns the first entity container.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFunctions">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c379-134">Zwraca wszystkie przeciążenia funkcji przy użyciu określonej nazwy przestrzeni nazw i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-134">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1c379-135">Nazwa funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-135">The name of the function.</span>
          </span>
        </param>
        <param name="namespaceName">
          <span data-ttu-id="1c379-136">Przestrzeń nazw funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-136">The namespace of the function.</span>
          </span>
        </param>
        <param name="dataSpace">
          <span data-ttu-id="1c379-137">Model koncepcyjny, w którym są przeszukiwane funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-137">The conceptual model in which the functions are searched.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-138">Zwraca wszystkie przeciążenia funkcji przy użyciu określonej nazwy przestrzeni nazw i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-138">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-139">Kolekcja typu <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> zawiera wszystkie funkcje, które pasuje do nazwy określonej w danej przestrzeni nazw i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-139">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the functions that match the specified name in a given namespace and a data model.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1c379-140">Nazwa funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-140">The name of the function.</span>
          </span>
        </param>
        <param name="namespaceName">
          <span data-ttu-id="1c379-141">Przestrzeń nazw funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-141">The namespace of the function.</span>
          </span>
        </param>
        <param name="dataSpace">
          <span data-ttu-id="1c379-142">Model koncepcyjny, w którym są przeszukiwane funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-142">The conceptual model in which the functions are searched.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1c379-143">
            <see langword="true" /> Aby wykonać wyszukiwanie bez uwzględniania wielkości liter; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-143">
              <see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-144">Zwraca wszystkie przeciążenia funkcji przy użyciu określonej nazwy przestrzeni nazw i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-144">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-145">Kolekcja typu <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> zawiera wszystkie funkcje, które pasuje do nazwy określonej w danej przestrzeni nazw i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-145">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the functions that match the specified name in a given namespace and a data model.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItem&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c379-146">Zwraca element przy użyciu określonej tożsamości i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-146">Returns an item by using the specified identity and the data model.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetItem&lt;T&gt; (string identity, System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem T GetItem(System::String ^ identity, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="1c379-147">Typ zwracany przez metodę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-147">The type returned by the method.</span>
          </span>
        </typeparam>
        <param name="identity">
          <span data-ttu-id="1c379-148">Tożsamość elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-148">The identity of the item.</span>
          </span>
        </param>
        <param name="dataSpace">
          <span data-ttu-id="1c379-149">Model koncepcyjny, w której element jest przeszukiwany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-149">The conceptual model in which the item is searched.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-150">Zwraca element przy użyciu określonej tożsamości i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-150">Returns an item by using the specified identity and the data model.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-151">Element, który odpowiada podanej tożsamości w modelu określone dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-151">The item that matches the given identity in the specified data model.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetItem&lt;T&gt; (string identity, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem T GetItem(System::String ^ identity, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="1c379-152">Typ zwracany przez metodę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-152">The type returned by the method.</span>
          </span>
        </typeparam>
        <param name="identity">
          <span data-ttu-id="1c379-153">Tożsamość elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-153">The identity of the item.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1c379-154">
            <see langword="true" /> Aby wykonać wyszukiwanie bez uwzględniania wielkości liter; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-154">
              <see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataSpace">
          <span data-ttu-id="1c379-155">Model koncepcyjny, na którym będzie przeszukiwana elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-155">The conceptual model on which the item is searched.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-156">Zwraca element przy użyciu określonej tożsamości i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-156">Returns an item by using the specified identity and the data model.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-157">Element, który odpowiada podanej tożsamości w modelu określone dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-157">The item that matches the given identity in the specified data model.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemCollection">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.ItemCollection GetItemCollection (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.ItemCollection GetItemCollection(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::ItemCollection ^ GetItemCollection(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ItemCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace">
          <span data-ttu-id="1c379-158">
            <see cref="T:System.Data.Metadata.Edm.DataSpace" /> z którego można pobrać elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-158">The <see cref="T:System.Data.Metadata.Edm.DataSpace" /> from which to retrieve items.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-159">Pobiera <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-159">Gets <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-160">
            <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> Elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-160">The <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt; GetItems (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.GlobalItem&gt; GetItems(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::GlobalItem ^&gt; ^ GetItems(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace">
          <span data-ttu-id="1c379-161">Model koncepcyjny, dla którego jest potrzebny na liście elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-161">The conceptual model for which the list of items is needed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-162">Pobiera wszystkie elementy w modelu określone dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-162">Gets all the items in the specified data model.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-163">Kolekcja typu <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> zawiera wszystkie elementy w modelu określone dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-163">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the items in the specified data model.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; GetItems&lt;T&gt; (System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; GetItems&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems``1(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ GetItems(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="1c379-164">Typ zwracany przez metodę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-164">The type returned by the method.</span>
          </span>
        </typeparam>
        <param name="dataSpace">
          <span data-ttu-id="1c379-165">Model koncepcyjny, dla którego jest potrzebny na liście elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-165">The conceptual model for which the list of items is needed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-166">Pobiera wszystkie elementy w modelu określone dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-166">Gets all the items in the specified data model.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-167">Kolekcja typu <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> zawiera wszystkie elementy w modelu określone dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-167">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the items in the specified data model.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjectSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c379-168">Zwraca <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiekt, który reprezentuje typ miejsca obiektu jest zgodny z typem dostarczony przez parametr <paramref name="edmSpaceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-168">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjectSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EnumType GetObjectSpaceType (System.Data.Metadata.Edm.EnumType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EnumType GetObjectSpaceType(class System.Data.Metadata.Edm.EnumType edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.EnumType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectSpaceType (edmSpaceType As EnumType) As EnumType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EnumType ^ GetObjectSpaceType(System::Data::Metadata::Edm::EnumType ^ edmSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EnumType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType">
          <span data-ttu-id="1c379-169">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> obiekt, który reprezentuje <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-169">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-170">Zwraca <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiekt, który reprezentuje typ miejsca obiektu jest zgodny z typem dostarczony przez parametr <paramref name="edmSpaceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-170">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-171">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiekt, który reprezentuje typ obiektu miejsca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-171">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span>
          </span>
          <span data-ttu-id="1c379-172">Jeśli nie ma typu dopasowane, ta metoda zwraca wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-172">If there is no matched type, this method returns null.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.StructuralType GetObjectSpaceType (System.Data.Metadata.Edm.StructuralType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.StructuralType GetObjectSpaceType(class System.Data.Metadata.Edm.StructuralType edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.StructuralType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectSpaceType (edmSpaceType As StructuralType) As StructuralType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::StructuralType ^ GetObjectSpaceType(System::Data::Metadata::Edm::StructuralType ^ edmSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.StructuralType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType">
          <span data-ttu-id="1c379-173">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiekt, który reprezentuje <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-173">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-174">Zwraca <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiekt, który reprezentuje typ miejsca obiektu jest zgodny z typem dostarczony przez parametr <paramref name="edmSpaceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-174">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-175">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiekt, który reprezentuje typ obiektu miejsca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-175">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span>
          </span>
          <span data-ttu-id="1c379-176">Jeśli nie ma typu dopasowane, ta metoda zwraca wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-176">If there is no matched type, this method returns null.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimitiveTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt; GetPrimitiveTypes (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.PrimitiveType&gt; GetPrimitiveTypes(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ GetPrimitiveTypes(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace">
          <span data-ttu-id="1c379-177">Model danych, dla których potrzebujesz listy typów pierwotnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-177">The data model for which you need the list of primitive types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-178">Zwraca listę typów pierwotnych modelu określone dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-178">Returns the list of primitive types in the specified data model.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-179">Kolekcja typu <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> zawiera typy pierwotne w modelu określone dane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-179">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the primitive types in the specified data model.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelevantMembersForUpdate">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmMember&gt; GetRelevantMembersForUpdate (System.Data.Metadata.Edm.EntitySetBase entitySet, System.Data.Metadata.Edm.EntityTypeBase entityType, bool partialUpdateSupported);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmMember&gt; GetRelevantMembersForUpdate(class System.Data.Metadata.Edm.EntitySetBase entitySet, class System.Data.Metadata.Edm.EntityTypeBase entityType, bool partialUpdateSupported) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelevantMembersForUpdate (entitySet As EntitySetBase, entityType As EntityTypeBase, partialUpdateSupported As Boolean) As ReadOnlyCollection(Of EdmMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmMember ^&gt; ^ GetRelevantMembersForUpdate(System::Data::Metadata::Edm::EntitySetBase ^ entitySet, System::Data::Metadata::Edm::EntityTypeBase ^ entityType, bool partialUpdateSupported);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySetBase" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityTypeBase" />
        <Parameter Name="partialUpdateSupported" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="1c379-180">
            <see cref="T:System.Data.Metadata.Edm.EntitySet" /> Należące do przestrzeni C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-180">An <see cref="T:System.Data.Metadata.Edm.EntitySet" /> belonging to the C-Space.</span>
          </span>
        </param>
        <param name="entityType">
          <span data-ttu-id="1c379-181">
            <see cref="T:System.Data.Metadata.Edm.EntityType" /> Który uczestniczy w danym <see cref="T:System.Data.Metadata.Edm.EntitySet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-181">An <see cref="T:System.Data.Metadata.Edm.EntityType" /> that participates in the given <see cref="T:System.Data.Metadata.Edm.EntitySet" />.</span>
          </span>
        </param>
        <param name="partialUpdateSupported">
          <span data-ttu-id="1c379-182">
            <see langword="true" /> Jeśli jednostek, które mogą być aktualizowane częściowo; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-182">
              <see langword="true" /> if entities may be updated partially; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-183">Zwraca członkami danej <see cref="T:System.Data.Metadata.Edm.EntitySet" /> / <see cref="T:System.Data.Metadata.Edm.EntityType" /> dla oryginalnej wartości, które są potrzebne podczas modyfikowania jednostki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-183">Returns members of a given <see cref="T:System.Data.Metadata.Edm.EntitySet" />/<see cref="T:System.Data.Metadata.Edm.EntityType" /> for which original values are needed when modifying an entity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-184">
            <see cref="T:System.Data.Metadata.Edm.EdmMember" />S, dla których oryginalnej wartości jest wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-184">The <see cref="T:System.Data.Metadata.Edm.EdmMember" />s for which original value is required.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredOriginalValueMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Metadata.Edm.EdmMember&gt; GetRequiredOriginalValueMembers (System.Data.Metadata.Edm.EntitySetBase entitySet, System.Data.Metadata.Edm.EntityTypeBase entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Metadata.Edm.EdmMember&gt; GetRequiredOriginalValueMembers(class System.Data.Metadata.Edm.EntitySetBase entitySet, class System.Data.Metadata.Edm.EntityTypeBase entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredOriginalValueMembers (entitySet As EntitySetBase, entityType As EntityTypeBase) As IEnumerable(Of EdmMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Metadata::Edm::EdmMember ^&gt; ^ GetRequiredOriginalValueMembers(System::Data::Metadata::Edm::EntitySetBase ^ entitySet, System::Data::Metadata::Edm::EntityTypeBase ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase, EntityTypeBase, bool) instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Metadata.Edm.EdmMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySetBase" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityTypeBase" />
      </Parameters>
      <Docs>
        <param name="entitySet">
          <span data-ttu-id="1c379-185">Zestawu jednostek, z którego można pobrać oryginalnych wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-185">The entity set from which to retrieve original values.</span>
          </span>
        </param>
        <param name="entityType">
          <span data-ttu-id="1c379-186">Typ jednostki, dla których mają zostać pobrane oryginalnych wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-186">The entity type of which to retrieve original values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-187">Pobiera członków oryginalnej wartości z zestawu jednostek i typów jednostek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-187">Gets original value members from an entity set and entity type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-188">Wpisz oryginalnego członków wartości z zestawu jednostek i jednostek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-188">The original value members from an entity set and entity type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c379-189">Zwraca metadane typu opisaną za pośrednictwem <see cref="T:System.Data.Metadata.Edm.EdmType" /> obiektu przy użyciu określonej nazwy typu, nazwy przestrzeni nazw i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-189">Returns the type metadata that is described via an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, the namespace name, and the data model.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EdmType GetType(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EdmType ^ GetType(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1c379-190">Nazwa typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-190">The name of the type.</span>
          </span>
        </param>
        <param name="namespaceName">
          <span data-ttu-id="1c379-191">Obszar nazw tego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-191">The namespace of the type.</span>
          </span>
        </param>
        <param name="dataSpace">
          <span data-ttu-id="1c379-192">Model koncepcyjny, na którym będzie przeszukiwana typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-192">The conceptual model on which the type is searched.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-193">Zwraca <see cref="T:System.Data.Metadata.Edm.EdmType" /> obiektu przy użyciu określonej nazwy typu, przestrzeni nazw i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-193">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-194">
            <see cref="T:System.Data.Metadata.Edm.EdmType" /> Obiekt, który reprezentuje zgodny z nazwą danego typu i nazwa przestrzeni nazw w modelu danych określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-194">An <see cref="T:System.Data.Metadata.Edm.EdmType" /> object that represents the type that matches the given type name and the namespace name in the specified data model.</span>
          </span>
          <span data-ttu-id="1c379-195">Jeśli nie ma typu dopasowane, ta metoda zwraca wartość null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-195">If there is no matched type, this method returns null.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EdmType GetType(string name, string namespaceName, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EdmType ^ GetType(System::String ^ name, System::String ^ namespaceName, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1c379-196">Nazwa typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-196">The name of the type.</span>
          </span>
        </param>
        <param name="namespaceName">
          <span data-ttu-id="1c379-197">Obszar nazw tego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-197">The namespace of the type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1c379-198">
            <see langword="true" /> Aby wykonać wyszukiwanie bez uwzględniania wielkości liter; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-198">
              <see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataSpace">
          <span data-ttu-id="1c379-199">Model koncepcyjny, na którym będzie przeszukiwana typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-199">The conceptual model on which the type is searched.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-200">Zwraca <see cref="T:System.Data.Metadata.Edm.EdmType" /> obiektu przy użyciu określonej nazwy typu, przestrzeni nazw i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-200">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-201">
            <see cref="T:System.Data.Metadata.Edm.EdmType" /> Obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-201">An <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFromAssembly">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c379-202">Ładuje metadanych z zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-202">Loads metadata from an assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFromAssembly">
      <MemberSignature Language="C#" Value="public void LoadFromAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFromAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFromAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="1c379-203">Zestaw, z którego będą ładowane metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-203">The assembly from which the metadata will be loaded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-204">Ładuje metadanych z danego zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-204">Loads metadata from the given assembly.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFromAssembly">
      <MemberSignature Language="C#" Value="public void LoadFromAssembly (System.Reflection.Assembly assembly, Action&lt;string&gt; logLoadMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFromAssembly(class System.Reflection.Assembly assembly, class System.Action`1&lt;string&gt; logLoadMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFromAssembly(System::Reflection::Assembly ^ assembly, Action&lt;System::String ^&gt; ^ logLoadMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="logLoadMessage" Type="System.Action&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <span data-ttu-id="1c379-205">Zestaw, z którego będą ładowane metadanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-205">The assembly from which the metadata will be loaded.</span>
          </span>
        </param>
        <param name="logLoadMessage">
          <span data-ttu-id="1c379-206">Delegat rejestrowanie komunikatów obciążenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-206">The delegate for logging the load messages.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-207">Ładuje metadanych z danego zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-207">Loads metadata from the given assembly.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumEdmVersionSupported">
      <MemberSignature Language="C#" Value="public static readonly double MaximumEdmVersionSupported;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MaximumEdmVersionSupported" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaximumEdmVersionSupported As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MaximumEdmVersionSupported;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c379-208">Reprezentuje maksymalna wersja modelu danych jednostki (EDM), obsługiwane przez środowisko uruchomieniowe programu Entity Framework.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-208">Represents the maximum Entity Data Model (EDM) version supported by the Entity Framework runtime.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterItemCollection">
      <MemberSignature Language="C#" Value="public void RegisterItemCollection (System.Data.Metadata.Edm.ItemCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterItemCollection(class System.Data.Metadata.Edm.ItemCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(System.Data.Metadata.Edm.ItemCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterItemCollection (collection As ItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterItemCollection(System::Data::Metadata::Edm::ItemCollection ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Metadata.Edm.ItemCollection" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="1c379-209">Kolekcji parametrów wyjściowych musi zostać uzupełniona w.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-209">The output parameter collection that needs to be filled up.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-210">Rejestruje kolekcji elementów z każdego modelu skojarzonych danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-210">Registers the item collection with each associated data model.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetEdmSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c379-211">Zwraca <see cref="T:System.Data.Metadata.Edm.StructuralType" /> lub <see cref="T:System.Data.Metadata.Edm.EnumType" /> obiektu za pomocą parametru ze specyfikatorem out <paramref name="edmSpaceType" /> reprezentujący <see cref="T:System.Data.Metadata.Edm.EdmType" /> odpowiedniego typu dostarczony przez parametr <paramref name="objectSpaceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-211">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> or <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetEdmSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetEdmSpaceType (System.Data.Metadata.Edm.EnumType objectSpaceType, out System.Data.Metadata.Edm.EnumType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEdmSpaceType(class System.Data.Metadata.Edm.EnumType objectSpaceType, [out] class System.Data.Metadata.Edm.EnumType&amp; edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEdmSpaceType (objectSpaceType As EnumType, ByRef edmSpaceType As EnumType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEdmSpaceType(System::Data::Metadata::Edm::EnumType ^ objectSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EnumType ^ % edmSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType">
          <span data-ttu-id="1c379-212">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> obiekt, który reprezentuje typ obiektu miejsca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-212">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the object space type.</span>
          </span>
        </param>
        <param name="edmSpaceType">
          <span data-ttu-id="1c379-213">Po powrocie z tej metody zawiera <see cref="T:System.Data.Metadata.Edm.EnumType" /> obiekt, który reprezentuje <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-213">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span>
          </span>
          <span data-ttu-id="1c379-214">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-214">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-215">Zwraca <see cref="T:System.Data.Metadata.Edm.EnumType" /> obiektu za pomocą parametru ze specyfikatorem out <paramref name="edmSpaceType" /> reprezentujący <see cref="T:System.Data.Metadata.Edm.EdmType" /> odpowiedniego typu dostarczony przez parametr <paramref name="objectSpaceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-215">Returns a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-216">
            <see langword="true" /> w przypadku powodzenia <see langword="false" /> w przypadku awarii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-216">
              <see langword="true" /> on success, <see langword="false" /> on failure.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEdmSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetEdmSpaceType (System.Data.Metadata.Edm.StructuralType objectSpaceType, out System.Data.Metadata.Edm.StructuralType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEdmSpaceType(class System.Data.Metadata.Edm.StructuralType objectSpaceType, [out] class System.Data.Metadata.Edm.StructuralType&amp; edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEdmSpaceType (objectSpaceType As StructuralType, ByRef edmSpaceType As StructuralType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEdmSpaceType(System::Data::Metadata::Edm::StructuralType ^ objectSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::StructuralType ^ % edmSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType">
          <span data-ttu-id="1c379-217">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiekt, który reprezentuje typ obiektu miejsca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-217">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type.</span>
          </span>
        </param>
        <param name="edmSpaceType">
          <span data-ttu-id="1c379-218">Po powrocie z tej metody zawiera <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiekt, który reprezentuje <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-218">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span>
          </span>
          <span data-ttu-id="1c379-219">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-219">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-220">Zwraca <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiektu za pomocą parametru ze specyfikatorem out <paramref name="edmSpaceType" /> reprezentujący <see cref="T:System.Data.Metadata.Edm.EdmType" /> odpowiedniego typu dostarczony przez parametr <paramref name="objectSpaceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-220">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-221">
            <see langword="true" /> Jeśli jest typem, który pasuje do kryteriów wyszukiwania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-221">
              <see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetEntityContainer">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c379-222">Zwraca <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> obiektu przy użyciu nazwy kontenera określonej jednostki i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-222">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetEntityContainer">
      <MemberSignature Language="C#" Value="public bool TryGetEntityContainer (string name, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EntityContainer entityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntityContainer(string name, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EntityContainer&amp; entityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntityContainer(System::String ^ name, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntityContainer ^ % entityContainer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="entityContainer" Type="System.Data.Metadata.Edm.EntityContainer&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1c379-223">Nazwa kontenera jednostek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-223">The name of the entity container.</span>
          </span>
        </param>
        <param name="dataSpace">
          <span data-ttu-id="1c379-224">Model koncepcyjny, na którym będzie przeszukiwana kontenera jednostek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-224">The conceptual model on which the entity container is searched.</span>
          </span>
        </param>
        <param name="entityContainer">
          <span data-ttu-id="1c379-225">Po powrocie z tej metody zawiera <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-225">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object.</span>
          </span>
          <span data-ttu-id="1c379-226">Jeśli nie ma żadnych kontenera jednostek, ten parametr wyjściowy zawiera wartość null; w przeciwnym wypadku zwraca pierwszy kontenera jednostek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-226">If there is no entity container, this output parameter contains null; otherwise, it returns the first entity container.</span>
          </span>
          <span data-ttu-id="1c379-227">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-227">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-228">Zwraca <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> obiektu przy użyciu nazwy kontenera określonej jednostki i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-228">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-229">
            <see langword="true" /> w przypadku kontenera jednostek spełniających kryteria wyszukiwania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-229">
              <see langword="true" /> if there is an entity container that matches the search criteria; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntityContainer">
      <MemberSignature Language="C#" Value="public bool TryGetEntityContainer (string name, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EntityContainer entityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntityContainer(string name, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EntityContainer&amp; entityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntityContainer(System::String ^ name, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntityContainer ^ % entityContainer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="entityContainer" Type="System.Data.Metadata.Edm.EntityContainer&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1c379-230">Nazwa kontenera jednostek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-230">The name of the entity container.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1c379-231">
            <see langword="true" /> Aby wykonać wyszukiwanie bez uwzględniania wielkości liter; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-231">
              <see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataSpace">
          <span data-ttu-id="1c379-232">Model koncepcyjny, na którym będzie przeszukiwana kontenera jednostek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-232">The conceptual model on which the entity container is searched.</span>
          </span>
        </param>
        <param name="entityContainer">
          <span data-ttu-id="1c379-233">Po powrocie z tej metody zawiera <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-233">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object.</span>
          </span>
          <span data-ttu-id="1c379-234">Jeśli nie ma żadnych kontenera jednostek, ten parametr wyjściowy zawiera wartość null; w przeciwnym wypadku zwraca pierwszy kontenera jednostek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-234">If there is no entity container, this output parameter contains null; otherwise, it returns the first entity container.</span>
          </span>
          <span data-ttu-id="1c379-235">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-235">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-236">Zwraca <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> obiektu przy użyciu nazwy kontenera określonej jednostki i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-236">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-237">
            <see langword="true" /> w przypadku kontenera jednostek spełniających kryteria wyszukiwania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-237">
              <see langword="true" /> if there is an entity container that matches the search criteria; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetItem&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c379-238">Zwraca element przy użyciu określonej tożsamości i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-238">Returns an item by using the specified identity and the data model.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetItem&lt;T&gt; (string identity, System.Data.Metadata.Edm.DataSpace space, out T item) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, valuetype System.Data.Metadata.Edm.DataSpace space, [out] !!T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Data.Metadata.Edm.DataSpace,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetItem(Of T As GlobalItem) (identity As String, space As DataSpace, ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem bool TryGetItem(System::String ^ identity, System::Data::Metadata::Edm::DataSpace space, [Runtime::InteropServices::Out] T % item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="space" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="item" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="1c379-239">Typ zwracany przez metodę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-239">The type returned by the method.</span>
          </span>
        </typeparam>
        <param name="identity">
          <span data-ttu-id="1c379-240">Model koncepcyjny, na którym będzie przeszukiwana elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-240">The conceptual model on which the item is searched.</span>
          </span>
        </param>
        <param name="space">
          <span data-ttu-id="1c379-241">Model koncepcyjny, na którym będzie przeszukiwana elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-241">The conceptual model on which the item is searched.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="1c379-242">Po powrocie z tej metody zawiera <see cref="T:System.Data.Metadata.Edm.GlobalIem" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-242">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.GlobalIem" /> object.</span>
          </span>
          <span data-ttu-id="1c379-243">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-243">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-244">Zwraca element przy użyciu określonej tożsamości i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-244">Returns an item by using the specified identity and the data model.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-245">
            <see langword="true" /> Jeśli istnieje element, który pasuje do kryteriów wyszukiwania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-245">
              <see langword="true" /> if there is an item that matches the search criteria; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetItem&lt;T&gt; (string identity, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out T item) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] !!T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem bool TryGetItem(System::String ^ identity, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] T % item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="item" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="1c379-246">Typ zwracany przez metodę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-246">The type returned by the method.</span>
          </span>
        </typeparam>
        <param name="identity">
          <span data-ttu-id="1c379-247">Model koncepcyjny, na którym będzie przeszukiwana elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-247">The conceptual model on which the item is searched.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1c379-248">
            <see langword="true" /> Aby wykonać wyszukiwanie bez uwzględniania wielkości liter; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-248">
              <see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataSpace">
          <span data-ttu-id="1c379-249">Model koncepcyjny, na którym będzie przeszukiwana elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-249">The conceptual model on which the item is searched.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="1c379-250">Po powrocie z tej metody zawiera <see cref="T:System.Data.Metadata.Edm.GlobalIem" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-250">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.GlobalIem" /> object.</span>
          </span>
          <span data-ttu-id="1c379-251">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-251">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-252">Zwraca element przy użyciu określonej tożsamości i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-252">Returns an item by using the specified identity and the data model.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-253">
            <see langword="true" /> Jeśli istnieje element, który pasuje do kryteriów wyszukiwania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-253">
              <see langword="true" /> if there is an item that matches the search criteria; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetItemCollection">
      <MemberSignature Language="C#" Value="public bool TryGetItemCollection (System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.ItemCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItemCollection(valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.ItemCollection&amp; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.ItemCollection@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetItemCollection(System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::ItemCollection ^ % collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="collection" Type="System.Data.Metadata.Edm.ItemCollection&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dataSpace">
          <span data-ttu-id="1c379-254">
            <see cref="T:System.Data.Metadata.Edm.DataSpace" /> z podejmowania prób pobierania <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-254">The <see cref="T:System.Data.Metadata.Edm.DataSpace" /> from which to attempt retrieval of <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span>
          </span>
        </param>
        <param name="collection">
          <span data-ttu-id="1c379-255">Gdy metoda zwróci wartość, zawiera kolekcję elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-255">When this method returns, contains the item collection.</span>
          </span>
          <span data-ttu-id="1c379-256">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-256">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-257">Pobieranie testów <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-257">Tests the retrieval of <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-258">
            <see langword="true" /> Jeśli pobieranie się powiodła. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-258">
              <see langword="true" /> if the retrieval was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetObjectSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c379-259">Zwraca <see cref="T:System.Data.Metadata.Edm.StructuralType" /> lub <see cref="T:System.Data.Metadata.Edm.EnumType" /> obiektu za pomocą parametru ze specyfikatorem out <paramref name="objectSpaceType" /> reprezentujący typ zgodny <see cref="T:System.Data.Metadata.Edm.EdmType" /> dostarczony przez parametr <paramref name="edmSpaceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-259">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> or <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetObjectSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetObjectSpaceType (System.Data.Metadata.Edm.EnumType edmSpaceType, out System.Data.Metadata.Edm.EnumType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectSpaceType(class System.Data.Metadata.Edm.EnumType edmSpaceType, [out] class System.Data.Metadata.Edm.EnumType&amp; objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectSpaceType (edmSpaceType As EnumType, ByRef objectSpaceType As EnumType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectSpaceType(System::Data::Metadata::Edm::EnumType ^ edmSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EnumType ^ % objectSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType">
          <span data-ttu-id="1c379-260">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> obiekt, który reprezentuje <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-260">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span>
          </span>
        </param>
        <param name="objectSpaceType">
          <span data-ttu-id="1c379-261">Po powrocie z tej metody zawiera <see cref="T:System.Data.Metadata.Edm.EnumType" /> obiekt, który reprezentuje typ obiektu miejsca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-261">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the Object space type.</span>
          </span>
          <span data-ttu-id="1c379-262">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-262">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-263">Zwraca <see cref="T:System.Data.Metadata.Edm.EnumType" /> obiektu za pomocą parametru ze specyfikatorem out <paramref name="objectSpaceType" /> reprezentujący typ zgodny <see cref="T:System.Data.Metadata.Edm.EdmType" /> dostarczony przez parametr <paramref name="edmSpaceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-263">Returns a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-264">
            <see langword="true" /> Jeśli jest typem, który pasuje do kryteriów wyszukiwania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-264">
              <see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetObjectSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetObjectSpaceType (System.Data.Metadata.Edm.StructuralType edmSpaceType, out System.Data.Metadata.Edm.StructuralType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectSpaceType(class System.Data.Metadata.Edm.StructuralType edmSpaceType, [out] class System.Data.Metadata.Edm.StructuralType&amp; objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectSpaceType (edmSpaceType As StructuralType, ByRef objectSpaceType As StructuralType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectSpaceType(System::Data::Metadata::Edm::StructuralType ^ edmSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::StructuralType ^ % objectSpaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType">
          <span data-ttu-id="1c379-265">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiekt, który reprezentuje <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-265">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span>
          </span>
        </param>
        <param name="objectSpaceType">
          <span data-ttu-id="1c379-266">Po powrocie z tej metody zawiera <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiekt, który reprezentuje typ obiektu miejsca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-266">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span>
          </span>
          <span data-ttu-id="1c379-267">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-267">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-268">Zwraca <see cref="T:System.Data.Metadata.Edm.StructuralType" /> obiektu za pomocą parametru ze specyfikatorem out <paramref name="objectSpaceType" /> reprezentujący typ zgodny <see cref="T:System.Data.Metadata.Edm.EdmType" /> dostarczony przez parametr <paramref name="edmSpaceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-268">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-269">
            <see langword="true" /> Jeśli jest typem, który pasuje do kryteriów wyszukiwania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-269">
              <see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c379-270">Zwraca <see cref="T:System.Data.Metadata.Edm.EdmType" /> obiektu przy użyciu określonej nazwy typu, przestrzeni nazw i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-270">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetType">
      <MemberSignature Language="C#" Value="public bool TryGetType (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetType(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EdmType&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetType(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EdmType ^ % type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1c379-271">Nazwa typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-271">The name of the type.</span>
          </span>
        </param>
        <param name="namespaceName">
          <span data-ttu-id="1c379-272">Obszar nazw tego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-272">The namespace of the type.</span>
          </span>
        </param>
        <param name="dataSpace">
          <span data-ttu-id="1c379-273">Model koncepcyjny, na którym będzie przeszukiwana typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-273">The conceptual model on which the type is searched.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="1c379-274">Po powrocie z tej metody zawiera <see cref="T:System.Data.Metadata.Edm.EdmType" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-274">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span>
          </span>
          <span data-ttu-id="1c379-275">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-275">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-276">Zwraca <see cref="T:System.Data.Metadata.Edm.EdmType" /> obiektu przy użyciu określonej nazwy typu, przestrzeni nazw i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-276">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-277">
            <see langword="true" /> Jeśli jest typem, który pasuje do kryteriów wyszukiwania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-277">
              <see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetType">
      <MemberSignature Language="C#" Value="public bool TryGetType (string name, string namespaceName, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetType(string name, string namespaceName, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EdmType&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetType(System::String ^ name, System::String ^ namespaceName, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EdmType ^ % type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1c379-278">Nazwa typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-278">The name of the type.</span>
          </span>
        </param>
        <param name="namespaceName">
          <span data-ttu-id="1c379-279">Obszar nazw tego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-279">The namespace of the type.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="1c379-280">
            <see langword="true" /> Aby wykonać wyszukiwanie bez uwzględniania wielkości liter; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-280">
              <see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataSpace">
          <span data-ttu-id="1c379-281">Model koncepcyjny, na którym będzie przeszukiwana typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-281">The conceptual model on which the type is searched.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="1c379-282">Po powrocie z tej metody zawiera <see cref="T:System.Data.Metadata.Edm.EdmType" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-282">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span>
          </span>
          <span data-ttu-id="1c379-283">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-283">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c379-284">Zwraca <see cref="T:System.Data.Metadata.Edm.EdmType" /> obiektu przy użyciu określonej nazwy typu, przestrzeni nazw i modelu danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-284">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c379-285">
            <see langword="true" /> Jeśli jest typem, który pasuje do kryteriów wyszukiwania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c379-285">
              <see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>