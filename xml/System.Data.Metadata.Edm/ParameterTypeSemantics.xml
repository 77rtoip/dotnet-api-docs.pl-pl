<Type Name="ParameterTypeSemantics" FullName="System.Data.Metadata.Edm.ParameterTypeSemantics">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="985e9f6efd6153aca744bc1149697df4b9dd1ea8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36687848" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ParameterTypeSemantics" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ParameterTypeSemantics extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.ParameterTypeSemantics" />
  <TypeSignature Language="VB.NET" Value="Public Enum ParameterTypeSemantics" />
  <TypeSignature Language="C++ CLI" Value="public enum class ParameterTypeSemantics" />
  <TypeSignature Language="F#" Value="type ParameterTypeSemantics = " />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa semantyka typów, które są używane do rozpoznawania przeciążenia funkcji. Każdy dostawca magazynu należy użyć tych flag wyliczenia w pliku manifestu dostawcy dla każdej definicji funkcji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> Klasa określa semantyka typów promotability, niejawna konwersja i jawnej konwersji dla typów pierwotnych dostawcy. [!INCLUDE[vstecado](~/includes/vstecado-md.md)] odczytuje informacje z pliku manifestu dostawcy magazynu do <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> klasy. Następnie [!INCLUDE[vstecado](~/includes/vstecado-md.md)] używa <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> klasę, aby określić na podstawie typów parametru definicje odpowiednią funkcję.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowImplicitConversion">
      <MemberSignature Language="C#" Value="AllowImplicitConversion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.ParameterTypeSemantics AllowImplicitConversion = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitConversion" />
      <MemberSignature Language="VB.NET" Value="AllowImplicitConversion" />
      <MemberSignature Language="C++ CLI" Value="AllowImplicitConversion" />
      <MemberSignature Language="F#" Value="AllowImplicitConversion = 0" Usage="System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitConversion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ParameterTypeSemantics</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Flaga wskazująca niejawna konwersja między danego i typy argumentów formalnych. Jest to domyślny typ konwersji.</summary>
      </Docs>
    </Member>
    <Member MemberName="AllowImplicitPromotion">
      <MemberSignature Language="C#" Value="AllowImplicitPromotion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.ParameterTypeSemantics AllowImplicitPromotion = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitPromotion" />
      <MemberSignature Language="VB.NET" Value="AllowImplicitPromotion" />
      <MemberSignature Language="C++ CLI" Value="AllowImplicitPromotion" />
      <MemberSignature Language="F#" Value="AllowImplicitPromotion = 1" Usage="System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitPromotion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ParameterTypeSemantics</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flaga wskazująca, promocja typu między danego i typy argumentów formalnych.</summary>
      </Docs>
    </Member>
    <Member MemberName="ExactMatchOnly">
      <MemberSignature Language="C#" Value="ExactMatchOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.ParameterTypeSemantics ExactMatchOnly = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.ParameterTypeSemantics.ExactMatchOnly" />
      <MemberSignature Language="VB.NET" Value="ExactMatchOnly" />
      <MemberSignature Language="C++ CLI" Value="ExactMatchOnly" />
      <MemberSignature Language="F#" Value="ExactMatchOnly = 2" Usage="System.Data.Metadata.Edm.ParameterTypeSemantics.ExactMatchOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ParameterTypeSemantics</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Flaga wskazująca, użycie tylko ścisłe korelacji.</summary>
      </Docs>
    </Member>
  </Members>
</Type>