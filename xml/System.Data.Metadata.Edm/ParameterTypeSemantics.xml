<Type Name="ParameterTypeSemantics" FullName="System.Data.Metadata.Edm.ParameterTypeSemantics">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0536e923f6b42b753f15517af62d17cdc3355acf" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69373536" /></Metadata><TypeSignature Language="C#" Value="public enum ParameterTypeSemantics" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ParameterTypeSemantics extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.ParameterTypeSemantics" />
  <TypeSignature Language="VB.NET" Value="Public Enum ParameterTypeSemantics" />
  <TypeSignature Language="C++ CLI" Value="public enum class ParameterTypeSemantics" />
  <TypeSignature Language="F#" Value="type ParameterTypeSemantics = " />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa semantykę typu, która jest używana do rozpoznawania przeciążeń funkcji. <span data-ttu-id="a84f7-102">Każdy dostawca magazynu musi używać tych flag wyliczenia w pliku manifestu dostawcy dla każdej definicji funkcji.</span><span class="sxs-lookup"><span data-stu-id="a84f7-102">Each store provider must use these enumeration flags in the provider manifest file for every function definition.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a84f7-103"><xref:System.Data.Metadata.Edm.ParameterTypeSemantics> Klasa określa semantykę typu dla promotability, konwersji niejawnej i jawnej konwersji dla typów pierwotnych dostawcy.</span><span class="sxs-lookup"><span data-stu-id="a84f7-103">The <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> class specifies type semantics for promotability, implicit conversion, and explicit conversion for the provider primitive types.</span></span> [!INCLUDE[vstecado](~/includes/vstecado-md.md)]<span data-ttu-id="a84f7-104">odczytuje te informacje z pliku manifestu dostawcy magazynu w <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> klasie.</span><span class="sxs-lookup"><span data-stu-id="a84f7-104">reads this information from the storage provider manifest file into the <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> class.</span></span> <span data-ttu-id="a84f7-105">[!INCLUDE[vstecado](~/includes/vstecado-md.md)] Następnie<xref:System.Data.Metadata.Edm.ParameterTypeSemantics> używa klasy w celu określenia odpowiednich definicji funkcji na podstawie typów parametrów.</span><span class="sxs-lookup"><span data-stu-id="a84f7-105">Then, [!INCLUDE[vstecado](~/includes/vstecado-md.md)] uses the <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> class to determine the appropriate function definitions based on the parameter types.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowImplicitConversion">
      <MemberSignature Language="C#" Value="AllowImplicitConversion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.ParameterTypeSemantics AllowImplicitConversion = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitConversion" />
      <MemberSignature Language="VB.NET" Value="AllowImplicitConversion" />
      <MemberSignature Language="C++ CLI" Value="AllowImplicitConversion" />
      <MemberSignature Language="F#" Value="AllowImplicitConversion = 0" Usage="System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitConversion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ParameterTypeSemantics</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a84f7-106">Flaga wskazująca niejawną konwersję między podanym i formalnym typem argumentu.</span><span class="sxs-lookup"><span data-stu-id="a84f7-106">A flag indicating the implicit conversion between the given and the formal argument types.</span></span> <span data-ttu-id="a84f7-107">Jest to domyślny typ konwersji.</span><span class="sxs-lookup"><span data-stu-id="a84f7-107">This is the default conversion type.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="AllowImplicitPromotion">
      <MemberSignature Language="C#" Value="AllowImplicitPromotion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.ParameterTypeSemantics AllowImplicitPromotion = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitPromotion" />
      <MemberSignature Language="VB.NET" Value="AllowImplicitPromotion" />
      <MemberSignature Language="C++ CLI" Value="AllowImplicitPromotion" />
      <MemberSignature Language="F#" Value="AllowImplicitPromotion = 1" Usage="System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitPromotion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ParameterTypeSemantics</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a84f7-108">Flaga wskazująca promocję typu między podanym i formalnymi typami argumentów.</span><span class="sxs-lookup"><span data-stu-id="a84f7-108">A flag indicating the type promotion between the given and the formal argument types.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ExactMatchOnly">
      <MemberSignature Language="C#" Value="ExactMatchOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.ParameterTypeSemantics ExactMatchOnly = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.ParameterTypeSemantics.ExactMatchOnly" />
      <MemberSignature Language="VB.NET" Value="ExactMatchOnly" />
      <MemberSignature Language="C++ CLI" Value="ExactMatchOnly" />
      <MemberSignature Language="F#" Value="ExactMatchOnly = 2" Usage="System.Data.Metadata.Edm.ParameterTypeSemantics.ExactMatchOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ParameterTypeSemantics</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="a84f7-109">Flaga wskazująca użycie tylko ścisłej równoważności.</span><span class="sxs-lookup"><span data-stu-id="a84f7-109">A flag indicating the usage of strict equivalence only.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
