<Type Name="ObjectCache" FullName="System.Runtime.Caching.ObjectCache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5857681ac8d5732c6af8a6885bbec57f01693a37" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69066624" /></Metadata><TypeSignature Language="C#" Value="public abstract class ObjectCache : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectCache extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.ObjectCache" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectCache&#xA;Implements IEnumerable(Of KeyValuePair(Of String, Object))" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectCache abstract : System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;" />
  <TypeSignature Language="F#" Value="type ObjectCache = class&#xA;    interface seq&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8f1ad-101">Reprezentuje pamięć podręczną obiektów i udostępnia podstawowe metody i właściwości na potrzeby uzyskiwania dostępu do pamięci podręcznej obiektów.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-101">Represents an object cache and provides the base methods and properties for accessing the object cache.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-102"><xref:System.Runtime.Caching.ObjectCache> Typ jest typem podstawowym dla pamięci podręcznej obiektów w pamięci.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-102">The <xref:System.Runtime.Caching.ObjectCache> type is the primary type for the in-memory object cache.</span></span> <span data-ttu-id="8f1ad-103">Aby opracować implementację niestandardowej pamięci podręcznej, pochodzi <xref:System.Runtime.Caching.ObjectCache> od klasy.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-103">To develop a custom cache implementation, you derive from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f1ad-104">Klasa jest nowa [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]z. <xref:System.Runtime.Caching.ObjectCache></span><span class="sxs-lookup"><span data-stu-id="8f1ad-104">The <xref:System.Runtime.Caching.ObjectCache> class is new as of the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span>  
  
 <span data-ttu-id="8f1ad-105">Wbudowana <xref:System.Runtime.Caching.MemoryCache> Klasa pochodzi <xref:System.Runtime.Caching.ObjectCache> od klasy.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-105">The built-in <xref:System.Runtime.Caching.MemoryCache> class derives from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span> <span data-ttu-id="8f1ad-106">Klasa jest jedyną implementacją [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] pamięci podręcznej obiektów, która pochodzi od <xref:System.Runtime.Caching.ObjectCache> klasy. <xref:System.Runtime.Caching.MemoryCache></span><span class="sxs-lookup"><span data-stu-id="8f1ad-106">The <xref:System.Runtime.Caching.MemoryCache> class is the only concrete object cache implementation in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] that derives from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="8f1ad-107">Ten typ jest bezpieczny wątkowo.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-107">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="8f1ad-108">Ponieważ typ reprezentuje tylko typowe funkcje pamięci podręcznej, nie jest wymagane, aby <see cref="T:System.Runtime.Caching.ObjectCache" /> wystąpienie było tworzone i pobierane. <see cref="T:System.Runtime.Caching.ObjectCache" /></span><span class="sxs-lookup"><span data-stu-id="8f1ad-108">Because the <see cref="T:System.Runtime.Caching.ObjectCache" /> type represents only common cache functions, there is no requirement for how an <see cref="T:System.Runtime.Caching.ObjectCache" /> instance must be instantiated and obtained.</span></span> <span data-ttu-id="8f1ad-109">Ponadto nie istnieje wymóg, że konkretne implementacje <see cref="T:System.Runtime.Caching.ObjectCache" /> klasy muszą być singletonami.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-109">In addition, there is no requirement that concrete implementations of the <see cref="T:System.Runtime.Caching.ObjectCache" /> class must be singletons.</span></span>  
  
 <block subset="none" type="note"><para><span data-ttu-id="8f1ad-110"><see cref="T:System.Runtime.Caching.MemoryCache" />nie jest klasą pojedynczą, ale należy utworzyć tylko jedno <see cref="T:System.Runtime.Caching.MemoryCache" /> wystąpienie i kod, który przechowuje w pamięci podręcznej elementy powinny używać tych wystąpień.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-110"><see cref="T:System.Runtime.Caching.MemoryCache" /> is not a singleton, but you should create only a few or potentially only one <see cref="T:System.Runtime.Caching.MemoryCache" /> instance and code that caches items should use those instances.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="8f1ad-111">W przypadku dziedziczenia z <see cref="T:System.Runtime.Caching.ObjectCache" /> klasy należy zastąpić jej metody.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-111">When you inherit from the <see cref="T:System.Runtime.Caching.ObjectCache" /> class, you must override its methods.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectCache ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f1ad-112">Wywoływana z konstruktorów w klasach pochodnych w celu zainicjowania <see cref="T:System.Runtime.Caching.ObjectCache" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-112">Called from constructors in derived classes in order to initialize the <see cref="T:System.Runtime.Caching.ObjectCache" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f1ad-113">Gdy jest zastępowany w klasie pochodnej, wstawia do pamięci podręcznej wpis pamięci podręcznej, bez wymagania, aby można było zwrócić istniejący wpis pamięci podręcznej z pasującym kluczem.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-113">When overridden in a derived class, inserts a cache entry into the cache, without requiring that an existing cache entry with a matching key be returned.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-114">Przeciążenia <xref:System.Runtime.Caching.ObjectCache.Add%2A> metod próbują wstawić do pamięci podręcznej wpis pamięci podręcznej bez zastępowania ani usuwania istniejącego wpisu pamięci podręcznej, który ma ten sam klucz.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-114">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads try to insert a cache entry into the cache, without overwriting or removing an existing cache entry that has the same key.</span></span> <span data-ttu-id="8f1ad-115">Wpis pamięci podręcznej może być <xref:System.Runtime.Caching.CacheItem> obiektem typu Type lub obiektem ogólnym.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-115">The cache entry can be a typed <xref:System.Runtime.Caching.CacheItem> object or a generic object.</span></span>  
  
 <span data-ttu-id="8f1ad-116">Przeciążenia <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> metod <xref:System.Runtime.Caching.ObjectCache.Add%2A> i przeciążenia metod mają jedną znaczącą różnicę.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-116">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads and the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads have one significant difference.</span></span> <span data-ttu-id="8f1ad-117">Gdy te metody wstawą wpis pamięci podręcznej, jeśli w pamięci podręcznej zostanie znaleziony <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> pasujący wpis, przeciążenia metody zwracają istniejący wpis pamięci <xref:System.Runtime.Caching.ObjectCache.Add%2A> podręcznej, ale przeciążenia metody nie są.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-117">When these methods insert a cache entry, if a matching entry is found in the cache, the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads return the existing cache entry, but the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads do not.</span></span> <span data-ttu-id="8f1ad-118">Różne przeciążenia metod umożliwiają wywoływanie kodu w zależności od tego, czy potrzebują istniejącego wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-118">Having these different method overloads enables callers to optimize their code based on whether they need the existing cache entry.</span></span> <span data-ttu-id="8f1ad-119">W rozproszonej pamięci podręcznej zwracanie istniejącej wartości przy użyciu <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> metody może być droższe niż zwracanie wartości logicznej przy użyciu <xref:System.Runtime.Caching.ObjectCache.Add%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-119">In distributed caches, returning an existing value by using the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method might be more expensive than returning a Boolean value by using <xref:System.Runtime.Caching.ObjectCache.Add%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (item As CacheItem, policy As CacheItemPolicy) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Add(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; bool&#xA;override this.Add : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; bool" Usage="objectCache.Add (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="8f1ad-120">Obiekt do dodania.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-120">The object to add.</span></span></param>
        <param name="policy"><span data-ttu-id="8f1ad-121">Obiekt, który zawiera szczegóły wykluczenia dla wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-121">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="8f1ad-122">Ten obiekt zawiera więcej opcji wykluczania niż proste bezwzględne wygaśnięcie.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-122">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <summary><span data-ttu-id="8f1ad-123">Gdy jest zastępowany w klasie pochodnej, program próbuje wstawić do pamięci podręcznej wpis <see cref="T:System.Runtime.Caching.CacheItem" /> pamięci podręcznej jako wystąpienie i dodaje szczegółowe informacje o sposobie wykluczenia wpisu.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-123">When overridden in a derived class, tries to insert a cache entry into the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance, and adds details about how the entry should be evicted.</span></span></summary>
        <returns><span data-ttu-id="8f1ad-124"><see langword="true" />Jeśli wstawianie zakończyło się <see langword="false" /> powodzeniem lub istnieje już wpis w pamięci podręcznej, który ma taki sam klucz <paramref name="item" />jak.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-124"><see langword="true" /> if insertion succeeded, or <see langword="false" /> if there is an already an entry in the cache that has the same key as <paramref name="item" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-125">Przeciążenia metod są wirtualne (nieabstrakcyjne) <xref:System.Runtime.Caching.ObjectCache> w klasie, ponieważ <xref:System.Runtime.Caching.ObjectCache.Add%2A> metoda wewnętrznie wywołuje <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>. <xref:System.Runtime.Caching.ObjectCache.Add%2A></span><span class="sxs-lookup"><span data-stu-id="8f1ad-125">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="8f1ad-126">Zmniejsza to liczbę przeciążeń metody, które musi dostarczyć implementacja pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-126">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="8f1ad-127">Jeśli implementacja pamięci podręcznej nie wymaga żadnych specjalnych zachowań dla <xref:System.Runtime.Caching.ObjectCache.Add%2A> metody, można tylko <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> zaimplementować przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-127">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * DateTimeOffset * string -&gt; bool&#xA;override this.Add : string * obj * DateTimeOffset * string -&gt; bool" Usage="objectCache.Add (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8f1ad-128">Unikatowy identyfikator wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-128">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="8f1ad-129">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-129">The object to insert.</span></span></param>
        <param name="absoluteExpiration"><span data-ttu-id="8f1ad-130">Stała Data i godzina wygaśnięcia wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-130">The fixed date and time at which the cache entry will expire.</span></span> <span data-ttu-id="8f1ad-131">Ten parametr jest wymagany, <see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /> gdy wywoływana jest metoda.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-131">This parameter is required when the <see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /> method is called.</span></span></param>
        <param name="regionName"><span data-ttu-id="8f1ad-132">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-132">Optional.</span></span> <span data-ttu-id="8f1ad-133">Nazwany region w pamięci podręcznej, do którego można dodać wpis pamięci podręcznej, jeśli regiony zostały zaimplementowane.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-133">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="8f1ad-134">Ponieważ regiony nie są zaimplementowane w [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]programie, wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-134">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8f1ad-135">Gdy jest zastępowany w klasie pochodnej, Wstawia wpis pamięci podręcznej bez zastępowania istniejącego wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-135">When overridden in a derived class, inserts a cache entry into the cache without overwriting any existing cache entry.</span></span></summary>
        <returns><span data-ttu-id="8f1ad-136"><see langword="true" />Jeśli wstawianie zakończyło się <see langword="false" /> powodzeniem lub istnieje już wpis w pamięci podręcznej, który ma taki sam klucz <paramref name="key" />jak.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-136"><see langword="true" /> if insertion succeeded, or <see langword="false" /> if there is an already an entry in the cache that has the same key as <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-137">Przeciążenia metod są wirtualne (nieabstrakcyjne) <xref:System.Runtime.Caching.ObjectCache> w klasie, ponieważ <xref:System.Runtime.Caching.ObjectCache.Add%2A> metoda wewnętrznie wywołuje <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>. <xref:System.Runtime.Caching.ObjectCache.Add%2A></span><span class="sxs-lookup"><span data-stu-id="8f1ad-137">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="8f1ad-138">Zmniejsza to liczbę przeciążeń metody, które musi dostarczyć implementacja pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-138">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="8f1ad-139">Jeśli implementacja pamięci podręcznej nie wymaga żadnych specjalnych zachowań dla <xref:System.Runtime.Caching.ObjectCache.Add%2A> metody, można tylko <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> zaimplementować przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-139">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; bool&#xA;override this.Add : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; bool" Usage="objectCache.Add (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8f1ad-140">Unikatowy identyfikator wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-140">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="8f1ad-141">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-141">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="8f1ad-142">Obiekt, który zawiera szczegóły wykluczenia dla wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-142">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="8f1ad-143">Ten obiekt zawiera więcej opcji wykluczania niż proste bezwzględne wygaśnięcie.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-143">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <param name="regionName"><span data-ttu-id="8f1ad-144">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-144">Optional.</span></span> <span data-ttu-id="8f1ad-145">Nazwany region w pamięci podręcznej, do którego można dodać wpis pamięci podręcznej, jeśli regiony zostały zaimplementowane.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-145">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="8f1ad-146">Wartość domyślna parametru Optional to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-146">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8f1ad-147">Gdy jest zastępowany w klasie pochodnej, wstawia do pamięci podręcznej wpis pamięci podręcznej, określając informacje o tym, w jaki sposób wpis zostanie wykluczony.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-147">When overridden in a derived class, inserts a cache entry into the cache, specifying information about how the entry will be evicted.</span></span></summary>
        <returns><span data-ttu-id="8f1ad-148"><see langword="true" />Jeśli wstawianie zakończyło się powodzeniem lub <see langword="false" /> istnieje już wpis w pamięci podręcznej z tym samym kluczem co. <paramref name="key" /></span><span class="sxs-lookup"><span data-stu-id="8f1ad-148"><see langword="true" /> if the insertion try succeeds, or <see langword="false" /> if there is an already an entry in the cache with the same key as <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-149">Przeciążenia metod są wirtualne (nieabstrakcyjne) <xref:System.Runtime.Caching.ObjectCache> w klasie, ponieważ <xref:System.Runtime.Caching.ObjectCache.Add%2A> metoda wewnętrznie wywołuje <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>. <xref:System.Runtime.Caching.ObjectCache.Add%2A></span><span class="sxs-lookup"><span data-stu-id="8f1ad-149">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="8f1ad-150">Zmniejsza to liczbę przeciążeń metody, które musi dostarczyć implementacja pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-150">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="8f1ad-151">Jeśli implementacja pamięci podręcznej nie wymaga żadnych specjalnych zachowań dla <xref:System.Runtime.Caching.ObjectCache.Add%2A> metody, można tylko <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> zaimplementować przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-151">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOrGetExisting">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f1ad-152">Gdy jest zastępowany w klasie pochodnej, program próbuje wstawić do pamięci podręcznej wpis pamięci podręcznej i zwraca istniejący wpis pamięci podręcznej z pasującym kluczem.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-152">When overridden in a derived class, tries to insert a cache entry into the cache, and returns an existing cache entry with a matching key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-153">Przeciążenia <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> metody wstawiają wpis do pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-153">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads insert an entry into the cache.</span></span> <span data-ttu-id="8f1ad-154">Jeśli wpis pamięci podręcznej z zgodnym kluczem już istnieje, zwracają istniejący wpis.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-154">If a cache entry with a matching key already exists, they return the existing entry.</span></span> <span data-ttu-id="8f1ad-155">Wpis pamięci podręcznej może <xref:System.Runtime.Caching.CacheItem> być obiektem lub obiektem ogólnym.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-155">The cache entry can be a <xref:System.Runtime.Caching.CacheItem> object or a generic object.</span></span>  
  
 <span data-ttu-id="8f1ad-156">Istnieje jedna różnica między <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> przeciążeniami <xref:System.Runtime.Caching.ObjectCache.Add%2A> a przeciążeniami.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-156">There is one difference between the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> overloads and the <xref:System.Runtime.Caching.ObjectCache.Add%2A> overloads.</span></span> <span data-ttu-id="8f1ad-157">Gdy te przeciążone metody próbują wstawić wpis pamięci podręcznej, jeśli zostanie znaleziony istniejący wpis, który ma klucz pasujący do istniejącego wstawionego wpisu <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> pamięci podręcznej, przeciążenia zwracają istniejący wpis pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-157">When these overloaded methods try to insert a cache entry, if an existing entry is found that has a key that matches an existing inserted cache entry, the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> overloads return the existing cache entry.</span></span> <span data-ttu-id="8f1ad-158"><xref:System.Runtime.Caching.ObjectCache.Add%2A> Przeciążenia nie są obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-158">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> overloads do not.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem AddOrGetExisting (System.Runtime.Caching.CacheItem value, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem AddOrGetExisting(class System.Runtime.Caching.CacheItem value, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (value As CacheItem, policy As CacheItemPolicy) As CacheItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Runtime::Caching::CacheItem ^ AddOrGetExisting(System::Runtime::Caching::CacheItem ^ value, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; System.Runtime.Caching.CacheItem" Usage="objectCache.AddOrGetExisting (value, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8f1ad-159">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-159">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="8f1ad-160">Obiekt, który zawiera szczegóły wykluczenia dla wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-160">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="8f1ad-161">Ten obiekt zawiera więcej opcji wykluczania niż proste bezwzględne wygaśnięcie.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-161">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <summary><span data-ttu-id="8f1ad-162">Gdy jest zastępowany w klasie pochodnej, Wstawia określony <see cref="T:System.Runtime.Caching.CacheItem" /> obiekt do pamięci podręcznej, określając informacje o tym, w jaki sposób wpis zostanie wykluczony.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-162">When overridden in a derived class, inserts the specified <see cref="T:System.Runtime.Caching.CacheItem" /> object into the cache, specifying information about how the entry will be evicted.</span></span></summary>
        <returns><span data-ttu-id="8f1ad-163">Jeśli istnieje wpis pamięci podręcznej z tym samym kluczem, określony wpis pamięci podręcznej; w przeciwnym razie. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="8f1ad-163">If a cache entry with the same key exists, the specified cache entry; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : string * obj * DateTimeOffset * string -&gt; obj" Usage="objectCache.AddOrGetExisting (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8f1ad-164">Unikatowy identyfikator wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-164">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="8f1ad-165">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-165">The object to insert.</span></span></param>
        <param name="absoluteExpiration"><span data-ttu-id="8f1ad-166">Stała Data i godzina wygaśnięcia wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-166">The fixed date and time at which the cache entry will expire.</span></span></param>
        <param name="regionName"><span data-ttu-id="8f1ad-167">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-167">Optional.</span></span> <span data-ttu-id="8f1ad-168">Nazwany region w pamięci podręcznej, do którego można dodać wpis pamięci podręcznej, jeśli regiony zostały zaimplementowane.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-168">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="8f1ad-169">Wartość domyślna parametru Optional to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-169">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8f1ad-170">Gdy jest zastępowany w klasie pochodnej, wstawia do pamięci podręcznej wpis pamięci podręcznej, przy użyciu klucza, obiektu dla wpisu pamięci podręcznej, bezwzględnej wartości wygaśnięcia i opcjonalnego regionu, do którego ma zostać dodana pamięć podręczna.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-170">When overridden in a derived class, inserts a cache entry into the cache, by using a key, an object for the cache entry, an absolute expiration value, and an optional region to add the cache into.</span></span></summary>
        <returns><span data-ttu-id="8f1ad-171">Jeśli istnieje wpis pamięci podręcznej z tym samym kluczem, wartość określonego wpisu pamięci podręcznej; w przeciwnym razie. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="8f1ad-171">If a cache entry with the same key exists, the specified cache entry's value; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-172">To <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> Przeciążenie metody zwraca wartość obiektu, a <xref:System.Runtime.Caching.CacheItem> nie obiekt.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-172">This <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method overload returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; obj" Usage="objectCache.AddOrGetExisting (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8f1ad-173">Unikatowy identyfikator wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-173">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="8f1ad-174">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-174">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="8f1ad-175">Obiekt, który zawiera szczegóły wykluczenia dla wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-175">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="8f1ad-176">Ten obiekt zawiera więcej opcji wykluczania niż proste bezwzględne wygaśnięcie.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-176">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <param name="regionName"><span data-ttu-id="8f1ad-177">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-177">Optional.</span></span> <span data-ttu-id="8f1ad-178">Nazwany region w pamięci podręcznej, do którego można dodać wpis pamięci podręcznej, jeśli regiony zostały zaimplementowane.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-178">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="8f1ad-179">Wartość domyślna parametru Optional to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-179">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8f1ad-180">Gdy jest zastępowany w klasie pochodnej, wstawia do pamięci podręcznej wpis pamięci podręcznej, określając klucz i wartość wpisu pamięci podręcznej oraz informacje o tym, jak wpis zostanie wykluczony.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-180">When overridden in a derived class, inserts a cache entry into the cache, specifying a key and a value for the cache entry, and information about how the entry will be evicted.</span></span></summary>
        <returns><span data-ttu-id="8f1ad-181">Jeśli istnieje wpis pamięci podręcznej z tym samym kluczem, wartość określonego wpisu pamięci podręcznej; w przeciwnym razie. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="8f1ad-181">If a cache entry with the same key exists, the specified cache entry's value; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-182">Metoda zwraca wartość obiektu, a <xref:System.Runtime.Caching.CacheItem> nie obiekt. <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29></span><span class="sxs-lookup"><span data-stu-id="8f1ad-182">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> method returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (key As String, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Contains : string * string -&gt; bool" Usage="objectCache.Contains (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8f1ad-183">Unikatowy identyfikator wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-183">A unique identifier for the cache entry.</span></span></param>
        <param name="regionName"><span data-ttu-id="8f1ad-184">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-184">Optional.</span></span> <span data-ttu-id="8f1ad-185">Nazwany region w pamięci podręcznej, w którym można znaleźć pamięć podręczną, jeśli są zaimplementowane regiony.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-185">A named region in the cache where the cache can be found, if regions are implemented.</span></span> <span data-ttu-id="8f1ad-186">Wartość domyślna parametru Optional to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-186">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8f1ad-187">Gdy jest zastępowany w klasie pochodnej, sprawdza, czy wpis pamięci podręcznej już istnieje w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-187">When overridden in a derived class, checks whether the cache entry already exists in the cache.</span></span></summary>
        <returns><span data-ttu-id="8f1ad-188"><see langword="true" />Jeśli pamięć podręczna zawiera wpis pamięci podręcznej z taką samą <paramref name="key" />wartością klucza jak <see langword="false" />; w przeciwnym razie,.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-188"><see langword="true" /> if the cache contains a cache entry with the same key value as <paramref name="key" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCacheEntryChangeMonitor">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCacheEntryChangeMonitor (keys As IEnumerable(Of String), Optional regionName As String = null) As CacheEntryChangeMonitor" />
      <MemberSignature Language="F#" Value="abstract member CreateCacheEntryChangeMonitor : seq&lt;string&gt; * string -&gt; System.Runtime.Caching.CacheEntryChangeMonitor" Usage="objectCache.CreateCacheEntryChangeMonitor (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryChangeMonitor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="8f1ad-189">Unikatowe identyfikatory dla wpisów pamięci podręcznej do monitorowania.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-189">The unique identifiers for cache entries to monitor.</span></span></param>
        <param name="regionName"><span data-ttu-id="8f1ad-190">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-190">Optional.</span></span> <span data-ttu-id="8f1ad-191">Nazwany region w pamięci podręcznej, w którym znajdują <paramref name="keys" /> się klucze pamięci podręcznej w parametrze, jeśli regiony zostały zaimplementowane.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-191">A named region in the cache where the cache keys in the <paramref name="keys" /> parameter exist, if regions are implemented.</span></span> <span data-ttu-id="8f1ad-192">Wartość domyślna parametru Optional to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-192">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8f1ad-193">Gdy jest zastępowany w klasie pochodnej, tworzy <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> obiekt, który może wyzwalać zdarzenia w odpowiedzi na zmiany określonych wpisów pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-193">When overridden in a derived class, creates a <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> object that can trigger events in response to changes to specified cache entries.</span></span></summary>
        <returns><span data-ttu-id="8f1ad-194">Monitor zmian, który monitoruje wpisy pamięci podręcznej w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-194">A change monitor that monitors cache entries in the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-195">Gdy Klasa pochodna <xref:System.Runtime.Caching.ObjectCache> przesłania metodę podstawową <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> , implementacja <xref:System.Runtime.Caching.CacheEntryChangeMonitor> pamięci podręcznej musi utworzyć obiekt.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-195">When a derived <xref:System.Runtime.Caching.ObjectCache> class overrides the base <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> method, the cache implementation must create a <xref:System.Runtime.Caching.CacheEntryChangeMonitor> object.</span></span> <span data-ttu-id="8f1ad-196">Ten wyspecjalizowany monitor będzie powiadamiał wywołujących w przypadku zmiany wpisów w pamięci podręcznej, które są `keys` określone w parametrze.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-196">This specialized change monitor notifies callers when there are changes to the cache entries that are specified in the `keys` parameter.</span></span> <span data-ttu-id="8f1ad-197">Na przykład jeśli monitorowany element w `keys` parametrze zostanie zaktualizowany lub usunięty z pamięci podręcznej, monitor zmian utworzony przez tę metodę wyzwala zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-197">For example, if a monitored item in the `keys` parameter is updated or removed from the cache, the change monitor created by this method triggers an event.</span></span>  
  
 <span data-ttu-id="8f1ad-198">Jeśli implementacja pamięci podręcznej obsługuje nazwane regiony pamięci podręcznej, wartość ciągu można `regionName` określić jako parametr.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-198">If a cache implementation supports named cache regions, a string value can be specified as the `regionName` parameter.</span></span> <span data-ttu-id="8f1ad-199">W przeciwnym razie parametr ma `null`wartość domyślną.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-199">Otherwise, the parameter defaults to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f1ad-200">Nie wszystkie implementacje pamięci podręcznej obsługują monitory zmian wpisów w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-200">Not all cache implementations support cache-entry change monitors.</span></span> <span data-ttu-id="8f1ad-201">Aby ustalić, czy implementacja pamięci podręcznej obsługuje <xref:System.Runtime.Caching.CacheEntryChangeMonitor> obiekty, zapoznaj się z dokumentacją dla określonej implementacji pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-201">To determine whether your cache implementation supports <xref:System.Runtime.Caching.CacheEntryChangeMonitor> objects, see the documentation for the specific cache implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCacheCapabilities">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultCacheCapabilities As DefaultCacheCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Runtime::Caching::DefaultCacheCapabilities DefaultCacheCapabilities { System::Runtime::Caching::DefaultCacheCapabilities get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCacheCapabilities : System.Runtime.Caching.DefaultCacheCapabilities" Usage="System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.DefaultCacheCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f1ad-202">Gdy jest zastępowany w klasie pochodnej, Pobiera opis funkcji zapewnianych przez implementację pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-202">When overridden in a derived class, gets a description of the features that a cache implementation provides.</span></span></summary>
        <value><span data-ttu-id="8f1ad-203">Bitowa kombinacja flag wskazujących domyślne możliwości implementacji pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-203">A bitwise combination of flags that indicate the default capabilities of a cache implementation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract object Get (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string -&gt; obj" Usage="objectCache.Get (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8f1ad-204">Unikatowy identyfikator wpisu pamięci podręcznej, który ma zostać pobrany.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-204">A unique identifier for the cache entry to get.</span></span></param>
        <param name="regionName"><span data-ttu-id="8f1ad-205">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-205">Optional.</span></span> <span data-ttu-id="8f1ad-206">Nazwany region w pamięci podręcznej, do którego dodano wpis pamięci podręcznej, jeśli regiony zostały zaimplementowane.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-206">A named region in the cache to which the cache entry was added, if regions are implemented.</span></span> <span data-ttu-id="8f1ad-207">Wartość domyślna parametru Optional to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-207">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8f1ad-208">Gdy jest zastępowany w klasie pochodnej, pobiera określony wpis pamięci podręcznej z pamięci podręcznej jako obiekt.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-208">When overridden in a derived class, gets the specified cache entry from the cache as an object.</span></span></summary>
        <returns><span data-ttu-id="8f1ad-209">Wpis pamięci podręcznej, który <paramref name="key" />jest identyfikowany przez.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-209">The cache entry that is identified by <paramref name="key" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheItem">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem GetCacheItem (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem GetCacheItem(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCacheItem (key As String, Optional regionName As String = null) As CacheItem" />
      <MemberSignature Language="F#" Value="abstract member GetCacheItem : string * string -&gt; System.Runtime.Caching.CacheItem" Usage="objectCache.GetCacheItem (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8f1ad-210">Unikatowy identyfikator wpisu pamięci podręcznej, który ma zostać pobrany.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-210">A unique identifier for the cache entry to get.</span></span></param>
        <param name="regionName"><span data-ttu-id="8f1ad-211">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-211">Optional.</span></span> <span data-ttu-id="8f1ad-212">Nazwany region w pamięci podręcznej, do której dodano pamięć podręczną, jeśli regiony zostały zaimplementowane.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-212">A named region in the cache to which the cache was added, if regions are implemented.</span></span> <span data-ttu-id="8f1ad-213">Ponieważ regiony nie są zaimplementowane w [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]programie, wartość domyślna <see langword="null" />to.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-213">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8f1ad-214">Gdy jest zastępowany w klasie pochodnej, pobiera określony wpis pamięci podręcznej z pamięci <see cref="T:System.Runtime.Caching.CacheItem" /> podręcznej jako wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-214">When overridden in a derived class, gets the specified cache entry from the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance.</span></span></summary>
        <returns><span data-ttu-id="8f1ad-215">Wpis pamięci podręcznej, który <paramref name="key" />jest identyfikowany przez.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-215">The cache entry that is identified by <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-216">To Przeciążenie metody istnieje, ponieważ niektóre implementacje pamięci podręcznej mogą zwiększyć <xref:System.Runtime.Caching.CacheItem> klasę.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-216">This method overload exists because some cache implementations might extend the <xref:System.Runtime.Caching.CacheItem> class.</span></span> <span data-ttu-id="8f1ad-217">W takim przypadku <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> Przeciążenie metody niekoniecznie zwróci wszystkie informacje o danych w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-217">In that case, the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method overload will not necessarily return all the information about cached data.</span></span> <span data-ttu-id="8f1ad-218">Jednak Przeciążenie metody umożliwia niestandardowym pamięciom podręcznym zwracanie więcej niż tylko wartości pamięci podręcznej. <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29></span><span class="sxs-lookup"><span data-stu-id="8f1ad-218">However, the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method overload enables custom caches to return more than just the cache value.</span></span>  
  
 <span data-ttu-id="8f1ad-219">Metoda jest taka <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> sama jak <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> Metoda, z tą różnicą, że <xref:System.Runtime.Caching.CacheItem> Metoda zwraca jako wystąpienie zwracany wpis pamięci podręcznej. <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29></span><span class="sxs-lookup"><span data-stu-id="8f1ad-219">The <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method is like the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method, except that the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method returns return the cache entry as a <xref:System.Runtime.Caching.CacheItem> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public abstract long GetCount (string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetCount(string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCount (Optional regionName As String = null) As Long" />
      <MemberSignature Language="F#" Value="abstract member GetCount : string -&gt; int64" Usage="objectCache.GetCount regionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regionName"><span data-ttu-id="8f1ad-220">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-220">Optional.</span></span> <span data-ttu-id="8f1ad-221">Nazwany region w pamięci podręcznej, dla którego należy obliczyć liczbę wpisów pamięci podręcznej, jeśli regiony zostały zaimplementowane.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-221">A named region in the cache for which the cache entry count should be computed, if regions are implemented.</span></span> <span data-ttu-id="8f1ad-222">Wartość domyślna parametru Optional to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-222">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8f1ad-223">Gdy jest zastępowany w klasie pochodnej, pobiera łączną liczbę wpisów pamięci podręcznej w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-223">When overridden in a derived class, gets the total number of cache entries in the cache.</span></span></summary>
        <returns><span data-ttu-id="8f1ad-224">Liczba wpisów pamięci podręcznej w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-224">The number of cache entries in the cache.</span></span> <span data-ttu-id="8f1ad-225">Jeśli <paramref name="regionName" /> nie<see langword="null" />jest, liczba wskazuje liczbę wpisów, które znajdują się w określonym regionie pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-225">If <paramref name="regionName" /> is not <see langword="null" />, the count indicates the number of entries that are in the specified cache region.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="objectCache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f1ad-226">Gdy jest zastępowany w klasie pochodnej, tworzy moduł wyliczający, który może być używany do iteracji w kolekcji wpisów pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-226">When overridden in a derived class, creates an enumerator that can be used to iterate through a collection of cache entries.</span></span></summary>
        <returns><span data-ttu-id="8f1ad-227">Obiekt modułu wyliczającego, który zapewnia dostęp do wpisów pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-227">The enumerator object that provides access to the cache entries in the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-228">Implementacje pamięci podręcznej mogą przesłonić i zwiększyć tę metodę, aby zapewnić niestandardowy sposób iteracji za pośrednictwem kolekcji wpisów pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-228">Cache implementers can override and extend this method to provide a custom means of iterating through a collection of cache entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f1ad-229">Zwrócenie modułu wyliczającego jest zazwyczaj bardziej kosztowną operacją niż zwrócenie całego wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-229">Returning an enumerator is typically a more expensive operation than returning the entire cache entry.</span></span>  
  
 <span data-ttu-id="8f1ad-230">Ta metoda jest wywoływana przez jawne implementacje interfejsu, które <xref:System.Runtime.Caching.ObjectCache> Klasa ma <xref:System.Collections.IEnumerable.GetEnumerator%2A> dla metod i <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> .</span><span class="sxs-lookup"><span data-stu-id="8f1ad-230">This method is called by the explicit interface implementations that the <xref:System.Runtime.Caching.ObjectCache> class has for the <xref:System.Collections.IEnumerable.GetEnumerator%2A> and <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValues">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f1ad-231">Pobiera zestaw wpisów pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-231">Gets a set of cache entries.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValues (keys As IEnumerable(Of String), Optional regionName As String = null) As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="abstract member GetValues : seq&lt;string&gt; * string -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="objectCache.GetValues (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="8f1ad-232">Kolekcja unikatowych identyfikatorów dla wpisów pamięci podręcznej do pobrania.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-232">A collection of unique identifiers for the cache entries to get.</span></span></param>
        <param name="regionName"><span data-ttu-id="8f1ad-233">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-233">Optional.</span></span> <span data-ttu-id="8f1ad-234">Nazwany region w pamięci podręcznej, do którego dodano wpis lub wpisy pamięci podręcznej, jeśli regiony zostały zaimplementowane.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-234">A named region in the cache to which the cache entry or entries were added, if regions are implemented.</span></span> <span data-ttu-id="8f1ad-235">Wartość domyślna parametru Optional to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-235">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8f1ad-236">Gdy jest zastępowany w klasie pochodnej, Pobiera zestaw wpisów pamięci podręcznej odpowiadających określonym kluczom.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-236">When overridden in a derived class, gets a set of cache entries that correspond to the specified keys.</span></span></summary>
        <returns><span data-ttu-id="8f1ad-237">Słownik par klucz/wartość, które reprezentują wpisy pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-237">A dictionary of key/value pairs that represent cache entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-238">Przeciążenie <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> metody to Optymalizacja wydajności rozproszonej pamięci podręcznej, która obsługuje pobieranie wielu wpisów pamięci podręcznej z pamięci podręcznej podczas jednego wywołania sieciowego.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-238">The <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload is a performance optimization for distributed caches that support fetching multiple cache entries from the cache during a single network call.</span></span>  
  
 <span data-ttu-id="8f1ad-239">Mimo że obiekt wywołujący może przekazać jeden lub więcej kluczy do metody, nie ma gwarancji, że wszystkie klucze reprezentują wpisy w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-239">Although a caller can pass one or more keys to the method, there is no guarantee that all keys represent entries in the cache.</span></span> <span data-ttu-id="8f1ad-240">W związku z tym zwracany słownik może zawierać mniej elementów niż liczba kluczy przekazana do metody.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-240">Therefore, the returned dictionary might contain fewer items than the number of keys that were passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (string regionName, params string[] keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(string regionName, string[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValues (regionName As String, ParamArray keys As String()) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetValues(System::String ^ regionName, ... cli::array &lt;System::String ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="abstract member GetValues : string * string[] -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;&#xA;override this.GetValues : string * string[] -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="objectCache.GetValues (regionName, keys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
        <Parameter Name="keys" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="regionName"><span data-ttu-id="8f1ad-241">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-241">Optional.</span></span> <span data-ttu-id="8f1ad-242">Nazwany region w pamięci podręcznej, do którego dodano wpis lub wpisy pamięci podręcznej, jeśli regiony zostały zaimplementowane.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-242">A named region in the cache to which the cache entry or entries were added, if regions are implemented.</span></span> <span data-ttu-id="8f1ad-243">Ponieważ regiony nie są zaimplementowane w [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]programie, wartość domyślna <see langword="null" />to.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-243">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is <see langword="null" />.</span></span></param>
        <param name="keys"><span data-ttu-id="8f1ad-244">Kolekcja unikatowych identyfikatorów dla wpisów pamięci podręcznej do pobrania.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-244">A collection of unique identifiers for the cache entries to get.</span></span></param>
        <summary><span data-ttu-id="8f1ad-245">Pobiera zestaw wpisów pamięci podręcznej odpowiadających określonym kluczom.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-245">Gets a set of cache entries that correspond to the specified keys.</span></span></summary>
        <returns><span data-ttu-id="8f1ad-246">Słownik par klucz/wartość, które reprezentują wpisy pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-246">A dictionary of key/value pairs that represent cache entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-247">Przeciążenie metody przypomina Przeciążenie metody, ale umożliwia przekazanie nazwanego regionu przy użyciu opcjonalnej składni parametrów, która jest obsługiwana przez Języki zarządzane, takie jak C# <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> <xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8f1ad-247">The <xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType> method overload is like the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload, but lets you pass the named region by using optional parameter syntax that is supported by managed languages such as C#.</span></span>  
  
 <span data-ttu-id="8f1ad-248">Ta metoda jest metodą wirtualną, ponieważ <xref:System.Runtime.Caching.ObjectCache> Klasa udostępnia implementację domyślną, która `params` przekazuje tablicę do <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-248">This method is a virtual method because the <xref:System.Runtime.Caching.ObjectCache> class provides a default implementation that passes the `params` array to the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public static IServiceProvider Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IServiceProvider Host" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Host" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Host As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property IServiceProvider ^ Host { IServiceProvider ^ get(); void set(IServiceProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : IServiceProvider with get, set" Usage="System.Runtime.Caching.ObjectCache.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f1ad-249">Pobiera lub ustawia odwołanie do zarządzanego środowiska hostingu, które jest dostępne dla <see cref="T:System.Runtime.Caching.ObjectCache" /> implementacji i który może udostępniać <see cref="T:System.Runtime.Caching.ObjectCache" /> usługi specyficzne dla hosta.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-249">Gets or sets a reference to a managed hosting environment that is available to <see cref="T:System.Runtime.Caching.ObjectCache" /> implementations and that can provide host-specific services to <see cref="T:System.Runtime.Caching.ObjectCache" /> implementations.</span></span></summary>
        <value><span data-ttu-id="8f1ad-250">Odwołanie do zarządzanego środowiska hostingu z obsługą pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-250">A reference to a cache-aware managed hosting environment.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-251">Właściwość jest przeznaczona do użycia przez [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] środowiska hosta i implementacje pamięci podręcznej implementujące zachowanie, które zależy od środowiska hosta .NET Framework. <xref:System.Runtime.Caching.ObjectCache.Host%2A></span><span class="sxs-lookup"><span data-stu-id="8f1ad-251">The <xref:System.Runtime.Caching.ObjectCache.Host%2A> property is intended for use by [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] host environments and by cache implementations that implement behavior that depends on the .NET Framework host environment.</span></span>  
  
 <span data-ttu-id="8f1ad-252">W poniższej tabeli przedstawiono zestaw usług środowiska hosta, które mogą być dostępne w zarządzanym środowisku hostingu i które są dostępne dla <xref:System.Runtime.Caching.ObjectCache> implementacji <xref:System.Runtime.Caching.ObjectCache.Host%2A> za pośrednictwem właściwości:</span><span class="sxs-lookup"><span data-stu-id="8f1ad-252">The following table lists the set of host environment services that might be available from a managed hosting environment and that are available to <xref:System.Runtime.Caching.ObjectCache> implementations through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property:</span></span>  
  
|<span data-ttu-id="8f1ad-253">Usługa</span><span class="sxs-lookup"><span data-stu-id="8f1ad-253">Service</span></span>|<span data-ttu-id="8f1ad-254">Opis</span><span class="sxs-lookup"><span data-stu-id="8f1ad-254">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.Runtime.Caching.Hosting.IApplicationIdentifier>|<span data-ttu-id="8f1ad-255">Umożliwia środowisku hosta dostarczanie identyfikatorów domen aplikacji, które mogą być konieczne przez implementację pamięci podręcznej dla funkcji, takich jak identyfikowanie liczników wydajności.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-255">Lets host environments provide application domain identifiers that might be needed by a cache implementation for features such as identifying performance counters.</span></span>|  
|<xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>|<span data-ttu-id="8f1ad-256">Umożliwia środowisko hosta udostępnia niestandardowy system powiadamiania o zmianach plików, zamiast używać go w programie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="8f1ad-256">Lets host environments provide a custom file-change notification system, instead of using the one provided in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>|  
|<xref:System.Runtime.Caching.Hosting.IMemoryCacheManager>|<span data-ttu-id="8f1ad-257">Umożliwia obsługę pamięci podręcznej w raportach dotyczących wykorzystania pamięci przez pamięć podręczną w środowisku hosta.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-257">Lets cache implementations report cache memory consumption to the host environment.</span></span> <span data-ttu-id="8f1ad-258">Dzięki temu środowiska hosta mogą centralnie zarządzać użyciem pamięci w wielu implementacjach pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-258">This enables host environments to centrally manage memory consumption across multiple cache implementations.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="8f1ad-259">Obiekty wywołujące tę wartość właściwości wymagają uprawnień zabezpieczeń dostępu do kodu bez ograniczeń.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-259">Callers of this property value require unrestricted code access security permissions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8f1ad-260">Wartość przypisana do właściwości to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-260">The value being assigned to the property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8f1ad-261">Podjęto próbę ustawienia wartości właściwości więcej niż jeden raz.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-261">An attempt was made to set the property value more than one time.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="8f1ad-262">dla pełnego zaufania dla wszystkich metod dostępu tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-262">for full trust for all accessors of this property.</span></span> <span data-ttu-id="8f1ad-263">Ta właściwość nie może być używana przez częściowo zaufany kod.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-263">This property cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="InfiniteAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset InfiniteAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteAbsoluteExpiration As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteAbsoluteExpiration : DateTimeOffset" Usage="System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f1ad-264">Pobiera wartość wskazującą, że wpis pamięci podręcznej nie ma bezwzględnego wygaśnięcia.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-264">Gets a value that indicates that a cache entry has no absolute expiration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-265">Wpis pamięci podręcznej, który został wstawiony do pamięci <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> podręcznej z wartością pola ustawioną jako wartość wygaśnięcia, nigdy nie powinien wygasać na podstawie bezwzględnego punktu w czasie.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-265">A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> field value set as the expiration value should never expire based on an absolute point in time.</span></span> <span data-ttu-id="8f1ad-266">Wpis pamięci podręcznej z tym ustawieniem można jednak wykluczyć z pamięci podręcznej z innych powodów, które są określane przez określoną implementację pamięci podręcznej, taką jak wykluczenie zdarzenia monitorowania zmian spowodowany przez wykorzystanie pamięci.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-266">However, a cache entry with this setting can be evicted from the cache for other reasons that are determined by a particular cache implementation, such as a change-monitor event eviction caused by memory pressure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Runtime.Caching.ObjectCache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8f1ad-267">Unikatowy identyfikator wpisu pamięci podręcznej w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-267">A unique identifier for a cache entry in the cache.</span></span></param>
        <summary><span data-ttu-id="8f1ad-268">Pobiera lub ustawia domyślny indeksator dla <see cref="T:System.Runtime.Caching.ObjectCache" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-268">Gets or sets the default indexer for the <see cref="T:System.Runtime.Caching.ObjectCache" /> class.</span></span></summary>
        <value><span data-ttu-id="8f1ad-269">Klucz, który służy jako indeksator do wystąpienia pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-269">A key that serves as an indexer into the cache instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-270">Zachowanie akcesora zestawu tej właściwości jest podobne do <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> metody.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-270">The behavior of the set accessor of this property is like the <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method.</span></span> <span data-ttu-id="8f1ad-271">Wewnętrznie implementacja pamięci podręcznej może ustawić bezwzględne wygaśnięcie określonej wartości dla <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> metody.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-271">Internally, a cache implementation could set the absolute expiration of the specified value to the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> method.</span></span> <span data-ttu-id="8f1ad-272">Jednak to zachowanie jest ostatecznie do implementacji pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-272">However this behavior is ultimately up to the cache implementation.</span></span>  
  
 <span data-ttu-id="8f1ad-273">Zachowanie <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> metody Get Metoda dostępu jest podobne do wywołania metod i przy `null` użyciu dla nazwy regionu.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-273">The behavior of get accessor is like calling the <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> method and using `null` for the region name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.Caching.ObjectCache.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f1ad-274">Pobiera nazwę określonego <see cref="T:System.Runtime.Caching.ObjectCache" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-274">Gets the name of a specific <see cref="T:System.Runtime.Caching.ObjectCache" /> instance.</span></span></summary>
        <value><span data-ttu-id="8f1ad-275">Nazwa określonego wystąpienia pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-275">The name of a specific cache instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-276">Niektóre implementacje pamięci podręcznej mogą obsługiwać wiele wystąpień pamięci podręcznej, która działa w pojedynczej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-276">Some cache implementations might support multiple instances of the cache that is running in a single application.</span></span> <span data-ttu-id="8f1ad-277">Ta właściwość umożliwia realizatorom pamięci podręcznej Zwracanie nazwy, która identyfikuje określone wystąpienie pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-277">This property lets cache implementers return a name that identifies a specific cache instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoSlidingExpiration : TimeSpan" Usage="System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f1ad-278">Wskazuje, że wpis pamięci podręcznej nie ma czasu wygaśnięcia przewijania.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-278">Indicates that a cache entry has no sliding expiration time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-279">Czas wygaśnięcia oparty na czasie trwania lub zdefiniowanego okna jest również określany jako wygasające wygaśnięcie.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-279">Expiration that is based on duration or a defined window of time is also referred to as sliding expiration.</span></span> <span data-ttu-id="8f1ad-280">Zwykle implementacja pamięci podręcznej, która wyklucza elementy, które są oparte na przeniesieniu, spowoduje usunięcie elementu, do którego nie uzyskano dostępu w określonym przedziale czasu.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-280">Normally, a cache implementation that evicts items that are based on sliding expiration will remove an item that has not been accessed in the specified window of time.</span></span>  
  
 <span data-ttu-id="8f1ad-281">Wpis pamięci podręcznej, który został wstawiony do pamięci <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> podręcznej z wartością pola ustawioną jako wartość wygaśnięcia, nigdy nie powinien być wykluczony z powodu braku aktywności w przedziale czasu.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-281">A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> field value set as the expiration value should never be evicted because of non-activity in a sliding time window.</span></span> <span data-ttu-id="8f1ad-282">Jednak element pamięci podręcznej może zostać wykluczony, jeśli ma bezwzględne wygaśnięcie lub jeśli wystąpi inne zdarzenie wykluczenia, taki monitor zmian lub wykorzystanie pamięci.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-282">However, a cache item can be evicted if it has an absolute expiration, or if some other eviction event occurs, such a change monitor or memory pressure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract object Remove (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Remove(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member Remove : string * string -&gt; obj" Usage="objectCache.Remove (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8f1ad-283">Unikatowy identyfikator wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-283">A unique identifier for the cache entry.</span></span></param>
        <param name="regionName"><span data-ttu-id="8f1ad-284">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-284">Optional.</span></span> <span data-ttu-id="8f1ad-285">Nazwany region w pamięci podręcznej, do którego dodano wpis pamięci podręcznej, jeśli regiony zostały zaimplementowane.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-285">A named region in the cache to which the cache entry was added, if regions are implemented.</span></span> <span data-ttu-id="8f1ad-286">Wartość domyślna parametru Optional to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-286">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8f1ad-287">Gdy jest zastępowany w klasie pochodnej, usuwa wpis pamięci podręcznej z pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-287">When overridden in a derived class, removes the cache entry from the cache.</span></span></summary>
        <returns><span data-ttu-id="8f1ad-288">Obiekt, który reprezentuje wartość usuniętego wpisu pamięci podręcznej, który został określony przez klucz lub <see langword="null" /> Jeśli nie znaleziono określonego wpisu.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-288">An object that represents the value of the removed cache entry that was specified by the key, or <see langword="null" /> if the specified entry was not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-289">Jeśli zastąpisz tę metodę w implementacji niestandardowej pamięci podręcznej, jeśli w pamięci podręcznej znajduje się wpis pamięci `key`podręcznej, który odpowiada, należy zwrócić wartość usuniętego elementu.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-289">If you override this method in a custom cache implementation, if there is a cache entry in the cache that corresponds to `key`, the value of the removed item should be returned.</span></span> <span data-ttu-id="8f1ad-290">Jeśli nic nie zostało usunięte z pamięci podręcznej, Metoda `null`powinna zwrócić.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-290">If nothing was removed from the cache, the method should return `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f1ad-291">Niektóre implementacje rozproszonej pamięci podręcznej mogą nie obsługiwać możliwości zwracania wartości, która została usunięta z pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-291">Some distributed cache implementations might not support the ability to return the value that was removed from the cache.</span></span> <span data-ttu-id="8f1ad-292">Może to być spowodowane tym, że implementacja pamięci podręcznej nie obsługuje zwracania wartości usuniętego elementu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-292">This might be because the cache implementation does not support returning the value of a removed cache item.</span></span> <span data-ttu-id="8f1ad-293">Może być to spowodowane tym, że kierowanie obiektu jako wartości zwracanej jest zbyt kosztowne.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-293">It might also be because marshaling the object as a return value is too expensive.</span></span> <span data-ttu-id="8f1ad-294">W takich przypadkach można zwrócić `null`implementacje pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-294">In such cases, cache implementations can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f1ad-295">Gdy jest zastępowany w klasie pochodnej, program wstawia wpis pamięci podręcznej do buforu.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-295">When overridden in a derived class, inserts a cache entry into the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-296">Typowym zachowaniem <xref:System.Runtime.Caching.ObjectCache.Set%2A> metod przeciążenia jest operacja INSERT-lub-Update.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-296">The typical behavior of the <xref:System.Runtime.Caching.ObjectCache.Set%2A> overload methods is an insert-or-update operation.</span></span> <span data-ttu-id="8f1ad-297">Wpis pamięci podręcznej został wstawiony jako nowy wpis, jeśli określony wpis nie istnieje lub wpis pamięci podręcznej zostanie zaktualizowany o nową wartość, jeśli już istnieje.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-297">A cache entry is either inserted as a new entry if the specified entry does not exist, or the cache entry is updated with a new value if it already exists.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (item As CacheItem, policy As CacheItemPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Set(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member Set : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; unit" Usage="objectCache.Set (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="8f1ad-298">Element pamięci podręcznej, który ma zostać dodany.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-298">The cache item to add.</span></span></param>
        <param name="policy"><span data-ttu-id="8f1ad-299">Obiekt, który zawiera szczegóły wykluczenia dla wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-299">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="8f1ad-300">Ten obiekt zawiera więcej opcji wykluczania niż proste bezwzględne wygaśnięcie.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-300">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <summary><span data-ttu-id="8f1ad-301">Gdy jest zastępowany w klasie pochodnej, Wstawia wpis pamięci podręcznej jako <see cref="T:System.Runtime.Caching.CacheItem" /> wystąpienie, określając informacje o tym, w jaki sposób wpis zostanie wykluczony.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-301">When overridden in a derived class, inserts the cache entry into the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance, specifying information about how the entry will be evicted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-302">Jeśli klucz `item` nie istnieje, `item` zostanie wstawiony jako nowy wpis pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-302">If the key for `item` does not exist, `item` is inserted as a new cache entry.</span></span> <span data-ttu-id="8f1ad-303">Jeśli istnieje element z kluczem, który jest `item` zgodny, wartość z `item` jest używana do aktualizowania lub zastępowania wartości istniejącego wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-303">If an item with a key that matches `item` exists, the value from `item` is used to update or overwrite the value of the existing cache entry.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * obj * DateTimeOffset * string -&gt; unit" Usage="objectCache.Set (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8f1ad-304">Unikatowy identyfikator wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-304">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="8f1ad-305">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-305">The object to insert.</span></span></param>
        <param name="absoluteExpiration"><span data-ttu-id="8f1ad-306">Stała Data i godzina wygaśnięcia wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-306">The fixed date and time at which the cache entry will expire.</span></span></param>
        <param name="regionName"><span data-ttu-id="8f1ad-307">Opcjonalna.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-307">Optional.</span></span> <span data-ttu-id="8f1ad-308">Nazwany region w pamięci podręcznej, do którego można dodać wpis pamięci podręcznej, jeśli regiony zostały zaimplementowane.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-308">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="8f1ad-309">Wartość domyślna parametru Optional to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-309">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8f1ad-310">W przypadku zastąpienia w klasie pochodnej program wstawia do pamięci podręcznej wpis pamięci podręcznej, określając informacje o wygasaniu opartym na czasie.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-310">When overridden in a derived class, inserts a cache entry into the cache, specifying time-based expiration details.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-311">Jeśli element, który jest `key` zgodny, `value` nie istnieje w pamięci podręcznej i `key` służy do wstawiania jako nowy wpis pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-311">If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry.</span></span> <span data-ttu-id="8f1ad-312">Jeśli element z kluczem zgodnym `item` z istnieje, wpis pamięci podręcznej jest aktualizowany lub zastępowany przy użyciu. `value`</span><span class="sxs-lookup"><span data-stu-id="8f1ad-312">If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; unit" Usage="objectCache.Set (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="8f1ad-313">Unikatowy identyfikator wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-313">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="8f1ad-314">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-314">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="8f1ad-315">Obiekt, który zawiera szczegóły wykluczenia dla wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-315">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="8f1ad-316">Ten obiekt zawiera więcej opcji wykluczania niż proste bezwzględne wygaśnięcie.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-316">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <param name="regionName"><span data-ttu-id="8f1ad-317">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-317">Optional.</span></span> <span data-ttu-id="8f1ad-318">Nazwany region w pamięci podręcznej, do którego można dodać wpis pamięci podręcznej, jeśli regiony zostały zaimplementowane.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-318">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="8f1ad-319">Wartość domyślna parametru Optional to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-319">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8f1ad-320">Gdy jest zastępowany w klasie pochodnej, program wstawia wpis pamięci podręcznej do buforu.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-320">When overridden in a derived class, inserts a cache entry into the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-321">To Przeciążenie metody umożliwia dostarczenie większej ilości informacji o wykluczeniu lub wygaśnięciu niż te, które są dostępne w bezwzględnym czasie.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-321">This method overload lets you provide more eviction or expiration details than those that are available in time-based absolute expiration.</span></span>  
  
 <span data-ttu-id="8f1ad-322">Jeśli element, który jest `key` zgodny, `value` nie istnieje w pamięci podręcznej i `key` służy do wstawiania jako nowy wpis pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-322">If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry.</span></span> <span data-ttu-id="8f1ad-323">Jeśli element z kluczem zgodnym `item` z istnieje, wpis pamięci podręcznej jest aktualizowany lub zastępowany przy użyciu. `value`</span><span class="sxs-lookup"><span data-stu-id="8f1ad-323">If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,object&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object)) Implements IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f1ad-324">Obsługuje iterację w kolekcji o jednoznacznie określonym typie.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-324">Supports iteration over a strongly typed collection.</span></span></summary>
        <returns><span data-ttu-id="8f1ad-325">Obiekt modułu wyliczającego, który zapewnia dostęp do wpisów pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-325">The enumerator object that provides access to the cache entries in the cache.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f1ad-326">Obsługuje iterację w kolekcji ogólnej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-326">Supports iteration over a generic collection.</span></span></summary>
        <returns><span data-ttu-id="8f1ad-327">Obiekt modułu wyliczającego, który zapewnia dostęp do elementów w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-327">The enumerator object that provides access to the items in the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f1ad-328">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-328">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8f1ad-329">Może być używana tylko wtedy, gdy wystąpienie <xref:System.Runtime.Caching.ObjectCache> pochodne jest rzutowane <xref:System.Collections.IEnumerable> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-329">It can be used only when a derived <xref:System.Runtime.Caching.ObjectCache> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="8f1ad-330">Deweloperzy mogą używać tej metody do iteracji w ogólnej kolekcji wpisów pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-330">Developers can use this method to iterate through a generic collection of cache entries.</span></span>  
  
 <span data-ttu-id="8f1ad-331">Jest to domyślna <xref:System.Collections.IEnumerable.GetEnumerator%2A> implementacja, która wewnętrznie <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> wywołuje metodę.</span><span class="sxs-lookup"><span data-stu-id="8f1ad-331">This is the default <xref:System.Collections.IEnumerable.GetEnumerator%2A> implementation that internally calls the <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
