<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ObjectCache.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53a3f877a2a018a9c5f39e477e544f6da9125c9cd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3a3f877a2a018a9c5f39e477e544f6da9125c9cd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Caching.ObjectCache">
          <source>Represents an object cache and provides the base methods and properties for accessing the object cache.</source>
          <target state="translated">Reprezentuje obiekt pamięci podręcznej i udostępnia właściwości i metod bazowych do uzyskiwania dostępu do pamięci podręcznej obiektów.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> type is the primary type for the in-memory object cache.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> Typ jest typem podstawowym dla obiektów w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>To develop a custom cache implementation, you derive from the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class.</source>
          <target state="translated">Aby opracować implementacji niestandardowych pamięci podręcznej, pochodzi z <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class is new as of the <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> Klasa jest nowa w <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The built-in <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> class derives from the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class.</source>
          <target state="translated">Wbudowane <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> pochodną klasy <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> class is the only concrete object cache implementation in the <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> that derives from the <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> Klasa jest implementacją pamięci podręcznej tylko konkretny obiekt w <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> która pochodzi z <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>This type is thread safe.</source>
          <target state="translated">Ten typ jest bezpieczny wątkowo.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>Because the <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> type represents only common cache functions, there is no requirement for how an <ph id="ph2">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> instance must be instantiated and obtained.</source>
          <target state="translated">Ponieważ <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> typu reprezentuje tylko typowe funkcje pamięci podręcznej, nie jest wymagane dla jak <ph id="ph2">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> wystąpienia muszą być tworzone i uzyskany.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>In addition, there is no requirement that concrete implementations of the <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> class must be singletons.</source>
          <target state="translated">Ponadto nie jest wymagane który specyficzne implementacje <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> klasy musi być pojedynczych wystąpień.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source><ph id="ph1">&lt;block subset="none" type="note"&gt;</ph><ph id="ph2">&lt;para&gt;</ph><ph id="ph3">&lt;see cref="T:System.Runtime.Caching.MemoryCache" /&gt;</ph> is not a singleton, but you should create only a few or potentially only one <ph id="ph4">&lt;see cref="T:System.Runtime.Caching.MemoryCache" /&gt;</ph> instance and code that caches items should use those instances.</source>
          <target state="translated"><ph id="ph1">&lt;block subset="none" type="note"&gt;</ph><ph id="ph2">&lt;para&gt;</ph><ph id="ph3">&lt;see cref="T:System.Runtime.Caching.MemoryCache" /&gt;</ph> nie jest klasą pojedynczą, ale należy utworzyć tylko kilka lub potencjalnie tylko <ph id="ph4">&lt;see cref="T:System.Runtime.Caching.MemoryCache" /&gt;</ph> wystąpienia i kod, który buforuje elementów należy korzystać z tych wystąpień.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> class, you must override its methods.</source>
          <target state="translated">Przy dziedziczeniu z <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> klasy, konieczne jest przesłonięcie metody.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.#ctor">
          <source>Called from constructors in derived classes in order to initialize the <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> class.</source>
          <target state="translated">Metoda wywoływana z konstruktorów w klasach pochodnych w celu zainicjowania <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Runtime.Caching.ObjectCache">
          <source>When overridden in a derived class, inserts a cache entry into the cache, without requiring that an existing cache entry with a matching key be returned.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej, wstawia wpisu pamięci podręcznej w pamięci podręcznej, bez konieczności, który zwrócony istniejący wpis pamięci podręcznej z odpowiedniego klucza.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads try to insert a cache entry into the cache, without overwriting or removing an existing cache entry that has the same key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> Przeciążenia metody próba wstawienia wpis pamięci podręcznej w pamięci podręcznej, zastępowanie lub usuwanie istniejący wpis pamięci podręcznej, która ma ten sam klucz.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The cache entry can be a typed <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> object or a generic object.</source>
          <target state="translated">Wpis pamięci podręcznej może być typu <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> obiekt lub obiekt generyczny.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads and the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads have one significant difference.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> Przeciążenia metody i <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> przeciążenia metody ma jedną istotną różnicą.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>When these methods insert a cache entry, if a matching entry is found in the cache, the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads return the existing cache entry, but the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads do not.</source>
          <target state="translated">Te metody wstawiania wpis pamięci podręcznej, jeśli pozycja znajduje się w pamięci podręcznej, <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> przeciążenia metody zwrócić istniejący wpis pamięci podręcznej, ale <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> przeciążenia metody nie.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>Having these different method overloads enables callers to optimize their code based on whether they need the existing cache entry.</source>
          <target state="translated">O tych przeciążenia metody różnych umożliwia wywoływania w celu optymalizacji ich kodu opartego na czy potrzebują istniejący wpis pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>In distributed caches, returning an existing value by using the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method might be more expensive than returning a Boolean value by using <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method.</source>
          <target state="translated">W rozproszonej pamięci podręcznej, zwracając istniejącej wartości przy użyciu <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> metoda może być droższe niż zwraca wartość logiczną przy użyciu <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>The object to add.</source>
          <target state="translated">Obiekt do dodania.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">Obiekt zawierający szczegóły wykluczenia wpisu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">Ten obiekt zawiera więcej opcji wykluczenia niż proste wygaśnięcia bezwzględne.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>When overridden in a derived class, tries to insert a cache entry into the cache as a <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> instance, and adds details about how the entry should be evicted.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej, próbuje Wstaw wpis pamięci podręcznej w pamięci podręcznej jako <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> wystąpienia i dodaje szczegółowe informacje dotyczące sposobu wykluczyć wpis.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if insertion succeeded, or <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there is an already an entry in the cache that has the same key as <ph id="ph3">&lt;paramref name="item" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli wstawiania zakończyło się pomyślnie, lub <ph id="ph2">&lt;see langword="false" /&gt;</ph> Jeśli istnieje już wpis w pamięci podręcznej, który ma tego samego klucza <ph id="ph3">&lt;paramref name="item" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads are virtual (not abstract) on the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class, because the <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method internally calls <ph id="ph4">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> Przeciążenia metody są wirtualnych (nie jako abstract) na <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> klasy, ponieważ <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> wewnętrznie wywołuje metodę <ph id="ph4">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>This reduces the number of method overloads that a cache implementer has to provide.</source>
          <target state="translated">Zmniejsza liczbę przeciążenia metody, które musi dostarczyć implementujący pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>If a cache implementation does not require any special behavior for the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method, it can just implement the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads.</source>
          <target state="translated">Implementacja pamięci podręcznej nie wymaga specjalnego zachowania w przypadku <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> metody, można po prostu implementuje ona <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> przeciążenia metody.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">Unikatowy identyfikator wpisu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The object to insert.</source>
          <target state="translated">Obiekt do wstawienia.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The fixed date and time at which the cache entry will expire.</source>
          <target state="translated">Stałe datę i godzinę wygaśnięcia wpisu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>This parameter is required when the <ph id="ph1">&lt;see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /&gt;</ph> method is called.</source>
          <target state="translated">Ten parametr jest wymagany, gdy <ph id="ph1">&lt;see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /&gt;</ph> metoda jest wywoływana.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcjonalny.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">Nazwane region w pamięci podręcznej, do której można dodać wpisu pamięci podręcznej, jeśli zostaną zaimplementowane regionów.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>Because regions are not implemented in <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, the default value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ponieważ regiony nie są zaimplementowane w <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, wartością domyślną jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>When overridden in a derived class, inserts a cache entry into the cache without overwriting any existing cache entry.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej, wstawia wpis pamięci podręcznej w pamięci podręcznej bez zastępowania żadnych istniejący wpis pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if insertion succeeded, or <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there is an already an entry in the cache that has the same key as <ph id="ph3">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli wstawiania zakończyło się pomyślnie, lub <ph id="ph2">&lt;see langword="false" /&gt;</ph> Jeśli istnieje już wpis w pamięci podręcznej, który ma tego samego klucza <ph id="ph3">&lt;paramref name="key" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads are virtual (not abstract) on the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class, because the <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method internally calls <ph id="ph4">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> Przeciążenia metody są wirtualnych (nie jako abstract) na <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> klasy, ponieważ <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> wewnętrznie wywołuje metodę <ph id="ph4">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>This reduces the number of method overloads that a cache implementer has to provide.</source>
          <target state="translated">Zmniejsza liczbę przeciążenia metody, które musi dostarczyć implementujący pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>If a cache implementation does not require any special behavior for the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method, it can just implement the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads.</source>
          <target state="translated">Implementacja pamięci podręcznej nie wymaga specjalnego zachowania w przypadku <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> metody, można po prostu implementuje ona <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> przeciążenia metody.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">Unikatowy identyfikator wpisu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The object to insert.</source>
          <target state="translated">Obiekt do wstawienia.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">Obiekt zawierający szczegóły wykluczenia wpisu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">Ten obiekt zawiera więcej opcji wykluczenia niż proste wygaśnięcia bezwzględne.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcjonalny.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">Nazwane region w pamięci podręcznej, do której można dodać wpisu pamięci podręcznej, jeśli zostaną zaimplementowane regionów.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna dla parametru opcjonalnego to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>When overridden in a derived class, inserts a cache entry into the cache, specifying information about how the entry will be evicted.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej, wstawia wpis pamięci podręcznej w pamięci podręcznej, określania informacji o jak wpis zostanie usunięty.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the insertion try succeeds, or <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there is an already an entry in the cache with the same key as <ph id="ph3">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli spróbuj wstawiania zakończy się pomyślnie, lub <ph id="ph2">&lt;see langword="false" /&gt;</ph> Jeśli istnieje już wpis w pamięci podręcznej przy użyciu tego samego klucza <ph id="ph3">&lt;paramref name="key" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads are virtual (not abstract) on the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class, because the <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method internally calls <ph id="ph4">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> Przeciążenia metody są wirtualnych (nie jako abstract) na <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> klasy, ponieważ <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> wewnętrznie wywołuje metodę <ph id="ph4">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>This reduces the number of method overloads that a cache implementer has to provide.</source>
          <target state="translated">Zmniejsza liczbę przeciążenia metody, które musi dostarczyć implementujący pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>If a cache implementation does not require any special behavior for the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method, it can just implement the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads.</source>
          <target state="translated">Implementacja pamięci podręcznej nie wymaga specjalnego zachowania w przypadku <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> metody, można po prostu implementuje ona <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> przeciążenia metody.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="T:System.Runtime.Caching.ObjectCache">
          <source>When overridden in a derived class, tries to insert a cache entry into the cache, and returns an existing cache entry with a matching key.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej, podejmuje próbę wstawienia wpis pamięci podręcznej w pamięci podręcznej i zwraca istniejący wpis pamięci podręcznej z odpowiedniego klucza.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads insert an entry into the cache.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> Przeciążenia metody insert wpis w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>If a cache entry with a matching key already exists, they return the existing entry.</source>
          <target state="translated">Jeśli wpis pamięci podręcznej z dopasowany klucz już istnieje, że oba operatory zwracają istniejący wpis.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The cache entry can be a <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> object or a generic object.</source>
          <target state="translated">Wpis pamięci podręcznej może być <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> obiekt lub obiekt generyczny.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>There is one difference between the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> overloads and the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> overloads.</source>
          <target state="translated">Istnieje jeden różnica między <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> przeciążenia i <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> przeciążenia.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>When these overloaded methods try to insert a cache entry, if an existing entry is found that has a key that matches an existing inserted cache entry, the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> overloads return the existing cache entry.</source>
          <target state="translated">Jeśli te metody przeciążane próba wstawienia wpisu pamięci podręcznej, jeśli istniejący wpis zostanie znaleziony, że ma klucz pasujący istniejące dodaje wpis pamięci podręcznej <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> przeciążenia zwracać istniejący wpis pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> overloads do not.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> Przeciążenia nie.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>The object to insert.</source>
          <target state="translated">Obiekt do wstawienia.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">Obiekt zawierający szczegóły wykluczenia wpisu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">Ten obiekt zawiera więcej opcji wykluczenia niż proste wygaśnięcia bezwzględne.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>When overridden in a derived class, inserts the specified <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> object into the cache, specifying information about how the entry will be evicted.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej, wstawia określony <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> obiektu w pamięci podręcznej, określania informacji o jak wpis zostanie usunięty.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>If a cache entry with the same key exists, the specified cache entry; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Jeśli istnieje wpis pamięci podręcznej z tym samym kluczem, wpis pamięci podręcznej określony; w przeciwnym razie <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">Unikatowy identyfikator wpisu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The object to insert.</source>
          <target state="translated">Obiekt do wstawienia.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The fixed date and time at which the cache entry will expire.</source>
          <target state="translated">Stałe datę i godzinę wygaśnięcia wpisu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcjonalny.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">Nazwane region w pamięci podręcznej, do której można dodać wpisu pamięci podręcznej, jeśli zostaną zaimplementowane regionów.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna dla parametru opcjonalnego to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>When overridden in a derived class, inserts a cache entry into the cache, by using a key, an object for the cache entry, an absolute expiration value, and an optional region to add the cache into.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej, wstawia wpis pamięci podręcznej w pamięci podręcznej, za pomocą klucza, obiekt do wpisu pamięci podręcznej, wartość bezwzględna wygaśnięcia i region opcjonalny do dodania do pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>If a cache entry with the same key exists, the specified cache entry's value; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Jeśli istnieje wpis pamięci podręcznej z tym samym kluczem, wpis pamięci podręcznej określonej wartości. w przeciwnym razie <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>This <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt;</ph> method overload returns an object value, not a <ph id="ph2">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> object.</source>
          <target state="translated">To <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt;</ph> przeciążenie metody nie zwraca wartości obiektu <ph id="ph2">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">Unikatowy identyfikator wpisu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The object to insert.</source>
          <target state="translated">Obiekt do wstawienia.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">Obiekt zawierający szczegóły wykluczenia wpisu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">Ten obiekt zawiera więcej opcji wykluczenia niż proste wygaśnięcia bezwzględne.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcjonalny.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">Nazwane region w pamięci podręcznej, do której można dodać wpisu pamięci podręcznej, jeśli zostaną zaimplementowane regionów.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna dla parametru opcjonalnego to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>When overridden in a derived class, inserts a cache entry into the cache, specifying a key and a value for the cache entry, and information about how the entry will be evicted.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej, wstawia wpis pamięci podręcznej w pamięci podręcznej, określając klucza i wartość dla wpisu pamięci podręcznej i dowiedzieć się, jak wpis zostanie usunięty.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>If a cache entry with the same key exists, the specified cache entry's value; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Jeśli istnieje wpis pamięci podręcznej z tym samym kluczem, wpis pamięci podręcznej określonej wartości. w przeciwnym razie <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29&gt;</ph> method returns an object value, not a <ph id="ph2">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29&gt;</ph> Metoda zwraca wartość obiektu nie <ph id="ph2">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">Unikatowy identyfikator wpisu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcjonalny.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)">
          <source>A named region in the cache where the cache can be found, if regions are implemented.</source>
          <target state="translated">Nazwane region w pamięci podręcznej, w których pamięci podręcznej można znaleźć, jeśli zostaną zaimplementowane regionów.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna dla parametru opcjonalnego to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)">
          <source>When overridden in a derived class, checks whether the cache entry already exists in the cache.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej, sprawdza, czy istnieje już wpis pamięci podręcznej w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the cache contains a cache entry with the same key value as <ph id="ph2">&lt;paramref name="key" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli pamięć podręczna zawiera wpis pamięci podręcznej o tej samej wartości klucza jako <ph id="ph2">&lt;paramref name="key" /&gt;</ph>; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>The unique identifiers for cache entries to monitor.</source>
          <target state="translated">Unikatowe identyfikatory wpisów pamięci podręcznej do monitorowania.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>Optional.</source>
          <target state="translated">Opcjonalny.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>A named region in the cache where the cache keys in the <bpt id="p1">&lt;c&gt;</bpt>keys<ept id="p1">&lt;/c&gt;</ept> parameter exist, if regions are implemented.</source>
          <target state="translated">Nazwane region, w której klucze pamięci podręcznej w pamięci podręcznej <bpt id="p1">&lt;c&gt;</bpt>klucze<ept id="p1">&lt;/c&gt;</ept> parametr istnieje, jeśli zostaną zaimplementowane regionów.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna dla parametru opcjonalnego to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>When overridden in a derived class, creates a <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /&gt;</ph> object that can trigger events in response to changes to specified cache entries.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej tworzy <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /&gt;</ph> obiektów, które mogą wyzwalać zdarzenia w odpowiedzi na zmiany we określone wpisy w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>A change monitor that monitors cache entries in the cache.</source>
          <target state="translated">Monitor zmian, który monitoruje wpisy w pamięci podręcznej w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>When a derived <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class overrides the base <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A&gt;</ph> method, the cache implementation must create a <ph id="ph3">&lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;</ph> object.</source>
          <target state="translated">Gdy pochodnego <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> klasa zastępuje podstawowym <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A&gt;</ph> metody, należy utworzyć implementację buforu <ph id="ph3">&lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>This specialized change monitor notifies callers when there are changes to the cache entries that are specified in the <ph id="ph1">`keys`</ph> parameter.</source>
          <target state="translated">Ten monitor specjalne zmiany powiadamia wywołań w przypadku zmiany wpisy w pamięci podręcznej, które są określone w <ph id="ph1">`keys`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>For example, if a monitored item in the <ph id="ph1">`keys`</ph> parameter is updated or removed from the cache, the change monitor created by this method triggers an event.</source>
          <target state="translated">Na przykład, jeśli element monitorowanych w <ph id="ph1">`keys`</ph> parametr jest zaktualizowane lub usunięte z pamięci podręcznej, monitor zmiany utworzone przez tę metodę wyzwala zdarzenie.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>If a cache implementation supports named cache regions, a string value can be specified as the <ph id="ph1">`regionName`</ph> parameter.</source>
          <target state="translated">Jeśli implementację buforu obsługuje regionów nazwanego pamięci podręcznej, wartość ciągu można określić jako <ph id="ph1">`regionName`</ph> parametru.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>Otherwise, the parameter defaults to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">W przeciwnym razie jest domyślnie <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>Not all cache implementations support cache-entry change monitors.</source>
          <target state="translated">Nie wszystkie implementacje pamięci podręcznej obsługuje monitorów zmiana wpisu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>To determine whether your cache implementation supports <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;</ph> objects, see the documentation for the specific cache implementation.</source>
          <target state="translated">Aby sprawdzić, czy obsługuje implementacji pamięci podręcznej <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;</ph> obiektów, zobacz dokumentację do wykonania określonych pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities">
          <source>When overridden in a derived class, gets a description of the features that a cache implementation provides.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej pobiera opis funkcji, które zawiera implementację buforu.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities">
          <source>A bitwise combination of flags that indicate the default capabilities of a cache implementation.</source>
          <target state="translated">Bitowe połączenie flag, które wskazują możliwości domyślną implementację buforu.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)">
          <source>A unique identifier for the cache entry to get.</source>
          <target state="translated">Unikatowy identyfikator dla wpisu pamięci podręcznej do pobrania.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcjonalny.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)">
          <source>A named region in the cache to which the cache entry was added, if regions are implemented.</source>
          <target state="translated">Nazwane region w pamięci podręcznej, do którego został dodany wpisu pamięci podręcznej, jeśli zostaną zaimplementowane regionów.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna dla parametru opcjonalnego to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)">
          <source>When overridden in a derived class, gets the specified cache entry from the cache as an object.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej pobiera wpisu określony pamięci podręcznej z pamięci podręcznej jako obiekt.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)">
          <source>The cache entry that is identified by <ph id="ph1">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated">Wpis pamięci podręcznej, który jest identyfikowany przez <ph id="ph1">&lt;paramref name="key" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>A unique identifier for the cache entry to get.</source>
          <target state="translated">Unikatowy identyfikator dla wpisu pamięci podręcznej do pobrania.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcjonalny.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>A named region in the cache to which the cache was added, if regions are implemented.</source>
          <target state="translated">Nazwane region w pamięci podręcznej, do którego został dodany pamięci podręcznej, jeśli zostaną zaimplementowane regionów.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>Because regions are not implemented in <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, the default is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ponieważ regiony nie są zaimplementowane w <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, wartość domyślna to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>When overridden in a derived class, gets the specified cache entry from the cache as a <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> instance.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej pobiera wpisu określony pamięci podręcznej z pamięci podręcznej jako <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>The cache entry that is identified by <ph id="ph1">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated">Wpis pamięci podręcznej, który jest identyfikowany przez <ph id="ph1">&lt;paramref name="key" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>This method overload exists because some cache implementations might extend the <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> class.</source>
          <target state="translated">Przeciążenie tej metody nie istnieje, ponieważ niektóre implementacje pamięci podręcznej może wydłużyć <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;</ph> method overload will not necessarily return all the information about cached data.</source>
          <target state="translated">W takim przypadku <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;</ph> przeciążenie metody nie będzie zawsze zwracać wszystkie informacje o danych z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>However, the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> method overload enables custom caches to return more than just the cache value.</source>
          <target state="translated">Jednak <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> przeciążenie metody Włącza niestandardowe pamięci podręcznej otrzymać więcej niż wartość pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> method is like the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;</ph> method, except that the <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> method returns return the cache entry as a <ph id="ph4">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> Metody przypomina <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;</ph> metody, z wyjątkiem <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> metoda zwraca zwracanego wpisu pamięci podręcznej jako <ph id="ph4">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)">
          <source>Optional.</source>
          <target state="translated">Opcjonalny.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)">
          <source>A named region in the cache for which the cache entry count should be computed, if regions are implemented.</source>
          <target state="translated">Nazwane region w pamięci podręcznej, dla którego liczba wpisu pamięci podręcznej powinien zostać obliczony, jeśli zostaną zaimplementowane regionów.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna dla parametru opcjonalnego to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)">
          <source>When overridden in a derived class, gets the total number of cache entries in the cache.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej pobiera całkowita liczba wpisów pamięci podręcznej w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)">
          <source>The number of cache entries in the cache.</source>
          <target state="translated">Liczba wpisów w pamięci podręcznej w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)">
          <source>If <ph id="ph1">&lt;paramref name="regionName" /&gt;</ph> is not <ph id="ph2">&lt;see langword="null" /&gt;</ph>, the count indicates the number of entries that are in the specified cache region.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;paramref name="regionName" /&gt;</ph> nie jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>, licznik wskazuje liczbę wpisów, które znajdują się w pamięci podręcznej określonego regionu.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetEnumerator">
          <source>When overridden in a derived class, creates an enumerator that can be used to iterate through a collection of cache entries.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej tworzy moduł wyliczający, który może służyć do iterowania po kolekcji wpisów pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetEnumerator">
          <source>The enumerator object that provides access to the cache entries in the cache.</source>
          <target state="translated">Obiekt moduł wyliczający, który zapewnia dostęp do wpisów pamięci podręcznej w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetEnumerator">
          <source>Cache implementers can override and extend this method to provide a custom means of iterating through a collection of cache entries.</source>
          <target state="translated">Implementacje pamięci podręcznej można zastąpić i rozszerzenie tej metody, aby zapewnić niestandardowych środka iteracji w kolekcji wpisów pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetEnumerator">
          <source>Returning an enumerator is typically a more expensive operation than returning the entire cache entry.</source>
          <target state="translated">Zwraca moduł wyliczający jest zazwyczaj operacją droższe niż powrót całą pamięć podręczną zapisu.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetEnumerator">
          <source>This method is called by the explicit interface implementations that the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class has for the <ph id="ph2">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> methods.</source>
          <target state="translated">Ta metoda jest wywoływana przez implementacje interfejsu jawnego który <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> klasa ma dla <ph id="ph2">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> i <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="T:System.Runtime.Caching.ObjectCache">
          <source>Gets a set of cache entries.</source>
          <target state="translated">Pobiera zestaw wpisów pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>A collection of unique identifiers for the cache entries to get.</source>
          <target state="translated">Kolekcja unikatowych identyfikatorów dla wpisów pamięci podręcznej do pobrania.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>Optional.</source>
          <target state="translated">Opcjonalny.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>A named region in the cache to which the cache entry or entries were added, if regions are implemented.</source>
          <target state="translated">Nazwane region w pamięci podręcznej, do którego wpisu pamięci podręcznej lub wpisy zostały dodane, jeśli zostaną zaimplementowane regionów.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna dla parametru opcjonalnego to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>When overridden in a derived class, gets a set of cache entries that correspond to the specified keys.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej pobiera zbiór wpisy w pamięci podręcznej, które odpowiadają na określone klucze.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>A dictionary of key/value pairs that represent cache entries.</source>
          <target state="translated">Słownik zawierający pary klucz wartość, które reprezentują wpisy w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> method overload is a performance optimization for distributed caches that support fetching multiple cache entries from the cache during a single network call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> Optymalizację wydajności dla rozproszonej pamięci podręcznej, które obsługuje pobierania wiele wpisów pamięci podręcznej z pamięci podręcznej podczas wywoływania jednej sieci jest przeciążenie metody.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>Although a caller can pass one or more keys to the method, there is no guarantee that all keys represent entries in the cache.</source>
          <target state="translated">Mimo że obiekt wywołujący może przekazać przynajmniej jednego klucza do metody, brak żadnej gwarancji, że wszystkie klucze reprezentują wpisów w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>Therefore, the returned dictionary might contain fewer items than the number of keys that were passed to the method.</source>
          <target state="translated">W związku z tym zwrócony słownika może zawierać mniej niż liczba kluczy, które zostały przekazane do metody.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>Optional.</source>
          <target state="translated">Opcjonalny.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>A named region in the cache to which the cache entry or entries were added, if regions are implemented.</source>
          <target state="translated">Nazwane region w pamięci podręcznej, do którego wpisu pamięci podręcznej lub wpisy zostały dodane, jeśli zostaną zaimplementowane regionów.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>Because regions are not implemented in <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, the default is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ponieważ regiony nie są zaimplementowane w <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, wartość domyślna to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>A collection of unique identifiers for the cache entries to get.</source>
          <target state="translated">Kolekcja unikatowych identyfikatorów dla wpisów pamięci podręcznej do pobrania.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>Gets a set of cache entries that correspond to the specified keys.</source>
          <target state="translated">Pobiera zestaw wpisy w pamięci podręcznej, które odpowiadają na określone klucze.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>A dictionary of key/value pairs that represent cache entries.</source>
          <target state="translated">Słownik zawierający pary klucz wartość, które reprezentują wpisy w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType&gt;</ph> method overload is like the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> method overload, but lets you pass the named region by using optional parameter syntax that is supported by managed languages such as C#.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType&gt;</ph> Przeciążenie metody przypomina <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> przeciążenie metody, ale pozwala przekazać nazwanego region przy użyciu składni opcjonalny parametr, który jest obsługiwany przez zarządzane języków, takich jak C#.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>This method is a virtual method because the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class provides a default implementation that passes the <ph id="ph2">`params`</ph> array to the <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> method overload.</source>
          <target state="translated">Ta metoda jest metodą wirtualną, ponieważ <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> klasa udostępnia domyślną implementację, która przekazuje <ph id="ph2">`params`</ph> tablicy do <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> przeciążenie metody.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Gets or set a reference to a managed hosting environment that is available to <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> implementations and that can provide host-specific services to <ph id="ph2">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> implementations.</source>
          <target state="translated">Pobiera lub ustaw odwołanie do zarządzanego środowiska hostingu, która jest dostępna dla <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> implementacji, które zapewniają usługi specyficzne dla hosta, aby <ph id="ph2">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> implementacji.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>A reference to a cache-aware managed hosting environment.</source>
          <target state="translated">Odwołanie do pamięci podręcznej obsługujący zarządzanego środowiska hostingu.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt;</ph> property is intended for use by <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> host environments and by cache implementations that implement behavior that depends on the .NET Framework host environment.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt;</ph> Właściwości jest przeznaczony do użytku przez <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> środowiska, a przez implementacje pamięci podręcznej, które implementuje zachowanie, która jest zależna od programu .NET Framework środowisko.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>The following table lists the set of host environment services that might be available from a managed hosting environment and that are available to <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> implementations through the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt;</ph> property:</source>
          <target state="translated">Poniższa lista zawiera zbiór usług środowiska hosta, co może być dostępny w środowisku macierzystym zarządzane i które są dostępne do <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> implementacje za pośrednictwem <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt;</ph> właściwości:</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Service</source>
          <target state="translated">Usługa</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Description</source>
          <target state="translated">Opis</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Lets host environments provide application domain identifiers that might be needed by a cache implementation for features such as identifying performance counters.</source>
          <target state="translated">Umożliwia Podaj identyfikatory domeny aplikacji, które mogą być wymagane przez implementację buforu, funkcji, takich jak identyfikujący liczniki wydajności środowiska hosta.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Lets host environments provide a custom file-change notification system, instead of using the one provided in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">Umożliwia zapewniają niestandardowe zmianę pliku system powiadomień, zamiast przy użyciu jednej w środowiskach hosta <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Lets cache implementations report cache memory consumption to the host environment.</source>
          <target state="translated">Umożliwia zmniejszenie zużycia pamięci pamięci podręcznej raportu implementacje pamięci podręcznej w środowisku hosta.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>This enables host environments to centrally manage memory consumption across multiple cache implementations.</source>
          <target state="translated">Umożliwia to centralne zarządzanie użycie pamięci przez wiele implementacji pamięci podręcznej środowiska hosta.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Callers of this property value require unrestricted code access security permissions.</source>
          <target state="translated">Wywołań wartość tej właściwości wymagane uprawnienia zabezpieczeń dostępu kodu bez ograniczeń.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>The value being assigned to the property is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość przypisywane do właściwości jest <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>An attempt was made to set the property value more than one time.</source>
          <target state="translated">Próbowano ustawić wartość właściwości więcej niż jeden raz.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>for full trust for all accessors of this property.</source>
          <target state="translated">Aby uzyskać pełne zaufanie wszystkie metody dostępu tej właściwości.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>This property cannot be used by partially trusted code.</source>
          <target state="translated">Tej właściwości nie można użyć przez kod częściowo zaufany.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration">
          <source>Gets a value that indicates that a cache entry has no absolute expiration.</source>
          <target state="translated">Pobiera wartość wskazującą, czy wpis pamięci podręcznej nie ma żadnych wygaśnięcia bezwzględne.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration">
          <source>A cache entry that is inserted into the cache with the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;</ph> field value set as the expiration value should never expire based on an absolute point in time.</source>
          <target state="translated">Wpis pamięci podręcznej, który znajduje się w pamięci podręcznej <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;</ph> pole ma wartość jako wartość wygaśnięcia nigdy nie wygaśnie oparte na bezwzględne punktu w czasie.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration">
          <source>However, a cache entry with this setting can be evicted from the cache for other reasons that are determined by a particular cache implementation, such as a change-monitor event eviction caused by memory pressure.</source>
          <target state="translated">Wpis pamięci podręcznej tego ustawienia może jednak wykluczony z pamięci podręcznej z innych przyczyn, które są określone przez implementację określonego pamięci podręcznej, na przykład monitor zmianach wykluczenia zdarzeń, spowodowane wykorzystania pamięci.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>A unique identifier for a cache entry in the cache.</source>
          <target state="translated">Unikatowy identyfikator dla wpisu pamięci podręcznej w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>Gets or sets the default indexer for the <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> class.</source>
          <target state="translated">Pobiera lub ustawia indeksatora domyślny dla <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>A key that serves as an indexer into the cache instance.</source>
          <target state="translated">Klucz, który służy jako indeksatora do wystąpienia pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>The behavior of the set accessor of this property is like the <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt;</ph> method.</source>
          <target state="translated">Przypomina zachowanie metody dostępu set tej właściwości <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>Internally, a cache implementation could set the absolute expiration of the specified value to the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;</ph> method.</source>
          <target state="translated">Wewnętrznie implementację buforu można ustawić czas wygaśnięcia bezwzględne określoną wartość na <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>However this behavior is ultimately up to the cache implementation.</source>
          <target state="translated">Jednak to zachowanie jest ostatecznie do implementacji pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>The behavior of get accessor is like calling the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29&gt;</ph> method and using <ph id="ph2">`null`</ph> for the region name.</source>
          <target state="translated">Metody dostępu get jest takie jak wywołania <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29&gt;</ph> — metoda i przy użyciu <ph id="ph2">`null`</ph> nazwę regionu.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.Name">
          <source>Gets the name of a specific <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> instance.</source>
          <target state="translated">Pobiera nazwę określonego <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Name">
          <source>The name of a specific cache instance.</source>
          <target state="translated">Nazwa wystąpienia określonego pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Name">
          <source>Some cache implementations might support multiple instances of the cache that is running in a single application.</source>
          <target state="translated">Niektóre implementacje pamięci podręcznej może obsługiwać wiele wystąpień w pamięci podręcznej działającej w pojedynczej aplikacji.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Name">
          <source>This property lets cache implementers return a name that identifies a specific cache instance.</source>
          <target state="translated">Ta właściwość umożliwia zwraca nazwę identyfikującą wystąpienie pamięci podręcznej określonych implementacje pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration">
          <source>Indicates that a cache entry has no sliding expiration time.</source>
          <target state="translated">Wskazuje, czy wpis pamięci podręcznej nie ma żadnych przesuwanego czas wygaśnięcia.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration">
          <source>Expiration that is based on duration or a defined window of time is also referred to as sliding expiration.</source>
          <target state="translated">Wygaśnięcia opartego na czas trwania lub zdefiniowanych przedziale czasu jest również nazywany przedłużanie ważności.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration">
          <source>Normally, a cache implementation that evicts items that are based on sliding expiration will remove an item that has not been accessed in the specified window of time.</source>
          <target state="translated">Zwykle implementację buforu, który wyklucza mogą elementy, które są oparte na przedłużanie ważności spowoduje usunięcie elementu, który nie była używana w określonym przedziale czasu.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration">
          <source>A cache entry that is inserted into the cache with the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration&gt;</ph> field value set as the expiration value should never be evicted because of non-activity in a sliding time window.</source>
          <target state="translated">Wpis pamięci podręcznej, który znajduje się w pamięci podręcznej <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration&gt;</ph> pola wartość ustawiona jako wartość wygaśnięcia nigdy nie wykluczyć z powodu innej niż działania w metodzie przesuwanego okna czasu.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration">
          <source>However, a cache item can be evicted if it has an absolute expiration, or if some other eviction event occurs, such a change monitor or memory pressure.</source>
          <target state="translated">Jednak element pamięci podręcznej może zostać wykluczony, jeśli ma ona wygaśnięcia bezwzględne lub inne zdarzenia wykluczenia występuje takie zmiany monitora lub pamięci wykorzystania.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">Unikatowy identyfikator wpisu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcjonalny.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>A named region in the cache to which the cache entry was added, if regions are implemented.</source>
          <target state="translated">Nazwane region w pamięci podręcznej, do którego został dodany wpisu pamięci podręcznej, jeśli zostaną zaimplementowane regionów.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna dla parametru opcjonalnego to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>When overridden in a derived class, removes the cache entry from the cache.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej usuwa wpis pamięci podręcznej z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>An object that represents the value of the removed cache entry that was specified by the key, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the specified entry was not found.</source>
          <target state="translated">Obiekt reprezentujący wartość wpisu pamięci podręcznej usunięty, która została określona za pomocą klucza lub <ph id="ph1">&lt;see langword="null" /&gt;</ph> , jeśli nie można odnaleźć określonego wpisu.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>If you override this method in a custom cache implementation, if there is a cache entry in the cache that corresponds to <ph id="ph1">`key`</ph>, the value of the removed item should be returned.</source>
          <target state="translated">Jeśli przesłonić tę metodę w implementacji niestandardowych pamięci podręcznej, jeśli istnieje wpis pamięci podręcznej w pamięci podręcznej, która odpowiada <ph id="ph1">`key`</ph>, powinna zostać zwrócona wartość z usuniętym elementem.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>If nothing was removed from the cache, the method should return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Jeśli nic nie został usunięty z pamięci podręcznej, metoda powinna zwrócić <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>Some distributed cache implementations might not support the ability to return the value that was removed from the cache.</source>
          <target state="translated">Niektóre implementacje rozproszonej pamięci podręcznej może nie obsługiwać możliwość zwracania wartości, który został usunięty z pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>This might be because the cache implementation does not support returning the value of a removed cache item.</source>
          <target state="translated">Może to być spowodowane implementację buforu nie obsługuje zwracania wartości elementów usuniętych pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>It might also be because marshaling the object as a return value is too expensive.</source>
          <target state="translated">Być może przekazywanie obiektu jako zwracana wartość jest zbyt drogie.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>In such cases, cache implementations can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">W takich przypadkach może zwrócić implementacje pamięci podręcznej <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="T:System.Runtime.Caching.ObjectCache">
          <source>When overridden in a derived class, inserts a cache entry into the cache.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej, wstawia wpis pamięci podręcznej w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The typical behavior of the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Set%2A&gt;</ph> overload methods is an insert-or-update operation.</source>
          <target state="translated">Typowe zachowanie <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Set%2A&gt;</ph> przeciążenia metody jest operacją insert lub update.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>A cache entry is either inserted as a new entry if the specified entry does not exist, or the cache entry is updated with a new value if it already exists.</source>
          <target state="translated">Wpis pamięci podręcznej jest albo wstawiony jako nowy wpis, jeśli określony wpis nie istnieje lub wpisu pamięci podręcznej jest zaktualizowane przy użyciu nowej wartości, jeśli już istnieje.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>The cache item to add.</source>
          <target state="translated">Aby dodać element pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">Obiekt zawierający szczegóły wykluczenia wpisu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">Ten obiekt zawiera więcej opcji wykluczenia niż proste wygaśnięcia bezwzględne.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>When overridden in a derived class, inserts the cache entry into the cache as a <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> instance, specifying information about how the entry will be evicted.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej, wstawia wpisu pamięci podręcznej w pamięci podręcznej jako <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> wystąpienia, określania informacji o jak wpis zostanie usunięty.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>If the key for <ph id="ph1">`item`</ph> does not exist, <ph id="ph2">`item`</ph> is inserted as a new cache entry.</source>
          <target state="translated">Jeśli klucz <ph id="ph1">`item`</ph> nie istnieje, <ph id="ph2">`item`</ph> są wstawiane jako nowy wpis pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>If an item with a key that matches <ph id="ph1">`item`</ph> exists, the value from <ph id="ph2">`item`</ph> is used to update or overwrite the value of the existing cache entry.</source>
          <target state="translated">Jeśli element z kluczem takim samym <ph id="ph1">`item`</ph> istnieje wartość <ph id="ph2">`item`</ph> służy do aktualizacji lub zastąpić wartość istniejący wpis pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">Unikatowy identyfikator wpisu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The object to insert.</source>
          <target state="translated">Obiekt do wstawienia.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The fixed date and time at which the cache entry will expire.</source>
          <target state="translated">Stałe datę i godzinę wygaśnięcia wpisu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcjonalny.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">Nazwane region w pamięci podręcznej, do której można dodać wpisu pamięci podręcznej, jeśli zostaną zaimplementowane regionów.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna dla parametru opcjonalnego to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>When overridden in a derived class, inserts a cache entry into the cache, specifying time-based expiration details.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej, wstawia wpis pamięci podręcznej w pamięci podręcznej, określając szczegóły na podstawie czasu wygaśnięcia.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>If an item that matches <ph id="ph1">`key`</ph> does not exist in the cache, <ph id="ph2">`value`</ph> and <ph id="ph3">`key`</ph> are used to insert as a new cache entry.</source>
          <target state="translated">Jeśli element odpowiadający <ph id="ph1">`key`</ph> nie istnieje w pamięci podręcznej, <ph id="ph2">`value`</ph> i <ph id="ph3">`key`</ph> są używane do wstawiania jako nowy wpis pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>If an item with a key that matches <ph id="ph1">`item`</ph> exists, the cache entry is updated or overwritten by using <ph id="ph2">`value`</ph>.</source>
          <target state="translated">Jeśli element z kluczem takim samym <ph id="ph1">`item`</ph> istnieje, aktualizacji lub zastąpić, przy użyciu wpisu pamięci podręcznej <ph id="ph2">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">Unikatowy identyfikator wpisu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The object to insert.</source>
          <target state="translated">Obiekt do wstawienia.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">Obiekt zawierający szczegóły wykluczenia wpisu pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">Ten obiekt zawiera więcej opcji wykluczenia niż proste wygaśnięcia bezwzględne.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>Optional.</source>
          <target state="translated">Opcjonalny.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">Nazwane region w pamięci podręcznej, do której można dodać wpisu pamięci podręcznej, jeśli zostaną zaimplementowane regionów.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna dla parametru opcjonalnego to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>When overridden in a derived class, inserts a cache entry into the cache.</source>
          <target state="translated">W przypadku przesłonięcia w klasie pochodnej, wstawia wpis pamięci podręcznej w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>This method overload lets you provide more eviction or expiration details than those that are available in time-based absolute expiration.</source>
          <target state="translated">To przeciążenie metody umożliwia bardziej szczegółowe wykluczenia i wygaśnięcia niż te, które są dostępne w na podstawie czasu wygaśnięcia bezwzględne.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>If an item that matches <ph id="ph1">`key`</ph> does not exist in the cache, <ph id="ph2">`value`</ph> and <ph id="ph3">`key`</ph> are used to insert as a new cache entry.</source>
          <target state="translated">Jeśli element odpowiadający <ph id="ph1">`key`</ph> nie istnieje w pamięci podręcznej, <ph id="ph2">`value`</ph> i <ph id="ph3">`key`</ph> są używane do wstawiania jako nowy wpis pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>If an item with a key that matches <ph id="ph1">`item`</ph> exists, the cache entry is updated or overwritten by using <ph id="ph2">`value`</ph>.</source>
          <target state="translated">Jeśli element z kluczem takim samym <ph id="ph1">`item`</ph> istnieje, aktualizacji lub zastąpić, przy użyciu wpisu pamięci podręcznej <ph id="ph2">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator">
          <source>Supports iteration over a generic collection.</source>
          <target state="translated">Obsługuje iteracji przez kolekcję ogólną.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator object that provides access to the items in the cache.</source>
          <target state="translated">Obiekt moduł wyliczający, który zapewnia dostęp do elementów w pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Ten element jest jawną implementacją członków.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when a derived <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">Można użyć tylko wtedy, gdy pochodnego <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> wystąpienia jest rzutowane na <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator">
          <source>Developers can use this method to iterate through a generic collection of cache entries.</source>
          <target state="translated">Deweloperzy mogą używać tej metody do iteracji ogólnych kolekcji wpisów pamięci podręcznej.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator">
          <source>This is the default <ph id="ph1">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> implementation that internally calls the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">Jest to domyślny <ph id="ph1">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> implementację, która wywołuje wewnętrznie <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A&gt;</ph> metody.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>