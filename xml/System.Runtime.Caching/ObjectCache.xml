<Type Name="ObjectCache" FullName="System.Runtime.Caching.ObjectCache">
  <TypeSignature Language="C#" Value="public abstract class ObjectCache : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectCache extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.ObjectCache" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectCache&#xA;Implements IEnumerable(Of KeyValuePair(Of String, Object))" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectCache abstract : System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1652e-101">Reprezentuje obiekt pamięci podręcznej i udostępnia właściwości i metod bazowych do uzyskiwania dostępu do pamięci podręcznej obiektów.</span><span class="sxs-lookup"><span data-stu-id="1652e-101">Represents an object cache and provides the base methods and properties for accessing the object cache.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-102"><xref:System.Runtime.Caching.ObjectCache> Typ jest typem podstawowym dla obiektów w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-102">The <xref:System.Runtime.Caching.ObjectCache> type is the primary type for the in-memory object cache.</span></span> <span data-ttu-id="1652e-103">Aby opracować implementacji niestandardowych pamięci podręcznej, pochodzi z <xref:System.Runtime.Caching.ObjectCache> klasy.</span><span class="sxs-lookup"><span data-stu-id="1652e-103">To develop a custom cache implementation, you derive from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1652e-104"><xref:System.Runtime.Caching.ObjectCache> Klasa jest nowa w [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span><span class="sxs-lookup"><span data-stu-id="1652e-104">The <xref:System.Runtime.Caching.ObjectCache> class is new as of the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span>  
  
 <span data-ttu-id="1652e-105">Wbudowane <xref:System.Runtime.Caching.MemoryCache> pochodną klasy <xref:System.Runtime.Caching.ObjectCache> klasy.</span><span class="sxs-lookup"><span data-stu-id="1652e-105">The built-in <xref:System.Runtime.Caching.MemoryCache> class derives from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span> <span data-ttu-id="1652e-106"><xref:System.Runtime.Caching.MemoryCache> Klasa jest implementacją pamięci podręcznej tylko konkretny obiekt w [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] która pochodzi z <xref:System.Runtime.Caching.ObjectCache> klasy.</span><span class="sxs-lookup"><span data-stu-id="1652e-106">The <xref:System.Runtime.Caching.MemoryCache> class is the only concrete object cache implementation in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] that derives from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="1652e-107">Ten typ jest bezpieczny wątkowo.</span><span class="sxs-lookup"><span data-stu-id="1652e-107">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="1652e-108">Ponieważ <see cref="T:System.Runtime.Caching.ObjectCache" /> typu reprezentuje tylko typowe funkcje pamięci podręcznej, nie jest wymagane dla jak <see cref="T:System.Runtime.Caching.ObjectCache" /> wystąpienia muszą być tworzone i uzyskany.</span><span class="sxs-lookup"><span data-stu-id="1652e-108">Because the <see cref="T:System.Runtime.Caching.ObjectCache" /> type represents only common cache functions, there is no requirement for how an <see cref="T:System.Runtime.Caching.ObjectCache" /> instance must be instantiated and obtained.</span></span> <span data-ttu-id="1652e-109">Ponadto nie jest wymagane który specyficzne implementacje <see cref="T:System.Runtime.Caching.ObjectCache" /> klasy musi być pojedynczych wystąpień.</span><span class="sxs-lookup"><span data-stu-id="1652e-109">In addition, there is no requirement that concrete implementations of the <see cref="T:System.Runtime.Caching.ObjectCache" /> class must be singletons.</span></span>  
  
 <span data-ttu-id="1652e-110"><block subset="none" type="note"><para><see cref="T:System.Runtime.Caching.MemoryCache" /> nie jest klasą pojedynczą, ale należy utworzyć tylko kilka lub potencjalnie tylko <see cref="T:System.Runtime.Caching.MemoryCache" /> wystąpienia i kod, który buforuje elementów należy korzystać z tych wystąpień.</span><span class="sxs-lookup"><span data-stu-id="1652e-110"><block subset="none" type="note"><para><see cref="T:System.Runtime.Caching.MemoryCache" /> is not a singleton, but you should create only a few or potentially only one <see cref="T:System.Runtime.Caching.MemoryCache" /> instance and code that caches items should use those instances.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="1652e-111">Przy dziedziczeniu z <see cref="T:System.Runtime.Caching.ObjectCache" /> klasy, konieczne jest przesłonięcie metody.</span><span class="sxs-lookup"><span data-stu-id="1652e-111">When you inherit from the <see cref="T:System.Runtime.Caching.ObjectCache" /> class, you must override its methods.</span></span></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectCache ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1652e-112">Metoda wywoływana z konstruktorów w klasach pochodnych w celu zainicjowania <see cref="T:System.Runtime.Caching.ObjectCache" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="1652e-112">Called from constructors in derived classes in order to initialize the <see cref="T:System.Runtime.Caching.ObjectCache" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1652e-113">W przypadku przesłonięcia w klasie pochodnej, wstawia wpisu pamięci podręcznej w pamięci podręcznej, bez konieczności, który zwrócony istniejący wpis pamięci podręcznej z odpowiedniego klucza.</span><span class="sxs-lookup"><span data-stu-id="1652e-113">When overridden in a derived class, inserts a cache entry into the cache, without requiring that an existing cache entry with a matching key be returned.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-114"><xref:System.Runtime.Caching.ObjectCache.Add%2A> Przeciążenia metody próba wstawienia wpis pamięci podręcznej w pamięci podręcznej, zastępowanie lub usuwanie istniejący wpis pamięci podręcznej, która ma ten sam klucz.</span><span class="sxs-lookup"><span data-stu-id="1652e-114">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads try to insert a cache entry into the cache, without overwriting or removing an existing cache entry that has the same key.</span></span> <span data-ttu-id="1652e-115">Wpis pamięci podręcznej może być typu <xref:System.Runtime.Caching.CacheItem> obiekt lub obiekt generyczny.</span><span class="sxs-lookup"><span data-stu-id="1652e-115">The cache entry can be a typed <xref:System.Runtime.Caching.CacheItem> object or a generic object.</span></span>  
  
 <span data-ttu-id="1652e-116"><xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> Przeciążenia metody i <xref:System.Runtime.Caching.ObjectCache.Add%2A> przeciążenia metody ma jedną istotną różnicą.</span><span class="sxs-lookup"><span data-stu-id="1652e-116">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads and the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads have one significant difference.</span></span> <span data-ttu-id="1652e-117">Te metody wstawiania wpis pamięci podręcznej, jeśli pozycja znajduje się w pamięci podręcznej, <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> przeciążenia metody zwrócić istniejący wpis pamięci podręcznej, ale <xref:System.Runtime.Caching.ObjectCache.Add%2A> przeciążenia metody nie.</span><span class="sxs-lookup"><span data-stu-id="1652e-117">When these methods insert a cache entry, if a matching entry is found in the cache, the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads return the existing cache entry, but the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads do not.</span></span> <span data-ttu-id="1652e-118">O tych przeciążenia metody różnych umożliwia wywoływania w celu optymalizacji ich kodu opartego na czy potrzebują istniejący wpis pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-118">Having these different method overloads enables callers to optimize their code based on whether they need the existing cache entry.</span></span> <span data-ttu-id="1652e-119">W rozproszonej pamięci podręcznej, zwracając istniejącej wartości przy użyciu <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> metoda może być droższe niż zwraca wartość logiczną przy użyciu <xref:System.Runtime.Caching.ObjectCache.Add%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1652e-119">In distributed caches, returning an existing value by using the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method might be more expensive than returning a Boolean value by using <xref:System.Runtime.Caching.ObjectCache.Add%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (item As CacheItem, policy As CacheItemPolicy) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Add(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1652e-120">Obiekt do dodania.</span><span class="sxs-lookup"><span data-stu-id="1652e-120">The object to add.</span></span></param>
        <param name="policy"><span data-ttu-id="1652e-121">Obiekt zawierający szczegóły wykluczenia wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-121">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="1652e-122">Ten obiekt zawiera więcej opcji wykluczenia niż proste wygaśnięcia bezwzględne.</span><span class="sxs-lookup"><span data-stu-id="1652e-122">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <summary><span data-ttu-id="1652e-123">W przypadku przesłonięcia w klasie pochodnej, próbuje Wstaw wpis pamięci podręcznej w pamięci podręcznej jako <see cref="T:System.Runtime.Caching.CacheItem" /> wystąpienia i dodaje szczegółowe informacje dotyczące sposobu wykluczyć wpis.</span><span class="sxs-lookup"><span data-stu-id="1652e-123">When overridden in a derived class, tries to insert a cache entry into the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance, and adds details about how the entry should be evicted.</span></span></summary>
        <returns>
          <span data-ttu-id="1652e-124"><see langword="true" /> Jeśli wstawiania zakończyło się pomyślnie, lub <see langword="false" /> Jeśli istnieje już wpis w pamięci podręcznej, który ma tego samego klucza <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-124"><see langword="true" /> if insertion succeeded, or <see langword="false" /> if there is an already an entry in the cache that has the same key as <paramref name="item" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-125"><xref:System.Runtime.Caching.ObjectCache.Add%2A> Przeciążenia metody są wirtualnych (nie jako abstract) na <xref:System.Runtime.Caching.ObjectCache> klasy, ponieważ <xref:System.Runtime.Caching.ObjectCache.Add%2A> wewnętrznie wywołuje metodę <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span><span class="sxs-lookup"><span data-stu-id="1652e-125">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="1652e-126">Zmniejsza liczbę przeciążenia metody, które musi dostarczyć implementujący pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-126">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="1652e-127">Implementacja pamięci podręcznej nie wymaga specjalnego zachowania w przypadku <xref:System.Runtime.Caching.ObjectCache.Add%2A> metody, można po prostu implementuje ona <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="1652e-127">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="1652e-128">Unikatowy identyfikator wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-128">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="1652e-129">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="1652e-129">The object to insert.</span></span></param>
        <param name="absoluteExpiration"><span data-ttu-id="1652e-130">Stałe datę i godzinę wygaśnięcia wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-130">The fixed date and time at which the cache entry will expire.</span></span> <span data-ttu-id="1652e-131">Ten parametr jest wymagany, gdy <see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="1652e-131">This parameter is required when the <see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /> method is called.</span></span></param>
        <param name="regionName"><span data-ttu-id="1652e-132">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1652e-132">Optional.</span></span> <span data-ttu-id="1652e-133">Nazwane region w pamięci podręcznej, do której można dodać wpisu pamięci podręcznej, jeśli zostaną zaimplementowane regionów.</span><span class="sxs-lookup"><span data-stu-id="1652e-133">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="1652e-134">Ponieważ regiony nie są zaimplementowane w [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], wartością domyślną jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-134">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1652e-135">W przypadku przesłonięcia w klasie pochodnej, wstawia wpis pamięci podręcznej w pamięci podręcznej bez zastępowania żadnych istniejący wpis pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-135">When overridden in a derived class, inserts a cache entry into the cache without overwriting any existing cache entry.</span></span></summary>
        <returns>
          <span data-ttu-id="1652e-136"><see langword="true" /> Jeśli wstawiania zakończyło się pomyślnie, lub <see langword="false" /> Jeśli istnieje już wpis w pamięci podręcznej, który ma tego samego klucza <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-136"><see langword="true" /> if insertion succeeded, or <see langword="false" /> if there is an already an entry in the cache that has the same key as <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-137"><xref:System.Runtime.Caching.ObjectCache.Add%2A> Przeciążenia metody są wirtualnych (nie jako abstract) na <xref:System.Runtime.Caching.ObjectCache> klasy, ponieważ <xref:System.Runtime.Caching.ObjectCache.Add%2A> wewnętrznie wywołuje metodę <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span><span class="sxs-lookup"><span data-stu-id="1652e-137">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="1652e-138">Zmniejsza liczbę przeciążenia metody, które musi dostarczyć implementujący pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-138">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="1652e-139">Implementacja pamięci podręcznej nie wymaga specjalnego zachowania w przypadku <xref:System.Runtime.Caching.ObjectCache.Add%2A> metody, można po prostu implementuje ona <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="1652e-139">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="1652e-140">Unikatowy identyfikator wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-140">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="1652e-141">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="1652e-141">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="1652e-142">Obiekt zawierający szczegóły wykluczenia wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-142">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="1652e-143">Ten obiekt zawiera więcej opcji wykluczenia niż proste wygaśnięcia bezwzględne.</span><span class="sxs-lookup"><span data-stu-id="1652e-143">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <param name="regionName"><span data-ttu-id="1652e-144">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1652e-144">Optional.</span></span> <span data-ttu-id="1652e-145">Nazwane region w pamięci podręcznej, do której można dodać wpisu pamięci podręcznej, jeśli zostaną zaimplementowane regionów.</span><span class="sxs-lookup"><span data-stu-id="1652e-145">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="1652e-146">Wartość domyślna dla parametru opcjonalnego to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-146">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1652e-147">W przypadku przesłonięcia w klasie pochodnej, wstawia wpis pamięci podręcznej w pamięci podręcznej, określania informacji o jak wpis zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="1652e-147">When overridden in a derived class, inserts a cache entry into the cache, specifying information about how the entry will be evicted.</span></span></summary>
        <returns>
          <span data-ttu-id="1652e-148"><see langword="true" /> Jeśli spróbuj wstawiania zakończy się pomyślnie, lub <see langword="false" /> Jeśli istnieje już wpis w pamięci podręcznej przy użyciu tego samego klucza <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-148"><see langword="true" /> if the insertion try succeeds, or <see langword="false" /> if there is an already an entry in the cache with the same key as <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-149"><xref:System.Runtime.Caching.ObjectCache.Add%2A> Przeciążenia metody są wirtualnych (nie jako abstract) na <xref:System.Runtime.Caching.ObjectCache> klasy, ponieważ <xref:System.Runtime.Caching.ObjectCache.Add%2A> wewnętrznie wywołuje metodę <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span><span class="sxs-lookup"><span data-stu-id="1652e-149">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="1652e-150">Zmniejsza liczbę przeciążenia metody, które musi dostarczyć implementujący pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-150">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="1652e-151">Implementacja pamięci podręcznej nie wymaga specjalnego zachowania w przypadku <xref:System.Runtime.Caching.ObjectCache.Add%2A> metody, można po prostu implementuje ona <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> przeciążenia metody.</span><span class="sxs-lookup"><span data-stu-id="1652e-151">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOrGetExisting">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1652e-152">W przypadku przesłonięcia w klasie pochodnej, podejmuje próbę wstawienia wpis pamięci podręcznej w pamięci podręcznej i zwraca istniejący wpis pamięci podręcznej z odpowiedniego klucza.</span><span class="sxs-lookup"><span data-stu-id="1652e-152">When overridden in a derived class, tries to insert a cache entry into the cache, and returns an existing cache entry with a matching key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-153"><xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> Przeciążenia metody insert wpis w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-153">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads insert an entry into the cache.</span></span> <span data-ttu-id="1652e-154">Jeśli wpis pamięci podręcznej z dopasowany klucz już istnieje, że oba operatory zwracają istniejący wpis.</span><span class="sxs-lookup"><span data-stu-id="1652e-154">If a cache entry with a matching key already exists, they return the existing entry.</span></span> <span data-ttu-id="1652e-155">Wpis pamięci podręcznej może być <xref:System.Runtime.Caching.CacheItem> obiekt lub obiekt generyczny.</span><span class="sxs-lookup"><span data-stu-id="1652e-155">The cache entry can be a <xref:System.Runtime.Caching.CacheItem> object or a generic object.</span></span>  
  
 <span data-ttu-id="1652e-156">Istnieje jeden różnica między <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> przeciążenia i <xref:System.Runtime.Caching.ObjectCache.Add%2A> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="1652e-156">There is one difference between the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> overloads and the <xref:System.Runtime.Caching.ObjectCache.Add%2A> overloads.</span></span> <span data-ttu-id="1652e-157">Jeśli te metody przeciążane próba wstawienia wpisu pamięci podręcznej, jeśli istniejący wpis zostanie znaleziony, że ma klucz pasujący istniejące dodaje wpis pamięci podręcznej <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> przeciążenia zwracać istniejący wpis pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-157">When these overloaded methods try to insert a cache entry, if an existing entry is found that has a key that matches an existing inserted cache entry, the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> overloads return the existing cache entry.</span></span> <span data-ttu-id="1652e-158"><xref:System.Runtime.Caching.ObjectCache.Add%2A> Przeciążenia nie.</span><span class="sxs-lookup"><span data-stu-id="1652e-158">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> overloads do not.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem AddOrGetExisting (System.Runtime.Caching.CacheItem value, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem AddOrGetExisting(class System.Runtime.Caching.CacheItem value, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (value As CacheItem, policy As CacheItemPolicy) As CacheItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Runtime::Caching::CacheItem ^ AddOrGetExisting(System::Runtime::Caching::CacheItem ^ value, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1652e-159">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="1652e-159">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="1652e-160">Obiekt zawierający szczegóły wykluczenia wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-160">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="1652e-161">Ten obiekt zawiera więcej opcji wykluczenia niż proste wygaśnięcia bezwzględne.</span><span class="sxs-lookup"><span data-stu-id="1652e-161">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <summary><span data-ttu-id="1652e-162">W przypadku przesłonięcia w klasie pochodnej, wstawia określony <see cref="T:System.Runtime.Caching.CacheItem" /> obiektu w pamięci podręcznej, określania informacji o jak wpis zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="1652e-162">When overridden in a derived class, inserts the specified <see cref="T:System.Runtime.Caching.CacheItem" /> object into the cache, specifying information about how the entry will be evicted.</span></span></summary>
        <returns><span data-ttu-id="1652e-163">Jeśli istnieje wpis pamięci podręcznej z tym samym kluczem, wpis pamięci podręcznej określony; w przeciwnym razie <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-163">If a cache entry with the same key exists, the specified cache entry; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="1652e-164">Unikatowy identyfikator wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-164">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="1652e-165">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="1652e-165">The object to insert.</span></span></param>
        <param name="absoluteExpiration"><span data-ttu-id="1652e-166">Stałe datę i godzinę wygaśnięcia wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-166">The fixed date and time at which the cache entry will expire.</span></span></param>
        <param name="regionName"><span data-ttu-id="1652e-167">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1652e-167">Optional.</span></span> <span data-ttu-id="1652e-168">Nazwane region w pamięci podręcznej, do której można dodać wpisu pamięci podręcznej, jeśli zostaną zaimplementowane regionów.</span><span class="sxs-lookup"><span data-stu-id="1652e-168">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="1652e-169">Wartość domyślna dla parametru opcjonalnego to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-169">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1652e-170">W przypadku przesłonięcia w klasie pochodnej, wstawia wpis pamięci podręcznej w pamięci podręcznej, za pomocą klucza, obiekt do wpisu pamięci podręcznej, wartość bezwzględna wygaśnięcia i region opcjonalny do dodania do pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-170">When overridden in a derived class, inserts a cache entry into the cache, by using a key, an object for the cache entry, an absolute expiration value, and an optional region to add the cache into.</span></span></summary>
        <returns><span data-ttu-id="1652e-171">Jeśli istnieje wpis pamięci podręcznej z tym samym kluczem, wpis pamięci podręcznej określonej wartości. w przeciwnym razie <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-171">If a cache entry with the same key exists, the specified cache entry's value; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-172">To <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> przeciążenie metody nie zwraca wartości obiektu <xref:System.Runtime.Caching.CacheItem> obiektu.</span><span class="sxs-lookup"><span data-stu-id="1652e-172">This <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method overload returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="1652e-173">Unikatowy identyfikator wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-173">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="1652e-174">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="1652e-174">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="1652e-175">Obiekt zawierający szczegóły wykluczenia wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-175">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="1652e-176">Ten obiekt zawiera więcej opcji wykluczenia niż proste wygaśnięcia bezwzględne.</span><span class="sxs-lookup"><span data-stu-id="1652e-176">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <param name="regionName"><span data-ttu-id="1652e-177">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1652e-177">Optional.</span></span> <span data-ttu-id="1652e-178">Nazwane region w pamięci podręcznej, do której można dodać wpisu pamięci podręcznej, jeśli zostaną zaimplementowane regionów.</span><span class="sxs-lookup"><span data-stu-id="1652e-178">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="1652e-179">Wartość domyślna dla parametru opcjonalnego to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-179">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1652e-180">W przypadku przesłonięcia w klasie pochodnej, wstawia wpis pamięci podręcznej w pamięci podręcznej, określając klucza i wartość dla wpisu pamięci podręcznej i dowiedzieć się, jak wpis zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="1652e-180">When overridden in a derived class, inserts a cache entry into the cache, specifying a key and a value for the cache entry, and information about how the entry will be evicted.</span></span></summary>
        <returns><span data-ttu-id="1652e-181">Jeśli istnieje wpis pamięci podręcznej z tym samym kluczem, wpis pamięci podręcznej określonej wartości. w przeciwnym razie <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-181">If a cache entry with the same key exists, the specified cache entry's value; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-182"><xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> Metoda zwraca wartość obiektu nie <xref:System.Runtime.Caching.CacheItem> obiektu.</span><span class="sxs-lookup"><span data-stu-id="1652e-182">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> method returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (key As String, Optional regionName As String = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="1652e-183">Unikatowy identyfikator wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-183">A unique identifier for the cache entry.</span></span></param>
        <param name="regionName"><span data-ttu-id="1652e-184">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1652e-184">Optional.</span></span> <span data-ttu-id="1652e-185">Nazwane region w pamięci podręcznej, w których pamięci podręcznej można znaleźć, jeśli zostaną zaimplementowane regionów.</span><span class="sxs-lookup"><span data-stu-id="1652e-185">A named region in the cache where the cache can be found, if regions are implemented.</span></span> <span data-ttu-id="1652e-186">Wartość domyślna dla parametru opcjonalnego to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-186">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1652e-187">W przypadku przesłonięcia w klasie pochodnej, sprawdza, czy istnieje już wpis pamięci podręcznej w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-187">When overridden in a derived class, checks whether the cache entry already exists in the cache.</span></span></summary>
        <returns>
          <span data-ttu-id="1652e-188"><see langword="true" /> Jeśli pamięć podręczna zawiera wpis pamięci podręcznej o tej samej wartości klucza jako <paramref name="key" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-188"><see langword="true" /> if the cache contains a cache entry with the same key value as <paramref name="key" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCacheEntryChangeMonitor">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCacheEntryChangeMonitor (keys As IEnumerable(Of String), Optional regionName As String = null) As CacheEntryChangeMonitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryChangeMonitor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="1652e-189">Unikatowe identyfikatory wpisów pamięci podręcznej do monitorowania.</span><span class="sxs-lookup"><span data-stu-id="1652e-189">The unique identifiers for cache entries to monitor.</span></span></param>
        <param name="regionName"><span data-ttu-id="1652e-190">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1652e-190">Optional.</span></span> <span data-ttu-id="1652e-191">Nazwane region, w której klucze pamięci podręcznej w pamięci podręcznej <c>klucze</c> parametr istnieje, jeśli zostaną zaimplementowane regionów.</span><span class="sxs-lookup"><span data-stu-id="1652e-191">A named region in the cache where the cache keys in the <c>keys</c> parameter exist, if regions are implemented.</span></span> <span data-ttu-id="1652e-192">Wartość domyślna dla parametru opcjonalnego to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-192">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1652e-193">W przypadku przesłonięcia w klasie pochodnej tworzy <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> obiektów, które mogą wyzwalać zdarzenia w odpowiedzi na zmiany we określone wpisy w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-193">When overridden in a derived class, creates a <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> object that can trigger events in response to changes to specified cache entries.</span></span></summary>
        <returns><span data-ttu-id="1652e-194">Monitor zmian, który monitoruje wpisy w pamięci podręcznej w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-194">A change monitor that monitors cache entries in the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-195">Gdy pochodnego <xref:System.Runtime.Caching.ObjectCache> klasa zastępuje podstawowym <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> metody, należy utworzyć implementację buforu <xref:System.Runtime.Caching.CacheEntryChangeMonitor> obiektu.</span><span class="sxs-lookup"><span data-stu-id="1652e-195">When a derived <xref:System.Runtime.Caching.ObjectCache> class overrides the base <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> method, the cache implementation must create a <xref:System.Runtime.Caching.CacheEntryChangeMonitor> object.</span></span> <span data-ttu-id="1652e-196">Ten monitor specjalne zmiany powiadamia wywołań w przypadku zmiany wpisy w pamięci podręcznej, które są określone w `keys` parametru.</span><span class="sxs-lookup"><span data-stu-id="1652e-196">This specialized change monitor notifies callers when there are changes to the cache entries that are specified in the `keys` parameter.</span></span> <span data-ttu-id="1652e-197">Na przykład, jeśli element monitorowanych w `keys` parametr jest zaktualizowane lub usunięte z pamięci podręcznej, monitor zmiany utworzone przez tę metodę wyzwala zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="1652e-197">For example, if a monitored item in the `keys` parameter is updated or removed from the cache, the change monitor created by this method triggers an event.</span></span>  
  
 <span data-ttu-id="1652e-198">Jeśli implementację buforu obsługuje regionów nazwanego pamięci podręcznej, wartość ciągu można określić jako `regionName` parametru.</span><span class="sxs-lookup"><span data-stu-id="1652e-198">If a cache implementation supports named cache regions, a string value can be specified as the `regionName` parameter.</span></span> <span data-ttu-id="1652e-199">W przeciwnym razie jest domyślnie `null`.</span><span class="sxs-lookup"><span data-stu-id="1652e-199">Otherwise, the parameter defaults to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1652e-200">Nie wszystkie implementacje pamięci podręcznej obsługuje monitorów zmiana wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-200">Not all cache implementations support cache-entry change monitors.</span></span> <span data-ttu-id="1652e-201">Aby sprawdzić, czy obsługuje implementacji pamięci podręcznej <xref:System.Runtime.Caching.CacheEntryChangeMonitor> obiektów, zobacz dokumentację do wykonania określonych pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-201">To determine whether your cache implementation supports <xref:System.Runtime.Caching.CacheEntryChangeMonitor> objects, see the documentation for the specific cache implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCacheCapabilities">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultCacheCapabilities As DefaultCacheCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Runtime::Caching::DefaultCacheCapabilities DefaultCacheCapabilities { System::Runtime::Caching::DefaultCacheCapabilities get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.DefaultCacheCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1652e-202">W przypadku przesłonięcia w klasie pochodnej pobiera opis funkcji, które zawiera implementację buforu.</span><span class="sxs-lookup"><span data-stu-id="1652e-202">When overridden in a derived class, gets a description of the features that a cache implementation provides.</span></span></summary>
        <value><span data-ttu-id="1652e-203">Bitowe połączenie flag, które wskazują możliwości domyślną implementację buforu.</span><span class="sxs-lookup"><span data-stu-id="1652e-203">A bitwise combination of flags that indicate the default capabilities of a cache implementation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract object Get (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (key As String, Optional regionName As String = null) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="1652e-204">Unikatowy identyfikator dla wpisu pamięci podręcznej do pobrania.</span><span class="sxs-lookup"><span data-stu-id="1652e-204">A unique identifier for the cache entry to get.</span></span></param>
        <param name="regionName"><span data-ttu-id="1652e-205">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1652e-205">Optional.</span></span> <span data-ttu-id="1652e-206">Nazwane region w pamięci podręcznej, do którego został dodany wpisu pamięci podręcznej, jeśli zostaną zaimplementowane regionów.</span><span class="sxs-lookup"><span data-stu-id="1652e-206">A named region in the cache to which the cache entry was added, if regions are implemented.</span></span> <span data-ttu-id="1652e-207">Wartość domyślna dla parametru opcjonalnego to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-207">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1652e-208">W przypadku przesłonięcia w klasie pochodnej pobiera wpisu określony pamięci podręcznej z pamięci podręcznej jako obiekt.</span><span class="sxs-lookup"><span data-stu-id="1652e-208">When overridden in a derived class, gets the specified cache entry from the cache as an object.</span></span></summary>
        <returns><span data-ttu-id="1652e-209">Wpis pamięci podręcznej, który jest identyfikowany przez <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-209">The cache entry that is identified by <paramref name="key" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheItem">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem GetCacheItem (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem GetCacheItem(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCacheItem (key As String, Optional regionName As String = null) As CacheItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="1652e-210">Unikatowy identyfikator dla wpisu pamięci podręcznej do pobrania.</span><span class="sxs-lookup"><span data-stu-id="1652e-210">A unique identifier for the cache entry to get.</span></span></param>
        <param name="regionName"><span data-ttu-id="1652e-211">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1652e-211">Optional.</span></span> <span data-ttu-id="1652e-212">Nazwane region w pamięci podręcznej, do którego został dodany pamięci podręcznej, jeśli zostaną zaimplementowane regionów.</span><span class="sxs-lookup"><span data-stu-id="1652e-212">A named region in the cache to which the cache was added, if regions are implemented.</span></span> <span data-ttu-id="1652e-213">Ponieważ regiony nie są zaimplementowane w [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-213">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1652e-214">W przypadku przesłonięcia w klasie pochodnej pobiera wpisu określony pamięci podręcznej z pamięci podręcznej jako <see cref="T:System.Runtime.Caching.CacheItem" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="1652e-214">When overridden in a derived class, gets the specified cache entry from the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance.</span></span></summary>
        <returns><span data-ttu-id="1652e-215">Wpis pamięci podręcznej, który jest identyfikowany przez <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-215">The cache entry that is identified by <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-216">Przeciążenie tej metody nie istnieje, ponieważ niektóre implementacje pamięci podręcznej może wydłużyć <xref:System.Runtime.Caching.CacheItem> klasy.</span><span class="sxs-lookup"><span data-stu-id="1652e-216">This method overload exists because some cache implementations might extend the <xref:System.Runtime.Caching.CacheItem> class.</span></span> <span data-ttu-id="1652e-217">W takim przypadku <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> przeciążenie metody nie będzie zawsze zwracać wszystkie informacje o danych z pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-217">In that case, the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method overload will not necessarily return all the information about cached data.</span></span> <span data-ttu-id="1652e-218">Jednak <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> przeciążenie metody Włącza niestandardowe pamięci podręcznej otrzymać więcej niż wartość pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-218">However, the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method overload enables custom caches to return more than just the cache value.</span></span>  
  
 <span data-ttu-id="1652e-219"><xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> Metody przypomina <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> metody, z wyjątkiem <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> metoda zwraca zwracanego wpisu pamięci podręcznej jako <xref:System.Runtime.Caching.CacheItem> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="1652e-219">The <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method is like the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method, except that the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method returns return the cache entry as a <xref:System.Runtime.Caching.CacheItem> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public abstract long GetCount (string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetCount(string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCount (Optional regionName As String = null) As Long" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regionName"><span data-ttu-id="1652e-220">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1652e-220">Optional.</span></span> <span data-ttu-id="1652e-221">Nazwane region w pamięci podręcznej, dla którego liczba wpisu pamięci podręcznej powinien zostać obliczony, jeśli zostaną zaimplementowane regionów.</span><span class="sxs-lookup"><span data-stu-id="1652e-221">A named region in the cache for which the cache entry count should be computed, if regions are implemented.</span></span> <span data-ttu-id="1652e-222">Wartość domyślna dla parametru opcjonalnego to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-222">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1652e-223">W przypadku przesłonięcia w klasie pochodnej pobiera całkowita liczba wpisów pamięci podręcznej w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-223">When overridden in a derived class, gets the total number of cache entries in the cache.</span></span></summary>
        <returns><span data-ttu-id="1652e-224">Liczba wpisów w pamięci podręcznej w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-224">The number of cache entries in the cache.</span></span> <span data-ttu-id="1652e-225">Jeśli <paramref name="regionName" /> nie jest <see langword="null" />, licznik wskazuje liczbę wpisów, które znajdują się w pamięci podręcznej określonego regionu.</span><span class="sxs-lookup"><span data-stu-id="1652e-225">If <paramref name="regionName" /> is not <see langword="null" />, the count indicates the number of entries that are in the specified cache region.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1652e-226">W przypadku przesłonięcia w klasie pochodnej tworzy moduł wyliczający, który może służyć do iterowania po kolekcji wpisów pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-226">When overridden in a derived class, creates an enumerator that can be used to iterate through a collection of cache entries.</span></span></summary>
        <returns><span data-ttu-id="1652e-227">Obiekt moduł wyliczający, który zapewnia dostęp do wpisów pamięci podręcznej w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-227">The enumerator object that provides access to the cache entries in the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-228">Implementacje pamięci podręcznej można zastąpić i rozszerzenie tej metody, aby zapewnić niestandardowych środka iteracji w kolekcji wpisów pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-228">Cache implementers can override and extend this method to provide a custom means of iterating through a collection of cache entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1652e-229">Zwraca moduł wyliczający jest zazwyczaj operacją droższe niż powrót całą pamięć podręczną zapisu.</span><span class="sxs-lookup"><span data-stu-id="1652e-229">Returning an enumerator is typically a more expensive operation than returning the entire cache entry.</span></span>  
  
 <span data-ttu-id="1652e-230">Ta metoda jest wywoływana przez implementacje interfejsu jawnego który <xref:System.Runtime.Caching.ObjectCache> klasa ma dla <xref:System.Collections.IEnumerable.GetEnumerator%2A> i <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1652e-230">This method is called by the explicit interface implementations that the <xref:System.Runtime.Caching.ObjectCache> class has for the <xref:System.Collections.IEnumerable.GetEnumerator%2A> and <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValues">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1652e-231">Pobiera zestaw wpisów pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-231">Gets a set of cache entries.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValues (keys As IEnumerable(Of String), Optional regionName As String = null) As IDictionary(Of String, Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="1652e-232">Kolekcja unikatowych identyfikatorów dla wpisów pamięci podręcznej do pobrania.</span><span class="sxs-lookup"><span data-stu-id="1652e-232">A collection of unique identifiers for the cache entries to get.</span></span></param>
        <param name="regionName"><span data-ttu-id="1652e-233">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1652e-233">Optional.</span></span> <span data-ttu-id="1652e-234">Nazwane region w pamięci podręcznej, do którego wpisu pamięci podręcznej lub wpisy zostały dodane, jeśli zostaną zaimplementowane regionów.</span><span class="sxs-lookup"><span data-stu-id="1652e-234">A named region in the cache to which the cache entry or entries were added, if regions are implemented.</span></span> <span data-ttu-id="1652e-235">Wartość domyślna dla parametru opcjonalnego to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-235">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1652e-236">W przypadku przesłonięcia w klasie pochodnej pobiera zbiór wpisy w pamięci podręcznej, które odpowiadają na określone klucze.</span><span class="sxs-lookup"><span data-stu-id="1652e-236">When overridden in a derived class, gets a set of cache entries that correspond to the specified keys.</span></span></summary>
        <returns><span data-ttu-id="1652e-237">Słownik zawierający pary klucz wartość, które reprezentują wpisy w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-237">A dictionary of key/value pairs that represent cache entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-238"><xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> Optymalizację wydajności dla rozproszonej pamięci podręcznej, które obsługuje pobierania wiele wpisów pamięci podręcznej z pamięci podręcznej podczas wywoływania jednej sieci jest przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="1652e-238">The <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload is a performance optimization for distributed caches that support fetching multiple cache entries from the cache during a single network call.</span></span>  
  
 <span data-ttu-id="1652e-239">Mimo że obiekt wywołujący może przekazać przynajmniej jednego klucza do metody, brak żadnej gwarancji, że wszystkie klucze reprezentują wpisów w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-239">Although a caller can pass one or more keys to the method, there is no guarantee that all keys represent entries in the cache.</span></span> <span data-ttu-id="1652e-240">W związku z tym zwrócony słownika może zawierać mniej niż liczba kluczy, które zostały przekazane do metody.</span><span class="sxs-lookup"><span data-stu-id="1652e-240">Therefore, the returned dictionary might contain fewer items than the number of keys that were passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (string regionName, params string[] keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(string regionName, string[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValues (regionName As String, ParamArray keys As String()) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetValues(System::String ^ regionName, ... cli::array &lt;System::String ^&gt; ^ keys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
        <Parameter Name="keys" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="regionName"><span data-ttu-id="1652e-241">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1652e-241">Optional.</span></span> <span data-ttu-id="1652e-242">Nazwane region w pamięci podręcznej, do którego wpisu pamięci podręcznej lub wpisy zostały dodane, jeśli zostaną zaimplementowane regionów.</span><span class="sxs-lookup"><span data-stu-id="1652e-242">A named region in the cache to which the cache entry or entries were added, if regions are implemented.</span></span> <span data-ttu-id="1652e-243">Ponieważ regiony nie są zaimplementowane w [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-243">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is <see langword="null" />.</span></span></param>
        <param name="keys"><span data-ttu-id="1652e-244">Kolekcja unikatowych identyfikatorów dla wpisów pamięci podręcznej do pobrania.</span><span class="sxs-lookup"><span data-stu-id="1652e-244">A collection of unique identifiers for the cache entries to get.</span></span></param>
        <summary><span data-ttu-id="1652e-245">Pobiera zestaw wpisy w pamięci podręcznej, które odpowiadają na określone klucze.</span><span class="sxs-lookup"><span data-stu-id="1652e-245">Gets a set of cache entries that correspond to the specified keys.</span></span></summary>
        <returns><span data-ttu-id="1652e-246">Słownik zawierający pary klucz wartość, które reprezentują wpisy w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-246">A dictionary of key/value pairs that represent cache entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-247"><xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType> Przeciążenie metody przypomina <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> przeciążenie metody, ale pozwala przekazać nazwanego region przy użyciu składni opcjonalny parametr, który jest obsługiwany przez zarządzane języków, takich jak C#.</span><span class="sxs-lookup"><span data-stu-id="1652e-247">The <xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType> method overload is like the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload, but lets you pass the named region by using optional parameter syntax that is supported by managed languages such as C#.</span></span>  
  
 <span data-ttu-id="1652e-248">Ta metoda jest metodą wirtualną, ponieważ <xref:System.Runtime.Caching.ObjectCache> klasa udostępnia domyślną implementację, która przekazuje `params` tablicy do <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="1652e-248">This method is a virtual method because the <xref:System.Runtime.Caching.ObjectCache> class provides a default implementation that passes the `params` array to the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public static IServiceProvider Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IServiceProvider Host" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Host" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Host As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property IServiceProvider ^ Host { IServiceProvider ^ get(); void set(IServiceProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1652e-249">Pobiera lub ustaw odwołanie do zarządzanego środowiska hostingu, która jest dostępna dla <see cref="T:System.Runtime.Caching.ObjectCache" /> implementacji, które zapewniają usługi specyficzne dla hosta, aby <see cref="T:System.Runtime.Caching.ObjectCache" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="1652e-249">Gets or set a reference to a managed hosting environment that is available to <see cref="T:System.Runtime.Caching.ObjectCache" /> implementations and that can provide host-specific services to <see cref="T:System.Runtime.Caching.ObjectCache" /> implementations.</span></span></summary>
        <value><span data-ttu-id="1652e-250">Odwołanie do pamięci podręcznej obsługujący zarządzanego środowiska hostingu.</span><span class="sxs-lookup"><span data-stu-id="1652e-250">A reference to a cache-aware managed hosting environment.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-251"><xref:System.Runtime.Caching.ObjectCache.Host%2A> Właściwości jest przeznaczony do użytku przez [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] środowiska, a przez implementacje pamięci podręcznej, które implementuje zachowanie, która jest zależna od programu .NET Framework środowisko.</span><span class="sxs-lookup"><span data-stu-id="1652e-251">The <xref:System.Runtime.Caching.ObjectCache.Host%2A> property is intended for use by [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] host environments and by cache implementations that implement behavior that depends on the .NET Framework host environment.</span></span>  
  
 <span data-ttu-id="1652e-252">Poniższa lista zawiera zbiór usług środowiska hosta, co może być dostępny w środowisku macierzystym zarządzane i które są dostępne do <xref:System.Runtime.Caching.ObjectCache> implementacje za pośrednictwem <xref:System.Runtime.Caching.ObjectCache.Host%2A> właściwości:</span><span class="sxs-lookup"><span data-stu-id="1652e-252">The following table lists the set of host environment services that might be available from a managed hosting environment and that are available to <xref:System.Runtime.Caching.ObjectCache> implementations through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property:</span></span>  
  
|<span data-ttu-id="1652e-253">Usługa</span><span class="sxs-lookup"><span data-stu-id="1652e-253">Service</span></span>|<span data-ttu-id="1652e-254">Opis</span><span class="sxs-lookup"><span data-stu-id="1652e-254">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.Runtime.Caching.Hosting.IApplicationIdentifier>|<span data-ttu-id="1652e-255">Umożliwia Podaj identyfikatory domeny aplikacji, które mogą być wymagane przez implementację buforu, funkcji, takich jak identyfikujący liczniki wydajności środowiska hosta.</span><span class="sxs-lookup"><span data-stu-id="1652e-255">Lets host environments provide application domain identifiers that might be needed by a cache implementation for features such as identifying performance counters.</span></span>|  
|<xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>|<span data-ttu-id="1652e-256">Umożliwia zapewniają niestandardowe zmianę pliku system powiadomień, zamiast przy użyciu jednej w środowiskach hosta [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="1652e-256">Lets host environments provide a custom file-change notification system, instead of using the one provided in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>|  
|<xref:System.Runtime.Caching.Hosting.IMemoryCacheManager>|<span data-ttu-id="1652e-257">Umożliwia zmniejszenie zużycia pamięci pamięci podręcznej raportu implementacje pamięci podręcznej w środowisku hosta.</span><span class="sxs-lookup"><span data-stu-id="1652e-257">Lets cache implementations report cache memory consumption to the host environment.</span></span> <span data-ttu-id="1652e-258">Umożliwia to centralne zarządzanie użycie pamięci przez wiele implementacji pamięci podręcznej środowiska hosta.</span><span class="sxs-lookup"><span data-stu-id="1652e-258">This enables host environments to centrally manage memory consumption across multiple cache implementations.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="1652e-259">Wywołań wartość tej właściwości wymagane uprawnienia zabezpieczeń dostępu kodu bez ograniczeń.</span><span class="sxs-lookup"><span data-stu-id="1652e-259">Callers of this property value require unrestricted code access security permissions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1652e-260">Wartość przypisywane do właściwości jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-260">The value being assigned to the property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1652e-261">Próbowano ustawić wartość właściwości więcej niż jeden raz.</span><span class="sxs-lookup"><span data-stu-id="1652e-261">An attempt was made to set the property value more than one time.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="1652e-262">Aby uzyskać pełne zaufanie wszystkie metody dostępu tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="1652e-262">for full trust for all accessors of this property.</span></span> <span data-ttu-id="1652e-263">Tej właściwości nie można użyć przez kod częściowo zaufany.</span><span class="sxs-lookup"><span data-stu-id="1652e-263">This property cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="InfiniteAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset InfiniteAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteAbsoluteExpiration As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1652e-264">Pobiera wartość wskazującą, czy wpis pamięci podręcznej nie ma żadnych wygaśnięcia bezwzględne.</span><span class="sxs-lookup"><span data-stu-id="1652e-264">Gets a value that indicates that a cache entry has no absolute expiration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-265">Wpis pamięci podręcznej, który znajduje się w pamięci podręcznej <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> pole ma wartość jako wartość wygaśnięcia nigdy nie wygaśnie oparte na bezwzględne punktu w czasie.</span><span class="sxs-lookup"><span data-stu-id="1652e-265">A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> field value set as the expiration value should never expire based on an absolute point in time.</span></span> <span data-ttu-id="1652e-266">Wpis pamięci podręcznej tego ustawienia może jednak wykluczony z pamięci podręcznej z innych przyczyn, które są określone przez implementację określonego pamięci podręcznej, na przykład monitor zmianach wykluczenia zdarzeń, spowodowane wykorzystania pamięci.</span><span class="sxs-lookup"><span data-stu-id="1652e-266">However, a cache entry with this setting can be evicted from the cache for other reasons that are determined by a particular cache implementation, such as a change-monitor event eviction caused by memory pressure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="1652e-267">Unikatowy identyfikator dla wpisu pamięci podręcznej w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-267">A unique identifier for a cache entry in the cache.</span></span></param>
        <summary><span data-ttu-id="1652e-268">Pobiera lub ustawia indeksatora domyślny dla <see cref="T:System.Runtime.Caching.ObjectCache" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="1652e-268">Gets or sets the default indexer for the <see cref="T:System.Runtime.Caching.ObjectCache" /> class.</span></span></summary>
        <value><span data-ttu-id="1652e-269">Klucz, który służy jako indeksatora do wystąpienia pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-269">A key that serves as an indexer into the cache instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-270">Przypomina zachowanie metody dostępu set tej właściwości <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> metody.</span><span class="sxs-lookup"><span data-stu-id="1652e-270">The behavior of the set accessor of this property is like the <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method.</span></span> <span data-ttu-id="1652e-271">Wewnętrznie implementację buforu można ustawić czas wygaśnięcia bezwzględne określoną wartość na <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> metody.</span><span class="sxs-lookup"><span data-stu-id="1652e-271">Internally, a cache implementation could set the absolute expiration of the specified value to the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> method.</span></span> <span data-ttu-id="1652e-272">Jednak to zachowanie jest ostatecznie do implementacji pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-272">However this behavior is ultimately up to the cache implementation.</span></span>  
  
 <span data-ttu-id="1652e-273">Metody dostępu get jest takie jak wywołania <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> — metoda i przy użyciu `null` nazwę regionu.</span><span class="sxs-lookup"><span data-stu-id="1652e-273">The behavior of get accessor is like calling the <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> method and using `null` for the region name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1652e-274">Pobiera nazwę określonego <see cref="T:System.Runtime.Caching.ObjectCache" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="1652e-274">Gets the name of a specific <see cref="T:System.Runtime.Caching.ObjectCache" /> instance.</span></span></summary>
        <value><span data-ttu-id="1652e-275">Nazwa wystąpienia określonego pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-275">The name of a specific cache instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-276">Niektóre implementacje pamięci podręcznej może obsługiwać wiele wystąpień w pamięci podręcznej działającej w pojedynczej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="1652e-276">Some cache implementations might support multiple instances of the cache that is running in a single application.</span></span> <span data-ttu-id="1652e-277">Ta właściwość umożliwia zwraca nazwę identyfikującą wystąpienie pamięci podręcznej określonych implementacje pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-277">This property lets cache implementers return a name that identifies a specific cache instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1652e-278">Wskazuje, czy wpis pamięci podręcznej nie ma żadnych przesuwanego czas wygaśnięcia.</span><span class="sxs-lookup"><span data-stu-id="1652e-278">Indicates that a cache entry has no sliding expiration time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-279">Wygaśnięcia opartego na czas trwania lub zdefiniowanych przedziale czasu jest również nazywany przedłużanie ważności.</span><span class="sxs-lookup"><span data-stu-id="1652e-279">Expiration that is based on duration or a defined window of time is also referred to as sliding expiration.</span></span> <span data-ttu-id="1652e-280">Zwykle implementację buforu, który wyklucza mogą elementy, które są oparte na przedłużanie ważności spowoduje usunięcie elementu, który nie była używana w określonym przedziale czasu.</span><span class="sxs-lookup"><span data-stu-id="1652e-280">Normally, a cache implementation that evicts items that are based on sliding expiration will remove an item that has not been accessed in the specified window of time.</span></span>  
  
 <span data-ttu-id="1652e-281">Wpis pamięci podręcznej, który znajduje się w pamięci podręcznej <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> pola wartość ustawiona jako wartość wygaśnięcia nigdy nie wykluczyć z powodu innej niż działania w metodzie przesuwanego okna czasu.</span><span class="sxs-lookup"><span data-stu-id="1652e-281">A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> field value set as the expiration value should never be evicted because of non-activity in a sliding time window.</span></span> <span data-ttu-id="1652e-282">Jednak element pamięci podręcznej może zostać wykluczony, jeśli ma ona wygaśnięcia bezwzględne lub inne zdarzenia wykluczenia występuje takie zmiany monitora lub pamięci wykorzystania.</span><span class="sxs-lookup"><span data-stu-id="1652e-282">However, a cache item can be evicted if it has an absolute expiration, or if some other eviction event occurs, such a change monitor or memory pressure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract object Remove (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Remove(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (key As String, Optional regionName As String = null) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="1652e-283">Unikatowy identyfikator wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-283">A unique identifier for the cache entry.</span></span></param>
        <param name="regionName"><span data-ttu-id="1652e-284">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1652e-284">Optional.</span></span> <span data-ttu-id="1652e-285">Nazwane region w pamięci podręcznej, do którego został dodany wpisu pamięci podręcznej, jeśli zostaną zaimplementowane regionów.</span><span class="sxs-lookup"><span data-stu-id="1652e-285">A named region in the cache to which the cache entry was added, if regions are implemented.</span></span> <span data-ttu-id="1652e-286">Wartość domyślna dla parametru opcjonalnego to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-286">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1652e-287">W przypadku przesłonięcia w klasie pochodnej usuwa wpis pamięci podręcznej z pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-287">When overridden in a derived class, removes the cache entry from the cache.</span></span></summary>
        <returns><span data-ttu-id="1652e-288">Obiekt reprezentujący wartość wpisu pamięci podręcznej usunięty, która została określona za pomocą klucza lub <see langword="null" /> , jeśli nie można odnaleźć określonego wpisu.</span><span class="sxs-lookup"><span data-stu-id="1652e-288">An object that represents the value of the removed cache entry that was specified by the key, or <see langword="null" /> if the specified entry was not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-289">Jeśli przesłonić tę metodę w implementacji niestandardowych pamięci podręcznej, jeśli istnieje wpis pamięci podręcznej w pamięci podręcznej, która odpowiada `key`, powinna zostać zwrócona wartość z usuniętym elementem.</span><span class="sxs-lookup"><span data-stu-id="1652e-289">If you override this method in a custom cache implementation, if there is a cache entry in the cache that corresponds to `key`, the value of the removed item should be returned.</span></span> <span data-ttu-id="1652e-290">Jeśli nic nie został usunięty z pamięci podręcznej, metoda powinna zwrócić `null`.</span><span class="sxs-lookup"><span data-stu-id="1652e-290">If nothing was removed from the cache, the method should return `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1652e-291">Niektóre implementacje rozproszonej pamięci podręcznej może nie obsługiwać możliwość zwracania wartości, który został usunięty z pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-291">Some distributed cache implementations might not support the ability to return the value that was removed from the cache.</span></span> <span data-ttu-id="1652e-292">Może to być spowodowane implementację buforu nie obsługuje zwracania wartości elementów usuniętych pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-292">This might be because the cache implementation does not support returning the value of a removed cache item.</span></span> <span data-ttu-id="1652e-293">Być może przekazywanie obiektu jako zwracana wartość jest zbyt drogie.</span><span class="sxs-lookup"><span data-stu-id="1652e-293">It might also be because marshaling the object as a return value is too expensive.</span></span> <span data-ttu-id="1652e-294">W takich przypadkach może zwrócić implementacje pamięci podręcznej `null`.</span><span class="sxs-lookup"><span data-stu-id="1652e-294">In such cases, cache implementations can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1652e-295">W przypadku przesłonięcia w klasie pochodnej, wstawia wpis pamięci podręcznej w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-295">When overridden in a derived class, inserts a cache entry into the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-296">Typowe zachowanie <xref:System.Runtime.Caching.ObjectCache.Set%2A> przeciążenia metody jest operacją insert lub update.</span><span class="sxs-lookup"><span data-stu-id="1652e-296">The typical behavior of the <xref:System.Runtime.Caching.ObjectCache.Set%2A> overload methods is an insert-or-update operation.</span></span> <span data-ttu-id="1652e-297">Wpis pamięci podręcznej jest albo wstawiony jako nowy wpis, jeśli określony wpis nie istnieje lub wpisu pamięci podręcznej jest zaktualizowane przy użyciu nowej wartości, jeśli już istnieje.</span><span class="sxs-lookup"><span data-stu-id="1652e-297">A cache entry is either inserted as a new entry if the specified entry does not exist, or the cache entry is updated with a new value if it already exists.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (item As CacheItem, policy As CacheItemPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Set(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1652e-298">Aby dodać element pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-298">The cache item to add.</span></span></param>
        <param name="policy"><span data-ttu-id="1652e-299">Obiekt zawierający szczegóły wykluczenia wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-299">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="1652e-300">Ten obiekt zawiera więcej opcji wykluczenia niż proste wygaśnięcia bezwzględne.</span><span class="sxs-lookup"><span data-stu-id="1652e-300">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <summary><span data-ttu-id="1652e-301">W przypadku przesłonięcia w klasie pochodnej, wstawia wpisu pamięci podręcznej w pamięci podręcznej jako <see cref="T:System.Runtime.Caching.CacheItem" /> wystąpienia, określania informacji o jak wpis zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="1652e-301">When overridden in a derived class, inserts the cache entry into the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance, specifying information about how the entry will be evicted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-302">Jeśli klucz `item` nie istnieje, `item` są wstawiane jako nowy wpis pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-302">If the key for `item` does not exist, `item` is inserted as a new cache entry.</span></span> <span data-ttu-id="1652e-303">Jeśli element z kluczem takim samym `item` istnieje wartość `item` służy do aktualizacji lub zastąpić wartość istniejący wpis pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-303">If an item with a key that matches `item` exists, the value from `item` is used to update or overwrite the value of the existing cache entry.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="1652e-304">Unikatowy identyfikator wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-304">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="1652e-305">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="1652e-305">The object to insert.</span></span></param>
        <param name="absoluteExpiration"><span data-ttu-id="1652e-306">Stałe datę i godzinę wygaśnięcia wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-306">The fixed date and time at which the cache entry will expire.</span></span></param>
        <param name="regionName"><span data-ttu-id="1652e-307">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1652e-307">Optional.</span></span> <span data-ttu-id="1652e-308">Nazwane region w pamięci podręcznej, do której można dodać wpisu pamięci podręcznej, jeśli zostaną zaimplementowane regionów.</span><span class="sxs-lookup"><span data-stu-id="1652e-308">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="1652e-309">Wartość domyślna dla parametru opcjonalnego to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-309">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1652e-310">W przypadku przesłonięcia w klasie pochodnej, wstawia wpis pamięci podręcznej w pamięci podręcznej, określając szczegóły na podstawie czasu wygaśnięcia.</span><span class="sxs-lookup"><span data-stu-id="1652e-310">When overridden in a derived class, inserts a cache entry into the cache, specifying time-based expiration details.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-311">Jeśli element odpowiadający `key` nie istnieje w pamięci podręcznej, `value` i `key` są używane do wstawiania jako nowy wpis pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-311">If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry.</span></span> <span data-ttu-id="1652e-312">Jeśli element z kluczem takim samym `item` istnieje, aktualizacji lub zastąpić, przy użyciu wpisu pamięci podręcznej `value`.</span><span class="sxs-lookup"><span data-stu-id="1652e-312">If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="1652e-313">Unikatowy identyfikator wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-313">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="1652e-314">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="1652e-314">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="1652e-315">Obiekt zawierający szczegóły wykluczenia wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-315">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="1652e-316">Ten obiekt zawiera więcej opcji wykluczenia niż proste wygaśnięcia bezwzględne.</span><span class="sxs-lookup"><span data-stu-id="1652e-316">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <param name="regionName"><span data-ttu-id="1652e-317">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="1652e-317">Optional.</span></span> <span data-ttu-id="1652e-318">Nazwane region w pamięci podręcznej, do której można dodać wpisu pamięci podręcznej, jeśli zostaną zaimplementowane regionów.</span><span class="sxs-lookup"><span data-stu-id="1652e-318">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="1652e-319">Wartość domyślna dla parametru opcjonalnego to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1652e-319">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1652e-320">W przypadku przesłonięcia w klasie pochodnej, wstawia wpis pamięci podręcznej w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-320">When overridden in a derived class, inserts a cache entry into the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-321">To przeciążenie metody umożliwia bardziej szczegółowe wykluczenia i wygaśnięcia niż te, które są dostępne w na podstawie czasu wygaśnięcia bezwzględne.</span><span class="sxs-lookup"><span data-stu-id="1652e-321">This method overload lets you provide more eviction or expiration details than those that are available in time-based absolute expiration.</span></span>  
  
 <span data-ttu-id="1652e-322">Jeśli element odpowiadający `key` nie istnieje w pamięci podręcznej, `value` i `key` są używane do wstawiania jako nowy wpis pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-322">If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry.</span></span> <span data-ttu-id="1652e-323">Jeśli element z kluczem takim samym `item` istnieje, aktualizacji lub zastąpić, przy użyciu wpisu pamięci podręcznej `value`.</span><span class="sxs-lookup"><span data-stu-id="1652e-323">If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,object&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object)) Implements IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1652e-324">Obsługuje iteracji przez kolekcję ogólną.</span><span class="sxs-lookup"><span data-stu-id="1652e-324">Supports iteration over a generic collection.</span></span></summary>
        <returns><span data-ttu-id="1652e-325">Obiekt moduł wyliczający, który zapewnia dostęp do elementów w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-325">The enumerator object that provides access to the items in the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1652e-326">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="1652e-326">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="1652e-327">Można użyć tylko wtedy, gdy pochodnego <xref:System.Runtime.Caching.ObjectCache> wystąpienia jest rzutowane na <xref:System.Collections.IEnumerable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="1652e-327">It can be used only when a derived <xref:System.Runtime.Caching.ObjectCache> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="1652e-328">Deweloperzy mogą używać tej metody do iteracji ogólnych kolekcji wpisów pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="1652e-328">Developers can use this method to iterate through a generic collection of cache entries.</span></span>  
  
 <span data-ttu-id="1652e-329">Jest to domyślny <xref:System.Collections.IEnumerable.GetEnumerator%2A> implementację, która wywołuje wewnętrznie <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1652e-329">This is the default <xref:System.Collections.IEnumerable.GetEnumerator%2A> implementation that internally calls the <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>