<Type Name="HostFileChangeMonitor" FullName="System.Runtime.Caching.HostFileChangeMonitor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1f9a8513015431426715cbe347a2f8c86c4f33a4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69066563" /></Metadata><TypeSignature Language="C#" Value="public sealed class HostFileChangeMonitor : System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HostFileChangeMonitor extends System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.HostFileChangeMonitor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HostFileChangeMonitor&#xA;Inherits FileChangeMonitor" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostFileChangeMonitor sealed : System::Runtime::Caching::FileChangeMonitor" />
  <TypeSignature Language="F#" Value="type HostFileChangeMonitor = class&#xA;    inherit FileChangeMonitor" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Caching.FileChangeMonitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Monitoruje katalogi i ścieżki plików oraz powiadamia pamięć podręczną o zmianach monitorowanych elementów. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa jest konkretną implementacją <xref:System.Runtime.Caching.FileChangeMonitor>typu. <xref:System.Runtime.Caching.HostFileChangeMonitor> Ta klasa jest zapieczętowana, dlatego nie może zostać rozszerzona. Ta klasa jest przydatna, jeśli chcesz użyć istniejącej implementacji pamięci podręcznej i monitorować pliki i katalogi pod kątem zmian.  
  
 Dla każdego określonego pliku lub ścieżki katalogu, <xref:System.Runtime.Caching.HostFileChangeMonitor> Klasa wyzwala powiadomienie o zmianie w przypadku wystąpienia którejkolwiek z następujących zmian:  
  
-   Nazwa monitorowanego pliku lub katalogu.  
  
-   Określony plik lub katalog nie istniał w momencie utworzenia monitora, ale został utworzony później. Innymi słowy, plik lub katalog został utworzony w zakresie monitorowanych elementów.  
  
-   Zmieniono rozmiar monitorowanego pliku.  
  
-   Zmieniono zawartość monitorowanego pliku lub zmieniono zawartość monitorowanego katalogu.  
  
-   Lista kontroli dostępu (ACL) pliku lub katalogu została zmieniona.  
  
-   Plik lub katalog został usunięty.  
  
 Jeśli w tym samym czasie występuje zbyt wiele zmian dla monitorowanego pliku lub katalogu, <xref:System.Runtime.Caching.HostFileChangeMonitor> wystąpienie może utracić śledzenie konkretnych zmian. W tym scenariuszu <xref:System.Runtime.Caching.HostFileChangeMonitor> Klasa wyzwala powiadomienie o zmianie. Ten scenariusz może wystąpić, gdy <xref:System.Runtime.Caching.HostFileChangeMonitor> wystąpienie monitoruje katalog i wiele zmian występuje w zakresie struktury katalogów w krótkim czasie.  
  
 Ponieważ celem <xref:System.Runtime.Caching.HostFileChangeMonitor> klasy jest tylko sygnalizowanie, że coś uległo zmianie między zestawem monitorowanych plików i katalogów, nie jest uważane za ważne, że szczegółowe informacje o określonej zmianie nie są przechwytywane. Celem <xref:System.Runtime.Caching.HostFileChangeMonitor> klasy jest zapewnienie powiadomienia o zmianie stanu, aby można było wykluczyć wpis pamięci podręcznej (lub wpisy). <xref:System.Runtime.Caching.HostFileChangeMonitor> Ponieważ Klasa nie wskazuje dokładnie, co uległo zmianie, przepełnienie śledzenia zmian wewnętrznych jest nieistotne.  
  
 Po dostarczeniu ścieżek do <xref:System.Runtime.Caching.HostFileChangeMonitor> wystąpienia ścieżki katalogów i plików muszą być pełnymi ścieżkami do katalogu lub pliku. Ścieżki względne i symbole wieloznaczne w ścieżkach są niedozwolone.  
  
 <xref:System.Runtime.Caching.HostFileChangeMonitor> Gdy Klasa jest używana w aplikacji ASP.NET, tożsamość systemu Windows, która jest używana na potrzeby dostępu do monitorowanych elementów, jest tożsamość aplikacji dla aplikacji ASP.NET. Innymi słowy, tożsamość aplikacji będzie jedną z następujących:  
  
-   Tożsamość procesu.  
  
-   Tożsamość skonfigurowanej aplikacji.  
  
-   Poświadczenia UNC, jeśli aplikacja działa z udziału UNC.  
  
 Gdy Klasa jest używana w aplikacji non-ASP.NET <xref:System.IO.FileSystemWatcher> , Klasa jest używana wewnętrznie do monitorowania plików. <xref:System.Runtime.Caching.HostFileChangeMonitor> W związku z tym wszelkie listy kontroli dostępu (ACL) odnoszą się do monitorowanego pliku lub katalogu są stosowane do tożsamości systemu Windows bieżącego wątku.  
  
> [!NOTE]
>  Obiekty wywołujące muszą mieć odpowiedni poziom uprawnień zabezpieczeń dostępu kodu (CAS) i muszą mieć uprawnienia NTFS do wszystkich monitorowanych katalogów i ścieżek.  
  
   
  
## Examples  
 Poniższy przykład tworzy element pamięci podręcznej, który <xref:System.Runtime.Caching.HostFileChangeMonitor> używa obiektu do monitorowania stanu danych źródłowych (czyli pliku) w systemie plików. Wpis pamięci podręcznej jest definiowany <xref:System.Runtime.Caching.CacheItemPolicy> przy użyciu obiektu, aby zapewnić wykluczenie i szczegóły wygaśnięcia dla wpisu pamięci podręcznej.  
  
 [!code-csharp[CachingASPNetApplications#1](~/samples/snippets/csharp/VS_Snippets_WebNet/cachingaspnetapplications/cs/default.aspx.cs#1)]
 [!code-vb[CachingASPNetApplications#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/cachingaspnetapplications/vb/default.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostFileChangeMonitor (System.Collections.Generic.IList&lt;string&gt; filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;string&gt; filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filePaths As IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostFileChangeMonitor(System::Collections::Generic::IList&lt;System::String ^&gt; ^ filePaths);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Caching.HostFileChangeMonitor : System.Collections.Generic.IList&lt;string&gt; -&gt; System.Runtime.Caching.HostFileChangeMonitor" Usage="new System.Runtime.Caching.HostFileChangeMonitor filePaths" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="filePaths">Lista zawierająca co najmniej jedną ścieżkę katalogu lub ścieżki plików do monitorowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Caching.HostFileChangeMonitor" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołania konstruktora muszą podawać wartość różną od null `filePaths` dla parametru. <xref:System.Runtime.Caching.HostFileChangeMonitor.%23ctor%2A> Co najmniej, Konstruktor sprawdza kolekcję ścieżek, które są do niego przenoszone, a następnie inicjuje monitorowanie dla tych ścieżek.  
  
> [!NOTE]
>  Konstruktor wykonuje tylko walidację ciągu nazwy ścieżki. Nie sprowadź ścieżek ani nie sprawdza, czy ścieżki istnieją.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="filePaths" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="filePaths" />zawiera elementy zerowe.  
  
—lub— 
Ścieżka na <paramref name="filePaths" /> liście jest <see langword="null" /> lub ciągiem pustym.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="hostFileChangeMonitor.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePaths">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; FilePaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FilePaths" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.FilePaths" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FilePaths As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ FilePaths { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePaths : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.Runtime.Caching.HostFileChangeMonitor.FilePaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję katalogów i ścieżek plików, które zostały przesłane do <see cref="M:System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})" /> konstruktora.</summary>
        <value>Kolekcja katalogów i ścieżek plików.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastModified">
      <MemberSignature Language="C#" Value="public override DateTimeOffset LastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset LastModified" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.LastModified" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LastModified As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTimeOffset LastModified { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.LastModified : DateTimeOffset" Usage="System.Runtime.Caching.HostFileChangeMonitor.LastModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość tylko do odczytu wskazującą czas ostatniego zapisu monitorowanego pliku lub ścieżki.</summary>
        <value>Czas ostatniego zapisu monitorowanego pliku lub ścieżki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli monitor zmian plików służy do monitorowania wielu plików lub ścieżek, ta właściwość zwraca ostatni czas zapisu w zestawie wszystkich plików i ścieżek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueId">
      <MemberSignature Language="C#" Value="public override string UniqueId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.UniqueId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueId : string" Usage="System.Runtime.Caching.HostFileChangeMonitor.UniqueId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator <see cref="T:System.Runtime.Caching.HostFileChangeMonitor" /> wystąpienia, który jest oparty na zestawie monitorowanych katalogów i ścieżkach plików.</summary>
        <value>Identyfikator monitora zmian.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg, który tworzy <xref:System.Runtime.Caching.HostFileChangeMonitor.UniqueId%2A> wartość właściwości, jest konstruowany z następujących części:  
  
-   Ścieżka pliku lub katalogu.  
  
-   Czas ostatniego zapisu w czasie UTC, mierzony jako takty, ale reprezentowany jako ciąg szesnastkowy.  
  
-   Rozmiar pliku, reprezentowany jako ciąg szesnastkowy.  
  
 Jeśli monitor zmian plików jest monitorowany przez wiele ścieżek, informacje zwrócone przez tę właściwość są łączone w jeden ciąg dla wszystkich monitorowanych katalogów i ścieżek plików.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
