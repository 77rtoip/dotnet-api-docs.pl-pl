<Type Name="HostFileChangeMonitor" FullName="System.Runtime.Caching.HostFileChangeMonitor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="907b58b31dd4f5c88629723d6159b7728ee4cc5a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30564262" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HostFileChangeMonitor : System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HostFileChangeMonitor extends System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.HostFileChangeMonitor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HostFileChangeMonitor&#xA;Inherits FileChangeMonitor" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostFileChangeMonitor sealed : System::Runtime::Caching::FileChangeMonitor" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Caching.FileChangeMonitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Monitoruje katalogów i ścieżki plików i powiadamia pamięć podręczna zmian monitorowanych elementów. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.HostFileChangeMonitor> Klasy jest konkretną implementację <xref:System.Runtime.Caching.FileChangeMonitor> typu. Ta klasa jest zapieczętowany, dlatego nie może zostać rozszerzony. Ta klasa jest przydatna, jeśli chcesz korzystać z istniejącej implementacji pamięci podręcznej i monitorować pliki i katalogi zmian.  
  
 Dla każdego określonego pliku lub ścieżkę katalogu <xref:System.Runtime.Caching.HostFileChangeMonitor> klasy wyzwala powiadomienie o zmianie, jeśli wystąpienia któregokolwiek z następujących zmian:  
  
-   Nazwa pliku monitorowanych lub zmiany katalogu.  
  
-   Określony plik lub katalog nie istniał w momencie monitor został utworzony, ale zostało utworzone później. Innymi słowy plik lub katalog został utworzony w zakresie monitorowanych elementów.  
  
-   Zmienić rozmiar pliku monitorowane.  
  
-   Zawartość pliku monitorowanych zmieniona lub zawartość katalogu monitorowanych zmieniony.  
  
-   Listy kontroli dostępu (ACL) w pliku lub katalogu została zmieniona.  
  
-   Usunięto monitorowanych pliku lub katalogu.  
  
 Jeśli zbyt wiele zmian monitorowanych pliku lub katalogu w tym samym czasie <xref:System.Runtime.Caching.HostFileChangeMonitor> wystąpienia może spowodować utratę Śledź zmiany. W tym scenariuszu <xref:System.Runtime.Caching.HostFileChangeMonitor> klasy wyzwala powiadomienie o zmianie. Ten scenariusz jest częściej, gdy <xref:System.Runtime.Caching.HostFileChangeMonitor> wystąpienia monitoruje katalogu i wiele zmian w zakresie struktura katalogów w krótkim czasie.  
  
 Ponieważ celem <xref:System.Runtime.Caching.HostFileChangeMonitor> klasy jest tylko sygnalizuje, że nastąpiły zmiany do zbioru monitorowane pliki i katalogi, nie uznano za istotne szczegóły dotyczące określonej zmiany nie są przechwytywane. Celem <xref:System.Runtime.Caching.HostFileChangeMonitor> klasa ma na celu dostarczenie powiadomienia o stanie zmienione tak, że wpis pamięci podręcznej (lub wpisy) może zostać wykluczony. Ponieważ <xref:System.Runtime.Caching.HostFileChangeMonitor> klasy nie wskazuje dokładnie co zmienione, śledzenie zmian wewnętrzny przepełnienie nie ma znaczenia.  
  
 Jeśli podasz ścieżki do <xref:System.Runtime.Caching.HostFileChangeMonitor> ścieżki wystąpienia, katalogów i plików muszą być pełne ścieżki do pliku lub katalogu. Ścieżki względne i symboli wieloznacznych w ścieżkach są niedozwolone.  
  
 Gdy <xref:System.Runtime.Caching.HostFileChangeMonitor> klasa jest używana w aplikacji ASP.NET, tożsamość systemu Windows, który służy do uzyskiwania dostępu do monitorowanych elementów jest tożsamość aplikacji dla aplikacji ASP.NET. Innymi słowy tożsamość aplikacji będzie jedną z następujących czynności:  
  
-   Tożsamości procesu.  
  
-   Tożsamość skonfigurowanej aplikacji.  
  
-   Poświadczenia UNC, jeśli aplikacja działa z udziału UNC.  
  
 Gdy <xref:System.Runtime.Caching.HostFileChangeMonitor> klasa jest używana w aplikacji ASP.NET z systemem innym niż <xref:System.IO.FileSystemWatcher> klasa jest używana wewnętrznie w celu monitorowania plików. W związku z tym niezależnie od listy kontroli dostępu (ACL) dotyczy monitorowanych plik lub katalog jest stosowany do tożsamości systemu Windows bieżącego wątku.  
  
> [!NOTE]
>  Obiekty wywołujące muszą mieć odpowiedni poziom uprawnień zabezpieczeń (CAS) dostępu do kodu i musi mieć uprawnienia systemu plików NTFS do katalogów wszystkie monitorowane i ścieżki.  
  
   
  
## Examples  
 Poniższy przykład tworzy element pamięci podręcznej, która używa <xref:System.Runtime.Caching.HostFileChangeMonitor> obiekt, aby monitorować stan źródła danych (czyli pliku) w systemie plików. Wpis pamięci podręcznej jest definiowana za pomocą <xref:System.Runtime.Caching.CacheItemPolicy> obiekt, aby podać szczegóły wykluczenia i wygaśnięcia wpisu pamięci podręcznej.  
  
 [!code-csharp[CachingASPNetApplications#1](~/samples/snippets/csharp/VS_Snippets_WebNet/cachingaspnetapplications/cs/default.aspx.cs#1)]
 [!code-vb[CachingASPNetApplications#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/cachingaspnetapplications/vb/default.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostFileChangeMonitor (System.Collections.Generic.IList&lt;string&gt; filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;string&gt; filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filePaths As IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostFileChangeMonitor(System::Collections::Generic::IList&lt;System::String ^&gt; ^ filePaths);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="filePaths">Lista zawierająca co najmniej jeden katalog ścieżek lub pliku do monitorowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Caching.HostFileChangeMonitor" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołuje się <xref:System.Runtime.Caching.HostFileChangeMonitor.%23ctor%2A> Konstruktor należy podać wartość inną niż null dla `filePaths` parametru. Co najmniej konstruktora weryfikuje zbiór ścieżki, który jest przekazywany do niego, a następnie inicjuje monitorowania tych ścieżek.  
  
> [!NOTE]
>  Konstruktor przeprowadza tylko ciąg sprawdzania poprawności nazwy ścieżki. Nie canonicalize ścieżki lub sprawdzić, czy istnieją ścieżki.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filePaths" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="filePaths" /> zawiera elementy, zero.  
  
 —lub—  
  
 Ścieżka w <paramref name="filePaths" /> lista jest <see langword="null" /> lub ciąg pusty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePaths">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; FilePaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FilePaths" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.FilePaths" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FilePaths As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ FilePaths { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję katalogów i ścieżki plików, które zostało przekazane do <see cref="M:System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})" /> konstruktora.</summary>
        <value>Kolekcja katalogów i ścieżki plików.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastModified">
      <MemberSignature Language="C#" Value="public override DateTimeOffset LastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset LastModified" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.LastModified" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LastModified As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTimeOffset LastModified { DateTimeOffset get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość tylko do odczytu, która wskazuje godzinę ostatniego zapisu monitorowanych pliku lub ścieżki.</summary>
        <value>Ostatni zapis czasu monitorowanych pliku lub ścieżki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli monitor zmianę pliku monitoruje wiele plików lub ścieżki, ta właściwość zwraca czas ostatniego zapisu w zestawie wszystkie pliki i ścieżki.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueId">
      <MemberSignature Language="C#" Value="public override string UniqueId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.UniqueId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator <see cref="T:System.Runtime.Caching.HostFileChangeMonitor" /> wystąpienie, które jest oparte na zestawie monitorowanych katalogów i ścieżki plików.</summary>
        <value>Identyfikator monitora zmiany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg, który stanowi <xref:System.Runtime.Caching.HostFileChangeMonitor.UniqueId%2A> wartość właściwości jest tworzony z następujących części:  
  
-   Ścieżka pliku lub katalogu.  
  
-   Czas ostatniego zapisu w czasie UTC, mierzona jako Takty, ale reprezentowane jako ciąg szesnastkowy.  
  
-   Rozmiar pliku reprezentowane jako ciąg szesnastkowy.  
  
 Jeśli monitor zmiany pliku monitoruje wiele ścieżek, informacje zwracane przez tę właściwość jest połączone w jeden ciąg dla wszystkich monitorowanych katalogów i ścieżki plików.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>