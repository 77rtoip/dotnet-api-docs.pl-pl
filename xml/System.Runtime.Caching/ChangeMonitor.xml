<Type Name="ChangeMonitor" FullName="System.Runtime.Caching.ChangeMonitor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67b64376dfff70efe0d957992c978ec33c4627ac" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68399020" /></Metadata><TypeSignature Language="C#" Value="public abstract class ChangeMonitor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChangeMonitor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.ChangeMonitor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChangeMonitor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChangeMonitor abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type ChangeMonitor = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d2195-101">Udostępnia klasę bazową dla pochodnego typu niestandardowego, która monitoruje zmiany stanu danych, od których zależy element pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="d2195-101">Provides a base class for a derived custom type that monitors changes in the state of the data which a cache item depends on.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2195-102"><xref:System.Runtime.Caching.ChangeMonitor> Klasa jest używana jako klasa bazowa dla pochodnych klas monitora, które są wyspecjalizowane dla konkretnych implementacji pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="d2195-102">The <xref:System.Runtime.Caching.ChangeMonitor> class is used as the base class for derived monitor classes that are specialized for particular cache implementations.</span></span> <span data-ttu-id="d2195-103"><xref:System.Runtime.Caching.ChangeMonitor> Wystąpienie monitoruje zmiany stanu danych, od których zależy element pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="d2195-103">A <xref:System.Runtime.Caching.ChangeMonitor> instance monitors changes in the state of data which a cache item depends on.</span></span> <span data-ttu-id="d2195-104">Na przykład element może być plikiem lub obiektem danych, którego zawartość jest buforowana.</span><span class="sxs-lookup"><span data-stu-id="d2195-104">For example, the item can be a file or data entity whose contents are cached.</span></span> <span data-ttu-id="d2195-105">W przypadku zaktualizowania pliku lub jednostki danych należy również zmienić skojarzony wpis pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="d2195-105">If the file or data entity is updated, the associated cache entry must be changed also.</span></span> <span data-ttu-id="d2195-106">Typowe elementy, które można monitorować, obejmują jednostki danych (takie jak pola bazy danych, wartości, wiersze lub tabele), inne wpisy w pamięci podręcznej oraz pliki i atrybuty plików.</span><span class="sxs-lookup"><span data-stu-id="d2195-106">Common items that can be monitored include data entities (such as database fields, values, rows, or tables), another cache entry, and files and file attributes.</span></span>  
  
 <span data-ttu-id="d2195-107">Zmiana zależności to zmiana stanu zależności.</span><span class="sxs-lookup"><span data-stu-id="d2195-107">A dependency change is a change in the state of a dependency.</span></span> <span data-ttu-id="d2195-108">W typowej implementacji pamięci podręcznej <xref:System.Runtime.Caching.ChangeMonitor> po wystąpieniu powiadamia pamięć podręczną o zmianie zależności, pamięć podręczna wykonuje wymagane działanie, na przykład unieważnienie wstawionego wpisu pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="d2195-108">In a typical cache implementation, after a <xref:System.Runtime.Caching.ChangeMonitor> instance notifies the cache that a dependency has changed, the cache performs the required action, such as invalidating the inserted cache entry.</span></span>  
  
 <span data-ttu-id="d2195-109">Klasy <xref:System.Runtime.Caching.ChangeMonitor> pochodne można dostosować do monitorowania zmian zależności dla określonych różnych magazynów danych.</span><span class="sxs-lookup"><span data-stu-id="d2195-109">Derived <xref:System.Runtime.Caching.ChangeMonitor> classes can be customized to monitor dependency changes for specific different data stores.</span></span> <span data-ttu-id="d2195-110">Na przykład istnieją implementacje pamięci podręcznej dla systemu plików, pamięci fizycznej lub bazy danych.</span><span class="sxs-lookup"><span data-stu-id="d2195-110">For example, there are cache implementations for a file system, physical memory, or a database.</span></span> <span data-ttu-id="d2195-111"><xref:System.Runtime.Caching.ChangeMonitor> Klasa bada zmiany, które wystąpiły poza pamięcią podręczną, a następnie generuje alert w pamięci podręcznej, że zmiany zostały wprowadzone.</span><span class="sxs-lookup"><span data-stu-id="d2195-111">The <xref:System.Runtime.Caching.ChangeMonitor> class examines changes that occur outside the cache, and then alerts the cache that changes have occurred.</span></span>  
  
 <span data-ttu-id="d2195-112">Zawiera następujące klasy, które pochodzą z <xref:System.Runtime.Caching.ChangeMonitor> klasy: [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</span><span class="sxs-lookup"><span data-stu-id="d2195-112">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] includes the following classes that derive from <xref:System.Runtime.Caching.ChangeMonitor> class:</span></span>  
  
-   <xref:System.Runtime.Caching.CacheEntryChangeMonitor>  
  
-   <xref:System.Runtime.Caching.FileChangeMonitor>  
  
-   <xref:System.Runtime.Caching.HostFileChangeMonitor>  
  
-   <xref:System.Runtime.Caching.SqlChangeMonitor>  
  
 <span data-ttu-id="d2195-113">Każda z tych klas działa z różnymi typami zależności.</span><span class="sxs-lookup"><span data-stu-id="d2195-113">Each of these classes works with different types of dependencies.</span></span> <span data-ttu-id="d2195-114">Na przykład Klasa pochodna <xref:System.Runtime.Caching.FileChangeMonitor> monitoruje zmiany w pamięci podręcznej dla danych systemu plików (plików i folderów), od których zależy element pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="d2195-114">For example, the derived <xref:System.Runtime.Caching.FileChangeMonitor> class monitors changes to a cache for file system data (files and folders) that the cache item depends on.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="d2195-115">Ten typ jest bezpieczny wątkowo.</span><span class="sxs-lookup"><span data-stu-id="d2195-115">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="d2195-116">W przypadku tworzenia niestandardowej implementacji pamięci podręcznej lub typu monitora zmian pochodnych należy przestrzegać pewnych wytycznych.</span><span class="sxs-lookup"><span data-stu-id="d2195-116">If you create a custom cache implementation or a derived change monitor type, you must follow certain guidelines.</span></span> <span data-ttu-id="d2195-117">Poniższa lista zawiera podsumowanie tych wytycznych.</span><span class="sxs-lookup"><span data-stu-id="d2195-117">The following list summarizes these guidelines.</span></span> <span data-ttu-id="d2195-118">Aby uzyskać więcej informacji, zobacz dokumentację dotyczącą poszczególnych metod lub właściwości.</span><span class="sxs-lookup"><span data-stu-id="d2195-118">For more information, see the documentation for individual methods or properties.</span></span>  
  
<span data-ttu-id="d2195-119">-Konstruktor klasy pochodnej musi mieć ustawioną <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> właściwość, rozpoczęcie monitorowania i metodę wywołania <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> przed zwróceniem metody.</span><span class="sxs-lookup"><span data-stu-id="d2195-119">-   The constructor of a derived class must set the <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> property, begin monitoring, and call <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method before the method returns.</span></span> <span data-ttu-id="d2195-120">Jeśli Konstruktor napotka błąd podczas konstruowania i musi <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> mieć do Dispose zasobów, Konstruktor może wywołać Przeciążenie tylko <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> po wywołaniu <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> metody, ponieważ Przeciążenie spowoduje zgłoszenie <see cref="T:System.InvalidOperationException" /> wyjątek, jeśli Inicjalizacja nie została ukończona.</span><span class="sxs-lookup"><span data-stu-id="d2195-120">If a constructor encounters an error during constructions and must have to dispose of resources, the constructor can only call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload after the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method is called because the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload will throw an <see cref="T:System.InvalidOperationException" /> exception if initialization is not completed.</span></span>  
  
<span data-ttu-id="d2195-121">— Jeśli zmiany są wykonywane w monitorowanych danych przed ukończeniem inicjalizacji, Konstruktor musi wywołać <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> metodę przed <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> wywołaniem metody.</span><span class="sxs-lookup"><span data-stu-id="d2195-121">-   If changes occur in the data that is being monitored before initialization is complete, the constructor must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method before calling the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method.</span></span>  
  
<span data-ttu-id="d2195-122">-Po utworzeniu wystąpienia <see cref="T:System.Runtime.Caching.ChangeMonitor" /> typu pochodnego należy wstawić monitor do implementacji niestandardowej. <see cref="T:System.Runtime.Caching.ObjectCache" /></span><span class="sxs-lookup"><span data-stu-id="d2195-122">-   After a derived <see cref="T:System.Runtime.Caching.ChangeMonitor" /> type is instantiated, you must insert the monitor into a custom <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation.</span></span> <span data-ttu-id="d2195-123">Lub jeśli skończysz korzystać z monitora zmian, wywołaj <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> metodę.</span><span class="sxs-lookup"><span data-stu-id="d2195-123">Or if you are finished using the change monitor, call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method.</span></span>  
  
<span data-ttu-id="d2195-124">-Po <see cref="T:System.Runtime.Caching.ChangeMonitor" /> wstawieniu wystąpienia <see cref="T:System.Runtime.Caching.ObjectCache" /> do implementacji, <see cref="T:System.Runtime.Caching.ObjectCache" /> wystąpienie wymaga usunięcia monitora zmian.</span><span class="sxs-lookup"><span data-stu-id="d2195-124">-   After a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance is inserted into a <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation, the <see cref="T:System.Runtime.Caching.ObjectCache" /> instance require that the change monitor is disposed.</span></span> <span data-ttu-id="d2195-125">Nawet jeśli wstawienie jest nieprawidłowe i powoduje wyjątek, <see cref="T:System.Runtime.Caching.ObjectCache" /> implementacja musi <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> wywoływać przeciążenie.</span><span class="sxs-lookup"><span data-stu-id="d2195-125">Even if the insertion is invalid and causes an exception, the <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation must call the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload.</span></span>  
  
<span data-ttu-id="d2195-126">-Po wstawieniu monitora zmian pochodnych do pamięci podręcznej <see cref="T:System.Runtime.Caching.ObjectCache" /> implementacja musi wywołać metodę <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />, przekazując <see cref="T:System.Runtime.Caching.OnChangedCallback" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="d2195-126">-   After a derived change monitor is inserted into a cache, the <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation must call <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />, by passing a <see cref="T:System.Runtime.Caching.OnChangedCallback" /> object.</span></span> <span data-ttu-id="d2195-127"><see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> Metodę można wywołać tylko raz.</span><span class="sxs-lookup"><span data-stu-id="d2195-127">The <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method can be called only one time.</span></span> <span data-ttu-id="d2195-128">Jeśli zmiana zależności już wystąpi, <see cref="T:System.Runtime.Caching.OnChangedCallback" /> wystąpienie zostanie wywołane natychmiast po <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="d2195-128">If a dependency change has already occurred, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called immediately when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called.</span></span> <span data-ttu-id="d2195-129">W przeciwnym razie wystąpienie zostanie wywołane tylko raz. <see cref="T:System.Runtime.Caching.OnChangedCallback" /></span><span class="sxs-lookup"><span data-stu-id="d2195-129">Otherwise, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called only one time.</span></span> <span data-ttu-id="d2195-130">To <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> jednorazowe wywołanie występuje, gdy wywoływana jest metoda, <see cref="T:System.Runtime.Caching.ChangeMonitor" /> ponieważ wystąpienie wykryło <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> zmianę lub gdy metoda jest wywoływana w <see cref="T:System.Runtime.Caching.ChangeMonitor" />, w zależności od tego, co się dzieje.</span><span class="sxs-lookup"><span data-stu-id="d2195-130">This one time call occurs either when the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called because the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance detected a change, or when the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called on the <see cref="T:System.Runtime.Caching.ChangeMonitor" />, whichever occurs first.</span></span>  
  
<span data-ttu-id="d2195-131">-Wystąpienie dostarczone <see cref="T:System.Runtime.Caching.ObjectCache" /> przez implementację powinno usunąć skojarzoną pozycję pamięci podręcznej i określić przyczynę przy użyciu <see cref="F:System.Web.Caching.CacheItemRemovedReason.DependencyChanged" /> wyliczenia. <see cref="T:System.Runtime.Caching.OnChangedCallback" /></span><span class="sxs-lookup"><span data-stu-id="d2195-131">-   The <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance that is provided by an <see cref="T:System.Runtime.Caching.ObjectCache" /> implementation should remove the associated cache entry and specify a reason by using the <see cref="F:System.Web.Caching.CacheItemRemovedReason.DependencyChanged" /> enumeration.</span></span>  
  
<span data-ttu-id="d2195-132">-Wystąpienie może <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> wywołać metodę albo przed implementacją pamięci podręcznej o <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> wywołaniu metody lub po. <see cref="T:System.Runtime.Caching.ChangeMonitor" /></span><span class="sxs-lookup"><span data-stu-id="d2195-132">-   A <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method either before a cache implementation has called <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method or after.</span></span> <span data-ttu-id="d2195-133"><see cref="T:System.Runtime.Caching.ChangeMonitor" /> <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> Jeśli metoda jest wywoływana przed <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> wywołaniem, implementacja podstawowa będzie powiadamiać pamięć podręczną o tym, że wystąpiła, i wyzwoli wywołanie zwrotne do natychmiast po wywołaniu. <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /></span><span class="sxs-lookup"><span data-stu-id="d2195-133">If the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called before <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called, the base <see cref="T:System.Runtime.Caching.ChangeMonitor" /> implementation will notify the cache that this has occurred and will trigger the callback to be passed to <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> immediately when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is invoked.</span></span> <span data-ttu-id="d2195-134">Wszystkie dane stanu, które są przesyłane do <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> metody są zapisywane przez Monitor zmian, a następnie przekazywać <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> do metody, gdy <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> wywoływana jest metoda.</span><span class="sxs-lookup"><span data-stu-id="d2195-134">Any state data that is passed to the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is saved by the change monitor and subsequently passed to the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method when the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method is invoked.</span></span>  
  
<span data-ttu-id="d2195-135">-Monitor zmian musi implementować <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> metodę.</span><span class="sxs-lookup"><span data-stu-id="d2195-135">-   A change monitor must implement the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method.</span></span> <span data-ttu-id="d2195-136">Aby uzyskać więcej informacji, zobacz <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> dokumentację metody.</span><span class="sxs-lookup"><span data-stu-id="d2195-136">For more information, see the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method documentation.</span></span>  
  
<span data-ttu-id="d2195-137">-Przeciążenie <see cref="T:System.Runtime.Caching.ChangeMonitor" /> metody musi być wywołana do usuwania wystąpienia. <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /></span><span class="sxs-lookup"><span data-stu-id="d2195-137">-   The <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method overload must be called to dispose of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span></span> <span data-ttu-id="d2195-138">Reguły wywoływania metody Dispose są następujące:</span><span class="sxs-lookup"><span data-stu-id="d2195-138">The rules for calling Dispose are as follows:</span></span> 
<span data-ttu-id="d2195-139">-Przed wstawieniem elementu do pamięci podręcznej jest odpowiedzialny obiekt wywołujący do usuwania <see cref="T:System.Runtime.Caching.ChangeMonitor" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="d2195-139">-   Before an item is inserted into the cache, it is the responsibility of caller to dispose of a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span></span>  
  
<span data-ttu-id="d2195-140">— Gdy element pamięci podręcznej i <see cref="T:System.Runtime.Caching.ChangeMonitor" /> skojarzone z nim wystąpienia są przesyłane do pamięci podręcznej, implementacja pamięci podręcznej musi upewnić się, <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> że metoda jest wywoływana, nawet jeśli nie powiedzie się Wstawianie.</span><span class="sxs-lookup"><span data-stu-id="d2195-140">-   Once cache item and the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instances that are associated with it are passed to a cache, the cache implementer must make sure that the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, even if the insert fails.</span></span>  
  
<span data-ttu-id="d2195-141">-Po przekazaniu elementu i <see cref="T:System.Runtime.Caching.ChangeMonitor" /> skojarzonych z nim wystąpień do pamięci podręcznej obiekt wywołujący nie może usunąć zależności, <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> ponieważ gdy metoda jest wywoływana, wywołanie jest traktowane tak, jakby zależność została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="d2195-141">-   After an item and its associated <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instances are passed to a cache, the caller must not dispose the dependency because when the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, the call is treated as if the dependency has changed.</span></span> <span data-ttu-id="d2195-142">W efekcie <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> Metoda jest wywoływana automatycznie.</span><span class="sxs-lookup"><span data-stu-id="d2195-142">As a result, the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is automatically invoked.</span></span>  
  
<span data-ttu-id="d2195-143">Biorąc pod uwagę te reguły, <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> Metoda musi być wywoływana w jeden z następujących sposobów:</span><span class="sxs-lookup"><span data-stu-id="d2195-143">-   Taking these rules into consideration, the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method must be called in one of the following ways:</span></span> 
<span data-ttu-id="d2195-144">— Użytkownicy muszą wywoływać <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> Przeciążenie metody, jeśli zdecydują się nie wstawić pochodnego wystąpienia zmiany-monitora do pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="d2195-144">-   Users must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method overload if they decide not to insert the derived change-monitor instance into a cache.</span></span>  
  
<span data-ttu-id="d2195-145">— Jeśli implementacja próbuje wstawić wystąpienie usługi Change-monitor do pamięci podręcznej obiektów, ale operacja wstawiania nie powiedzie się, implementacja pamięci podręcznej jest odpowiedzialna za wywołanie <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="d2195-145">-   If the implementation tries to insert the change-monitor instance into an object cache but the insertion fails, the cache implementation is responsible for calling the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> overload.</span></span> <span data-ttu-id="d2195-146">Gdy próba wstawienia powoduje wyjątek, implementacja pamięci podręcznej musi dysponować wszystkimi skojarzonymi zależnościami.</span><span class="sxs-lookup"><span data-stu-id="d2195-146">When the insertion attempt causes an exception, the cache implementation must dispose of any associated dependencies.</span></span>  
  
<span data-ttu-id="d2195-147">— Jeśli wpis pamięci podręcznej zostanie usunięty, implementacja pamięci podręcznej musi również usunąć zależność.</span><span class="sxs-lookup"><span data-stu-id="d2195-147">-   If the cache entry is removed, the cache implementation must also dispose of the dependency.</span></span>  
  
<span data-ttu-id="d2195-148">— Wewnętrzna implementacja <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> metody automatycznie <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> wywołuje metodę po wywołaniu wywołania zwrotnego, które jest rejestrowane za pomocą <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />.</span><span class="sxs-lookup"><span data-stu-id="d2195-148">-   The internal implementation of the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method automatically calls the <see cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" /> method after it calls a callback that is registered through <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="d2195-149">To automatyczne wywołanie metody Dispose w trakcie wyzwalania zdarzenia występuje tylko wtedy, gdy Inicjalizacja <see cref="T:System.Runtime.Caching.ChangeMonitor" /> wystąpienia została wcześniej ukończona.</span><span class="sxs-lookup"><span data-stu-id="d2195-149">This automatic call to the dispose method during the event firing only occurs if the initialization of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance was previously completed.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="d2195-150">Gdy Konstruktor pochodnego monitora zmian wywołuje <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> metodę, jeśli stan monitora zmian został już zmieniony (oznacza to, że monitorowany stan został już zmieniony, gdy Konstruktor był nadal aktywny), <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> a następnie metoda zostanie Automatycznie usuwaj monitor zmian.</span><span class="sxs-lookup"><span data-stu-id="d2195-150">When a derived change monitor's constructor calls the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method, if the state of the change monitor has already changed (that is, the state that is monitored already changed when the constructor was still active) then the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method will automatically dispose of the change monitor.</span></span>  
  
<span data-ttu-id="d2195-151"><see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> <see cref="T:System.Runtime.Caching.OnChangedCallback" /> <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> -Właściwość jest ustawiona na <see langword="true" /> po wywołaniu metody przez pochodne wystąpienie monitora zmian, niezależnie od tego, czy obiekt został ustawiony przez wywołanie metody, czy nie. <see cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" /></span><span class="sxs-lookup"><span data-stu-id="d2195-151">-   The <see cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" /> property is set to <see langword="true" /> after the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called by the derived change-monitor instance, regardless of whether a <see cref="T:System.Runtime.Caching.OnChangedCallback" /> object has been set by a call to the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method or not.</span></span></para></block>
    <altmember cref="N:System.Web.Caching" />
    <altmember cref="T:System.Runtime.Caching.ObjectCache" />
    <related type="Article" href="https://msdn.microsoft.com/library/ac11c8ea-df5d-4de8-b315-9ccf1048b0ce"><span data-ttu-id="d2195-152">Buforowanie ASP.NET</span><span class="sxs-lookup"><span data-stu-id="d2195-152">ASP.NET Caching</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChangeMonitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChangeMonitor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2195-153">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Caching.ChangeMonitor" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d2195-153">Initializes a new instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span> <span data-ttu-id="d2195-154">Ten konstruktor jest wywoływany z konstruktorów w klasach pochodnych w celu zainicjowania klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="d2195-154">This constructor is called from constructors in derived classes to initialize the base class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2195-155"><xref:System.Runtime.Caching.ChangeMonitor> Klasa ma Konstruktor bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="d2195-155">The <xref:System.Runtime.Caching.ChangeMonitor> class has a parameterless constructor.</span></span> <span data-ttu-id="d2195-156">Jednak klasy dziedziczące z klasy podstawowej <xref:System.Runtime.Caching.ChangeMonitor> i definiują niestandardowe zachowanie monitorowania zmian muszą wykonać inicjalizację w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="d2195-156">However, classes that inherit from the base <xref:System.Runtime.Caching.ChangeMonitor> class and define custom change-monitoring behavior must perform initialization in the constructor.</span></span> <span data-ttu-id="d2195-157">Aby uzyskać więcej informacji, zapoznaj się z sekcją uwagi dotyczące dziedziczenia.</span><span class="sxs-lookup"><span data-stu-id="d2195-157">For more information, see the Notes for Inheritors section.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d2195-158">Konstruktor klasy pochodnej musi ustawiać <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> właściwość, rozpoczynać monitorowanie i <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> wywoływać klasę przed zwróceniem.</span><span class="sxs-lookup"><span data-stu-id="d2195-158">The constructor of a derived class must set the <see cref="P:System.Runtime.Caching.ChangeMonitor.UniqueId" /> property, begin monitoring, and call the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> class before it returns.</span></span> <span data-ttu-id="d2195-159">Jeśli zależność zostanie zmieniona przed ukończeniem inicjalizacji (na przykład jeśli w pamięci podręcznej nie znaleziono zależnego klucza pamięci podręcznej), Konstruktor <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> musi wywołać metodę przed <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> wywołaniem metody.</span><span class="sxs-lookup"><span data-stu-id="d2195-159">If a dependency changes before initialization is complete (for example, if a dependent cache key is not found in the cache), the constructor must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method before it calls the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method.</span></span> <span data-ttu-id="d2195-160">W takim przypadku Konstruktor może wywołać <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> metodę dopiero <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> po wywołaniu metody, ponieważ <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> Metoda zgłasza wyjątek, jeśli Inicjalizacja nie została ukończona.</span><span class="sxs-lookup"><span data-stu-id="d2195-160">In this case, constructor can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method only after the <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method is called, because the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method throws an exception if initialization is not completed.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d2195-161">Zwalnia wszystkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Runtime.Caching.ChangeMonitor" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d2195-161">Releases all resources used by the current instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2195-162">Metoda jest używana do <xref:System.Runtime.Caching.ChangeMonitor> zwalniania wystąpienia i powiązanych zasobów. <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A></span><span class="sxs-lookup"><span data-stu-id="d2195-162">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is used to release the <xref:System.Runtime.Caching.ChangeMonitor> instance and related resources.</span></span> <span data-ttu-id="d2195-163">Metoda publiczna <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> jest wywoływana w celu koordynowania procesu usuwania przy użyciu zdarzeń cykl życia kluczy pochodnych pochodnej klasy monitorowania (na przykład inicjalizacji) i <xref:System.Runtime.Caching.ChangeMonitor> zwolnienia wystąpienia, tak aby wystąpienie może być zbierane jako elementy bezużyteczne.</span><span class="sxs-lookup"><span data-stu-id="d2195-163">The public <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is invoked to coordinate the disposal process with key life-cycle events of derived change-monitor classes (such as initialization), and to release the <xref:System.Runtime.Caching.ChangeMonitor> instance so that the instance can be garbage collected.</span></span> <span data-ttu-id="d2195-164"><xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Metoda jest implementowana przez pochodne klasy monitora zmian do usuwania zasobów zarządzanych i niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="d2195-164">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is implemented by derived change-monitor classes to dispose of their managed and unmanaged resources.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="changeMonitor.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2195-165">Zwalnia wszystkie zasoby, które są używane przez bieżące wystąpienie <see cref="T:System.Runtime.Caching.ChangeMonitor" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d2195-165">Releases all resources that are used by the current instance of the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2195-166"><xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Metoda<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> wywołuje metodę klasy pochodnej tylko jeden raz, przy pierwszym wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="d2195-166">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method invokes the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method of derived classes only one time, the first time it is called.</span></span> <span data-ttu-id="d2195-167">Kolejne wywołania <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metody nie mają żadnego efektu.</span><span class="sxs-lookup"><span data-stu-id="d2195-167">Subsequent calls to the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method have no effect.</span></span> <span data-ttu-id="d2195-168">Po wywołaniu <xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A> metody właściwość jest ustawiana na `true`.</span><span class="sxs-lookup"><span data-stu-id="d2195-168">After the method has been called, the <xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="d2195-169">Przeciążenie <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> należy wywołać, aby usunąć <xref:System.Runtime.Caching.ChangeMonitor> wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="d2195-169">The <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> overload must be called to dispose of a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span> <span data-ttu-id="d2195-170">Poniżej przedstawiono reguły wywoływania metody Dispose:</span><span class="sxs-lookup"><span data-stu-id="d2195-170">The following are the rules for calling the dispose method:</span></span>  
  
-   <span data-ttu-id="d2195-171">Zanim element zostanie wstawiony do pamięci podręcznej, jest on odpowiedzialny za <xref:System.Runtime.Caching.ChangeMonitor> usuwanie wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="d2195-171">Before an item is inserted into the cache, it is the caller's responsibility to dispose of a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span>  
  
-   <span data-ttu-id="d2195-172">Gdy element pamięci podręcznej i <xref:System.Runtime.Caching.ChangeMonitor> skojarzone z nim wystąpienia są przesyłane do pamięci podręcznej, implementacja pamięci podręcznej musi upewnić się, że <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> jest wywoływana, nawet jeśli nie powiedzie się Wstawianie.</span><span class="sxs-lookup"><span data-stu-id="d2195-172">Once cache item and the <xref:System.Runtime.Caching.ChangeMonitor> instances that are associated with it are passed to a cache, the cache implementer that must make sure that <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> is called, even if the insert fails.</span></span>  
  
-   <span data-ttu-id="d2195-173">Gdy element i jego skojarzone <xref:System.Runtime.Caching.ChangeMonitor> wystąpienia są przesyłane do pamięci podręcznej, obiekt wywołujący nie może usunąć zależności, ponieważ gdy Metodajestwywoływana,wywołaniejesttraktowanetak,jakbyzależnośćzostałazmieniona.<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A></span><span class="sxs-lookup"><span data-stu-id="d2195-173">After an item and its associated <xref:System.Runtime.Caching.ChangeMonitor> instances are passed to a cache, the caller must not dispose the dependency because when the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method is called, the call is treated as if the dependency has changed.</span></span> <span data-ttu-id="d2195-174">W efekcie <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Metoda jest wywoływana automatycznie.</span><span class="sxs-lookup"><span data-stu-id="d2195-174">As a result, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is automatically invoked.</span></span>  
  
-   <span data-ttu-id="d2195-175">Biorąc pod uwagę te reguły, <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Metoda musi być wywoływana w jeden z następujących sposobów:</span><span class="sxs-lookup"><span data-stu-id="d2195-175">Taking these rules into consideration, the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method must be called in one of the following ways:</span></span>  
  
    -   <span data-ttu-id="d2195-176">Użytkownicy muszą wywoływać <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> Przeciążenie metody, jeśli zdecydują, że nie należy wstawiać pochodnego wystąpienia zmian-monitor do pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="d2195-176">Users must call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method overload if they decide not to insert the derived change-monitor instance into a cache.</span></span>  
  
    -   <span data-ttu-id="d2195-177">Implementacja pamięci podręcznej jest odpowiedzialna <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> za wywołanie przeciążenia, jeśli implementacja próbuje wstawić wystąpienie monitorowania zmian do pamięci podręcznej obiektów, ale nie można wykonać operacji wstawiania.</span><span class="sxs-lookup"><span data-stu-id="d2195-177">The cache implementation is responsible for calling the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> overload if the implementation tries to insert the change-monitor instance into an object cache but the insertion fails.</span></span> <span data-ttu-id="d2195-178">Gdy próba wstawienia powoduje wyjątek, implementacja pamięci podręcznej musi usunąć wszystkie skojarzone zależności.</span><span class="sxs-lookup"><span data-stu-id="d2195-178">When the insertion attempt causes an exception, the cache implementation must dispose any associated dependencies.</span></span>  
  
    -   <span data-ttu-id="d2195-179">W przypadku usunięcia wpisu pamięci podręcznej, implementacja pamięci podręcznej musi również zlikwidować zależność.</span><span class="sxs-lookup"><span data-stu-id="d2195-179">If the cache entry is removed, the cache implementation must also dispose the dependency.</span></span>  
  
 <span data-ttu-id="d2195-180">Wewnętrzna implementacja <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> metody automatycznie <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> wywołuje metodę po wywołaniu wywołania zwrotnego <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> , które jest zarejestrowane za pomocą metody.</span><span class="sxs-lookup"><span data-stu-id="d2195-180">The internal implementation of the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method automatically calls the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method after it calls a callback that is registered through the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2195-181">Ta automatyczna metoda Dispose podczas wyzwalania zdarzenia występuje tylko wtedy, gdy Inicjalizacja <xref:System.Runtime.Caching.ChangeMonitor> wystąpienia została wcześniej ukończona.</span><span class="sxs-lookup"><span data-stu-id="d2195-181">This automatic dispose during the event firing only occurs if the initialization of the <xref:System.Runtime.Caching.ChangeMonitor> instance previously completed.</span></span>  
  
 <span data-ttu-id="d2195-182">Gdy Konstruktor pochodnego monitora zmian wywołuje <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> metodę, jeśli stan monitora zmian został już zmieniony (oznacza to, że monitorowany stan został już zmieniony, gdy Konstruktor był nadal aktywny), a następnie <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> Metoda zostanie automatycznie Usuń monitor zmian.</span><span class="sxs-lookup"><span data-stu-id="d2195-182">When a derived change monitor's constructor calls the <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method, if the state of the change monitor has already changed (that is, the state that is monitored has already changed when the constructor was still active) then <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method will automatically dispose the change monitor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2195-183">Użytkownicy nie powinni wywoływać <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d2195-183">Users should not call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method.</span></span> <span data-ttu-id="d2195-184">Nie można jednak uniemożliwić użytkownikom wywoływania metody.</span><span class="sxs-lookup"><span data-stu-id="d2195-184">However, you cannot prevent users from calling the method.</span></span> <span data-ttu-id="d2195-185">W związku z <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> tym, metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="d2195-185">Therefore, if they do, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is invoked.</span></span> <span data-ttu-id="d2195-186">W takim przypadku wpis pamięci podręcznej zostanie powiadomiony, jakby zmieniono zależność.</span><span class="sxs-lookup"><span data-stu-id="d2195-186">In that case, the cache entry is notified as if the dependency has changed.</span></span>  
  
 <span data-ttu-id="d2195-187">Aby zapobiec klasie pochodnej przed zastępowaniem <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metody, metoda nie jest jawną implementacją interfejsu.</span><span class="sxs-lookup"><span data-stu-id="d2195-187">To prevent derived classes from overriding <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method, the method is not an explicit interface implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2195-188">Inicjalizacja nie została ukończona w pochodnej klasie monitora zmian, która wywołała metodę bazową <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> .</span><span class="sxs-lookup"><span data-stu-id="d2195-188">Initialization is not complete in the derived change-monitor class that called the base <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method.</span></span></exception>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected abstract void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit" Usage="changeMonitor.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="d2195-189"><see langword="true" />zwalnianie zasobów zarządzanych i niezarządzanych oraz dowolnych <see cref="T:System.Runtime.Caching.ChangeMonitor" /> odwołań do wystąpienia; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="d2195-189"><see langword="true" /> to release managed and unmanaged resources and any references to a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance; <see langword="false" /> to release only unmanaged resources.</span></span> <span data-ttu-id="d2195-190">Gdy <see langword="false" /> jest przekazano <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> , <see langword="finalizer" /> Metoda jest wywoływana przez wątek, a wszystkie zewnętrzne odwołania zarządzane prawdopodobnie nie są już prawidłowe, ponieważ zostały już pobrane jako elementy bezużyteczne.</span><span class="sxs-lookup"><span data-stu-id="d2195-190">When <see langword="false" /> is passed, the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method is called by a <see langword="finalizer" /> thread and any external managed references are likely no longer valid because they have already been garbage collected.</span></span></param>
        <summary><span data-ttu-id="d2195-191">Zwalnia wszystkie zasoby zarządzane i niezarządzane oraz wszystkie odwołania do <see cref="T:System.Runtime.Caching.ChangeMonitor" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="d2195-191">Releases all managed and unmanaged resources and any references to the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance.</span></span> <span data-ttu-id="d2195-192">To Przeciążenie musi być zaimplementowane przez pochodne klasy monitora zmian.</span><span class="sxs-lookup"><span data-stu-id="d2195-192">This overload must be implemented by derived change-monitor classes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2195-193">Gdy wartość `disposing` jest `true`równa, wszystkie zarządzane i niezarządzane zasoby są usuwane i wszystkie odwołania do tego obiektu są zwalniane, aby pochodne wystąpienie monitora zmian może być zbierane jako elementy bezużyteczne.</span><span class="sxs-lookup"><span data-stu-id="d2195-193">When the value of `disposing` value is `true`, all managed and unmanaged resources are disposed and any references to this object are released so that the derived change-monitor instance can be garbage collected.</span></span> <span data-ttu-id="d2195-194">Jest gwarantowane, że metoda <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> podstawowa wywoła zaimplementowaną <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metodę tylko jeden raz.</span><span class="sxs-lookup"><span data-stu-id="d2195-194">It is guaranteed that the base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method will invoke the implemented <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method only one time.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d2195-195">Monitor zmian musi zaimplementować Przeciążenie, <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> aby zwolnić wszystkie zarządzane i niezarządzane zasoby, gdy <paramref name="disposing" /> wartość jest <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="d2195-195">A change monitor must implement the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> overload to release all managed and unmanaged resources when the value of <paramref name="disposing" /> is <see langword="true" />.</span></span> <span data-ttu-id="d2195-196">Przeciążenie metody, która <paramref name="disposing" /> ma wartość <see langword="true" /> , jest wywoływana tylko raz, a mianowicie, gdy wystąpienie zostanie usunięte po raz pierwszy. <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /></span><span class="sxs-lookup"><span data-stu-id="d2195-196">The <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method overload that has a <paramref name="disposing" /> value of <see langword="true" /> is called only one time, namely, when the instance is disposed for the first time.</span></span> <span data-ttu-id="d2195-197">Monitor zmian nie może wywoływać <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> bezpośredniego przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="d2195-197">A change monitor must not call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> overload directly.</span></span> <span data-ttu-id="d2195-198">Pochodny monitor zmian może wywoływać publiczną <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> metodę bez parametrów w klasie bazowej. <see cref="T:System.Runtime.Caching.ChangeMonitor" /></span><span class="sxs-lookup"><span data-stu-id="d2195-198">A derived change monitor can call the public parameter-less <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method on the base <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class.</span></span>  
  
<span data-ttu-id="d2195-199">Alternatywnie, monitor zmian może zaimplementować metodę finalizatora.</span><span class="sxs-lookup"><span data-stu-id="d2195-199">Alternatively, a change monitor can implement a finalizer method.</span></span> <span data-ttu-id="d2195-200">W takim przypadku finalizator może wywołać <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> metodę i przekazać ją do <paramref name="disposing" /> wartości <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d2195-200">In that case, the finalizer can invoke the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method and pass it a <paramref name="disposing" /> value of <see langword="false" />.</span></span> <span data-ttu-id="d2195-201">Jest to jednak zwykle zbędne.</span><span class="sxs-lookup"><span data-stu-id="d2195-201">However, this is usually unnecessary.</span></span> <span data-ttu-id="d2195-202">Monitorowanie zmian zależności jest zwykle wykonywane przez usługę, która utrzymuje odwołanie do wystąpienia zmiany-monitor.</span><span class="sxs-lookup"><span data-stu-id="d2195-202">Monitoring for dependency changes is typically performed by a service that maintains a reference to the change-monitor instance.</span></span> <span data-ttu-id="d2195-203">Odwołanie uniemożliwia wystąpienie nie jest zbierane jako elementy bezużyteczne i w związku z tym sprawia, że metoda finalizatora nie jest konieczna.</span><span class="sxs-lookup"><span data-stu-id="d2195-203">The reference prevents the instance from being garbage collected, and therefore makes a finalizer method unnecessary.</span></span> <span data-ttu-id="d2195-204">Aby uniknąć przecieków pamięci, gdy zmienia się zależność, <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> Metoda usuwa wystąpienie z monitorem zmian (chyba że inicjalizacja nie została ukończona).</span><span class="sxs-lookup"><span data-stu-id="d2195-204">To avoid memory leaks, when a dependency changes, the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method disposes the change-monitor instance (unless initialization has not finished).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="HasChanged">
      <MemberSignature Language="C#" Value="public bool HasChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanged" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.HasChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanged : bool" Usage="System.Runtime.Caching.ChangeMonitor.HasChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2195-205">Pobiera wartość, która wskazuje, że stan monitorowany przez <see cref="T:System.Runtime.Caching.ChangeMonitor" /> klasę został zmieniony.</span><span class="sxs-lookup"><span data-stu-id="d2195-205">Gets a value that indicates that the state that is monitored by the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class has changed.</span></span></summary>
        <value><span data-ttu-id="d2195-206"><see langword="true" />Jeśli stan monitorowany przez <see cref="T:System.Runtime.Caching.ChangeMonitor" /> wystąpienie został zmieniony; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="d2195-206"><see langword="true" /> if the state that is monitored by the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance has changed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2195-207">Możesz sprawdzić wartość tej właściwości w klasie pochodnej <xref:System.Runtime.Caching.ChangeMonitor> , aby sprawdzić, czy zależność została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="d2195-207">You can check the value of this property in a derived <xref:System.Runtime.Caching.ChangeMonitor> class to see whether a dependency has changed.</span></span>  
  
 <span data-ttu-id="d2195-208">Wartość jest ustawiana `true` po wystąpieniu zmiany zależności (to jest, <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> gdy wywoływana jest metoda).</span><span class="sxs-lookup"><span data-stu-id="d2195-208">The value is set to `true` when a dependency change occurs (that is, when the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called).</span></span> <span data-ttu-id="d2195-209"><xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> <xref:System.Runtime.Caching.OnChangedCallback> `true` <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> Po wywołaniu metodyprzezklasępochodnąwartośćwłaściwościbędzie,niezależnieodtego,czywystąpieniezostałopowiadomioneprzezwywołaniemetody.<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A></span><span class="sxs-lookup"><span data-stu-id="d2195-209">After the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called by the derived class, the value of the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property will be `true`, regardless of whether a <xref:System.Runtime.Caching.OnChangedCallback> instance has been notified by a call to the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2195-210">Obiekty wywołujące mogą sprawdzić <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> właściwość, aby sprawdzić, czy zależność została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="d2195-210">Callers can check the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property to see whether a dependency has changed.</span></span> <span data-ttu-id="d2195-211">Jednak w środowisku wielowątkowym prostsze i bardziej łatwiejsze w obsłudze podejście polega na wstawieniu danych do implementacji pamięci podręcznej bez sprawdzania <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d2195-211">However, in a multi-threaded environment, a simpler and more maintainable approach is to insert data into a cache implementation without checking the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property.</span></span> <span data-ttu-id="d2195-212">Implementacje pamięci podręcznej muszą sprawdzać <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> Właściwość i nie mogą wykonać operacji INSERT ani Set, jeśli co najmniej jedna skojarzona z nią zależność została już zmieniona.</span><span class="sxs-lookup"><span data-stu-id="d2195-212">Cache implementations must check the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property for you and must not perform an insert or set operation if one or more associated dependencies have already changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InitializationComplete">
      <MemberSignature Language="C#" Value="protected void InitializationComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializationComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializationComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializationComplete();" />
      <MemberSignature Language="F#" Value="member this.InitializationComplete : unit -&gt; unit" Usage="changeMonitor.InitializationComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2195-213">Wywoływana z konstruktora klas pochodnych, aby wskazać, że inicjalizacja została zakończona.</span><span class="sxs-lookup"><span data-stu-id="d2195-213">Called from the constructor of derived classes to indicate that initialization is finished.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2195-214">Jeśli zależność zmian przed inicjalizacją zostanie zakończona w klasie pochodnej, Konstruktor klasy pochodnej musi wywołać <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="d2195-214">If a dependency changes before initialization is complete in a derived class, the constructor of the derived class must invoke the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method.</span></span>  
  
 <span data-ttu-id="d2195-215">Gdy metoda jest wywoływana <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> , właściwość jest automatycznie ustawiana na `true` przez Monitor zmian. <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A></span><span class="sxs-lookup"><span data-stu-id="d2195-215">When the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is invoked, the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property is automatically set to `true` by the change monitor.</span></span> <span data-ttu-id="d2195-216">W związku z tym, gdy Konstruktor zmiany wywoła <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> metodę, Klasa bazowa automatycznie <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> wywoła metodę.</span><span class="sxs-lookup"><span data-stu-id="d2195-216">As a result, when the change monitor's constructor calls the <xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A> method, the base class will automatically call the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method.</span></span> <span data-ttu-id="d2195-217">Jeśli inicjalizacja zakończyła <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> się, metoda automatycznie usuwa pochodne wystąpienie monitora zmian.</span><span class="sxs-lookup"><span data-stu-id="d2195-217">If initialization is complete, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method automatically disposes the derived change-monitor instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d2195-218">Konstruktor klasy pochodnej musi wywoływać metodę bazową <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> przed zwróceniem konstruktora.</span><span class="sxs-lookup"><span data-stu-id="d2195-218">The constructor of a derived class must call the base <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> method before the constructor returns.</span></span> <span data-ttu-id="d2195-219">Konstruktor klasy pochodnej może wywoływać <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> metodę tylko po <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> wywołaniu metody, ponieważ <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> Metoda zgłasza wyjątek, jeśli Inicjalizacja nie została ukończona.</span><span class="sxs-lookup"><span data-stu-id="d2195-219">The constructor of a derived class can call the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method only after <see cref="M:System.Runtime.Caching.ChangeMonitor.InitializationComplete" /> is called, because the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method throws an exception if initialization is not completed.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Runtime.Caching.ChangeMonitor.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2195-220">Pobiera wartość, która wskazuje, że pochodne wystąpienie <see cref="T:System.Runtime.Caching.ChangeMonitor" /> klasy zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="d2195-220">Gets a value that indicates that the derived instance of a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class is disposed.</span></span></summary>
        <value><span data-ttu-id="d2195-221"><see langword="true" />Jeśli wystąpienie zostanie usunięte; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="d2195-221"><see langword="true" /> if the instance is disposed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2195-222">Właściwość jest ustawiona na `true` , gdy metoda bazowa <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> wywoła <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> metodę w klasie pochodnej do usuwania wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="d2195-222">The property is set to `true` after the base <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method calls the <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A> method in a derived class to dispose of the instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnChanged">
      <MemberSignature Language="C#" Value="public void NotifyOnChanged (System.Runtime.Caching.OnChangedCallback onChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NotifyOnChanged(class System.Runtime.Caching.OnChangedCallback onChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyOnChanged(System::Runtime::Caching::OnChangedCallback ^ onChangedCallback);" />
      <MemberSignature Language="F#" Value="member this.NotifyOnChanged : System.Runtime.Caching.OnChangedCallback -&gt; unit" Usage="changeMonitor.NotifyOnChanged onChangedCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onChangedCallback" Type="System.Runtime.Caching.OnChangedCallback" />
      </Parameters>
      <Docs>
        <param name="onChangedCallback"><span data-ttu-id="d2195-223">Odwołanie do metody, która jest wywoływana, gdy zależność została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="d2195-223">A reference to a method that is invoked when a dependency has changed.</span></span></param>
        <summary><span data-ttu-id="d2195-224">Wywoływane przez implementacje pamięci podręcznej w celu zarejestrowania <see cref="T:System.Runtime.Caching.ObjectCache" /> wywołania zwrotnego <see cref="T:System.Runtime.Caching.OnChangedCallback" /> i powiadomienia wystąpienia za pomocą delegata, gdy zależność została zmieniona.</span><span class="sxs-lookup"><span data-stu-id="d2195-224">Called by Cache implementers to register a callback and notify an <see cref="T:System.Runtime.Caching.ObjectCache" /> instance through the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> delegate when a dependency has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2195-225">Implementacje pamięci podręcznej używają tej metody do połączenia się z monitorem zmian.</span><span class="sxs-lookup"><span data-stu-id="d2195-225">Cache implementers use this method to wire themselves up to a change monitor.</span></span> <span data-ttu-id="d2195-226">W przypadku skojarzenia co najmniej jednego monitora zmian z elementem pamięci podręcznej do elementu <xref:System.Runtime.Caching.CacheItemPolicy> pamięci podręcznej zostanie przekazane wystąpienie z wypełnioną właściwością monitorowanych zmian.</span><span class="sxs-lookup"><span data-stu-id="d2195-226">If you associate one or more change monitors with the cache item, you pass a <xref:System.Runtime.Caching.CacheItemPolicy> instance with a populated change monitors property to the cache item.</span></span> <span data-ttu-id="d2195-227">Realizator pamięci podręcznej obsługujący monitory zmian jest odpowiedzialny za iterację <xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A> właściwości i <xref:System.Runtime.Caching.OnChangedCallback> rejestrowanie delegatów z każdym znalezionym monitorem zmian.</span><span class="sxs-lookup"><span data-stu-id="d2195-227">A cache implementer that supports change monitors is responsible for iterating over the <xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A> property and register the <xref:System.Runtime.Caching.OnChangedCallback> delegates with each change monitor that it finds.</span></span>  
  
 <span data-ttu-id="d2195-228"><xref:System.Runtime.Caching.OnChangedCallback> Ponieważ delegat zawiera opcjonalny parametr stanu, konkretna implementacja monitora zmian może przekazać opcjonalne informacje o stanie.</span><span class="sxs-lookup"><span data-stu-id="d2195-228">Because the <xref:System.Runtime.Caching.OnChangedCallback> delegate includes an optional state parameter, a concrete change monitor implementation can pass optional state information.</span></span> <span data-ttu-id="d2195-229">Implementacja pamięci podręcznej określa, czy w ramach wywołania zwrotnego można wykonać jawną zależność od typu stanu, który jest przekazywany przez niestandardowy monitor zmian.</span><span class="sxs-lookup"><span data-stu-id="d2195-229">The cache implementer determines whether an explicit dependency on the type of state that a custom change monitor passes as part of the callback can be taken.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d2195-230">Interfejs API rozszerzalności podstawowej pamięci podręcznej nie jest wymagany dla jawnej zależności od typu stanu.</span><span class="sxs-lookup"><span data-stu-id="d2195-230">The base cache extensibility API has no requirement for explicit dependency on the type of state.</span></span>  
  
 <span data-ttu-id="d2195-231">Implementacja <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> metody automatycznie określa, czy stan monitora został już zmieniony w momencie <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="d2195-231">The implementation of the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method automatically determines whether the state of the monitor has already changed at the time <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is called.</span></span> <span data-ttu-id="d2195-232">Jeśli właściwość ma `true`wartość, metoda automatycznie wywołuje <xref:System.Runtime.Caching.OnChangedCallback> <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> procedurę obsługi zdarzeń, która została zarejestrowana za pomocą metody. <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A></span><span class="sxs-lookup"><span data-stu-id="d2195-232">If the <xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A> property is `true`, then the method automatically calls the <xref:System.Runtime.Caching.OnChangedCallback> event handler, that was registered, through the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method.</span></span> <span data-ttu-id="d2195-233">Dzieje się tak, ponieważ istnieje możliwość, że od momentu utworzenia przez implementację pamięci podręcznej monitora zmian, w czasie gdy implementacja pamięci podręcznej pobiera monitor i nastąpi do niego okablowanie, zmieniony stan monitorowania uległ zmianie.</span><span class="sxs-lookup"><span data-stu-id="d2195-233">This occurs because it is possible that from the time a cache implementation creates a change monitor, to the time a cache implementation gets the monitor and wires itself up to it, the underlying monitored state has changed.</span></span> <span data-ttu-id="d2195-234">Jeśli stan został już zmieniony, obiekt, który jest przesyłany do <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> metody to. `null`</span><span class="sxs-lookup"><span data-stu-id="d2195-234">If the state has already changed then the object that is passed to the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is `null`.</span></span>  
  
 <span data-ttu-id="d2195-235"><xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> Metoda może być wywoływana tylko jeden raz i będzie zgłaszać wyjątek przy kolejnych wywołaniach.</span><span class="sxs-lookup"><span data-stu-id="d2195-235">The <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method can be invoked only one time, and will throw an exception on subsequent calls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2195-236">Metoda wywołania zwrotnego została już wywołana.</span><span class="sxs-lookup"><span data-stu-id="d2195-236">The callback method has already been invoked.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d2195-237"><paramref name="onChangedCallback" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d2195-237"><paramref name="onChangedCallback" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="d2195-238">1.  Należy wywołać metodę, <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> aby otrzymywać powiadomienia o wszelkich zmianach zależności.</span><span class="sxs-lookup"><span data-stu-id="d2195-238">1.  You must call the <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> method to be notified of any dependency changes.</span></span> <span data-ttu-id="d2195-239">Jeśli ta <see cref="T:System.Runtime.Caching.OnChangedCallback" /> zmiana zależności już wystąpi, wystąpienie zostanie wywołane, gdy <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> zostanie wywołane.</span><span class="sxs-lookup"><span data-stu-id="d2195-239">If a dependency change has already occurred, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called when <see cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" /> is called.</span></span> <span data-ttu-id="d2195-240">W przeciwnym razie <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> wystąpienie zostanie wywołane jednokrotnie, gdy wywoływana jest metoda lub gdy wywoływana jest metoda, w zależności od tego, która występuje w <see cref="T:System.Runtime.Caching.OnChangedCallback" /> pierwszej kolejności.</span><span class="sxs-lookup"><span data-stu-id="d2195-240">Otherwise, the <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance will be called one time, either when the <see cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" /> method is called or when the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose" /> method is called, whichever occurs first.</span></span> <span data-ttu-id="d2195-241"><see cref="T:System.Runtime.Caching.OnChangedCallback" /> Wystąpienie zapewniane przez implementację pamięci podręcznej powinno usunąć wpis pamięci podręcznej i jeśli jest żądane przez obiekt wywołujący pamięci podręcznej, podwyższyć wymagane zdarzenie zmiany lub aktualizacji z powrotem do oryginalnego obiektu wywołującego pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="d2195-241">The <see cref="T:System.Runtime.Caching.OnChangedCallback" /> instance provided by the cache implementation should remove the cache entry and if it is requested by the cache caller, raise the necessary change or update event back to the original cache caller.</span></span>  
  
<span data-ttu-id="d2195-242">2.</span><span class="sxs-lookup"><span data-stu-id="d2195-242">2.</span></span>  <span data-ttu-id="d2195-243">Implementacja pamięci podręcznej obiektów musi usunąć wpis pamięci podręcznej, który jest skojarzony ze zmianą zależności.</span><span class="sxs-lookup"><span data-stu-id="d2195-243">The object cache implementation must remove the cache entry that is associated with a dependency change.</span></span></para></block>
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected void OnChanged (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnChanged(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnChanged (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnChanged(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.OnChanged : obj -&gt; unit" Usage="changeMonitor.OnChanged state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="d2195-244">Dane dla zdarzenia zmiany.</span><span class="sxs-lookup"><span data-stu-id="d2195-244">The data for the change event.</span></span> <span data-ttu-id="d2195-245">Ta wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="d2195-245">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d2195-246">Wywoływane przez klasy pochodne, aby zgłosić zdarzenie w przypadku zmiany zależności.</span><span class="sxs-lookup"><span data-stu-id="d2195-246">Called by derived classes to raise the event when a dependency changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2195-247">Zazwyczaj <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> Metoda jest wywoływana, gdy występuje zmiana zależności.</span><span class="sxs-lookup"><span data-stu-id="d2195-247">Typically, the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called when dependency changes occur.</span></span> <span data-ttu-id="d2195-248">Metoda <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> jest również wywoływana, gdy wystąpienie monitora zmian jest usuwane, ale usuwanie następuje tylko wtedy, gdy wywołanie zwrotne nie zostało już wywołane.</span><span class="sxs-lookup"><span data-stu-id="d2195-248">The <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is also invoked when a change-monitor instance is disposed but the disposal occurs only if the callback has not already been invoked.</span></span>  
  
 <span data-ttu-id="d2195-249">Jeśli metoda jest wywoływana <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> przed wywołaniem metody, dane stanu <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> z wywołania metody są zapisywane przez implementację pamięci podręcznej. <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A></span><span class="sxs-lookup"><span data-stu-id="d2195-249">If the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is called before the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is called, the state data from the call to the <xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> method is saved by the cache implementation.</span></span> <span data-ttu-id="d2195-250">Ponadto wywołanie zwrotne do <xref:System.Runtime.Caching.OnChangedCallback> metody jest wywoływana natychmiast <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> po wywołaniu metody.</span><span class="sxs-lookup"><span data-stu-id="d2195-250">Also, the callback to the <xref:System.Runtime.Caching.OnChangedCallback> method is invoked immediately when the <xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A> method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Runtime.Caching.ChangeMonitor.Dispose" />
        <altmember cref="M:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)" />
        <altmember cref="P:System.Runtime.Caching.ChangeMonitor.HasChanged" />
      </Docs>
    </Member>
    <Member MemberName="UniqueId">
      <MemberSignature Language="C#" Value="public abstract string UniqueId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ChangeMonitor.UniqueId" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UniqueId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ UniqueId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueId : string" Usage="System.Runtime.Caching.ChangeMonitor.UniqueId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2195-251">Pobiera wartość reprezentującą <see cref="T:System.Runtime.Caching.ChangeMonitor" /> wystąpienie klasy.</span><span class="sxs-lookup"><span data-stu-id="d2195-251">Gets a value that represents the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class instance.</span></span></summary>
        <value><span data-ttu-id="d2195-252">Identyfikator wystąpienia zmiany-monitora.</span><span class="sxs-lookup"><span data-stu-id="d2195-252">The identifier for a change-monitor instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2195-253">Wartość właściwości zwykle składa się z nazw zależności połączonych ciągów, które jednoznacznie identyfikują dane monitorowane <xref:System.Runtime.Caching.ChangeMonitor> przez wystąpienie. <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A></span><span class="sxs-lookup"><span data-stu-id="d2195-253">The <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> property value typically consists of dependency names combined string data that uniquely identifiers the data that is being monitored by a <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span> <span data-ttu-id="d2195-254">Wartość <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> właściwości jest ciągiem.</span><span class="sxs-lookup"><span data-stu-id="d2195-254">The value of the <xref:System.Runtime.Caching.ChangeMonitor.UniqueId%2A> property is a string.</span></span> <span data-ttu-id="d2195-255">Wartość ciągu służy do przypisywania unikatowego identyfikatora <xref:System.Runtime.Caching.ChangeMonitor> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="d2195-255">The value of the string is used to assign the unique ID of the <xref:System.Runtime.Caching.ChangeMonitor> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d2195-256">Zastępując właściwość, można zdefiniować implementację niestandardową dla wartości ciągu właściwości w celu przypisania jej do unikatowego identyfikatora.</span><span class="sxs-lookup"><span data-stu-id="d2195-256">By overriding the property, you can define a custom implementation for the string value of the property in order to assign it a unique ID.</span></span></para></block>
        <block subset="none" type="overrides"><para><span data-ttu-id="d2195-257">W klasach pochodnych należy ustawić wartość właściwości w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="d2195-257">In derived classes, you must set the value of the property in the constructor.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>