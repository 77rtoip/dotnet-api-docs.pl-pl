<Type Name="OnChangedCallback" FullName="System.Runtime.Caching.OnChangedCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2002a06afbd88f66e9c63097d37040a293eee4b9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69275438" /></Metadata><TypeSignature Language="C#" Value="public delegate void OnChangedCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OnChangedCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.OnChangedCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub OnChangedCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void OnChangedCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type OnChangedCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">Stan obiektu zależnego, który został zmieniony.</param>
    <summary>Definiuje odwołanie do metody, która obsługuje zmiany monitorowanych elementów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.OnChangedCallback> Delegat jest używany przez Monitor zmian, aby sygnalizować implementację pamięci podręcznej, w której wystąpiła zmiana w obiekcie, którego zawartość jest buforowana. Zadaniem każdej implementacji <xref:System.Runtime.Caching.ChangeMonitor> typu jest monitorowanie zmian w buforowanych obiektach. Na przykład, jeśli zawartość pliku jest zawarta w wpisie pamięci podręcznej, a jeśli plik zostanie zaktualizowany, jego wpis związany z pamięcią podręczną należy również zmienić. W typowej implementacji pamięci podręcznej <xref:System.Runtime.Caching.ChangeMonitor> wystąpienie pochodne <xref:System.Runtime.Caching.OnChangedCallback> używa delegata do powiadomienia pamięci podręcznej o zmianie.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Caching.ChangeMonitor" />
  </Docs>
</Type>
