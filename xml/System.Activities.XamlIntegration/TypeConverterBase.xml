<Type Name="TypeConverterBase" FullName="System.Activities.XamlIntegration.TypeConverterBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="48d9e3e3e57815868ee4a18923a193d514f1cbf3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36717816" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TypeConverterBase : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeConverterBase extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Activities.XamlIntegration.TypeConverterBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypeConverterBase&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverterBase abstract : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type TypeConverterBase = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2f329-101">Udostępnia metody, które typu konwertera klas pochodnych można użyć do konwersji obiektów do i z różnych reprezentacji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2f329-101">Provides methods that derived type converter classes can use for converting objects to and from various representations.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.TypeConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverterBase.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="2f329-102">Informacje o kontekście, który jest używany na potrzeby konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-102">Context information that is used for conversion.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="2f329-103">Typ do przekonwertowania z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-103">The type to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f329-104">W przypadku przesłonięcia w klasie pochodnej, określa, czy określony typ można przekonwertować z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-104">When overridden in a derived class, determines whether the specified type can be converted from.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f329-105">
            <see langword="true" /> Jeśli można przekonwertować określony typ w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-105">
              <see langword="true" /> if the specified type can be converted from; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.TypeConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverterBase.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="2f329-106">Informacje o kontekście, który jest używany na potrzeby konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-106">Context information that is used for conversion.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="2f329-107">Typ docelowy konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-107">The type to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f329-108">W przypadku przesłonięcia w klasie pochodnej, określa, czy określony typ można przekonwertować na.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-108">When overridden in a derived class, determines whether the specified type can be converted to.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f329-109">
            <see langword="true" /> Jeśli można przekonwertować określonego typu. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-109">
              <see langword="true" /> if the specified type can be converted to; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.TypeConverterBase.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="typeConverterBase.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="2f329-110">Informacje o kontekście, który jest używany na potrzeby konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-110">Context information that is used for conversion.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="2f329-111">Opcjonalny <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-111">An optional <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="2f329-112">Jeśli nie zostanie podany, przyjmowana jest bieżącej kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-112">If not supplied, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2f329-113">Obiekt do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-113">The object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f329-114">W przypadku przesłonięcia w klasie pochodnej, konwertuje określoną wartość na reprezentację za pomocą nowego określony w klasie pochodnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-114">When overridden in a derived class, converts the specified value to a new representation specified by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f329-115">Przekonwertowana wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-115">The converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.TypeConverterBase.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="typeConverterBase.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="2f329-116">Informacje o kontekście, który jest używany na potrzeby konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-116">Context information that is used for conversion.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="2f329-117">Opcjonalny <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-117">An optional <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="2f329-118">Jeśli nie zostanie podany, przyjmowana jest bieżącej kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-118">If not supplied, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="2f329-119">Obiekt do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-119">The object to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="2f329-120">Typ docelowy konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-120">The type to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f329-121">W przypadku przesłonięcia w klasie pochodnej, konwertuje określoną wartość określonego reprezentacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-121">When overridden in a derived class, converts the specified value to the specified representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f329-122">Przekonwertowana wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f329-122">The converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>