<Type Name="ActivationArguments" FullName="System.Runtime.Hosting.ActivationArguments">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="583e46301c5062da30bc45ad3aa148bd1dcbd2fa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30564364" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ActivationArguments : System.Security.Policy.EvidenceBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ActivationArguments extends System.Security.Policy.EvidenceBase" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Hosting.ActivationArguments" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActivationArguments&#xA;Inherits EvidenceBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivationArguments sealed : System::Security::Policy::EvidenceBase" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Policy.EvidenceBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia dane dla aktywację w oparciu o manifeście aplikacji. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Hosting.ActivationArguments> Klasa jest używana przez <xref:System.AppDomainSetup> klasy.  
  
 Model aktywację w oparciu o manifeście używa manifest aplikacji zamiast zestawu aktywacji. Manifest opis aplikacji, jego zależności, wymagania dotyczące zabezpieczeń i tak dalej. Model manifestu ma kilka zalet w porównaniu z modelem aktywację w oparciu o zestaw, szczególnie w przypadku aplikacji sieci Web. Na przykład plik manifestu zawiera wymagania dotyczące zabezpieczeń aplikacji, który umożliwia użytkownikowi zdecydować, czy zezwolić aplikacji do wykonania przed pobraniem kodu. Plik manifestu zawiera także informacje o zależności aplikacji.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak uzyskać bieżące <xref:System.Runtime.Hosting.ActivationArguments> obiekt z <xref:System.AppDomainSetup> dla <xref:System.AppDomain> na podstawie manifestu aplikacji.  
  
 [!code-csharp[System.Runtime.Hosting.ApplicationActivator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/cs/program.cs#1)]
 [!code-vb[System.Runtime.Hosting.ApplicationActivator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Hosting.ActivationArguments" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivationArguments (ActivationContext activationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ActivationContext activationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (activationData As ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivationArguments(ActivationContext ^ activationData);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="activationData" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="activationData">Obiekt, który identyfikuje aktywację w oparciu o manifeście aplikacji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Hosting.ActivationArguments" /> klasy z kontekstem określone uaktywnianie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ActivationContext> Obiektu reprezentowanego przez `activationData` zawiera parametr <xref:System.ApplicationIdentity> i informacje o kontekście dla aktywacji opartej na manifestu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="activationData" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivationArguments (ApplicationIdentity applicationIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ApplicationIdentity applicationIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivationArguments(ApplicationIdentity ^ applicationIdentity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="applicationIdentity" Type="System.ApplicationIdentity" />
      </Parameters>
      <Docs>
        <param name="applicationIdentity">Obiekt, który identyfikuje aktywację w oparciu o manifeście aplikacji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Hosting.ActivationArguments" /> klasy z określona tożsamość aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tożsamość aplikacji unikatowo identyfikuje aplikację na podstawie manifestu do aktywacji w nowej domenie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationIdentity" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivationArguments (ActivationContext activationContext, string[] activationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ActivationContext activationContext, string[] activationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivationArguments(ActivationContext ^ activationContext, cli::array &lt;System::String ^&gt; ^ activationData);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="activationData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="activationContext">Obiekt, który identyfikuje aktywację w oparciu o manifeście aplikacji.</param>
        <param name="activationData">Tablica ciągów zawierających dane dostarczane przez hosta.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Hosting.ActivationArguments" /> z kontekstu aktywacji określonej i danych aktywacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ActivationContext> Obiektu reprezentowanego przez `activationContext` zawiera parametr <xref:System.ApplicationIdentity> i informacje o kontekście dla aktywacji opartej na manifestu. Dane aktywacji składa się z informacje, takie jak część ciągu zapytania adresu URL.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="activationContext" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivationArguments (ApplicationIdentity applicationIdentity, string[] activationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ApplicationIdentity applicationIdentity, string[] activationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActivationArguments(ApplicationIdentity ^ applicationIdentity, cli::array &lt;System::String ^&gt; ^ activationData);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="applicationIdentity" Type="System.ApplicationIdentity" />
        <Parameter Name="activationData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="applicationIdentity">Obiekt, który identyfikuje aktywację w oparciu o manifeście aplikacji.</param>
        <param name="activationData">Tablica ciągów zawierających dane dostarczane przez hosta.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Hosting.ActivationArguments" /> z danymi tożsamości i aktywacji określonej aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tożsamość aplikacji unikatowo identyfikuje aplikację na podstawie manifestu do aktywacji w nowej domenie. Dane aktywacji składa się z informacje, takie jak część ciągu zapytania adresu URL.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationIdentity" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ActivationContext">
      <MemberSignature Language="C#" Value="public ActivationContext ActivationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ActivationContext ActivationContext" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivationContext As ActivationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ActivationContext ^ ActivationContext { ActivationContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kontekst aktywacji aktywację w oparciu o manifeście aplikacji.</summary>
        <value>Obiekt, który identyfikuje aplikację na podstawie manifestu aktywacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ActivationContext> Zawiera obiekt <xref:System.ApplicationIdentity> i umożliwia dostęp tylko wewnętrzny do manifestu aplikacji. Kontekst aktywacji jest używany podczas aktywacji opartej na manifestu do ustawiania zasad domeny i podaj model zabezpieczeń oparty na aplikację.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób uzyskiwania wartości <xref:System.Runtime.Hosting.ActivationArguments.ActivationContext%2A> właściwość z <xref:System.Runtime.Hosting.ActivationArguments> dla manifest aplikacji.  
  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.Hosting.ActivationArguments> klasy.  
  
 [!code-csharp[System.Runtime.Hosting.ApplicationActivator#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/cs/program.cs#4)]
 [!code-vb[System.Runtime.Hosting.ApplicationActivator#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivationData">
      <MemberSignature Language="C#" Value="public string[] ActivationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ActivationData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Hosting.ActivationArguments.ActivationData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivationData As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ActivationData { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera dane z hosta.</summary>
        <value>Tablica ciągów zawierających dane dostarczane przez hosta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane aktywacji składa się z informacje, takie jak część ciągu zapytania adresu URL.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationIdentity">
      <MemberSignature Language="C#" Value="public ApplicationIdentity ApplicationIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ApplicationIdentity ApplicationIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Hosting.ActivationArguments.ApplicationIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationIdentity As ApplicationIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ApplicationIdentity ^ ApplicationIdentity { ApplicationIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ApplicationIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tożsamość aplikacji aktywowana w manifeście aplikacji.</summary>
        <value>Obiekt, który identyfikuje aplikację na podstawie manifestu aktywacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tożsamość aplikacji unikatowo identyfikuje aplikację na podstawie manifestu do aktywacji w nowej domenie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.EvidenceBase Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.EvidenceBase Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As EvidenceBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::EvidenceBase ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.EvidenceBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię bieżącego <see cref="T:System.Runtime.Hosting.ActivationArguments" /> obiektu.</summary>
        <returns>Kopię bieżącego obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda tworzy nowy <xref:System.Runtime.Hosting.ActivationArguments> obiektu i wypełnia ją kopie członków bieżącej <xref:System.Runtime.Hosting.ActivationArguments> obiektu  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>