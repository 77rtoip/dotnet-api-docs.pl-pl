<Type Name="ILogger" FullName="Microsoft.Build.Framework.ILogger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae1ba9d9ce21eb6587cc66640d929ac61c4aa8aa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ILogger" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.ILogger" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILogger" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="79fc2-101">Definiuje rejestratora MSBuild, które subskrybuje zdarzenia systemu kompilacji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="79fc2-101">Defines an MSBuild logger, which subscribes to build system events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79fc2-102">Wszystkie klasy rejestratora musi zawierać implementację tego interfejsu rozpoznawanego przez [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] aparatu.</span><span class="sxs-lookup"><span data-stu-id="79fc2-102">All logger classes must implement this interface to be recognized by the [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] engine.</span></span>  
  
 <span data-ttu-id="79fc2-103">Implementacja interfejsu bezpośrednio, a nie mogą dziedziczyć klasy po Klasa pomocy <xref:Microsoft.Build.Utilities.Logger>, który zawiera domyślne implementacje niektórych <xref:Microsoft.Build.Framework.ILogger> elementy członkowskie.</span><span class="sxs-lookup"><span data-stu-id="79fc2-103">Instead of implementing this interface directly, you can also derive your class from the helper class, <xref:Microsoft.Build.Utilities.Logger>, which provides default implementations of some <xref:Microsoft.Build.Framework.ILogger> members.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79fc2-104">Poniższy przykład przedstawia sposób zapisania podstawowe rejestratora.</span><span class="sxs-lookup"><span data-stu-id="79fc2-104">The following example shows how to write a basic logger.</span></span>  
  
 [!code-csharp[msbuild_BasicLogger#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_BasicLogger/CS/msbuild_BasicLogger.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="79fc2-105">Dostępne dla rejestratorów zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79fc2-105">The events available to loggers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79fc2-106">Subskrybuje rejestratorów na określone zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79fc2-106">Subscribes loggers to specific events.</span>
          </span>
          <span data-ttu-id="79fc2-107">Ta metoda jest wywoływana, gdy rejestratora został zarejestrowany za pomocą aparatu kompilacji przed pojawienia się żadnych zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79fc2-107">This method is called when the logger is registered with the build engine, before any events are raised.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ILogger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79fc2-108">Pobiera lub ustawia parametry rejestratora zdefiniowane przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79fc2-108">Gets or sets the user-defined parameters of the logger.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79fc2-109">Parametry rejestratora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79fc2-109">The logger parameters.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79fc2-110">Parametry mogą być reprezentowane w tej właściwości w dowolnym formacie.</span><span class="sxs-lookup"><span data-stu-id="79fc2-110">Parameters may be represented in this property in any format.</span></span> <span data-ttu-id="79fc2-111">Na przykład, aby przedstawić dwóch parametrów i wartości, należy użyć ciągu "parametr1 = wartość1; parameter2 = wartość2".</span><span class="sxs-lookup"><span data-stu-id="79fc2-111">For example, to represent two parameters and values, you could use the string "parameter1=value1;parameter2=value2".</span></span>  
  
 <span data-ttu-id="79fc2-112">Ta właściwość może być odwołanie o wartości null (`Nothing` w [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]).</span><span class="sxs-lookup"><span data-stu-id="79fc2-112">This property can be a null reference (`Nothing` in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ILogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79fc2-113">Zwalnia zasoby przydzielone do rejestratora w czasie inicjowania lub podczas kompilacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79fc2-113">Releases the resources allocated to the logger at the time of initialization or during the build.</span>
          </span>
          <span data-ttu-id="79fc2-114">Ta metoda jest wywoływana, gdy rejestratora jest wyrejestrowany z aparatu, po pojawienia się wszystkie zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79fc2-114">This method is called when the logger is unregistered from the engine, after all events are raised.</span>
          </span>
          <span data-ttu-id="79fc2-115">Hosta [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] zwykle wyrejestrowuje rejestratorów bezpośrednio przed zamknięciem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79fc2-115">A host of [!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)] typically unregisters loggers immediately before quitting.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.ILogger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79fc2-116">Pobiera lub ustawia poziom szczegółowości do pokazania w dzienniku zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79fc2-116">Gets or sets the level of detail to show in the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79fc2-117">Jedna z wartości wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79fc2-117">One of the enumeration values.</span>
          </span>
          <span data-ttu-id="79fc2-118">Wartość domyślna to <see cref="F:Microsoft.Build.Framework.LoggerVerbosity.Normal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79fc2-118">The default is <see cref="F:Microsoft.Build.Framework.LoggerVerbosity.Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79fc2-119">Rejestrator jest swobodę zdarzenia, które rejestruje, zgodnie z wytycznymi szczegółowości tworzy spójną obsługę użytkowników.</span><span class="sxs-lookup"><span data-stu-id="79fc2-119">While a logger is free to choose the events it logs, following the verbosity guidelines creates a consistent user experience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>