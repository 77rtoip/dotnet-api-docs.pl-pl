<Type Name="ITaskFactory2" FullName="Microsoft.Build.Framework.ITaskFactory2">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6bfcd14c2e4ff1bfb8ae45a2fe60991f1590c260" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63959635" /></Metadata><TypeSignature Language="C#" Value="public interface ITaskFactory2 : Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITaskFactory2 implements class Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.ITaskFactory2" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITaskFactory2&#xA;Implements ITaskFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITaskFactory2 : Microsoft::Build::Framework::ITaskFactory" />
  <TypeSignature Language="F#" Value="type ITaskFactory2 = interface&#xA;    interface ITaskFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITaskFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>W tym artykule opisano i rozszerzona <see cref="T:Microsoft.Build.Framework.ITaskFactory" /> interfejsu, która powinna implementować wystąpienia fabryki zadań.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateTask">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, System.Collections.Generic.IDictionary&lt;string,string&gt; taskIdentityParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.ITask CreateTask(class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; taskIdentityParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory2.CreateTask(Microsoft.Build.Framework.IBuildEngine,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTask (taskFactoryLoggingHost As IBuildEngine, taskIdentityParameters As IDictionary(Of String, String)) As ITask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Framework::ITask ^ CreateTask(Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ taskIdentityParameters);" />
      <MemberSignature Language="F#" Value="abstract member CreateTask : Microsoft.Build.Framework.IBuildEngine * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Microsoft.Build.Framework.ITask" Usage="iTaskFactory2.CreateTask (taskFactoryLoggingHost, taskIdentityParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
        <Parameter Name="taskIdentityParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="taskFactoryLoggingHost">Host rejestrowania fabryki zadań będzie rejestrować wiadomości w kontekście zadania.</param>
        <param name="taskIdentityParameters">Parametry specjalne, które fabryka zadań można używać do modyfikowania, jak je wykonuje zadania, takie jak środowisko uruchomieniowe i architektury.</param>
        <summary>Utwórz wystąpienie zadania, które ma być używany, za pomocą opcjonalny zestaw "specjalne" ustawione w wywołaniu pojedyncze zadanie przy użyciu parametrów zadania MSBuildRuntime i MSBuildArchitecture domyślne parametry. Program MSBuild, dostarcza implementację tego interfejsu TaskHostFactory, który używa "MSBuildRuntime" z wartościami "CLR2", "CLR4", "Działania" i "*" (wszystkie); i "MSBuildArchitecture" z wartościami "x86", "x64", "CurrentArchitecture" i "\*" (wszystkie). Implementujący ITaskFactory2 można używać tych wstępnie zdefiniowanych wartości MSBuildRuntime i MSBuildArchitecture lub określić nowe wartości dla tych parametrów.</summary>
        <returns>Wygenerowany zadania lub <c>null</c> Jeśli zadanie nie powiodło się.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli fabryka zadań implementuje ITaskFactory2, program MSBuild będzie wywoływać tej metody, zamiast ITaskFactory.CreateTask.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public bool Initialize (string taskName, System.Collections.Generic.IDictionary&lt;string,string&gt; factoryIdentityParameters, System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Initialize(string taskName, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; factoryIdentityParameters, class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Framework.TaskPropertyInfo&gt; parameterGroup, string taskBody, class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.ITaskFactory2.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function Initialize (taskName As String, factoryIdentityParameters As IDictionary(Of String, String), parameterGroup As IDictionary(Of String, TaskPropertyInfo), taskBody As String, taskFactoryLoggingHost As IBuildEngine) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Initialize(System::String ^ taskName, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ factoryIdentityParameters, System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ parameterGroup, System::String ^ taskBody, Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Framework.TaskPropertyInfo&gt; * string * Microsoft.Build.Framework.IBuildEngine -&gt; bool" Usage="iTaskFactory2.Initialize (taskName, factoryIdentityParameters, parameterGroup, taskBody, taskFactoryLoggingHost)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="factoryIdentityParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="parameterGroup" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Framework.TaskPropertyInfo&gt;" />
        <Parameter Name="taskBody" Type="System.String" />
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
      </Parameters>
      <Docs>
        <param name="taskName">Nazwa zadania.</param>
        <param name="factoryIdentityParameters">Parametry specjalne, które fabryka zadań można używać do modyfikowania, jak je wykonuje zadania, takie jak środowisko uruchomieniowe i architektury. Klucz jest nazwa parametru i wartość jest wartością parametru. Jest to zestaw parametrów, która została ustawiona na UsingTask przy użyciu np. UsingTask środowiska uruchomieniowego i architektura parametrów.</param>
        <param name="parameterGroup">Grupy parametrów.</param>
        <param name="taskBody">Treść zadania.</param>
        <param name="taskFactoryLoggingHost">Host rejestrowania fabryki zadań.</param>
        <summary>Inicjuje to fabrykę do tworzenia wystąpienia zadań z określonym tekście bloku zadań oraz zestaw parametrów UsingTask. Program MSBuild, dostarcza implementację tego interfejsu TaskHostFactory, który używa "Środowiska uruchomieniowego" z wartościami "CLR2", "CLR4", "Działania" i "*" (wszystkie); i "Architektury" z wartościami "x86", "x64", "CurrentArchitecture" i "\*" (wszystkie). Implementujący ITaskFactory2 można używać tych wstępnie zdefiniowanych wartości środowiska uruchomieniowego i architektura lub określić nowe wartości dla tych parametrów.</summary>
        <returns>Wartość wskazująca, czy inicjowanie zakończyło się pomyślnie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aparat MSBuild będzie wywoływać ten element, aby zainicjować fabryki. Powinno to Inicjuj fabrykę wystarczająco, aby fabryka można pytanie, czy nazwy zadań mogą być tworzone przez fabrykę. Jeśli fabryka zadań implementuje ITaskFactory2, ta metoda inicjowania zostanie wywołana zamiast ITaskFactory.Initialize.  
  
 TaskFactoryLoggingHost będzie rejestrować wiadomości w kontekście obiektu docelowego, w których zadanie najpierw jest używana.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>