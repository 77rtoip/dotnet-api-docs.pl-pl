<Type Name="ManualWorkflowSchedulerService" FullName="System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="933bc0566d447e20b7638447e946abb6bd5eeb78" /><Meta Name="ms.sourcegitcommit" Value="cb4d218ffd5a459a5f921fe1d945c682d1e09aca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/16/2019" /><Meta Name="ms.locfileid" Value="69539424" /></Metadata><TypeSignature Language="C#" Value="public class ManualWorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManualWorkflowSchedulerService extends System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" />
  <TypeSignature Language="VB.NET" Value="Public Class ManualWorkflowSchedulerService&#xA;Inherits WorkflowSchedulerService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManualWorkflowSchedulerService : System::Workflow::Runtime::Hosting::WorkflowSchedulerService" />
  <TypeSignature Language="F#" Value="type ManualWorkflowSchedulerService = class&#xA;    inherit WorkflowSchedulerService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowSchedulerService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7bda6-101">Zapewnia usługę wątkowości, która umożliwia aplikacji hosta Tworzenie wystąpienia przepływu pracy w celu <see cref="T:System.Threading.Thread" /> przeprowadzenia przekazywać wystąpienie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7bda6-101">Provides a threading service that allows the host application creating a workflow instance to donate the <see cref="T:System.Threading.Thread" /> on which the workflow instance is run.</span></span> <span data-ttu-id="7bda6-102">Przy użyciu tej usługi wątków aplikacje hosta mogą uruchamiać wystąpienie przepływu pracy w jednym <see cref="T:System.Threading.Thread" /> w trybie synchronicznym (nawet jeśli przepływ pracy zawiera działanie opóźnione, to prace są odkładane do momentu wykonania działania opóźnienia w osobnym wątku. zduplikowane przez <see cref="T:System.Threading.Timer" />). Ten tryb blokuje wykonywanie aplikacji hosta do momentu, gdy wystąpienie przepływu pracy stanie się nieaktywne.</span><span class="sxs-lookup"><span data-stu-id="7bda6-102">Using this threading service, host applications can run a workflow instance on a single <see cref="T:System.Threading.Thread" /> in synchronous mode (although if the workflow contains a delay activity, the work is postponed until after the delay activity is executed on a separate thread spawned by <see cref="T:System.Threading.Timer" />).This mode blocks the execution of the host application until the workflow instance becomes idle.</span></span> <span data-ttu-id="7bda6-103">Następnie wystąpienie przepływu pracy można wykonać tylko przy użyciu <see cref="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)" /> metody tej usługi.</span><span class="sxs-lookup"><span data-stu-id="7bda6-103">Subsequently, the workflow instance can only be executed using the <see cref="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)" /> method of this service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="7bda6-104"><xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>nie uruchamia automatycznie wystąpienia przepływu pracy, które znajduje się w kolejce.</span><span class="sxs-lookup"><span data-stu-id="7bda6-104"><xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService> does not automatically run a workflow instance that is in the queue.</span></span> <span data-ttu-id="7bda6-105">Host musi wywołać <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow%2A> , aby uruchomić określony przepływ pracy.</span><span class="sxs-lookup"><span data-stu-id="7bda6-105">The host must call <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow%2A> to run a specified workflow.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7bda6-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7bda6-106">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManualWorkflowSchedulerService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManualWorkflowSchedulerService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7bda6-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7bda6-107">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManualWorkflowSchedulerService (bool useActiveTimers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool useActiveTimers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (useActiveTimers As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManualWorkflowSchedulerService(bool useActiveTimers);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService : bool -&gt; System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" Usage="new System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService useActiveTimers" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="useActiveTimers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useActiveTimers"><span data-ttu-id="7bda6-108"><see langword="Boolean" />Określa sposób obsługi działań opóźnienia.</span><span class="sxs-lookup"><span data-stu-id="7bda6-108"><see langword="Boolean" /> that determines how delay activities are handled.</span></span> <span data-ttu-id="7bda6-109">Jeśli <see langword="true" />usługa Scheduler automatycznie wznawia przepływy pracy po wygaśnięciu aktywności opóźnienia (przy użyciu czasomierza w pamięci).</span><span class="sxs-lookup"><span data-stu-id="7bda6-109">If <see langword="true" />, the scheduler service automatically resumes workflows after delay activities expire (by using an in-memory timer).</span></span> <span data-ttu-id="7bda6-110">Jeśli <see langword="false" />, host musi ręcznie wznowić przepływ pracy po wygaśnięciu działań opóźnienia.</span><span class="sxs-lookup"><span data-stu-id="7bda6-110">If <see langword="false" />, the host must manually resume the workflow after the delay activities expire.</span></span></param>
        <summary><span data-ttu-id="7bda6-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7bda6-111">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManualWorkflowSchedulerService (System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManualWorkflowSchedulerService(System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService : System.Collections.Specialized.NameValueCollection -&gt; System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" Usage="new System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="7bda6-112">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> , który zawiera parametry <paramref name="useActiveTimers" />dla.</span><span class="sxs-lookup"><span data-stu-id="7bda6-112">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains parameters for <paramref name="useActiveTimers" />.</span></span> <span data-ttu-id="7bda6-113">Jeśli <see langword="true" />usługa Scheduler automatycznie wznawia przepływy pracy po wygaśnięciu aktywności opóźnienia (przy użyciu czasomierza w pamięci).</span><span class="sxs-lookup"><span data-stu-id="7bda6-113">If <see langword="true" />, the scheduler service automatically resumes workflows after delay activities expire (by using an in-memory timer).</span></span> <span data-ttu-id="7bda6-114">Jeśli <see langword="false" />, host musi ręcznie wznowić przepływ pracy po wygaśnięciu działań opóźnienia.</span><span class="sxs-lookup"><span data-stu-id="7bda6-114">If <see langword="false" />, the host must manually resume the workflow after the delay activities expire.</span></span></param>
        <summary><span data-ttu-id="7bda6-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7bda6-115">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected internal override void Cancel (Guid timerId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Cancel(valuetype System.Guid timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Cancel (timerId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Cancel(Guid timerId);" />
      <MemberSignature Language="F#" Value="override this.Cancel : Guid -&gt; unit" Usage="manualWorkflowSchedulerService.Cancel timerId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="timerId"><span data-ttu-id="7bda6-116"><see cref="T:System.Guid" /> Skojarzona z istniejącym zaplanowanym elementem roboczym do anulowania.</span><span class="sxs-lookup"><span data-stu-id="7bda6-116">The <see cref="T:System.Guid" /> associated with the existing scheduled work item to cancel.</span></span></param>
        <summary><span data-ttu-id="7bda6-117">Anuluje określony element roboczy wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7bda6-117">Cancels the specified existing workflow instance work item.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStarted">
      <MemberSignature Language="C#" Value="protected override void OnStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStarted();" />
      <MemberSignature Language="F#" Value="override this.OnStarted : unit -&gt; unit" Usage="manualWorkflowSchedulerService.OnStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7bda6-118">Przeciążone <see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" />z.</span><span class="sxs-lookup"><span data-stu-id="7bda6-118">Overloaded from <see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" />.</span></span> <span data-ttu-id="7bda6-119">Ta metoda jest wywoływana za <see cref="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime" /> każdym razem, gdy jest wywoływana i <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> jest używana przez zadania do wykonania <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> , które są potrzebne podczas uruchamiania.</span><span class="sxs-lookup"><span data-stu-id="7bda6-119">This method is called whenever <see cref="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime" /> is called and is used by the <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> to do work that is needed when the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> starts.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunWorkflow">
      <MemberSignature Language="C#" Value="public bool RunWorkflow (Guid workflowInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RunWorkflow(valuetype System.Guid workflowInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function RunWorkflow (workflowInstanceId As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RunWorkflow(Guid workflowInstanceId);" />
      <MemberSignature Language="F#" Value="member this.RunWorkflow : Guid -&gt; bool" Usage="manualWorkflowSchedulerService.RunWorkflow workflowInstanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowInstanceId"><span data-ttu-id="7bda6-120"><see cref="T:System.Guid" /> Dla wystąpienia przepływu pracy do uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="7bda6-120">The <see cref="T:System.Guid" /> for the workflow instance to run.</span></span></param>
        <summary><span data-ttu-id="7bda6-121">Uruchamia określone wystąpienie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7bda6-121">Runs the specified workflow instance.</span></span></summary>
        <returns><span data-ttu-id="7bda6-122"><see langword="true" />Jeśli przepływ pracy zostanie uruchomiony; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="7bda6-122"><see langword="true" /> if the workflow starts running; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7bda6-123">Jest to wywołanie synchroniczne, które używa bieżącego wątku do uruchomienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7bda6-123">This is a synchronous call that uses the current thread to run the workflow.</span></span> <span data-ttu-id="7bda6-124">Nie zwraca do momentu, gdy przepływ pracy jest bezczynny, zawiesza się, kończy, kończy się lub przerywa.</span><span class="sxs-lookup"><span data-stu-id="7bda6-124">It does not return until the workflow idles, suspends, completes, terminates, or aborts.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7bda6-125"><paramref name="workflowInstanceId" />jest pustym identyfikatorem GUID.</span><span class="sxs-lookup"><span data-stu-id="7bda6-125"><paramref name="workflowInstanceId" /> is an empty GUID.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Schedule">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7bda6-126">Dodaje wystąpienie przepływu pracy do kolejki oczekujących elementów roboczych.</span><span class="sxs-lookup"><span data-stu-id="7bda6-126">Adds a workflow instance to the pending work items queue.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="protected internal override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Schedule(class System.Threading.WaitCallback callback, valuetype System.Guid workflowInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Schedule (callback As WaitCallback, workflowInstanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Schedule(System::Threading::WaitCallback ^ callback, Guid workflowInstanceId);" />
      <MemberSignature Language="F#" Value="override this.Schedule : System.Threading.WaitCallback * Guid -&gt; unit" Usage="manualWorkflowSchedulerService.Schedule (callback, workflowInstanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.WaitCallback" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="7bda6-127">Delegat <see cref="T:System.Threading.WaitCallback" /> multiemisji reprezentujący metodę do uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="7bda6-127">A <see cref="T:System.Threading.WaitCallback" /> multicast delegate that represents the method to run.</span></span></param>
        <param name="workflowInstanceId"><span data-ttu-id="7bda6-128"><see cref="T:System.Guid" /> Reprezentujący wystąpienie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7bda6-128">A <see cref="T:System.Guid" /> that represents the workflow instance.</span></span></param>
        <summary><span data-ttu-id="7bda6-129">Dodaje wystąpienie przepływu pracy do kolejki oczekujących elementów roboczych przy użyciu określonego wystąpienia przepływu pracy przy użyciu określonego delegata multiemisji.</span><span class="sxs-lookup"><span data-stu-id="7bda6-129">Adds a workflow instance to the pending work items queue using the specified workflow instance using the specified multicast delegate.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7bda6-130"><paramref name="callback" />zawiera odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="7bda6-130"><paramref name="callback" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="protected internal override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Schedule(class System.Threading.WaitCallback callback, valuetype System.Guid workflowInstanceId, valuetype System.DateTime whenUtc, valuetype System.Guid timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Schedule (callback As WaitCallback, workflowInstanceId As Guid, whenUtc As DateTime, timerId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Schedule(System::Threading::WaitCallback ^ callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);" />
      <MemberSignature Language="F#" Value="override this.Schedule : System.Threading.WaitCallback * Guid * DateTime * Guid -&gt; unit" Usage="manualWorkflowSchedulerService.Schedule (callback, workflowInstanceId, whenUtc, timerId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.WaitCallback" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
        <Parameter Name="whenUtc" Type="System.DateTime" />
        <Parameter Name="timerId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="7bda6-131">Delegat <see cref="T:System.Threading.WaitCallback" /> multiemisji reprezentujący metodę do uruchomienia.</span><span class="sxs-lookup"><span data-stu-id="7bda6-131">A <see cref="T:System.Threading.WaitCallback" /> multicast delegate that represents the method to run.</span></span></param>
        <param name="workflowInstanceId"><span data-ttu-id="7bda6-132"><see cref="T:System.Guid" /> Reprezentujący wystąpienie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="7bda6-132">A <see cref="T:System.Guid" /> that represents the workflow instance.</span></span></param>
        <param name="whenUtc"><span data-ttu-id="7bda6-133"><see cref="T:System.DateTime" /> Wskazuje godzinę rozpoczęcia wątku.</span><span class="sxs-lookup"><span data-stu-id="7bda6-133">The <see cref="T:System.DateTime" /> that indicates the time to begin running the thread.</span></span></param>
        <param name="timerId"><span data-ttu-id="7bda6-134"><see cref="T:System.Guid" /> Reprezentujący zaplanowany wątek.</span><span class="sxs-lookup"><span data-stu-id="7bda6-134">A <see cref="T:System.Guid" /> that represents the scheduled thread.</span></span></param>
        <summary><span data-ttu-id="7bda6-135">Dodaje określone wystąpienie przepływu pracy do kolejki oczekujących elementów roboczych przy użyciu określonego delegata <see cref="T:System.DateTime" /> multiemisji i identyfikatorów GUID.</span><span class="sxs-lookup"><span data-stu-id="7bda6-135">Adds the specified workflow instance to the pending work item queue using the specified multicast delegate, <see cref="T:System.DateTime" /> and GUIDs.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7bda6-136"><paramref name="callback" />zawiera odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="7bda6-136"><paramref name="callback" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7bda6-137"><paramref name="workflowInstanceId" />lub <paramref name="timerId" /> jest pustym identyfikatorem GUID.</span><span class="sxs-lookup"><span data-stu-id="7bda6-137"><paramref name="workflowInstanceId" /> or <paramref name="timerId" /> is an empty GUID.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="protected internal override void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Stop();" />
      <MemberSignature Language="F#" Value="override this.Stop : unit -&gt; unit" Usage="manualWorkflowSchedulerService.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7bda6-138">Przeciążone <see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" />z.</span><span class="sxs-lookup"><span data-stu-id="7bda6-138">Overloaded from <see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" />.</span></span> <span data-ttu-id="7bda6-139">Używa tej metody do wykonywania zadań, które są konieczne, <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> gdy zatrzyma się. <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /></span><span class="sxs-lookup"><span data-stu-id="7bda6-139">The <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> uses this method to do work that is needed when the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> stops.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
