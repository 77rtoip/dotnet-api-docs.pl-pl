<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ManualWorkflowSchedulerService.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac529d7dc949af5bb583371d9160e6a3aacfa20cb2a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">29d7dc949af5bb583371d9160e6a3aacfa20cb2a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService">
          <source>Provides a threading service that allows the host application creating a workflow instance to donate the <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> on which the workflow instance is run.</source>
          <target state="translated">Udostępnia usługę wątków, która umożliwia aplikacji hosta tworzenia wystąpienia przepływu pracy Przekaż <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> uruchamiania wystąpienia przepływu pracy.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService">
          <source>Using this threading service, host applications can run a workflow instance on a single <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> in synchronous mode (although if the workflow contains a delay activity, the work is postponed until after the delay activity is executed on a separate thread spawned by <ph id="ph2">&lt;see cref="System.Threading.Timer" /&gt;</ph>).This mode blocks the execution of the host application until the workflow instance becomes idle.</source>
          <target state="translated">Dzięki wątkowość usługi hosta aplikacje mogą działać wystąpienia przepływu pracy w ramach jednej <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> w trybie synchronicznym (chociaż Jeśli przepływ pracy zawiera działanie opóźnienia, praca jest wstrzymane do czasu, po wykonaniu działania opóźnienia w oddzielnym wątku Zduplikowany przez <ph id="ph2">&lt;see cref="System.Threading.Timer" /&gt;</ph>). W tym trybie blokuje wykonywanie aplikacji hosta do momentu wystąpienia przepływu pracy, staje się bezczynności.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService">
          <source>Subsequently, the workflow instance can only be executed using the <ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)" /&gt;</ph> method of this service.</source>
          <target state="translated">Następnie, wystąpienie przepływu pracy można wykonać tylko przy użyciu <ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)" /&gt;</ph> metody tej usługi.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&gt;</ph> does not automatically run a workflow instance that is in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&gt;</ph> nie jest automatycznie uruchamiany wystąpienia przepływu pracy, który znajduje się w kolejce.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService">
          <source>The host must call <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow%2A&gt;</ph> to run a specified workflow.</source>
          <target state="translated">Hosta musi wywoływać <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow%2A&gt;</ph> do uruchomienia określonego przepływu pracy.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> that determines how delay activities are handled.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> Określa sposób obsługi opóźnienie działań.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the scheduler service automatically resumes workflows after delay activities expire (by using an in-memory timer).</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;see langword="true" /&gt;</ph>, usługa Harmonogram zostanie automatycznie wznowione przepływów pracy po wygaśnięciu opóźnienie działań (za pomocą czasomierza w pamięci).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the host must manually resume the workflow after the delay activities expire.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;see langword="false" /&gt;</ph>, host musi ręcznie wznowić przepływ pracy, po wygaśnięciu działania opóźnienia.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> that contains parameters for <bpt id="p1">&lt;c&gt;</bpt>useActiveTimers<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> zawierający parametry <bpt id="p1">&lt;c&gt;</bpt>useActiveTimers<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the scheduler service automatically resumes workflows after delay activities expire (by using an in-memory timer).</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;see langword="true" /&gt;</ph>, usługa Harmonogram zostanie automatycznie wznowione przepływów pracy po wygaśnięciu opóźnienie działań (za pomocą czasomierza w pamięci).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the host must manually resume the workflow after the delay activities expire.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;see langword="false" /&gt;</ph>, host musi ręcznie wznowić przepływ pracy, po wygaśnięciu działania opóźnienia.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> associated with the existing scheduled work item to cancel.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> Skojarzone z istniejący element zaplanowanych zadań, aby anulować.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(System.Guid)">
          <source>Cancels the specified existing workflow instance work item.</source>
          <target state="translated">Anuluje określonego istniejącego wystąpienia przepływu pracy.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted">
          <source>Overloaded from <ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" /&gt;</ph>.</source>
          <target state="translated">Przeciążone z <ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted">
          <source>This method is called whenever <ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime" /&gt;</ph> is called and is used by the <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> to do work that is needed when the <ph id="ph3">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> starts.</source>
          <target state="translated">Ta metoda jest wywoływana przy każdym <ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime" /&gt;</ph> nosi nazwę i jest używany przez <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> pracy oznacza to potrzebne podczas <ph id="ph3">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> uruchamia.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> for the workflow instance to run.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> Dla wystąpienia przepływu pracy do uruchomienia.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)">
          <source>Runs the specified workflow instance.</source>
          <target state="translated">Uruchamia wystąpienie określonego przepływu pracy.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow starts running; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli przepływ pracy zacznie działać; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)">
          <source>This is a synchronous call that uses the current thread to run the workflow.</source>
          <target state="translated">To wywołanie synchroniczne bieżący wątek na którym działa przepływ pracy.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)">
          <source>It does not return until the workflow idles, suspends, completes, terminates, or aborts.</source>
          <target state="translated">Zwraca aż do przepływu pracy idles, wstrzymuje, ukończenia, kończy lub przerwanie.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)">
          <source><ph id="ph1">&lt;paramref name="workflowInstanceId" /&gt;</ph> is an empty GUID.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowInstanceId" /&gt;</ph> jest pustym identyfikatorem GUID.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService">
          <source>Adds a workflow instance to the pending work items queue.</source>
          <target state="translated">Dodaje wystąpienie przepływu pracy do kolejki elementów roboczych oczekujących.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.WaitCallback" /&gt;</ph> multicast delegate that represents the method to run.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Threading.WaitCallback" /&gt;</ph> multiemisji delegata, który reprezentuje metodę, aby uruchomić.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> that represents the workflow instance.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> reprezentujący wystąpienie przepływu pracy.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)">
          <source>Adds a workflow instance to the pending work items queue using the specified workflow instance using the specified multicast delegate.</source>
          <target state="translated">Dodaje wystąpienie przepływu pracy do kolejki elementów roboczych oczekujących przy użyciu wystąpienia określonego przepływu pracy za pomocą określonego delegata multiemisji.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)">
          <source><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> contains a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> zawiera odwołanie o wartości null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.WaitCallback" /&gt;</ph> multicast delegate that represents the method to run.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Threading.WaitCallback" /&gt;</ph> multiemisji delegata, który reprezentuje metodę, aby uruchomić.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> that represents the workflow instance.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> reprezentujący wystąpienie przepływu pracy.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> that indicates the time to begin running the thread.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> Wskazująca czas uruchomiony wątek.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> that represents the scheduled thread.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> reprezentujący zaplanowane wątku.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)">
          <source>Adds the specified workflow instance to the pending work item queue using the specified multicast delegate, <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> and GUIDs.</source>
          <target state="translated">Dodaje wystąpienie określonego przepływu pracy do kolejki elementów roboczych oczekujących przy użyciu określonego delegata multiemisji, <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> i identyfikatory GUID.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)">
          <source><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> contains a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> zawiera odwołanie o wartości null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> w języku Visual Basic).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)">
          <source><ph id="ph1">&lt;paramref name="workflowInstanceId" /&gt;</ph> or <ph id="ph2">&lt;paramref name="timerId" /&gt;</ph> is an empty GUID.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowInstanceId" /&gt;</ph> lub <ph id="ph2">&lt;paramref name="timerId" /&gt;</ph> jest pusty identyfikator GUID.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop">
          <source>Overloaded from <ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" /&gt;</ph>.</source>
          <target state="translated">Przeciążone z <ph id="ph1">&lt;see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> uses this method to do work that is needed when the <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> stops.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /&gt;</ph> Używa tej metody do pracy oznacza to potrzebne podczas <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> zatrzymuje.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>