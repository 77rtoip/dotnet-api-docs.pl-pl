<Type Name="WorkflowWebHostingModule" FullName="System.Workflow.Runtime.Hosting.WorkflowWebHostingModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c0a85d963f6bd18c295ba9553ed6e999f059779" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36446987" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WorkflowWebHostingModule : System.Web.IHttpModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowWebHostingModule extends System.Object implements class System.Web.IHttpModule" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowWebHostingModule&#xA;Implements IHttpModule" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowWebHostingModule sealed : System::Web::IHttpModule" />
  <TypeSignature Language="F#" Value="type WorkflowWebHostingModule = class&#xA;    interface IHttpModule" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpModule</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia mechanizm dla routingu identyfikator wystąpienia przepływu pracy do i z <see cref="T:System.Workflow.Activities.WorkflowWebService" /> do pliku cookie na komputerze klienckim w sieci Web. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Ta funkcja jest wymagana, aby ponownie wprowadzić definicji przepływu pracy, który jest udostępniany jako usługa sieci Web. Bez tego modułu w pierwszym wywołaniu usługi sieci Web udostępniany przez przepływ pracy działa, ale kolejne wywołania kończą się niepowodzeniem. Dodatkowo należy upewnić się, że aplikacja kliencka ma włączone pliki cookie.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowWebHostingModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowWebHostingModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpModule.Dispose">
      <MemberSignature Language="C#" Value="void IHttpModule.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.IHttpModule.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule.System#Web#IHttpModule#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IHttpModule.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.IHttpModule.Dispose() = System::Web::IHttpModule::Dispose;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia zasoby używane przez <see cref="T:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule.System%23Web%23IHttpModule%23Dispose?displayProperty=nameWithType> po zakończeniu przy użyciu <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule>. <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule.System%23Web%23IHttpModule%23Dispose> Pozostawia metody <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule> w stanie uniemożliwiającym jego używanie. Po wywołaniu <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule.System%23Web%23IHttpModule%23Dispose>, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule> obiektów, moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule> obiektu zajęte.  
  
> [!NOTE]
>  Wywoływanie zawsze `Dispose` przed zwolnieniem ostatniego odwołania do <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule>. W przeciwnym razie używa zasobów nie są zwalniane do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule> obiektu `Finalize` metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpModule.Init">
      <MemberSignature Language="C#" Value="void IHttpModule.Init (System.Web.HttpApplication application);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.IHttpModule.Init(class System.Web.HttpApplication application) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule.System#Web#IHttpModule#Init(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Sub Init (application As HttpApplication) Implements IHttpModule.Init" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.IHttpModule.Init(System::Web::HttpApplication ^ application) = System::Web::IHttpModule::Init;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="application">
          <see cref="T:System.Web.HttpApplication" /> , Który zapewnia dostęp do metody, właściwości i zdarzenia wspólne dla wszystkich obiektów aplikacji w aplikacji ASP.NET.</param>
        <summary>Inicjuje przepływu pracy modułu hostingu sieci Web i przygotowuje modułu do obsługi żądań.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Workflow.Runtime.Hosting.WorkflowWebHostingModule.System%23Web%23IHttpModule%23Init(System.Web.HttpApplication)?displayProperty=nameWithType> można zarejestrować obsługi metod z określonych zdarzeń w dziennikach zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>