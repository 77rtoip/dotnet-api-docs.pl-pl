<Type Name="WorkflowRuntimeService" FullName="System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d96cd19aea891026ab81ed367cc56484f9b8b69" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39977714" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorkflowRuntimeService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowRuntimeService abstract" />
  <TypeSignature Language="F#" Value="type WorkflowRuntimeService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje abstrakcyjna klasa bazowa, z którego są uzyskiwane usług podstawowych aparat środowiska uruchomieniowego przepływu pracy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Usługi, które wynikają z <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> klasy może być uruchomione i zatrzymane przez aparatu wykonawczego przepływów pracy. Kolejność, w którym usługi jest uruchomiona lub zatrzymana, jednak jest nieokreślony, i usługi mogą wymagać obsługę innych usług, aby można było poprawnie zainicjować się one są uruchamiane, gdy, z drugiej strony, mogą wymagać do obsługi innych usług Aby można było poprawnie zamknięcie zostały zatrzymane. Aby rozwiązać ten problem, aparatu wykonawczego przepływów pracy zapewnia mechanizmy dwufazowe za uruchamianie i zatrzymywanie usług. Gdy <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> jest wywoływana, przepływ pracy wywołuje aparat środowiska wykonawczego <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metody dla każdego z jego usług, które wynikają z <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> klasy.  Po uruchomieniu mają wszystkie te usługi, aparatu wykonawczego przepływów pracy zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> zdarzenie, które powoduje <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> metoda do wywołania dla każdej usługi aparatu środowiska uruchomieniowego przepływu pracy. Usługi można zastąpić <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> metodę, aby wziąć udział w tym procesie fazy dwa. Podobnie, gdy <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> jest wywoływana, <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> metody <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> zdarzenia i <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> metoda dostarcza ten mechanizm dwufazowe.  Właściwość stanu zawiera <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> wartość wskazującą, czy usługa jest w trakcie uruchamiania lub zatrzymywania, czy jest całkowicie uruchomiony lub zatrzymany.  
  
 Usługi, które wynikają z <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> klasy może zgłosić <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType> zdarzeń po napotkaniu warunku, który powoduje, że nieobsługiwany wyjątek przez wywołanie metody <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>.  
  
 Usługi pochodną <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> klasy, <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> klasy, <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> klasy i <xref:System.Workflow.Runtime.Tracking.TrackingService> ostatecznie pochodną klasy <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> klasy.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowRuntimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowRuntimeService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Po zaimplementowaniu w klasie pochodnej, inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> jest inicjowany do <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStarted();" />
      <MemberSignature Language="F#" Value="abstract member OnStarted : unit -&gt; unit&#xA;override this.OnStarted : unit -&gt; unit" Usage="workflowRuntimeService.OnStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, reprezentuje metodę, która zostanie wywołana, gdy wywołuje aparatu wykonawczego przepływów pracy <see cref="E:System.Workflow.Runtime.WorkflowRuntime.Started" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Klasa implementuje mechanizm początkowego dwufazowego tak, aby usługi aparatu środowiska uruchomieniowego przepływu pracy może wykonywać inicjowanie zależny od innych usług, po aparatu wykonawczego przepływów pracy zostało wywołane <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metody dla wszystkich jego usługi aparatu środowiska uruchomieniowego przepływu pracy. Po jego wywołał aparatu wykonawczego <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> wywołuje metodę wszystkie jego usługi aparatu środowiska uruchomieniowego przepływu pracy <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> zdarzeń. Można zastąpić <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> metodę, aby korzystać z funkcji uruchamiania ostateczny wymaganych przez usługę podczas <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> zdarzenie jest wywoływane. Mechanika subskrybowanie i anulowanie subskrypcji <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> zdarzeń odbywa się wewnętrznie.  
  
> [!NOTE]
>  Jeśli usługa jest dodawany do aparatu wykonawczego przepływów pracy za pomocą wywołania <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> po aparatu wykonawczego przepływów pracy została już uruchomiona, wywoła aparatu wykonawczego przepływów pracy <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> w Twojej usłudze. Jednak w takiej sytuacji <xref:System.Workflow.Runtime.WorkflowRuntime.Started> już wystąpiło zdarzenie, w związku z usługą mogą napotkać konieczność przeprowadzenia inicjowanie, zazwyczaj wykona w <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> z wewnątrz <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metody. Możesz przetestować <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> do określenia, czy aparat środowiska uruchomieniowego przepływu pracy zostało rozpoczęte.  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> ustawiono <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started> przed <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> zostanie wywołana.  Domyślna implementacja klasy <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> nie wykonuje żadnych działań.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStopped">
      <MemberSignature Language="C#" Value="protected virtual void OnStopped ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStopped() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStopped ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStopped();" />
      <MemberSignature Language="F#" Value="abstract member OnStopped : unit -&gt; unit&#xA;override this.OnStopped : unit -&gt; unit" Usage="workflowRuntimeService.OnStopped " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, reprezentuje metodę, która zostanie wywołana, gdy wywołuje aparatu wykonawczego przepływów pracy <see cref="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Klasa implementuje mechanizm dwufazowe zatrzymywanie tak, aby usługi aparatu środowiska uruchomieniowego przepływu pracy może zachować niektóre funkcje po ich <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> metoda jest wywoływana przez aparatu wykonawczego przepływów pracy, może Jeśli to konieczne, obsługują zamknięcie innych usług. Po jego wywołał aparatu wykonawczego <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> wywołuje metodę wszystkie jego usługi aparatu środowiska uruchomieniowego przepływu pracy <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> zdarzeń. Można zastąpić <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> metodę, aby korzystać z funkcji zamknięcie końcowej wymagane przez usługę podczas <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> zdarzenie jest wywoływane. Mechanika subskrybowanie i anulowanie subskrypcji <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> zdarzeń odbywa się wewnętrznie.  
  
> [!NOTE]
>  Jeśli Twoje <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> zostanie usunięty z aparatu wykonawczego przepływów pracy za pomocą wywołania <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> aparatu wykonawczego przepływów pracy jest uruchomiona, wywoła aparatu wykonawczego przepływów pracy <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> w Twojej usłudze. Jednak w takiej sytuacji <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> nie będzie można wywołać metody dla Twojej usługi. W związku z usługą mogą napotkać konieczność przeprowadzenia końcowego zamknięcia systemu, który normalnie wykona w <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> z wewnątrz <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> metody. Możesz przetestować <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> do określenia, czy działa aparatu wykonawczego przepływów pracy.  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> ustawiono <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped> przed <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> zostanie wywołana.  Domyślna implementacja klasy <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> nie wykonuje żadnych działań.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseServicesExceptionNotHandledEvent">
      <MemberSignature Language="C#" Value="protected void RaiseServicesExceptionNotHandledEvent (Exception exception, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseServicesExceptionNotHandledEvent(class System.Exception exception, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseServicesExceptionNotHandledEvent(Exception ^ exception, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.RaiseServicesExceptionNotHandledEvent : Exception * Guid -&gt; unit" Usage="workflowRuntimeService.RaiseServicesExceptionNotHandledEvent (exception, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="exception">Wyjątek, który nie jest obsługiwany.</param>
        <param name="instanceId">
          <see cref="T:System.Guid" /> Wystąpienia przepływu pracy skojarzonego z nieobsługiwanego wyjątku.</param>
        <summary>Wywołuje <see cref="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usługa może wywołać <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> podnieść <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType> zdarzenie, kiedy napotka wyjątek, który nie może obsłużyć podczas jego wykonywania. Należy przekazać <xref:System.Guid> wystąpienia przepływu pracy skojarzonego z nieobsługiwanego wyjątku. Na przykład może zostać przekazany Usługa czasomierza <xref:System.Guid> skojarzone z czasomierza, dla którego wystąpił wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Runtime">
      <MemberSignature Language="C#" Value="protected System.Workflow.Runtime.WorkflowRuntime Runtime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowRuntime Runtime" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Runtime As WorkflowRuntime" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Workflow::Runtime::WorkflowRuntime ^ Runtime { System::Workflow::Runtime::WorkflowRuntime ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Runtime : System.Workflow.Runtime.WorkflowRuntime" Usage="System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> dla tej usługi.</summary>
        <value>
          <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> Obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest ustawiana w aparatu wykonawczego przepływów pracy przed wywołaniem <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> w usłudze.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="protected internal virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Start();" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; unit&#xA;override this.Start : unit -&gt; unit" Usage="workflowRuntimeService.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, rozpoczyna się usługi i zmiany <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /> do <see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> jest wywoływane przez aparatu wykonawczego przepływów pracy na wszystkich swoich usług, które wynikają z <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> klasy, gdy <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> jest wywoływana.  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> jest również wywoływany przez aparatu wykonawczego przepływów pracy, dodanie usługi aparatu środowiska uruchomieniowego przepływu pracy do aparatu wykonawczego przepływów pracy za pomocą wywołania <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> po aparatu wykonawczego przepływów pracy został już uruchomiony. Domyślna implementacja klasy <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> ustala, czy usługa została uruchomiona i używa tych informacji zostać zgłoszony odpowiedni wyjątek, jeśli usługa jest uruchomiona, gdy jest już uruchomiona.  
  
 Możesz podać dodatkowe funkcje wymagane usługi, uruchomione przez aparat środowiska uruchomieniowego przepływu pracy przez zastąpienie tej metody. Nie ma żadnej gwarancji, o, usługi zostanie uruchomione, gdy wywołuje aparatu wykonawczego przepływów pracy <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> w Twojej usłudze. Dlatego w <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metody, należy tylko wykonywać żadnych inicjowania, które nie są zależne od funkcje udostępniane przez inne usługi. W tym funkcje udostępniane przez usług podstawowych, takich jak usługi scheduler. Generuje aparatu wykonawczego przepływów pracy <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> zdarzenie po jest określana mianem <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metoda wszystkich jego usługi aparatu środowiska uruchomieniowego przepływu pracy. Jeśli usługa wymaga dodatkowych inicjowania Po zostali uruchomieni wszystkich usług aparatu środowiska uruchomieniowego przepływu pracy, można zastąpić <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> metody, aby można było wykonać ten proces inicjowania podczas <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> zdarzenie jest wywoływane.  
  
> [!NOTE]
>  Jeśli usługa jest dodawany do aparatu wykonawczego przepływów pracy za pomocą wywołania <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> po aparatu wykonawczego przepływów pracy została już uruchomiona, wywoła aparatu wykonawczego przepływów pracy <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> w Twojej usłudze. Jednak w takiej sytuacji <xref:System.Workflow.Runtime.WorkflowRuntime.Started> już wystąpiło zdarzenie, w związku z usługą mogą napotkać konieczność przeprowadzenia inicjowanie, zazwyczaj wykona w <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> z wewnątrz <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metody. Możesz przetestować <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> do określenia, czy aparat środowiska uruchomieniowego przepływu pracy zostało rozpoczęte.  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> powinna być wywoływana tylko przez aparat środowiska uruchomieniowego przepływu pracy.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano wywołanie metody Start na obiekcie pochodną <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>, TerminationTrackingService.  W tym przykładzie pochodzi z przykładu zestawu SDK usługi śledzenia zakończenia.  Aby uzyskać więcej informacji, zobacz [zakończenia usługi próbka danych do śledzenia](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#112](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#112)]
 [!code-vb[WF_Samples#112](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#112)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) 
—lub— 
Usługa została już uruchomiona.</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="protected System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState State" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property State As WorkflowRuntimeServiceState" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Workflow::Runtime::Hosting::WorkflowRuntimeServiceState State { System::Workflow::Runtime::Hosting::WorkflowRuntimeServiceState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" Usage="System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />.</summary>
        <value>Jedną z <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Klasa implementuje dwufazowe mechanizmy zarówno uruchamianie i zatrzymywanie usługi aparatu środowiska uruchomieniowego przepływu pracy. Pierwsza faza mechanizm uruchamiania rozpocznie się po aparatu wykonawczego przepływów pracy wymaga wykonania <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metody dla usługi. Ta metoda powinna wywoływać implementację podstawową <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>, który konfiguruje <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> do <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting>. Drugi etap występuje po rozpoczęciu aparatu wykonawczego przepływów pracy, wszystkie jego usługi aparatu środowiska uruchomieniowego przepływu pracy podczas zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.Started> zdarzeń. <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Wewnętrznie zarządza subskrypcji z tym zdarzeniem i ustawi jego obsługi <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> do <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started>.  
  
 Zatrzymywanie usługi aparatu środowiska uruchomieniowego przepływu pracy przy użyciu dwufazowe mechanizmu rozpoczyna się po aparatu wykonawczego przepływów pracy wymaga wykonania <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> metody dla usługi. Ta metoda powinna wywoływać implementację podstawową <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>, który konfiguruje <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> do <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping>. Po jej zatrzymaniu wszystkie jego usługi aparatu środowiska uruchomieniowego przepływu pracy, aparatu wykonawczego przepływów pracy zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> zdarzeń. <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Wewnętrznie zarządza subskrypcji z tym zdarzeniem i ustawi jego obsługi <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> do <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="protected internal virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Stop();" />
      <MemberSignature Language="F#" Value="abstract member Stop : unit -&gt; unit&#xA;override this.Stop : unit -&gt; unit" Usage="workflowRuntimeService.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zatrzymuje usługę i zmiany <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /> do <see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> jest wywoływane przez aparatu wykonawczego przepływów pracy na wszystkich swoich usług, które wynikają z <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> klasy, gdy <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> jest wywoływana.  <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> jest również wywoływany przez aparatu wykonawczego przepływów pracy, gdy usługi aparatu środowiska uruchomieniowego przepływu pracy zostanie usunięty z aparatu wykonawczego przepływów pracy za pomocą wywołania <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>. Domyślna implementacja klasy <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> ustala, czy usługa została uruchomiona i używa tych informacji zostać zgłoszony odpowiedni wyjątek, jeśli usługa zostanie zatrzymana przed jej ponownym uruchomieniu.  
  
 Możesz podać dodatkowe funkcje wymagane usługi, który został zatrzymany przez aparatu wykonawczego przepływów pracy przez zastąpienie tej metody. Nie ma żadnej gwarancji odnośnie, jeśli istnieją usług. można zatrzymać lub uruchomione podczas <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> jest wywoływana w Twojej usłudze. Generuje aparatu wykonawczego przepływów pracy <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> zdarzenie po jest określana mianem <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> metoda wszystkich jego usługi aparatu środowiska uruchomieniowego przepływu pracy. Usługa może być konieczne zachować niektóre pozostałe funkcje do obsługi innych usług, dopóki wszystkie przepływu pracy środowiska uruchomieniowego aparat usługi mieli stop metody wywoływane przez aparatu wykonawczego przepływów pracy. Jeśli Twoja usługa musi zachować takich funkcji, można zastąpić <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> metodę, aby wykonywać żadnych dodatkowych działań, wymagane do zakończenia zatrzymywanie usługi podczas <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> zdarzenie jest wywoływane.  
  
> [!NOTE]
>  Jeśli Twoje <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> zostanie usunięty z aparatu wykonawczego przepływów pracy za pomocą wywołania <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> aparatu wykonawczego przepływów pracy jest uruchomiona, wywoła aparatu wykonawczego przepływów pracy <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> w Twojej usłudze. Jednak w takiej sytuacji <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> nie będzie można wywołać metody dla Twojej usługi. W związku z usługą mogą napotkać konieczność przeprowadzenia żadnej funkcji zamykania dodatkowych, która normalnie wykona w <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> z wewnątrz <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> metody. Możesz przetestować <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> do określenia, czy działa aparatu wykonawczego przepływów pracy.  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> powinna być wywoływana tylko przez aparat środowiska uruchomieniowego przepływu pracy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).  
  
—lub— 
Usługa nie została jeszcze uruchomiona.</exception>
      </Docs>
    </Member>
  </Members>
</Type>