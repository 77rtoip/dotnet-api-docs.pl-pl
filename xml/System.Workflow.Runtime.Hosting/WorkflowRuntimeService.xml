<Type Name="WorkflowRuntimeService" FullName="System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe1758fc1c831e65ca34f8a7cb69139971eefa35" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69441518" /></Metadata><TypeSignature Language="C#" Value="public abstract class WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorkflowRuntimeService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowRuntimeService abstract" />
  <TypeSignature Language="F#" Value="type WorkflowRuntimeService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje abstrakcyjną klasę bazową, z której pochodzą podstawowe usługi aparatu środowiska uruchomieniowego przepływu pracy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Usługi, które pochodzą z <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> klasy, można uruchamiać i zatrzymywać przez aparat środowiska uruchomieniowego przepływu pracy. Kolejność, w jakiej usługi są uruchamiane lub zatrzymana, jest jednak nieokreślona, a usługi mogą wymagać obsługi innych usług w celu poprawnego zainicjowania się po ich uruchomieniu, a z drugiej strony, mogą wymagać obsługi innych usług. w celu poprawnego zamknięcia, gdy zostaną zatrzymane. Aby rozwiązać ten problem, aparat środowiska uruchomieniowego przepływu pracy zapewnia dwufazowe mechanizmy uruchamiania i zatrzymywania usług. Gdy <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> jest wywoływana, aparat środowiska uruchomieniowego przepływu pracy <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> wywołuje metodę dla każdej z jej <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> usług, która pochodzi od klasy.  Po uruchomieniu wszystkich tych usług aparat środowiska uruchomieniowego przepływu pracy zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> zdarzenie, co <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> powoduje wywołanie metody dla każdej usługi aparatu środowiska uruchomieniowego przepływu pracy. Usługa może przesłonić <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> metodę, aby wziąć udział w tym procesie dwuetapowym. Podobnie, gdy <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> jest wywoływana <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> , metoda, <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> zdarzenie i <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> Metoda zapewniają ten dwufazowy mechanizm.  Właściwość State zawiera <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> wartość wskazującą, czy usługa jest w trakcie uruchamiania, zatrzymywania lub jest całkowicie uruchomiona lub zatrzymana.  
  
 Usługi, które pochodzą z <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> klasy mogą <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType> zgłosić zdarzenie, gdy napotkają warunek, który powoduje nieobsługiwany wyjątek przez wywołanie <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>.  
  
 Usługi <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> pochodzące z klasy <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> , klasy, klasy i <xref:System.Workflow.Runtime.Tracking.TrackingService> klasy ostatecznie pochodzą od <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> klasy.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowRuntimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowRuntimeService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Po zaimplementowaniu w klasie pochodnej inicjuje nowe wystąpienie <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>jest inicjowany <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped>do.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStarted();" />
      <MemberSignature Language="F#" Value="abstract member OnStarted : unit -&gt; unit&#xA;override this.OnStarted : unit -&gt; unit" Usage="workflowRuntimeService.OnStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, reprezentuje metodę, która będzie wywoływana, gdy aparat środowiska uruchomieniowego przepływu <see cref="E:System.Workflow.Runtime.WorkflowRuntime.Started" /> pracy zgłasza zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa implementuje mechanizm uruchamiania dwuetapowego, dzięki czemu usługi aparatu środowiska uruchomieniowego przepływu pracy mogą wykonywać wszelkie inicjalizacje zależne od innych usług po <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> wywołaniu przez aparat środowiska uruchomieniowego przepływu pracy metody dla wszystkich jej <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Usługi aparatu środowiska uruchomieniowego przepływu pracy. Gdy aparat środowiska uruchomieniowego przepływu pracy wywołał <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metodę wszystkich usług aparatu środowiska uruchomieniowego przepływu pracy, <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> zgłasza zdarzenie. Można zastąpić metodę, <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> aby zapewnić wszelkie końcowe funkcje uruchamiania wymagane przez usługę w <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> momencie zgłoszenia zdarzenia. Mechanics subskrypcji i anulowania subskrypcji <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> zdarzenia są obsługiwane wewnętrznie.  
  
> [!NOTE]
>  Jeśli usługa zostanie dodana do aparatu środowiska uruchomieniowego przepływu pracy przez wywołanie <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> po już uruchomieniu aparatu środowiska uruchomieniowego przepływu pracy, aparat środowiska uruchomieniowego przepływu pracy <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> wywoła usługę. Jednak w tej sytuacji <xref:System.Workflow.Runtime.WorkflowRuntime.Started> zdarzenie już się zakończyło, dlatego może być konieczne wykonanie dowolnego inicjalizacji <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> , z poziomu wewnątrz <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metody. Możesz przeprowadzić test <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> , aby określić, czy aparat środowiska uruchomieniowego przepływu pracy został uruchomiony.  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>jest ustawiona na <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started> przed <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> wywołaniem.  Domyślna implementacja programu <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> nie wykonuje żadnych działań.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStopped">
      <MemberSignature Language="C#" Value="protected virtual void OnStopped ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStopped() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStopped ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStopped();" />
      <MemberSignature Language="F#" Value="abstract member OnStopped : unit -&gt; unit&#xA;override this.OnStopped : unit -&gt; unit" Usage="workflowRuntimeService.OnStopped " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, reprezentuje metodę, która będzie wywoływana, gdy aparat środowiska uruchomieniowego przepływu <see cref="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" /> pracy zgłasza zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa implementuje mechanizm zatrzymywania dwuetapowego, dzięki czemu usługi aparatu środowiska uruchomieniowego przepływu pracy mogą zachować pewne <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> funkcje po wywołaniu metody przez aparat środowiska uruchomieniowego przepływu pracy w taki sposób, aby mogły, w razie potrzeby, obsługiwać <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> zamknięcie innych usług. Gdy aparat środowiska uruchomieniowego przepływu pracy wywołał <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> metodę wszystkich usług aparatu środowiska uruchomieniowego przepływu pracy, <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> zgłasza zdarzenie. Można zastąpić metodę, <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> aby zapewnić wszelkie końcowe funkcje zamknięcia wymagane przez usługę w <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> momencie zgłoszenia zdarzenia. Mechanics subskrypcji i anulowania subskrypcji <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> zdarzenia są obsługiwane wewnętrznie.  
  
> [!NOTE]
>  Jeśli zostanie usunięty z aparatu środowiska uruchomieniowego przepływu pracy przez <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> wywołanie, gdy działa aparat środowiska uruchomieniowego przepływu pracy, aparat środowiska uruchomieniowego <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> przepływu pracy wywoła usługę. <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Jednak w takiej sytuacji <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> Metoda nie zostanie wywołana dla usługi. W związku z <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> tym może być konieczne wykonanie ostatecznego zamknięcia, które normalnie będzie wykonywane w <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> ramach metody. Możesz przeprowadzić test <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> , aby określić, czy aparat środowiska uruchomieniowego przepływu pracy jest uruchomiony.  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>jest ustawiona na <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped> przed <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> wywołaniem.  Domyślna implementacja programu <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> nie wykonuje żadnych działań.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseServicesExceptionNotHandledEvent">
      <MemberSignature Language="C#" Value="protected void RaiseServicesExceptionNotHandledEvent (Exception exception, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseServicesExceptionNotHandledEvent(class System.Exception exception, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseServicesExceptionNotHandledEvent(Exception ^ exception, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.RaiseServicesExceptionNotHandledEvent : Exception * Guid -&gt; unit" Usage="workflowRuntimeService.RaiseServicesExceptionNotHandledEvent (exception, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="exception">Wyjątek, którego nie można obsłużyć.</param>
        <param name="instanceId"><see cref="T:System.Guid" /> Wystąpienie przepływu pracy skojarzone z nieobsługiwanym wyjątkem.</param>
        <summary><see cref="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usługa może wywołać <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> , aby <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType> zgłosić zdarzenie, gdy napotka wyjątek, którego nie może obsłużyć podczas jego wykonywania. Należy przekazać <xref:System.Guid> wystąpienie przepływu pracy skojarzone z nieobsługiwanym wyjątkem. Na przykład usługa czasomierza może przekazać <xref:System.Guid> skojarzone z czasomierzem, dla którego wystąpił wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Runtime">
      <MemberSignature Language="C#" Value="protected System.Workflow.Runtime.WorkflowRuntime Runtime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowRuntime Runtime" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Runtime As WorkflowRuntime" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Workflow::Runtime::WorkflowRuntime ^ Runtime { System::Workflow::Runtime::WorkflowRuntime ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Runtime : System.Workflow.Runtime.WorkflowRuntime" Usage="System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> Pobiera dla tej usługi.</summary>
        <value><see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> Obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aparat środowiska uruchomieniowego przepływu pracy ustawia tę właściwość przed <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> wywołaniem jej w usłudze.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="protected internal virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Start();" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; unit&#xA;override this.Start : unit -&gt; unit" Usage="workflowRuntimeService.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, uruchamia usługę i zmienia <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /> się na. <see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>jest wywoływany przez aparat środowiska uruchomieniowego przepływu pracy na wszystkich jego usługach, które <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> pochodzą od <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> klasy, gdy jest wywoływana.  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>jest również wywoływany przez aparat środowiska uruchomieniowego przepływu pracy, gdy usługa aparatu środowiska uruchomieniowego przepływu pracy jest dodawana do aparatu <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> środowiska uruchomieniowego przepływu pracy przez wywołanie po już uruchomieniu aparatu środowiska uruchomieniowego przepływu pracy. Domyślna implementacja <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> śledzenia, czy usługa została uruchomiona i używa tych informacji, aby zgłosić odpowiedni wyjątek, jeśli usługa jest uruchomiona, gdy jest już uruchomiona.  
  
 Możesz zapewnić dodatkowe funkcje niezbędne do uruchomienia usługi przez aparat środowiska uruchomieniowego przepływu pracy przez zastąpienie tej metody. Nie ma żadnej gwarancji, o której usługi będą uruchamiane, gdy aparat środowiska uruchomieniowego przepływu pracy wywoła <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> usługę. W związku z tym <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> , w metodzie należy wykonać tylko inicjalizacje, które nie zależą od funkcjonalności oferowanej przez inne usługi. Obejmuje to funkcje oferowane przez usługi podstawowe, takie jak usługa Scheduler. Aparat środowiska uruchomieniowego przepływu pracy <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> wywołuje zdarzenie po <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> wywołaniu metody wszystkich usług aparatu środowiska uruchomieniowego przepływu pracy. Jeśli usługa wymaga dodatkowego inicjalizacji po uruchomieniu wszystkich usług aparatu środowiska uruchomieniowego przepływu pracy, można zastąpić <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> metodę, aby wykonać tę inicjalizację <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> po wywołaniu zdarzenia.  
  
> [!NOTE]
>  Jeśli usługa zostanie dodana do aparatu środowiska uruchomieniowego przepływu pracy przez wywołanie <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> po już uruchomieniu aparatu środowiska uruchomieniowego przepływu pracy, aparat środowiska uruchomieniowego przepływu pracy <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> wywoła usługę. Jednak w tej sytuacji <xref:System.Workflow.Runtime.WorkflowRuntime.Started> zdarzenie już się zakończyło, dlatego może być konieczne wykonanie dowolnego inicjalizacji <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> , z poziomu wewnątrz <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metody. Możesz przeprowadzić test <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> , aby określić, czy aparat środowiska uruchomieniowego przepływu pracy został uruchomiony.  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>powinien być wywoływany tylko przez aparat środowiska uruchomieniowego przepływu pracy.  
  
   
  
## Examples  
 Poniższy przykład demonstruje wywołanie metody Start dla obiektu pochodnego od <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>, TerminationTrackingService.  Ten przykład pochodzi z przykładu zestawu SDK usługi śledzenia zakończenia.  Aby uzyskać więcej informacji, zobacz [przykład usługi zakończenia śledzenia](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#112](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#112)]
 [!code-vb[WF_Samples#112](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#112)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" />jest odwołaniem o wartości<see langword="Nothing" /> null (w Visual Basic) 
—lub— 
Usługa została już uruchomiona.</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="protected System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState State" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property State As WorkflowRuntimeServiceState" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Workflow::Runtime::Hosting::WorkflowRuntimeServiceState State { System::Workflow::Runtime::Hosting::WorkflowRuntimeServiceState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" Usage="System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />.</summary>
        <value>Jedna z <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Klasa implementuje dwufazowe mechanizmy uruchamiania i zatrzymywania usługi aparatu środowiska uruchomieniowego przepływu pracy. Pierwsza faza mechanizmu uruchamiania rozpoczyna się, gdy aparat środowiska uruchomieniowego przepływu pracy wywołuje implementację <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metody dla usługi. Ta metoda powinna wywoływać podstawową implementację <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>, która jest <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> ustawiana na <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting>. Druga faza występuje po uruchomieniu przez aparat środowiska uruchomieniowego przepływu pracy wszystkich usług aparatu środowiska uruchomieniowego przepływu pracy podczas <xref:System.Workflow.Runtime.WorkflowRuntime.Started> zgłaszania zdarzenia. Wewnętrznie zarządza subskrypcją tego zdarzenia, a jego obsługa <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started>ustawi wartość <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>. <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>  
  
 Dwufazowy mechanizm zatrzymywania usługi aparatu środowiska uruchomieniowego przepływu pracy rozpoczyna się, gdy aparat środowiska uruchomieniowego przepływu pracy wywołuje <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> implementację metody dla usługi. Ta metoda powinna wywoływać podstawową implementację <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>, która jest <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> ustawiana na <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping>. Po zatrzymaniu wszystkich usług aparatu środowiska uruchomieniowego przepływu pracy aparat środowiska uruchomieniowego przepływu pracy zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> zdarzenie. Wewnętrznie zarządza subskrypcją tego zdarzenia, a jego obsługa <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped>ustawi wartość <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>. <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="protected internal virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Stop();" />
      <MemberSignature Language="F#" Value="abstract member Stop : unit -&gt; unit&#xA;override this.Stop : unit -&gt; unit" Usage="workflowRuntimeService.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, program zatrzyma usługę i <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /> zmieni <see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping" />się na.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>jest wywoływany przez aparat środowiska uruchomieniowego przepływu pracy na wszystkich jego usługach, które <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> pochodzą od <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> klasy, gdy jest wywoływana.  <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>jest również wywoływany przez aparat środowiska uruchomieniowego przepływu pracy, gdy usługa aparatu środowiska uruchomieniowego przepływu pracy jest usuwana z aparatu <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>środowiska uruchomieniowego przepływu pracy przez wywołanie. Domyślna implementacja <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> śledzenia, czy usługa została uruchomiona i używa tych informacji, aby zgłosić odpowiedni wyjątek, jeśli usługa zostanie zatrzymana przed rozpoczęciem.  
  
 Możesz zapewnić dodatkowe funkcje niezbędne do zatrzymania usługi przez aparat środowiska uruchomieniowego przepływu pracy przez zastąpienie tej metody. Nie ma żadnej gwarancji, w przypadku gdy taka usługa zostanie zatrzymana lub uruchomiona, gdy <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> zostanie wywołana w usłudze. Aparat środowiska uruchomieniowego przepływu pracy <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> wywołuje zdarzenie po <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> wywołaniu metody wszystkich usług aparatu środowiska uruchomieniowego przepływu pracy. Może być konieczne zachowanie pewnych pozostałych funkcji do obsługi innych usług, dopóki wszystkie usługi aparatu środowiska uruchomieniowego przepływu pracy nie zostaną wywołane przez aparat środowiska uruchomieniowego przepływu pracy. Jeśli usługa musi zachować takie funkcje, można zastąpić <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> metodę, aby wykonać dowolną dodatkową akcję, która jest wymagana, aby zakończyć zatrzymywanie usługi w <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> momencie zgłoszenia zdarzenia.  
  
> [!NOTE]
>  Jeśli zostanie usunięty z aparatu środowiska uruchomieniowego przepływu pracy przez <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> wywołanie, gdy działa aparat środowiska uruchomieniowego przepływu pracy, aparat środowiska uruchomieniowego <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> przepływu pracy wywoła usługę. <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Jednak w takiej sytuacji <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> Metoda nie zostanie wywołana dla usługi. W <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> związku z tym może być konieczne wykonanie wszelkich dodatkowych funkcji zamykania, które zwykle przeprowadzi się z <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> wewnątrz metody. Możesz przeprowadzić test <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> , aby określić, czy aparat środowiska uruchomieniowego przepływu pracy jest uruchomiony.  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>powinien być wywoływany tylko przez aparat środowiska uruchomieniowego przepływu pracy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" />jest odwołaniem o wartości<see langword="Nothing" /> null (w Visual Basic).  
  
—lub— 
Usługa nie została jeszcze uruchomiona.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
