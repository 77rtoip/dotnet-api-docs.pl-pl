<Type Name="WorkflowRuntimeService" FullName="System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b30eb5a5e6360b690bed8bd6e4576d3411e00e47" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30741623" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorkflowRuntimeService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowRuntimeService abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje abstrakcyjna klasa podstawowa, od których pochodzą usług podstawowych aparat środowiska uruchomieniowego przepływu pracy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Usługi, które pochodzą z <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> klasy może być uruchomione i zatrzymane przez aparat środowiska uruchomieniowego przepływu pracy. Kolejność, w którym są uruchamiane usługi lub zatrzymana, jednak jest nieokreślony, i usług może wymagać obsługę innych usług, aby można było poprawnie zainicjować się podczas uruchamiania, z drugiej strony, może wymagać do obsługi innych usług Aby można było poprawnie zamknięcie zostały zatrzymane. Aby rozwiązać ten problem, aparatu wykonawczego workflow zawiera mechanizmy dwufazowego uruchamianie i zatrzymywanie usług. Gdy <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> jest nazywany przepływu pracy wywołuje aparatu wykonawczego <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metody dla każdego z jego usług, które pochodzą z <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> klasy.  Po wszystkie te usługi zostały rozpoczęte, aparatu środowiska uruchomieniowego przepływu pracy zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> zdarzeń, co powoduje, że <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> metoda do wywołania dla każdej usługi aparatu środowiska uruchomieniowego przepływu pracy. Usługi można zastąpić <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> metodę, aby wziąć udział w tym procesie dwie fazy. Podobnie, jeśli <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> jest wywoływana, <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> metody, <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> zdarzenia i <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> metoda dostarcza ten mechanizm dwufazowego.  Właściwość State zawiera <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> wartość wskazującą, czy usługa jest w trakcie uruchamiania lub zatrzymywania lub jest całkowicie uruchomiony lub zatrzymany.  
  
 Usługi, które pochodzą z <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> może wiązać się z klasy <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType> zdarzeń po napotkaniu warunek, który powoduje, że wystąpił nieobsługiwany wyjątek przez wywołanie metody <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>.  
  
 Usługi pochodzące z <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> klasy, <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> klasy, <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> klasy i <xref:System.Workflow.Runtime.Tracking.TrackingService> ostatecznie pochodną klasy <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> klasy.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowRuntimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowRuntimeService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Po zaimplementowaniu w klasie pochodnej inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> zainicjowano do <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStarted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, reprezentuje metodę, która będzie wywoływana, gdy wywołuje środowiska uruchomieniowego przepływu <see cref="E:System.Workflow.Runtime.WorkflowRuntime.Started" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Klasa implementuje mechanizm początkowy dwufazowego tak, aby usługi aparatu środowiska uruchomieniowego przepływu pracy może wykonywać inicjowanie zależne od innych usług, po aparat środowiska uruchomieniowego przepływu pracy zostało wywołane <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metody dla wszystkich jego usługi aparatu środowiska uruchomieniowego przepływu pracy. Po przepływu pracy została wywołana aparatu wykonawczego <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metody wszystkie jego usługi aparatu środowiska uruchomieniowego przepływu pracy, zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> zdarzeń. Można zastąpić <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> metodę, aby korzystać z funkcji końcowego uruchomienia wymaganych przez usługę podczas <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> zdarzenia. Mechanika subskrypcji i anulowanie subskrypcji <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> zdarzeń jest obsługiwany wewnętrznie.  
  
> [!NOTE]
>  Jeśli usługa jest dodawany do aparatu wykonawczego workflow przez wywołanie do <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> po aparatu wykonawczego workflow została już uruchomiona, wywoła aparatu wykonawczego workflow <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> w usłudze. Jednak w takiej sytuacji <xref:System.Workflow.Runtime.WorkflowRuntime.Started> już wystąpiło zdarzenie, w związku z tym usługa może być konieczne zainicjować zazwyczaj będzie wykonywania w <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> z wewnątrz <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metody. Możesz przetestować <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> ustalenie, czy aparat środowiska uruchomieniowego przepływu pracy zostało rozpoczęte.  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> ustawiono <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started> przed <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> jest wywoływana.  Domyślna implementacja <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> nie wykonuje żadnej akcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStopped">
      <MemberSignature Language="C#" Value="protected virtual void OnStopped ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStopped() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStopped ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStopped();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, reprezentuje metodę, która będzie wywoływana, gdy wywołuje środowiska uruchomieniowego przepływu <see cref="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Klasa implementuje mechanizm dwufazowego zatrzymywania tak, aby usługi aparatu środowiska uruchomieniowego przepływu pracy mogą zachować niektóre funkcje po ich <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> metoda jest wywoływana przez aparat środowiska uruchomieniowego przepływu pracy, mogą w razie potrzeby obsługują zamknięcie innych usług. Po przepływu pracy została wywołana aparatu wykonawczego <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> metody wszystkie jego usługi aparatu środowiska uruchomieniowego przepływu pracy, zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> zdarzeń. Można zastąpić <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> metodę, aby korzystać z funkcji zamknięcia ostatecznego wymagane przez usługę podczas <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> zdarzenia. Mechanika subskrypcji i anulowanie subskrypcji <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> zdarzeń jest obsługiwany wewnętrznie.  
  
> [!NOTE]
>  Jeśli Twoje <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> zostanie usunięty z aparatu wykonawczego workflow przez wywołanie do <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> uruchomionej aparatu wykonawczego workflow wywoła aparatu wykonawczego workflow <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> w usłudze. Jednak w takiej sytuacji <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> nie będzie można wywołać metody dla usługi. W związku z tym usługi mogą napotkać konieczność przeprowadzenia końcowego zamknięcia systemu, które zwykle przeprowadzi w <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> z wewnątrz <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> metody. Możesz przetestować <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> ustalenie, czy aparat środowiska uruchomieniowego przepływu pracy jest uruchomiony.  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> ustawiono <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped> przed <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> jest wywoływana.  Domyślna implementacja <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> nie wykonuje żadnej akcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseServicesExceptionNotHandledEvent">
      <MemberSignature Language="C#" Value="protected void RaiseServicesExceptionNotHandledEvent (Exception exception, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseServicesExceptionNotHandledEvent(class System.Exception exception, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseServicesExceptionNotHandledEvent(Exception ^ exception, Guid instanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="exception">Wyjątek, który nie jest obsługiwany.</param>
        <param name="instanceId">
          <see cref="T:System.Guid" /> Wystąpienia przepływu pracy skojarzonego z nieobsługiwany wyjątek.</param>
        <summary>Zgłasza <see cref="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usługi można wywołać <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> podnieść <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType> zdarzeń po napotkaniu wyjątek, który nie obsłuży podczas jej wykonywania. Należy przekazać <xref:System.Guid> wystąpienia przepływu pracy skojarzonego z nieobsługiwany wyjątek. Na przykład usługa czasomierza może przekazać <xref:System.Guid> skojarzone z czasomierzem, dla którego wystąpił wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Runtime">
      <MemberSignature Language="C#" Value="protected System.Workflow.Runtime.WorkflowRuntime Runtime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowRuntime Runtime" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Runtime As WorkflowRuntime" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Workflow::Runtime::WorkflowRuntime ^ Runtime { System::Workflow::Runtime::WorkflowRuntime ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> dla tej usługi.</summary>
        <value>
          <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> Obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aparatu wykonawczego workflow ustawia tę właściwość przed wywołaniem <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> w usłudze.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="protected internal virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Start();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, uruchamia usługi i zmiany <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /> do <see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> jest wywoływany przez aparat środowiska uruchomieniowego przepływu pracy na wszystkich jego usług, które pochodzą z <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> klasę gdy <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> jest wywoływana.  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> jest również wywoływany przez aparat środowiska uruchomieniowego przepływu pracy po dodaniu usługi aparatu środowiska uruchomieniowego przepływu pracy do aparatu wykonawczego workflow przez wywołanie do <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> po aparatu wykonawczego workflow została już uruchomiona. Domyślna implementacja <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> ustala, czy usługa została uruchomiona i używa tych informacji do zgłoszenia wyjątku odpowiednie, jeśli usługa jest uruchomiona, gdy jest on już uruchomiony.  
  
 Możesz podać dodatkowe funkcje musi być uruchomione przez aparat środowiska uruchomieniowego przepływu pracy przez zastąpienie metody tej usługi. Nie ma żadnej gwarancji, o której, jeśli taki występuje, gdy wywołuje środowiska uruchomieniowego przepływu zostanie uruchomione usługi <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> w usłudze. W związku z tym w <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metody, należy tylko wykonać wszelkie inicjowania, które nie są zależne od funkcji udostępnianych przez inne usługi. W tym funkcje udostępniane przez usługi podstawowej, takie jak usługa Harmonogram. Zgłasza aparatu wykonawczego workflow <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> zdarzenia po jest określana mianem <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metody wszystkich jego usługi aparatu środowiska uruchomieniowego przepływu pracy. Jeśli usługa wymaga dodatkowych inicjowania po wszystkich usług aparatu środowiska uruchomieniowego przepływu pracy zostały rozpoczęte, można zastąpić <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> metody w celu przeprowadzenia tego inicjowania podczas <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> zdarzenia.  
  
> [!NOTE]
>  Jeśli usługa jest dodawany do aparatu wykonawczego workflow przez wywołanie do <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> po aparatu wykonawczego workflow została już uruchomiona, wywoła aparatu wykonawczego workflow <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> w usłudze. Jednak w takiej sytuacji <xref:System.Workflow.Runtime.WorkflowRuntime.Started> już wystąpiło zdarzenie, w związku z tym usługa może być konieczne zainicjować zazwyczaj będzie wykonywania w <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> z wewnątrz <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metody. Możesz przetestować <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> ustalenie, czy aparat środowiska uruchomieniowego przepływu pracy zostało rozpoczęte.  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> powinna być wywoływana tylko przez aparat środowiska uruchomieniowego przepływu pracy.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano wywoływania metody rozpoczęcia dla obiekt pochodzący od <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>, TerminationTrackingService.  W tym przykładzie jest przykładowe rozwiązanie śledzenia usługi SDK.  Aby uzyskać więcej informacji, zobacz [przykład usługi śledzenia zakończenia](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  
  
 [!code-csharp[WF_Samples#112](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#112)]
 [!code-vb[WF_Samples#112](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#112)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic)  
  
 —lub—  
  
 Usługa została już uruchomiona.</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="protected System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState State" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property State As WorkflowRuntimeServiceState" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Workflow::Runtime::Hosting::WorkflowRuntimeServiceState State { System::Workflow::Runtime::Hosting::WorkflowRuntimeServiceState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />.</summary>
        <value>Jeden z <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Klasa implementuje dwufazowego mechanizmy zarówno uruchamianie i zatrzymywanie usługi aparatu środowiska uruchomieniowego przepływu pracy. Pierwszą fazę mechanizmu start rozpoczyna się od aparatu wykonawczego workflow wymaga wykonania <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> metody dla usługi. Tę metodę należy wywoływać implementację podstawową z <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>, który określa <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> do <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting>. Na drugim etapie występuje po uruchomieniu środowiska uruchomieniowego przepływu, wszystkie jego usługi aparatu środowiska uruchomieniowego przepływu pracy podczas uruchamia <xref:System.Workflow.Runtime.WorkflowRuntime.Started> zdarzeń. <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Wewnętrznie zarządza subskrypcję do tego zdarzenia i jego obsługa ustawi <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> do <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started>.  
  
 Dwufazowego mechanizm zatrzymywanie usługi aparatu środowiska uruchomieniowego przepływu pracy rozpoczyna się od aparatu wykonawczego workflow wymaga wykonania <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> metody dla usługi. Tę metodę należy wywoływać implementację podstawową z <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>, który określa <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> do <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping>. Po wszystkich jego usług aparatu środowiska uruchomieniowego przepływu pracy została zatrzymana, aparatu środowiska uruchomieniowego przepływu pracy zgłasza <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> zdarzeń. <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Wewnętrznie zarządza subskrypcję do tego zdarzenia i jego obsługa ustawi <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> do <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="protected internal virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zatrzymuje usługę i zmiany <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /> do <see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> jest wywoływany przez aparat środowiska uruchomieniowego przepływu pracy na wszystkich jego usług, które pochodzą z <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> klasę gdy <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> jest wywoływana.  <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> jest również wywoływany przez aparat środowiska uruchomieniowego przepływu pracy usługi aparatu środowiska uruchomieniowego przepływu pracy zostanie usunięty z aparatu wykonawczego workflow przez wywołanie do <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>. Domyślna implementacja <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> ustala, czy usługa została uruchomiona i używa tych informacji do zgłoszenia odpowiedni wyjątek, jeśli usługa zostanie zatrzymana, przed jego uruchomieniem.  
  
 Możesz podać dodatkowe funkcje konieczne usługi zatrzymane przez aparat środowiska uruchomieniowego przepływu pracy przez zastąpienie tej metody. Nie ma żadnej gwarancji, o którym, jeśli istnieją usługi zostanie zatrzymana lub uruchomiona, kiedy <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> jest wywoływana w usłudze. Zgłasza aparatu wykonawczego workflow <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> zdarzenia po jest określana mianem <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> metody wszystkich jego usługi aparatu środowiska uruchomieniowego przepływu pracy. Usługa może być konieczne zachować niektóre funkcje pozostałych do obsługi innych usług, dopóki wszystkie przepływu pracy usługi czasu wykonywania aparatu miały ich metod Zatrzymaj, wywołana przez aparat środowiska uruchomieniowego przepływu pracy. Jeśli usługa musi zachować takich funkcji, można zastąpić <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> metoda wykonania żadnych dodatkowych czynności wymagane do zakończenia zatrzymywanie usługi podczas <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> zdarzenia.  
  
> [!NOTE]
>  Jeśli Twoje <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> zostanie usunięty z aparatu wykonawczego workflow przez wywołanie do <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> uruchomionej aparatu wykonawczego workflow wywoła aparatu wykonawczego workflow <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> w usłudze. Jednak w takiej sytuacji <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> nie będzie można wywołać metody dla usługi. W związku z tym usługa może być konieczne żadnej funkcji dodatkowe zamknięcia, która zwykle przeprowadzi w <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> z wewnątrz <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> metody. Możesz przetestować <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> ustalenie, czy aparat środowiska uruchomieniowego przepływu pracy jest uruchomiony.  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> powinna być wywoływana tylko przez aparat środowiska uruchomieniowego przepływu pracy.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /> to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).  
  
 —lub—  
  
 Usługa nie została jeszcze uruchomiona.</exception>
      </Docs>
    </Member>
  </Members>
</Type>