<Type Name="WorkflowPersistenceService" FullName="System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="39624ad21a7024e1c9543042d7b61f0ac0a05cc9" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48704219" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WorkflowPersistenceService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorkflowPersistenceService extends System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowPersistenceService&#xA;Inherits WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowPersistenceService abstract : System::Workflow::Runtime::Hosting::WorkflowRuntimeService" />
  <TypeSignature Language="F#" Value="type WorkflowPersistenceService = class&#xA;    inherit WorkflowRuntimeService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowRuntimeService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="69e6b-101">Abstrakcyjna klasa bazowa, z których wszystkie trwałości wywodzą się usług.</span>
      <span class="sxs-lookup">
        <span data-stu-id="69e6b-101">The abstract base class from which all persistence services are derived.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="69e6b-102">W przypadku wystąpienia określonych warunków po uruchomieniu przepływu pracy aparatu wykonawczego przepływów pracy utrzymuje informacje o stanie dotyczące wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="69e6b-102">When certain conditions occur while the workflow is running, the workflow runtime engine persists state information about the workflow instance.</span></span> <span data-ttu-id="69e6b-103">Stan trwały może wystąpić, na przykład po zakończeniu transakcji niepodzielnej gdy wystąpienie przepływu pracy staje się nieaktywna, gdy host wywołuje <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType> w wystąpieniu przepływu pracy, lub gdy wystąpienie przepływu pracy jest zakończone lub zakończeniu.</span><span class="sxs-lookup"><span data-stu-id="69e6b-103">Persistence can occur, for example, when an atomic transaction finishes, when the workflow instance becomes idle, when the host calls <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType> on the workflow instance, or when a workflow instance is terminated or finishes.</span></span> <span data-ttu-id="69e6b-104">Gdy semantykę aparat środowiska uruchomieniowego przepływu pracy określają, czy powinno nastąpić trwałości, aparatu wykonawczego przepływów pracy wywołuje metody, które są dostarczane przez usługę trwałość, aby zapisać informacje o stanie dotyczące wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="69e6b-104">When the workflow runtime engine semantics dictate that persistence should occur, the workflow runtime engine calls methods that are supplied by a persistence service to save state information about the workflow instance.</span></span> <span data-ttu-id="69e6b-105">Podobnie gdy aparat środowiska uruchomieniowego przepływu pracy musi przywrócić uprzednio utrwalonego wystąpienia przepływu pracy, wywołuje metody, które są dostarczane przez usługę trwałości można załadować informacji o stanie.</span><span class="sxs-lookup"><span data-stu-id="69e6b-105">Likewise, when the workflow runtime engine needs to restore a previously persisted workflow instance, it calls methods that are supplied by the persistence service to load this state information.</span></span> <span data-ttu-id="69e6b-106">Aparatu wykonawczego przepływów pracy obsługuje wszystkie semantyki dotyczące przeprowadzania trwałości.</span><span class="sxs-lookup"><span data-stu-id="69e6b-106">The workflow runtime engine handles all the semantics regarding when to perform persistence.</span></span> <span data-ttu-id="69e6b-107">Usługa trwałości obsługuje faktycznie zapisywanie i ładowanie informacje o stanie przepływu pracy do lub z magazynu danych.</span><span class="sxs-lookup"><span data-stu-id="69e6b-107">The persistence service handles actually saving and loading the workflow state information to or from a data store.</span></span>  
  
 <span data-ttu-id="69e6b-108">Można utworzyć usługi trwałości, wyprowadzanie klasy z <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> klasy.</span><span class="sxs-lookup"><span data-stu-id="69e6b-108">You can create a persistence service by deriving a class from the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.</span></span>  <span data-ttu-id="69e6b-109">Twoje usługi trwałości można dodawać do aparatu wykonawczego przepływów pracy, wywołując <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> lub tworząc odpowiedni wpis w pliku konfiguracyjnym aplikacji.</span><span class="sxs-lookup"><span data-stu-id="69e6b-109">You can add your persistence service to the workflow runtime engine by calling <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> or by making an appropriate entry in the application configuration file.</span></span> <span data-ttu-id="69e6b-110"><xref:System.Workflow.Runtime.WorkflowRuntime> Może zawierać tylko jedną usługę trwałości.</span><span class="sxs-lookup"><span data-stu-id="69e6b-110">The <xref:System.Workflow.Runtime.WorkflowRuntime> should only contain one persistence service.</span></span> <span data-ttu-id="69e6b-111">Windows Workflow Foundation udostępnia <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> klasy usługi trwałości out-of-box, którego można użyć w pierwotnej formie lub rozszerzyć.</span><span class="sxs-lookup"><span data-stu-id="69e6b-111">Windows Workflow Foundation provides the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class, an out-of-box persistence service, which you can use as is or extend.</span></span>  
  
 <span data-ttu-id="69e6b-112">Aparatu wykonawczego przepływów pracy ma semantykę blokowania informacje o stanie przepływu pracy do użytku w środowiskach, w którym usługi trwałości, które są uruchamiane w różnych procesach może mieć dostępu do pojedynczym magazynie danych.</span><span class="sxs-lookup"><span data-stu-id="69e6b-112">The workflow runtime engine has semantics for locking workflow state information for use in environments where persistence services that run in different processes might have access to a single data store.</span></span> <span data-ttu-id="69e6b-113"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> Klasa udostępnia możliwość obsługi tej funkcji aparatu wykonawczego przepływów pracy, podając parametr <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> określająca, czy informacje o stanie wystąpienia przepływu pracy powinny zostać odblokowany w magazynie danych i Dzięki udostępnieniu metod <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> wcześniej odblokować zablokowany informacje o stanie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="69e6b-113">The <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class provides the capability to support this functionality of the workflow runtime engine by providing a parameter to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> that specifies whether the state information of a workflow instance should be unlocked in the data store, and by providing a method <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> to unlock previously locked workflow state information.</span></span> <span data-ttu-id="69e6b-114">Usługi trwałości, który implementuje, blokowanie, wywołanie <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> należy zablokować informacje o stanie dla wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="69e6b-114">In a persistence service that implements locking, a call to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> should lock the state information for a workflow instance.</span></span>  
  
 <span data-ttu-id="69e6b-115">Usługa trwałości powinno zgłosić <xref:System.Workflow.Runtime.Hosting.PersistenceException> ich powodzenia zapisać informacje o stanie do jego magazynu danych lub załadować informacji o stanie z magazynu danych.</span><span class="sxs-lookup"><span data-stu-id="69e6b-115">Your persistence service should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> if it fails to save state information to its data store or load state information from its data store.</span></span> <span data-ttu-id="69e6b-116">Aparatu wykonawczego przepływów pracy oczekuje, że to zachowanie.</span><span class="sxs-lookup"><span data-stu-id="69e6b-116">The workflow runtime engine expects this behavior.</span></span>  
  
 <span data-ttu-id="69e6b-117">Mechanizm łączenia we wsady jest udostępniana dla usług korzystających z magazynu trwałego można zapisać informacji o stanie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="69e6b-117">A batching mechanism is provided for services that use a durable store to save workflow state information.</span></span> <span data-ttu-id="69e6b-118">Jest to istotne w takich przypadkach, aby zachować spójność między trwałych magazynach, które jest używane przez usługę trwałości i wewnętrzny stan aparatu wykonawczego przepływów pracy.</span><span class="sxs-lookup"><span data-stu-id="69e6b-118">It is important in these cases to maintain consistency between the durable store that is used by the persistence service and the internal state of the workflow runtime engine.</span></span> <span data-ttu-id="69e6b-119">Można dodawać funkcjonalność, zdefiniowane przez <xref:System.Workflow.Runtime.IPendingWork> interfejsu do usługi, a następnie uczestniczyć w przepływ pracy transakcja tworzenia plików wsadowych dostarczone przez <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> , dodając zmiany ze swoim magazynem danych jako elementy robocze do <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span><span class="sxs-lookup"><span data-stu-id="69e6b-119">You can add functionality defined by the <xref:System.Workflow.Runtime.IPendingWork> interface to your service, and then participate in workflow transaction batching provided by the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> by adding changes to your data store as work items to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span></span> <span data-ttu-id="69e6b-120">Samego magazynu trwałego należy zaimplementować <xref:System.Transactions.IEnlistmentNotification> interfejsu, tak aby informacje o przepływie pracy nie jest trwały nieprawidłowo w przypadku wycofywania transakcji.</span><span class="sxs-lookup"><span data-stu-id="69e6b-120">The durable store itself should implement the <xref:System.Transactions.IEnlistmentNotification> interface, so that workflow information is not persisted incorrectly in the event of a transaction rollback.</span></span> <span data-ttu-id="69e6b-121">Aby uzyskać więcej informacji, zobacz <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A> lub <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>.</span><span class="sxs-lookup"><span data-stu-id="69e6b-121">For more information, see <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A> or <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowPersistenceService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowPersistenceService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="69e6b-122">Po zaimplementowaniu w klasie pochodnej, inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-122">When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69e6b-123">W poniższym przykładzie pokazano tworzenie wystąpienia `SqlWorkflowPersistenceService` klasy (pochodną `WorkflowPersistenceService`).</span><span class="sxs-lookup"><span data-stu-id="69e6b-123">The following example demonstrates creating an instance of the `SqlWorkflowPersistenceService` class (derived from `WorkflowPersistenceService`).</span></span> <span data-ttu-id="69e6b-124">W tym przykładzie pochodzi z przykładu zagnieżdżone SDK programów obsługi wyjątków z klasy w pliku Program.cs.</span><span class="sxs-lookup"><span data-stu-id="69e6b-124">This example is from the Nested Exception Handlers SDK sample, from the Program.cs class.</span></span>  <span data-ttu-id="69e6b-125">Aby uzyskać więcej informacji, zobacz [zagnieżdżone przykładowe programy obsługi wyjątków](http://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265).</span><span class="sxs-lookup"><span data-stu-id="69e6b-125">For more information, see the [Nested Exception Handlers Sample](http://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265).</span></span>  
  
 [!code-csharp[WF_Samples#161](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#161)]
 [!code-vb[WF_Samples#161](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#161)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultSerializedForm">
      <MemberSignature Language="C#" Value="protected static byte[] GetDefaultSerializedForm (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig unsigned int8[] GetDefaultSerializedForm(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static cli::array &lt;System::Byte&gt; ^ GetDefaultSerializedForm(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="static member GetDefaultSerializedForm : System.Workflow.ComponentModel.Activity -&gt; byte[]" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="69e6b-126">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> Którego postaci serializowanej jest wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-126">The <see cref="T:System.Workflow.ComponentModel.Activity" /> whose serialized form is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69e6b-127">Pobiera serializacji domyślnego formularza programu <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-127">Retrieves the serialized default form of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69e6b-128">Zserializowany domyślnego formularza programu <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-128">The serialized default form of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsBlocked">
      <MemberSignature Language="C#" Value="protected internal static bool GetIsBlocked (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig bool GetIsBlocked(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function GetIsBlocked (rootActivity As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static bool GetIsBlocked(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member GetIsBlocked : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">
          <span data-ttu-id="69e6b-129">Działania głównego wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-129">The root activity of the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69e6b-130">Wskazuje, czy dane działanie zostanie zablokowana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-130">Indicates whether the given activity is blocked.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69e6b-131">
            <see langword="true" /> Jeśli dane działanie jest zablokowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-131">
              <see langword="true" /> if the given activity is blocked; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSuspendOrTerminateInfo">
      <MemberSignature Language="C#" Value="protected internal static string GetSuspendOrTerminateInfo (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig string GetSuspendOrTerminateInfo(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function GetSuspendOrTerminateInfo (rootActivity As Activity) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static System::String ^ GetSuspendOrTerminateInfo(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member GetSuspendOrTerminateInfo : System.Workflow.ComponentModel.Activity -&gt; string" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">
          <span data-ttu-id="69e6b-132">Działania głównego wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-132">The root activity of the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69e6b-133">Pobiera przerwanie lub zawiesić informacji danego działania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-133">Retrieves the termination or suspend information of the given activity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69e6b-134">A <see cref="T:System.String" /> , zawiera przerwanie lub zawiesić informacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-134">A <see cref="T:System.String" /> that contains the termination or suspend information.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowStatus">
      <MemberSignature Language="C#" Value="protected internal static System.Workflow.Runtime.WorkflowStatus GetWorkflowStatus (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig valuetype System.Workflow.Runtime.WorkflowStatus GetWorkflowStatus(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function GetWorkflowStatus (rootActivity As Activity) As WorkflowStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static System::Workflow::Runtime::WorkflowStatus GetWorkflowStatus(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member GetWorkflowStatus : System.Workflow.ComponentModel.Activity -&gt; System.Workflow.Runtime.WorkflowStatus" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">
          <span data-ttu-id="69e6b-135">Działania głównego wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-135">The root activity of the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69e6b-136">Pobiera stan przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-136">Retrieves the status of the workflow.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69e6b-137">A <see cref="T:System.Workflow.Runtime.WorkflowStatus" /> wartości wyliczenia, które wskazuje stan przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-137">A <see cref="T:System.Workflow.Runtime.WorkflowStatus" /> enumeration value that denotes the status of the workflow.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.ComponentModel.Activity LoadCompletedContextActivity (Guid scopeId, System.Workflow.ComponentModel.Activity outerActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.ComponentModel.Activity LoadCompletedContextActivity(valuetype System.Guid scopeId, class System.Workflow.ComponentModel.Activity outerActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function LoadCompletedContextActivity (scopeId As Guid, outerActivity As Activity) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::ComponentModel::Activity ^ LoadCompletedContextActivity(Guid scopeId, System::Workflow::ComponentModel::Activity ^ outerActivity);" />
      <MemberSignature Language="F#" Value="abstract member LoadCompletedContextActivity : Guid * System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowPersistenceService.LoadCompletedContextActivity (scopeId, outerActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeId" Type="System.Guid" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="scopeId">
          <span data-ttu-id="69e6b-138">
            <see cref="T:System.Guid" /> Ukończone zakresu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-138">The <see cref="T:System.Guid" /> of the completed scope.</span>
          </span>
        </param>
        <param name="outerActivity">
          <span data-ttu-id="69e6b-139">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> Reprezentujący działanie, które obejmuje zakres ukończone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-139">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the activity that encloses the completed scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69e6b-140">Po zaimplementowaniu w klasie pochodnej, ładuje określony zakres ukończone powrotem do pamięci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-140">When implemented in a derived class, loads the specified completed scope back into memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69e6b-141">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> Reprezentujący wypełniony zakres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-141">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e6b-142">Korzysta z aparatu wykonawczego przepływów pracy <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> do zaimplementowania wynagrodzenia.</span><span class="sxs-lookup"><span data-stu-id="69e6b-142">The workflow runtime engine uses <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> to implement compensation.</span></span> <span data-ttu-id="69e6b-143">Należy przywrócić identyczną kopię wypełniony zakres.</span><span class="sxs-lookup"><span data-stu-id="69e6b-143">You must restore an identical copy of the completed scope.</span></span> <span data-ttu-id="69e6b-144">Aby to zrobić, należy przywrócić prawidłową <xref:System.IO.Stream> z reprezentacji, ukończone zakresu danych magazynu.</span><span class="sxs-lookup"><span data-stu-id="69e6b-144">To do this, you must restore a valid <xref:System.IO.Stream> from your representation of the completed scope in the data store.</span></span> <span data-ttu-id="69e6b-145">Następnie musisz przekazać ten <xref:System.IO.Stream> do jednej z przeciążonych metod <xref:System.Workflow.ComponentModel.Activity.Load%2A> do wykonania deserializacji zakresu.</span><span class="sxs-lookup"><span data-stu-id="69e6b-145">Then you must pass this <xref:System.IO.Stream> to one of the overloaded methods of <xref:System.Workflow.ComponentModel.Activity.Load%2A> to perform deserialization of the scope.</span></span>  
  
 <span data-ttu-id="69e6b-146">Jeśli usługi trwałości, nie można załadować wypełniony zakres, z magazynu danych, należy zgłosić <xref:System.Workflow.Runtime.Hosting.PersistenceException> z odpowiedni komunikat.</span><span class="sxs-lookup"><span data-stu-id="69e6b-146">If your persistence service cannot load the completed scope from its data store, it should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69e6b-147">W poniższym przykładzie pokazano implementację `LoadCompletedContextActivity` metody.</span><span class="sxs-lookup"><span data-stu-id="69e6b-147">The following example demonstrates an implementation of the `LoadCompletedContextActivity` method.</span></span> <span data-ttu-id="69e6b-148">W tym przykładzie pochodzi z przykładu usługi trwałości niestandardowych z pliku FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="69e6b-148">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="69e6b-149">Aby uzyskać więcej informacji, zobacz [przykładową usługę trwałości niestandardowe](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="69e6b-149">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#269](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#269)]
 [!code-vb[WF_Samples#269](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#269)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function LoadWorkflowInstanceState (instanceId As Guid) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::ComponentModel::Activity ^ LoadWorkflowInstanceState(Guid instanceId);" />
      <MemberSignature Language="F#" Value="abstract member LoadWorkflowInstanceState : Guid -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowPersistenceService.LoadWorkflowInstanceState instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="69e6b-150">
            <see cref="T:System.Guid" /> Głównego działania wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-150">The <see cref="T:System.Guid" /> of the root activity of the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69e6b-151">Po zaimplementowaniu w klasie pochodnej, ładuje określonego stanu wystąpienia przepływu pracy do pamięci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-151">When implemented in a derived class, loads the specified state of the workflow instance back into memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69e6b-152">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> Reprezentujący działania głównego wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-152">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the root activity of the workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e6b-153">Należy przywrócić identyczną kopię działania.</span><span class="sxs-lookup"><span data-stu-id="69e6b-153">You must restore an identical copy of the activity.</span></span> <span data-ttu-id="69e6b-154">Aby to zrobić, należy przywrócić prawidłową <xref:System.IO.Stream> z reprezentacji, wystąpienia przepływu pracy w magazynie danych; następnie musisz przekazać ten <xref:System.IO.Stream> do jednej z przeciążonych <xref:System.Workflow.ComponentModel.Activity.Load%2A> metody deserializacji przepływu pracy wystąpienie stanu.</span><span class="sxs-lookup"><span data-stu-id="69e6b-154">To do this, you must restore a valid <xref:System.IO.Stream> from your representation of the workflow instance in the data store; then you must pass this <xref:System.IO.Stream> to one of the overloaded <xref:System.Workflow.ComponentModel.Activity.Load%2A> methods to deserialize the workflow instance state.</span></span> <span data-ttu-id="69e6b-155">Jeśli usługi trwałości, nie można załadować stanu wystąpienia przepływu pracy z magazynu danych, należy zgłosić <xref:System.Workflow.Runtime.Hosting.PersistenceException> z odpowiedni komunikat.</span><span class="sxs-lookup"><span data-stu-id="69e6b-155">If your persistence service cannot load the workflow instance state from its data store, it should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate message.</span></span>  
  
 <span data-ttu-id="69e6b-156">Aparatu wykonawczego przepływów pracy implementuje semantyką blokowania, aby ograniczyć dostęp do stanu wystąpienia przepływu pracy, który został zapisany w magazynie danych.</span><span class="sxs-lookup"><span data-stu-id="69e6b-156">The workflow runtime engine implements locking semantics to restrict access to a workflow instance state that is saved in a data store.</span></span> <span data-ttu-id="69e6b-157">To jest możliwy przez usługi trwałości, które są uruchamiane w wielu procesach.</span><span class="sxs-lookup"><span data-stu-id="69e6b-157">This can be accessed by persistence services that run in multiple processes.</span></span> <span data-ttu-id="69e6b-158">Blokowanie semantyki są przeznaczone do zapobiegania usługi trwałości, działających w dwóch różnych procesów z ładowania tego samego wystąpienia przepływu pracy do pamięci w tym samym czasie.</span><span class="sxs-lookup"><span data-stu-id="69e6b-158">The locking semantics are designed to prevent persistence services that run in two different processes from loading the same workflow instance into memory at the same time.</span></span> <span data-ttu-id="69e6b-159">W zależności od typu środowiska zaprojektowano usługę trwałości do pomocy technicznej, możesz wybrać opcję obsługi tej funkcji.</span><span class="sxs-lookup"><span data-stu-id="69e6b-159">Depending on the type of environment that your persistence service is designed to support, you may choose whether to support this functionality.</span></span> <span data-ttu-id="69e6b-160">Jeśli zdecydujesz się obsługiwać semantykę blokowania środowiska uruchomieniowego, lub jeśli ten przepływ pracy wystąpienie stan został wcześniej zablokowany przez inny proces, a następnie powinno zgłosić <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</span><span class="sxs-lookup"><span data-stu-id="69e6b-160">If you choose to support the runtime locking semantics, and if this workflow instance state has been previously locked by another process, then you should throw a <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</span></span> <span data-ttu-id="69e6b-161">W przeciwnym razie należy zablokować dostęp do stanu wystąpienia przepływu pracy w magazynie danych.</span><span class="sxs-lookup"><span data-stu-id="69e6b-161">Otherwise, you should lock access to the workflow instance state in your data store.</span></span> <span data-ttu-id="69e6b-162">Stan wystąpienia przepływu pracy może zostać odblokowany przez wywołanie <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> lub wywołanie <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> z parametrem unlock równa `true`.</span><span class="sxs-lookup"><span data-stu-id="69e6b-162">The workflow instance state can be unlocked by a call to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> or a call to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> with the unlock parameter set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69e6b-163">W poniższym przykładzie pokazano implementację `LoadWorkflowInstanceState` metody.</span><span class="sxs-lookup"><span data-stu-id="69e6b-163">The following example demonstrates an implementation of the `LoadWorkflowInstanceState` method.</span></span> <span data-ttu-id="69e6b-164">W tym przykładzie pochodzi z przykładu usługi trwałości niestandardowych z pliku FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="69e6b-164">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="69e6b-165">Aby uzyskać więcej informacji, zobacz [przykładową usługę trwałości niestandardowe](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="69e6b-165">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#266](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#266)]
 [!code-vb[WF_Samples#266](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#266)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreFromDefaultSerializedForm">
      <MemberSignature Language="C#" Value="protected static System.Workflow.ComponentModel.Activity RestoreFromDefaultSerializedForm (byte[] activityBytes, System.Workflow.ComponentModel.Activity outerActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Workflow.ComponentModel.Activity RestoreFromDefaultSerializedForm(unsigned int8[] activityBytes, class System.Workflow.ComponentModel.Activity outerActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function RestoreFromDefaultSerializedForm (activityBytes As Byte(), outerActivity As Activity) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Workflow::ComponentModel::Activity ^ RestoreFromDefaultSerializedForm(cli::array &lt;System::Byte&gt; ^ activityBytes, System::Workflow::ComponentModel::Activity ^ outerActivity);" />
      <MemberSignature Language="F#" Value="static member RestoreFromDefaultSerializedForm : byte[] * System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.Activity" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm (activityBytes, outerActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityBytes" Type="System.Byte[]" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activityBytes">
          <span data-ttu-id="69e6b-166">Serializowane postaci <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-166">The serialized form of <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </param>
        <param name="outerActivity">
          <span data-ttu-id="69e6b-167">Zewnętrzny <see cref="T:System.Workflow.ComponentModel.Activity" />, zawierającego <see cref="T:System.Workflow.ComponentModel.Activity" /> do przywrócenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-167">The outer <see cref="T:System.Workflow.ComponentModel.Activity" />, containing the <see cref="T:System.Workflow.ComponentModel.Activity" /> to restore.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69e6b-168">Przywraca <see cref="T:System.Workflow.ComponentModel.Activity" /> z jego serializowanej formie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-168">Restores the <see cref="T:System.Workflow.ComponentModel.Activity" /> from its serialized form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69e6b-169">Przywróconej <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-169">The restored <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69e6b-170">W poniższym przykładzie pokazano implementację `RestoreFromDefaultSerializedForm` metody.</span><span class="sxs-lookup"><span data-stu-id="69e6b-170">The following example demonstrates an implementation of the `RestoreFromDefaultSerializedForm` method.</span></span> <span data-ttu-id="69e6b-171">W tym przykładzie pochodzi z przykładu usługi trwałości niestandardowych z pliku FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="69e6b-171">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="69e6b-172">Aby uzyskać więcej informacji, zobacz [przykładową usługę trwałości niestandardowe](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="69e6b-172">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#269](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#269)]
 [!code-vb[WF_Samples#269](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#269)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal abstract void SaveCompletedContextActivity (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SaveCompletedContextActivity(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void SaveCompletedContextActivity(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="abstract member SaveCompletedContextActivity : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="workflowPersistenceService.SaveCompletedContextActivity activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="69e6b-173">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> Reprezentujący wypełniony zakres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-173">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69e6b-174">Po zaimplementowaniu w klasie pochodnej, zapisuje określonego zakresu ukończone w magazynie danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-174">When implemented in a derived class, saves the specified completed scope to a data store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e6b-175">Aparatu wykonawczego przepływów pracy zapisuje stan ukończonych zakres działań w celu wdrożenia wynagrodzenia.</span><span class="sxs-lookup"><span data-stu-id="69e6b-175">The workflow runtime engine saves the state of completed scope activities in order to implement compensation.</span></span> <span data-ttu-id="69e6b-176">Należy wywołać przeciążonej <xref:System.Workflow.ComponentModel.Activity.Save%2A> metod do wykonywania serializacji `activity` do <xref:System.IO.Stream>; następnie możesz dodatkowo przetwarzania <xref:System.IO.Stream> przed napisaniem go ze swoim magazynem danych.</span><span class="sxs-lookup"><span data-stu-id="69e6b-176">You must call one of the overloaded <xref:System.Workflow.ComponentModel.Activity.Save%2A> methods to serialize `activity` into a <xref:System.IO.Stream>; you may then choose to additionally process the <xref:System.IO.Stream> before writing it to your data store.</span></span> <span data-ttu-id="69e6b-177">Jednakże, gdy aparatu wykonawczego przepływów pracy wywołuje <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A>, należy przywrócić identyczną kopię działania.</span><span class="sxs-lookup"><span data-stu-id="69e6b-177">However, when the workflow runtime engine calls <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A>, you must restore an identical copy of the activity.</span></span>  
  
 <span data-ttu-id="69e6b-178">Użytkownik musi mieć możliwość skojarzyć ukończone zakres z otaczającego wystąpienia przepływu pracy, tak aby oznaczyć zakresu jako niepotrzebne w magazynie danych, gdy wystąpienie przepływu pracy zakończy się lub zostanie przerwane.</span><span class="sxs-lookup"><span data-stu-id="69e6b-178">You must be able to associate the completed scope with its enclosing workflow instance to mark the scope as unneeded in your data store when the workflow instance finishes or is terminated.</span></span> <span data-ttu-id="69e6b-179">W związku z tym, należy także zapisać <xref:System.Guid> wystąpienia przepływu pracy, który jest skojarzony z zakresem ukończone; to można uzyskać z <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> właściwość <xref:System.Workflow.Runtime.WorkflowInstance> skojarzone z `activity`.</span><span class="sxs-lookup"><span data-stu-id="69e6b-179">Therefore, you should also save the <xref:System.Guid> of the workflow instance that is associated with the completed scope; this can be obtained from the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property of the <xref:System.Workflow.Runtime.WorkflowInstance> associated with `activity`.</span></span>  
  
 <span data-ttu-id="69e6b-180"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> Trwa <xref:System.Guid> ukończone zakresu jako parametr.</span><span class="sxs-lookup"><span data-stu-id="69e6b-180"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> takes the <xref:System.Guid> of the completed scope as a parameter.</span></span> <span data-ttu-id="69e6b-181">W związku z tym, należy również zapisać <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A> właściwości skojarzonej z `activity`.</span><span class="sxs-lookup"><span data-stu-id="69e6b-181">Therefore, you must also save the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A> property associated with `activity`.</span></span> <span data-ttu-id="69e6b-182">Ta właściwość może być przywoływany przez <xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty> pole `activity`.</span><span class="sxs-lookup"><span data-stu-id="69e6b-182">This property can be referenced through the <xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty> field of `activity`.</span></span>  
  
 <span data-ttu-id="69e6b-183">W przypadku wdrażania usługi trwałości, korzystającą z magazynu trwałego, aby zachować spójność z wewnętrzny stan aparatu wykonawczego przepływów pracy, powinny uczestniczyć w transakcji przepływu pracy mają być odroczone rzeczywiste zapisu do trwałego magazynu do dzielenia na partie przepływ pracy zatwierdzania punktu.</span><span class="sxs-lookup"><span data-stu-id="69e6b-183">If you are implementing a persistence service that uses a durable store, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</span></span> <span data-ttu-id="69e6b-184">Aby uczestniczyć w przetwarzaniu wsadowym, Dodaj element roboczy do <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> właściwość, która reprezentuje oczekujące zmiany w bazie danych i zaimplementować <xref:System.Workflow.Runtime.IPendingWork> interfejsu w usłudze trwałości.</span><span class="sxs-lookup"><span data-stu-id="69e6b-184">To participate in batching, add a work item to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> property that represents the pending changes to the database, and implement the <xref:System.Workflow.Runtime.IPendingWork> interface in your persistence service.</span></span>  
  
 <span data-ttu-id="69e6b-185">Jeśli nie można zapisać wypełniony zakres ze swoim magazynem danych, należy zgłosić <xref:System.Workflow.Runtime.Hosting.PersistenceException> przy użyciu odpowiedniego komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="69e6b-185">If you cannot save the completed scope to your data store, you should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate error message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69e6b-186">W poniższym przykładzie pokazano implementację `SaveCompletedContextActivity` metody.</span><span class="sxs-lookup"><span data-stu-id="69e6b-186">The following example demonstrates an implementation of the `SaveCompletedContextActivity` method.</span></span> <span data-ttu-id="69e6b-187">W tym przykładzie pochodzi z przykładu usługi trwałości niestandardowych z pliku FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="69e6b-187">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="69e6b-188">Aby uzyskać więcej informacji, zobacz [przykładową usługę trwałości niestandardowe](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="69e6b-188">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#268](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#268)]
 [!code-vb[WF_Samples#268](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#268)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal abstract void SaveWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity, bool unlock);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SaveWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity, bool unlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub SaveWorkflowInstanceState (rootActivity As Activity, unlock As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void SaveWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity, bool unlock);" />
      <MemberSignature Language="F#" Value="abstract member SaveWorkflowInstanceState : System.Workflow.ComponentModel.Activity * bool -&gt; unit" Usage="workflowPersistenceService.SaveWorkflowInstanceState (rootActivity, unlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="unlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rootActivity">
          <span data-ttu-id="69e6b-189">Działania głównego wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-189">The root activity of the workflow instance.</span>
          </span>
        </param>
        <param name="unlock">
          <span data-ttu-id="69e6b-190">
            <see langword="true" /> Jeśli wystąpienie przepływu pracy nie ma być zablokowane; <see langword="false" /> Jeśli wystąpienie przepływu pracy ma być zablokowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-190">
              <see langword="true" /> if the workflow instance should not be locked; <see langword="false" /> if the workflow instance should be locked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69e6b-191">Po zaimplementowaniu w klasie pochodnej, zapisuje stan wystąpienia przepływu pracy w magazynie danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-191">When implemented in a derived class, saves the workflow instance state to a data store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e6b-192">Należy wywołać przeciążonej <xref:System.Workflow.ComponentModel.Activity.Save%2A> metod do wykonywania serializacji `rootActivity` do <xref:System.IO.Stream>.</span><span class="sxs-lookup"><span data-stu-id="69e6b-192">You must call one of the overloaded <xref:System.Workflow.ComponentModel.Activity.Save%2A> methods to serialize `rootActivity` into a <xref:System.IO.Stream>.</span></span> <span data-ttu-id="69e6b-193">Następnie użytkownik może także przetwarzać <xref:System.IO.Stream> przed napisaniem go ze swoim magazynem danych.</span><span class="sxs-lookup"><span data-stu-id="69e6b-193">You can then choose to additionally process the <xref:System.IO.Stream> before writing it to your data store.</span></span> <span data-ttu-id="69e6b-194">Jednakże, gdy aparatu wykonawczego przepływów pracy wywołuje <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>, należy przywrócić identyczną kopię działania głównego.</span><span class="sxs-lookup"><span data-stu-id="69e6b-194">However, when the workflow runtime engine calls <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>, you must restore an identical copy of the root activity.</span></span> <span data-ttu-id="69e6b-195">Jeśli nie można zapisać stanu wystąpienia przepływu pracy ze swoim magazynem danych, należy zgłosić <xref:System.Workflow.Runtime.Hosting.PersistenceException> przy użyciu odpowiedniego komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="69e6b-195">If you cannot save the workflow instance state to your data store, you should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate error message.</span></span>  
  
 <span data-ttu-id="69e6b-196">Aparatu wykonawczego przepływów pracy zapewnia semantykę blokowania, aby ograniczyć dostęp do stanu wystąpienia przepływu pracy, który został zapisany w magazynie danych.</span><span class="sxs-lookup"><span data-stu-id="69e6b-196">The workflow runtime engine provides locking semantics to restrict access to a workflow instance state that is saved in the data store.</span></span> <span data-ttu-id="69e6b-197">To jest możliwy przez usługi trwałości, działające w wielu hostach i wskazanie na tym samym magazynie danych.</span><span class="sxs-lookup"><span data-stu-id="69e6b-197">This can be accessed by the persistence services running in multiple hosts and pointing to the same data store.</span></span> <span data-ttu-id="69e6b-198">Blokowanie semantyki są przeznaczone do zapobiegania usługi trwałości, działających w dwóch różnych przepływu pracy środowiska uruchomieniowe z ładowania tego samego wystąpienia przepływu pracy do pamięci w tym samym czasie.</span><span class="sxs-lookup"><span data-stu-id="69e6b-198">The locking semantics are designed to prevent persistence services that run in two different workflow runtimes from loading the same workflow instance into memory at the same time.</span></span> <span data-ttu-id="69e6b-199">W zależności od typu środowiska, które usługi trwałości jest przeznaczona do obsługi możesz wybrać, czy obsługują tę funkcję.</span><span class="sxs-lookup"><span data-stu-id="69e6b-199">Depending on the type of environment your persistence service is designed to support, you can choose whether to support this functionality.</span></span> <span data-ttu-id="69e6b-200">Jeśli zdecydujesz się obsługiwać semantykę blokowania środowiska uruchomieniowego, a następnie, jeśli usługa trwałości próbuje zapisać stanu wystąpienia przepływu pracy, który wcześniej został zablokowany przez inną usługę trwałości, powinien zgłaszać <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</span><span class="sxs-lookup"><span data-stu-id="69e6b-200">If you choose to support the runtime locking semantics, then, if a persistence service tries to save a workflow instance state that has been previously locked by another persistence service, you should throw a <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</span></span> <span data-ttu-id="69e6b-201">Jeśli `unlock` jest `true`, należy odblokować dostęp do stanu wystąpienia przepływu pracy, po jego zapisaniu.</span><span class="sxs-lookup"><span data-stu-id="69e6b-201">If `unlock` is `true`, you should unlock access to the workflow instance state after you save it.</span></span>  
  
 <span data-ttu-id="69e6b-202"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> Trwa <xref:System.Guid> wystąpienia przepływu pracy jako parametr.</span><span class="sxs-lookup"><span data-stu-id="69e6b-202"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> takes the <xref:System.Guid> of the workflow instance as a parameter.</span></span> <span data-ttu-id="69e6b-203">W związku z tym, należy zapisać ten <xref:System.Guid>.</span><span class="sxs-lookup"><span data-stu-id="69e6b-203">Therefore, you should save this <xref:System.Guid>.</span></span> <span data-ttu-id="69e6b-204">Możesz również użyć tej funkcji <xref:System.Guid> skojarzyć wystąpienie przepływu pracy z zapisanymi stanami z jego zakresów ukończone.</span><span class="sxs-lookup"><span data-stu-id="69e6b-204">You can also use this <xref:System.Guid> to associate the workflow instance with the saved states of its completed scopes.</span></span> <span data-ttu-id="69e6b-205">Należy to zrobić, ponieważ musi umożliwiać oznaczyć te zakresy ukończone, jako niepotrzebne po ukończeniu wystąpienie przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="69e6b-205">You must do this because you must be able to mark these completed scopes as unneeded when the workflow instance completes.</span></span>  
  
 <span data-ttu-id="69e6b-206">Środowisko uruchomieniowe wywołuje aparat przepływu pracy <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> końcowego godzinę ukończone lub zakończone wystąpienia przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="69e6b-206">The workflow runtime engine calls <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> a final time when the workflow instance is completed or terminated.</span></span> <span data-ttu-id="69e6b-207">W związku z tym jeśli <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A> jest równa <xref:System.Workflow.Runtime.WorkflowStatus.Completed> lub <xref:System.Workflow.Runtime.WorkflowStatus.Terminated>, można bezpiecznie usunąć wystąpienie przepływu pracy i jego skojarzone zakresy ukończone z magazynu danych.</span><span class="sxs-lookup"><span data-stu-id="69e6b-207">Therefore, if <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A> is equal to <xref:System.Workflow.Runtime.WorkflowStatus.Completed> or <xref:System.Workflow.Runtime.WorkflowStatus.Terminated>, you can safely delete the workflow instance and all its associated completed scopes from your data store.</span></span> <span data-ttu-id="69e6b-208">Alternatywnie, możesz zasubskrybować <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> lub <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> zdarzenia w celu określenia, kiedy jest bezpiecznie usunąć rekordy skojarzone z wystąpieniem przepływu pracy.</span><span class="sxs-lookup"><span data-stu-id="69e6b-208">Alternatively, you can subscribe to the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> or <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> events to determine when it is safe to delete records associated with the workflow instance.</span></span> <span data-ttu-id="69e6b-209">Czy rzeczywiście usuwania rekordów z magazynu danych, zależy od implementacji.</span><span class="sxs-lookup"><span data-stu-id="69e6b-209">Whether you actually delete the records from your data store depends on your implementation.</span></span>  
  
 <span data-ttu-id="69e6b-210">Jeśli implementacji usługi trwałości, która korzysta z magazynu trwałego, a następnie, aby zachować spójność z wewnętrzny stan aparatu wykonawczego przepływów pracy, należy wziąć udział w transakcji przepływu pracy, przetwarzanie wsadowe mają być odroczone rzeczywiste zapisu do trwałego magazynu do przepływ pracy zatwierdzania punktu.</span><span class="sxs-lookup"><span data-stu-id="69e6b-210">If you implement a persistence service that uses a durable store, then, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</span></span> <span data-ttu-id="69e6b-211">Aby uczestniczyć w przetwarzaniu wsadowym, Dodaj element roboczy, który reprezentuje oczekujące zmiany do magazynu trwałego na <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> właściwości i implementowanie <xref:System.Workflow.Runtime.IPendingWork> interfejsu w usłudze trwałości.</span><span class="sxs-lookup"><span data-stu-id="69e6b-211">To participate in batching, add a work item that represents the pending changes to your durable store to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> property, and implement the <xref:System.Workflow.Runtime.IPendingWork> interface in your persistence service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69e6b-212">W poniższym przykładzie pokazano implementację `SaveWorkflowInstanceState` metody.</span><span class="sxs-lookup"><span data-stu-id="69e6b-212">The following example demonstrates an implementation of the `SaveWorkflowInstanceState` method.</span></span> <span data-ttu-id="69e6b-213">W tym przykładzie pochodzi z przykładu usługi trwałości niestandardowych z pliku FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="69e6b-213">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="69e6b-214">Aby uzyskać więcej informacji, zobacz [przykładową usługę trwałości niestandardowe](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="69e6b-214">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#264](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#264)]
 [!code-vb[WF_Samples#264](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#264)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadOnIdle">
      <MemberSignature Language="C#" Value="protected internal abstract bool UnloadOnIdle (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool UnloadOnIdle(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool UnloadOnIdle(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="abstract member UnloadOnIdle : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="workflowPersistenceService.UnloadOnIdle activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="69e6b-215">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> Reprezentujący wypełniony zakres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-215">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69e6b-216">Określa, czy przepływ pracy powinna być zwolniona podczas bezczynności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-216">Determines whether a workflow should be unloaded when idle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69e6b-217">Jeśli <see langword="true" />, aparatu wykonawczego przepływów pracy zwalnia określonego przepływu pracy, gdy staje się nieaktywna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-217">If <see langword="true" />, the workflow runtime engine unloads the specified workflow when it becomes idle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69e6b-218">W poniższym przykładzie pokazano implementację `UnloadOnIdle` metody.</span><span class="sxs-lookup"><span data-stu-id="69e6b-218">The following example demonstrates an implementation of the `UnloadOnIdle` method.</span></span> <span data-ttu-id="69e6b-219">W tym przykładzie pochodzi z przykładu usługi trwałości niestandardowych z pliku FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="69e6b-219">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="69e6b-220">Aby uzyskać więcej informacji, zobacz [przykładową usługę trwałości niestandardowe](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="69e6b-220">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#270](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#270)]
 [!code-vb[WF_Samples#270](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#270)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal abstract void UnlockWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void UnlockWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub UnlockWorkflowInstanceState (rootActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void UnlockWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="abstract member UnlockWorkflowInstanceState : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="workflowPersistenceService.UnlockWorkflowInstanceState rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">
          <span data-ttu-id="69e6b-221">Działania głównego wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-221">The root activity of the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69e6b-222">W przypadku przesłonięcia w klasie pochodnej, odblokowuje stanu wystąpienia przepływu pracy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69e6b-222">When overridden in a derived class, unlocks the workflow instance state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69e6b-223">Ta metoda jest abstrakcyjna, więc nie zawiera implementacji domyślnej, na blokowanie i odblokowywanie.</span><span class="sxs-lookup"><span data-stu-id="69e6b-223">This method is abstract, so it does not contain a default implementation on locking and unlocking.</span></span>  
  
 <span data-ttu-id="69e6b-224">Podczas wdrażania usługi do niestandardowego, jeśli chcesz zaimplementować blokowania schematu musisz przesłonić tę metodę i mechanizm blokowania odblokowywania w <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> metody na podstawie wartości parametru odblokowania.</span><span class="sxs-lookup"><span data-stu-id="69e6b-224">While implementing a custom persistence service, if you want to implement a locking scheme you will need to override this method and provide a locking-unlocking mechanism in the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> method based on the value of the unlock parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69e6b-225">W poniższym przykładzie pokazano implementację `UnlockWorkflowInstanceState` metody.</span><span class="sxs-lookup"><span data-stu-id="69e6b-225">The following example demonstrates an implementation of the `UnlockWorkflowInstanceState` method.</span></span> <span data-ttu-id="69e6b-226">W tym przykładzie pochodzi z przykładu usługi trwałości niestandardowych z pliku FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="69e6b-226">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="69e6b-227">Aby uzyskać więcej informacji, zobacz [przykładową usługę trwałości niestandardowe](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="69e6b-227">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#267](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#267)]
 [!code-vb[WF_Samples#267](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#267)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>