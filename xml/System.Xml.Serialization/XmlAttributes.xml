<Type Name="XmlAttributes" FullName="System.Xml.Serialization.XmlAttributes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bf080a19cbc75a5dfdf3ce5ae88f4b3cf51d0f9f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39978487" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributes extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributes" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributes" />
  <TypeSignature Language="F#" Value="type XmlAttributes = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje kolekcję obiektów atrybutu, które kontrolują sposób, w jaki <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje i deserializuje obiekt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzenie <xref:System.Xml.Serialization.XmlAttributes> jest częścią procesu, który zastępuje to domyślne sposób <xref:System.Xml.Serialization.XmlSerializer> serializuje wystąpienia klasy. Na przykład załóżmy, że chcesz do serializacji obiektu, który jest tworzony z DLL, która zawiera źródło niedostępne. Za pomocą <xref:System.Xml.Serialization.XmlAttributeOverrides>, można rozszerzyć lub inny sposób kontroluje sposób serializowany jest obiekt.  
  
 Elementy członkowskie <xref:System.Xml.Serialization.XmlAttributes> klasy odpowiadają bezpośrednio rodzinę klas atrybutów, które kontrolują serializacji. Na przykład <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> właściwość musi być równa <xref:System.Xml.Serialization.XmlTextAttribute>, co pozwala zastąpić serializacji pola lub właściwości przez poinstruowanie <xref:System.Xml.Serialization.XmlSerializer> do wykonywania serializacji wartości właściwości jako tekst XML. Aby uzyskać pełną listę atrybutów, które kontrolują serializacji, zobacz <xref:System.Xml.Serialization.XmlSerializer>.  
  
 Aby uzyskać więcej informacji na temat korzystania z <xref:System.Xml.Serialization.XmlAttributeOverrides> z <xref:System.Xml.Serialization.XmlAttributes> klasy, zobacz [jak: Określ alternatywną nazwę elementu XML Stream](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md).  
  
   
  
## Examples  
 Poniższy przykład szereguje wystąpienia klasy o nazwie `Orchestra`, który zawiera jedno pole o nazwie `Instruments` która zwraca tablicę `Instrument` obiektów. Druga klasa o nazwie `Brass` dziedziczy `Instrument` klasy. W przykładzie jest tworzony <xref:System.Xml.Serialization.XmlAttributes> obiektu do zastępowania `Instrument` pola — dzięki czemu pole zaakceptować `Brass` obiektów--i dodaje <xref:System.Xml.Serialization.XmlAttributes> obiektu do wystąpienia <xref:System.Xml.Serialization.XmlAttributeOverrides> klasy.  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlAttributes" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlAttributes" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład szereguje wystąpienia klasy o nazwie `Orchestra`, który zawiera jedno pole o nazwie `Instruments` która zwraca tablicę `Instrument` obiektów. Druga klasa o nazwie `Brass` dziedziczy `Instrument` klasy. W przykładzie jest tworzony <xref:System.Xml.Serialization.XmlAttributes> obiektu do zastępowania `Instrument` pola — dzięki czemu pole zaakceptować `Brass` obiektów--i dodaje <xref:System.Xml.Serialization.XmlAttributes> obiektu do wystąpienia <xref:System.Xml.Serialization.XmlAttributeOverrides> klasy.  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributes : System.Reflection.ICustomAttributeProvider -&gt; System.Xml.Serialization.XmlAttributes" Usage="new System.Xml.Serialization.XmlAttributes provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Klasa, która może zapewnić alternatywnych implementacji atrybutów, które kontrolują serializacji XML.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlAttributes" /> klasy i dostosowuje sposób, w jaki <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje i deserializuje obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj domyślnego konstruktora dla <xref:System.Xml.Serialization.XmlAttributes> klasy, a nie za pomocą tego konstruktora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAnyAttribute As XmlAnyAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyAttributeAttribute ^ XmlAnyAttribute { System::Xml::Serialization::XmlAnyAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAnyAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlAnyAttribute : System.Xml.Serialization.XmlAnyAttributeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> do zastąpienia.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> Do zastąpienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> Może odnosić się do elementu członkowskiego, która zwraca tablicę <xref:System.Xml.XmlAttribute> obiektów na deserializacji. Dzięki temu <xref:System.Xml.Serialization.XmlSerializer> do deserializacji wszelkie atrybuty, które nie mają odpowiednich elementu członkowskiego w polu jest obiekt deserializowany — dlatego te elementy są "Nieznany", aby <xref:System.Xml.Serialization.XmlSerializer>. Jest to przydatne, gdy strumień XML został zmieniony przez usługi sieci Web XML, lub gdy jest znany, dane losowe jest zawsze dołączany strumień XML.  
  
 <xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A> Właściwość pozwala zastąpić serializacji elementu członkowskiego, do którego <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> zostały zastosowane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlAnyElements As XmlAnyElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyElementAttributes ^ XmlAnyElements { System::Xml::Serialization::XmlAnyElementAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlAnyElements : System.Xml.Serialization.XmlAnyElementAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> obiekty do przesłonięcia.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> Obiekt, który reprezentuje kolekcję <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAnyElementAttribute> Może odnosić się do elementu członkowskiego, która zwraca tablicę <xref:System.Xml.XmlElement> obiektów na deserializacji. Dzięki temu <xref:System.Xml.Serialization.XmlSerializer> do deserializacji wszelkie elementy, które nie mają odpowiednich elementu członkowskiego w polu jest obiekt deserializowany — dlatego te elementy są "Nieznany", aby <xref:System.Xml.Serialization.XmlSerializer>. Jest to przydatne, gdy strumień XML został zmieniony przez usługi sieci Web XML, lub gdy jest znany, dane losowe jest zawsze dołączany strumień XML.  
  
 <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> Właściwość pozwala zastąpić serializacji elementu członkowskiego do działania jako element członkowski <xref:System.Xml.Serialization.XmlAnyElementAttribute> zostały zastosowane.  
  
   
  
## Examples  
 Poniższy przykład tworzy nowy <xref:System.Xml.Serialization.XmlAnyElementAttribute> obiektu i dodaje go do kolekcji obiektów, dostępne za pośrednictwem <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> właściwości. <xref:System.Xml.Serialization.XmlAttributes> Obiektu jest dodawane do <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu, który jest używany do tworzenia <xref:System.Xml.Serialization.XmlSerializer> obiektu. <xref:System.Xml.Serialization.XmlSerializer> Służy do serializacji lub deserializacji obiektu. Aby zobaczyć efekt użycia <xref:System.Xml.Serialization.XmlAnyElementAttributes> właściwości, Utwórz dokument XML o nazwie "UnknownElements.xml", uruchamiając `SerializeObject` method in Class metoda `Main` metody. Edytuj wynikowy dokument, aby uwzględnić inne elementy (nieznany). Komentarz `SerializeObject` wywołania `Main` metodę, i usuń znaczniki komentarza wywołanie `DeserializeObject` metody, która wyświetla nazwę i wartość dowolnego elementu XML nieznany.  
  
 [!code-cpp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CPP/xmlanyover.cpp#1)]
 [!code-csharp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CS/xmlanyover.cs#1)]
 [!code-vb[XmlAttributes.XmlAnyElements#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/VB/xmlanyover.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="XmlArray">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayAttribute XmlArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayAttribute XmlArray" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlArray As XmlArrayAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayAttribute ^ XmlArray { System::Xml::Serialization::XmlArrayAttribute ^ get(); void set(System::Xml::Serialization::XmlArrayAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlArray : System.Xml.Serialization.XmlArrayAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który określa sposób, w jaki <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje właściwość publiczna pola lub odczytu i zapisu, która zwraca tablicę.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> , Który określa sposób, w jaki <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje właściwość publiczna pola lub odczytu i zapisu, która zwraca tablicę.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istnieją dwa sposoby, w których pola publicznego lub właściwości publiczne odczytu/zapisu, która zwraca tablicę jest serializowany przez <xref:System.Xml.Serialization.XmlSerializer>: domyślnej serializacji i kontrolowany serializacji.  
  
 W domyślnej serializacji nie jest stosowany do elementu członkowskiego. Po serializacji, tablica jest serializowany jako zagnieżdżonych sekwencję elementów XML o nazwie elementu XML zagnieżdżonych sekwencji z nazwy elementu członkowskiego.  
  
 Aby dokładniej sterować serializacji, zastosuj <xref:System.Xml.Serialization.XmlArrayAttribute> pola lub właściwości. Na przykład zmianą wygenerowana nazwa elementu XML z domyślnej na inną nazwę, ustawiając <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> właściwości na nową wartość.  
  
 <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> Właściwość pozwala zastąpić serializacji domyślny, a także serializacji kontrolowane przez zastosowanie <xref:System.Xml.Serialization.XmlArrayAttribute> do elementu członkowskiego. Na przykład możesz zmienić nazwa elementu XML, które są generowane z domyślnego (identyfikator elementu członkowskiego) na nową wartość. Ponadto, jeśli zastosujesz <xref:System.Xml.Serialization.XmlArrayAttribute> do elementu członkowskiego, zostanie on przesłonięty przez żaden <xref:System.Xml.Serialization.XmlArrayAttribute> przypisany do <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład szereguje klasę, która zawiera pole o nazwie `Members` która zwraca tablicę obiektów. <xref:System.Xml.Serialization.XmlArrayAttribute> Umożliwia przesłonięcie serializacji pola i zmienić nazwę elementu na `Staff`.  
  
 [!code-cpp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlArrayItems">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlArrayItems As XmlArrayItemAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayItemAttributes ^ XmlArrayItems { System::Xml::Serialization::XmlArrayItemAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlArrayItems : System.Xml.Serialization.XmlArrayItemAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayItemAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolekcję obiektów, które określają sposób, w jaki <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje elementów wstawianych do tablica zwrócona przez właściwość publiczna pola lub odczytu i zapisu.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> Obiekt, który zawiera zbiór <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> Właściwość umożliwia określenie typów pochodnych, które mogą być wstawiane do tablicy, który został zwrócony przez publiczne pola lub właściwości publiczne odczytu/zapisu. Dla każdego nowego typu ma pole lub właściwość, aby zaakceptować tworzenie <xref:System.Xml.Serialization.XmlArrayItemAttribute> obiektu i <xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A> jego <xref:System.Xml.Serialization.XmlArrayItemAttributes>) zwracane przez <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> właściwości. (Nowy typ musi pochodzić od typu już akceptowane przez pole lub właściwość.) <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> <xref:System.Xml.Serialization.XmlAttributes> obiekt <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu, a następnie określ typ obiektu, który zawiera pola lub właściwości i nazwę pola lub właściwości. Konstruowania <xref:System.Xml.Serialization.XmlSerializer> z <xref:System.Xml.Serialization.XmlAttributeOverrides> obiekt przed wywołaniem <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> lub <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład szereguje klasę, która zawiera pole o nazwie `Members` która zwraca tablicę obiektów. Dwa <xref:System.Xml.Serialization.XmlArrayItemAttribute> obiekty są tworzone, aby zezwolić na polu, aby zaakceptować obiektów wyprowadzonych z klasy bazowej o nazwie `Member`. Każdy obiekt jest dodawany do <xref:System.Xml.Serialization.XmlAttributes> za pośrednictwem <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> właściwości.  
  
 [!code-cpp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAttributeAttribute XmlAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAttributeAttribute XmlAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAttribute As XmlAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAttributeAttribute ^ XmlAttribute { System::Xml::Serialization::XmlAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlAttribute : System.Xml.Serialization.XmlAttributeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który określa sposób, w jaki <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje pola publicznego lub właściwości publiczne odczytu/zapisu jako atrybut XML.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> Sterującą serializacji publiczne pola lub odczyt/zapis właściwości jako atrybut XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie jeśli atrybut nie jest stosowane do pola publicznego lub właściwości publiczne odczytu/zapisu jest serializowana jako XML element. Można również poinstruować <xref:System.Xml.Serialization.XmlSerializer> do wygenerowania atrybutu XML, stosując <xref:System.Xml.Serialization.XmlAttributeAttribute> pola lub właściwości.  
  
 <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> Właściwość pozwala zastąpić serializacji domyślny, a także serializacji kontrolowane przez zastosowanie <xref:System.Xml.Serialization.XmlAttributeAttribute> do elementu członkowskiego. Aby to zrobić, należy utworzyć <xref:System.Xml.Serialization.XmlAttributeAttribute> i ustaw jego właściwości (takie jak <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>). Przypisz nowy obiekt do <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> właściwość <xref:System.Xml.Serialization.XmlAttributes> obiektu. Dodaj <xref:System.Xml.Serialization.XmlAttributes> obiekt <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu, a następnie określ typ obiektu, który zawiera pola lub właściwości i nazwę pola lub właściwości. Na koniec Utwórz <xref:System.Xml.Serialization.XmlSerializer> przy użyciu <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu, a następnie wywołać <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> lub <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład szereguje klasę o nazwie `Group` zawiera właściwość o nazwie `GroupName`; `GroupName` właściwość jest serializowana jako atrybut XML. W przykładzie jest tworzony <xref:System.Xml.Serialization.XmlAttributeOverrides> i <xref:System.Xml.Serialization.XmlAttributes> obiektu do zastępowania domyślnej serializacji pola. Przykład tworzy następnie <xref:System.Xml.Serialization.XmlAttributeAttribute> specjalnie zastąpienia właściwość i obiekt jest równa <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> właściwość <xref:System.Xml.Serialization.XmlAttributes> obiekt jest dodawany do <xref:System.Xml.Serialization.XmlAttributeOverrides> obiekt o nazwie zgodnym z przesłoniętą składową określony. Na koniec <xref:System.Xml.Serialization.XmlSerializer> jest tworzony i zwracany za pomocą <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu.  
  
 [!code-cpp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlChoiceIdentifier">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlChoiceIdentifier As XmlChoiceIdentifierAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ XmlChoiceIdentifier { System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlChoiceIdentifier : System.Xml.Serialization.XmlChoiceIdentifierAttribute" Usage="System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlChoiceIdentifierAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który umożliwia rozróżnianie między zestawu opcji.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> , Który można zastosować do składowej klasy, który jest serializowany jako <see langword="xsi:choice" /> elementu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDefaultValue">
      <MemberSignature Language="C#" Value="public object XmlDefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object XmlDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ XmlDefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDefaultValue : obj with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość domyślną elementu lub atrybutu XML.</summary>
        <value>
          <see cref="T:System.Object" /> Reprezentujący wartość domyślna elementu lub atrybutu XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna elementu XML lub atrybut XML można określić, stosując <xref:System.ComponentModel.DefaultValueAttribute> do elementu członkowskiego. Aby zbadać wynikiem zastosowania wartości, Kompilowanie aplikacji w pliku DLL lub pliku wykonywalnego i przekaż wynikowy plik jako argument do narzędzia definicji schematu XML (XSD.exe). W dokumencie schematu XML, wartość domyślna jest przypisany do `default` atrybutu. W poniższym przykładzie wartość domyślna dla \<zwierzę > element to "Psy."  
  
```  
<?xml version="1.0"?>  
 <schema attributeFormDefault="qualified"   
 elementFormDefault="qualified" targetNamespace=""   
 xmlns="http://www.w3.org/2000/10/XMLSchema">  
   <element name="Pets" nullable="true" type="Pets"/>  
   <complexType name="Pets">  
     <sequence>  
       <element default="Dogs" name="Animal" nullable="true"   
        type="string" minOccurs="0"/>  
     </sequence>  
   </complexType>  
 </schema>  
```  
  
 Aby zastąpić wartość domyślną, należy utworzyć <xref:System.Object> i przypisz ją do <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>.  
  
 Jeśli wartość przypisana do pola lub właściwości jest równa wartości domyślne dla tego pola lub właściwości <xref:System.Xml.Serialization.XmlSerializer> nie serializować wartość wystąpienie XML. Jest to spowodowane przypisaną wartością można odzyskać od schematu XML. Innymi słowy ustawienie pola lub właściwości do wartości domyślnej jest równoważna nie ustawienia w ogóle. Podobnie, jeśli nie ma ustawionej wartości dla pola lub właściwości <xref:System.Xml.Serialization.XmlSerializer> używa wartości domyślne znalezione w schemacie. Zarówno przypadków, (ustawienie właściwości na wartość domyślną lub nie ustawienie na wszystkich) wystąpienia dokumentu XML nie zawiera żadnej wartości dla właściwości.  
  
 Konstruktory klasy zamiast schematu służy do przypisywania wartości domyślne. Jeśli używasz Xsd.exe wygenerować klas na podstawie schematów, można przekształcić w komentarz lub wszystkie atrybuty [System.ComponentModel.DefaultValueAttribute("myFieldName")] usuwanie plików klasy.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano klasę o nazwie `Pet` zawierający pola, którego wartość domyślna równa "Dog". Jednak w przykładzie jest również tworzony <xref:System.Xml.Serialization.XmlAttributes> obiektu i zestawy jego <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A> właściwości na nową wartość domyślną ("Cat"). Zastępuje to oryginalna wartość domyślną. Dlatego, jeśli pole jest ustawione na wartość "Cat" <xref:System.Xml.Serialization.XmlSerializer> traktuje ją jako wartość domyślną, a nie można go serializować. Jeśli jest ustawiona na jakąkolwiek inną wartość, <xref:System.Xml.Serialization.XmlSerializer> serializuje wartość.  
  
 [!code-cpp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlElementAttributes XmlElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlElementAttributes XmlElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlElements As XmlElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlElementAttributes ^ XmlElements { System::Xml::Serialization::XmlElementAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlElements : System.Xml.Serialization.XmlElementAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję obiektów, które określają sposób, w jaki <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje publiczne pola lub odczyt/zapis właściwości jako XML element.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> Zawiera zbiór <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla każdego zgodnym z przesłoniętą składową, która jest serializowana jako XML element, należy dodać nowy <xref:System.Xml.Serialization.XmlElementAttribute> do <xref:System.Xml.Serialization.XmlElementAttributes> przez wywołanie metody <xref:System.Xml.Serialization.XmlElementAttributes.Add%2A> metody. Domyślnie <xref:System.Xml.Serialization.XmlElementAttributes> obiektu zostanie utworzone i przypisane do <xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład szereguje `Transportation` klasy, która zawiera jedno pole o nazwie `Vehicles` zwracającego <xref:System.Collections.ArrayList>. Przykład dotyczy dwóch <xref:System.Xml.Serialization.XmlElementAttribute> atrybuty do `Vehicles` pola. Przykład tworzy dwie <xref:System.Xml.Serialization.XmlElementAttribute> obiektów i doda je do <xref:System.Xml.Serialization.XmlElementAttributes> zbiór <xref:System.Xml.Serialization.XmlAttributes> obiektu. Aby zezwolić na tablicy zaakceptować różnych typów obiektów, <xref:System.Xml.Serialization.XmlAttributes> obiekt jest dodawany do <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu.  
  
 [!code-cpp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEnum">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlEnumAttribute XmlEnum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlEnumAttribute XmlEnum" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlEnum As XmlEnumAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlEnumAttribute ^ XmlEnum { System::Xml::Serialization::XmlEnumAttribute ^ get(); void set(System::Xml::Serialization::XmlEnumAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlEnum : System.Xml.Serialization.XmlEnumAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlEnumAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który określa sposób, w jaki <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje elementu członkowskiego wyliczenia.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> , Który określa sposób, w jaki <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje elementu członkowskiego wyliczenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla każdego identyfikatora do zastąpienia, należy utworzyć <xref:System.Xml.Serialization.XmlAttributes> obiektu, a następnie ustaw <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> właściwości <xref:System.Xml.Serialization.XmlEnumAttribute> , zastępuje identyfikator. Dodaj <xref:System.Xml.Serialization.XmlAttributes> obiekt <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu i podać obydwie wartości <xref:System.Type> klasy, która zawiera wyliczenie i nazwy zgodnym z przesłoniętą składową.  
  
   
  
## Examples  
 Poniższy przykład szereguje dwie klasy o nazwie `Food` i `FoodType`. `FoodType` Klasa zawiera dwa wyliczenia, które są zastępowane, oraz dla każdego wyliczenia w przykładzie jest tworzony <xref:System.Xml.Serialization.XmlEnumAttribute> obiekt, który przypisuje do <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> właściwość <xref:System.Xml.Serialization.XmlAttributes> obiektu. Przykład następnie dodaje <xref:System.Xml.Serialization.XmlAttributes> obiekt <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu, który jest używany do tworzenia <xref:System.Xml.Serialization.XmlSerializer>.  
  
 [!code-cpp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlIgnore">
      <MemberSignature Language="C#" Value="public bool XmlIgnore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XmlIgnore" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlIgnore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool XmlIgnore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.XmlIgnore : bool with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje pola publicznego lub właściwości publiczne odczytu/zapisu.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Xml.Serialization.XmlSerializer" /> nie muszą serializację, pole lub właściwość; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie pola publiczne i właściwości publiczne odczytu/zapisu są serializowane przez <xref:System.Xml.Serialization.XmlSerializer>. Oznacza to, że wartość każdego pola publicznego lub właściwości są utrwalane jako XML element lub atrybut XML w wystąpieniu dokumentu XML.  
  
 Aby zastąpić serializacji domyślne pola lub właściwości, należy utworzyć <xref:System.Xml.Serialization.XmlAttributes> obiektu, a następnie ustaw jego <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> właściwość `true`. <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> obiekt do <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu, a następnie określ typ obiektu, który zawiera pola lub właściwości, aby zignorować i nazwy pola lub właściwości do ignorowania.  
  
 Jeśli <xref:System.Xml.Serialization.XmlIgnoreAttribute> jest stosowany do pola lub właściwości, pola lub właściwości jest ignorowane. Jednak to zachowanie można zastąpić, tworząc <xref:System.Xml.Serialization.XmlAttributes> obiektu, ustawiając jego <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> właściwości `false`, dodaniem jej do <xref:System.Xml.Serialization.XmlAttributeOverrides> określający typ obiektu, który zawiera pola lub właściwości, a nazwa obiektu pole lub właściwość.  
  
   
  
## Examples  
 Poniższy przykład szereguje klasę o nazwie `Group`, który zawiera element o nazwie `Comment` do której <xref:System.Xml.Serialization.XmlIgnoreAttribute> jest stosowany. W przykładzie jest tworzony <xref:System.Xml.Serialization.XmlAttributes> obiektu i zestawy <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> właściwości `false`, a tym samym nadrzędnych <xref:System.Xml.Serialization.XmlIgnoreAttribute>.  
  
 [!code-cpp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Xmlns">
      <MemberSignature Language="C#" Value="public bool Xmlns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Xmlns" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberSignature Language="VB.NET" Value="Public Property Xmlns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Xmlns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Xmlns : bool with get, set" Usage="System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy chcesz zachować wszystkie deklaracje przestrzeni nazw, gdy obiekt zawierający element członkowski, który zwraca <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> obiektu zostanie zastąpiona.</summary>
        <value>
          <see langword="true" /> Jeśli deklaracje przestrzeni nazw powinny być przechowywane; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład zawiera klasę o nazwie `Student`. Klasa zawiera element o nazwie `MyNamespaces` zwracającego <xref:System.Xml.Serialization.XmlSerializerNamespaces> obiektu. W przykładzie jest tworzony <xref:System.Xml.Serialization.XmlAttributes> obiektu, który jest dodawany do wystąpienia <xref:System.Xml.Serialization.XmlAttributeOverrides> klasy. <xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A> Właściwość jest ustawiona na `true`, który powoduje, że <xref:System.Xml.Serialization.XmlSerializer> zachować przestrzenie nazw podczas serializacji `Student` obiektu zostanie zastąpiona.  
  
 [!code-cpp[XmlAttributes.Xmlns property example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CPP/xmlns.cpp#1)]
 [!code-csharp[XmlAttributes.Xmlns property example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CS/xmlns.cs#1)]
 [!code-vb[XmlAttributes.Xmlns property example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/VB/xmlns.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlRoot">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlRootAttribute XmlRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlRootAttribute XmlRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlRoot As XmlRootAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlRootAttribute ^ XmlRoot { System::Xml::Serialization::XmlRootAttribute ^ get(); void set(System::Xml::Serialization::XmlRootAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlRoot : System.Xml.Serialization.XmlRootAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlRootAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który określa sposób, w jaki <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje klasy jako element główny XML.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> , Zastępuje klasę określane jako element główny XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu <xref:System.Xml.Serialization.XmlAttributes> obiektu, a <xref:System.Xml.Serialization.XmlRootAttribute> obiektu. Przykład przypisuje <xref:System.Xml.Serialization.XmlRootAttribute> do <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> właściwość <xref:System.Xml.Serialization.XmlAttributes> obiektu i dodaje <xref:System.Xml.Serialization.XmlAttributes> obiekt <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu. Na koniec przykład pobiera <xref:System.Xml.Serialization.XmlAttributes> obiektu przez przekazanie <xref:System.Type> klasy Zserializowany do <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu. (W tym przykładzie <xref:System.Type> jest `Group`.)  
  
 [!code-cpp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlText">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTextAttribute XmlText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTextAttribute XmlText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlText As XmlTextAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTextAttribute ^ XmlText { System::Xml::Serialization::XmlTextAttribute ^ get(); void set(System::Xml::Serialization::XmlTextAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlText : System.Xml.Serialization.XmlTextAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTextAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który powoduje, że <see cref="T:System.Xml.Serialization.XmlSerializer" /> do serializacji pola publicznego lub właściwości publiczne odczytu/zapisu jako tekst XML.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> , Zastąpienia domyślnej serializacji pola lub właściwości publicznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie publiczne pola lub właściwości publiczne odczytu/zapisu jest serializowana jako XML element przez <xref:System.Xml.Serialization.XmlSerializer>. Jednak można wymusić, pole lub właściwość serializowana jako tekst XML, stosując <xref:System.Xml.Serialization.XmlTextAttribute> pola lub właściwości.  
  
> [!NOTE]
>  <xref:System.Xml.Serialization.XmlTextAttribute> Nie można zastosować do pola lub właściwości, która zwraca tablicę.  
  
 Aby zastąpić serializacji domyślne pola lub właściwości, (która zwraca tablicę), Utwórz <xref:System.Xml.Serialization.XmlTextAttribute> i przypisz ją do <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> właściwość <xref:System.Xml.Serialization.XmlAttributes> obiektu. Dodaj <xref:System.Xml.Serialization.XmlAttributes> obiekt <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu, a następnie określ typ obiektu, który zawiera zgodnym z przesłoniętą pola lub właściwości i nazwę zgodnym z przesłoniętą pole lub właściwość.  
  
   
  
## Examples  
 Poniższy przykład szereguje klasę o nazwie `Group`, która zawiera pole o nazwie `Comment`. Aby zastąpić domyślne sposób <xref:System.Xml.Serialization.XmlSerializer> serializuje pola, w przykładzie jest tworzony <xref:System.Xml.Serialization.XmlAttributeOverrides> i <xref:System.Xml.Serialization.XmlAttributes> obiektu. Przykład tworzy następnie <xref:System.Xml.Serialization.XmlTextAttribute> obiektu, który przypisuje do <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> właściwości i dodaje <xref:System.Xml.Serialization.XmlAttributes> do obiektu (z nazwą pola, aby zostać Zserializowany jako tekst XML) <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu. Wreszcie w przykładzie jest tworzony <xref:System.Xml.Serialization.XmlSerializer> przy użyciu <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu.  
  
 [!code-cpp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlType">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeAttribute XmlType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTypeAttribute XmlType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlType As XmlTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTypeAttribute ^ XmlType { System::Xml::Serialization::XmlTypeAttribute ^ get(); void set(System::Xml::Serialization::XmlTypeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlType : System.Xml.Serialization.XmlTypeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który określa sposób, w jaki <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje klasy, do którego <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> zostały zastosowane.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> , Zastępuje <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> stosowane do deklaracji klasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlTypeAttribute> Może służyć do kontrolowania, jak typ jest serializowany przez <xref:System.Xml.Serialization.XmlSerializer>. Na przykład domyślnie, gdy typ jest serializowana <xref:System.Xml.Serialization.XmlSerializer> używa nazwy klasy jako nazwa elementu XML. Tworząc <xref:System.Xml.Serialization.XmlTypeAttribute>, ustawiając <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> właściwości i tworzenie <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu, możesz zmienić nazwę elementu XML.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.Serialization.XmlTypeAttribute> obiektu, a następnie przypisuje go do <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> właściwość <xref:System.Xml.Serialization.XmlAttributes> obiektu.  
  
 [!code-cpp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>