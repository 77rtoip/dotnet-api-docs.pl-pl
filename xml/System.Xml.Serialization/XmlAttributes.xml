<Type Name="XmlAttributes" FullName="System.Xml.Serialization.XmlAttributes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="edc9671be617b74dce18228bd8abdf746446c9c8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30741752" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributes extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributes" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributes" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje kolekcję obiektów atrybutu, które kontrolują sposób <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje i deserializuje obiekt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzenie <xref:System.Xml.Serialization.XmlAttributes> wchodzi w skład procesu, który zastępuje domyślną sposób <xref:System.Xml.Serialization.XmlSerializer> wykonuje serializację wystąpień klas. Na przykład załóżmy, że chcesz uszeregować obiekt, który został utworzony na podstawie biblioteki DLL, które ma źródła niedostępny. Przy użyciu <xref:System.Xml.Serialization.XmlAttributeOverrides>, można rozszerzyć lub inny sposób kontroluje sposób serializowany jest obiekt.  
  
 Elementy członkowskie <xref:System.Xml.Serialization.XmlAttributes> klasy odpowiada bezpośrednio rodzina klas atrybutów, które kontrolują serializacji. Na przykład <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> musi mieć ustawioną właściwość <xref:System.Xml.Serialization.XmlTextAttribute>, co umożliwia zastąpienia serializacji pola lub właściwości przez poinstruowanie <xref:System.Xml.Serialization.XmlSerializer> do serializacji wartości właściwości jako tekst XML. Aby uzyskać pełną listę atrybutów, które kontrolują serializacji, zobacz <xref:System.Xml.Serialization.XmlSerializer>.  
  
 Aby uzyskać więcej informacji na temat używania <xref:System.Xml.Serialization.XmlAttributeOverrides> z <xref:System.Xml.Serialization.XmlAttributes> , zobacz [porady: Określ alternatywną nazwę elementu strumienia XML](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md).  
  
   
  
## Examples  
 Poniższy przykład serializuje wystąpienia klasy o nazwie `Orchestra`, który zawiera jedno pole o nazwie `Instruments` zwracająca tablicę `Instrument` obiektów. Drugiej klasy o nazwie `Brass` dziedziczy `Instrument` klasy. W przykładzie jest tworzony <xref:System.Xml.Serialization.XmlAttributes> obiekt, aby zastąpić `Instrument` pola – stosowanie pole zaakceptować `Brass` obiekty--i dodaje <xref:System.Xml.Serialization.XmlAttributes> obiektu na wystąpienie <xref:System.Xml.Serialization.XmlAttributeOverrides> klasy.  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlAttributes" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlAttributes" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład serializuje wystąpienia klasy o nazwie `Orchestra`, który zawiera jedno pole o nazwie `Instruments` zwracająca tablicę `Instrument` obiektów. Drugiej klasy o nazwie `Brass` dziedziczy `Instrument` klasy. W przykładzie jest tworzony <xref:System.Xml.Serialization.XmlAttributes> obiekt, aby zastąpić `Instrument` pola – stosowanie pole zaakceptować `Brass` obiekty--i dodaje <xref:System.Xml.Serialization.XmlAttributes> obiektu na wystąpienie <xref:System.Xml.Serialization.XmlAttributeOverrides> klasy.  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Klasa, która może zapewnić alternatywnych implementacji atrybuty, które kontrolują serializacji XML.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlAttributes" /> klasy i dostosowuje sposób <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje i deserializuje obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj domyślnego konstruktora dla <xref:System.Xml.Serialization.XmlAttributes> klasy, a nie za pomocą tego konstruktora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAnyAttribute As XmlAnyAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyAttributeAttribute ^ XmlAnyAttribute { System::Xml::Serialization::XmlAnyAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAnyAttributeAttribute ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> do zastąpienia.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> Do zastąpienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> Można zastosować do elementu członkowskiego, który zwraca tablicę <xref:System.Xml.XmlAttribute> obiektów przy deserializacji. Dzięki temu <xref:System.Xml.Serialization.XmlSerializer> do deserializacji atrybuty, które nie mają odpowiedni element członkowski jest obiekt rozszeregować — w związku z tym te elementy są "Nieznany" do <xref:System.Xml.Serialization.XmlSerializer>. Jest to przydatne, gdy strumień XML został zmieniony przez usługi XML sieci Web lub w przypadku, gdy wiadomo, losowe dane zawsze jest uwzględniona w strumieniu XML.  
  
 <xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A> Właściwości pozwala zastąpić serializacji elementu członkowskiego, do którego <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> została zastosowana.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlAnyElements As XmlAnyElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyElementAttributes ^ XmlAnyElements { System::Xml::Serialization::XmlAnyElementAttributes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> obiekty do zastąpienia.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> Obiekt, który reprezentuje kolekcję <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAnyElementAttribute> Można zastosować do elementu członkowskiego, który zwraca tablicę <xref:System.Xml.XmlElement> obiektów przy deserializacji. Dzięki temu <xref:System.Xml.Serialization.XmlSerializer> do deserializacji elementów, które nie mają odpowiedni element członkowski jest obiekt rozszeregować — w związku z tym te elementy są "Nieznany" do <xref:System.Xml.Serialization.XmlSerializer>. Jest to przydatne, gdy strumień XML został zmieniony przez usługi XML sieci Web lub w przypadku, gdy wiadomo, losowe dane zawsze jest uwzględniona w strumieniu XML.  
  
 <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> Właściwości pozwala zastąpić serializacji elementu członkowskiego do działania jako członka, do którego <xref:System.Xml.Serialization.XmlAnyElementAttribute> została zastosowana.  
  
   
  
## Examples  
 Poniższy przykład tworzy nowy <xref:System.Xml.Serialization.XmlAnyElementAttribute> obiektu i dodaje go do kolekcji obiektów dostępne za pośrednictwem <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> właściwości. <xref:System.Xml.Serialization.XmlAttributes> Następnie dodać obiektu do <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu, który jest używany do tworzenia <xref:System.Xml.Serialization.XmlSerializer> obiektu. <xref:System.Xml.Serialization.XmlSerializer> Służy do serializacji lub deserializacji obiektu. Aby zobaczyć efekt użycia <xref:System.Xml.Serialization.XmlAnyElementAttributes> właściwości, Utwórz dokument XML o nazwie "UnknownElements.xml", uruchamiając `SerializeObject` metody w `Main` metody. Edytuj wynikowy dokument do dołączenia do innych elementów (nieznany). Komentarz `SerializeObject` wywołanie w `Main` metody i Usuń komentarz wywołanie `DeserializeObject` metodę, która wyświetla nazwę i wartość żadnych nieznanego elementu XML.  
  
 [!code-cpp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CPP/xmlanyover.cpp#1)]
 [!code-csharp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CS/xmlanyover.cs#1)]
 [!code-vb[XmlAttributes.XmlAnyElements#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/VB/xmlanyover.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="XmlArray">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayAttribute XmlArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayAttribute XmlArray" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlArray As XmlArrayAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayAttribute ^ XmlArray { System::Xml::Serialization::XmlArrayAttribute ^ get(); void set(System::Xml::Serialization::XmlArrayAttribute ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który określa sposób <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje właściwości publiczne pola lub odczytu/zapisu, która zwraca tablicę.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> , Który określa sposób <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje właściwości publiczne pola lub odczytu/zapisu, która zwraca tablicę.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istnieją dwa sposoby, w których pola publicznego lub właściwości publicznej odczytu/zapisu, która zwraca tablicę jest serializowany przez <xref:System.Xml.Serialization.XmlSerializer>: domyślnej serializacji i kontrolowane serializacji.  
  
 W domyślnej serializacji atrybut nie jest stosowany do elementu członkowskiego. Podczas serializacji, tablicy jest szeregowana jako zagnieżdżonych sekwencji elementów XML o nazwie elementu XML zagnieżdżonych sekwencji pobranych z nazwę elementu członkowskiego.  
  
 Aby ściślej kontrolować serializacji, zastosuj <xref:System.Xml.Serialization.XmlArrayAttribute> pola lub właściwości. Na przykład zmianą wygenerowana nazwa elementu XML z domyślnego pod inną nazwą przez ustawienie <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> właściwości na nową wartość.  
  
 <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> Właściwości pozwala zastąpić domyślnej serializacji, a także serializacji kontrolowane przez zastosowanie <xref:System.Xml.Serialization.XmlArrayAttribute> do elementu członkowskiego. Na przykład można zmienić nazwy elementu XML wygenerowane z domyślnej (identyfikator elementu członkowskiego) do nowej wartości. Ponadto w przypadku zastosowania <xref:System.Xml.Serialization.XmlArrayAttribute> do elementu członkowskiego, zostanie on przesłonięty przez żadną <xref:System.Xml.Serialization.XmlArrayAttribute> przypisany do <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład serializuje klasę, która zawiera pole o nazwie `Members` zwracająca tablicę obiektów. <xref:System.Xml.Serialization.XmlArrayAttribute> Służy do zastępowania serializacji pola i zmienić nazwę elementu na `Staff`.  
  
 [!code-cpp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlArrayItems">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlArrayItems As XmlArrayItemAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayItemAttributes ^ XmlArrayItems { System::Xml::Serialization::XmlArrayItemAttributes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayItemAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolekcję obiektów, które określają sposób <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje elementów wstawianych do tablicy zwracanej przez właściwość publiczna pola lub odczytu/zapisu.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> Obiekt, który zawiera kolekcję <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> Właściwość umożliwia określenie typów pochodnych, które można wstawiać do tablica zwrócona przez pola publicznego lub właściwości publicznej odczytu/zapisu. Dla każdego nowego typu ma pole lub właściwość, aby zaakceptować utworzyć <xref:System.Xml.Serialization.XmlArrayItemAttribute> obiektu i <xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A> go do <xref:System.Xml.Serialization.XmlArrayItemAttributes>) zwrócone przez <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> właściwości. (Nowy typ musi pochodzić z typu już zaakceptowana przez pole lub właściwość.) <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> <xref:System.Xml.Serialization.XmlAttributes> do obiektu <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu i określić typ obiektu, który zawiera pole lub właściwość i nazwy pola lub właściwości. Utworzyć <xref:System.Xml.Serialization.XmlSerializer> z <xref:System.Xml.Serialization.XmlAttributeOverrides> obiekt przed wywołaniem <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> lub <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład serializuje klasę, która zawiera pole o nazwie `Members` zwracająca tablicę obiektów. Dwa <xref:System.Xml.Serialization.XmlArrayItemAttribute> obiekty są tworzone, aby umożliwić pole zaakceptować obiektów wyprowadzonych z klasy podstawowej o nazwie `Member`. Każdy obiekt jest dodawany do <xref:System.Xml.Serialization.XmlAttributes> za pośrednictwem <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> właściwości.  
  
 [!code-cpp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAttributeAttribute XmlAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAttributeAttribute XmlAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAttribute As XmlAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAttributeAttribute ^ XmlAttribute { System::Xml::Serialization::XmlAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAttributeAttribute ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który określa sposób <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje pola publicznego lub właściwości publicznej odczytu/zapisu jako atrybutu XML.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> Steruje serializacji publiczne pola lub odczytu/zapisu właściwości jako atrybutu XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie jeśli atrybut nie jest stosowany do pola publicznego lub właściwości publicznej odczytu/zapisu, jego jest szeregowana jako XML element. Można także skonfigurować <xref:System.Xml.Serialization.XmlSerializer> do wygenerowania atrybutu XML, stosując <xref:System.Xml.Serialization.XmlAttributeAttribute> pola lub właściwości.  
  
 <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> Właściwości pozwala zastąpić domyślnej serializacji, a także serializacji kontrolowane przez zastosowanie <xref:System.Xml.Serialization.XmlAttributeAttribute> do elementu członkowskiego. W tym celu należy utworzyć <xref:System.Xml.Serialization.XmlAttributeAttribute> i ustawienia swoich właściwości (takie jak <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>). Przypisz nowy obiekt do <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> właściwość <xref:System.Xml.Serialization.XmlAttributes> obiektu. Dodaj <xref:System.Xml.Serialization.XmlAttributes> do obiektu <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu i określić typ obiektu, który zawiera pole lub właściwość i nazwy pola lub właściwości. Na koniec Utwórz <xref:System.Xml.Serialization.XmlSerializer> przy użyciu <xref:System.Xml.Serialization.XmlAttributeOverrides> obiekt i wywołanie <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> lub <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład serializuje klasę o nazwie `Group` zawiera właściwość o nazwie `GroupName`; `GroupName` właściwości jest szeregowana jako atrybutu XML. W przykładzie jest tworzony <xref:System.Xml.Serialization.XmlAttributeOverrides> i <xref:System.Xml.Serialization.XmlAttributes> obiektu w celu zastąpienia domyślnej serializacji pola. Następnie tworzony <xref:System.Xml.Serialization.XmlAttributeAttribute> specjalnie zastąpienia właściwość i obiektu ma ustawioną wartość <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> właściwości <xref:System.Xml.Serialization.XmlAttributes> obiekt jest dodawany do <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu o nazwie przesłoniętych określony element członkowski. Na koniec <xref:System.Xml.Serialization.XmlSerializer> jest konstruowane i zwracane przy użyciu <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu.  
  
 [!code-cpp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlChoiceIdentifier">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlChoiceIdentifier As XmlChoiceIdentifierAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ XmlChoiceIdentifier { System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlChoiceIdentifierAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który umożliwia rozróżnianie między zestawu opcji.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> , Który można zastosować do elementu członkowskiego klasy, która jest szeregowana jako <see langword="xsi:choice" /> elementu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDefaultValue">
      <MemberSignature Language="C#" Value="public object XmlDefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object XmlDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ XmlDefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość domyślna elementu lub atrybutu XML.</summary>
        <value>
          <see cref="T:System.Object" /> Reprezentujący wartość domyślna elementu lub atrybutu XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz określić wartość domyślną — element XML lub atrybutu XML, stosując <xref:System.ComponentModel.DefaultValueAttribute> do elementu członkowskiego. Sprawdź wynik zastosowania wartość skompilować aplikację do pliku DLL lub wykonywalnego i przekazać plik wynikowy jako argument do narzędzia do definicji schematu XML (XSD.exe). Dokument schematu XML, wartość domyślna jest przypisany do `default` atrybutu. W poniższym przykładzie, wartością domyślną \<zwierzę > element jest "Psów."  
  
```  
<?xml version="1.0"?>  
 <schema attributeFormDefault="qualified"   
 elementFormDefault="qualified" targetNamespace=""   
 xmlns="http://www.w3.org/2000/10/XMLSchema">  
   <element name="Pets" nullable="true" type="Pets"/>  
   <complexType name="Pets">  
     <sequence>  
       <element default="Dogs" name="Animal" nullable="true"   
        type="string" minOccurs="0"/>  
     </sequence>  
   </complexType>  
 </schema>  
```  
  
 Aby zastąpić wartość domyślną, należy utworzyć <xref:System.Object> i przypisz go do <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>.  
  
 Jeśli wartość przypisana do pola lub właściwości jest równa wartości domyślne dla tego pola lub właściwości, <xref:System.Xml.Serialization.XmlSerializer> nie serializacji wartości do wystąpienia XML. Jest to spowodowane przypisaną wartość mogą zostać odzyskane ze schematu XML. Innymi słowy ustawienie pola lub właściwości do wartości domyślnej jest równoważna nie ustawienia w ogóle. Podobnie, jeśli wartość nie jest ustawiona dla pola lub właściwości, <xref:System.Xml.Serialization.XmlSerializer> używa wartości domyślne znalezione w schemacie. W obu przypadków, (ustawienie właściwości domyślnej lub nie ustawienie na wszystkich) wystąpienie dokumentu XML nie zawiera żadnej wartości dla właściwości.  
  
 Konstruktory klasy zamiast schematu służy do przypisywania wartości domyślne. Jeśli używasz Xsd.exe można wygenerować klas z schematów, możesz przekształcić w komentarz lub usunąć wszystkie atrybuty [System.ComponentModel.DefaultValueAttribute("myFieldName")] z plików klasy.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono klasę o nazwie `Pet` zawiera pola, które ma ustawioną wartość "Dog" wartości domyślnej. Jednak tworzy także przykładzie <xref:System.Xml.Serialization.XmlAttributes> obiekt i ustawia jej <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A> właściwości na nową wartość domyślną ("kot"). Zastępuje to oryginalnej wartości domyślnej. W związku z tym, jeśli pole jest ustawione na wartość "Kot", <xref:System.Xml.Serialization.XmlSerializer> traktuje ona wartości domyślnej i nie można go serializować. Jeśli jest ustawiona na dowolną inną wartość, <xref:System.Xml.Serialization.XmlSerializer> serializuje wartość.  
  
 [!code-cpp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlElementAttributes XmlElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlElementAttributes XmlElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlElements As XmlElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlElementAttributes ^ XmlElements { System::Xml::Serialization::XmlElementAttributes ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję obiektów, które określają sposób <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje publiczne pola lub odczytu/zapisu właściwości jako elementu XML.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> Zawierający kolekcję <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla każdego członka przesłonięte, który jest szeregowana jako XML element, należy dodać nowy <xref:System.Xml.Serialization.XmlElementAttribute> do <xref:System.Xml.Serialization.XmlElementAttributes> przez wywołanie metody <xref:System.Xml.Serialization.XmlElementAttributes.Add%2A> metody. Domyślnie <xref:System.Xml.Serialization.XmlElementAttributes> obiekt jest tworzony i przypisane do <xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład serializuje `Transportation` klasy, która zawiera jedno pole o nazwie `Vehicles` zwracającą <xref:System.Collections.ArrayList>. Przykład dotyczy dwóch <xref:System.Xml.Serialization.XmlElementAttribute> atrybuty do `Vehicles` pola. W przykładzie jest tworzony dwa <xref:System.Xml.Serialization.XmlElementAttribute> obiekty i dodaje je do <xref:System.Xml.Serialization.XmlElementAttributes> Kolekcja <xref:System.Xml.Serialization.XmlAttributes> obiektu. Aby umożliwić tablicy, tak aby zaakceptować różne typy obiektów, <xref:System.Xml.Serialization.XmlAttributes> obiekt jest dodawany do <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu.  
  
 [!code-cpp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEnum">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlEnumAttribute XmlEnum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlEnumAttribute XmlEnum" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlEnum As XmlEnumAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlEnumAttribute ^ XmlEnum { System::Xml::Serialization::XmlEnumAttribute ^ get(); void set(System::Xml::Serialization::XmlEnumAttribute ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlEnumAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który określa sposób <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje elementu członkowskiego wyliczenia.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> , Który określa sposób <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje elementu członkowskiego wyliczenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla każdego identyfikatora, aby zastąpić, należy utworzyć <xref:System.Xml.Serialization.XmlAttributes> obiektu i ustawić <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> właściwości <xref:System.Xml.Serialization.XmlEnumAttribute> który zastępuje identyfikator. Dodaj <xref:System.Xml.Serialization.XmlAttributes> do obiektu <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu i określić ich obu <xref:System.Type> klasy, która zawiera wyliczenie i nazwa zastąpionym elementem członkowskim.  
  
   
  
## Examples  
 Poniższy przykład serializuje dwie klasy o nazwie `Food` i `FoodType`. `FoodType` Klasa zawiera dwa wyliczenia, które są zastępowane, a każdy wyliczenia w przykładzie jest tworzony <xref:System.Xml.Serialization.XmlEnumAttribute> obiekt, który przypisuje do <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> właściwość <xref:System.Xml.Serialization.XmlAttributes> obiektu. Następnie dodaje przykładzie <xref:System.Xml.Serialization.XmlAttributes> do obiektu <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu, który jest używany do tworzenia <xref:System.Xml.Serialization.XmlSerializer>.  
  
 [!code-cpp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlIgnore">
      <MemberSignature Language="C#" Value="public bool XmlIgnore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XmlIgnore" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlIgnore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool XmlIgnore { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą czy <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje pola publicznego lub właściwości publicznej odczytu/zapisu.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Xml.Serialization.XmlSerializer" /> nie może serializować, pole lub właściwość; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie publiczne pola i właściwości publicznej odczytu/zapisu są serializowane przez <xref:System.Xml.Serialization.XmlSerializer>. Oznacza to, że wartość każdego pola publicznego lub właściwości jest trwały jako XML elementu lub atrybutu XML w wystąpieniu dokumentu XML.  
  
 Aby zastąpić domyślny serializacji pola lub właściwości, należy utworzyć <xref:System.Xml.Serialization.XmlAttributes> obiektu i ustawić jej <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> właściwości `true`. <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> obiekt do <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu i określić typ obiektu, który zawiera pole lub właściwość, aby zignorować i nazwy pola lub właściwości do ignorowania.  
  
 Jeśli <xref:System.Xml.Serialization.XmlIgnoreAttribute> jest stosowany do pola lub właściwości, pole lub właściwość jest ignorowana. Jednak można zastąpić tego zachowania, tworząc <xref:System.Xml.Serialization.XmlAttributes> obiektu ustawienie jej <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> właściwości `false`, dodanie go do <xref:System.Xml.Serialization.XmlAttributeOverrides> obiekt określający typ obiektu, który zawiera pola lub właściwości oraz nazwę pole lub właściwość.  
  
   
  
## Examples  
 Poniższy przykład serializuje klasę o nazwie `Group`, który zawiera element o nazwie `Comment` do której <xref:System.Xml.Serialization.XmlIgnoreAttribute> została zastosowana. W przykładzie jest tworzony <xref:System.Xml.Serialization.XmlAttributes> obiektu i zestawy <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> właściwości `false`, a tym samym zastępowanie <xref:System.Xml.Serialization.XmlIgnoreAttribute>.  
  
 [!code-cpp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Xmlns">
      <MemberSignature Language="C#" Value="public bool Xmlns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Xmlns" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberSignature Language="VB.NET" Value="Public Property Xmlns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Xmlns { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy zachowywać wszystkie deklaracje przestrzeni nazw, gdy obiekt zawierający element członkowski, który zwraca <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> obiektu zostanie zastąpiona.</summary>
        <value>
          <see langword="true" /> Jeśli deklaracje przestrzeni nazw powinny być przechowywane; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład zawiera klasę o nazwie `Student`. Klasa zawiera element o nazwie `MyNamespaces` zwracającą <xref:System.Xml.Serialization.XmlSerializerNamespaces> obiektu. W przykładzie jest tworzony <xref:System.Xml.Serialization.XmlAttributes> obiektu, który jest dodawany do wystąpienia <xref:System.Xml.Serialization.XmlAttributeOverrides> klasy. <xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A> Właściwość jest ustawiona na `true`, który powoduje, że <xref:System.Xml.Serialization.XmlSerializer> zachować przestrzenie nazw podczas serializacji `Student` obiektu zostanie zastąpiona.  
  
 [!code-cpp[XmlAttributes.Xmlns property example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CPP/xmlns.cpp#1)]
 [!code-csharp[XmlAttributes.Xmlns property example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CS/xmlns.cs#1)]
 [!code-vb[XmlAttributes.Xmlns property example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/VB/xmlns.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlRoot">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlRootAttribute XmlRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlRootAttribute XmlRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlRoot As XmlRootAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlRootAttribute ^ XmlRoot { System::Xml::Serialization::XmlRootAttribute ^ get(); void set(System::Xml::Serialization::XmlRootAttribute ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlRootAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który określa sposób <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje klasy jako elementu głównego XML.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> Który zastępuje klasę atrybutem elementu głównego XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu <xref:System.Xml.Serialization.XmlAttributes> obiektu, a <xref:System.Xml.Serialization.XmlRootAttribute> obiektu. Przypisywane <xref:System.Xml.Serialization.XmlRootAttribute> do <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> właściwość <xref:System.Xml.Serialization.XmlAttributes> obiektu i dodaje <xref:System.Xml.Serialization.XmlAttributes> do obiektu <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu. Ponadto pobiera przykładzie <xref:System.Xml.Serialization.XmlAttributes> obiektu przez przekazywanie <xref:System.Type> klasy serializacji, aby <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu. (W tym przykładzie <xref:System.Type> jest `Group`.)  
  
 [!code-cpp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlText">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTextAttribute XmlText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTextAttribute XmlText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlText As XmlTextAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTextAttribute ^ XmlText { System::Xml::Serialization::XmlTextAttribute ^ get(); void set(System::Xml::Serialization::XmlTextAttribute ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTextAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który powoduje, że <see cref="T:System.Xml.Serialization.XmlSerializer" /> do serializacji pola publicznego lub właściwości publicznej odczytu/zapisu jako tekst XML.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> Który zastąpienia domyślnej serializacji pola lub właściwości publicznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie publiczne pola lub właściwości publicznej odczytu/zapisu jest szeregowana jako element XML o <xref:System.Xml.Serialization.XmlSerializer>. Jednak można wymusić pola lub właściwości, aby można było serializować jako tekstu XML, stosując <xref:System.Xml.Serialization.XmlTextAttribute> pola lub właściwości.  
  
> [!NOTE]
>  <xref:System.Xml.Serialization.XmlTextAttribute> Nie można zastosować do pola lub właściwości, które zwraca tablicę.  
  
 Aby zastąpić domyślny serializacji pola lub właściwości (który nie zwraca tablicę), należy utworzyć <xref:System.Xml.Serialization.XmlTextAttribute> i przypisz go do <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> właściwość <xref:System.Xml.Serialization.XmlAttributes> obiektu. Dodaj <xref:System.Xml.Serialization.XmlAttributes> do obiektu <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu i określ typ obiektu, który zawiera przesłonięte pola lub właściwości oraz nazwę przesłoniętych pola lub właściwości.  
  
   
  
## Examples  
 Poniższy przykład serializuje klasa o nazwie `Group`, który zawiera pole o nazwie `Comment`. Aby zastąpić domyślny sposób <xref:System.Xml.Serialization.XmlSerializer> serializuje pola w przykładzie jest tworzony <xref:System.Xml.Serialization.XmlAttributeOverrides> i <xref:System.Xml.Serialization.XmlAttributes> obiektu. Następnie tworzony <xref:System.Xml.Serialization.XmlTextAttribute> obiektu, który przypisuje do <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> właściwości i dodaje <xref:System.Xml.Serialization.XmlAttributes> do obiektu (wraz z nazwą pola, aby można było serializować jako tekstu XML) <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu. Na koniec w przykładzie jest tworzony <xref:System.Xml.Serialization.XmlSerializer> przy użyciu <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu.  
  
 [!code-cpp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlType">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeAttribute XmlType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTypeAttribute XmlType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlType As XmlTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTypeAttribute ^ XmlType { System::Xml::Serialization::XmlTypeAttribute ^ get(); void set(System::Xml::Serialization::XmlTypeAttribute ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który określa sposób <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje klasy, do którego <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> została zastosowana.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> Który zastępuje <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> stosowane do deklaracji klasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlTypeAttribute> Można użyć do kontrolowania sposobu typem jest serializowany przez <xref:System.Xml.Serialization.XmlSerializer>. Na przykład domyślnie, gdy typem jest serializowana <xref:System.Xml.Serialization.XmlSerializer> Nazwa klasy jest używana jako nazwa elementu XML. Tworząc <xref:System.Xml.Serialization.XmlTypeAttribute>, ustawienie <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> właściwości, oraz tworzenie <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu, można zmienić nazwy elementu XML.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.Serialization.XmlTypeAttribute> obiekt, a następnie przypisuje go do <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> właściwość <xref:System.Xml.Serialization.XmlAttributes> obiektu.  
  
 [!code-cpp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>