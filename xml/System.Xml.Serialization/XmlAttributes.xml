<Type Name="XmlAttributes" FullName="System.Xml.Serialization.XmlAttributes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7dbff441301e4336425c9da34b52e0b21c325d7d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69440785" /></Metadata><TypeSignature Language="C#" Value="public class XmlAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributes extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributes" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributes" />
  <TypeSignature Language="F#" Value="type XmlAttributes = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje kolekcję obiektów atrybutów, które kontrolują sposób <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializacji i deserializacji obiektu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tworzenie jest częścią procesu, który zastąpi domyślny <xref:System.Xml.Serialization.XmlSerializer> sposób wystąpienia klasy serializacji. <xref:System.Xml.Serialization.XmlAttributes> Załóżmy na przykład, że chcesz serializować obiekt tworzony z biblioteki DLL, która ma niedostępne źródło. Za pomocą <xref:System.Xml.Serialization.XmlAttributeOverrides>, można rozszerzyć lub w inny sposób kontrolować sposób serializacji obiektu.  
  
 Elementy członkowskie <xref:System.Xml.Serialization.XmlAttributes> klasy odpowiadają bezpośrednio na rodzinę klas atrybutów kontrolujących serializacji. Na przykład <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> właściwość musi być ustawiona <xref:System.Xml.Serialization.XmlTextAttribute>na, która umożliwia przesłonięcie serializacji pola lub <xref:System.Xml.Serialization.XmlSerializer> właściwości poprzez nakazanie serializacji wartości właściwości jako tekstu XML. Aby uzyskać pełną listę atrybutów kontrolujących serializacji, zobacz <xref:System.Xml.Serialization.XmlSerializer>.  
  
 Aby uzyskać więcej informacji na temat <xref:System.Xml.Serialization.XmlAttributeOverrides> używania <xref:System.Xml.Serialization.XmlAttributes> z klasą, [zobacz How to: Określ alternatywną nazwę elementu dla strumienia](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md)XML.  
  
   
  
## Examples  
 Poniższy przykład serializacji wystąpienie klasy o nazwie `Orchestra`, która zawiera pojedyncze pole o nazwie `Instruments` , `Instrument` które zwraca tablicę obiektów. Druga klasa o nazwie `Brass` Inherits `Instrument` z klasy. Przykład <xref:System.Xml.Serialization.XmlAttributes> tworzy obiekt do `Brass` `Instrument` przesłaniania pola — zezwala pole na akceptowanie obiektów — i <xref:System.Xml.Serialization.XmlAttributeOverrides> dodaje <xref:System.Xml.Serialization.XmlAttributes> obiekt do wystąpienia klasy.  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Wprowadzenie do serializacji XML</related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Instrukcje: określanie alternatywnej nazwy elementu dla strumienia XML</related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Kontrolowanie serializacji XML przy użyciu atrybutów</related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Przykłady serializacji XML</related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Narzędzie definicji schematu XML (Xsd.exe)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlAttributes" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlAttributes" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład serializacji wystąpienie klasy o nazwie `Orchestra`, która zawiera pojedyncze pole o nazwie `Instruments` , `Instrument` które zwraca tablicę obiektów. Druga klasa o nazwie `Brass` Inherits `Instrument` z klasy. Przykład <xref:System.Xml.Serialization.XmlAttributes> tworzy obiekt do `Brass` `Instrument` przesłaniania pola — zezwala pole na akceptowanie obiektów — i <xref:System.Xml.Serialization.XmlAttributeOverrides> dodaje <xref:System.Xml.Serialization.XmlAttributes> obiekt do wystąpienia klasy.  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributes : System.Reflection.ICustomAttributeProvider -&gt; System.Xml.Serialization.XmlAttributes" Usage="new System.Xml.Serialization.XmlAttributes provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="provider">Klasa, która może udostępniać alternatywne implementacje atrybutów kontrolujących serializacji XML.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Xml.Serialization.XmlAttributes" /> klasy i dostosowuje <see cref="T:System.Xml.Serialization.XmlSerializer" /> sposób serializacji i deserializacji obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zamiast korzystać z tego konstruktora, należy <xref:System.Xml.Serialization.XmlAttributes> użyć konstruktora bez parametrów dla klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAnyAttribute As XmlAnyAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyAttributeAttribute ^ XmlAnyAttribute { System::Xml::Serialization::XmlAnyAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAnyAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlAnyAttribute : System.Xml.Serialization.XmlAnyAttributeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> przesłonięcie.</summary>
        <value><see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> Do zastąpienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można zastosować do składowej, która zwraca <xref:System.Xml.XmlAttribute> tablicę obiektów podczas deserializacji. <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> Dzięki <xref:System.Xml.Serialization.XmlSerializer> temu można deserializować wszystkie atrybuty, które nie mają odpowiadającego elementu członkowskiego w deserializowanym obiekcie — w rezultacie te elementy są "Nieznane" <xref:System.Xml.Serialization.XmlSerializer>do. Jest to przydatne, gdy strumień XML został zmodyfikowany przez usługę sieci Web XML lub gdy wiadomo, że dane losowe są zawsze dołączane do strumienia XML.  
  
 Właściwość umożliwia przesłonięcie serializacji elementu członkowskiego, do <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> którego zastosowano. <xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlAnyElements As XmlAnyElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyElementAttributes ^ XmlAnyElements { System::Xml::Serialization::XmlAnyElementAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlAnyElements : System.Xml.Serialization.XmlAnyElementAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> obiektów do przesłonięcia.</summary>
        <value>Obiekt, który reprezentuje <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> kolekcję obiektów. <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można zastosować do składowej, która zwraca <xref:System.Xml.XmlElement> tablicę obiektów podczas deserializacji. <xref:System.Xml.Serialization.XmlAnyElementAttribute> Dzięki <xref:System.Xml.Serialization.XmlSerializer> temu można deserializować wszystkie elementy, które nie mają odpowiadającego elementu członkowskiego w deserializowanym obiekcie — w ten sposób elementy są "Nieznane" <xref:System.Xml.Serialization.XmlSerializer>do. Jest to przydatne, gdy strumień XML został zmodyfikowany przez usługę sieci Web XML lub gdy wiadomo, że dane losowe są zawsze dołączane do strumienia XML.  
  
 Właściwość umożliwia przesłonięcie serializacji elementu członkowskiego do działania jako element członkowski, do <xref:System.Xml.Serialization.XmlAnyElementAttribute> którego został zastosowany. <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A>  
  
   
  
## Examples  
 Poniższy przykład tworzy nowy <xref:System.Xml.Serialization.XmlAnyElementAttribute> obiekt i dodaje go do kolekcji obiektów, do których można uzyskać dostęp <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> za pomocą właściwości. Obiekt jest następnie dodawany <xref:System.Xml.Serialization.XmlAttributeOverrides> do obiektu, który <xref:System.Xml.Serialization.XmlSerializer> jest używany do tworzenia obiektu. <xref:System.Xml.Serialization.XmlAttributes> <xref:System.Xml.Serialization.XmlSerializer> Służy do serializacji lub deserializacji obiektu. Aby zobaczyć efekt użycia <xref:System.Xml.Serialization.XmlAnyElementAttributes> właściwości, Utwórz dokument XML o nazwie "UnknownElements. xml", `SerializeObject` uruchamiając metodę w `Main` metodzie. Edytuj dokument wynikający z uwzględnieniem innych (nieznanych) elementów. Dodaj komentarz do `Main` `DeserializeObject` wywołania w metodzie i Usuń komentarz wywołania metody, która drukuje nazwę i wartość dowolnego nieznanego elementu XML. `SerializeObject`  
  
 [!code-cpp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CPP/xmlanyover.cpp#1)]
 [!code-csharp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CS/xmlanyover.cs#1)]
 [!code-vb[XmlAttributes.XmlAnyElements#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/VB/xmlanyover.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="XmlArray">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayAttribute XmlArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayAttribute XmlArray" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlArray As XmlArrayAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayAttribute ^ XmlArray { System::Xml::Serialization::XmlArrayAttribute ^ get(); void set(System::Xml::Serialization::XmlArrayAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlArray : System.Xml.Serialization.XmlArrayAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt określający sposób <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializacji pola publicznego lub operacji odczytu/zapisu zwracające tablicę.</summary>
        <value>Określa, w <see cref="T:System.Xml.Serialization.XmlSerializer" /> jaki sposób Serializacja pola publicznego lub odczytu/zapisu zwraca tablicę. <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istnieją dwa sposoby, w których pole publiczne lub publiczna właściwość odczytu/zapisu zwracająca tablicę jest serializowana przez <xref:System.Xml.Serialization.XmlSerializer>: domyślna Serializacja i kontrolowana Serializacja.  
  
 W przypadku serializacji domyślnej żaden atrybut nie jest stosowany do elementu członkowskiego. Podczas serializacji tablica jest serializowana jako zagnieżdżona sekwencja elementów XML z nazwą elementu XML zagnieżdżonej sekwencji pobranej z nazwy elementu członkowskiego.  
  
 Aby precyzyjnie kontrolować serializację, należy zastosować <xref:System.Xml.Serialization.XmlArrayAttribute> do pola lub właściwości. Na przykład można zmienić nazwę wygenerowanego elementu XML z domyślnego na inną, ustawiając <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> właściwość na nową wartość.  
  
 Właściwość umożliwia przesłonięcie serializacji domyślnej, a także serializacji kontrolowanej przez <xref:System.Xml.Serialization.XmlArrayAttribute> zastosowanie elementu do elementu członkowskiego. <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> Na przykład można zmienić nazwę elementu XML wygenerowaną z domyślnego (identyfikator elementu członkowskiego) na nową wartość. Ponadto, jeśli stosujesz <xref:System.Xml.Serialization.XmlArrayAttribute> do elementu członkowskiego, jest on zastępowany <xref:System.Xml.Serialization.XmlArrayAttribute> przez element <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> , który jest przypisany do właściwości.  
  
   
  
## Examples  
 Poniższy przykład serializacji klasy, która zawiera pole o nazwie `Members` , które zwraca tablicę obiektów. Służy do przesłonięcia serializacji pola i zmiany nazwy elementu na `Staff`. <xref:System.Xml.Serialization.XmlArrayAttribute>  
  
 [!code-cpp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlArrayItems">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlArrayItems As XmlArrayItemAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayItemAttributes ^ XmlArrayItems { System::Xml::Serialization::XmlArrayItemAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlArrayItems : System.Xml.Serialization.XmlArrayItemAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayItemAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolekcję obiektów, która określa, <see cref="T:System.Xml.Serialization.XmlSerializer" /> jak elementy serializacji wstawiane do tablicy zwracanej przez pole publiczne lub właściwość odczyt/zapis.</summary>
        <value>Obiekt, który zawiera <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> kolekcję obiektów. <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> Właściwość pozwala określić typy pochodne, które mogą być wstawiane do tablicy zwracanej przez pole publiczne lub publiczną właściwość odczytu/zapisu. Dla każdego nowego typu, który ma być akceptowany przez pole lub właściwość, <xref:System.Xml.Serialization.XmlArrayItemAttribute> Utwórz obiekt <xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A> i go <xref:System.Xml.Serialization.XmlArrayItemAttributes>w obiekcie) zwracanym <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> przez właściwość. (Nowy typ musi pochodzić od typu już akceptowanego przez pole lub właściwość). obiekt do obiektui<xref:System.Xml.Serialization.XmlAttributeOverrides> określa typ obiektu, który zawiera pole lub właściwość oraz nazwę pola lub właściwości. <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> <xref:System.Xml.Serialization.XmlAttributes> <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> Utwórz obiekt <xref:System.Xml.Serialization.XmlSerializer> <xref:System.Xml.Serialization.XmlAttributeOverrides> przy użyciu obiektu przed wywołaniem lub metodą.  
  
   
  
## Examples  
 Poniższy przykład serializacji klasy, która zawiera pole o nazwie `Members` , które zwraca tablicę obiektów. Dwa <xref:System.Xml.Serialization.XmlArrayItemAttribute> obiekty są tworzone, aby zezwolić polu na akceptowanie obiektów pochodzących od klasy bazowej o nazwie `Member`. Każdy obiekt jest dodawany do <xref:System.Xml.Serialization.XmlAttributes> <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> właściwości przez.  
  
 [!code-cpp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAttributeAttribute XmlAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAttributeAttribute XmlAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAttribute As XmlAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAttributeAttribute ^ XmlAttribute { System::Xml::Serialization::XmlAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlAttribute : System.Xml.Serialization.XmlAttributeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt określający sposób <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializacji pola publicznego lub publicznej właściwości odczytu/zapisu jako atrybutu XML.</summary>
        <value><see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> , Który kontroluje serializację pola publicznego lub właściwość Read/Write jako atrybut XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie, jeśli żaden atrybut nie jest stosowany do pola publicznego lub publicznej właściwości do odczytu/zapisu, jest serializowany jako element XML. Można również nakazać <xref:System.Xml.Serialization.XmlSerializer> wygenerowanie atrybutu XML przez <xref:System.Xml.Serialization.XmlAttributeAttribute> zastosowanie do pola lub właściwości.  
  
 Właściwość umożliwia przesłonięcie serializacji domyślnej, a także serializacji kontrolowanej przez <xref:System.Xml.Serialization.XmlAttributeAttribute> zastosowanie elementu do elementu członkowskiego. <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> Aby to zrobić, Utwórz <xref:System.Xml.Serialization.XmlAttributeAttribute> i ustaw jego właściwości (na przykład <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>). Przypisz nowy obiekt do <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> właściwości <xref:System.Xml.Serialization.XmlAttributes> obiektu. <xref:System.Xml.Serialization.XmlAttributes> Dodaj obiekt<xref:System.Xml.Serialization.XmlAttributeOverrides> do obiektu i określ typ obiektu, który zawiera pole lub właściwość oraz nazwę pola lub właściwości. Na <xref:System.Xml.Serialization.XmlSerializer> koniec Utwórz <xref:System.Xml.Serialization.XmlAttributeOverrides> Obiekt przy użyciu obiektu i Wywołaj <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> metodę lub <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> .  
  
   
  
## Examples  
 Poniższy przykład serializacji klasę o nazwie `Group` , która zawiera właściwość o nazwie `GroupName`; `GroupName` właściwość jest serializowana jako atrybut XML. Przykład tworzy <xref:System.Xml.Serialization.XmlAttributeOverrides> <xref:System.Xml.Serialization.XmlAttributes> obiekt i, aby zastąpić domyślną serializację pola. W przykładzie tworzony <xref:System.Xml.Serialization.XmlAttributeAttribute> jest program, który w celu przesłonięcia właściwości, a obiekt jest ustawiony <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> na Właściwość <xref:System.Xml.Serialization.XmlAttributes> , obiekt zostanie dodany do <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu o nazwie przesłoniętego elementu członkowskiego. Na <xref:System.Xml.Serialization.XmlSerializer> koniec jest konstruowany i zwracany <xref:System.Xml.Serialization.XmlAttributeOverrides> przy użyciu obiektu.  
  
 [!code-cpp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlChoiceIdentifier">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlChoiceIdentifier As XmlChoiceIdentifierAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ XmlChoiceIdentifier { System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlChoiceIdentifier : System.Xml.Serialization.XmlChoiceIdentifierAttribute" Usage="System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlChoiceIdentifierAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który pozwala rozróżnić zestaw opcji.</summary>
        <value>, Który można zastosować do składowej klasy, która jest serializowana <see langword="xsi:choice" /> jako element. <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDefaultValue">
      <MemberSignature Language="C#" Value="public object XmlDefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object XmlDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ XmlDefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDefaultValue : obj with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość domyślną elementu lub atrybutu XML.</summary>
        <value><see cref="T:System.Object" /> Reprezentuje wartość domyślną elementu lub atrybutu XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można określić wartość domyślną elementu XML lub atrybutu XML przez zastosowanie <xref:System.ComponentModel.DefaultValueAttribute> elementu do elementu członkowskiego. Aby przejrzeć wynik zastosowania wartości, skompiluj aplikację do biblioteki DLL lub pliku wykonywalnego i przekaż wynikowy plik jako argument do narzędzia definicji schematu XML (XSD. exe). W dokumencie schematu XML jest przypisywana wartość domyślna do `default` atrybutu. W poniższym przykładzie wartością domyślną dla \<elementu > zwierzęcia jest "psy".  
  
```  
<?xml version="1.0"?>  
 <schema attributeFormDefault="qualified"   
 elementFormDefault="qualified" targetNamespace=""   
 xmlns="http://www.w3.org/2000/10/XMLSchema">  
   <element name="Pets" nullable="true" type="Pets"/>  
   <complexType name="Pets">  
     <sequence>  
       <element default="Dogs" name="Animal" nullable="true"   
        type="string" minOccurs="0"/>  
     </sequence>  
   </complexType>  
 </schema>  
```  
  
 Aby zastąpić wartość domyślną, Utwórz <xref:System.Object> i przypisz ją <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>do.  
  
 Jeśli wartość przypisana do pola lub właściwości jest równa wartości domyślnej dla tego pola lub właściwości, <xref:System.Xml.Serialization.XmlSerializer> nie serializacji wartości do wystąpienia XML. Wynika to z faktu, że przypisana wartość może zostać odzyskana ze schematu XML. Innymi słowy, ustawienie pola lub właściwości na własną wartość domyślną jest równoznaczne z nieustawieniem go w ogóle. Analogicznie, jeśli nie ustawiono żadnej wartości dla pola lub właściwości, zostanie <xref:System.Xml.Serialization.XmlSerializer> użyta wartość domyślna znaleziona w schemacie. W obu przypadkach (ustawienie właściwości na wartość domyślną lub bez jej ustawienia) wystąpienie dokumentu XML nie zawiera żadnej wartości właściwości.  
  
 Można użyć konstruktorów klas zamiast schematu do przypisywania wartości domyślnych. Jeśli używasz pliku XSD. exe do wygenerowania klas ze schematów, możesz skomentować lub usunąć wszystkie atrybuty [System. ComponentModel. DefaultValueAttribute — (". FieldName")] z plików klas.  
  
   
  
## Examples  
 Poniższy przykład pokazuje klasę o nazwie `Pet` , która zawiera pole o wartości domyślnej ustawionej na "Dog". Jednak przykład tworzy <xref:System.Xml.Serialization.XmlAttributes> również obiekt i ustawia jego <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A> właściwość na nową wartość domyślną ("Cat"). Spowoduje to zastąpienie oryginalnej wartości domyślnej. W <xref:System.Xml.Serialization.XmlSerializer> takim przypadku, jeśli wartość pola jest ustawiona na "Cat", traktuje ją jako wartość domyślną i nie serializacji. Jeśli jest ustawiona na inną wartość, <xref:System.Xml.Serialization.XmlSerializer> serializacji wartości.  
  
 [!code-cpp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlElementAttributes XmlElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlElementAttributes XmlElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlElements As XmlElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlElementAttributes ^ XmlElements { System::Xml::Serialization::XmlElementAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlElements : System.Xml.Serialization.XmlElementAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję obiektów, które określają sposób <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializacji pola publicznego lub odczytu/zapisu jako elementu XML.</summary>
        <value><see cref="T:System.Xml.Serialization.XmlElementAttributes" /> Zawierający<see cref="T:System.Xml.Serialization.XmlElementAttribute" /> kolekcję obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla każdego zastępowanego elementu członkowskiego, który jest serializowany jako element XML, należy <xref:System.Xml.Serialization.XmlElementAttribute> dodać nowy <xref:System.Xml.Serialization.XmlElementAttributes> do obiektu przez <xref:System.Xml.Serialization.XmlElementAttributes.Add%2A> wywołanie metody. Domyślnie <xref:System.Xml.Serialization.XmlElementAttributes> obiekt jest tworzony i przypisywany <xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A> do właściwości.  
  
   
  
## Examples  
 Poniższy przykład serializacji `Transportation` klasy, która zawiera pojedyncze pole o nazwie `Vehicles` , które zwraca <xref:System.Collections.ArrayList>. W przykładzie zastosowano <xref:System.Xml.Serialization.XmlElementAttribute> dwa atrybuty `Vehicles` do pola. Przykład tworzy dwa <xref:System.Xml.Serialization.XmlElementAttribute> obiekty i dodaje je <xref:System.Xml.Serialization.XmlElementAttributes> do kolekcji <xref:System.Xml.Serialization.XmlAttributes> obiektu. Aby umożliwić tablicy zaakceptowanie różnych typów obiektów, <xref:System.Xml.Serialization.XmlAttributes> obiekt zostanie dodany <xref:System.Xml.Serialization.XmlAttributeOverrides> do obiektu.  
  
 [!code-cpp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEnum">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlEnumAttribute XmlEnum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlEnumAttribute XmlEnum" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlEnum As XmlEnumAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlEnumAttribute ^ XmlEnum { System::Xml::Serialization::XmlEnumAttribute ^ get(); void set(System::Xml::Serialization::XmlEnumAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlEnum : System.Xml.Serialization.XmlEnumAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlEnumAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który określa sposób <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializacji elementu członkowskiego wyliczenia.</summary>
        <value><see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> Określa<see cref="T:System.Xml.Serialization.XmlSerializer" /> sposób serializacji elementu członkowskiego wyliczenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla każdego identyfikatora, który chcesz przesłonić, należy utworzyć <xref:System.Xml.Serialization.XmlAttributes> obiekt i <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> ustawić właściwość <xref:System.Xml.Serialization.XmlEnumAttribute> , która zastąpi identyfikator. Dodaj obiekt do <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu i określ obie klasy,którezawierająWyliczenie,orazzastąpionąnazwęelementuczłonkowskiego.<xref:System.Type> <xref:System.Xml.Serialization.XmlAttributes>  
  
   
  
## Examples  
 Poniższy przykład serializacji dwie klasy o nazwie `Food` i. `FoodType` Klasa zawiera dwa wyliczenia, które są zastępowane i, dla każdego wyliczenia, przykład <xref:System.Xml.Serialization.XmlEnumAttribute> tworzy obiekt <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> , który przypisuje <xref:System.Xml.Serialization.XmlAttributes> do właściwości obiektu. `FoodType` Przykład dodaje <xref:System.Xml.Serialization.XmlAttributes> obiekt <xref:System.Xml.Serialization.XmlAttributeOverrides> do obiektu, który <xref:System.Xml.Serialization.XmlSerializer>jest używany do tworzenia.  
  
 [!code-cpp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlIgnore">
      <MemberSignature Language="C#" Value="public bool XmlIgnore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XmlIgnore" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlIgnore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool XmlIgnore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.XmlIgnore : bool with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy Serializacja pola publicznego <see cref="T:System.Xml.Serialization.XmlSerializer" /> lub publicznej właściwości operacji odczytu/zapisu jest serializowana.</summary>
        <value><see langword="true" />Jeśli nie <see langword="false" />może serializować pola lub właściwości; w przeciwnym razie,. <see cref="T:System.Xml.Serialization.XmlSerializer" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie pola publiczne i publiczne właściwości odczytu/zapisu są serializowane przez <xref:System.Xml.Serialization.XmlSerializer>. Oznacza to, że wartość każdego pola publicznego lub właściwości jest utrwalana jako element XML lub atrybut XML w wystąpieniu dokumentu XML.  
  
 Aby zastąpić domyślną serializację pola lub właściwości, Utwórz <xref:System.Xml.Serialization.XmlAttributes> obiekt i ustaw jego <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> właściwość na `true`. <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A>obiekt do <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu i określa typ obiektu, który zawiera pole lub właściwość do ignorowania, oraz nazwę pola lub właściwości do ignorowania.  
  
 <xref:System.Xml.Serialization.XmlIgnoreAttribute> Jeśli zastosowano do pola lub właściwości, pole lub właściwość jest ignorowana. Można jednak przesłonić to zachowanie przez utworzenie <xref:System.Xml.Serialization.XmlAttributes> obiektu, ustawienie jego <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> właściwości na `false`, dodanie go do <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu określającego typ obiektu, który zawiera pole lub właściwość, oraz nazwę pole lub właściwość.  
  
   
  
## Examples  
 Poniższy przykład serializacji klasę o nazwie `Group`, która zawiera element członkowski o nazwie `Comment` , do którego <xref:System.Xml.Serialization.XmlIgnoreAttribute> jest stosowana. Przykład tworzy <xref:System.Xml.Serialization.XmlAttributes> obiekt i <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> ustawia `false` Właściwość<xref:System.Xml.Serialization.XmlIgnoreAttribute>na, co przesłania.  
  
 [!code-cpp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Xmlns">
      <MemberSignature Language="C#" Value="public bool Xmlns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Xmlns" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberSignature Language="VB.NET" Value="Public Property Xmlns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Xmlns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Xmlns : bool with get, set" Usage="System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy należy zachować wszystkie deklaracje przestrzeni nazw, gdy obiekt zawierający element członkowski, <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> który zwraca obiekt, zostanie zastąpiony.</summary>
        <value><see langword="true" />Jeśli deklaracje przestrzeni nazw powinny być przechowywane; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład zawiera klasę o nazwie `Student`. Klasa zawiera element członkowski o nazwie `MyNamespaces` , który <xref:System.Xml.Serialization.XmlSerializerNamespaces> zwraca obiekt. Przykład tworzy <xref:System.Xml.Serialization.XmlAttributes> obiekt, który jest dodawany do wystąpienia <xref:System.Xml.Serialization.XmlAttributeOverrides> klasy. Właściwość jest ustawiona na `true` `Student` , która instruuje, Abyzachowaćprzestrzenienazw,gdyserializacjaobiektuzostanieprzesłonięta.<xref:System.Xml.Serialization.XmlSerializer> <xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A>  
  
 [!code-cpp[XmlAttributes.Xmlns property example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CPP/xmlns.cpp#1)]
 [!code-csharp[XmlAttributes.Xmlns property example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CS/xmlns.cs#1)]
 [!code-vb[XmlAttributes.Xmlns property example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/VB/xmlns.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlRoot">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlRootAttribute XmlRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlRootAttribute XmlRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlRoot As XmlRootAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlRootAttribute ^ XmlRoot { System::Xml::Serialization::XmlRootAttribute ^ get(); void set(System::Xml::Serialization::XmlRootAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlRoot : System.Xml.Serialization.XmlRootAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlRootAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt określający sposób <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializacji klasy jako element główny XML.</summary>
        <value>Obiekt <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> , który zastępuje klasę atrybutu jako element główny XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.Serialization.XmlAttributeOverrides> obiekt <xref:System.Xml.Serialization.XmlAttributes> , obiekt i <xref:System.Xml.Serialization.XmlRootAttribute> obiekt. Przykład przypisuje <xref:System.Xml.Serialization.XmlRootAttribute> <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> do właściwości <xref:System.Xml.Serialization.XmlAttributes> obiektui<xref:System.Xml.Serialization.XmlAttributes> dodaje obiekt do obiektu.<xref:System.Xml.Serialization.XmlAttributeOverrides> Na koniec przykład pobiera <xref:System.Xml.Serialization.XmlAttributes> obiekt przez <xref:System.Type> przekazanie serializowanej klasy do <xref:System.Xml.Serialization.XmlAttributeOverrides> obiektu. (W tym przykładzie <xref:System.Type> jest `Group`to).  
  
 [!code-cpp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlText">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTextAttribute XmlText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTextAttribute XmlText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlText As XmlTextAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTextAttribute ^ XmlText { System::Xml::Serialization::XmlTextAttribute ^ get(); void set(System::Xml::Serialization::XmlTextAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlText : System.Xml.Serialization.XmlTextAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTextAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który instruuje <see cref="T:System.Xml.Serialization.XmlSerializer" /> do serializacji pola publicznego lub publicznej właściwości odczytu/zapisu jako tekstu XML.</summary>
        <value><see cref="T:System.Xml.Serialization.XmlTextAttribute" /> Zastępuje domyślną serializację publicznej właściwości lub pola.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie pole publiczne lub publiczna właściwość odczytu/zapisu jest serializowana jako element XML przez <xref:System.Xml.Serialization.XmlSerializer>. Może jednak wymusić Serializacja pola lub właściwości jako tekstu XML przez zastosowanie <xref:System.Xml.Serialization.XmlTextAttribute> do pola lub właściwości.  
  
> [!NOTE]
>  <xref:System.Xml.Serialization.XmlTextAttribute> Nie można zastosować do pola lub właściwości, która zwraca tablicę.  
  
 Aby zastąpić domyślną serializację pola lub właściwości (nie zwraca tablicy), Utwórz <xref:System.Xml.Serialization.XmlTextAttribute> i przypisz ją <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> do właściwości <xref:System.Xml.Serialization.XmlAttributes> obiektu. <xref:System.Xml.Serialization.XmlAttributes> Dodaj obiekt<xref:System.Xml.Serialization.XmlAttributeOverrides> do obiektu i określ typ obiektu, który zawiera zastąpione pole lub właściwość, oraz nazwę pola lub właściwość, która została zastąpiona.  
  
   
  
## Examples  
 Poniższy przykład serializacji klasę o nazwie `Group`, która zawiera pole o nazwie. `Comment` Aby przesłonić domyślny sposób <xref:System.Xml.Serialization.XmlSerializer> serializacji pola, przykład <xref:System.Xml.Serialization.XmlAttributeOverrides> tworzy <xref:System.Xml.Serialization.XmlAttributes> obiekt i. Przykład tworzy <xref:System.Xml.Serialization.XmlTextAttribute> obiekt, który jest przypisywany <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> do <xref:System.Xml.Serialization.XmlAttributes> właściwości i dodaje obiekt (z nazwą pola, które ma <xref:System.Xml.Serialization.XmlAttributeOverrides> zostać zserializowane jako tekst XML) do obiektu. Ostatnim przykładem jest tworzenie <xref:System.Xml.Serialization.XmlSerializer> <xref:System.Xml.Serialization.XmlAttributeOverrides> przy użyciu obiektu.  
  
 [!code-cpp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlType">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeAttribute XmlType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTypeAttribute XmlType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlType As XmlTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTypeAttribute ^ XmlType { System::Xml::Serialization::XmlTypeAttribute ^ get(); void set(System::Xml::Serialization::XmlTypeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlType : System.Xml.Serialization.XmlTypeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt określający sposób <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializacji klasy, do <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> której zastosowano.</summary>
        <value><see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> Zastępuje zastosowany<see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> do deklaracji klasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Może służyć do kontrolowania, jak typ jest serializowany <xref:System.Xml.Serialization.XmlSerializer>przez. <xref:System.Xml.Serialization.XmlTypeAttribute> Na przykład domyślnie, gdy typ jest serializowany, <xref:System.Xml.Serialization.XmlSerializer> używa nazwy klasy jako nazwy elementu XML. Tworząc <xref:System.Xml.Serialization.XmlTypeAttribute>, <xref:System.Xml.Serialization.XmlAttributeOverrides> ustawiając dla właściwości Właściwość i tworząc obiekt, można zmienić nazwę elementu XML. <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A>  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.Serialization.XmlTypeAttribute> obiekt i przypisuje go <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> do właściwości <xref:System.Xml.Serialization.XmlAttributes> obiektu.  
  
 [!code-cpp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
