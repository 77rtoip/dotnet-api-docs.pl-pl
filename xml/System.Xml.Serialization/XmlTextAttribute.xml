<Type Name="XmlTextAttribute" FullName="System.Xml.Serialization.XmlTextAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e4c40a5531b30a3cca36b7498d6d1854a408d967" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69440491" /></Metadata><TypeSignature Language="C#" Value="public class XmlTextAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlTextAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlTextAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Xml.Serialization.XmlSerializer" /> Wskazuje, że element członkowski musi być traktowany jako tekst XML, gdy Klasa, która zawiera ją, jest serializowana lub deserializowana.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy do rodziny atrybutów, która kontroluje <xref:System.Xml.Serialization.XmlSerializer> sposób serializacji i deserializacji obiektu (za pomocą <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> metody i <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> ). <xref:System.Xml.Serialization.XmlTextAttribute> Aby uzyskać pełną listę podobnych atrybutów, zobacz atrybuty kontrolujące [serializacji XML](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).  
  
 W klasie można zastosować tylko <xref:System.Xml.Serialization.XmlTextAttribute> jedno wystąpienie klasy.  
  
 Można zastosować <xref:System.Xml.Serialization.XmlTextAttribute> do pól publicznych i publicznych właściwości odczytu/zapisu, które zwracają typy pierwotne i wyliczeniowe.  
  
 Można zastosować <xref:System.Xml.Serialization.XmlTextAttribute> do pola lub właściwości, która zwraca tablicę ciągów. Można również zastosować atrybut do tablicy typu <xref:System.Object> , ale należy <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> ustawić właściwość na ciąg. W takim przypadku wszystkie ciągi wstawione do tablicy są serializowane jako tekst XML.  
  
 Można również zastosować do pola, które zwraca obiekt <xref:System.Xml.XmlNode> lub tablicę <xref:System.Xml.XmlNode> obiektów. <xref:System.Xml.Serialization.XmlTextAttribute>  
  
 Domyślnie program <xref:System.Xml.Serialization.XmlSerializer> serializować element członkowski klasy jako element XML. Jeśli jednak zastosujesz <xref:System.Xml.Serialization.XmlTextAttribute> do elementu członkowskiego <xref:System.Xml.Serialization.XmlSerializer> , przetłumaczy jego wartość na tekst XML. Oznacza to, że wartość jest zakodowana w zawartości elementu XML.  
  
 [Narzędzie definicji schematu XML (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) sporadycznie generuje <xref:System.Xml.Serialization.XmlTextAttribute> klasy podczas tworzenia klas na podstawie pliku definicji schematu XML (XSD). Dzieje się tak, gdy schemat zawiera `complexType` zawartość mieszaną. w takim przypadku odpowiadająca Klasa zawiera element członkowski, który zwraca tablicę ciągów, do <xref:System.Xml.Serialization.XmlTextAttribute> której jest stosowany. Na przykład, gdy `Xml Schema Definition` narzędzie przetwarza ten schemat:  
  
```xml  
<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace=""   
xmlns:xs="http://www.w3.org/2001/XMLSchema">  
  <xs:element name="LinkList" type="LinkList" />  
  <xs:complexType name="LinkList" mixed="true">  
    <xs:sequence>  
      <xs:element minOccurs="1" maxOccurs="1" name="id" type="xs:int" />  
      <xs:element minOccurs="0" maxOccurs="1" name="name" type="xs:string" />  
      <xs:element minOccurs="0" maxOccurs="1" name="next" type="LinkList" />  
    </xs:sequence>  
  </xs:complexType>  
</xs:schema>  
```  
  
 Następująca Klasa jest generowana (dodatkowe spacje i uwagi zostały usunięte):  
  
 [!code-csharp[XmlTextAttribute#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlTextAttribute/cs/source.cs#0)]
 [!code-vb[XmlTextAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlTextAttribute/vb/source.vb#0)]  
  
 Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [atrybuty](~/docs/standard/attributes/index.md).  
  
> [!NOTE]
>  Możesz użyć słowa `XmlText` w kodzie zamiast dłużej <xref:System.Xml.Serialization.XmlTextAttribute>.  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Wprowadzenie do serializacji XML</related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Instrukcje: określanie alternatywnej nazwy elementu dla strumienia XML</related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Kontrolowanie serializacji XML przy użyciu atrybutów</related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Przykłady serializacji XML</related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Narzędzie definicji schematu XML (Xsd.exe)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można przesłonić sposób <xref:System.Xml.Serialization.XmlSerializer> serializacji pola publicznego lub publicznej właściwości odczytu/zapisu przez <xref:System.Xml.Serialization.XmlAttributes>utworzenie i <xref:System.Xml.Serialization.XmlTextAttribute>ustawienie jego <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> właściwości na. Aby uzyskać więcej informacji, zobacz <xref:System.Xml.Serialization.XmlAttributeOverrides> Klasa.  
  
   
  
## Examples  
 Poniższy przykład serializacji klasy, która zawiera pole publiczne o nazwie `Comment`. W przykładzie zastosowano <xref:System.Xml.Serialization.XmlTextAttribute> do pola, a tym samym zastępowanie serializacji jako elementu XML, a zamiast tego serializacji jako tekstu XML.  
  
 [!code-cpp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlTextAttribute : Type -&gt; System.Xml.Serialization.XmlTextAttribute" Usage="new System.Xml.Serialization.XmlTextAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Type" /> Element członkowski do serializacji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można przesłonić sposób <xref:System.Xml.Serialization.XmlSerializer> serializacji pola publicznego lub publicznej właściwości odczytu/zapisu przez <xref:System.Xml.Serialization.XmlAttributes>utworzenie i <xref:System.Xml.Serialization.XmlTextAttribute>ustawienie jego <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> właściwości na. Aby uzyskać więcej informacji, zobacz <xref:System.Xml.Serialization.XmlAttributeOverrides> Klasa.  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlTextAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ danych XSD (XML Schema Definition Language) generowany przez <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
        <value>Typ danych schematu XML (XSD).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> Ustawienie właściwości dla prostego typu danych schematu XML wpływa na format wygenerowanego kodu XML. Na przykład ustawienie właściwości na wartość "date" powoduje, że wygenerowany tekst będzie formatowany w ogólnym stylu daty, na przykład: 2001-08-31. Z kolei ustawienie właściwości na wartość "dateTime" spowoduje, że jest to określone natychmiast, zgodnie z definicją Międzynarodowa Organizacja Normalizacyjna dokumentu 8601 "reprezentacje daty i godziny", na przykład: 2001-08-15T06:59:11.0508456-07:00.  
  
 Efekt ustawienia <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> właściwości może być również widoczny przy użyciu [Narzędzia definicji schematu XML (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) w celu wygenerowania schematu XML dla skompilowanego pliku. Aby uzyskać więcej informacji na temat korzystania z tego narzędzia, zobacz [narzędzie definicji schematu XML i SERIALIZACJA XML](~/docs/standard/serialization/the-xml-schema-definition-tool-and-xml-serialization.md).  
  
 W poniższej tabeli przedstawiono proste typy danych schematu XML z ich odpowiednikami w programie .NET.  
  
 W przypadku `base64Binary` schematu XML i `hexBinary` typów danych <xref:System.Byte> należy użyć tablicy struktur i zastosować <xref:System.Xml.Serialization.XmlTextAttribute> z <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> zestawem "base64Binary" lub "hexBinary", zgodnie z potrzebami. `time` Dla schematu <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> XML i `date` typów <xref:System.DateTime> danych, użyj typu i Zastosuj <xref:System.Xml.Serialization.XmlTextAttribute> z z ustawionym na wartość "date" lub "Time".  
  
 Dla każdego typu danych schematu XML, który jest mapowany na ciąg, Zastosuj <xref:System.Xml.Serialization.XmlTextAttribute> <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> Właściwość with, która jest ustawiona na typ danych schematu XML. Należy zauważyć, że to nie zmienia formatu serializacji, tylko schematu dla elementu członkowskiego.  
  
> [!NOTE]
>  Właściwość jest uwzględniana wielkość liter, dlatego należy ustawić ją dokładnie na jeden z typów danych schematu XML.  
  
> [!NOTE]
>  Przekazywanie danych binarnych jako elementu XML jest bardziej wydajne niż przekazanie go jako atrybutu XML.  
  
 Aby uzyskać więcej informacji na temat typów danych schematu XML, zobacz dokument organizacja World Wide Web Consortium [o nazwie XML schematu część 2: Typy](https://www.w3.org/TR/xmlschema-2/)danych.  
  
|XSD — typ danych|Typ danych .NET|  
|-------------------|--------------------|  
|{1&gt;anyURI&lt;1}|<xref:System.String>|  
|base64Binary|<xref:System.Byte> Tablica obiektów|  
|wartość logiczna|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|Data|<xref:System.DateTime>|  
|Data i godzina|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|JEDNOSTKI|<xref:System.String>|  
|OBIEKTY|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|<xref:System.Byte> Tablica obiektów|  
|id|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|integer|<xref:System.String>|  
|język|<xref:System.String>|  
|long|<xref:System.Int64>|  
|Nazwa|<xref:System.String>|  
|{1&gt;NCName&lt;1}|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString "|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTACJA|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|czas trwania|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|czas|<xref:System.DateTime>|  
|klucza|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Określonego typu danych schematu XML nie można zamapować na typ danych platformy .NET.</exception>
        <exception cref="T:System.InvalidOperationException">Określony typ danych schematu XML jest nieprawidłowy dla właściwości i nie można go przekonwertować na typ elementu członkowskiego.</exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlTextAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ elementu członkowskiego.</summary>
        <value><see cref="T:System.Type" /> Elementu członkowskiego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Type> Właściwość można ustawić tylko dla typów pierwotnych i wyliczeń.  
  
 Można również zastosować do pola, które zwraca obiekt <xref:System.Xml.XmlNode> lub tablicę <xref:System.Xml.XmlNode> obiektów. <xref:System.Xml.Serialization.XmlTextAttribute>  
  
 Można zastosować <xref:System.Xml.Serialization.XmlTextAttribute> do pola lub właściwości, która zwraca tablicę ciągów. Można również zastosować atrybut do tablicy typu <xref:System.Object> , ale należy <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> ustawić właściwość na ciąg. W takim przypadku wszystkie ciągi wstawione do tablicy są serializowane jako tekst XML.  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
