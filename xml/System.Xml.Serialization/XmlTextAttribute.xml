<Type Name="XmlTextAttribute" FullName="System.Xml.Serialization.XmlTextAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9a15bfa79baec104e9cba79dc92d2971a1625583" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56354185" /></Metadata><TypeSignature Language="C#" Value="public class XmlTextAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlTextAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlTextAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wskazuje, aby <see cref="T:System.Xml.Serialization.XmlSerializer" /> , elementu członkowskiego muszą być traktowane jako tekst XML, gdy klasa, która znajduje się ten jest serializowany lub deserializowany.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlTextAttribute> Należy do rodziny atrybuty, które kontroluje sposób, w jaki <xref:System.Xml.Serialization.XmlSerializer> serializuje i deserializuje obiekt (za pośrednictwem jego <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> i <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> metody). Pełną listę atrybutów podobne zobacz [atrybuty czy kontroli serializacji XML](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).  
  
 Tylko jedno wystąpienie <xref:System.Xml.Serialization.XmlTextAttribute> klasy mogą być stosowane w klasie.  
  
 Można zastosować <xref:System.Xml.Serialization.XmlTextAttribute> pola publiczne i właściwości publiczne odczytu/zapisu, które zwracane typy podstawowego i wyliczenia.  
  
 Można zastosować <xref:System.Xml.Serialization.XmlTextAttribute> do pola lub właściwości, która zwraca tablicę ciągów. Można również zastosować atrybut do tablicy typu <xref:System.Object> , ale należy ustawić <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> właściwości na ciąg. W takim przypadku wszystkie ciągi wstawiony do tablicy są serializowane jako tekst XML.  
  
 <xref:System.Xml.Serialization.XmlTextAttribute> Również będą stosowane do pola, które zwraca <xref:System.Xml.XmlNode> lub tablicę <xref:System.Xml.XmlNode> obiektów.  
  
 Domyślnie <xref:System.Xml.Serialization.XmlSerializer> serializuje składowej klasy jako XML element. Jednak jeśli zastosujesz <xref:System.Xml.Serialization.XmlTextAttribute> do elementu członkowskiego, <xref:System.Xml.Serialization.XmlSerializer> tłumaczy jej wartość na tekst XML. Oznacza to, że wartość jest zakodowana w zawartości XML element.  
  
 [Narzędzie definicji schematu XML (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) od czasu do czasu generuje <xref:System.Xml.Serialization.XmlTextAttribute> podczas tworzenia klasy za pomocą pliku schematu XML (XSD) definicji. Ten problem wystąpi, jeśli schemat zawiera `complexType` w takiej sytuacji z zawartością mieszaną; odpowiednią klasę zawiera element, który zwraca tablicę ciągów, do którego <xref:System.Xml.Serialization.XmlTextAttribute> jest stosowany. Na przykład, gdy `Xml Schema Definition` narzędzie przetwarza tego schematu:  
  
```xml  
<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace=""   
xmlns:xs="http://www.w3.org/2001/XMLSchema">  
  <xs:element name="LinkList" type="LinkList" />  
  <xs:complexType name="LinkList" mixed="true">  
    <xs:sequence>  
      <xs:element minOccurs="1" maxOccurs="1" name="id" type="xs:int" />  
      <xs:element minOccurs="0" maxOccurs="1" name="name" type="xs:string" />  
      <xs:element minOccurs="0" maxOccurs="1" name="next" type="LinkList" />  
    </xs:sequence>  
  </xs:complexType>  
</xs:schema>  
```  
  
 następujące klasy jest generowany (dodatkowe spacje i uwagi zostały usunięte):  
  
 [!code-csharp[XmlTextAttribute#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlTextAttribute/cs/source.cs#0)]
 [!code-vb[XmlTextAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlTextAttribute/vb/source.vb#0)]  
  
 Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [atrybuty](~/docs/standard/attributes/index.md).  
  
> [!NOTE]
>  Można użyć słowa `XmlText` w kodzie zamiast dłuższe <xref:System.Xml.Serialization.XmlTextAttribute>.  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Wprowadzenie do serializacji XML</related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Instrukcje: Określ nazwę elementu alternatywny Stream XML</related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Kontrolowanie serializacji XML przy użyciu atrybutów</related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Przykłady serializacji XML</related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Narzędzie definicji schematu XML (Xsd.exe)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można zastąpić jej, <xref:System.Xml.Serialization.XmlSerializer> serializuje pola publicznego lub właściwości publiczne odczytu/zapisu, tworząc <xref:System.Xml.Serialization.XmlAttributes>i ustawienie jej <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> właściwość <xref:System.Xml.Serialization.XmlTextAttribute>. Aby uzyskać więcej informacji, zobacz <xref:System.Xml.Serialization.XmlAttributeOverrides> klasy.  
  
   
  
## Examples  
 Poniższy przykład szereguje klasę, która zawiera pole publiczne, o nazwie `Comment`. Przykład dotyczy <xref:System.Xml.Serialization.XmlTextAttribute> do pola, zastępując serializacji jako XML element, a zamiast tego szeregując go jako tekst XML.  
  
 [!code-cpp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlTextAttribute : Type -&gt; System.Xml.Serialization.XmlTextAttribute" Usage="new System.Xml.Serialization.XmlTextAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Type" /> Elementu członkowskiego do zserializowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można zastąpić jej, <xref:System.Xml.Serialization.XmlSerializer> serializuje pola publicznego lub właściwości publiczne odczytu/zapisu, tworząc <xref:System.Xml.Serialization.XmlAttributes>i ustawienie jej <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> właściwość <xref:System.Xml.Serialization.XmlTextAttribute>. Aby uzyskać więcej informacji, zobacz <xref:System.Xml.Serialization.XmlAttributeOverrides> klasy.  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlTextAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ danych języka (XSD) definicji schematu XML wygenerowanego przez tekstu <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
        <value>Typem danych schematu XML (XSD), zgodnie z definicją w dokumencie World Wide Web Consortium (www.w3.org) "XML schematu część 2: Typy danych".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> właściwości schematu XML prosty typ danych ma wpływ na format wygenerowany kod XML. Na przykład ustawienie właściwości "Data" powoduje, że wygenerowany tekst sformatowany w stylu ogólne Data, na przykład: 2001-08-31. Z drugiej strony ustawiając właściwość do wyników "typu dateTime" w określonej chwili zgodnie z definicją w Międzynarodowej Organizacji Normalizacyjnej dokumentu 8601, pkt. "Reprezentacje z datami i Patrol", na przykład: 2001-08-15T06:59:11.0508456-07:00.  
  
 Wpływ ustawienia <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> właściwości można także zobaczyć, korzystając z [narzędzie definicji schematu XML (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) do generowania schematu XML dla skompilowanych plików. Aby uzyskać więcej informacji na temat korzystania z narzędzia, zobacz [narzędzie definicji schematu XML i serializacja XML](~/docs/standard/serialization/the-xml-schema-definition-tool-and-xml-serialization.md).  
  
 W poniższej tabeli wymieniono typy proste dane schematu XML z ich odpowiedników .NET.  
  
 Dla schematu XML `base64Binary` i `hexBinary` typy danych, skorzystaj z tablicy z <xref:System.Byte> struktury i zastosować <xref:System.Xml.Serialization.XmlTextAttribute> z <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> "base64Binary" lub "hexBinary", zgodnie z potrzebami. Dla schematu XML `time` i `date` typy danych, użyj <xref:System.DateTime> wpisz i zastosować <xref:System.Xml.Serialization.XmlTextAttribute> z <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> "Data" lub "time".  
  
 Dla każdego typu danych schematu XML, który jest mapowany na ciąg, zastosuj <xref:System.Xml.Serialization.XmlTextAttribute> z jego <xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A> właściwość ustawioną na typ danych schematu XML. Należy pamiętać, że nie ma to wpływu na format serializacji, tylko schematu dla elementu członkowskiego.  
  
> [!NOTE]
>  Właściwość jest rozróżniana wielkość liter, musisz więc ustawić jej dokładnie do jednego z typów danych schematu XML.  
  
> [!NOTE]
>  Przekazywanie danych binarnych jako XML element jest bardziej wydajne niż przekazanie jej jako atrybut XML.  
  
 Aby uzyskać więcej informacji na temat typów danych schematu XML, zobacz dokument World Wide Web Consortium (www.w3.org) o nazwie "XML schematu część 2: Typy danych".  
  
|Typ danych XSD|Typ danych .NET|  
|-------------------|--------------------|  
|{1&gt;anyURI&lt;1}|<xref:System.String>|  
|base64Binary|Tablica <xref:System.Byte> obiektów|  
|wartość logiczna|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|Data|<xref:System.DateTime>|  
|Data i godzina|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|JEDNOSTKI|<xref:System.String>|  
|JEDNOSTKI|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|Tablica <xref:System.Byte> obiektów|  
|ID|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|integer|<xref:System.String>|  
|język|<xref:System.String>|  
|long|<xref:System.Int64>|  
|Nazwa|<xref:System.String>|  
|{1&gt;NCName&lt;1}|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTACJA|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|czas trwania|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|czas|<xref:System.DateTime>|  
|Token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Typ danych schematu XML, który określiłeś, nie można zamapować na typ danych .NET.</exception>
        <exception cref="T:System.InvalidOperationException">Typ danych schematu XML, który określiłeś, jest nieprawidłowy dla właściwości i nie można przekonwertować na typ elementu członkowskiego.</exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlTextAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ elementu członkowskiego.</summary>
        <value><see cref="T:System.Type" /> Elementu członkowskiego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Type> Właściwość można ustawić tylko typy pierwotne i wyliczeń.  
  
 <xref:System.Xml.Serialization.XmlTextAttribute> Również będą stosowane do pola, które zwraca <xref:System.Xml.XmlNode> lub tablicę <xref:System.Xml.XmlNode> obiektów.  
  
 Można zastosować <xref:System.Xml.Serialization.XmlTextAttribute> do pola lub właściwości, która zwraca tablicę ciągów. Można również zastosować atrybut do tablicy typu <xref:System.Object> , ale należy ustawić <xref:System.Xml.Serialization.XmlTextAttribute.Type%2A> właściwości na ciąg. W takim przypadku wszystkie ciągi wstawiony do tablicy są serializowane jako tekst XML.  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>