<Type Name="XmlAnyElementAttribute" FullName="System.Xml.Serialization.XmlAnyElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4954b417171805d221939e72d6984934ec7baef" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69440822" /></Metadata><TypeSignature Language="C#" Value="public class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAnyElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAnyElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAnyElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlAnyElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa, że element członkowski (pole, które zwraca tablicę <see cref="T:System.Xml.XmlElement" /> lub <see cref="T:System.Xml.XmlNode" /> obiektów) zawiera obiekty, które reprezentują dowolny element XML, który nie ma odpowiadającego mu elementu członkowskiego w obiekcie, który jest serializowany lub deserializowany.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  Podczas pracy w przenośnej bibliotece klas, takiej jak w programie Silverlight, Windows Phone lub projekt aplikacji ze sklepu Windows, i używasz .NET Framework 4.0.3 i powyżej <xref:System.Xml.Linq.XElement> , użyj lub <xref:System.Xml.Linq.XNode> zamiast <xref:System.Xml.XmlElement> i <xref:System.Xml.XmlNode>.  
  
 Użyj, <xref:System.Xml.Serialization.XmlAnyElementAttribute> aby zawierać dowolne dane (jako elementy XML), które mogą być wysyłane jako część dokumentu XML, takie jak metadane wysyłane jako część dokumentu.  
  
 Zastosuj do pola, które zwraca <xref:System.Xml.XmlElement> tablicę lub <xref:System.Xml.XmlNode> obiektów. <xref:System.Xml.Serialization.XmlAnyElementAttribute> Takie pole może być używane na dwa sposoby, w zależności od tego, czy obiekt jest serializowany czy deserializowany. Gdy jest serializowany, obiekt jest generowany jako elementy XML lub węzły, nawet jeśli nie mają odpowiadających im elementów członkowskich (lub elementów członkowskich) w serializowanym obiekcie. Jeśli określisz <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> wartość właściwości podczas stosowania atrybutu, wszystkie <xref:System.Xml.XmlElement> lub <xref:System.Xml.XmlNode> obiekty wstawione do tablicy muszą mieć tę samą nazwę elementu i domyślną przestrzeń nazw lub wyjątek jest zgłaszany. W przypadku ustawienia <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> wartości właściwości należy również <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> ustawić właściwość, a <xref:System.Xml.XmlElement> obiekty lub <xref:System.Xml.XmlNode> muszą mieć takie same wartości nazwy i przestrzeni nazw. Jeśli żadna <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> wartość nie zostanie określona <xref:System.Xml.XmlElement> , obiekty <xref:System.Xml.XmlNode> lub mogą mieć dowolną nazwę elementu.  
  
 Po wywołaniu <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> metody <xref:System.Xml.Serialization.XmlSerializer> klasy, wszystkie elementy, które nie mają odpowiadającego elementu członkowskiego w deserializowanym obiekcie są zbierane w tablicy. Po deserializacji należy wykonać iterację kolekcji <xref:System.Xml.XmlElement> elementów w celu przetworzenia danych. W przypadku określenia <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> wartości tablica zawiera tylko elementy XML o tej nazwie. Jeśli <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> wartość nie zostanie określona, tablica zawiera wszystkie elementy, które nie mają odpowiadającego im elementu członkowskiego w klasie. Jeśli Klasa zawiera więcej niż jedno pole, do którego zastosowano atrybut, użyj <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>właściwości, lub <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> i <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> , aby rozróżnić zawartość tablic. Jeśli taka Klasa (z wieloma polami) zawiera również jedno pole, które nie ma rozróżniania wartości właściwości (innymi słowy <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> i <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) podczas deserializacji, ta tablica zawiera wszystkie nieznane elementy XML, które nie są już zawarte w innych tablicach. Jeśli Klasa zawiera więcej niż jedno pole, które nie ma rozróżnienia <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> lub <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> wartości, zachowanie podczas deserializacji nie jest określone.  
  
 Można również zastosować <xref:System.Xml.Serialization.XmlAnyElementAttribute> do pola, które zwraca pojedynczy <xref:System.Xml.XmlElement> obiekt. W takim przypadku należy użyć właściwości i metod <xref:System.Xml.XmlElement> klasy do cyklicznego iteracji przez nieznane elementy.  
  
 Można zastosować wiele wystąpień <xref:System.Xml.Serialization.XmlAnyElementAttribute> do składowej klasy, ale każde wystąpienie musi mieć <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> unikatową wartość właściwości. Lub, jeśli dla każdego <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> wystąpienia ustawiono tę samą właściwość, należy ustawić wartość <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> właściwości DISTINCT dla każdego wystąpienia.  
  
 Zdarzenia <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> i<xref:System.Xml.Serialization.XmlSerializer> <xref:System.Xml.Serialization.XmlAnyElementAttribute> nie występują w przypadku zastosowania do składowej klasy. <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute>  
  
> [!NOTE]
>  Możesz użyć słowa `XmlAnyElement` w kodzie zamiast dłużej <xref:System.Xml.Serialization.XmlAnyElementAttribute>.  
  
 Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [atrybuty](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Xml.Serialization.XmlAnyElementAttribute> do pola o nazwie `AllElements` <xref:System.Xml.XmlElement> , która zwraca tablicę obiektów.  
  
 [!code-cpp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Wprowadzenie do serializacji XML</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj konstruktora <xref:System.Xml.Serialization.XmlAnyElementAttribute> , gdy zastępujesz serializację pola. Aby uzyskać więcej informacji o zastępowaniu serializacji, <xref:System.Xml.Serialization.XmlAttributeOverrides> zobacz Klasa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAnyElementAttribute : string -&gt; System.Xml.Serialization.XmlAnyElementAttribute" Usage="new System.Xml.Serialization.XmlAnyElementAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu XML, który <see cref="T:System.Xml.Serialization.XmlSerializer" /> generuje.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> klasy i określa nazwę elementu XML wygenerowaną w dokumencie XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj konstruktora <xref:System.Xml.Serialization.XmlAnyElementAttribute> , gdy zastępujesz serializację pola. Aby uzyskać więcej informacji o zastępowaniu serializacji, <xref:System.Xml.Serialization.XmlAttributeOverrides> zobacz Klasa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAnyElementAttribute : string * string -&gt; System.Xml.Serialization.XmlAnyElementAttribute" Usage="new System.Xml.Serialization.XmlAnyElementAttribute (name, ns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu XML, który <see cref="T:System.Xml.Serialization.XmlSerializer" /> generuje.</param>
        <param name="ns">Przestrzeń nazw XML elementu XML.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> klasy i określa nazwę elementu XML wygenerowaną w dokumencie XML i jego przestrzeń nazw XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj konstruktora <xref:System.Xml.Serialization.XmlAnyElementAttribute> , gdy zastępujesz serializację pola. Aby uzyskać więcej informacji o zastępowaniu serializacji, <xref:System.Xml.Serialization.XmlAttributeOverrides> zobacz Klasa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę elementu XML.</summary>
        <value>Nazwa elementu XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określisz <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> wartość właściwości podczas stosowania atrybutu, wszystkie <xref:System.Xml.XmlElement> lub <xref:System.Xml.XmlNode> obiekty wstawione do tablicy muszą mieć tę samą nazwę elementu i domyślną przestrzeń nazw lub wyjątek jest zgłaszany. W przypadku ustawienia <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> wartości właściwości należy również <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> ustawić właściwość, a <xref:System.Xml.XmlElement> obiekty lub <xref:System.Xml.XmlNode> muszą mieć takie same wartości nazwy i przestrzeni nazw. Jeśli żadna <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> wartość nie zostanie określona <xref:System.Xml.XmlElement> , obiekty <xref:System.Xml.XmlNode> lub mogą mieć dowolną nazwę elementu.  
  
 Po wywołaniu <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> metody <xref:System.Xml.Serialization.XmlSerializer> klasy, wszystkie atrybuty, które nie mają odpowiadającego elementu członkowskiego w deserializowanym obiekcie są zbierane w tablicy. W przypadku określenia <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> wartości tablica zawiera tylko elementy XML o tej nazwie. Jeśli <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> wartość nie zostanie określona, tablica zawiera wszystkie elementy, które nie mają odpowiadającego im elementu członkowskiego w klasie. Jeśli Klasa zawiera więcej niż jedno pole, do którego zastosowano atrybut, użyj <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> właściwości i <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> , aby rozróżnić zawartość tablic. Jeśli taka Klasa (z wieloma polami) zawiera również jedno pole, które nie ma ustawionej wartości właściwości odróżniającej (to jest <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> i <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) podczas deserializacji, tablica zawiera wszystkie elementy XML, które nie są jeszcze zawarte w drugim. Tablice. W przypadku dodania więcej niż jednego pola, które nie ma rozróżnienia <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> lub <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> zestawu wartości, ostatnie pole w klasie zawiera wszystkie nieznane elementy, które nie znajdują się jeszcze w innych tablicach, a wszystkie inne pola są ustawione `null`na.  
  
 Można zastosować wiele wystąpień <xref:System.Xml.Serialization.XmlAnyElementAttribute> do składowej klasy, ale każde wystąpienie musi mieć <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> unikatową wartość właściwości. Lub, jeśli dla każdego <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> wystąpienia ustawiono tę samą właściwość, należy ustawić wartość <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> właściwości DISTINCT dla każdego wystąpienia.  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nazwa elementu elementu członkowskiego tablicy nie jest zgodna z nazwą elementu określoną przez <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" /> właściwość.</exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia przestrzeń nazw XML wygenerowaną w dokumencie XML.</summary>
        <value>Przestrzeń nazw XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> Właściwość pozwala ustawić unikatową nazwę atrybutu XML. Właściwość jest zgodna z regułami dotyczącymi tworzenia przestrzeni nazw XML, jak znaleziono w [przestrzeniach nazw w dokumencie XML](https://www.w3.org/TR/xml-names/) , z organizacja World Wide Web Consortium. <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>
  
 Aby ustawić <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> właściwość na nazwę prefiksu, <xref:System.Xml.Serialization.XmlSerializerNamespaces> Utwórz, która zawiera przestrzenie nazw i prefiksy używane w dokumencie XML. Ustaw właściwość na jedną z przestrzeni nazw <xref:System.Xml.Serialization.XmlSerializerNamespaces>w. <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> Po wygenerowaniu pliku XML nazwa atrybutu jest poprawnie poprzedzona prefiksem skojarzonym z określonym obszarem nazw.  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia jawną kolejność, w której elementy są serializowane lub deserializowane.</summary>
        <value>Kolejność generowania kodu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj wyliczenia, aby <xref:System.Web.Services.Description.ServiceDescriptionImporter> nakazać programowi <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> generowanie kodu, który ustawia właściwość. <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder>  
  
> [!IMPORTANT]
>  <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> Gdy właściwość została użyta dla jednej właściwości publicznej lub pola w typie, należy ją zastosować do wszystkich publicznych właściwości i pól dla tego typu i wszystkich typów dziedziczonych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
