<Type Name="XmlArrayItemAttribute" FullName="System.Xml.Serialization.XmlArrayItemAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="91439c735fd0ac54113bf71984159917e11e9291" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36439925" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlArrayItemAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlArrayItemAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlArrayItemAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlArrayItemAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlArrayItemAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlArrayItemAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje atrybut określający, typy pochodne <see cref="T:System.Xml.Serialization.XmlSerializer" /> można umieścić w tablicy serializacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlArrayItemAttribute> Należy do rodziny atrybutów, która kontroluje sposób <xref:System.Xml.Serialization.XmlSerializer> serializuje i deserializuje obiekt. Pełną listę atrybutów podobne, zobacz [atrybuty że formant serializacji XML](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).  
  
 Możesz zastosować <xref:System.Xml.Serialization.XmlArrayItemAttribute> do żadnego członka publicznego odczytu/zapisu, która zwraca tablicę lub zapewnia dostęp do jednego. Na przykład pola, które zwraca tablicę obiektów i kolekcji, <xref:System.Collections.ArrayList>, lub każda klasa implementująca <xref:System.Collections.IEnumerable> interfejsu.  
  
 <xref:System.Xml.Serialization.XmlArrayItemAttribute> Obsługuje polimorfizm — innymi słowy, umożliwia <xref:System.Xml.Serialization.XmlSerializer> Aby dodać obiekty pochodne do tablicy. Na przykład, załóżmy, że klasa o nazwie `Mammal` pochodzi z klasy podstawowej o nazwie `Animal`. Dalsze Załóżmy, że klasa o nazwie `MyAnimals` zawiera pole, które zwraca tablicę `Animal` obiektów. Aby umożliwić <xref:System.Xml.Serialization.XmlSerializer> do serializacji zarówno `Animal` i `Mammal` wpisz, zastosuj <xref:System.Xml.Serialization.XmlArrayItemAttribute> do pola dwa razy, po każdej aktualizacji określania jednego z dwóch typów dopuszczalne.  
  
> [!NOTE]
>  Można zastosować wiele wystąpień <xref:System.Xml.Serialization.XmlArrayItemAttribute> lub <xref:System.Xml.Serialization.XmlElementAttribute> Aby określić typy obiektów, które można wstawiać do tablicy.  
  
> [!NOTE]
>  Serializacja pola lub właściwości, która zwraca interfejs lub tablicy interfejsów nie jest obsługiwana.  
  
 Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [atrybutów](~/docs/standard/attributes/index.md).  
  
> [!NOTE]
>  Można użyć słowa `XmlArrayItem` w kodzie zamiast dłuższy <xref:System.Xml.Serialization.XmlArrayItemAttribute>.  
  
   
  
## Examples  
 Poniższy przykład serializuje klasę o nazwie `Group` zawiera pole o nazwie `Employees` zwracająca tablicę `Employee` obiektów. Przykład dotyczy <xref:System.Xml.Serialization.XmlArrayItemAttribute> do pola, a tym samym poinstruowanie <xref:System.Xml.Serialization.XmlSerializer> wstawić obiektów klasy podstawowej (`Employee`) typu i klasy pochodnej (`Manager`) do serializacji tablicy.  
  
 [!code-cpp[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład serializuje klasę o nazwie `Transportation` zawiera pole o nazwie `MyVehicles` zwracająca tablicę `Vehicle` obiektów. Przykład dotyczy <xref:System.Xml.Serialization.XmlArrayItemAttribute> do pola, dzięki czemu <xref:System.Xml.Serialization.XmlSerializer> Aby wstawić `Car` klasy, która jest pochodną `Vehicle` klasy do tablicy.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : string -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">Nazwa elementu XML.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> , określa nazwę elementu XML wygenerowanych w dokumencie XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To przeciążenie ustawia <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> właściwości.  
  
 To przeciążenie należy użyć, jeśli nazwa elementu XML wygenerowanych różnią się od identyfikatora elementu członkowskiego.  
  
 Dokument XML, który zawiera przestrzenie nazw może zawierać więcej niż jedną wersję nazwy elementu. Aby uzyskać więcej informacji, zobacz <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład serializuje klasę o nazwie `Transportation` zawiera pole o nazwie `MyVehicles` zwracająca tablicę `Vehicle` obiektów. Przykład dotyczy <xref:System.Xml.Serialization.XmlArrayItemAttribute> do pola, dzięki czemu <xref:System.Xml.Serialization.XmlSerializer> Aby wstawić `Car` klasy, która jest pochodną `Vehicle` klasy do tablicy. Podczas stosowania atrybut, w przykładzie <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> za pomocą właściwości `elementName` parametru.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : Type -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> Obiektu do zserializowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> , określa <see cref="T:System.Type" /> mogą być wstawiane do serializacji tablicy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład serializuje klasę o nazwie `Transportation` zawiera pole o nazwie `MyVehicles` zwracająca tablicę `Vehicle` obiektów. Przykład dotyczy <xref:System.Xml.Serialization.XmlArrayItemAttribute> do pola, dzięki czemu <xref:System.Xml.Serialization.XmlSerializer> Aby wstawić `Car` klasy, która jest pochodną `Vehicle` klasy do tablicy. Podczas stosowania atrybut, w przykładzie <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> za pomocą właściwości `type` parametru.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (string elementName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(System::String ^ elementName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : string * Type -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute (elementName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementName">Nazwa elementu XML.</param>
        <param name="type">
          <see cref="T:System.Type" /> Obiektu do zserializowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> , określa nazwę elementu XML wygenerowanych w dokumencie XML i <see cref="T:System.Type" /> mogą być wstawiane do wygenerowanego dokumentu XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To przeciążenie ustawia <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> i <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> właściwości.  
  
 To przeciążenie należy użyć, jeśli nazwa elementu XML wygenerowanych różnią się od identyfikatora elementu członkowskiego.  
  
 Dokument XML, który zawiera przestrzenie nazw może zawierać więcej niż jedną wersję nazwy elementu. Aby uzyskać więcej informacji, zobacz <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład serializuje klasę o nazwie `Transportation` zawiera pole o nazwie `MyVehicles` zwracająca tablicę `Vehicle` obiektów. Przykład dotyczy <xref:System.Xml.Serialization.XmlArrayItemAttribute> do pola, dzięki czemu <xref:System.Xml.Serialization.XmlSerializer> Aby wstawić `Car` klasy, która jest pochodną `Vehicle` klasy do tablicy. Podczas stosowania atrybut, w przykładzie <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> za pomocą właściwości `elementName` parametru i <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> za pomocą właściwości `type` parametru.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ danych XML wygenerowanego elementu XML.</summary>
        <value>Schemat definicji (XSD) typu danych XML, zgodnie z definicją w dokumencie konsorcjum World Wide Web (www.w3.org) "XML schematu część 2: typy danych".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli wymieniono schematu XML proste typy danych z ich odpowiedniki .NET.  
  
 Schemat XML `base64Binary` i `hexBinary` typy danych, użyj tablicy <xref:System.Byte> obiekty i zastosować <xref:System.Xml.Serialization.XmlArrayItemAttribute> z <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> właściwości wartość "base64Binary" lub "hexBinary", zgodnie z potrzebami. Schemat XML `time` i `date` typy danych, użyj <xref:System.DateTime> wpisz i zastosować <xref:System.Xml.Serialization.XmlArrayItemAttribute> z <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> ustawiony na "date" lub "czas".  
  
 Dla każdego typu schematu XML, który jest zamapowany na ciąg, zastosuj <xref:System.Xml.Serialization.XmlArrayItemAttribute> z jego <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> właściwość Typ schematu XML. Jednak nie ma to wpływu na format serializacji, tylko schematu dla elementu członkowskiego.  
  
> [!NOTE]
>  Właściwość uwzględnia wielkość liter, więc należy ją ustawić dokładnie do jednego z typów danych schematu XML.  
  
> [!NOTE]
>  Przekazywanie danych binarnych jako XML elementu jest bardziej wydajne przekazaniem go jako atrybut XML.  
  
 Aby uzyskać więcej informacji o typach danych schematu XML, zobacz dokument konsorcjum World Wide Web (www.w3.org) "część schematu XML 2: typy danych."  
  
|Typ danych XSD|Typ danych .NET|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|Tablica <xref:System.Byte> obiektów|  
|wartość logiczna|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|Data|<xref:System.DateTime>|  
|Data i godzina|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|JEDNOSTKI|<xref:System.String>|  
|JEDNOSTKI|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|Tablica <xref:System.Byte> obiektów|  
|ID|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|integer|<xref:System.String>|  
|język|<xref:System.String>|  
|long|<xref:System.Int64>|  
|Nazwa|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTACJA|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|czas trwania|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|czas|<xref:System.DateTime>|  
|Token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 Poniższy przykład serializuje klasę o nazwie `PurchaseOrder`. Kilka wystąpień <xref:System.Xml.Serialization.XmlArrayItemAttribute> klasy są stosowane do trzech elementów członkowskich, a <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> właściwości dla każdego wystąpienia ustawiono typ jest dozwolony w tablicy.  
  
 [!code-cpp[XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlArrayItemAttribute Example/CPP/arrayitem.cpp#1)]
 [!code-csharp[XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlArrayItemAttribute Example/CS/arrayitem.cs#1)]
 [!code-vb[XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlArrayItemAttribute Example/VB/arrayitem.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę wygenerowanego elementu XML.</summary>
        <value>Nazwa elementu XML wygenerowany. Wartość domyślna to identyfikator elementu członkowskiego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określ <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> Jeśli nazwa elementu XML wygenerowanych różnią się od identyfikatora elementu członkowskiego.  
  
 Możesz ustawić taki sam <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> elementy członkowskie o nazwie wartość do więcej niż jeden element członkowski klasy Jeśli wygenerowany dokument XML używa przestrzeni nazw XML do rozróżniania między tak samo. Aby uzyskać więcej informacji o sposobie używania prefiksem nazwy i przestrzenie nazw w dokumencie XML, zobacz <xref:System.Xml.Serialization.XmlSerializerNamespaces> klasy.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> właściwość `Vehicle` i `Car` klasy — w tym samym zmienianie nazw elementów XML który <xref:System.Xml.Serialization.XmlSerializer> generuje dla tych klas.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy nazwa elementu XML wygenerowanych jest kwalifikowana.</summary>
        <value>Jeden z <see cref="T:System.Xml.Schema.XmlSchemaForm" /> wartości. Wartość domyślna to <see langword="XmlSchemaForm.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> Właściwość określa, czy jest kwalifikowana nazwa elementu XML, na podstawie specyfikacji konsorcjum World Wide Web (www.w3.org) "Namespaces in XML".  
  
 Jeśli <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> wartość właściwości jest równa wartości, ustawiania <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> właściwości `XmlSchemaForm.Unqualified` zgłasza wyjątek.  
  
 Wartość domyślna to `XmlSchemaForm.None`, powoduje, że <xref:System.Xml.Serialization.XmlSerializer> do sprawdzenia schematu dla dokumentu XML ustalić, czy jest kwalifikowana przestrzeni nazw. W przypadku elementów <xref:System.Xml.Serialization.XmlSerializer> sprawdza wartość atrybutu elementu schematu `elementFormDefault`. Dla atrybutów, sprawdza wartość atrybutu elementu schematu `attributeFormDefault`. Na przykład, następujący schemat XML wskazuje, że `Name` element jest kwalifikowana, podczas `Number` element jest niekwalifikowane.  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified">  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A> właściwość `Vehicle` klasy do `XmlSchemaForm.Unqualified`i <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A> właściwość `Car` klasy do `XmlSchemaForm.Qualified`.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> Właściwość jest ustawiona na <see langword="XmlSchemaForm.Unqualified" /> i <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> określona wartość.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Xml.Serialization.XmlSerializer" /> musi serializować elementu członkowskiego jako pusty tagu XML z <see langword="xsi:nil" /> ustawić atrybutu <see langword="true" />.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Xml.Serialization.XmlSerializer" /> generuje <see langword="xsi:nil" /> atrybutu; w przeciwnym razie <see langword="false" />, i wystąpienie nie zostanie wygenerowany. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Specyfikacja schematu XML dla struktury umożliwia dokument XML jawnie sygnalizuje, że brakuje elementu zawartości. Ten atrybut zawiera takiego elementu `xsi:nil` ustawioną `true`. Aby uzyskać więcej informacji, zobacz specyfikację konsorcjum World Wide Web (www.w3.org) zatytułowany "schematu XML — część 1: struktur."  
  
 Jeśli <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> właściwość jest `true`, `xsi:nil` atrybutu jest generowane dla elementów członkowskich klasy, które zostały ustawione na `null`. Na przykład, jeśli wartość pola o nazwie `MyStringArray` do `null`, <xref:System.Xml.Serialization.XmlSerializer> generuje następujący kod XML.  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 Jeśli <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> właściwość jest `false`, zostanie wygenerowany żaden element XML.  
  
> [!NOTE]
>  Nie można zastosować <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> właściwości do elementu członkowskiego typu wartości, ponieważ typ wartości nie może zawierać `null`.  
  
   
  
## Examples  
 Poniższy przykład serializuje klasę o nazwie `Group`, który zawiera pole o nazwie `Employees` zwracająca tablicę `Employee` obiektów. Drugiej klasy o nazwie `Manager` pochodną `Employee`. <xref:System.Xml.Serialization.XmlArrayItemAttribute> Określa, że <xref:System.Xml.Serialization.XmlSerializer> można wstawić zarówno `Employee` i `Manager` obiekty do tablicy. Ustawia przykład <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> właściwości, w tym samym poleceniem <xref:System.Xml.Serialization.XmlSerializer> nie można wygenerować `xsi:nil` ustawiono atrybut obiektów w tablicy `null`.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obszar nazw wygenerowanego elementu XML.</summary>
        <value>Przestrzeń nazw wygenerowanego elementu XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> Właściwości jest zgodny ze specyfikacją konsorcjum World Wide Web (www.w3.org) "Namespaces in XML".  
  
 Aby utworzyć przestrzeni nazw do użycia w dokumencie XML i skojarzone prefiksy, należy utworzyć <xref:System.Xml.Serialization.XmlSerializerNamespaces> zawierający wszystkie pary prefiksu i przestrzeni nazw. Przestrzeń nazw, należy ustawić dla każdego <xref:System.Xml.Serialization.XmlArrayAttribute> muszą być zawarte w <xref:System.Xml.Serialization.XmlSerializerNamespaces>. Gdy <xref:System.Xml.Serialization.XmlSerializer> generuje dokument, poprawnie prefiksy nazwy elementu, dla każdego elementu tablicy.  
  
   
  
## Examples  
 Następujący przykład dotyczy <xref:System.Xml.Serialization.XmlArrayItemAttribute> i ustawia <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> właściwości.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NestingLevel">
      <MemberSignature Language="C#" Value="public int NestingLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NestingLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property NestingLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NestingLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NestingLevel : int with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poziom w hierarchii elementów XML <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> dotyczy.</summary>
        <value>Liczony od zera indeks zestaw indeksy w tablicy tablic.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dokument XML może zawierać hierarchie elementów XML. Do reprezentowania tych hierarchii, służy tablicy tablic. W tablicy każdy indeks reprezentuje poziomu w hierarchii. W związku z tym <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> właściwość jest używana tylko podczas stosowania <xref:System.Xml.Serialization.XmlArrayItemAttribute> do pola, które zwraca tablicy tablic.  
  
 Podczas stosowania atrybutu, określ poziom hierarchii atrybutu ma wpływ na przez ustawienie <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>. Indeks pierwszego ma zawsze wartość 0; w związku z tym jest opcjonalne ustawić jej <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> — <xref:System.Xml.Serialization.XmlArrayItemAttribute> bez <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> wartość jest stosowana do pierwszego indeksu tablicy. Tylko kolejnych <xref:System.Xml.Serialization.XmlArrayItemAttribute> obiekty wymagają <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> wartości określonych (1, 2, 3 i tak dalej).  
  
   
  
## Examples  
 Poniższy przykład dotyczy trzy <xref:System.Xml.Serialization.XmlArrayItemAttribute> atrybuty do tablicy tablic. Aby określić, które dotyczą każdego atrybutu tablic <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> właściwość jest ustawiona na indeks tablic.  
  
 [!code-cpp[NestingLevel#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NestingLevel/cpp/nestinglevel.cpp#1)]
 [!code-csharp[NestingLevel#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NestingLevel/CS/nestinglevel.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ dozwolone w tablicy.</summary>
        <value>A <see cref="T:System.Type" /> który jest dozwolony w tablicy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> właściwości w celu określenia przesłoniętych typu dla pola publicznego lub wartość właściwości publicznej odczytu/zapisu.  
  
 Jeśli to pole ani właściwość zwraca tablicę typu <xref:System.Object>, zastosowanie wielu wystąpień <xref:System.Xml.Serialization.XmlArrayItemAttribute> pola lub właściwości. Dla każdego wystąpienia, należy ustawić <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> dla właściwości typu obiektu, który można wstawiać do tablicy.  
  
 Jeśli tablica zawiera tylko typy pierwotne, nie trzeba zastosować <xref:System.Xml.Serialization.XmlArrayItemAttribute>. Domyślnie <xref:System.Xml.Serialization.XmlSerializer> generuje serii o takiej samej nazwie elementu elementów dla każdej wartości, ale typ każdego elementu jest ustawiony na typ danych schematu XML. Na przykład następujący kod:  
  
```  
' Visual Basic code  
Public Class Arrays  
   Public XSDTypes ()As Object= New Object(){"one", 2, 3.0}  
End Class  
// C# code  
public class MyArray{  
   // No XmlArrayItemAttribute is applied.  
   public object[] XSDTypes= new object[]{"one", 2, 3.2};  
}  
```  
  
 Powoduje to XML:  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Arrays xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <XSDTypes>  
    <Object xsi:type="xsd:string">one</Object>  
    <Object xsi:type="xsd:int">2</Object>  
    <Object xsi:type="xsd:double">3</Object>  
  </XSDTypes>  
</Arrays>  
```  
  
 Jednak jeśli określisz <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> właściwości dla każdego typu pierwotnego, nazwa elementu dla każdej wartości jest generowany przy użyciu nazwy typu .NET. Na przykład ten kod:  
  
```  
' Visual Basic code  
Public Class Arrays  
   <XmlArrayItem(GetType(String)), _  
   XmlArrayItem(GetType(Integer)), _  
   XmlArrayItem(GetType(Double))> _  
   Public PrimitiveTypes () As Object = New Object(){"one", 2, 3.0}  
End Class  
// C# code  
public class Arrays{  
   [XmlArrayItem(typeof(string))]  
   [XmlArrayItem(typeof(int))]  
   [XmlArrayItem(typeof(double))]  
   public object [] PrimitiveTypes = new object[]{"one", 2, 3.0};  
}  
```  
  
 Powoduje to XML:  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Arrays xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <PrimitiveTypes>  
    <string>one</string>  
    <int>2</int>  
    <double>3</double>  
  </PrimitiveTypes>  
</Arrays>  
```  
  
   
  
## Examples  
 Poniższy przykład serializuje jest Tablica obiektów. Przypisano pole, które zwraca tablicę z dwoma <xref:System.Xml.Serialization.XmlArrayItemAttribute> wystąpień. Powoduje, że każde wystąpienie <xref:System.Xml.Serialization.XmlSerializer> określona <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> w tablicy.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>