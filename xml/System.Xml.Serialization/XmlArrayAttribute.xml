<Type Name="XmlArrayAttribute" FullName="System.Xml.Serialization.XmlArrayAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ddef83aa2ea85604a1ecfd958fe2a6aeb21ffee4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30741716" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlArrayAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlArrayAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlArrayAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlArrayAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlArrayAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa, że <see cref="T:System.Xml.Serialization.XmlSerializer" /> musi serializować elementu członkowskiego klasy określonego jako tablica elementów XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlArrayAttribute> Należy do rodziny atrybutów, która kontroluje sposób <xref:System.Xml.Serialization.XmlSerializer> serializuje i deserializuje obiekt. Pełną listę atrybutów podobne, zobacz [atrybuty że formant serializacji XML](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).  
  
 Możesz zastosować <xref:System.Xml.Serialization.XmlArrayAttribute> do właściwości publiczne pola lub odczytu/zapisu, która zwraca tablicę obiektów. Można również zastosować je do kolekcji i pola, które zwracają <xref:System.Collections.ArrayList> lub dowolnego pola, które zwraca obiekt, który implementuje <xref:System.Collections.IEnumerable> interfejsu.  
  
 Po zastosowaniu <xref:System.Xml.Serialization.XmlArrayAttribute> do elementu członkowskiego klasy <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> metody <xref:System.Xml.Serialization.XmlSerializer> klasy generuje zagnieżdżonych sekwencji elementów XML z tego członka. Dokument schematu XML (plik XSD) wskazuje tablicy jako `complexType`. Na przykład, jeśli klasa serializacji reprezentuje zamówienia zakupu, można wygenerować tablicę elementów zakupionych przez zastosowanie <xref:System.Xml.Serialization.XmlArrayAttribute> do publicznego pola, które zwraca tablicę obiektów, które reprezentują kolejność elementów.  
  
 Jeśli atrybuty nie są stosowane do pola publicznego lub właściwości, która zwraca tablicę obiektów typu złożonego lub pierwotnych <xref:System.Xml.Serialization.XmlSerializer> domyślnie generuje zagnieżdżonych sekwencji elementów XML. Aby ściślej kontrolować, są generowane, jakie elementy XML, zastosuj <xref:System.Xml.Serialization.XmlArrayItemAttribute> i <xref:System.Xml.Serialization.XmlArrayAttribute> pola lub właściwości. Na przykład, domyślnie nazwa elementu XML wygenerowanych jest pochodną identyfikator elementu członkowskiego można zmienić nazwę elementu XML wygenerowanych przez ustawienie <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> właściwości.  
  
 Jeśli serializować tablicę zawierającą elementy określonego typu i wszystkich klas pochodnych, że typ, należy użyć <xref:System.Xml.Serialization.XmlArrayItemAttribute> do zadeklarowania każdego typu.  
  
> [!NOTE]
>  Można użyć `XmlArray` w kodzie zamiast dłuższy <xref:System.Xml.Serialization.XmlArrayAttribute>.  
  
 Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [atrybutów](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 Poniższy przykład serializuje wystąpienia klasy do dokumentu XML, który zawiera kilka tablice obiektów. <xref:System.Xml.Serialization.XmlArrayAttribute> Jest stosowany do elementów członkowskich, które stają się tablice elementu XML.  
  
 [!code-cpp[Classic XmlArrayAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlArray" />
    <altmember cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [atrybutów](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 W poniższym przykładzie przypisano <xref:System.Xml.Serialization.XmlArrayAttribute> do dwóch tablic.  
  
 [!code-cpp[Classic XmlArrayAttribute.XmlArrayAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.XmlArrayAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.XmlArrayAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayAttribute(System::String ^ elementName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">Nazwa elementu XML który <see cref="T:System.Xml.Serialization.XmlSerializer" /> generuje.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> klasy i określa nazwę elementu XML wygenerowanych w wystąpieniu dokumentu XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [atrybutów](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 W poniższym przykładzie przypisano <xref:System.Xml.Serialization.XmlArrayAttribute> do macierzy dwa i serializuje wystąpienia klasy, które zawiera tych tablicach.  
  
 [!code-cpp[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/Common/MyClass1.xml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę elementu XML do serializacji tablicy.</summary>
        <value>Nazwa elementu XML serializacji tablicy. Wartością domyślną jest nazwa elementu członkowskiego, do którego <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> jest przypisany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określ <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> której ma zostać wygenerowana nazwa elementu XML różnią się od identyfikatora elementu członkowskiego.  
  
 Możesz ustawić taki sam <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> wartość, która ma więcej niż jeden element członkowski tak długo, jak wygenerowany dokument XML używa przestrzeni nazw XML do rozróżniania między elementy członkowskie o identycznej nazwie. Aby uzyskać więcej informacji o użyciu przestrzeni nazw i tworzeniu prefiksem nazwy w dokumencie XML, zobacz <xref:System.Xml.Serialization.XmlSerializerNamespaces>.  
  
   
  
## Examples  
 Poniższy przykład serializuje wystąpienia `Library` klasę, która zawiera właściwość o nazwie `Books` zwracająca tablicę `Book` elementów. W przykładzie użyto <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> właściwości w celu określenia, że powinno być nazwanym tablicę elementów XML `My_Books` zamiast `Books`.  
  
 [!code-cpp[Classic XmlArrayAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Namespace" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Form" />
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy nazwa elementu XML wygenerowanych przez <see cref="T:System.Xml.Serialization.XmlSerializer" /> jest kwalifikowana lub niekwalifikowane.</summary>
        <value>Jeden z <see cref="T:System.Xml.Schema.XmlSchemaForm" /> wartości. Wartość domyślna to <see langword="XmlSchemaForm.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A> Właściwość określa, czy nazwa elementu XML jest kwalifikowana lub niekwalifikowane. <xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A> Właściwość odpowiada dokumentu konsorcjum World Wide Web (www.w3.org) 1999 zatytułowany "Namespaces in XML".  
  
 Jeśli <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> wartość właściwości jest równa wartości, ustawiania <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> właściwości `XmlSchemaForm.Unqualified` zgłasza wyjątek.  
  
 Ustawieniem domyślnym `XmlSchemaForm.None`, powoduje, że <xref:System.Xml.Serialization.XmlSerializer> do sprawdzenia schematu dla dokumentu XML ustalić, czy jest kwalifikowana przestrzeni nazw. Jeśli schemat nie określono wartości dla pojedynczego elementu lub atrybutu, <xref:System.Xml.Serialization.XmlSerializer> używa `elementFormDefault` i `attributeFormDefault` wartości, aby ustalić, czy element lub atrybut jest kwalifikowana. Następujący kod XML zawiera schemat:  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
 Gdy <xref:System.Xml.Serialization.XmlSerializer> odczytuje schematu, <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> wartość dla obu `Name` i `Number` jest `XmlSchemaForm.None`, ale `Name` kwalifikuje się element, podczas `Number` element jest niekwalifikowane.  
  
   
  
## Examples  
 Poniższy przykład serializuje wystąpienia `Enterprises` klasy. Dwa elementy XML mają taką samą nazwę lokalnego (`Company`) ale różnymi prefiksami. Ustawia przykład <xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A> właściwość jest ustawiona na `XmlForm.Qualified` aby zapewnić nazwy kwalifikowane w wystąpieniu XML.  
  
 [!code-cpp[Classic XmlArrayAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.ElementName" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Namespace" />
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Xml.Serialization.XmlSerializer" /> musi serializować elementu członkowskiego jako pusty tagu XML z <see langword="xsi:nil" /> ustawić atrybutu <see langword="true" />.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Xml.Serialization.XmlSerializer" /> generuje <see langword="xsi:nil" /> atrybutu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Specyfikacja schematu XML dla struktury umożliwia dokument XML jawnie sygnalizuje, że brakuje elementu zawartości. Ten atrybut zawiera takiego elementu `xsi:nil` ustawioną `true`. Aby uzyskać więcej informacji, zobacz specyfikację konsorcjum World Wide Web (www.w3.org) zatytułowany "schematu XML — część 1: struktur."  
  
 Jeśli <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> właściwość jest ustawiona na `true`, `xsi:nil` atrybutu jest generowane dla elementów członkowskich klasy, które zostały ustawione na `null`. Na przykład, jeśli wartość pola o nazwie `MyStringArray` do `null`, <xref:System.Xml.Serialization.XmlSerializer> generuje następujący kod XML.  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 Jeśli <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> właściwość jest `false`, zostanie wygenerowany żaden element XML.  
  
> [!NOTE]
>  Nie można zastosować <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> właściwości do elementu członkowskiego typu wartości, ponieważ typ wartości nie może zawierać `null`.  
  
   
  
## Examples  
 Poniższy przykład zawiera dwie tablice: jeden z <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> ustawioną właściwość `true`, a druga z <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> ustawioną właściwość `false`.  
  
 [!code-cpp[Classic XmlArrayAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obszar nazw elementu XML.</summary>
        <value>Przestrzeń nazw elementu XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlArrayAttribute.Namespace%2A> Właściwość służy do tworzenia kwalifikowanych nazw elementu XML. <xref:System.Xml.Serialization.XmlArrayAttribute.Namespace%2A> Właściwości zgodne z regułami dotyczącymi tworzenia przestrzeni nazw XML, tak jak w dokumencie konsorcjum World Wide Web (www.w3.org) 1999 zatytułowany "Namespaces in XML".  
  
 Aby utworzyć przestrzeni nazw, które są skojarzone z prefiksem, należy utworzyć wystąpienie <xref:System.Xml.Serialization.XmlSerializerNamespaces> klasę, która zawiera obszary nazw i prefiksy używane w dokumencie XML. Jak ustawić przestrzeni nazw dla każdego <xref:System.Xml.Serialization.XmlArrayAttribute>, musi on być zgodny jednej z przestrzeni nazw w <xref:System.Xml.Serialization.XmlSerializerNamespaces>. Podczas generowania pliku XML każdej macierzy jest poprawnie prefiksem prefiks skojarzone z określonego obszaru nazw.  
  
   
  
## Examples  
 Poniższy przykład serializuje wystąpienia `Library` klasy, która zawiera dwa elementy członkowskie, jedną, która zawiera tytułów książek, a drugą zawierają tytuły okresowych. Mimo że oba elementy XML są nazywane `Titles`, każdy z nich zawiera inny prefiks. Przykład obejmuje również wystąpienia <xref:System.Xml.Serialization.XmlSerializerNamespaces> klasę, która zawiera obszary nazw i prefiksy służące do kwalifikowania nazw dwóch elementów.  
  
 [!code-cpp[Classic XmlArrayAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.ElementName" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Form" />
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolejność jawne, w którym elementy są serializowany lub deserializowany.</summary>
        <value>Kolejność generowania kodu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> wyliczenie nakazać programowi <xref:System.Web.Services.Description.ServiceDescriptionImporter> do generowania kodu, który ustawia <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> właściwości.  
  
> [!IMPORTANT]
>  Raz <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> właściwość została już użyta w jednym publiczną właściwość lub pole w typie, należy zastosować do wszystkich właściwości publiczne i pola tego typu oraz wszystkich dziedziczonych typów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>