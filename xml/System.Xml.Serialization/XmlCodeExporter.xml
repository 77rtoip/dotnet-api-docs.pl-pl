<Type Name="XmlCodeExporter" FullName="System.Xml.Serialization.XmlCodeExporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3413f0761501865d42dfe148d8cfa8033e4db4e4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36439288" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlCodeExporter : System.Xml.Serialization.CodeExporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlCodeExporter extends System.Xml.Serialization.CodeExporter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlCodeExporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlCodeExporter&#xA;Inherits CodeExporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlCodeExporter : System::Xml::Serialization::CodeExporter" />
  <TypeSignature Language="F#" Value="type XmlCodeExporter = class&#xA;    inherit CodeExporter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Serialization.CodeExporter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Generuje typy i deklaracji atrybutu z informacjami dotyczącymi mapowania wewnętrznego typu dla deklaracji elementu schematu XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlCodeExporter> Klasy generuje typów .NET Framework lub deklaracji atrybutu z wewnętrznego mapowania do typów .NET Framework. Te wewnętrzne mapowania są generowane przez <xref:System.Xml.Serialization.XmlSchemaImporter> klasy dla elementów zdefiniowanych w dokumencie XSD lub jako części w dokumencie Web Services Description Language (WSDL). <xref:System.Xml.Serialization.XmlCodeExporter> nie jest używana bezpośrednio; jest ona używana z narzędzia Web Services Description Language (Wsdl.exe) lub definicji schematu XML (Xsd.exe).  
  
 WSDL.exe korzysta z typów lub deklaracji atrybutu, które są generowane przez <xref:System.Xml.Serialization.XmlCodeExporter> i mapowania wewnętrzny wygenerowany przez <xref:System.Xml.Serialization.XmlSchemaImporter> klasy do generowania klasy serwera proxy klienta lub serwera abstrakcyjnej klasy dokument WSDL. Używa WSDL.exe <xref:System.Xml.Serialization.XmlCodeExporter> i <xref:System.Web.Services.Description.ServiceDescriptionImporter> klasy podczas określa dokument WSDL:  
  
-   Użycie literału, wskazujący, że treści protokołu SOAP wiadomości parametrów i zwracanych wartości (lub żądanie i odpowiedź dokumenty) jako literału są określane za pomocą definicje schematów XML.  
  
-   Implementacje protokołu SOAP nie usług sieci Web przy użyciu operacji HTTP GET i POST protokołu HTTP.  
  
-   Używa XSD.exe <xref:System.Xml.Serialization.XmlCodeExporter> można wygenerować klas z dokumentów definicji schematu XML (XSD).  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Xml.Serialization.CodeGenerationOptions" />
    <altmember cref="T:System.Xml.Serialization.XmlSchemaImporter" />
    <altmember cref="T:System.Xml.Serialization.SoapCodeExporter" />
    <altmember cref="T:System.Web.Services.Description.ServiceDescriptionImporter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter codeNamespace" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">Przestrzeń nazw typów do wygenerowania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> przy użyciu określonego obszaru nazw.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zamiast tworzenia wystąpienia <xref:System.Xml.Serialization.XmlCodeExporter> klasy bezpośrednio, za pomocą narzędzia Web Services Description Language (Wsdl.exe) lub definicji schematu XML (Xsd.exe).  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter (codeNamespace, codeCompileUnit)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">Przestrzeń nazw typów do wygenerowania.</param>
        <param name="codeCompileUnit">Kontener wykresu CodeDOM, do którego używać zestawu, w którym odwołania są automatycznie dodawane.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> klasy przy użyciu określonego obszaru nazw i kod skompilować jednostki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zamiast tworzenia wystąpienia <xref:System.Xml.Serialization.XmlCodeExporter> klasy bezpośrednio, za pomocą narzędzia Web Services Description Language (Wsdl.exe) lub definicji schematu XML (Xsd.exe).  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit, System.Xml.Serialization.CodeGenerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit, valuetype System.Xml.Serialization.CodeGenerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::Xml::Serialization::CodeGenerationOptions options);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit * System.Xml.Serialization.CodeGenerationOptions -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter (codeNamespace, codeCompileUnit, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">Przestrzeń nazw typów do wygenerowania.</param>
        <param name="codeCompileUnit">A <see cref="T:System.CodeDom.CodeCompileUnit" /> program wykres kontenera, do którego odwołania do zestawów używane są automatycznie dodawane.</param>
        <param name="options">Wartość wyliczenia, z opcjami Generowanie typów .NET Framework z typów danych niestandardowych schematów XML.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> przy użyciu określonego obszaru nazw, jednostka kompilacji kodu i opcje generowania kodu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zamiast tworzenia wystąpienia <xref:System.Xml.Serialization.XmlCodeExporter> klasy bezpośrednio, za pomocą narzędzia Web Services Description Language (Wsdl.exe) lub definicji schematu XML (Xsd.exe).  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit, System.Xml.Serialization.CodeGenerationOptions options, System.Collections.Hashtable mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.Collections.Hashtable mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::Xml::Serialization::CodeGenerationOptions options, System::Collections::Hashtable ^ mappings);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit * System.Xml.Serialization.CodeGenerationOptions * System.Collections.Hashtable -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter (codeNamespace, codeCompileUnit, options, mappings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="mappings" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">Przestrzeń nazw typów do wygenerowania.</param>
        <param name="codeCompileUnit">A <see cref="T:System.CodeDom.CodeCompileUnit" /> program wykres kontenera, do którego odwołania do zestawów używane są automatycznie dodawane.</param>
        <param name="options">Wartość wyliczenia, z opcjami Generowanie typów .NET Framework z typów danych niestandardowych schematów XML.</param>
        <param name="mappings">A <see cref="T:System.Collections.Hashtable" /> zawierający <see cref="T:System.Xml.Serialization.XmlMapping" /> obiektów.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> przy użyciu określonego obszaru nazw .NET Framework, zawierającego wykres obiektów, obiekt reprezentujący Opcje generowania kodu i kolekcję obiektów mapowania jednostka kompilacji kodu.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Xml.Serialization.CodeGenerationOptions options, System.Collections.Hashtable mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit, class System.CodeDom.Compiler.CodeDomProvider codeProvider, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.Collections.Hashtable mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, System::Xml::Serialization::CodeGenerationOptions options, System::Collections::Hashtable ^ mappings);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit * System.CodeDom.Compiler.CodeDomProvider * System.Xml.Serialization.CodeGenerationOptions * System.Collections.Hashtable -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter (codeNamespace, codeCompileUnit, codeProvider, options, mappings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="mappings" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">Przestrzeń nazw typów do wygenerowania.</param>
        <param name="codeCompileUnit">A <see cref="T:System.CodeDom.CodeCompileUnit" /> program wykres kontenera, do którego odwołania do zestawów używane są automatycznie dodawane.</param>
        <param name="codeProvider">Wartość wyliczenia, z opcjami Generowanie typów .NET Framework z typów danych niestandardowych schematów XML.</param>
        <param name="options">A <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> zawiera specjalne instrukcje dotyczące tworzenia kodu.</param>
        <param name="mappings">A <see cref="T:System.Collections.Hashtable" /> zawierający <see cref="T:System.Xml.Serialization.XmlMapping" /> obiektów.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> przy użyciu określonego obszaru nazw .NET Framework, zawierającego wykres obiektów, wyliczenie określenie opcji kodu i kolekcję obiektów mapowania jednostka kompilacji kodu.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddMappingMetadata">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> deklaracji metody parametr lub zwracane wartość, która odpowiada <see langword="&amp;lt;part&amp;gt;" /> element definicja komunikatu protokołu SOAP w dokumencie Web Services Description Language (WSDL).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddMappingMetadata">
      <MemberSignature Language="C#" Value="public void AddMappingMetadata (System.CodeDom.CodeAttributeDeclarationCollection metadata, System.Xml.Serialization.XmlMemberMapping member, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingMetadata(class System.CodeDom.CodeAttributeDeclarationCollection metadata, class System.Xml.Serialization.XmlMemberMapping member, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingMetadata (metadata As CodeAttributeDeclarationCollection, member As XmlMemberMapping, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingMetadata(System::CodeDom::CodeAttributeDeclarationCollection ^ metadata, System::Xml::Serialization::XmlMemberMapping ^ member, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.AddMappingMetadata : System.CodeDom.CodeAttributeDeclarationCollection * System.Xml.Serialization.XmlMemberMapping * string -&gt; unit" Usage="xmlCodeExporter.AddMappingMetadata (metadata, member, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
        <Parameter Name="member" Type="System.Xml.Serialization.XmlMemberMapping" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="metadata">Kolekcja <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> obiekty wygenerowany typ, do którego metoda dodaje deklaracji atrybutu.</param>
        <param name="member">Wewnętrzny .NET Framework mapowanie typu dla pojedynczego elementu częścią definicji komunikatu WSDL.</param>
        <param name="ns">Przestrzeń nazw XML SOAP komunikatów części, dla którego wygenerowano informacje dotyczące mapowania typów w parametrze elementu członkowskiego.</param>
        <summary>Dodaje <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> deklaracji metody parametr lub zwracane wartość, która odpowiada <see langword="&lt;part&gt;" /> element definicja komunikatu protokołu SOAP w dokumencie Web Services Description Language (WSDL).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana przez narzędzie Web Services Description Language (Wsdl.exe), gdy dokument WSDL Określa użycie literału, wskazujący, że treści protokołu SOAP wiadomości parametrów i zwracanych wartości (lub żądanie i odpowiedź dokumenty) jako literału są określane za pomocą XML definicje schematów.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddMappingMetadata">
      <MemberSignature Language="C#" Value="public void AddMappingMetadata (System.CodeDom.CodeAttributeDeclarationCollection metadata, System.Xml.Serialization.XmlTypeMapping mapping, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingMetadata(class System.CodeDom.CodeAttributeDeclarationCollection metadata, class System.Xml.Serialization.XmlTypeMapping mapping, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlTypeMapping,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingMetadata (metadata As CodeAttributeDeclarationCollection, mapping As XmlTypeMapping, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingMetadata(System::CodeDom::CodeAttributeDeclarationCollection ^ metadata, System::Xml::Serialization::XmlTypeMapping ^ mapping, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.AddMappingMetadata : System.CodeDom.CodeAttributeDeclarationCollection * System.Xml.Serialization.XmlTypeMapping * string -&gt; unit" Usage="xmlCodeExporter.AddMappingMetadata (metadata, mapping, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
        <Parameter Name="mapping" Type="System.Xml.Serialization.XmlTypeMapping" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="metadata">Kolekcja <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> obiekty wygenerowany typ, do którego metoda dodaje deklaracji atrybutu.</param>
        <param name="mapping">Wewnętrzny .NET Framework typu informacje dotyczące mapowania elementu schematu XML.</param>
        <param name="ns">Przestrzeń nazw XML SOAP komunikatów części, dla którego wygenerowano informacje dotyczące mapowania typów w parametrze elementu członkowskiego.</param>
        <summary>Dodaje <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> deklaracja metody zwrócić wartość, która odpowiada <see langword="&lt;part&gt;" /> elementu definicji komunikatu SOAP z systemem innym niż w dokumencie Web Services Description Language (WSDL).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Narzędzie Web Services Description Language (Wsdl.exe) używa tej metody, gdy dokument WSDL określa .NET Framework z systemem innym niż SOAP implementacji usług sieci Web przy użyciu operacji HTTP GET i POST protokołu HTTP.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddMappingMetadata">
      <MemberSignature Language="C#" Value="public void AddMappingMetadata (System.CodeDom.CodeAttributeDeclarationCollection metadata, System.Xml.Serialization.XmlMemberMapping member, string ns, bool forceUseMemberName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingMetadata(class System.CodeDom.CodeAttributeDeclarationCollection metadata, class System.Xml.Serialization.XmlMemberMapping member, string ns, bool forceUseMemberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingMetadata (metadata As CodeAttributeDeclarationCollection, member As XmlMemberMapping, ns As String, forceUseMemberName As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingMetadata(System::CodeDom::CodeAttributeDeclarationCollection ^ metadata, System::Xml::Serialization::XmlMemberMapping ^ member, System::String ^ ns, bool forceUseMemberName);" />
      <MemberSignature Language="F#" Value="member this.AddMappingMetadata : System.CodeDom.CodeAttributeDeclarationCollection * System.Xml.Serialization.XmlMemberMapping * string * bool -&gt; unit" Usage="xmlCodeExporter.AddMappingMetadata (metadata, member, ns, forceUseMemberName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
        <Parameter Name="member" Type="System.Xml.Serialization.XmlMemberMapping" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="forceUseMemberName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadata">Kolekcja <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> obiekty wygenerowany typ, do którego metoda dodaje deklaracji atrybutu.</param>
        <param name="member">Wewnętrzny .NET Framework mapowanie typu dla pojedynczego elementu częścią definicji komunikatu WSDL.</param>
        <param name="ns">Przestrzeń nazw XML SOAP komunikatów części, dla którego wygenerowano informacje dotyczące mapowania typów w parametrze elementu członkowskiego.</param>
        <param name="forceUseMemberName">Flaga, można ustalić, czy dodać argument początkowej zawierającą nazwę elementu XML dla deklaracji atrybutu generowany.</param>
        <summary>Dodaje <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> deklaracji metody parametr lub zwracane wartość, która odpowiada <see langword="&lt;part&gt;" /> element definicja komunikatu protokołu SOAP w dokumencie Web Services Description Language (WSDL).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Narzędzie Web Services Description Language (Wsdl.exe) używa tej metody, gdy dokument WSDL Określa użycie literału, co oznacza, że zawartość parametrów wiadomości SOAP i zwracanych wartości (lub dokumenty żądań i odpowiedzi) jako literału są określone za pomocą XML definicje schematów.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExportMembersMapping">
      <MemberSignature Language="C#" Value="public void ExportMembersMapping (System.Xml.Serialization.XmlMembersMapping xmlMembersMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportMembersMapping(class System.Xml.Serialization.XmlMembersMapping xmlMembersMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportMembersMapping(System::Xml::Serialization::XmlMembersMapping ^ xmlMembersMapping);" />
      <MemberSignature Language="F#" Value="member this.ExportMembersMapping : System.Xml.Serialization.XmlMembersMapping -&gt; unit" Usage="xmlCodeExporter.ExportMembersMapping xmlMembersMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlMembersMapping" Type="System.Xml.Serialization.XmlMembersMapping" />
      </Parameters>
      <Docs>
        <param name="xmlMembersMapping">Wewnętrzny mapowania typów .NET Framework dla części elementu definicji komunikatu WSDL.</param>
        <summary>Generuje typ .NET Framework, a także deklaracji atrybutu dla każdej części, które należą do definicji wiadomości SOAP w dokumencie Web Services Description Language (WSDL).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Narzędzie Web Services Description Language (Wsdl.exe) używa tej metody, gdy dokument WSDL Określa użycie literału, co oznacza, że zawartość parametrów wiadomości SOAP i zwracanych wartości (lub dokumenty żądań i odpowiedzi) jako literału są określone za pomocą XML definicje schematów.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExportTypeMapping">
      <MemberSignature Language="C#" Value="public void ExportTypeMapping (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportTypeMapping(class System.Xml.Serialization.XmlTypeMapping xmlTypeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportTypeMapping(System::Xml::Serialization::XmlTypeMapping ^ xmlTypeMapping);" />
      <MemberSignature Language="F#" Value="member this.ExportTypeMapping : System.Xml.Serialization.XmlTypeMapping -&gt; unit" Usage="xmlCodeExporter.ExportTypeMapping xmlTypeMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlTypeMapping" Type="System.Xml.Serialization.XmlTypeMapping" />
      </Parameters>
      <Docs>
        <param name="xmlTypeMapping">Wewnętrzny .NET Framework typu informacje dotyczące mapowania elementu schematu XML.</param>
        <summary>Generuje typ .NET Framework, a także deklaracji atrybutu, elementu schematu XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Narzędzie Web Services Description Language (Wsdl.exe) używa tej metody, aby wygenerować nagłówki komunikatów SOAP i typy zwracane, gdy dokument Web Services Description Language (WSDL) określa implementacje z systemem innym niż protokołu SOAP usług sieci Web przy użyciu protokołu HTTP GET i POST protokołu HTTP operacje. Narzędzie definicji schematu XML (Xsd.exe) używa tej metody do wygenerowania wszystkich deklaracji elementu schematu XML w dokumencie definicji schematu XML (XSD).  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>