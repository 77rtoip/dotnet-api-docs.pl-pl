<Type Name="SoapElementAttribute" FullName="System.Xml.Serialization.SoapElementAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7d9fe344735b9a426e32e3785f85105b3265078" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30741593" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapElementAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa, że wartość publicznego elementu członkowskiego być serializowany przez <see cref="T:System.Xml.Serialization.XmlSerializer" /> jako element zakodowanego protokołu SOAP XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapElementAttribute> Klasy należy do rodziny atrybutów, która kontroluje sposób <xref:System.Xml.Serialization.XmlSerializer> serializuje i deserializuje obiekt jako zakodowanego protokołu SOAP XML. Wynikowy kod XML jest zgodna z sekcji 5 dokumentu konsorcjum World Wide Web (www.w3.org), "Simple Object Access Protocol (SOAP) 1.1". Pełną listę atrybutów podobne, zobacz [atrybuty że formant zakodowane SOAP serializacji](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).  
  
 Można zserializować obiektu jako zakodowany komunikatu protokołu SOAP, należy tworzyć <xref:System.Xml.Serialization.XmlSerializer> przy użyciu <xref:System.Xml.Serialization.XmlTypeMapping> utworzone za pomocą <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> metody <xref:System.Xml.Serialization.SoapReflectionImporter> klasy.  
  
 Zastosuj <xref:System.Xml.Serialization.SoapElementAttribute> do pola publicznego przekierować <xref:System.Xml.Serialization.XmlSerializer> do serializacji pole jako element zakodowanego protokołu SOAP XML.  
  
 Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [atrybutów](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 Poniższy przykład serializuje wystąpienia klasy o nazwie `Transportation` zawiera pole o nazwie `Vehicle`. A <xref:System.Xml.Serialization.SoapElementAttribute> jest stosowane do pola. Gdy pole jest serializowana, nazwa elementu XML to "Koła" zamiast "Vehicle". `SerializeOverride` Metoda tworzy <xref:System.Xml.Serialization.SoapElementAttribute> i ustawia <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> właściwość <xref:System.Xml.Serialization.SoapAttributes> do <xref:System.Xml.Serialization.SoapElementAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Jest dodawany do <xref:System.Xml.Serialization.SoapAttributeOverrides> używany do tworzenia <xref:System.Xml.Serialization.XmlTypeMapping>. <xref:System.Xml.Serialization.XmlSerializer> Jest tworzony z <xref:System.Xml.Serialization.XmlTypeMapping>i wystąpieniem `Transportation` klasy ponownie jest serializowany. Ponieważ <xref:System.Xml.Serialization.SoapElementAttribute> jest używane do zastępowania serializacji, wygenerowana nazwa elementu XML jest teraz "Dostawczy" zamiast "Koła".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład serializuje wystąpienia klasy o nazwie `Transportation` zawiera pole o nazwie `Vehicle`. A <xref:System.Xml.Serialization.SoapElementAttribute> jest stosowane do pola. Gdy pole jest serializowana, nazwa elementu XML to "Koła" zamiast "Vehicle". `SerializeOverride` Metoda tworzy <xref:System.Xml.Serialization.SoapElementAttribute> i ustawia <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> właściwość <xref:System.Xml.Serialization.SoapAttributes> do <xref:System.Xml.Serialization.SoapElementAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Jest dodawany do <xref:System.Xml.Serialization.SoapAttributeOverrides> używany do tworzenia <xref:System.Xml.Serialization.XmlTypeMapping>. <xref:System.Xml.Serialization.XmlSerializer> Jest tworzony z <xref:System.Xml.Serialization.XmlTypeMapping>i wystąpieniem `Transportation` klasy ponownie jest serializowany. Ponieważ <xref:System.Xml.Serialization.SoapElementAttribute> jest używane do zastępowania serializacji, wygenerowana nazwa elementu XML jest teraz "Dostawczy" zamiast "Koła".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapElementAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapElementAttribute(System::String ^ elementName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">Nazwa elementu XML Członek serializowany.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> , określa nazwę elementu XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład serializuje wystąpienia klasy o nazwie `Transportation` zawiera pole o nazwie `Vehicle`. A <xref:System.Xml.Serialization.SoapElementAttribute> jest stosowane do pola. Gdy pole jest serializowana, nazwa elementu XML to "Koła" zamiast "Vehicle". `SerializeOverride` Metoda tworzy <xref:System.Xml.Serialization.SoapElementAttribute> i ustawia <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> właściwość <xref:System.Xml.Serialization.SoapAttributes> do <xref:System.Xml.Serialization.SoapElementAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Jest dodawany do <xref:System.Xml.Serialization.SoapAttributeOverrides> używany do tworzenia <xref:System.Xml.Serialization.XmlTypeMapping>. <xref:System.Xml.Serialization.XmlSerializer> Jest tworzony z <xref:System.Xml.Serialization.XmlTypeMapping>i wystąpieniem `Transportation` klasy ponownie jest serializowany. Ponieważ <xref:System.Xml.Serialization.SoapElementAttribute> jest używane do zastępowania serializacji, wygenerowana nazwa elementu XML jest teraz "Dostawczy" zamiast "Koła".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ danych (XSD) języka definicji schematu XML wygenerowanego elementu XML.</summary>
        <value>Jeden z typów danych schematu XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli wymieniono schematu XML proste typy danych z ich odpowiedniki .NET.  
  
 Schemat XML `base64Binary` i `hexBinary` typy danych, użyj tablicy <xref:System.Byte> struktury i zastosować <xref:System.Xml.Serialization.SoapElementAttribute> z <xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> ustawiony na "base64Binary" lub "hexBinary", zgodnie z potrzebami. Schemat XML `time` i `date` typy danych, użyj <xref:System.DateTime> wpisz i zastosować <xref:System.Xml.Serialization.SoapElementAttribute> z <xref:System.Xml.Serialization.SoapElementAttribute.DataType%2A> ustawiony na "date" lub "czas".  
  
 Dla każdego typu danych schematu XML, który jest zamapowany na ciąg, zastosuj <xref:System.Xml.Serialization.SoapElementAttribute> z jego <xref:System.Xml.Serialization.SoapElementAttribute.DataType%2A> właściwość Typ schematu XML. Należy pamiętać, że nie ma to wpływu na format serializacji, tylko schematu dla elementu członkowskiego.  
  
> [!NOTE]
>  Właściwość uwzględnia wielkość liter, więc należy ją ustawić dokładnie do jednego z typów danych schematu XML.  
  
> [!NOTE]
>  Przekazywanie danych binarnych jako XML elementu jest skuteczniejsza niż przekazywanie go jako atrybut XML.  
  
 Aby uzyskać więcej informacji na temat typów danych XML należy znaleźć w dokumencie konsorcjum World Wide Web (www.w3.org), "XML schematu część 2: typy danych".  
  
|Typ danych XSD|Typ danych .NET|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|Tablica <xref:System.Byte> obiektów|  
|wartość logiczna|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|Data|<xref:System.DateTime>|  
|Data i godzina|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|JEDNOSTKI|<xref:System.String>|  
|JEDNOSTKI|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|Tablica <xref:System.Byte> obiektów|  
|ID|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|integer|<xref:System.String>|  
|język|<xref:System.String>|  
|long|<xref:System.Int64>|  
|Nazwa|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTACJA|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|czas trwania|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|czas|<xref:System.DateTime>|  
|Token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 Poniższy przykład serializuje wystąpienia klasy o nazwie `Transportation` zawiera pole o nazwie `Vehicle`. A <xref:System.Xml.Serialization.SoapElementAttribute> jest stosowane do pola. Gdy pole jest serializowana, nazwa elementu XML to "Koła" zamiast "Vehicle". `SerializeOverride` Metoda tworzy <xref:System.Xml.Serialization.SoapElementAttribute> i ustawia <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> właściwość <xref:System.Xml.Serialization.SoapAttributes> do <xref:System.Xml.Serialization.SoapElementAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Jest dodawany do <xref:System.Xml.Serialization.SoapAttributeOverrides> używany do tworzenia <xref:System.Xml.Serialization.XmlTypeMapping>. <xref:System.Xml.Serialization.XmlSerializer> Jest tworzony z <xref:System.Xml.Serialization.XmlTypeMapping>i wystąpieniem `Transportation` klasy ponownie jest serializowany. Ponieważ <xref:System.Xml.Serialization.SoapElementAttribute> jest używane do zastępowania serializacji, wygenerowana nazwa elementu XML jest teraz "Dostawczy" zamiast "Koła".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę wygenerowanego elementu XML.</summary>
        <value>Nazwa elementu XML wygenerowany. Wartość domyślna to identyfikator elementu członkowskiego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład serializuje wystąpienia klasy o nazwie `Transportation` zawiera pole o nazwie `Vehicle`. A <xref:System.Xml.Serialization.SoapElementAttribute> jest stosowane do pola. Gdy pole jest serializowana, nazwa elementu XML to "Koła" zamiast "Vehicle". `SerializeOverride` Metoda tworzy <xref:System.Xml.Serialization.SoapElementAttribute> i ustawia <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> właściwość <xref:System.Xml.Serialization.SoapAttributes> do <xref:System.Xml.Serialization.SoapElementAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Jest dodawany do <xref:System.Xml.Serialization.SoapAttributeOverrides> używany do tworzenia <xref:System.Xml.Serialization.XmlTypeMapping>. <xref:System.Xml.Serialization.XmlSerializer> Jest tworzony z <xref:System.Xml.Serialization.XmlTypeMapping>i wystąpieniem `Transportation` klasy ponownie jest serializowany. Ponieważ <xref:System.Xml.Serialization.SoapElementAttribute> jest używane do zastępowania serializacji, wygenerowana nazwa elementu XML jest teraz "Dostawczy" zamiast "Koła".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Xml.Serialization.XmlSerializer" /> musi serializować elementu członkowskiego, który ma <see langword="xsi:null" /> atrybut ustawioną wartość "1".</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Xml.Serialization.XmlSerializer" /> generuje <see langword="xsi:null" /> atrybutu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Specyfikacja schematu XML dla struktury umożliwia dokument XML jawnie sygnalizuje, że brakuje elementu zawartości. Ten atrybut zawiera takiego elementu `xsi:null` ustawioną wartość "1". Aby uzyskać więcej informacji zobacz specyfikację konsorcjum World Wide Web (www.w3.org) o nazwie "Schema część 1: struktury XML".  
  
 Jeśli <xref:System.Xml.Serialization.SoapElementAttribute.IsNullable%2A> właściwość jest ustawiona na `true`, `xsi:null` atrybutu jest generowane dla elementów członkowskich klasy, które zostały ustawione na `null`. Na przykład, jeśli wartość pola o nazwie `MyStringArray` do `null`, <xref:System.Xml.Serialization.XmlSerializer> generuje następujący kod XML.  
  
```  
<MyStringArray xsi:null = "1" />  
```  
  
 Jeśli <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> właściwość jest `false`, zostanie wygenerowany żaden element XML.  
  
> [!NOTE]
>  Nie można zastosować <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> właściwości do elementu członkowskiego typu wartości, ponieważ typ wartości nie może zawierać `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>