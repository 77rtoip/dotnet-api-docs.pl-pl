<Type Name="SoapElementAttribute" FullName="System.Xml.Serialization.SoapElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="614435e37bafab8c235b589b44dad00462c2b655" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69440956" /></Metadata><TypeSignature Language="C#" Value="public class SoapElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa, że publiczna wartość elementu członkowskiego jest <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializowana przez zakodowany element XML protokołu SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa należy do rodziny atrybutów, która kontroluje <xref:System.Xml.Serialization.XmlSerializer> sposób serializacji lub deserializacji obiektu jako zakodowanego XML protokołu SOAP. <xref:System.Xml.Serialization.SoapElementAttribute> Wyniki XML są zgodne z sekcją 5 dokumentu organizacja World Wide Web Consortium [Simple Object Access Protocol (SOAP) 1,1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/). Aby uzyskać pełną listę podobnych atrybutów, zobacz atrybuty kontrolujące [zakodowaną serializację protokołu SOAP](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).  
  
 Aby serializować obiekt <xref:System.Xml.Serialization.XmlSerializer> jako zakodowany komunikat protokołu SOAP, należy skonstruować <xref:System.Xml.Serialization.XmlTypeMapping> przy użyciu <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> metody utworzonej <xref:System.Xml.Serialization.SoapReflectionImporter> za pomocą klasy.  
  
 Zastosuj do pola publicznego, aby <xref:System.Xml.Serialization.XmlSerializer> skierować do serializacji pola jako zakodowany element XML protokołu SOAP. <xref:System.Xml.Serialization.SoapElementAttribute>  
  
 Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [atrybuty](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 Poniższy przykład serializacji wystąpienie klasy o nazwie `Transportation` , która zawiera pole o nazwie. `Vehicle` <xref:System.Xml.Serialization.SoapElementAttribute> Ma zastosowanie do pola. Gdy pole jest serializowane, nazwa elementu XML to "koła" zamiast "pojazd". `SerializeOverride` Metoda tworzy<xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> i ustawia Właściwość<xref:System.Xml.Serialization.SoapElementAttribute>na. <xref:System.Xml.Serialization.SoapElementAttribute> <xref:System.Xml.Serialization.SoapAttributes> <xref:System.Xml.Serialization.XmlTypeMapping>Element <xref:System.Xml.Serialization.SoapAttributes> jestdodawanydoobiektu,któryjest<xref:System.Xml.Serialization.SoapAttributeOverrides> używany do tworzenia. Jest zbudowany przy użyciu, a wystąpienie `Transportation` klasy jest ponownie serializowane. <xref:System.Xml.Serialization.XmlTypeMapping> <xref:System.Xml.Serialization.XmlSerializer> <xref:System.Xml.Serialization.SoapElementAttribute> Ponieważ jest używany do przesłonięcia serializacji, wygenerowana nazwa elementu XML jest teraz "ciężarówką" zamiast "koła".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład serializacji wystąpienie klasy o nazwie `Transportation` , która zawiera pole o nazwie. `Vehicle` <xref:System.Xml.Serialization.SoapElementAttribute> Ma zastosowanie do pola. Gdy pole jest serializowane, nazwa elementu XML to "koła" zamiast "pojazd". `SerializeOverride` Metoda tworzy<xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> i ustawia Właściwość<xref:System.Xml.Serialization.SoapElementAttribute>na. <xref:System.Xml.Serialization.SoapElementAttribute> <xref:System.Xml.Serialization.SoapAttributes> <xref:System.Xml.Serialization.XmlTypeMapping>Element <xref:System.Xml.Serialization.SoapAttributes> jestdodawanydoobiektu,któryjest<xref:System.Xml.Serialization.SoapAttributeOverrides> używany do tworzenia. Jest zbudowany przy użyciu, a wystąpienie `Transportation` klasy jest ponownie serializowane. <xref:System.Xml.Serialization.XmlTypeMapping> <xref:System.Xml.Serialization.XmlSerializer> <xref:System.Xml.Serialization.SoapElementAttribute> Ponieważ jest używany do przesłonięcia serializacji, wygenerowana nazwa elementu XML jest teraz "ciężarówką" zamiast "koła".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapElementAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapElementAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapElementAttribute : string -&gt; System.Xml.Serialization.SoapElementAttribute" Usage="new System.Xml.Serialization.SoapElementAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">Nazwa elementu XML serializowanego elementu członkowskiego.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> klasy i określa nazwę elementu XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład serializacji wystąpienie klasy o nazwie `Transportation` , która zawiera pole o nazwie. `Vehicle` <xref:System.Xml.Serialization.SoapElementAttribute> Ma zastosowanie do pola. Gdy pole jest serializowane, nazwa elementu XML to "koła" zamiast "pojazd". `SerializeOverride` Metoda tworzy<xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> i ustawia Właściwość<xref:System.Xml.Serialization.SoapElementAttribute>na. <xref:System.Xml.Serialization.SoapElementAttribute> <xref:System.Xml.Serialization.SoapAttributes> <xref:System.Xml.Serialization.XmlTypeMapping>Element <xref:System.Xml.Serialization.SoapAttributes> jestdodawanydoobiektu,któryjest<xref:System.Xml.Serialization.SoapAttributeOverrides> używany do tworzenia. Jest zbudowany przy użyciu, a wystąpienie `Transportation` klasy jest ponownie serializowane. <xref:System.Xml.Serialization.XmlTypeMapping> <xref:System.Xml.Serialization.XmlSerializer> <xref:System.Xml.Serialization.SoapElementAttribute> Ponieważ jest używany do przesłonięcia serializacji, wygenerowana nazwa elementu XML jest teraz "ciężarówką" zamiast "koła".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ danych XSD (XML Schema Definition Language) dla wygenerowanego elementu XML.</summary>
        <value>Jeden z typów danych schematu XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono proste typy danych schematu XML z ich odpowiednikami w programie .NET.  
  
 W przypadku `base64Binary` schematu XML i `hexBinary` typów danych <xref:System.Byte> należy użyć tablicy struktur i zastosować <xref:System.Xml.Serialization.SoapElementAttribute> z <xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> zestawem "base64Binary" lub "hexBinary", zgodnie z potrzebami. `time` Dla schematu <xref:System.Xml.Serialization.SoapElementAttribute.DataType%2A> XML i `date` typów <xref:System.DateTime> danych, użyj typu i Zastosuj <xref:System.Xml.Serialization.SoapElementAttribute> z z ustawionym na wartość "date" lub "Time".  
  
 Dla każdego typu danych schematu XML, który jest mapowany na ciąg, Zastosuj <xref:System.Xml.Serialization.SoapElementAttribute> <xref:System.Xml.Serialization.SoapElementAttribute.DataType%2A> Właściwość with, która jest ustawiona na typ schematu XML. Należy zauważyć, że to nie zmienia formatu serializacji, tylko schematu dla elementu członkowskiego.  
  
> [!NOTE]
>  Właściwość jest uwzględniana wielkość liter, dlatego należy ustawić ją dokładnie na jeden z typów danych schematu XML.  
  
> [!NOTE]
>  Przekazywanie danych binarnych jako elementu XML jest bardziej wydajne niż przekazanie go jako atrybutu XML.  
  
 Aby uzyskać więcej informacji na temat typów danych XML, zobacz dokument organizacja World Wide Web Consortium [, XML schematu część 2: Typy](https://www.w3.org/TR/xmlschema-2/)danych.  
  
|XSD — typ danych|Typ danych .NET|  
|-------------------|--------------------|  
|{1&gt;anyURI&lt;1}|<xref:System.String>|  
|base64Binary|<xref:System.Byte> Tablica obiektów|  
|wartość logiczna|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|Data|<xref:System.DateTime>|  
|Data i godzina|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|JEDNOSTKI|<xref:System.String>|  
|OBIEKTY|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|<xref:System.Byte> Tablica obiektów|  
|id|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|integer|<xref:System.String>|  
|język|<xref:System.String>|  
|long|<xref:System.Int64>|  
|Nazwa|<xref:System.String>|  
|{1&gt;NCName&lt;1}|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString "|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTACJA|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|czas trwania|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|czas|<xref:System.DateTime>|  
|klucza|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 Poniższy przykład serializacji wystąpienie klasy o nazwie `Transportation` , która zawiera pole o nazwie. `Vehicle` <xref:System.Xml.Serialization.SoapElementAttribute> Ma zastosowanie do pola. Gdy pole jest serializowane, nazwa elementu XML to "koła" zamiast "pojazd". `SerializeOverride` Metoda tworzy<xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> i ustawia Właściwość<xref:System.Xml.Serialization.SoapElementAttribute>na. <xref:System.Xml.Serialization.SoapElementAttribute> <xref:System.Xml.Serialization.SoapAttributes> <xref:System.Xml.Serialization.XmlTypeMapping>Element <xref:System.Xml.Serialization.SoapAttributes> jestdodawanydoobiektu,któryjest<xref:System.Xml.Serialization.SoapAttributeOverrides> używany do tworzenia. Jest zbudowany przy użyciu, a wystąpienie `Transportation` klasy jest ponownie serializowane. <xref:System.Xml.Serialization.XmlTypeMapping> <xref:System.Xml.Serialization.XmlSerializer> <xref:System.Xml.Serialization.SoapElementAttribute> Ponieważ jest używany do przesłonięcia serializacji, wygenerowana nazwa elementu XML jest teraz "ciężarówką" zamiast "koła".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę wygenerowanego elementu XML.</summary>
        <value>Nazwa wygenerowanego elementu XML. Wartość domyślna to identyfikator elementu członkowskiego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład serializacji wystąpienie klasy o nazwie `Transportation` , która zawiera pole o nazwie. `Vehicle` <xref:System.Xml.Serialization.SoapElementAttribute> Ma zastosowanie do pola. Gdy pole jest serializowane, nazwa elementu XML to "koła" zamiast "pojazd". `SerializeOverride` Metoda tworzy<xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> i ustawia Właściwość<xref:System.Xml.Serialization.SoapElementAttribute>na. <xref:System.Xml.Serialization.SoapElementAttribute> <xref:System.Xml.Serialization.SoapAttributes> <xref:System.Xml.Serialization.XmlTypeMapping>Element <xref:System.Xml.Serialization.SoapAttributes> jestdodawanydoobiektu,któryjest<xref:System.Xml.Serialization.SoapAttributeOverrides> używany do tworzenia. Jest zbudowany przy użyciu, a wystąpienie `Transportation` klasy jest ponownie serializowane. <xref:System.Xml.Serialization.XmlTypeMapping> <xref:System.Xml.Serialization.XmlSerializer> <xref:System.Xml.Serialization.SoapElementAttribute> Ponieważ jest używany do przesłonięcia serializacji, wygenerowana nazwa elementu XML jest teraz "ciężarówką" zamiast "koła".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Xml.Serialization.XmlSerializer" /> musi serializować element członkowski, który <see langword="xsi:null" /> ma atrybut ustawiony na wartość "1".</summary>
        <value><see langword="true" /><see cref="T:System.Xml.Serialization.XmlSerializer" /> Jeśli <see langword="false" />generuje atrybut;wprzeciwnymrazie,.<see langword="xsi:null" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Specyfikacja schematu XML dla struktur umożliwia dokumentowi XML jawne sygnalizowanie braku zawartości elementu. Taki element zawiera atrybut `xsi:null` ustawiony na wartość "1". Aby uzyskać więcej informacji, zobacz Specyfikacja organizacja World Wide Web Consortium o [nazwie XML schematu część 1: Struktury](https://www.w3.org/TR/xmlschema-1/).  
  
 Jeśli właściwość jest ustawiona na `true`, `xsi:null` atrybut jest generowany dla elementów członkowskich klasy, które zostały ustawione na `null`. <xref:System.Xml.Serialization.SoapElementAttribute.IsNullable%2A> Na przykład jeśli ustawisz pole o nazwie `MyStringArray` na `null`, <xref:System.Xml.Serialization.XmlSerializer> generuje następujący kod XML.  
  
```  
<MyStringArray xsi:null = "1" />  
```  
  
 Jeśli właściwość ma `false`wartość, żaden element XML nie jest generowany. <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A>  
  
> [!NOTE]
>  Nie można zastosować <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> właściwości do elementu członkowskiego, który został wpisany jako typ wartości, ponieważ typ wartości `null`nie może zawierać.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
