<Type Name="SoapElementAttribute" FullName="System.Xml.Serialization.SoapElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="88427d5ecd10f5747eeafbe32e19a06777120f34" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56400434" /></Metadata><TypeSignature Language="C#" Value="public class SoapElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa, że wartość publicznego elementu członkowskiego być serializowany przez <see cref="T:System.Xml.Serialization.XmlSerializer" /> jako zakodowanego elementu XML protokołu SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapElementAttribute> Klasy należy do rodziny atrybuty, które kontroluje sposób, w jaki <xref:System.Xml.Serialization.XmlSerializer> serializuje i deserializuje obiekt jako zakodowany XML protokołu SOAP. Wynikowy kod XML jest zgodna z części 5 dokumentu World Wide Web Consortium (www.w3.org) "Simple Object Access Protocol (SOAP) 1.1". Pełną listę atrybutów podobne zobacz [atrybuty czy kontroli kodowany protokołu SOAP serializacji](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).  
  
 Do serializacji obiektu jako zakodowanego komunikatu protokołu SOAP, należy tworzyć <xref:System.Xml.Serialization.XmlSerializer> przy użyciu <xref:System.Xml.Serialization.XmlTypeMapping> utworzone za pomocą <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> metody <xref:System.Xml.Serialization.SoapReflectionImporter> klasy.  
  
 Zastosuj <xref:System.Xml.Serialization.SoapElementAttribute> z polem publiczne do kierowania <xref:System.Xml.Serialization.XmlSerializer> do serializacji pola jako zakodowanego elementu XML protokołu SOAP.  
  
 Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [atrybuty](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 Poniższy przykład szereguje wystąpienia klasy o nazwie `Transportation` zawiera pole o nazwie `Vehicle`. Element <xref:System.Xml.Serialization.SoapElementAttribute> jest stosowany do pola. Gdy pole jest serializowana, nazwa elementu XML jest "Koła" zamiast "Pojazd". `SerializeOverride` Metoda tworzy <xref:System.Xml.Serialization.SoapElementAttribute> i ustawia <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> właściwość <xref:System.Xml.Serialization.SoapAttributes> do <xref:System.Xml.Serialization.SoapElementAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Jest dodawany do <xref:System.Xml.Serialization.SoapAttributeOverrides> używanego do utworzenia <xref:System.Xml.Serialization.XmlTypeMapping>. <xref:System.Xml.Serialization.XmlSerializer> Jest zbudowany z <xref:System.Xml.Serialization.XmlTypeMapping>, a wystąpienie `Transportation` klasa ponownie jest serializowana. Ponieważ <xref:System.Xml.Serialization.SoapElementAttribute> jest używany, aby zastąpić serializacji, wygenerowana nazwa elementu XML jest teraz "Truck" zamiast "Koła".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład szereguje wystąpienia klasy o nazwie `Transportation` zawiera pole o nazwie `Vehicle`. Element <xref:System.Xml.Serialization.SoapElementAttribute> jest stosowany do pola. Gdy pole jest serializowana, nazwa elementu XML jest "Koła" zamiast "Pojazd". `SerializeOverride` Metoda tworzy <xref:System.Xml.Serialization.SoapElementAttribute> i ustawia <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> właściwość <xref:System.Xml.Serialization.SoapAttributes> do <xref:System.Xml.Serialization.SoapElementAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Jest dodawany do <xref:System.Xml.Serialization.SoapAttributeOverrides> używanego do utworzenia <xref:System.Xml.Serialization.XmlTypeMapping>. <xref:System.Xml.Serialization.XmlSerializer> Jest zbudowany z <xref:System.Xml.Serialization.XmlTypeMapping>, a wystąpienie `Transportation` klasa ponownie jest serializowana. Ponieważ <xref:System.Xml.Serialization.SoapElementAttribute> jest używany, aby zastąpić serializacji, wygenerowana nazwa elementu XML jest teraz "Truck" zamiast "Koła".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapElementAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapElementAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapElementAttribute : string -&gt; System.Xml.Serialization.SoapElementAttribute" Usage="new System.Xml.Serialization.SoapElementAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">Nazwa elementu XML serializacji elementu członkowskiego.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> klasy i określa nazwę elementu XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład szereguje wystąpienia klasy o nazwie `Transportation` zawiera pole o nazwie `Vehicle`. Element <xref:System.Xml.Serialization.SoapElementAttribute> jest stosowany do pola. Gdy pole jest serializowana, nazwa elementu XML jest "Koła" zamiast "Pojazd". `SerializeOverride` Metoda tworzy <xref:System.Xml.Serialization.SoapElementAttribute> i ustawia <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> właściwość <xref:System.Xml.Serialization.SoapAttributes> do <xref:System.Xml.Serialization.SoapElementAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Jest dodawany do <xref:System.Xml.Serialization.SoapAttributeOverrides> używanego do utworzenia <xref:System.Xml.Serialization.XmlTypeMapping>. <xref:System.Xml.Serialization.XmlSerializer> Jest zbudowany z <xref:System.Xml.Serialization.XmlTypeMapping>, a wystąpienie `Transportation` klasa ponownie jest serializowana. Ponieważ <xref:System.Xml.Serialization.SoapElementAttribute> jest używany, aby zastąpić serializacji, wygenerowana nazwa elementu XML jest teraz "Truck" zamiast "Koła".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ danych języka (XSD) definicji schematu XML wygenerowanego elementu XML.</summary>
        <value>Jeden z typów danych schematu XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli wymieniono typy proste dane schematu XML z ich odpowiedników .NET.  
  
 Dla schematu XML `base64Binary` i `hexBinary` typy danych, skorzystaj z tablicy z <xref:System.Byte> struktury i zastosować <xref:System.Xml.Serialization.SoapElementAttribute> z <xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> "base64Binary" lub "hexBinary", zgodnie z potrzebami. Dla schematu XML `time` i `date` typy danych, użyj <xref:System.DateTime> wpisz i zastosować <xref:System.Xml.Serialization.SoapElementAttribute> z <xref:System.Xml.Serialization.SoapElementAttribute.DataType%2A> "Data" lub "time".  
  
 Dla każdego typu danych schematu XML, który jest mapowany na ciąg, zastosuj <xref:System.Xml.Serialization.SoapElementAttribute> z jego <xref:System.Xml.Serialization.SoapElementAttribute.DataType%2A> właściwość ustawioną na typ schematu XML. Należy pamiętać, że nie ma to wpływu na format serializacji, tylko schematu dla elementu członkowskiego.  
  
> [!NOTE]
>  Właściwość jest rozróżniana wielkość liter, musisz więc ustawić jej dokładnie do jednego z typów danych schematu XML.  
  
> [!NOTE]
>  Przekazywanie danych binarnych jako XML element jest bardziej wydajne niż przekazanie jej jako atrybut XML.  
  
 Aby uzyskać więcej informacji na temat typów danych XML, zobacz dokument World Wide Web Consortium (www.w3.org) "XML schematu część 2: Typy danych".  
  
|Typ danych XSD|Typ danych .NET|  
|-------------------|--------------------|  
|{1&gt;anyURI&lt;1}|<xref:System.String>|  
|base64Binary|Tablica <xref:System.Byte> obiektów|  
|wartość logiczna|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|Data|<xref:System.DateTime>|  
|Data i godzina|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|JEDNOSTKI|<xref:System.String>|  
|JEDNOSTKI|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|Tablica <xref:System.Byte> obiektów|  
|ID|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|integer|<xref:System.String>|  
|język|<xref:System.String>|  
|long|<xref:System.Int64>|  
|Nazwa|<xref:System.String>|  
|{1&gt;NCName&lt;1}|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTACJA|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|czas trwania|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|czas|<xref:System.DateTime>|  
|Token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 Poniższy przykład szereguje wystąpienia klasy o nazwie `Transportation` zawiera pole o nazwie `Vehicle`. Element <xref:System.Xml.Serialization.SoapElementAttribute> jest stosowany do pola. Gdy pole jest serializowana, nazwa elementu XML jest "Koła" zamiast "Pojazd". `SerializeOverride` Metoda tworzy <xref:System.Xml.Serialization.SoapElementAttribute> i ustawia <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> właściwość <xref:System.Xml.Serialization.SoapAttributes> do <xref:System.Xml.Serialization.SoapElementAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Jest dodawany do <xref:System.Xml.Serialization.SoapAttributeOverrides> używanego do utworzenia <xref:System.Xml.Serialization.XmlTypeMapping>. <xref:System.Xml.Serialization.XmlSerializer> Jest zbudowany z <xref:System.Xml.Serialization.XmlTypeMapping>, a wystąpienie `Transportation` klasa ponownie jest serializowana. Ponieważ <xref:System.Xml.Serialization.SoapElementAttribute> jest używany, aby zastąpić serializacji, wygenerowana nazwa elementu XML jest teraz "Truck" zamiast "Koła".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę elementu XML wygenerowany.</summary>
        <value>Nazwa elementu XML wygenerowany. Wartość domyślna to identyfikator elementu członkowskiego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład szereguje wystąpienia klasy o nazwie `Transportation` zawiera pole o nazwie `Vehicle`. Element <xref:System.Xml.Serialization.SoapElementAttribute> jest stosowany do pola. Gdy pole jest serializowana, nazwa elementu XML jest "Koła" zamiast "Pojazd". `SerializeOverride` Metoda tworzy <xref:System.Xml.Serialization.SoapElementAttribute> i ustawia <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> właściwość <xref:System.Xml.Serialization.SoapAttributes> do <xref:System.Xml.Serialization.SoapElementAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Jest dodawany do <xref:System.Xml.Serialization.SoapAttributeOverrides> używanego do utworzenia <xref:System.Xml.Serialization.XmlTypeMapping>. <xref:System.Xml.Serialization.XmlSerializer> Jest zbudowany z <xref:System.Xml.Serialization.XmlTypeMapping>, a wystąpienie `Transportation` klasa ponownie jest serializowana. Ponieważ <xref:System.Xml.Serialization.SoapElementAttribute> jest używany, aby zastąpić serializacji, wygenerowana nazwa elementu XML jest teraz "Truck" zamiast "Koła".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Xml.Serialization.XmlSerializer" /> muszą serializację elementu członkowskiego, który ma <see langword="xsi:null" /> atrybut ustawiony na wartość "1".</summary>
        <value><see langword="true" /> Jeśli <see cref="T:System.Xml.Serialization.XmlSerializer" /> generuje <see langword="xsi:null" /> atrybutu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Specyfikację schematu XML dla struktur umożliwia dokumentu XML jawnie sygnalizować, Brak zawartości elementu. Taki element zawiera atrybut `xsi:null` ustawiony na wartość "1". Aby uzyskać więcej informacji, zobacz specyfikację World Wide Web Consortium (www.w3.org) o nazwie "XML schematu część 1: Struktury".  
  
 Jeśli <xref:System.Xml.Serialization.SoapElementAttribute.IsNullable%2A> właściwość jest ustawiona na `true`, `xsi:null` atrybutu jest generowany dla składowych klasy, które zostały ustawione na `null`. Na przykład jeśli ustawisz pole o nazwie `MyStringArray` do `null`, <xref:System.Xml.Serialization.XmlSerializer> generuje następujący kod XML.  
  
```  
<MyStringArray xsi:null = "1" />  
```  
  
 Jeśli <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> właściwość `false`, jest generowany żaden element XML.  
  
> [!NOTE]
>  Nie można zastosować <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> właściwości do elementu członkowskiego wpisanych jako typ wartości, ponieważ typ wartości nie mogą zawierać `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>