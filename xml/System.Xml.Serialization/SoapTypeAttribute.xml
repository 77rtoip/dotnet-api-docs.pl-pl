<Type Name="SoapTypeAttribute" FullName="System.Xml.Serialization.SoapTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b0f77ed5e6d27c0a5149ced158013d55d4ddc8a7" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69440872" /></Metadata><TypeSignature Language="C#" Value="public class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Interface)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Kontroluje schemat wygenerowany przez <see cref="T:System.Xml.Serialization.XmlSerializer" /> gdy wystąpienie klasy jest serializowane jako zakodowany plik XML protokołu SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa należy do rodziny atrybutów, która kontroluje <xref:System.Xml.Serialization.XmlSerializer> sposób serializacji lub deserializacji obiektu jako zakodowanego XML protokołu SOAP. <xref:System.Xml.Serialization.SoapTypeAttribute> Wyniki XML są zgodne z sekcją 5 dokumentu organizacja World Wide Web Consortium [Simple Object Access Protocol (SOAP) 1,1](https://www.w3.org/TR/2000/NOTE-SOAP-20000508/). Aby uzyskać pełną listę podobnych atrybutów, zobacz atrybuty kontrolujące [zakodowaną serializację protokołu SOAP](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).  
  
 Aby serializować obiekt <xref:System.Xml.Serialization.XmlSerializer> jako zakodowany komunikat protokołu SOAP, konstrukcja <xref:System.Xml.Serialization.XmlTypeMapping> przy użyciu <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> metody utworzonej <xref:System.Xml.Serialization.SoapReflectionImporter> za pomocą klasy.  
  
 <xref:System.Xml.Serialization.SoapTypeAttribute> Można stosować tylko do deklaracji klasy.  
  
 <xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A> Właściwość określa, czy otrzymany typ elementu XML jest zawarty w dokumencie schematu XML (XSD) dla wygenerowanego strumienia XML. Aby wyświetlić schemat, skompiluj klasę do pliku DLL. Przekaż otrzymany plik jako argument do [Narzędzia definicji schematu XML (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md). Narzędzie generuje schemat XML dla strumienia XML wygenerowanego, gdy Klasa jest serializowana przez wystąpienie <xref:System.Xml.Serialization.XmlSerializer> klasy.  
  
 Ustawienie innej przestrzeni nazw powoduje, że XSD. exe zapisuje inny plik schematu (XSD) dla strumienia XML generowanego, gdy Klasa jest serializowana.  
  
   
  
## Examples  
 Poniższy przykład serializacji klasy o nazwie `Group`. Jest stosowany do klasy <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> z ustawioną na wartość "SoapGroupType". <xref:System.Xml.Serialization.SoapTypeAttribute> Jest również zastępowana, <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> zmiana na "zespół". <xref:System.Xml.Serialization.SoapTypeAttribute> Obie wersje są serializowane, co powoduje utworzenie dwóch plików: SoapType. XML i SoapType2. XML.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapTypeAttribute> Utwórz podczas przesłaniania serializacji typu. Przypisz obiekt do <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> właściwości <xref:System.Xml.Serialization.SoapAttributes> <xref:System.Xml.Serialization.SoapAttributes> a<xref:System.Xml.Serialization.SoapAttributeOverrides>i Dodaj do. Zobacz Omówienie <xref:System.Xml.Serialization.SoapAttributeOverrides> klasy, aby uzyskać więcej informacji na temat zastępowania serializacji protokołu SOAP.  
  
   
  
## Examples  
 Poniższy przykład serializacji klasy o nazwie `Group`. Jest stosowany do klasy <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> z ustawioną na wartość "SoapGroupType". <xref:System.Xml.Serialization.SoapTypeAttribute> Jest również zastępowana, <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> zmiana na "zespół". <xref:System.Xml.Serialization.SoapTypeAttribute> Obie wersje są serializowane, co powoduje utworzenie dwóch plików: SoapType. XML i SoapType2. XML.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapTypeAttribute : string -&gt; System.Xml.Serialization.SoapTypeAttribute" Usage="new System.Xml.Serialization.SoapTypeAttribute typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Nazwa typu <see cref="T:System.Xml.Serialization.XmlSerializer" /> XML wygenerowanego podczas serializacji wystąpienia klasy (i rozpoznaje, kiedy deserializacji wystąpienie klasy).</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> klasy i określa nazwę typu XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapTypeAttribute> Utwórz podczas przesłaniania serializacji typu. Przypisz obiekt do <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> właściwości <xref:System.Xml.Serialization.SoapAttributes> <xref:System.Xml.Serialization.SoapAttributes> a<xref:System.Xml.Serialization.SoapAttributeOverrides>i Dodaj do. Zobacz Omówienie <xref:System.Xml.Serialization.SoapAttributeOverrides> klasy, aby uzyskać więcej informacji na temat zastępowania serializacji protokołu SOAP.  
  
   
  
## Examples  
 Poniższy przykład serializacji klasy o nazwie `Group`. Jest stosowany do klasy <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> z ustawioną na wartość "SoapGroupType". <xref:System.Xml.Serialization.SoapTypeAttribute> Jest również zastępowana, <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> zmiana na "zespół". <xref:System.Xml.Serialization.SoapTypeAttribute> Obie wersje są serializowane, co powoduje utworzenie dwóch plików: SoapType. XML i SoapType2. XML.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapTypeAttribute : string * string -&gt; System.Xml.Serialization.SoapTypeAttribute" Usage="new System.Xml.Serialization.SoapTypeAttribute (typeName, ns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Nazwa typu <see cref="T:System.Xml.Serialization.XmlSerializer" /> XML wygenerowanego podczas serializacji wystąpienia klasy (i rozpoznaje, kiedy deserializacji wystąpienie klasy).</param>
        <param name="ns">Przestrzeń nazw XML typu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> klasy i określa nazwę i przestrzeń nazw XML typu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapTypeAttribute> Utwórz podczas przesłaniania serializacji typu. Przypisz obiekt do <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> właściwości <xref:System.Xml.Serialization.SoapAttributes> <xref:System.Xml.Serialization.SoapAttributes> a<xref:System.Xml.Serialization.SoapAttributeOverrides>i Dodaj do. Zobacz Omówienie <xref:System.Xml.Serialization.SoapAttributeOverrides> klasy, aby uzyskać więcej szczegółów na temat zastępowania serializacji protokołu SOAP.  
  
 Jeśli ustawisz <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> wartość dla więcej niż jednego typu (oznacza to, że w przypadku zastosowania atrybutu do więcej niż jednej klasy z inną <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> wartością dla każdej z nich), [narzędzie definicji schematu XML (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) wygeneruje oddzielny plik schematu (XSD) dla każdego Wprowadź. Wynika to z faktu, że ustawienie innej przestrzeni nazw dla każdego typu renderuje każdy typ odrębny od innych, co sprawia, że jest to konieczne dla każdego typu, który ma zostać zapisany jako niezależna jednostka.  
  
   
  
## Examples  
 Poniższy przykład serializacji klasy o nazwie `Group`. Jest stosowany do klasy <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> z ustawioną na wartość "SoapGroupType". <xref:System.Xml.Serialization.SoapTypeAttribute> Jest również zastępowana, <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> zmiana na "zespół". <xref:System.Xml.Serialization.SoapTypeAttribute> Obie wersje są serializowane, co powoduje utworzenie dwóch plików: SoapType. XML i SoapType2. XML.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeInSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeInSchema { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeInSchema : bool with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy typ ma być uwzględniany w dokumentach schematu XML zakodowanych przy użyciu protokołu SOAP.</summary>
        <value><see langword="true" />Aby uwzględnić typ w dokumentach schematu XML zakodowanych przy użyciu protokołu SOAP; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapTypeAttribute> Zastosuj do deklaracji klasy, aby określić, czy typ ma być dołączany do dokumentu schematu XML. Aby wyświetlić wyniki ustawiania właściwości <xref:System.Xml.Serialization.SoapTypeAttribute> klasy, skompiluj aplikację jako plik wykonywalny lub dll i przekaż wynikowy plik do [Narzędzia definicji schematu XML (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md). Narzędzie zapisuje schemat, włącznie z definicją typu strumienia XML wygenerowanego, gdy Klasa jest serializowana.  
  
   
  
## Examples  
 Poniższy przykład serializacji klasy o nazwie `Group`. Jest stosowany do klasy <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> z ustawioną na wartość "SoapGroupType". <xref:System.Xml.Serialization.SoapTypeAttribute> Jest również zastępowana, <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> zmiana na "zespół". <xref:System.Xml.Serialization.SoapTypeAttribute> Obie wersje są serializowane, co powoduje utworzenie dwóch plików: SoapType. XML i SoapType2. XML.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia przestrzeń nazw typu XML.</summary>
        <value>Przestrzeń nazw typu XML. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ustawisz <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> wartość dla więcej niż jednego typu (oznacza to, że w przypadku zastosowania atrybutu do więcej niż jednej klasy z inną <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> wartością dla każdej z nich), [narzędzie definicji schematu XML (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) wygeneruje oddzielny plik schematu (XSD) dla każdego Wprowadź. Wynika to z faktu, że ustawienie innej przestrzeni nazw dla każdego typu renderuje każdy typ odrębny od innych, co sprawia, że jest to konieczne dla każdego typu, który ma zostać zapisany jako niezależna jednostka.  
  
   
  
## Examples  
 Poniższy przykład serializacji klasy o nazwie `Group`. Jest stosowany do klasy <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> z ustawioną na wartość "SoapGroupType". <xref:System.Xml.Serialization.SoapTypeAttribute> Jest również zastępowana, <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> zmiana na "zespół". <xref:System.Xml.Serialization.SoapTypeAttribute> Obie wersje są serializowane, co powoduje utworzenie dwóch plików: SoapType. XML i SoapType2. XML.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę typu XML.</summary>
        <value>Nazwa typu XML. Wartość domyślna to nazwa klasy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapTypeAttribute> Zastosuj do klasy, aby określić przestrzeń nazw typu XML, nazwę typu XML i określić, czy typ ma być dołączany do dokumentu schematu XML. Aby wyświetlić wyniki ustawiania <xref:System.Xml.Serialization.SoapTypeAttribute> właściwości obiektu, skompiluj aplikację jako plik wykonywalny lub dll i przekaż wynikowy plik do [Narzędzia definicji schematu XML (XSD. exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md). Narzędzie zapisuje schemat, łącznie z definicją typu.  
  
   
  
## Examples  
 Poniższy przykład serializacji klasy o nazwie `Group`. Jest stosowany do klasy <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> z ustawioną na wartość "SoapGroupType". <xref:System.Xml.Serialization.SoapTypeAttribute> Jest również zastępowana, <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> zmiana na "zespół". <xref:System.Xml.Serialization.SoapTypeAttribute> Obie wersje są serializowane, co powoduje utworzenie dwóch plików: SoapType. XML i SoapType2. XML.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
