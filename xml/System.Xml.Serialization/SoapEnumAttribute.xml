<Type Name="SoapEnumAttribute" FullName="System.Xml.Serialization.SoapEnumAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2cc852a3e3433f0b0c83ff9f6a51450aaae1069f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30741452" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapEnumAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapEnumAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapEnumAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapEnumAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapEnumAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Formanty jak <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje elementu członkowskiego wyliczenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapEnumAttribute> Klasy należy do rodziny atrybutów, która kontroluje sposób <xref:System.Xml.Serialization.XmlSerializer> serializuje i deserializuje obiekt jako zakodowanego protokołu SOAP XML. Wynikowy kod XML jest zgodna z sekcji 5 konsorcjum World Wide Web (www.w3.org) dokumentu "Simple Object Access Protocol (SOAP) 1.1". Pełną listę atrybutów podobne, zobacz [atrybuty że formant zakodowane SOAP serializacji](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).  
  
 Można zserializować obiektu jako zakodowany komunikatu protokołu SOAP, należy tworzyć <xref:System.Xml.Serialization.XmlSerializer> przy użyciu <xref:System.Xml.Serialization.XmlTypeMapping> utworzone za pomocą <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> metody <xref:System.Xml.Serialization.SoapReflectionImporter> klasy.  
  
 Użyj <xref:System.Xml.Serialization.SoapEnumAttribute> zmienić wyliczenia który <xref:System.Xml.Serialization.XmlSerializer> generuje lub rozpoznaje (jeśli serializuje lub odpowiednio deserializuje klasy). Na przykład, jeśli wyliczenie zawiera element o nazwie `One`, ale wolisz wskazanym dane wyjściowe XML `Single`, zastosuj <xref:System.Xml.Serialization.SoapEnumAttribute> element członkowski wyliczenia i zestawu <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> właściwości "Single".  
  
 Można zastąpić <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> wartość właściwości <xref:System.Xml.Serialization.SoapEnumAttribute> przez utworzenie wystąpienia <xref:System.Xml.Serialization.SoapEnumAttribute> klasy i przypisywania go do <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> właściwość <xref:System.Xml.Serialization.SoapAttributes>. Aby uzyskać więcej informacji, zobacz <xref:System.Xml.Serialization.SoapAttributeOverrides> Przegląd klasy.  
  
 Można zserializować obiektu jako zakodowany komunikatu protokołu SOAP, należy tworzyć <xref:System.Xml.Serialization.XmlSerializer> przy użyciu <xref:System.Xml.Serialization.XmlTypeMapping> utworzone za pomocą <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> metody <xref:System.Xml.Serialization.SoapReflectionImporter> klasy.  
  
> [!NOTE]
>  Można użyć słowa `SoapEnum` w kodzie zamiast dłuższy <xref:System.Xml.Serialization.SoapEnumAttribute>.  
  
 Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [atrybutów](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Xml.Serialization.XmlSerializer> do serializacji klasę o nazwie `Food` zawiera wyliczenie o nazwie `FoodType`. `FoodType` Wyliczenie zostanie zastąpiona przez utworzenie <xref:System.Xml.Serialization.SoapEnumAttribute> dla każdego wyliczenie i ustawienie <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> właściwość <xref:System.Xml.Serialization.SoapAttributes> do <xref:System.Xml.Serialization.SoapEnumAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Jest dodawany do <xref:System.Xml.Serialization.SoapAttributeOverrides> używany do tworzenia <xref:System.Xml.Serialization.XmlSerializer>.  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapEnumAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapEnumAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapEnumAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Xml.Serialization.SoapEnumAttribute.%23ctor%2A> zastąpić istniejące wyliczenie. Utwórz nową <xref:System.Xml.Serialization.SoapEnumAttribute>, ustawienia swoich właściwości i przypisać obiekt do <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> właściwość <xref:System.Xml.Serialization.SoapAttributes>. Dla każdego elementu członkowskiego wyliczenia, należy utworzyć nowy <xref:System.Xml.Serialization.SoapAttributes> i dodaj go do <xref:System.Xml.Serialization.SoapAttributeOverrides>. Aby uzyskać więcej informacji, zobacz <xref:System.Xml.Serialization.SoapAttributeOverrides> Przegląd klasy.  
  
> [!NOTE]
>  Można użyć słowa `SoapEnum` w kodzie zamiast dłuższy <xref:System.Xml.Serialization.SoapEnumAttribute>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Xml.Serialization.XmlSerializer> do serializacji klasę o nazwie `Food` zawiera wyliczenie o nazwie `FoodType`. `FoodType` Wyliczenie zostanie zastąpiona przez utworzenie <xref:System.Xml.Serialization.SoapEnumAttribute> dla każdego wyliczenie i ustawienie <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> właściwość <xref:System.Xml.Serialization.SoapAttributes> do <xref:System.Xml.Serialization.SoapEnumAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Jest dodawany do <xref:System.Xml.Serialization.SoapAttributeOverrides> używany do tworzenia <xref:System.Xml.Serialization.XmlSerializer>.  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapEnumAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapEnumAttribute(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu XML wygenerowanych przez <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> przy użyciu określonej nazwy elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określ <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> której ma zostać wygenerowany modułu wyliczającego XML różnią się od moduł wyliczający znajduje się w wyliczeniu.  
  
> [!NOTE]
>  Można użyć słowa `SoapEnum` w kodzie zamiast dłuższy <xref:System.Xml.Serialization.SoapEnumAttribute>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Xml.Serialization.XmlSerializer> do serializacji klasę o nazwie `Food` zawiera wyliczenie o nazwie `FoodType`. `FoodType` Wyliczenie zostanie zastąpiona przez utworzenie <xref:System.Xml.Serialization.SoapEnumAttribute> dla każdego wyliczenie i ustawienie <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> właściwość <xref:System.Xml.Serialization.SoapAttributes> do <xref:System.Xml.Serialization.SoapEnumAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Jest dodawany do <xref:System.Xml.Serialization.SoapAttributeOverrides> używany do tworzenia <xref:System.Xml.Serialization.XmlSerializer>.  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapEnumAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wygenerowany w formacie XML dokumentu, kiedy <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje wyliczenia lub wartość rozpoznawane podczas jego deserializuje element członkowski wyliczenia.</summary>
        <value>Wartość generowane w formacie XML dokumentu, kiedy <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializuje wyliczenia lub wartość rozpoznawane podczas jego deserializuje element członkowski wyliczenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określ <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> której ma zostać wygenerowany modułu wyliczającego XML różnią się od moduł wyliczający znajduje się w wyliczeniu.  
  
> [!NOTE]
>  Można użyć słowa `SoapEnum` zamiast dłuższy <xref:System.Xml.Serialization.SoapEnumAttribute>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Xml.Serialization.XmlSerializer> do serializacji klasę o nazwie `Food` zawiera wyliczenie o nazwie `FoodType`. `FoodType` Wyliczenie zostanie zastąpiona przez utworzenie <xref:System.Xml.Serialization.SoapEnumAttribute> dla każdego wyliczenie i ustawienie <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> właściwość <xref:System.Xml.Serialization.SoapAttributes> do <xref:System.Xml.Serialization.SoapEnumAttribute>. <xref:System.Xml.Serialization.SoapAttributes> Jest dodawany do <xref:System.Xml.Serialization.SoapAttributeOverrides> używany do tworzenia <xref:System.Xml.Serialization.XmlSerializer>.  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>