<Type Name="IXmlSerializable" FullName="System.Xml.Serialization.IXmlSerializable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="07f472e239d440bb029fc42deaa18068f7a22d4d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36440575" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlSerializable" />
  <TypeSignature Language="F#" Value="type IXmlSerializable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Zawiera niestandardowe formatowanie XML serializacji i deserializacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istnieją dwie przyczyny, aby zaimplementować ten interfejs. Pierwsza to, aby kontrolować sposób serializacji lub deserializacji przez obiekt <xref:System.Xml.Serialization.XmlSerializer>. Można na przykład bryłkach danych w bajtach zamiast buforowania dużych zestawów danych, a także uniknąć inflacji, gdy dane są zakodowane przy użyciu kodowania Base64. Aby kontrolować serializacji, zaimplementuj <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> i <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> metody służące do sterowania <xref:System.Xml.XmlReader> i <xref:System.Xml.XmlWriter> klasy używane do odczytywania i zapisywania pliku XML. Aby na przykład, zobacz [porady: Dane serializowane fragmentu](~/docs/standard/serialization/how-to-chunk-serialized-data.md).  
  
 Drugi Przyczyna ma mieć możliwość kontrolowania schematu. Aby włączyć tę opcję, należy zastosować <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> do serializacji typu i określ nazwę statyczny element członkowski, który zwraca schematu. Zobacz <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> przykład.  
  
 Klasa, która implementuje interfejs musi mieć konstruktora bez parametrów. Jest to wymagane dla <xref:System.Xml.Serialization.XmlSerializer> klasy.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację <xref:System.Xml.Serialization.IXmlSerializable> interfejsu, który serializuje pole prywatne.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#0)]
 [!code-csharp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberSignature Language="F#" Value="abstract member GetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="iXmlSerializable.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ta metoda jest zarezerwowana i nie powinna być używana. Podczas implementowania <see langword="IXmlSerializable" /> interfejsu, powinien zwrócić <see langword="null" /> (<see langword="Nothing" /> w języku Visual Basic) z tej metody, a zamiast tego w przypadku określania schemat niestandardowy jest wymagane, zastosuj <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> do klasy.</summary>
        <returns>
          <see cref="T:System.Xml.Schema.XmlSchema" /> Opisujący reprezentację XML obiektu, który jest generowany przez <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> — metoda i używane przez <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> metody.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas serializacji lub deserializacji obiektu <xref:System.Xml.Serialization.XmlSerializer> klasy nie przeprowadza sprawdzanie poprawności kodu XML. Z tego powodu często jest bezpieczne pominąć informacji o schemacie, zapewniając prosta implementacja tej metody, na przykład przez zwrócenie `null` (`Nothing` w języku Visual Basic).  
  
 Jeśli konieczne jest podanie informacji o schemacie, należy użyć <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> atrybutu. `GetSchema` Metoda nadal powinna zwrócić `null` (lub `Nothing`).  
  
 Niektóre [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] typów, a także starszych niestandardowych typów implementujących `IXmlSerializable` mogą przy użyciu interfejsu `GetSchema` zamiast `XmlSchemaProvider`. W tym przypadku metoda zwraca dokładne schematu XML, który opisuje reprezentację XML obiektu generowane przez <xref:System.Data.DataSet.WriteXml%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public void ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXml (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadXml : System.Xml.XmlReader -&gt; unit" Usage="iXmlSerializable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> Strumienia, z którego deserializowany jest obiekt.</param>
        <summary>Generuje obiekt na podstawie jej reprezentacji XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> Metody musi odtworzenia obiektu przy użyciu informacji zapisał <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> metody.  
  
 Gdy ta metoda jest wywoływana, czytnik znajduje się w tagu początkowego, który opakowuje informacji dla danego typu. Oznacza to bezpośrednio w tagu początkowym wskazująca na początku Zserializowany obiekt. Gdy metoda zwróci wartość, jego musi mieć odczytu cały element od początku do końca, łącznie z całą jego zawartość. W odróżnieniu od <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> metody, w ramach automatycznie nie obsługuje elementu otoki. Wdrożenie to zrobić. Nie powiodło się przestrzegać następujących reguł pozycji może spowodować kod można wygenerować nieoczekiwany obsługi wyjątków lub uszkodzone dane.  
  
 Po wdrożeniu tej metody, należy rozważyć możliwość że złośliwy użytkownik może zapewniać poprawnie sformułowany, ale Nieprawidłowa reprezentacja XML w celu wyłączenia lub w przeciwnym razie zmiany zachowania aplikacji.  
  
   
  
## Examples  
 Poniższy przykład przedstawia implementację <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> metody.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#2)]
 [!code-csharp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#2)]  
  
 Poniższy przykład przedstawia użycie <xref:System.Xml.Serialization.XmlSerializer> klasy do deserializacji tego obiektu.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/reader.cpp#20)]
 [!code-csharp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/reader.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="iXmlSerializable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Xml.XmlWriter" /> Strumienia, do którego serializowany jest obiekt.</param>
        <summary>Konwertuje obiekt na jej reprezentację XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> Implementacji podasz należy zapisać reprezentację XML obiektu. Platformę zapisuje element otoki i umieszcza edytora XML po jego uruchomieniu. Wdrożenie może tworzyć jego zawartość, łącznie z elementami podrzędnymi. Platformę zamknięcie element otoki.  
  
 Zapisz informacje wystarczające do <xref:System.Xml.XmlWriter> strumienia, aby umożliwić <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> metody do odtworzenia obiektu.  
  
 Na przykład jeśli nazwa stanu obiektu zawiera zmienną tablicową, pamiętaj zapisać długości tablicy lub użyj elementu nadrzędnego zawiera elementy, które opisują wartości tablicy, aby wiedzieć, jak wiele wartości, aby odczytać, jeśli obiekt jest odtworzona.  
  
   
  
## Examples  
 Poniższy przykład przedstawia implementację <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> metody.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#1)]
 [!code-csharp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#1)]  
  
 Poniższy przykład przedstawia użycie <xref:System.Xml.Serialization.XmlSerializer> klasy do deserializacji tego obiektu.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/writer.cpp#10)]
 [!code-csharp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/writer.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>