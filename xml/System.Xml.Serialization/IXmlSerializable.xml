<Type Name="IXmlSerializable" FullName="System.Xml.Serialization.IXmlSerializable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6ba04df9f4691c166c077ed025013951e401d89" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69424822" /></Metadata><TypeSignature Language="C#" Value="public interface IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlSerializable" />
  <TypeSignature Language="F#" Value="type IXmlSerializable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Zapewnia niestandardowe formatowanie serializacji XML i deserializacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istnieją dwa powody, aby zaimplementować ten interfejs. Pierwszy polega na określeniu, jak obiekt jest serializowany lub deserializowany przez <xref:System.Xml.Serialization.XmlSerializer>. Można na przykład podzielić dane na bajty zamiast buforować duże zestawy danych, a także uniknąć inflacji, która występuje, gdy dane są kodowane przy użyciu kodowania base64. Aby kontrolować serializację, zaimplementuj <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> <xref:System.Xml.XmlReader> metody i, aby kontrolować klasyiużywanedoodczytywaniaipisaniakoduXML.<xref:System.Xml.XmlWriter> Aby zapoznać się z przykładem, [zobacz How to: Dane](~/docs/standard/serialization/how-to-chunk-serialized-data.md)serializowane fragmentu.  
  
 Drugim powodem jest możliwość sterowania schematem. Aby włączyć tę funkcję, należy zastosować <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> do typu możliwego do serializacji i określić nazwę statycznej składowej, która zwraca schemat. Zapoznaj <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> się z przykładem.  
  
 Klasa implementująca interfejs musi mieć konstruktora bez parametrów. Jest to wymaganie <xref:System.Xml.Serialization.XmlSerializer> klasy.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia implementację <xref:System.Xml.Serialization.IXmlSerializable> interfejsu, który serializować pole prywatne.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#0)]
 [!code-csharp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#0)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Wprowadzenie do serializacji XML</related>
  </Docs>
  <Members>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberSignature Language="F#" Value="abstract member GetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="iXmlSerializable.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ta metoda jest zarezerwowana i nie powinna być używana. Podczas implementowania <see langword="IXmlSerializable" /> interfejsu należy zwrócić <see langword="null" /> (<see langword="Nothing" /> w Visual Basic) z tej metody, a zamiast tego, jeśli określono schemat niestandardowy, należy zastosować <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> do klasy.</summary>
        <returns>Opisuje reprezentację XML obiektu, który jest wytwarzany <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> przez <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> metodę i zużyty przez metodę. <see cref="T:System.Xml.Schema.XmlSchema" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas serializacji lub deserializacji obiektu <xref:System.Xml.Serialization.XmlSerializer> Klasa nie wykonuje walidacji XML. Z tego powodu często istnieje możliwość pominięcia informacji o schemacie przez zapewnienie prostej implementacji tej metody, na przykład przez powracanie `null` (`Nothing` w Visual Basic).  
  
 Jeśli konieczne jest podanie informacji o schemacie, należy użyć <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> atrybutu. Metoda powinna nadal zwracać `null` (lub `Nothing`). `GetSchema`  
  
 Niektóre [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] typy oraz starsze typy niestandardowe `IXmlSerializable` implementujące interfejs `XmlSchemaProvider`mogą być używane `GetSchema` zamiast. W tym przypadku metoda zwraca dokładny schemat XML, który opisuje reprezentację XML obiektu wygenerowanego przez <xref:System.Data.DataSet.WriteXml%2A> metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public void ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXml (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadXml : System.Xml.XmlReader -&gt; unit" Usage="iXmlSerializable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><see cref="T:System.Xml.XmlReader" /> Strumień, z którego jest deserializowany obiekt.</param>
        <summary>Generuje obiekt z reprezentacji XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda musi resłużyć do odtworzenia obiektu za pomocą informacji, które zostały <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> wpisane przez metodę. <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>  
  
 Gdy ta metoda jest wywoływana, czytnik jest umieszczany na tagu początkowym, który otacza informacje dla danego typu. Oznacza to, że bezpośrednio w tagu początkowym, który wskazuje początek serializowanego obiektu. Gdy ta metoda zwraca, musi mieć odczytany cały element od początku do końca, łącznie z całą jego zawartością. W przeciwieństwie <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> do metody, struktura nie obsługuje elementu otoki automatycznie. Twoja implementacja musi to zrobić. Nieprzestrzeganie tych reguł pozycjonowania może spowodować, że kod generuje nieoczekiwane wyjątki środowiska uruchomieniowego lub uszkodzone dane.  
  
 Podczas implementowania tej metody należy wziąć pod uwagę możliwość, że złośliwy użytkownik może zapewnić poprawnie sformułowaną, ale nieprawidłową reprezentację XML w celu wyłączenia lub zmiany zachowania aplikacji.  
  
   
  
## Examples  
 Poniższy przykład ilustruje implementację <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> metody.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#2)]
 [!code-csharp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#2)]  
  
 Poniższy przykład ilustruje użycie <xref:System.Xml.Serialization.XmlSerializer> klasy do deserializacji tego obiektu.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/reader.cpp#20)]
 [!code-csharp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/reader.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="iXmlSerializable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Strumień <see cref="T:System.Xml.XmlWriter" /> , do którego jest serializowany obiekt.</param>
        <summary>Konwertuje obiekt na reprezentację w formacie XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wprowadzona <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> implementacja powinna zanotować reprezentację XML obiektu. Struktura zapisuje element otoki i umieszcza składnik zapisywania XML po jego uruchomieniu. Twoja implementacja może zapisywać zawartość, w tym elementy podrzędne. Następnie struktura zamknie element otoki.  
  
 Zapisz wystarczające informacje w <xref:System.Xml.XmlWriter> strumieniu, aby <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> umożliwić metodzie odtworzenia obiektu.  
  
 Na przykład, jeśli stan obiektu zawiera zmienną tablicową, pamiętaj, aby napisać długość tablicy lub użyć elementu nadrzędnego, aby zawierał elementy, które opisują wartości tablicowe, aby wiedzieć, ile wartości należy odczytać, gdy obiekt zostanie odtworzony.  
  
   
  
## Examples  
 Poniższy przykład ilustruje implementację <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> metody.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#1)]
 [!code-csharp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#1)]  
  
 Poniższy przykład ilustruje użycie <xref:System.Xml.Serialization.XmlSerializer> klasy do deserializacji tego obiektu.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/writer.cpp#10)]
 [!code-csharp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/writer.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
