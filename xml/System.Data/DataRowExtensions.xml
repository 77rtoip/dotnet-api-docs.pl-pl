<Type Name="DataRowExtensions" FullName="System.Data.DataRowExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ab784645b43a7fbc4bb30faf3f2a404baf5ce614" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65006347" /></Metadata><TypeSignature Language="C#" Value="public static class DataRowExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataRowExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRowExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataRowExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRowExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type DataRowExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiuje metody rozszerzenia umożliwiające <see cref="T:System.Data.DataRow" /> klasy. To jest klasą statyczną.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet> Interfejs API został rozszerzony za pomocą dwóch nowych metod <xref:System.Data.DataRow> klasy <xref:System.Data.DataRowExtensions.Field%2A> i <xref:System.Data.DataRowExtensions.SetField%2A>. Można ich użyć do formularza [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] wyrażeń i metody zapytania względem <xref:System.Data.DataTable> obiektów. Są one zalecane metody służące do uzyskiwania dostępu do wartości w kolumnie w ramach [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] wyrażeń i metody zapytania. Aby uzyskać więcej informacji, zobacz [pole ogólne i metody SetField](~/docs/framework/data/adonet/generic-field-and-setfield-methods-linq-to-dataset.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Field&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Udostępnia silnie typizowane do każdej wartości w kolumnach w <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * System.Data.DataColumn -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, column)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <typeparam name="T">Parametr ogólny, który określa zwracany typ kolumny.</typeparam>
        <param name="row">Dane wejściowe <see cref="T:System.Data.DataRow" />, który działa jako <see langword="this" /> wystąpienie metody rozszerzenia.</param>
        <param name="column">Dane wejściowe <see cref="T:System.Data.DataColumn" /> obiektu, który określa kolumnę aby zwrócić wartość.</param>
        <summary>Udostępnia silnie typizowane do każdej wartości w kolumnach w określonym wierszu. <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> Metoda obsługuje również typy dopuszczające wartości null.</summary>
        <returns>Wartości typu <paramref name="T" />, z <see cref="T:System.Data.DataColumn" /> określony przez <paramref name="column" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet> Klasy reprezentuje **null** wartości z <xref:System.DBNull.Value> wystąpienie <xref:System.DBNull> klasy.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] wyrażenia, który uzyskał dostęp do kolumny o **null** wygeneruje wartość <xref:System.InvalidCastException> w czasie wykonywania. Ponadto <xref:System.Data.DataSet> nie obsługuje typów dopuszczających wartości null. <xref:System.Data.DataRowExtensions.Field%2A> Metoda zapewnia obsługę do uzyskiwania dostępu do kolumny jako typy dopuszczające wartości null.  Jeżeli podstawową wartość w <xref:System.Data.DataSet> jest <xref:System.DBNull.Value>, zwrócony typ dopuszczający wartość null, będzie miała wartość **null**.  
  
 Jeśli wartość określonego <xref:System.Data.DataColumn> jest <xref:System.DBNull.Value> i `T` jest typem referencyjnym lub typ dopuszczający wartość null, jest zwracany typ **null**. <xref:System.Data.DataRowExtensions.Field%2A> Nie zwróci metoda <xref:System.DBNull.Value>.  
  
 <xref:System.Data.DataRowExtensions.Field%2A> Metoda nie wykonuje konwersje typów. Jeśli wymagana jest konwersja typu, należy najpierw uzyskać wartości kolumny za pomocą <xref:System.Data.DataRowExtensions.Field%2A> metody. Wartość kolumny następnie powinny być konwertowane do innego typu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Typ wartości podstawowej kolumny nie można rzutować na typ określony przez parametr ogólny <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Kolumna określona przez <paramref name="column" /> nie występuje w <see cref="T:System.Data.DataTable" /> , <see cref="T:System.Data.DataRow" /> jest częścią.</exception>
        <exception cref="T:System.NullReferenceException">A **null** wartość została przypisana do typu innego niż dopuszczającego wartość null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * int -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">Parametr ogólny, który określa zwracany typ kolumny.</typeparam>
        <param name="row">Dane wejściowe <see cref="T:System.Data.DataRow" />, który działa jako <see langword="this" /> wystąpienie metody rozszerzenia.</param>
        <param name="columnIndex">Indeks kolumny.</param>
        <summary>Udostępnia silnie typizowane do każdej wartości w kolumnach w określonym wierszu. <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> Metoda obsługuje również typy dopuszczające wartości null.</summary>
        <returns>Wartości typu <paramref name="T" />, z <see cref="T:System.Data.DataColumn" /> określony przez <paramref name="columnIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet> Klasy reprezentuje **null** wartości z <xref:System.DBNull.Value> wystąpienie <xref:System.DBNull> klasy.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] wyrażenia, który uzyskał dostęp do kolumny o **null** wygeneruje wartość <xref:System.InvalidCastException> w czasie wykonywania. Ponadto <xref:System.Data.DataSet> nie obsługuje typów dopuszczających wartości null. <xref:System.Data.DataRowExtensions.Field%2A> Metoda zapewnia obsługę do uzyskiwania dostępu do kolumny jako typy dopuszczające wartości null.  Jeżeli podstawową wartość w <xref:System.Data.DataSet> jest <xref:System.DBNull.Value>, zwrócony typ dopuszczający wartość null, będzie miała wartość **null**.  
  
 Jeśli wartość określonego <xref:System.Data.DataColumn> jest **null** i `T` jest typem referencyjnym lub typ dopuszczający wartość null, a następnie będzie zwracany typ **null**.  <xref:System.Data.DataRowExtensions.Field%2A> Nie zwróci metoda <xref:System.DBNull.Value>.  
  
 <xref:System.Data.DataRowExtensions.Field%2A> Metoda nie wykonuje konwersje typów. Jeśli wymagana jest konwersja typu, należy najpierw uzyskać wartości kolumny za pomocą <xref:System.Data.DataRowExtensions.Field%2A> metody. Wartość kolumny następnie powinny być konwertowane do innego typu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Typ wartości podstawowej kolumny nie można rzutować na typ określony przez parametr ogólny <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Kolumna określona przez <paramref name="ordinal" /> nie istnieje w <see cref="T:System.Data.DataTable" /> , <see cref="T:System.Data.DataRow" /> jest częścią.</exception>
        <exception cref="T:System.NullReferenceException">A **null** wartość została przypisana do typu innego niż dopuszczającego wartość null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * string -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Parametr ogólny, który określa zwracany typ kolumny.</typeparam>
        <param name="row">Dane wejściowe <see cref="T:System.Data.DataRow" />, który działa jako <see langword="this" /> wystąpienie metody rozszerzenia.</param>
        <param name="columnName">Nazwa kolumny, aby zwrócić wartość.</param>
        <summary>Udostępnia silnie typizowane do każdej wartości w kolumnach w określonym wierszu. <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> Metoda obsługuje również typy dopuszczające wartości null.</summary>
        <returns>Wartości typu <paramref name="T" />, z <see cref="T:System.Data.DataColumn" /> określony przez <paramref name="columnName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet> Klasy reprezentuje **null** wartości z <xref:System.DBNull.Value> wystąpienie <xref:System.DBNull> klasy. A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] wyrażenia, który uzyskał dostęp do kolumny o **null** wygeneruje wartość <xref:System.InvalidCastException> w czasie wykonywania. Ponadto <xref:System.Data.DataSet> nie obsługuje typów dopuszczających wartości null. <xref:System.Data.DataRowExtensions.Field%2A> Metoda zapewnia obsługę do uzyskiwania dostępu do kolumny jako typy dopuszczające wartości null. Jeżeli podstawową wartość w <xref:System.Data.DataSet> jest <xref:System.DBNull.Value>, zwrócony typ dopuszczający wartość null, będzie miała wartość **null**.  
  
 Jeśli wartość określonego <xref:System.Data.DataColumn> jest **null** i `T` jest typem referencyjnym lub typ dopuszczający wartość null, zwracanym typem będzie **null**. <xref:System.Data.DataRowExtensions.Field%2A> Nie zwróci metoda <xref:System.DBNull.Value>.  
  
 <xref:System.Data.DataRowExtensions.Field%2A> Metoda nie wykonuje konwersje typów. Jeśli wymagana jest konwersja typu, należy najpierw uzyskać wartości kolumny za pomocą <xref:System.Data.DataRowExtensions.Field%2A> metody. Wartość kolumny następnie powinny być konwertowane do innego typu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Typ wartości podstawowej kolumny nie można rzutować na typ określony przez parametr ogólny <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Kolumna określona przez <paramref name="columnName" /> nie występuje w <see cref="T:System.Data.DataTable" /> , <see cref="T:System.Data.DataRow" /> jest częścią.</exception>
        <exception cref="T:System.NullReferenceException">A <see langword="null" /> wartość została przypisana do typu innego niż dopuszczającego wartość null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * System.Data.DataColumn * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, column, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">Parametr ogólny, który określa zwracany typ kolumny.</typeparam>
        <param name="row">Dane wejściowe <see cref="T:System.Data.DataRow" />, który działa jako <see langword="this" /> wystąpienie metody rozszerzenia.</param>
        <param name="column">Dane wejściowe <see cref="T:System.Data.DataColumn" /> obiektu, który określa kolumnę aby zwrócić wartość.</param>
        <param name="version">A <see cref="T:System.Data.DataRowVersion" /> wyliczenie, które określa wersję wartości kolumny, aby zostały zwrócone, takich jak <see langword="Current" /> lub <see langword="Original" /> wersji.</param>
        <summary>Udostępnia silnie typizowane do każdej wartości w kolumnach w określonym wierszu. <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> Metoda obsługuje również typy dopuszczające wartości null.</summary>
        <returns>Wartości typu <paramref name="T" />, z <see cref="T:System.Data.DataColumn" /> określony przez <paramref name="column" /> i <paramref name="version" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet> Klasy reprezentuje **null** wartości z <xref:System.DBNull.Value> wystąpienie <xref:System.DBNull> klasy.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] wyrażenia, który uzyskał dostęp do kolumny o **null** wygeneruje wartość <xref:System.InvalidCastException> w czasie wykonywania. Ponadto <xref:System.Data.DataSet> nie obsługuje typów dopuszczających wartości null. <xref:System.Data.DataRowExtensions.Field%2A> Metoda zapewnia obsługę do uzyskiwania dostępu do kolumny jako typy dopuszczające wartości null.  Jeżeli podstawową wartość w <xref:System.Data.DataSet> jest <xref:System.DBNull.Value>, zwrócony typ dopuszczający wartość null, będzie miała wartość **null**.  
  
 Jeśli wartość określonego <xref:System.Data.DataColumn> ma wartość null i `T` jest typem referencyjnym lub typ dopuszczający wartość null, a następnie będzie zwracany typ **null**. <xref:System.Data.DataRowExtensions.Field%2A> Nie zwróci metoda <xref:System.DBNull.Value>.  
  
 <xref:System.Data.DataRowExtensions.Field%2A> Metoda nie wykonuje konwersje typów. Jeśli wymagana jest konwersja typu, należy najpierw uzyskać wartości kolumny za pomocą <xref:System.Data.DataRowExtensions.Field%2A> metody. Wartość kolumny następnie powinny być konwertowane do innego typu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Typ wartości podstawowej kolumny nie można rzutować na typ określony przez parametr ogólny <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Kolumna określona przez <paramref name="column" /> nie istnieje w <see cref="T:System.Data.DataTable" /> , <see cref="T:System.Data.DataRow" /> jest częścią.</exception>
        <exception cref="T:System.NullReferenceException">A **null** wartość została przypisana do typu innego niż dopuszczającego wartość null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * int * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnIndex, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">Parametr ogólny, który określa zwracany typ kolumny.</typeparam>
        <param name="row">Dane wejściowe <see cref="T:System.Data.DataRow" />, który działa jako <see langword="this" /> wystąpienie metody rozszerzenia.</param>
        <param name="columnIndex">Liczony od zera numeru porządkowego kolumny, aby zwrócić wartość.</param>
        <param name="version">A <see cref="T:System.Data.DataRowVersion" /> wyliczenie, które określa wersję wartości kolumny, aby zostały zwrócone, takich jak <see langword="Current" /> lub <see langword="Original" /> wersji.</param>
        <summary>Udostępnia silnie typizowane do każdej wartości w kolumnach w określonym wierszu. <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> Metoda obsługuje również typy dopuszczające wartości null.</summary>
        <returns>Wartości typu <paramref name="T" />, z <see cref="T:System.Data.DataColumn" /> określony przez <paramref name="ordinal" /> i <paramref name="version" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet> Klasy reprezentuje **null** wartości z <xref:System.DBNull.Value> wystąpienie <xref:System.DBNull> klasy.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] wyrażenia, który uzyskał dostęp do kolumny o **null** wygeneruje wartość <xref:System.InvalidCastException> w czasie wykonywania. Ponadto <xref:System.Data.DataSet> nie obsługuje typów dopuszczających wartości null. <xref:System.Data.DataRowExtensions.Field%2A> Metoda zapewnia obsługę do uzyskiwania dostępu do kolumny jako typy dopuszczające wartości null.  Jeżeli podstawową wartość w <xref:System.Data.DataSet> jest <xref:System.DBNull.Value>, zwrócony typ dopuszczający wartość null, będzie miała wartość **null**.  
  
 Jeśli wartość określonego <xref:System.Data.DataColumn> ma wartość null i `T` jest typem referencyjnym lub typ dopuszczający wartość null, a następnie będzie zwracany typ **null**. <xref:System.Data.DataRowExtensions.Field%2A> Nie zwróci metoda <xref:System.DBNull.Value>.  
  
 <xref:System.Data.DataRowExtensions.Field%2A> Metoda nie wykonuje konwersje typów. Jeśli wymagana jest konwersja typu, należy najpierw uzyskać wartości kolumny za pomocą <xref:System.Data.DataRowExtensions.Field%2A> metody. Wartość kolumny następnie powinny być konwertowane do innego typu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Typ wartości podstawowej kolumny nie można rzutować na typ określony przez parametr ogólny <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Kolumna określona przez <paramref name="ordinal" /> nie istnieje w <see cref="T:System.Data.DataTable" /> , <see cref="T:System.Data.DataRow" /> jest częścią.</exception>
        <exception cref="T:System.NullReferenceException">A **null** wartość została przypisana do typu innego niż dopuszczającego wartość null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * string * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">Parametr ogólny, który określa zwracany typ kolumny.</typeparam>
        <param name="row">Dane wejściowe <see cref="T:System.Data.DataRow" />, który działa jako <see langword="this" /> wystąpienie metody rozszerzenia.</param>
        <param name="columnName">Nazwa kolumny, aby zwrócić wartość.</param>
        <param name="version">A <see cref="T:System.Data.DataRowVersion" /> wyliczenie, które określa wersję wartości kolumny, aby zostały zwrócone, takich jak <see langword="Current" /> lub <see langword="Original" /> wersji.</param>
        <summary>Udostępnia silnie typizowane do każdej wartości w kolumnach w określonym wierszu. <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> Metoda obsługuje również typy dopuszczające wartości null.</summary>
        <returns>Wartości typu <paramref name="T" />, z <see cref="T:System.Data.DataColumn" /> określony przez <paramref name="columnName" /> i <paramref name="version" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet> Klasy reprezentuje **null** wartości z <xref:System.DBNull.Value> wystąpienie <xref:System.DBNull> klasy.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] wyrażenia, który uzyskał dostęp do kolumny o **null** wygeneruje wartość <xref:System.InvalidCastException> w czasie wykonywania. Ponadto <xref:System.Data.DataSet> nie obsługuje typów dopuszczających wartości null. <xref:System.Data.DataRowExtensions.Field%2A> Metoda zapewnia obsługę do uzyskiwania dostępu do kolumny jako typy dopuszczające wartości null.  Jeżeli podstawową wartość w <xref:System.Data.DataSet> jest <xref:System.DBNull.Value>, zwrócony typ dopuszczający wartość null, będzie miała wartość **null**.  
  
 Jeśli wartość określonego <xref:System.Data.DataColumn> ma wartość null i `T` jest typem referencyjnym lub typ dopuszczający wartość null, a następnie będzie zwracany typ **null**. <xref:System.Data.DataRowExtensions.Field%2A> Nie zwróci metoda <xref:System.DBNull.Value>.  
  
 <xref:System.Data.DataRowExtensions.Field%2A> Metoda nie wykonuje konwersje typów. Jeśli wymagana jest konwersja typu, należy najpierw uzyskać wartości kolumny za pomocą <xref:System.Data.DataRowExtensions.Field%2A> metody. Wartość kolumny następnie powinny być konwertowane do innego typu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Typ wartości podstawowej kolumny nie można rzutować na typ określony przez parametr ogólny <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Kolumna określona przez <paramref name="columnName" /> nie istnieje w <see cref="T:System.Data.DataTable" /> , <see cref="T:System.Data.DataRow" /> jest częścią.</exception>
        <exception cref="T:System.NullReferenceException">A **null** wartość została przypisana do typu innego niż dopuszczającego wartość null.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetField&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa nową wartość dla określonej kolumny w <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, column As DataColumn, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * System.Data.DataColumn * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, column, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Parametr ogólny, który określa typ wartości kolumny.</typeparam>
        <param name="row">Dane wejściowe <see cref="T:System.Data.DataRow" />, który działa jako <see langword="this" /> wystąpienie metody rozszerzenia.</param>
        <param name="column">Dane wejściowe <see cref="T:System.Data.DataColumn" /> Określa, które wartości wiersza do pobrania.</param>
        <param name="value">Nowa wartość wiersza dla określonej kolumny typu <paramref name="T" />.</param>
        <summary>Określa nową wartość dla określonej kolumny w <see cref="T:System.Data.DataRow" />. <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> Metoda obsługuje również typy dopuszczające wartości null.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `value` jest **null**, <xref:System.Data.DataRowExtensions.SetField%2A> konwertuje metody **null** wartość <xref:System.DBNull.Value> w źródłowym <xref:System.Data.DataColumn>.  
  
 <xref:System.Data.DataRowExtensions.SetField%2A> Metoda nie wykonuje żadnych konwersji typu. Nie oznacza to, jednak nie nastąpi konwersji typu. <xref:System.Data.DataRowExtensions.SetField%2A> Ujawnia metody [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] zachowanie <xref:System.Data.DataRow> klasy. Konwersja typu może zostać wykonana przez <xref:System.Data.DataRow> obiektu i przekonwertowana wartości następnie zostaną zapisane w wierszu.  
  
 Wyjątki mogą być przekazywane za pośrednictwem <xref:System.Data.DataRowExtensions.SetField%2A> metody z bazowego <xref:System.Data.DataRow> obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kolumna określona przez <paramref name="column" /> nie można odnaleźć.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> Jest **null**.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Występuje, gdy trwa próba skonfigurowania wartość wiersz usunięty.</exception>
        <exception cref="T:System.InvalidCastException">Typ wartości podstawowej kolumny nie można rzutować na typ określony przez parametr ogólny <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, int columnIndex, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnIndex As Integer, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, int columnIndex, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * int * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, columnIndex, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Parametr ogólny, który określa typ wartości kolumny.</typeparam>
        <param name="row">Dane wejściowe <see cref="T:System.Data.DataRow" />, który działa jako <see langword="this" /> wystąpienie metody rozszerzenia.</param>
        <param name="columnIndex">Liczony od zera numeru porządkowego kolumny, aby ustawić wartości.</param>
        <param name="value">Nowa wartość wiersza dla określonej kolumny typu <paramref name="T" />.</param>
        <summary>Określa nową wartość dla określonej kolumny w <see cref="T:System.Data.DataRow" /> wywoływana jest metoda. <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> Metoda obsługuje również typy dopuszczające wartości null.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `value` jest **null**, <xref:System.Data.DataRowExtensions.SetField%2A> konwertuje metody **null** wartość <xref:System.DBNull.Value> w źródłowym <xref:System.Data.DataColumn>.  
  
 <xref:System.Data.DataRowExtensions.SetField%2A> Metoda nie wykonuje żadnych konwersji typu. Nie oznacza to, jednak nie nastąpi konwersji typu. <xref:System.Data.DataRowExtensions.SetField%2A> Ujawnia metody [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] zachowanie <xref:System.Data.DataRow> klasy. Konwersja typu może zostać wykonana przez <xref:System.Data.DataRow> obiektu i przekonwertowana wartości następnie zostaną zapisane w wierszu.  
  
 Wyjątki mogą być przekazywane za pośrednictwem <xref:System.Data.DataRowExtensions.SetField%2A> metody z bazowego <xref:System.Data.DataRow> obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Występuje, gdy trwa próba skonfigurowania wartość wiersz usunięty.</exception>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="ordinal" /> Argument jest spoza zakresu.</exception>
        <exception cref="T:System.InvalidCastException">Typ wartości podstawowej kolumny można nie można rzutować na typ określony przez parametr ogólny <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, string columnName, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, string columnName, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnName As String, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::String ^ columnName, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * string * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, columnName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Parametr ogólny, który określa typ wartości kolumny.</typeparam>
        <param name="row">Dane wejściowe <see cref="T:System.Data.DataRow" />, który działa jako <see langword="this" /> wystąpienie metody rozszerzenia.</param>
        <param name="columnName">Nazwa kolumny, aby ustawić wartości.</param>
        <param name="value">Nowa wartość wiersza dla określonej kolumny typu <paramref name="T" />.</param>
        <summary>Określa nową wartość dla określonej kolumny w <see cref="T:System.Data.DataRow" />. <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> Metoda obsługuje również typy dopuszczające wartości null.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `value` jest **null**, <xref:System.Data.DataRowExtensions.SetField%2A> konwertuje metody **null** wartość <xref:System.DBNull.Value> w źródłowym <xref:System.Data.DataColumn>.  
  
 <xref:System.Data.DataRowExtensions.SetField%2A> Metoda nie wykonuje żadnych konwersji typu. Nie oznacza to, jednak nie nastąpi konwersji typu. <xref:System.Data.DataRowExtensions.SetField%2A> Ujawnia metody [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] zachowanie <xref:System.Data.DataRow> klasy. Konwersja typu może zostać wykonana przez <xref:System.Data.DataRow> obiektu i przekonwertowana wartości następnie zostaną zapisane w wierszu.  
  
 Wyjątki mogą być przekazywane za pośrednictwem <xref:System.Data.DataRowExtensions.SetField%2A> metody z bazowego <xref:System.Data.DataRow> obiektu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kolumna określona przez <paramref name="columnName" /> nie można odnaleźć.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Występuje, gdy trwa próba skonfigurowania wartość wiersz usunięty.</exception>
        <exception cref="T:System.InvalidCastException">Typ wartości podstawowej kolumny nie można rzutować na typ określony przez parametr ogólny <paramref name="T" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>