<Type Name="IDbTransaction" FullName="System.Data.IDbTransaction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bef68f9ffcefd8eac7bb11f3fe6e81049d529c95" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36745380" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDbTransaction : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbTransaction implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbTransaction" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbTransaction&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbTransaction : IDisposable" />
  <TypeSignature Language="F#" Value="type IDbTransaction = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje transakcji do wykonania w źródle danych, a jest implementowany przez dostawców danych .NET Framework, które uzyskują dostęp do relacyjnych baz danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IDbTransaction> Interfejs umożliwiający dziedziczące klasy do zaimplementowania klasy transakcji, co stanowi transakcji do wykonania w źródle danych. Aby uzyskać więcej informacji na temat klas transakcji, zobacz [transakcji i współbieżność](~/docs/framework/data/adonet/transactions-and-concurrency.md).  
  
 Aplikacja nie tworzy wystąpienie <xref:System.Data.IDbTransaction> interfejsu bezpośrednio, ale powoduje utworzenie wystąpienia klasy, która dziedziczy <xref:System.Data.IDbTransaction>.  
  
 Klasy, które dziedziczą <xref:System.Data.IDbTransaction> musi implementować dziedziczone elementy członkowskie i zwykle zdefiniować dodatkowe elementy członkowskie Dodawanie funkcji specyficznych dla dostawcy. Na przykład <xref:System.Data.IDbTransaction> interfejs definiuje <xref:System.Data.IDbTransaction.Commit%2A> metody. Z kolei <xref:System.Data.OleDb.OleDbTransaction> klasy dziedziczy tej właściwości, a także określa <xref:System.Data.OleDb.OleDbTransaction.Begin%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienia klas pochodnych <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlTransaction>. Ponadto przedstawiono sposób użycia <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, i <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metody.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Do podwyższenie poziomu spójności między dostawcy danych .NET Framework, nazwa klasy dziedziczące w formularzu <paramref name="Prv" /> transakcji gdzie <paramref name="Prv" /> jest prefiksem uniform na wszystkie klasy w określonej przestrzeni nazw dostawcy danych .NET Framework. Na przykład <paramref name="Sql" /> jest prefiks <see cref="T:System.Data.SqlClient.SqlTransaction" /> klasy w <see langword="System.Data.SqlClient" /> przestrzeni nazw.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberSignature Language="F#" Value="abstract member Commit : unit -&gt; unit" Usage="iDbTransaction.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zatwierdza transakcji bazy danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy wystąpienia klas pochodnych <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlTransaction>. Ponadto przedstawiono sposób użycia <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, i <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metody.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Wystąpił błąd podczas próby zatwierdzenia transakcji.</exception>
        <exception cref="T:System.InvalidOperationException">Transakcja została już zatwierdzona lub wycofana.  - lub - połączenie zostanie przerwane.</exception>
        <altmember cref="M:System.Data.SqlClient.SqlConnection.BeginTransaction" />
        <altmember cref="M:System.Data.SqlClient.SqlTransaction.Save(System.String)" />
        <altmember cref="M:System.Data.SqlClient.SqlTransaction.Rollback" />
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.IDbConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbTransaction.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As IDbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbConnection ^ Connection { System::Data::IDbConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.IDbConnection" Usage="System.Data.IDbTransaction.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa obiekt połączenia skojarzony z transakcją.</summary>
        <value>Obiekt połączenia skojarzony z transakcją.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pojedynczej aplikacji może mieć wiele połączeń bazy danych, z których każde z nich zero lub więcej transakcji. Ta właściwość umożliwia określenie obiektu połączenia skojarzonego z określonej transakcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsolationLevel">
      <MemberSignature Language="C#" Value="public System.Data.IsolationLevel IsolationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.IsolationLevel IsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbTransaction.IsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IsolationLevel IsolationLevel { System::Data::IsolationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.IsolationLevel : System.Data.IsolationLevel" Usage="System.Data.IDbTransaction.IsolationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa <see cref="T:System.Data.IsolationLevel" /> dla tej transakcji.</summary>
        <value>
          <see cref="T:System.Data.IsolationLevel" /> Dla tej transakcji. Wartość domyślna to <see langword="ReadCommitted" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Transakcje równoległe są nieobsługiwane. W związku z tym <xref:System.Data.IsolationLevel> ma zastosowanie do całej transakcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbTransaction.Rollback" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rollback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback();" />
      <MemberSignature Language="F#" Value="abstract member Rollback : unit -&gt; unit" Usage="iDbTransaction.Rollback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przywraca transakcji w stanie oczekiwania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Transakcja tylko można wycofać w stanie oczekiwania (po <xref:System.Data.IDbConnection.BeginTransaction%2A> została wywołana, ale przed wysłaniem <xref:System.Data.IDbTransaction.Commit%2A> nosi nazwę).  
  
   
  
## Examples  
 Poniższy przykład tworzy wystąpienia klas pochodnych <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlTransaction>. Ponadto przedstawiono sposób użycia <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, i <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> metody.  
  
 [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Wystąpił błąd podczas próby zatwierdzenia transakcji.</exception>
        <exception cref="T:System.InvalidOperationException">Transakcja została już zatwierdzona lub wycofana.  - lub - połączenie zostanie przerwane.</exception>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Data.IDbTransaction.Rollback" /> w klasie pochodnej, należy wywołać klasy podstawowej <see langword="Rollback" /> metody.</para>
        </block>
        <altmember cref="M:System.Data.IDbTransaction.Commit" />
        <altmember cref="M:System.Data.IDbConnection.BeginTransaction" />
      </Docs>
    </Member>
  </Members>
</Type>