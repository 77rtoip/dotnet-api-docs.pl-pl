<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypedTableBaseExtensions.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fef67e6d830597d9a87a4a8545fd782a76673b70.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fef67e6d830597d9a87a4a8545fd782a76673b70</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.TypedTableBaseExtensions">
          <source>Contains the extension methods for the <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> class.</source>
          <target state="translated">Zawiera metody rozszerzenia dla <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.TypedTableBaseExtensions">
          <source>The class contains static extension methods that define the <ph id="ph1">&lt;xref:System.Data.TypedTableBaseExtensions.AsEnumerable%2A&gt;</ph> method and standard query operations for typed data sets.</source>
          <target state="translated">Klasa zawiera metody rozszerzenia statycznych, które definiują <ph id="ph1">&lt;xref:System.Data.TypedTableBaseExtensions.AsEnumerable%2A&gt;</ph> — metoda i standardowe operacje zapytań dla wpisanych zestawów danych.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.TypedTableBaseExtensions">
          <source>This class cannot be instantiated.</source>
          <target state="translated">Nie można utworzyć wystąpienia tej klasy.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
          <source>The type to convert the elements of the source to.</source>
          <target state="translated">Typ docelowy konwersji elementów źródła.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
          <source>The source <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> to make enumerable.</source>
          <target state="translated">Źródło <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> być wyliczalny.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
          <source>Enumerates the data row elements of the <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> and returns an <ph id="ph2">&lt;see cref="T:System.Data.EnumerableRowCollection`1" /&gt;</ph> object, where the generic parameter <ph id="ph3">&lt;paramref name="T" /&gt;</ph> is <ph id="ph4">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Wylicza elementy wiersza danych <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> i zwraca <ph id="ph2">&lt;see cref="T:System.Data.EnumerableRowCollection`1" /&gt;</ph> obiektu, gdy parametr generyczny <ph id="ph3">&lt;paramref name="T" /&gt;</ph> jest <ph id="ph4">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
          <source>This object can be used in a <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> expression or method query.</source>
          <target state="translated">Ten obiekt może być używana w <ph id="ph1">[!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]</ph> wyrażenie lub metoda zapytania.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection`1" /&gt;</ph> object, where the generic parameter <ph id="ph2">&lt;paramref name="T" /&gt;</ph> is <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection`1" /&gt;</ph> Obiektu, gdy parametr generyczny <ph id="ph2">&lt;paramref name="T" /&gt;</ph> jest <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
          <source>The type of the elements or the row.</source>
          <target state="translated">Typ elementów lub wiersza.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
          <source>An enumerable object to return an element from.</source>
          <target state="translated">Obiekt wyliczalny, aby zwrócić elementu.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
          <source>The zero-based index of the element to retrieve.</source>
          <target state="translated">Liczony od zera indeks elementu do pobrania.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
          <source>Returns the element at a specified row in a sequence or a default value if the row is out of range.</source>
          <target state="translated">Zwraca element na określony wiersz w sekwencji lub wartość domyślną, jeśli wiersz jest poza zakresem.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
          <source>The element at a specified row in a sequence.</source>
          <target state="translated">Element na określony wiersz w sekwencji.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Data.TypedTableBaseExtensions">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> in ascending order.</source>
          <target state="translated">Sortuje wiersze <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> w kolejności rosnącej.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Typ elementów wiersza w <bpt id="p1">&lt;c&gt;</bpt>źródła<ept id="p1">&lt;/c&gt;</ept>, zwykle <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Typ klucza zwróconego przez <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> zawierający <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elementów może zostać określona.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Funkcja wyodrębniania klucza z elementu.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> in ascending order according to the specified key.</source>
          <target state="translated">Sortuje wiersze <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> rosnąco zgodnie z określonym kluczem.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OrderedEnumerableRowCollection`1" /&gt;</ph> whose elements are sorted by the specified key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OrderedEnumerableRowCollection`1" /&gt;</ph> Której elementy są sortowane według określonego klucza.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Typ elementów wiersza w <bpt id="p1">&lt;c&gt;</bpt>źródła<ept id="p1">&lt;/c&gt;</ept>, zwykle <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Typ klucza zwróconego przez <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> zawierający <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elementów może zostać określona.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Funkcja wyodrębniania klucza z elementu.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> Do porównania kluczy.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> in ascending order according to the specified key and comparer.</source>
          <target state="translated">Sortuje wiersze <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> rosnąco zgodnie z określonym kluczem i porównania.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OrderedEnumerableRowCollection`1" /&gt;</ph> whose elements are sorted by the specified key and comparer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OrderedEnumerableRowCollection`1" /&gt;</ph> Której elementy są sortowane według określonego klucza i porównania.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Data.TypedTableBaseExtensions">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> in descending order.</source>
          <target state="translated">Sortuje wiersze <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> w kolejności malejącej.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Typ elementów wiersza w <bpt id="p1">&lt;c&gt;</bpt>źródła<ept id="p1">&lt;/c&gt;</ept>, zwykle <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Typ klucza zwróconego przez <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> zawierający <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elementów może zostać określona.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Funkcja wyodrębniania klucza z elementu.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> in descending order according to the specified key.</source>
          <target state="translated">Sortuje wiersze <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> w porządku malejącym zgodnie z określonym kluczem.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OrderedEnumerableRowCollection`1" /&gt;</ph> whose elements are sorted by the specified key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OrderedEnumerableRowCollection`1" /&gt;</ph> Której elementy są sortowane według określonego klucza.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, typically <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Typ elementów wiersza w <bpt id="p1">&lt;c&gt;</bpt>źródła<ept id="p1">&lt;/c&gt;</ept>, zwykle <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>The type of the key returned by <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Typ klucza zwróconego przez <bpt id="p1">&lt;c&gt;</bpt>keySelector<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to be ordered.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> zawierający <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elementów może zostać określona.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>A function to extract a key from an element.</source>
          <target state="translated">Funkcja wyodrębniania klucza z elementu.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> to compare keys.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> Do porównania kluczy.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>Sorts the rows of a <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> in descending order according to the specified key and comparer.</source>
          <target state="translated">Sortuje wiersze <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> w porządku malejącym zgodnie z określonym kluczem i porównania.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OrderedEnumerableRowCollection`1" /&gt;</ph> whose elements are sorted by the specified key and comparer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OrderedEnumerableRowCollection`1" /&gt;</ph> Której elementy są sortowane według określonego klucza i porównania.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Typ elementów wiersza w <bpt id="p1">&lt;c&gt;</bpt>źródła<ept id="p1">&lt;/c&gt;</ept>, <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to invoke a transformation function upon.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> zawierający <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elementy do wywołania transformację działać po.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>A transformation function to apply to each element.</source>
          <target state="translated">Funkcja przekształcenie do zastosowania do każdego elementu.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>Projects each element of a <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> into a new form.</source>
          <target state="translated">Projektów każdy element <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> do nowego formularza.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection`1" /&gt;</ph> whose elements are the result of invoking the transformation function on each element of <ph id="ph2">&lt;paramref name="source" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EnumerableRowCollection`1" /&gt;</ph> Której elementy są wynik wywołania funkcji przekształcenia na każdym elemencie <ph id="ph2">&lt;paramref name="source" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>This projection method requires the transformation function, <ph id="ph1">`selector`</ph>, to produce one value for each value in the source sequence, <ph id="ph2">`source`</ph>.</source>
          <target state="translated">Ta metoda projekcji wymaga, aby funkcja transformacji <ph id="ph1">`selector`</ph>, aby utworzyć pojedynczą wartość dla każdej wartości w sekwencji źródłowej <ph id="ph2">`source`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
          <source>If <ph id="ph1">`selector`</ph> returns a value that is itself a collection, the consumer must traverse the sub-sequences manually.</source>
          <target state="translated">Jeśli <ph id="ph1">`selector`</ph> zwraca wartość, która jest elementem kolekcji, że użytkownik musi ręcznie przechodzenia podrzędne sekwencji.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
          <source>The type of the row elements in <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Typ elementów wiersza w <bpt id="p1">&lt;c&gt;</bpt>źródła<ept id="p1">&lt;/c&gt;</ept>, <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elements to filter.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Data.TypedTableBase`1" /&gt;</ph> zawierający <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> elementy do filtrowania.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
          <source>A function to test each element for a condition.</source>
          <target state="translated">Funkcja testowania każdego elementu na stanie.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
          <source>Filters a sequence of rows based on the specified predicate.</source>
          <target state="translated">Filtruje sekwencji wierszy w oparciu o określony predykat.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.OrderedEnumerableRowCollection`1" /&gt;</ph> that contains rows from the input sequence that satisfy the condition.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.OrderedEnumerableRowCollection`1" /&gt;</ph> Zawiera wiersze z sekwencji wejściowych, które spełniają warunek.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>