<Type Name="DataRowCollection" FullName="System.Data.DataRowCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cbb9963d692bb20f71775ec63bf25d55b23ade52" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46674145" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataRowCollection : System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataRowCollection extends System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRowCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataRowCollection&#xA;Inherits InternalDataCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRowCollection sealed : System::Data::InternalDataCollectionBase" />
  <TypeSignature Language="F#" Value="type DataRowCollection = class&#xA;    inherit InternalDataCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.InternalDataCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kolekcję wierszy dla <see cref="T:System.Data.DataTable" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRowCollection> Jest głównym składnikiem <xref:System.Data.DataTable>. Gdy <xref:System.Data.DataColumnCollection> definiuje schemat tabeli, <xref:System.Data.DataRowCollection> zawiera rzeczywiste dane w tabeli, gdzie każdy <xref:System.Data.DataRow> w <xref:System.Data.DataRowCollection> reprezentuje pojedynczy wiersz.  
  
 Możesz wywołać <xref:System.Data.DataRowCollection.Add%2A> i <xref:System.Data.DataRowCollection.Remove%2A> metod wstawiania i usuwania <xref:System.Data.DataRow> obiekty <xref:System.Data.DataRowCollection>. Można również wywołać <xref:System.Data.DataRowCollection.Find%2A> metodę, aby wyszukać <xref:System.Data.DataRow> obiektów, które zawierają określone wartości kolumn klucza podstawowego i <xref:System.Data.DataRowCollection.Contains%2A> metodę wyszukiwania danych znakowych pojedynczego słów i fraz.  
  
 Inne operacje, takie jak sortowania lub filtrowania <xref:System.Data.DataRowCollection>, użyj metod na poziomie <xref:System.Data.DataRowCollection>skojarzonej <xref:System.Data.DataTable>.  
  
   
  
## Examples  
 Pierwszy przykład w tej sekcji wyświetla wartość w kolumnie 1 dla każdego wiersza <xref:System.Data.DataRowCollection>. Drugi przykład dodaje nowy wiersz utworzone za pomocą <xref:System.Data.DataTable.NewRow%2A> metody <xref:System.Data.DataRowCollection>.  
  
 [!code-csharp[Classic WebData DataRowCollection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRowCollection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRowCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Ten typ jest bezpieczne dla operacji wielowątkowych odczytu. Należy zsynchronizować wszystkie operacje zapisu.</threadsafe>
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje <see cref="T:System.Data.DataRow" /> do <see cref="T:System.Data.DataRowCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.DataRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Data.DataRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (row As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Data::DataRow ^ row);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Data.DataRow -&gt; unit" Usage="dataRowCollection.Add row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="row">
          <see cref="T:System.Data.DataRow" /> Do dodania.</param>
        <summary>Dodaje określony <see cref="T:System.Data.DataRow" /> do <see cref="T:System.Data.DataRowCollection" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby utworzyć nowy <xref:System.Data.DataRow>, należy użyć <xref:System.Data.DataTable.NewRow%2A> metody <xref:System.Data.DataTable> klasy. Kiedy używasz <xref:System.Data.DataTable.NewRow%2A> metodę, nowe <xref:System.Data.DataRow> obiekt jest zwracany, przy użyciu schematu elementu nadrzędnego <xref:System.Data.DataTable>. Po utworzeniu <xref:System.Data.DataRow> obiektu i ustaw wartości dla każdego z jego kolumn, użyj <xref:System.Data.DataRowCollection.Add%2A> metodę, aby dodać obiekt do kolekcji.  
  
 Generuje wyjątek, jeśli użytkownik generuje wyjątek <xref:System.Data.DataTable.RowChanging> zdarzeń. Jeśli wystąpi wyjątek, wiersz nie zostanie dodane do tabeli.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRowCollection.Add%2A> metodę, aby dodać nowy <xref:System.Data.DataRow> do <xref:System.Data.DataRowCollection> obiektu.  
  
 [!code-csharp[Classic WebData DataRowCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Add Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRowCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wiersz ma wartość null.</exception>
        <exception cref="T:System.ArgumentException">Wiersz należy do innej tabeli lub już należy do tej tabeli.</exception>
        <exception cref="T:System.Data.ConstraintException">Dodanie unieważnia ograniczenie.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Dodanie próbuje umieścić o wartości null w <see cref="T:System.Data.DataColumn" /> gdzie <see cref="P:System.Data.DataColumn.AllowDBNull" /> ma wartość false.</exception>
        <altmember cref="M:System.Data.DataRowCollection.Clear" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataRow" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <altmember cref="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.DataRow Add (params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow Add(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.Add(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ParamArray values As Object()) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ Add(... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.Add : obj[] -&gt; System.Data.DataRow" Usage="dataRowCollection.Add values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">Tablica wartości, które są używane do tworzenia nowego wiersza.</param>
        <summary>Tworzy wiersza przy użyciu określonych wartości i dodaje go do <see cref="T:System.Data.DataRowCollection" />.</summary>
        <returns>Brak.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Data.DataColumn> obiekt ma jego <xref:System.Data.DataColumn.AutoIncrement%2A> ma wartość True, wartość null powinien zostać przekazany do Pobierz wartość domyślną dla tej kolumny.  
  
 Wyjątki mogą również wystąpić, jeśli wygeneruje wyjątek podczas <xref:System.Data.DataTable.ColumnChanging> lub <xref:System.Data.DataTable.RowChanging> zdarzeń. Jeśli wystąpi wyjątek, wiersz nie zostanie dodane do tabeli.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRowCollection.Add%2A> metodę, aby utworzyć i dodać nową <xref:System.Data.DataRow> obiekt <xref:System.Data.DataRowCollection>.  
  
 [!code-csharp[Classic WebData DataRowCollection.Add1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Add1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRowCollection.Add1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Add1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Tablica jest większa niż liczba kolumn w tabeli.</exception>
        <exception cref="T:System.InvalidCastException">Wartość jest niezgodna z typem odpowiednich kolumn.</exception>
        <exception cref="T:System.Data.ConstraintException">Dodawanie wiersz unieważnia ograniczenie.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Podjęcie próby umieszczenia o wartości null w kolumnie gdzie <see cref="P:System.Data.DataColumn.AllowDBNull" /> ma wartość false.</exception>
        <altmember cref="M:System.Data.DataRowCollection.Clear" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataRow" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <altmember cref="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="dataRowCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści kolekcję wszystkich wierszy.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Data.InvalidConstraintException">A <see cref="T:System.Data.ForeignKeyConstraint" /> są wymuszane na <see cref="T:System.Data.DataRowCollection" />.</exception>
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <altmember cref="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kolumny klucza podstawowego wszystkie wiersze w kolekcji zawiera określoną wartość.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.Contains : obj -&gt; bool" Usage="dataRowCollection.Contains key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">Wartość klucza podstawowego do testowania.</param>
        <summary>Pobiera wartość wskazującą, czy klucz podstawowy wszystkie wiersze w kolekcji zawiera określoną wartość.</summary>
        <returns>
          <see langword="true" /> Jeśli kolekcja zawiera <see cref="T:System.Data.DataRow" /> z określoną wartością klucza podstawowego; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby użyć <xref:System.Data.DataRowCollection.Contains%2A> metody <xref:System.Data.DataTable> obiekt, do którego <xref:System.Data.DataRowCollection> należy obiekt musi mieć co najmniej jedną kolumnę, wyznaczony jako kolumna klucza podstawowego. Zobacz <xref:System.Data.DataTable.PrimaryKey%2A> właściwości, aby uzyskać więcej informacji o sposobie tworzenia kolumny klucza podstawowego.  
  
 Zaraz po ustaleniu, że wiersz zawiera określoną wartość, możesz użyć <xref:System.Data.DataRowCollection.Find%2A> metodę, aby zwrócić konkretne <xref:System.Data.DataRow> obiektu, który ma wartość.  
  
   
  
## Examples  
 W poniższym przykładzie w języku Visual Basic użyto <xref:System.Data.DataRowCollection.Contains%2A> metodę pozwala ustalić czy <xref:System.Data.DataRowCollection> obiekt zawiera określoną wartość.  
  
 [!code-vb[Classic WebData DataRowCollection.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.MissingPrimaryKeyException">Tabela nie ma klucza podstawowego.</exception>
        <altmember cref="P:System.Data.DataTable.PrimaryKey" />
        <altmember cref="M:System.Data.DataRowCollection.Find(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object[] keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(object[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.Contains(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (keys As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(cli::array &lt;System::Object ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="member this.Contains : obj[] -&gt; bool" Usage="dataRowCollection.Contains keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="keys">Tablica wartości klucza podstawowego do testowania.</param>
        <summary>Pobiera wartość wskazującą, czy kolumny klucza podstawowego wszystkie wiersze w kolekcji zawierają wartości określone w tablicy obiektu.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="T:System.Data.DataRowCollection" /> zawiera <see cref="T:System.Data.DataRow" /> z określonymi wartościami klucza; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby użyć <xref:System.Data.DataRowCollection.Contains%2A> metody z tablicy wartości, <xref:System.Data.DataTable> obiekt, do którego <xref:System.Data.DataRowCollection> należy obiekt musi mieć tablicy kolumn wyznaczony jako klucze podstawowe. Zobacz <xref:System.Data.DataTable.PrimaryKey%2A> właściwości, aby uzyskać więcej informacji o sposobie tworzenia tablicy kolumny klucza podstawowego. Liczba elementów tablicy musi odpowiadać liczba kolumn klucza podstawowego w <xref:System.Data.DataTable>.  
  
 Zaraz po ustaleniu, że wiersz zawiera określoną wartość, użyj <xref:System.Data.DataRowCollection.Find%2A> metodę, aby zwrócić konkretne <xref:System.Data.DataRow> obiektu, który ma wartość.  
  
   
  
## Examples  
 W poniższym przykładzie w języku Visual Basic użyto <xref:System.Data.DataRowCollection.Contains%2A> metody do znalezienia konkretnego wiersza w <xref:System.Data.DataRowCollection> obiektu. W przykładzie tworzy tablicę wartości, jednego elementu dla każdego klucza podstawowego w tabeli, a następnie przekazuje tablicę do metody, aby zwrócić `true` lub `false`.  
  
 [!code-vb[Classic WebData DataRowCollection.Contains1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Contains1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.MissingPrimaryKeyException">Tabela nie ma klucza podstawowego.</exception>
        <altmember cref="P:System.Data.DataTable.PrimaryKey" />
        <altmember cref="M:System.Data.DataRowCollection.Find(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Kopiuje wszystkie <see cref="T:System.Data.DataRow" /> obiektów z kolekcji do danej tablicy, zaczynając od indeksu tablicy zadanego miejsca docelowego.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public override void CopyTo (Array ar, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyTo(class System.Array ar, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyTo (ar As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyTo(Array ^ ar, int index);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : Array * int -&gt; unit" Usage="dataRowCollection.CopyTo (ar, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ar">Jednowymiarowa tablica, która jest lokalizacją docelową elementów kopiowanych z <see langword="DataRowCollection" />. Tablica musi mieć indeksowane zaczynające od zera.</param>
        <param name="index">Rozpoczyna się od zera indeks w tablicy, w których kopiowanie.</param>
        <summary>Kopiuje wszystkie <see cref="T:System.Data.DataRow" /> obiektów z kolekcji do danej tablicy, zaczynając od indeksu tablicy zadanego miejsca docelowego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.DataRow[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Data.DataRow[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As DataRow(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Data::DataRow ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.DataRow[] * int -&gt; unit" Usage="dataRowCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.DataRow[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Jednowymiarowa tablica, która jest lokalizacją docelową elementów kopiowanych z <see langword="DataRowCollection" />. Tablica musi mieć indeksowane zaczynające od zera.</param>
        <param name="index">Rozpoczyna się od zera indeks w tablicy, w których kopiowanie.</param>
        <summary>Kopiuje wszystkie <see cref="T:System.Data.DataRow" /> obiektów z kolekcji do danej tablicy, zaczynając od indeksu tablicy zadanego miejsca docelowego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRowCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Data.DataRowCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera łączną liczbę <see cref="T:System.Data.DataRow" /> obiektów w tej kolekcji.</summary>
        <value>Całkowita liczba <see cref="T:System.Data.DataRow" /> obiektów w tej kolekcji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera określoną <see cref="T:System.Data.DataRow" /> przy użyciu <see cref="P:System.Data.DataTable.PrimaryKey" /> indeksu (wydajność powinna być operacją O (log n)).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Data.DataRow Find (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow Find(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.Find(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (key As Object) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ Find(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="member this.Find : obj -&gt; System.Data.DataRow" Usage="dataRowCollection.Find key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">Wartość klucza podstawowego <see cref="T:System.Data.DataRow" /> można znaleźć.</param>
        <summary>Pobiera wiersza określonego przez wartość klucza podstawowego.</summary>
        <returns>A <see cref="T:System.Data.DataRow" /> , która zawiera określone wartości klucza podstawowego; w przeciwnym razie wartość o wartości null, jeśli wartość klucza podstawowego nie istnieje w <see cref="T:System.Data.DataRowCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby użyć `Find` metody <xref:System.Data.DataTable> obiekt, do którego <xref:System.Data.DataRowCollection> należy obiekt musi mieć co najmniej jedną kolumnę, wyznaczony jako kolumna klucza podstawowego. Zobacz <xref:System.Data.DataTable.PrimaryKey%2A> właściwości, aby uzyskać więcej informacji o sposobie tworzenia kolumny klucza podstawowego.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRowCollection.Find%2A> metody do znalezienia wartość klucza podstawowego "2" w kolekcji <xref:System.Data.DataRow> obiektów. Metoda zwraca wartość określonego <xref:System.Data.DataRow> obiektu pozwalając zmienić jego wartości, zgodnie z potrzebami.  
  
 [!code-csharp[Classic WebData DataRowCollection.Find Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Find Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRowCollection.Find Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Find Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.MissingPrimaryKeyException">Tabela nie ma klucza podstawowego.</exception>
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataTable.PrimaryKey" />
        <altmember cref="M:System.Data.DataRowCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Data.DataRow Find (object[] keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow Find(object[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.Find(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (keys As Object()) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ Find(cli::array &lt;System::Object ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="member this.Find : obj[] -&gt; System.Data.DataRow" Usage="dataRowCollection.Find keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="keys">Tablica wartości klucza podstawowego, aby znaleźć. Typ tablicy to <see langword="Object" />.</param>
        <summary>Pobiera wiersz, który zawiera określonej wartości klucza podstawowego.</summary>
        <returns>A <see cref="T:System.Data.DataRow" /> określony obiekt, który zawiera wartości klucza podstawowego; w przeciwnym razie wartość o wartości null, jeśli wartość klucza podstawowego nie istnieje w <see cref="T:System.Data.DataRowCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby użyć <xref:System.Data.DataRowCollection.Find%2A> metody <xref:System.Data.DataTable> obiekt, do którego <xref:System.Data.DataRowCollection> należy obiekt musi mieć co najmniej jedną kolumnę, wyznaczony jako kolumna klucza podstawowego. Jeśli co najmniej dwóch wierszy ma taką samą wartość klucza podstawowego, zwracany jest pierwszy wiersz, o których odnaleźć. W takim przypadku <xref:System.Data.DataSet.EnforceConstraints%2A> jest ustawiona na wartość false. Zobacz <xref:System.Data.DataTable.PrimaryKey%2A> właściwości, aby uzyskać więcej informacji o sposobie tworzenia <xref:System.Data.DataTable.PrimaryKey%2A> kolumny lub tablicę <xref:System.Data.DataColumn> obiekty, gdy tabela ma więcej niż jeden klucz podstawowy.  
  
   
  
## Examples  
 W poniższym przykładzie użyto wartości tablicy można znaleźć określonego wiersza w zbiorze <xref:System.Data.DataRow> obiektów. Metoda zakłada, że <xref:System.Data.DataTable> o trzy kolumny klucza podstawowego istnieje. Po utworzeniu tablicę wartości, w kodzie użyto <xref:System.Data.DataRowCollection.Find%2A> metody z tablicy, aby uzyskać określonego obiektu, który ma.  
  
 [!code-csharp[Classic WebData DataRowCollection.Find1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Find1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRowCollection.Find1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Find1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Żaden wiersz nie odnosi się do tej wartości indeksu.</exception>
        <exception cref="T:System.Data.MissingPrimaryKeyException">Tabela nie ma klucza podstawowego.</exception>
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataTable.PrimaryKey" />
        <altmember cref="M:System.Data.DataRowCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="dataRowCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera <see cref="T:System.Collections.IEnumerator" /> dla tej kolekcji.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> Dla tej kolekcji.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Data.DataRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Data.DataRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (row As DataRow) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Data::DataRow ^ row);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Data.DataRow -&gt; int" Usage="dataRowCollection.IndexOf row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="row">
          <see langword="DataRow" /> Do wyszukania.</param>
        <summary>Pobiera indeks określonego <see cref="T:System.Data.DataRow" /> obiektu.</summary>
        <returns>Liczony od zera indeks wiersza lub -1, jeśli wiersz nie zostanie znaleziony w kolekcji.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public void InsertAt (System.Data.DataRow row, int pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertAt(class System.Data.DataRow row, int32 pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAt (row As DataRow, pos As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAt(System::Data::DataRow ^ row, int pos);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : System.Data.DataRow * int -&gt; unit" Usage="dataRowCollection.InsertAt (row, pos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" />
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="row">
          <see cref="T:System.Data.DataRow" /> Do dodania.</param>
        <param name="pos">Lokalizacja (liczony od zera) w kolekcji, której chcesz dodać <see langword="DataRow" />.</param>
        <summary>Wstawia nowy wiersz do kolekcji w określonej lokalizacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W lokalizacji określonej przez <xref:System.Data.DataRowCollection.InsertAt%2A> jest odzwierciedlana przez kolejność wierszy w <xref:System.Data.DataRowCollection> tylko. Jeśli więcej niż jeden wiersz, jest zwracany w <xref:System.Data.DataRow> tablicy, wstawionego wiersza nie może być zwrócona w lokalizacji określonej przez <xref:System.Data.DataRowCollection.InsertAt%2A>. Na przykład <xref:System.Data.DataTable.Rows%2A> właściwość zwraca wiersz w miejscu określonym insert. <xref:System.Data.DataTable.Select%2A> i <xref:System.Data.DataRow.GetChildRows%2A> nie może. Podczas pisania zawartości <xref:System.Data.DataRowCollection> jako kod XML, na przykład <xref:System.Data.DataSet.WriteXml%2A>, wiersze są zapisywane w kolejności określonej przez <xref:System.Data.DataRowCollection>.  
  
 Jeśli wartość określona dla `pos` parametr jest większa niż liczba wierszy w kolekcji, nowego wiersza są dodawane na końcu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.DataRow this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRow Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRowCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRow ^ default[int] { System::Data::DataRow ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Data.DataRow" Usage="System.Data.DataRowCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks wierszy do zwrócenia.</param>
        <summary>Pobiera wiersz pod określonym indeksem.</summary>
        <value>Określony <see cref="T:System.Data.DataRow" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.DataRowCollection.Contains%2A> metodę, aby określić, czy określona wartość istnieje w kolumnie klucza wiersza.  
  
   
  
## Examples  
 Poniższy przykład wyświetla wartość każdego wiersza w kolumnie 1 <xref:System.Data.DataRowCollection>.  
  
 [!code-csharp[Classic WebData DataRowCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRowCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Wartość indeksu jest większa niż liczba elementów w kolekcji.</exception>
        <altmember cref="M:System.Data.DataRowCollection.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected override System.Collections.ArrayList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList List" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRowCollection.List" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property List As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ArrayList ^ List { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.ArrayList" Usage="System.Data.DataRowCollection.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Data.DataRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Data.DataRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (row As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Data::DataRow ^ row);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Data.DataRow -&gt; unit" Usage="dataRowCollection.Remove row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="row">
          <see cref="T:System.Data.DataRow" /> Do usunięcia.</param>
        <summary>Usuwa określony <see cref="T:System.Data.DataRow" /> z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usunięcie wiersza wszystkie dane w tym wierszu zostaną utracone. Można również wywołać <xref:System.Data.DataRow.Delete%2A> metody <xref:System.Data.DataRow> klasy w celu po prostu oznaczyć wiersza do usunięcia. Wywoływanie `Remove` jest taka sama jak wywołanie <xref:System.Data.DataRow.Delete%2A> , a następnie wywołując <xref:System.Data.DataRow.AcceptChanges%2A>.  
  
 <xref:System.Data.DataRowCollection.Remove%2A> nie należy wywoływać w pętli foreach podczas iteracji <xref:System.Data.DataRowCollection> obiektu. <xref:System.Data.DataRowCollection.Remove%2A> modyfikuje stan kolekcji.  
  
 Można również użyć <xref:System.Data.DataRowCollection.Clear%2A> metodę, aby usunąć wszystkich elementów członkowskich kolekcji, w tym samym czasie.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Data.DataRowCollection.Remove%2A> metodę, aby usunąć wiersza znaleziono w <xref:System.Data.DataRowCollection> obiektu. W przykładzie najpierw zastosowano <xref:System.Data.DataRowCollection.Contains%2A> metodę, aby określić, czy kolekcja wierszy zawiera wiersz. Jeśli tak jest, <xref:System.Data.DataRowCollection.Find%2A> metoda jest używana do znajdowania określonego wiersza i <xref:System.Data.DataRowCollection.Remove%2A> metody jest następnie używany do usunięcia wiersza.  
  
 [!code-vb[Classic WebData DataRowCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <altmember cref="M:System.Data.DataRowCollection.Clear" />
        <altmember cref="M:System.Data.DataRowCollection.Contains(System.Object)" />
        <altmember cref="M:System.Data.DataRowCollection.Find(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="dataRowCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Indeks wiersza do usunięcia.</param>
        <summary>Usuwa wiersz pod określonym indeksem z kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usunięcie wiersza wszystkie dane w tym wierszu zostaną utracone. Można również wywołać <xref:System.Data.DataRow.Delete%2A> metody <xref:System.Data.DataRow> klasy w celu po prostu oznaczyć wiersza do usunięcia. Wywoływanie `RemoveAt` jest taka sama jak wywołanie <xref:System.Data.DataRow.Delete%2A> , a następnie wywołując <xref:System.Data.DataRow.AcceptChanges%2A>.  
  
 Możesz użyć <xref:System.Data.DataRowCollection.Clear%2A> metodę, aby usunąć wszystkich elementów członkowskich kolekcji, w tym samym czasie.  
  
   
  
## Examples  
 Poniższy przykład usuwa ostatni wiersz w <xref:System.Data.DataRowCollection> przez wywołanie metody <xref:System.Data.DataRowCollection.RemoveAt%2A> metody.  
  
 [!code-vb[Classic WebData DataRowCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRowCollection.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRowCollection.Clear" />
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
      </Docs>
    </Member>
  </Members>
</Type>