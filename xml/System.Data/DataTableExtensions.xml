<Type Name="DataTableExtensions" FullName="System.Data.DataTableExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da8e76321bbea3bd20575bb12f343508a3e536f7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30449325" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DataTableExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataTableExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataTableExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiuje metody rozszerzenia umożliwiające <see cref="T:System.Data.DataTable" /> klasy. <see cref="T:System.Data.DataTableExtensions" /> jest klasie statycznej.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsDataView">
      <MemberSignature Language="C#" Value="public static System.Data.DataView AsDataView (this System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataView AsDataView(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsDataView (table As DataTable) As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataView ^ AsDataView(System::Data::DataTable ^ table);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="table">Źródło <see cref="T:System.Data.DataTable" /> z którego obsługujące LINQ <see cref="T:System.Data.DataView" /> jest tworzony.</param>
        <summary>Tworzy i zwraca włączony LINQ <see cref="T:System.Data.DataView" /> obiektu.</summary>
        <returns>Włączone LINQ <see cref="T:System.Data.DataView" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataView> Włącza scenariusze wiązania danych [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] i mogą być tworzone z a typizowany lub nietypizowany <xref:System.Data.DataTable>, zapewniając domyślny widok tej tabeli. Filtrowanie i sortowanie można ustawić na <xref:System.Data.DataView> po utworzeniu z <xref:System.Data.DataTable>. <xref:System.Data.DataView> Następnie jest powiązany z formantu interfejsu użytkownika, na przykład <xref:System.Windows.Forms.DataGrid> lub <xref:System.Windows.Forms.DataGridView>, zapewniając modelu danych proste powiązania.  
  
 Aby uzyskać dodatkowe informacje i przykłady, zobacz [tworzenia obiektu DataView](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.DataView> z szczegóły zamówienia sprzedaży tabeli i ustawia go jako źródło danych <xref:System.Windows.Forms.BindingSource> obiektu, który działa jako serwer proxy dla <xref:System.Windows.Forms.DataGridView> sterowania:  
  
 [!code-csharp[DP DataView Samples#CreateLDVFromTable](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromtable)]
 [!code-vb[DP DataView Samples#CreateLDVFromTable](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromtable)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsDataView&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.DataView AsDataView&lt;T&gt; (this System.Data.EnumerableRowCollection&lt;T&gt; source) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataView AsDataView&lt;(class System.Data.DataRow) T&gt;(class System.Data.EnumerableRowCollection`1&lt;!!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsDataView(Of T As DataRow) (source As EnumerableRowCollection(Of T)) As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataView ^ AsDataView(System::Data::EnumerableRowCollection&lt;T&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Typ obiektów w źródle sekwencji zwykle <see cref="T:System.Data.DataRow" />.</typeparam>
        <param name="source">Źródło [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] zapytania, z którego obsługujące LINQ <see cref="T:System.Data.DataView" /> jest tworzony.</param>
        <summary>Tworzy i zwraca włączony LINQ <see cref="T:System.Data.DataView" /> reprezentujący obiekt [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] zapytania.</summary>
        <returns>Włączone LINQ <see cref="T:System.Data.DataView" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataView> Włącza scenariusze powiązania danych [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] i mogą być tworzone z [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] zapytania. <xref:System.Data.DataView> Reprezentuje samą kwerendę, a nie jest widokiem na podstawie zapytania. Nowo utworzony <xref:System.Data.DataView> wnioskuje filtrowanie i sortowanie jest tworzona na podstawie zapytania. <xref:System.Data.DataView> Następnie jest powiązany z formantu interfejsu użytkownika, na przykład <xref:System.Windows.Forms.DataGrid> lub <xref:System.Windows.Forms.DataGridView>, zapewniając prostych modelu powiązanie danych.  
  
 Parametr `T` parametru wejściowego `source` może być tylko typu <xref:System.Data.DataRow> lub typ pochodzący od <xref:System.Data.DataRow>.  
  
 Następujące operatory zapytań, obsługiwane są tylko w zapytaniu użyty do utworzenia <xref:System.Data.DataView>:  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.OrderByDescending%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Select%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Where%2A>  
  
 Aby uzyskać dodatkowe informacje i przykłady, zobacz [tworzenia obiektu DataView](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md).  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Data.DataView> online zamówień uporządkowanych według całkowitej termin:  
  
 [!code-csharp[DP DataView Samples#CreateLDVFromQuery1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromquery1)]
 [!code-vb[DP DataView Samples#CreateLDVFromQuery1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromquery1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsEnumerable">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt; AsEnumerable (this System.Data.DataTable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;class System.Data.DataRow&gt; AsEnumerable(class System.Data.DataTable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsEnumerable (source As DataTable) As EnumerableRowCollection(Of DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;System::Data::DataRow ^&gt; ^ AsEnumerable(System::Data::DataTable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.DataTable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">Źródło <see cref="T:System.Data.DataTable" /> być wyliczalny.</param>
        <summary>Zwraca <see cref="T:System.Collections.Generic.IEnumerable`1" /> obiektu, gdy parametr generyczny <paramref name="T" /> jest <see cref="T:System.Data.DataRow" />. Ten obiekt może być używana w [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] wyrażenie lub metoda zapytania.</summary>
        <returns>
          <see cref="T:System.Collections.Generic.IEnumerable`1" /> Obiektu, gdy parametr generyczny <paramref name="T" /> jest <see cref="T:System.Data.DataRow" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] zapytania działają w źródeł danych, które implementują <xref:System.Collections.Generic.IEnumerable%601> interfejsu lub <xref:System.Linq.IQueryable> interfejsu.  <xref:System.Data.DataTable> Klasa nie implementuje albo interfejsu, dlatego należy wywołać <xref:System.Data.DataTableExtensions.AsEnumerable%2A> metodę <xref:System.Data.DataTable> jako źródło w `From` klauzuli [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] zapytania. Możesz również uzyskać operatorów niestandardowych, specyficznego dla domeny, takich jak <xref:System.Data.DataTableExtensions.CopyToDataTable%2A>, zwracając <xref:System.Collections.Generic.IEnumerable%601> obiektu.  
  
 Obiekt wyliczalny zwrócony przez <xref:System.Data.DataTableExtensions.AsEnumerable%2A> metoda trwale jest powiązana z <xref:System.Data.DataTable> który go utworzył. Wiele wywołań <xref:System.Data.DataTableExtensions.AsEnumerable%2A> metoda będzie zwracany wielu niezależnych kolejność obiekty, które są powiązane ze źródłem <xref:System.Data.DataTable>.  
  
   
  
## Examples  
 W poniższym przykładzie `DisplayProducts` metody odbiera DataTable, który zawiera element DataColumn o nazwie `ProductName`, wyodrębnia `ProductName` wartości, a następnie drukuje wartości.  
  
 [!code-csharp[system.data.DataTableExtensions.AsEnumerable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.data.datatableextensions.asenumerable/cs/source.cs#1)]
 [!code-vb[system.data.DataTableExtensions.AsEnumerable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.data.datatableextensions.asenumerable/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Źródło <see cref="T:System.Data.DataTable" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToDataTable&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca <see cref="T:System.Data.DataTable" /> zawierający kopię <see cref="T:System.Data.DataRow" /> obiektów danych wejściowych <see cref="T:System.Collections.Generic.IEnumerable`1" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.DataTable CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataTable CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T)) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataTable ^ CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Typ obiektów w źródle sekwencji zwykle <see cref="T:System.Data.DataRow" />.</typeparam>
        <param name="source">Źródło <see cref="T:System.Collections.Generic.IEnumerable`1" /> sekwencji.</param>
        <summary>Zwraca <see cref="T:System.Data.DataTable" /> zawierający kopię <see cref="T:System.Data.DataRow" /> obiektów danych wejściowych <see cref="T:System.Collections.Generic.IEnumerable`1" /> obiektu gdzie parametr generyczny <paramref name="T" /> jest <see cref="T:System.Data.DataRow" />.</summary>
        <returns>A <see cref="T:System.Data.DataTable" /> zawierający sekwencji wejściowych jako typ <see cref="T:System.Data.DataRow" /> obiektów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr `T` parametru wejściowego `source` może być tylko typu <xref:System.Data.DataRow> lub typ pochodzący od <xref:System.Data.DataRow>.  
  
 Sekwencja wejściowa może być dowolną <xref:System.Collections.Generic.IEnumerable%601> źródła, nie tylko zapytania lub zapytanie za pośrednictwem <xref:System.Data.DataTable>. Należy pamiętać, że jeśli sekwencji źródłowej zapytania, wywoływania tego operatora spowoduje wymuszenie natychmiastowego wykonania. Wyliczanie sekwencji źródłowej może również spowodować wyjątki zostanie wygenerowany.  
  
 Schemat tabeli docelowej opiera się na schemat pierwszy <xref:System.Data.DataRow> wiersza w sekwencji źródłowej. Metadanych tabeli jest wyodrębniana z <xref:System.Data.DataRow> metadanych i tabeli wartości z kolumn wartości <xref:System.Data.DataRow>. Dla typu <xref:System.Data.DataTable>, typy nie są zachowywane. Danych i schematu są przekazywane, ale nie będzie wynikowy wierszy w tabeli wyników z wpisanego <xref:System.Data.DataRow> typu. <xref:System.Data.DataRow.RowState%2A> i <xref:System.Data.DataRow.RowError%2A> właściwości nie są zachowywane podczas kopiowania ze źródła <xref:System.Data.DataRow> do zwróconego <xref:System.Data.DataTable>.  
  
 Gdy **null** odwołanie lub typ dopuszczający wartość null z wartością **null** znajduje się w źródle <xref:System.Data.DataRow>, ta metoda zastępuje wartość w miejscu docelowym <xref:System.Data.DataTable> o wartości <xref:System.DBNull.Value>.  
  
 Wygenerowanej tabeli zwracany przez metodę ma domyślną nazwę tabeli. Jeśli chcesz nazwać <xref:System.Data.DataTable>, dołącz je do <xref:System.Data.DataSet>, lub wykonywania żadnych innych <xref:System.Data.DataTable> określonej operacji, należy to zrobić po utworzeniu i zwrócił tabeli.  
  
 Aby uzyskać więcej informacji, zobacz [tworzenie DataTable z zapytania](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).  
  
   
  
## Examples  
 W poniższym przykładzie zapytanie tabeli SalesOrderHeader zamówień po 8 sierpnia 2001 i używa <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> metodę w celu utworzenia <xref:System.Data.DataTable> z tej kwerendy. <xref:System.Data.DataTable> Następnie jest powiązany z <xref:System.Windows.Forms.BindingSource>, który działa jako serwer proxy dla <xref:System.Windows.Forms.DataGridView>.  
  
 [!code-csharp[DP LINQ to DataSet Examples#CopyToDataTable1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/CS/Program.cs#copytodatatable1)]
 [!code-vb[DP LINQ to DataSet Examples#CopyToDataTable1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/VB/Module1.vb#copytodatatable1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Źródło <see cref="T:System.Collections.Generic.IEnumerable`1" /> sekwencji jest <see langword="null" /> i nie można utworzyć nową tabelę.</exception>
        <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Data.DataRow" /> w źródle sekwencji ma stan <see cref="F:System.Data.DataRowState.Deleted" />.  
  
 Sekwencja źródło nie zawiera żadnych <see cref="T:System.Data.DataRow" /> obiektów.  
  
 A <see cref="T:System.Data.DataRow" /> w źródle jest sekwencji <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Data.DataTable table, System.Data.LoadOption options) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Data.DataTable table, valuetype System.Data.LoadOption options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T), table As DataTable, options As LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static void CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source, System::Data::DataTable ^ table, System::Data::LoadOption options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="options" Type="System.Data.LoadOption" />
      </Parameters>
      <Docs>
        <typeparam name="T">Typ obiektów w źródle sekwencji zwykle <see cref="T:System.Data.DataRow" />.</typeparam>
        <param name="source">Źródło <see cref="T:System.Collections.Generic.IEnumerable`1" /> sekwencji.</param>
        <param name="table">Miejsce docelowe <see cref="T:System.Data.DataTable" />.</param>
        <param name="options">A <see cref="T:System.Data.LoadOption" /> wyliczenia, która określa <see cref="T:System.Data.DataTable" /> opcje ładowania.</param>
        <summary>Kopie <see cref="T:System.Data.DataRow" /> obiekty do określonego <see cref="T:System.Data.DataTable" />, danych wejściowych <see cref="T:System.Collections.Generic.IEnumerable`1" /> obiektu gdzie parametr generyczny <paramref name="T" /> jest <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr `T` parametru wejściowego `source` może być tylko typu <xref:System.Data.DataRow>, lub typ pochodzący od <xref:System.Data.DataRow>.  
  
 Sekwencja wejściowa może być dowolną <xref:System.Collections.Generic.IEnumerable%601> źródła, nie tylko zapytania za pośrednictwem <xref:System.Data.DataTable>. Należy pamiętać, że jeśli sekwencji źródłowej zapytania, wywoływania tego operatora spowoduje wymuszenie natychmiastowego wykonania. Wyliczanie sekwencji źródłowej może również spowodować wyjątki zostanie wygenerowany.  
  
 Schemat tabeli docelowej opiera się na schemat pierwszy <xref:System.Data.DataRow> wiersza w sekwencji źródłowej. Metadanych tabeli jest wyodrębniana z <xref:System.Data.DataRow> metadanych i tabeli wartości z kolumn wartości <xref:System.Data.DataRow>. Dla typu <xref:System.Data.DataTable>, typy nie są zachowywane. Danych i schematu są przekazywane, ale nie będzie wynikowy wierszy w tabeli wyników z wpisanego <xref:System.Data.DataRow> typu. <xref:System.Data.DataRow.RowState%2A> i <xref:System.Data.DataRow.RowError%2A> właściwości nie są zachowywane podczas kopiowania ze źródła <xref:System.Data.DataRow> do zwróconego <xref:System.Data.DataTable>.  
  
 Gdy **null** odwołanie lub typ dopuszczający wartość null z wartością **null** znajduje się w źródle <xref:System.Data.DataRow>, ta metoda zastępuje wartość w miejscu docelowym <xref:System.Data.DataTable> o wartości <xref:System.DBNull.Value>.  
  
 Wygenerowanej tabeli zwracany przez metodę ma domyślną nazwę tabeli. Jeśli chcesz nazwać <xref:System.Data.DataTable>, dołącz je do <xref:System.Data.DataSet>, lub wykonywania żadnych innych <xref:System.Data.DataTable> określonej operacji, należy to zrobić po utworzeniu i zwrócił tabeli.  
  
 Aby uzyskać więcej informacji, zobacz [tworzenie DataTable z zapytania](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Skopiowane <see cref="T:System.Data.DataRow" /> obiektów nie pasują do schematu docelowego <see cref="T:System.Data.DataTable" />.</exception>
        <exception cref="T:System.ArgumentNullException">Źródło <see cref="T:System.Collections.Generic.IEnumerable`1" /> sekwencji jest <see langword="null" /> lub docelowy <see cref="T:System.Data.DataTable" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Data.DataRow" /> w źródle sekwencji ma stan <see cref="F:System.Data.DataRowState.Deleted" />.  
  
 Sekwencja źródło nie zawiera żadnych <see cref="T:System.Data.DataRow" /> obiektów.  
  
 A <see cref="T:System.Data.DataRow" /> w źródle jest sekwencji <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Data.DataTable table, System.Data.LoadOption options, System.Data.FillErrorEventHandler errorHandler) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Data.DataTable table, valuetype System.Data.LoadOption options, class System.Data.FillErrorEventHandler errorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T), table As DataTable, options As LoadOption, errorHandler As FillErrorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static void CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source, System::Data::DataTable ^ table, System::Data::LoadOption options, System::Data::FillErrorEventHandler ^ errorHandler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="options" Type="System.Data.LoadOption" />
        <Parameter Name="errorHandler" Type="System.Data.FillErrorEventHandler" />
      </Parameters>
      <Docs>
        <typeparam name="T">Typ obiektów w źródle sekwencji zwykle <see cref="T:System.Data.DataRow" />.</typeparam>
        <param name="source">Źródło <see cref="T:System.Collections.Generic.IEnumerable`1" /> sekwencji.</param>
        <param name="table">Miejsce docelowe <see cref="T:System.Data.DataTable" />.</param>
        <param name="options">A <see cref="T:System.Data.LoadOption" /> wyliczenia, która określa <see cref="T:System.Data.DataTable" /> opcje ładowania.</param>
        <param name="errorHandler">A <see cref="T:System.Data.FillErrorEventHandler" /> delegata, który reprezentuje metodę, która będzie obsługiwać wystąpił błąd.</param>
        <summary>Kopie <see cref="T:System.Data.DataRow" /> obiekty do określonego <see cref="T:System.Data.DataTable" />, danych wejściowych <see cref="T:System.Collections.Generic.IEnumerable`1" /> obiektu gdzie parametr generyczny <paramref name="T" /> jest <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr `T` parametru wejściowego `source` może być tylko typu <xref:System.Data.DataRow>, lub typ pochodzący od <xref:System.Data.DataRow>.  
  
 Sekwencja wejściowa może być dowolną <xref:System.Collections.Generic.IEnumerable%601> źródła, nie tylko zapytania za pośrednictwem <xref:System.Data.DataTable>. Należy pamiętać, że jeśli sekwencji źródłowej zapytania, wywoływania tego operatora spowoduje wymuszenie natychmiastowego wykonania. Wyliczanie sekwencji źródłowej może również spowodować wyjątki zostanie wygenerowany.  
  
 Schemat tabeli docelowej opiera się na schemat pierwszy <xref:System.Data.DataRow> wiersza w sekwencji źródłowej. Metadanych tabeli jest wyodrębniana z <xref:System.Data.DataRow> metadanych i tabeli wartości z kolumn wartości <xref:System.Data.DataRow>. Dla typu <xref:System.Data.DataTable>, typy nie są zachowywane. Danych i schematu są przekazywane, ale nie będzie wynikowy wierszy w tabeli wyników z wpisanego <xref:System.Data.DataRow> typu. <xref:System.Data.DataRow.RowState%2A> i <xref:System.Data.DataRow.RowError%2A> właściwości nie są zachowywane podczas kopiowania ze źródła <xref:System.Data.DataRow> do zwróconego <xref:System.Data.DataTable>.  
  
 Gdy **null** odwołanie lub typ dopuszczający wartość null z wartością **null** znajduje się w źródle <xref:System.Data.DataRow>, ta metoda zastępuje wartość w miejscu docelowym <xref:System.Data.DataTable> o wartości <xref:System.DBNull.Value>.  
  
 Wygenerowanej tabeli zwracany przez metodę ma domyślną nazwę tabeli. Jeśli chcesz nazwać <xref:System.Data.DataTable>, dołącz je do <xref:System.Data.DataSet>, lub wykonywania żadnych innych <xref:System.Data.DataTable> określonej operacji, należy to zrobić po utworzeniu i zwrócił tabeli.  
  
 Jeśli podczas kopiowania wiersz danych do tabeli docelowej, takie jak wyjątek ograniczenia, jest zgłaszany wyjątek `errorHandler` nosi nazwę obiektu delegowanego. A <xref:System.Data.FillErrorEventArgs> jest przekazywana do `errorHandler` delegować z następującymi wartościami:  
  
-   <xref:System.Data.FillErrorEventArgs.Values%2A> Właściwość jest ustawiona na kopii danych źródłowych.  
  
-   <xref:System.Data.FillErrorEventArgs.DataTable%2A> Właściwość jest ustawiona na obiekt docelowy <xref:System.Data.DataTable>.  
  
-   <xref:System.Data.FillErrorEventArgs.Errors%2A> Właściwość jest ustawiona na zgłoszony wyjątek.  
  
 <xref:System.Data.FillErrorEventArgs.Continue%2A> Właściwości jest do odczytu po powrocie wywołanie delegata. Jeśli <xref:System.Data.FillErrorEventArgs.Continue%2A> właściwość jest `true`, sekwencji źródłowej nadal być wyliczone i załadowane do tabeli danych. Jeśli <xref:System.Data.FillErrorEventArgs.Continue%2A> właściwość jest `false`, jest zgłaszany wyjątek oryginalnego <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> metody.  
  
 Aby uzyskać więcej informacji, zobacz [tworzenie DataTable z zapytania](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Skopiowane <see cref="T:System.Data.DataRow" /> obiektów nie pasują do schematu docelowego <see cref="T:System.Data.DataTable" />.</exception>
        <exception cref="T:System.ArgumentNullException">Źródło <see cref="T:System.Collections.Generic.IEnumerable`1" /> sekwencji jest <see langword="null" /> lub docelowy <see cref="T:System.Data.DataTable" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Data.DataRow" /> w źródle sekwencji ma stan <see cref="F:System.Data.DataRowState.Deleted" />.  
  
 —lub—  
  
 Sekwencja źródło nie zawiera żadnych <see cref="T:System.Data.DataRow" /> obiektów.  
  
 —lub—  
  
 A <see cref="T:System.Data.DataRow" /> w źródle jest sekwencji <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>