<Type Name="IDataAdapter" FullName="System.Data.IDataAdapter">
  <TypeSignature Language="C#" Value="public interface IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="01042-101">Umożliwia obiekt, aby zaimplementować element DataAdapter i reprezentuje zestaw metod i działania związane z właściwości mapowania, które są używane do wypełnienia i aktualizowania <see cref="T:System.Data.DataSet" /> i zaktualizować źródła danych.</span><span class="sxs-lookup"><span data-stu-id="01042-101">Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a <see cref="T:System.Data.DataSet" /> and update a data source.</span></span>  
  
 <span data-ttu-id="01042-102"><see cref="T:System.Data.IDbDataAdapter" /> wystąpienia są dla źródeł danych, które są (lub podobne) relacyjnych baz danych za pomocą polecenia tekstowy (na przykład Transact-SQL), podczas gdy <see cref="T:System.Data.IDataAdapter" /> wystąpień może można użyć dowolnego typu źródła danych.</span><span class="sxs-lookup"><span data-stu-id="01042-102"><see cref="T:System.Data.IDbDataAdapter" /> instances are for data sources that are (or resemble) relational databases with textual commands (like Transact-SQL), while <see cref="T:System.Data.IDataAdapter" /> instances could can use any type of data source.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01042-103"><xref:System.Data.IDataAdapter> Interfejs umożliwiający dziedziczące klasy do zaimplementowania klasy element DataAdapter, który reprezentuje mostek między źródłem danych a <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="01042-103">The <xref:System.Data.IDataAdapter> interface allows an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="01042-104">Aby uzyskać więcej informacji na temat klas element DataAdapter, zobacz [wypełnianie zestawu danych z element DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span><span class="sxs-lookup"><span data-stu-id="01042-104">For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span></span>  
  
 <span data-ttu-id="01042-105">Aplikacja nie tworzy wystąpienie <xref:System.Data.IDataAdapter> interfejsu bezpośrednio, ale implementuje wystąpienia klasy, która dziedziczy <xref:System.Data.IDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="01042-105">An application does not create an instance of the <xref:System.Data.IDataAdapter> interface directly, but implements an instance of a class that inherits <xref:System.Data.IDataAdapter>.</span></span>  
  
 <span data-ttu-id="01042-106">Klasy, które dziedziczą <xref:System.Data.IDataAdapter> musi implementować dziedziczone elementy członkowskie i zwykle określają dodatkowe elementy członkowskie Dodawanie funkcji specyficznych dla dostawcy.</span><span class="sxs-lookup"><span data-stu-id="01042-106">Classes that inherit <xref:System.Data.IDataAdapter> must implement the inherited members, and they typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="01042-107">Na przykład <xref:System.Data.IDataAdapter> interfejs definiuje <xref:System.Data.IDataAdapter.Fill%2A> metody pobierającej <xref:System.Data.DataSet> jako parametr.</span><span class="sxs-lookup"><span data-stu-id="01042-107">For example, the <xref:System.Data.IDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataSet> as a parameter.</span></span> <span data-ttu-id="01042-108">Z kolei <xref:System.Data.OleDb.OleDbDataAdapter> klasa dziedziczy <xref:System.Data.Common.DbDataAdapter.Fill%2A> — metoda i definiuje również dwie dodatkowe przeciążeń <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> metody prowadzące obiektu zestawu rekordów ADO jako parametr.</span><span class="sxs-lookup"><span data-stu-id="01042-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01042-109">W poniższym przykładzie użyto klas pochodnych <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter>, i <xref:System.Data.SqlClient.SqlConnection>, aby wybrać rekordy z bazy danych.</span><span class="sxs-lookup"><span data-stu-id="01042-109">The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter>, and <xref:System.Data.SqlClient.SqlConnection>, to select records from a database.</span></span> <span data-ttu-id="01042-110">Wypełniony <xref:System.Data.DataSet> jest następnie zwracany.</span><span class="sxs-lookup"><span data-stu-id="01042-110">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="01042-111">Aby to zrobić, metoda jest przekazywana zainicjowane <xref:System.Data.DataSet>, ciąg połączenia i ciągu zapytania, który jest instrukcji języka Transact-SQL SELECT.</span><span class="sxs-lookup"><span data-stu-id="01042-111">To do this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="01042-112">Do podwyższenie poziomu spójności między dostawcy danych .NET Framework, nazwa klasy dziedziczące w formularzu <paramref name="Prv" /> element DataAdapter gdzie <paramref name="Prv" /> jest prefiksem uniform na wszystkie klasy w określonej przestrzeni nazw dostawcy danych .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="01042-112">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> DataAdapter where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="01042-113">Na przykład <paramref name="Sql" /> jest prefiks <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> klasy w <see langword="System.Data.SqlClient" /> przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="01042-113">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span>  
  
 <span data-ttu-id="01042-114">Przy dziedziczeniu z <see cref="T:System.Data.IDataAdapter" /> interfejsu, należy zaimplementować następujących konstruktorów:</span><span class="sxs-lookup"><span data-stu-id="01042-114">When you inherit from the <see cref="T:System.Data.IDataAdapter" /> interface, you should implement the following constructors:</span></span>  
  
 <span data-ttu-id="01042-115"><list type="table"><listheader><term> Element</span><span class="sxs-lookup"><span data-stu-id="01042-115"><list type="table"><listheader><term> Item</span></span>  
  
 <span data-ttu-id="01042-116"></term><description> Opis elementu</span><span class="sxs-lookup"><span data-stu-id="01042-116"></term><description> Description</span></span>  
  
 <span data-ttu-id="01042-117"></description></listheader><item><term> PrvDataAdapter()</span><span class="sxs-lookup"><span data-stu-id="01042-117"></description></listheader><item><term> PrvDataAdapter()</span></span>  
  
 <span data-ttu-id="01042-118"></term><description> Inicjuje nowe wystąpienie klasy PrvDataAdapter.</span><span class="sxs-lookup"><span data-stu-id="01042-118"></term><description> Initializes a new instance of the PrvDataAdapter class.</span></span>  
  
 <span data-ttu-id="01042-119"></description></item><item><term> PrvDataAdapter (PrvCommand selectCommand)</span><span class="sxs-lookup"><span data-stu-id="01042-119"></description></item><item><term> PrvDataAdapter(PrvCommand selectCommand)</span></span>  
  
 <span data-ttu-id="01042-120"></term><description> Inicjuje nowe wystąpienie klasy PrvDataAdapter przy użyciu określonej w instrukcji SQL SELECT.</span><span class="sxs-lookup"><span data-stu-id="01042-120"></term><description> Initializes a new instance of the PrvDataAdapter class by using the specified SQL SELECT statement.</span></span>  
  
 <span data-ttu-id="01042-121"></description></item><item><term> PrvDataAdapter (selectCommandText ciąg, ciąg selectConnectionString)</span><span class="sxs-lookup"><span data-stu-id="01042-121"></description></item><item><term> PrvDataAdapter(string selectCommandText, string selectConnectionString)</span></span>  
  
 <span data-ttu-id="01042-122"></term><description> Inicjuje nowe wystąpienie klasy PrvDataAdapter za pomocą instrukcji SQL SELECT i parametrów połączenia.</span><span class="sxs-lookup"><span data-stu-id="01042-122"></term><description> Initializes a new instance of the PrvDataAdapter class by using an SQL SELECT statement and a connection string.</span></span>  
  
 <span data-ttu-id="01042-123"></description></item><item><term> PrvDataAdapter (ciąg selectCommandText, PrvConnection selectConnection)</span><span class="sxs-lookup"><span data-stu-id="01042-123"></description></item><item><term> PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)</span></span>  
  
 <span data-ttu-id="01042-124"></term><description> Inicjuje nowe wystąpienie klasy PrvDataAdapter za pomocą instrukcji SQL SELECT i obiektu PrvConnection.</span><span class="sxs-lookup"><span data-stu-id="01042-124"></term><description> Initializes a new instance of the PrvDataAdapter class by using an SQL SELECT statement and a PrvConnection object.</span></span>  
  
 </description></item></list></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="01042-125">A <see cref="T:System.Data.DataSet" /> umożliwia wypełnienie rekordów i w razie potrzeby schematu.</span><span class="sxs-lookup"><span data-stu-id="01042-125">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <summary><span data-ttu-id="01042-126">Dodaje lub aktualizuje wierszy w <see cref="T:System.Data.DataSet" /> do odpowiadają źródła danych przy użyciu <see cref="T:System.Data.DataSet" /> nazwy i tworzy <see cref="T:System.Data.DataTable" /> o nazwie "Tabela".</span><span class="sxs-lookup"><span data-stu-id="01042-126">Adds or updates rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> name, and creates a <see cref="T:System.Data.DataTable" /> named "Table".</span></span></summary>
        <returns><span data-ttu-id="01042-127">Liczba wierszy pomyślnie dodane do lub odświeżenia w <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="01042-127">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="01042-128">Nie zawiera wierszy objętych instrukcji, które niezwracanie wierszy.</span><span class="sxs-lookup"><span data-stu-id="01042-128">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01042-129"><xref:System.Data.IDataAdapter.Fill%2A> pobiera wierszy ze źródła danych przy użyciu instrukcji SELECT określonego przez skojarzony <xref:System.Data.IDbDataAdapter.SelectCommand%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="01042-129"><xref:System.Data.IDataAdapter.Fill%2A> retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="01042-130">Obiekt połączenia skojarzony z instrukcją SELECT musi być prawidłowy, ale nie musi być otwarty.</span><span class="sxs-lookup"><span data-stu-id="01042-130">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="01042-131">Jeśli połączenie jest zamknięte przed <xref:System.Data.IDataAdapter.Fill%2A> jest wywoływana, jest otwarta do pobierania danych, następnie zamknięte.</span><span class="sxs-lookup"><span data-stu-id="01042-131">If the connection is closed before <xref:System.Data.IDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="01042-132">Jeśli połączenie jest otwarte przed <xref:System.Data.IDataAdapter.Fill%2A> jest wywoływana, pozostaje otwarty.</span><span class="sxs-lookup"><span data-stu-id="01042-132">If the connection is open before <xref:System.Data.IDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="01042-133"><xref:System.Data.IDataAdapter.Fill%2A> Operacji następnie dodaje wiersze do miejsca docelowego <xref:System.Data.DataTable> obiekty w <xref:System.Data.DataSet>, tworzenie <xref:System.Data.DataTable> obiekty, jeśli nie już istnieją.</span><span class="sxs-lookup"><span data-stu-id="01042-133">The <xref:System.Data.IDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="01042-134">Podczas tworzenia <xref:System.Data.DataTable> obiektów, <xref:System.Data.IDataAdapter.Fill%2A> operacji zwykle tworzy tylko metadane nazwy kolumny.</span><span class="sxs-lookup"><span data-stu-id="01042-134">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.IDataAdapter.Fill%2A> operation usually creates only column name metadata.</span></span> <span data-ttu-id="01042-135">Jednak jeśli <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> właściwość jest ustawiona na `AddWithKey`, również są tworzone odpowiednie klucze podstawowe i ograniczeń.</span><span class="sxs-lookup"><span data-stu-id="01042-135">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="01042-136">Jeśli `SelectCommand` zwraca wyniki OUTER JOIN `DataAdapter` nie ustawia <xref:System.Data.DataTable.PrimaryKey%2A> wartość powstałe w ten sposób <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="01042-136">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="01042-137">Zdefiniuj jawnie klucz podstawowy, aby upewnić się, że zduplikowane wiersze są rozpoznawane poprawnie.</span><span class="sxs-lookup"><span data-stu-id="01042-137">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="01042-138">Aby uzyskać więcej informacji, zobacz [Definiowanie kluczy podstawowych](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="01042-138">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="01042-139">Jeśli <xref:System.Data.IDataAdapter> napotka zduplikowane kolumny podczas wypełniania <xref:System.Data.DataTable>, generuje nazw dla kolejnych kolumn, za pomocą wzorca "nazwakolumny1", "nazwakolumny2", "columnname3" i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="01042-139">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the successive columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="01042-140">Jeśli dane przychodzące zawiera kolumny bez nazwy, są umieszczane <xref:System.Data.DataSet> zgodnie ze wzorcem "Kolumna1", "Column2" i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="01042-140">If the incoming data contains unnamed columns, they are put in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="01042-141">Jeśli wiele zestawów wyników są dodawane do <xref:System.Data.DataSet>, każdy zestaw wyników jest umieszczany w osobnej tabeli.</span><span class="sxs-lookup"><span data-stu-id="01042-141">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is put in a separate table.</span></span> <span data-ttu-id="01042-142">Zestawy wyników dodatkowe są nazywane przez dołączenie wartości całkowitych na wartości do nazwy określonej tabeli (na przykład "Tabela", "Tabela1", "Tabela2" i tak dalej).</span><span class="sxs-lookup"><span data-stu-id="01042-142">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="01042-143">Aplikacje należy zachować ostrożność podczas przy użyciu nazwy kolumn i tabel, aby upewnić się, że nie występują konflikty z tych wzorców nazewnictwa.</span><span class="sxs-lookup"><span data-stu-id="01042-143">Applications should use caution when using column and table names to ensure that conflicts with these naming patterns do not occur.</span></span>  
  
 <span data-ttu-id="01042-144">Po instrukcji SELECT, która jest używana do wypełniania <xref:System.Data.DataSet> zwraca wiele wyników, takich jak partii instrukcji SQL, jeśli jeden z wyników zawiera błąd, wszystkie kolejne wyniki są pominięty i nie zostały dodane do <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="01042-144">When the SELECT statement that is used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, if one of the results contains an error, all successive results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="01042-145">Można użyć <xref:System.Data.IDataAdapter.Fill%2A> metody wiele razy w tym samym <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="01042-145">You can use the <xref:System.Data.IDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="01042-146">Jeśli klucz podstawowy istnieje, przychodzących wierszy są scalane z pasujących wierszy, które już istnieją.</span><span class="sxs-lookup"><span data-stu-id="01042-146">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="01042-147">Jeśli klucz podstawowy istnieje, przychodzących wierszy są dołączane do <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="01042-147">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01042-148">Podczas przetwarzania wsadowego instrukcji SQL, które zwracają wiele wartości, implementacja <xref:System.Data.IDataAdapter.Fill%2A> i <xref:System.Data.IDataAdapter.FillSchema%2A> dostawcy danych .NET Framework pobiera informacje o schemacie dla pierwszego wyniku.</span><span class="sxs-lookup"><span data-stu-id="01042-148">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.IDataAdapter.Fill%2A> and <xref:System.Data.IDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="01042-149"><see cref="T:System.Data.DataSet" /> Do wypełnienia ze schematem ze źródła danych.</span><span class="sxs-lookup"><span data-stu-id="01042-149">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="01042-150">Jeden z <see cref="T:System.Data.SchemaType" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="01042-150">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <summary><span data-ttu-id="01042-151">Dodaje <see cref="T:System.Data.DataTable" /> o nazwie "Tabela" do określonego <see cref="T:System.Data.DataSet" /> i konfiguruje schemat do dopasowania w źródle danych, na podstawie której określony <see cref="T:System.Data.SchemaType" />.</span><span class="sxs-lookup"><span data-stu-id="01042-151">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="01042-152">Tablica <see cref="T:System.Data.DataTable" /> obiektów, które zawierają informacje o schemacie zwracane ze źródła danych.</span><span class="sxs-lookup"><span data-stu-id="01042-152">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01042-153"><xref:System.Data.IDataAdapter.FillSchema%2A> Metoda pobiera schemat z źródła danych przy użyciu <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="01042-153">The <xref:System.Data.IDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="01042-154">Obiekt połączenia skojarzony z <xref:System.Data.IDbDataAdapter.SelectCommand%2A> musi być prawidłowy, ale nie musi być otwarty.</span><span class="sxs-lookup"><span data-stu-id="01042-154">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="01042-155">Jeśli połączenie jest zamknięte przed <xref:System.Data.IDataAdapter.FillSchema%2A> jest wywoływana, jest otwarta do pobierania danych, następnie zamknięte.</span><span class="sxs-lookup"><span data-stu-id="01042-155">If the connection is closed before <xref:System.Data.IDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="01042-156">Jeśli połączenie jest otwarte przed <xref:System.Data.IDataAdapter.FillSchema%2A> jest wywoływana, pozostaje otwarty.</span><span class="sxs-lookup"><span data-stu-id="01042-156">If the connection is open before <xref:System.Data.IDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="01042-157">A <xref:System.Data.IDataAdapter.FillSchema%2A> dodaje operacji <xref:System.Data.DataTable> do miejsca docelowego <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="01042-157">A <xref:System.Data.IDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="01042-158">Następnie dodaje kolumny <xref:System.Data.DataColumnCollection> z <xref:System.Data.DataTable> i konfiguruje następujące opcje <xref:System.Data.DataColumn> właściwości, jeśli istnieją w źródle danych:</span><span class="sxs-lookup"><span data-stu-id="01042-158">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable> and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="01042-159"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="01042-159"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="01042-160">Należy ustawić <xref:System.Data.DataColumn.AutoIncrementStep%2A> i <xref:System.Data.DataColumn.AutoIncrementSeed%2A> osobno.</span><span class="sxs-lookup"><span data-stu-id="01042-160">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="01042-161"><xref:System.Data.IDataAdapter.FillSchema%2A> konfiguruje również <xref:System.Data.DataTable.PrimaryKey%2A> i <xref:System.Data.DataTable.Constraints%2A> właściwości zgodnie z następującymi zasadami:</span><span class="sxs-lookup"><span data-stu-id="01042-161"><xref:System.Data.IDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="01042-162">Jeśli jeden lub więcej kolumn klucza podstawowego są zwracane przez <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, są używane jako kolumny klucza podstawowego dla <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="01042-162">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="01042-163">Jeśli są zwracane nie kolumn klucza podstawowego, ale są unikatowe kolumny, unikatowe kolumny są używane jako klucz podstawowy, jeśli wszystkie unikatowe kolumny mają wartości null.</span><span class="sxs-lookup"><span data-stu-id="01042-163">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if all the unique columns are non-nullable.</span></span> <span data-ttu-id="01042-164">Jeśli dowolnej kolumny dopuszczają wartości null, <xref:System.Data.UniqueConstraint> jest dodawany do <xref:System.Data.ConstraintCollection>, ale <xref:System.Data.DataTable.PrimaryKey%2A> nie ustawiono właściwości.</span><span class="sxs-lookup"><span data-stu-id="01042-164">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="01042-165">Jeśli zarówno kolumn klucza podstawowego, jak i unikatowe kolumny są zwracane, kolumny klucza podstawowego są używane jako kolumny klucza podstawowego dla <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="01042-165">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="01042-166">Należy pamiętać, że klucze podstawowe i ograniczenia unique są dodawane do <xref:System.Data.ConstraintCollection> zgodnie z poprzednich zasad, ale także inne ograniczenia typów nie zostaną dodane.</span><span class="sxs-lookup"><span data-stu-id="01042-166">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the previous rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="01042-167">Jeśli klastrowany unikatowy indeks jest zdefiniowany w kolumnie lub kolumny w tabeli programu SQL Server i ograniczenia klucza podstawowego została zdefiniowana osobny zestaw kolumn, będzie zwracana nazwy kolumn w indeksu klastrowanego.</span><span class="sxs-lookup"><span data-stu-id="01042-167">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="01042-168">Aby zwrócić nazwę lub nazwy kolumn klucza podstawowego, należy użyć wskazówki zapytania z instrukcji SELECT, która określa nazwę indeksu klucza podstawowego.</span><span class="sxs-lookup"><span data-stu-id="01042-168">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="01042-169">Aby uzyskać więcej informacji na temat określania wskazówki zapytania, zobacz [wskazówki zapytania (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span><span class="sxs-lookup"><span data-stu-id="01042-169">For more information about how to specify query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="01042-170">Jeśli <xref:System.Data.IDataAdapter> napotka zduplikowane kolumny podczas wypełniania <xref:System.Data.DataTable>, generuje nazw dla kolejnych kolumn, za pomocą wzorca "nazwakolumny1", "nazwakolumny2", "columnname3" i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="01042-170">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the successive columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="01042-171">Jeśli dane przychodzące zawiera kolumny bez nazwy, są umieszczane <xref:System.Data.DataSet> zgodnie ze wzorcem "Kolumna1", "Column2" i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="01042-171">If the incoming data contains unnamed columns, they are put in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="01042-172">Jeśli wiele zestawów wyników są dodawane do <xref:System.Data.DataSet>, każdy zestaw wyników jest umieszczany w osobnej tabeli.</span><span class="sxs-lookup"><span data-stu-id="01042-172">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is put in a separate table.</span></span> <span data-ttu-id="01042-173">Zestawy wyników dodatkowe są nazywane przez dołączenie wartości całkowitych na wartości do nazwy określonej tabeli (na przykład "Tabela", "Tabela1", "Tabela2" i tak dalej).</span><span class="sxs-lookup"><span data-stu-id="01042-173">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="01042-174">Aplikacje należy zachować ostrożność podczas przy użyciu nazwy kolumn i tabel, aby upewnić się, że nie występują konflikty z tych wzorców nazewnictwa.</span><span class="sxs-lookup"><span data-stu-id="01042-174">Applications should use caution when using column and table names to ensure that conflicts with these naming patterns do not occur.</span></span>  
  
 <span data-ttu-id="01042-175"><xref:System.Data.IDataAdapter.FillSchema%2A> zwraca żadnych wierszy.</span><span class="sxs-lookup"><span data-stu-id="01042-175"><xref:System.Data.IDataAdapter.FillSchema%2A> returns no rows.</span></span> <span data-ttu-id="01042-176">Użyj <xref:System.Data.IDataAdapter.Fill%2A> metody w celu dodania wierszy do <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="01042-176">Use the <xref:System.Data.IDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01042-177">Pobiera parametry ustawione przez użytkownika podczas wykonywania instrukcji SQL SELECT.</span><span class="sxs-lookup"><span data-stu-id="01042-177">Gets the parameters set by the user when executing an SQL SELECT statement.</span></span></summary>
        <returns><span data-ttu-id="01042-178">Tablica <see cref="T:System.Data.IDataParameter" /> obiektów, które zawiera parametry ustawiony przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="01042-178">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
```  
private static void GetParameters(String connectiongString) {  
           using (SqlConnection conn = new SqlConnection(connectiongString)) {  
              String queryString = "Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course] where [Year]=@Year and [Credits]>=@Credits";   
              SqlParameter year = new SqlParameter("@Year", 2012);   
              SqlParameter credits = new SqlParameter("@Credits", SqlDbType.Int, 4, "Credits");   
              credits.Value = 4; SqlCommand command = new SqlCommand(queryString, conn);   
              command.Parameters.Add(year);   
              command.Parameters.Add(credits);   
              IDbDataAdapter mySchool = new SqlDataAdapter(command);   
              IDataParameter[] parameters = mySchool.GetFillParameters();  
              Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", "ParameterName", "SourceColumn", "Direction", "DbType", "Value");   
              foreach (IDataParameter parameter in parameters) {   
                 Console.WriteLine("{0,-15}{1,-15}{2,-15}{3,-15}{4,-15}", parameter.ParameterName, parameter.SourceColumn, parameter.Direction, parameter.DbType, parameter.Value);   
              }  
           }  
        }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingMappingAction">
      <MemberSignature Language="C#" Value="public System.Data.MissingMappingAction MissingMappingAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MissingMappingAction MissingMappingAction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataAdapter.MissingMappingAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MissingMappingAction As MissingMappingAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::MissingMappingAction MissingMappingAction { System::Data::MissingMappingAction get(); void set(System::Data::MissingMappingAction value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.MissingMappingAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01042-179">Wskazuje lub określa, czy źródło Niemapowane tabele lub kolumny są przekazywane z ich nazwy źródła celu filtrowane lub Zgłoś błąd.</span><span class="sxs-lookup"><span data-stu-id="01042-179">Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.</span></span></summary>
        <value><span data-ttu-id="01042-180">Jeden z <see cref="T:System.Data.MissingMappingAction" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="01042-180">One of the <see cref="T:System.Data.MissingMappingAction" /> values.</span></span> <span data-ttu-id="01042-181">Wartość domyślna to <see langword="Passthrough" />.</span><span class="sxs-lookup"><span data-stu-id="01042-181">The default is <see langword="Passthrough" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01042-182"><xref:System.Data.IDataAdapter.TableMappings%2A> Właściwość zapewnia wzorca mapowanie między zwróconych rekordów i <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="01042-182">The <xref:System.Data.IDataAdapter.TableMappings%2A> property provides the master mapping between the returned records and the <xref:System.Data.DataSet>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="01042-183">Podana wartość nie jest jednym z <see cref="T:System.Data.MissingMappingAction" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="01042-183">The value set is not one of the <see cref="T:System.Data.MissingMappingAction" /> values.</span></span></exception>
        <altmember cref="P:System.Data.IDataAdapter.MissingSchemaAction" />
      </Docs>
    </Member>
    <Member MemberName="MissingSchemaAction">
      <MemberSignature Language="C#" Value="public System.Data.MissingSchemaAction MissingSchemaAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MissingSchemaAction MissingSchemaAction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataAdapter.MissingSchemaAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MissingSchemaAction As MissingSchemaAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::MissingSchemaAction MissingSchemaAction { System::Data::MissingSchemaAction get(); void set(System::Data::MissingSchemaAction value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.MissingSchemaAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01042-184">Wskazuje lub określa, czy Brak źródła tabel, kolumn i ich relacji zostaną dodane do schematu zestawu danych, ignorowanie, lub spowodować wystąpienie błędu wygenerowany.</span><span class="sxs-lookup"><span data-stu-id="01042-184">Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.</span></span></summary>
        <value><span data-ttu-id="01042-185">Jeden z <see cref="T:System.Data.MissingSchemaAction" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="01042-185">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</span></span> <span data-ttu-id="01042-186">Wartość domyślna to <see langword="Add" />.</span><span class="sxs-lookup"><span data-stu-id="01042-186">The default is <see langword="Add" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="01042-187">Podana wartość nie jest jednym z <see cref="T:System.Data.MissingSchemaAction" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="01042-187">The value set is not one of the <see cref="T:System.Data.MissingSchemaAction" /> values.</span></span></exception>
        <altmember cref="P:System.Data.Common.DataAdapter.MissingMappingAction" />
      </Docs>
    </Member>
    <Member MemberName="TableMappings">
      <MemberSignature Language="C#" Value="public System.Data.ITableMappingCollection TableMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.ITableMappingCollection TableMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataAdapter.TableMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableMappings As ITableMappingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ITableMappingCollection ^ TableMappings { System::Data::ITableMappingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ITableMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01042-188">Wskazuje, jak tabela źródłowa jest zamapowana do tabeli dataset.</span><span class="sxs-lookup"><span data-stu-id="01042-188">Indicates how a source table is mapped to a dataset table.</span></span></summary>
        <value><span data-ttu-id="01042-189">Kolekcja, która zapewnia wzorca mapowanie między zwróconych rekordów i <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="01042-189">A collection that provides the master mapping between the returned records and the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="01042-190">Wartość domyślna to pustej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="01042-190">The default value is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01042-191"><xref:System.Data.IDataAdapter> Używa tylko mapowania dla tabeli źródłowej o nazwie "Tabela".</span><span class="sxs-lookup"><span data-stu-id="01042-191">The <xref:System.Data.IDataAdapter> uses only the mappings for the source table named "Table".</span></span> <span data-ttu-id="01042-192">Wszystkie wybierz instrukcje INSERT, DELETE i UPDATE zwracający dane musi to zrobić przy użyciu nazw kolumn spójne.</span><span class="sxs-lookup"><span data-stu-id="01042-192">All SELECT, INSERT, DELETE, and UPDATE statements returning data must do so using consistent column naming.</span></span> <span data-ttu-id="01042-193">Zwrócony w rekordach nazwy kolumn muszą być unikatowe, w przeciwnym razie kolumny o takich samych nazwach zastępowania poprzednie dane.</span><span class="sxs-lookup"><span data-stu-id="01042-193">The column names returned in the records must be unique, otherwise columns with duplicate names overwrite previous data.</span></span> <span data-ttu-id="01042-194">Na <xref:System.Data.IDataAdapter.Update%2A>, tylko tabeli zamapowane do tabeli źródłowej o nazwie "Tabeli" będzie mieć jego zmiany uzgodnione.</span><span class="sxs-lookup"><span data-stu-id="01042-194">On <xref:System.Data.IDataAdapter.Update%2A>, only the table mapped to the source table named "Table" will have its changes reconciled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="01042-195"><see cref="T:System.Data.DataSet" /> Używana do aktualizowania źródła danych.</span><span class="sxs-lookup"><span data-stu-id="01042-195">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="01042-196">Wywołuje odpowiednie instrukcje INSERT, UPDATE lub DELETE dla każdego wstawienia, aktualizacji lub usunięcia wiersza w określonej <see cref="T:System.Data.DataSet" /> z <see cref="T:System.Data.DataTable" /> o nazwie "Tabela".</span><span class="sxs-lookup"><span data-stu-id="01042-196">Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" /> from a <see cref="T:System.Data.DataTable" /> named "Table".</span></span></summary>
        <returns><span data-ttu-id="01042-197">Liczba pomyślnie zaktualizowanych z <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="01042-197">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01042-198">Gdy aplikacja wywołuje <xref:System.Data.IDataAdapter.Update%2A> metody <xref:System.Data.IDataAdapter> sprawdza <xref:System.Data.DataRow.RowState%2A> właściwości i wykonuje wymaganych instrukcji INSERT, UPDATE lub DELETE wielokrotnie powtarzane dla każdego wiersza, na podstawie kolejności indeksów skonfigurowane w <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="01042-198">When an application calls the <xref:System.Data.IDataAdapter.Update%2A> method, the <xref:System.Data.IDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="01042-199">Na przykład <xref:System.Data.IDataAdapter.Update%2A> mogą wykonać z powodu kolejność wierszy w instrukcji DELETE, a następnie za pomocą instrukcji INSERT, a następnie inne instrukcji DELETE, <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="01042-199">For example, <xref:System.Data.IDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, because of the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="01042-200">Należy pamiętać, że oświadczenia te nie są wykonywane jako przetwarzania wsadowego; Każdy wiersz jest aktualizowana pojedynczo.</span><span class="sxs-lookup"><span data-stu-id="01042-200">Be aware that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="01042-201">Aplikacja może wywołać <xref:System.Data.DataSet.GetChanges%2A> metodę, jeśli musi sterowania sekwencją typów instrukcji (na przykład wstawia przed aktualizacji).</span><span class="sxs-lookup"><span data-stu-id="01042-201">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method if you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="01042-202">Aby uzyskać więcej informacji, zobacz [aktualizowanie źródła danych z obiektów DataAdapter](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span><span class="sxs-lookup"><span data-stu-id="01042-202">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="01042-203">Jeśli nie zostały określone instrukcji INSERT, UPDATE lub DELETE, <xref:System.Data.Common.DataAdapter.Update%2A> metoda generuje wyjątek.</span><span class="sxs-lookup"><span data-stu-id="01042-203">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="01042-204">Można jednak utworzyć <xref:System.Data.SqlClient.SqlCommandBuilder> lub <xref:System.Data.OleDb.OleDbCommandBuilder> obiekt, aby automatycznie wygenerować instrukcji SQL aktualizacje pojedynczej tabeli, jeśli ustawisz `SelectCommand` właściwości dostawcy danych .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="01042-204">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="01042-205">Następnie żadnych dodatkowych instrukcji SQL, które nie zostały ustawione są generowane przez CommandBuilder.</span><span class="sxs-lookup"><span data-stu-id="01042-205">Then, any additional SQL statements that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="01042-206">Tę logikę generowania wymaga informacji o kolumnie klucza znajdować się w <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="01042-206">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="01042-207">Aby uzyskać więcej informacji, zobacz [generowania poleceń CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="01042-207">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="01042-208"><xref:System.Data.Common.DataAdapter.Update%2A> Metoda pobiera wiersze z tabeli umieszczone w pierwszym mapowania przed wykonaniem operacji aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="01042-208">The <xref:System.Data.Common.DataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="01042-209"><xref:System.Data.Common.DataAdapter.Update%2A> Następnie aktualizuje wiersza przy użyciu wartości <xref:System.Data.IDbCommand.UpdatedRowSource%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="01042-209">The <xref:System.Data.Common.DataAdapter.Update%2A> then updates the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="01042-210">Dodatkowe wiersze zwracane są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="01042-210">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="01042-211">Po załadowaniu danych do <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> zdarzenia, dzięki czemu użytkownik do sprawdzenia uzgodniony <xref:System.Data.DataSet> wiersza i wszystkie dane wyjściowe Parametry zwracane przez polecenie.</span><span class="sxs-lookup"><span data-stu-id="01042-211">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="01042-212">Po wierszu aktualizacji pomyślnie, zmiany w tym wierszu są akceptowane.</span><span class="sxs-lookup"><span data-stu-id="01042-212">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="01042-213">Korzystając z <xref:System.Data.IDataAdapter.Update%2A>, kolejność wykonywania jest następujący:</span><span class="sxs-lookup"><span data-stu-id="01042-213">When using <xref:System.Data.IDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="01042-214">Wartości w <xref:System.Data.DataRow> zostaną przeniesione do wartości parametrów.</span><span class="sxs-lookup"><span data-stu-id="01042-214">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="01042-215"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> Zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="01042-215">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="01042-216">Wykonuje polecenia.</span><span class="sxs-lookup"><span data-stu-id="01042-216">The command executes.</span></span>  
  
4.  <span data-ttu-id="01042-217">Jeśli polecenie ma ustawioną wartość `FirstReturnedRecord`, a następnie pierwszy zwrócony wynik jest umieszczany <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="01042-217">If the command is set to `FirstReturnedRecord`, then the first returned result is put in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="01042-218">W przypadku parametrów wyjściowych są umieszczane <xref:System.Data.DataRow>.</span><span class="sxs-lookup"><span data-stu-id="01042-218">If there are output parameters, they are put in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="01042-219"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> Zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="01042-219">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="01042-220"><xref:System.Data.DataRow.AcceptChanges%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="01042-220"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="01042-221">Każde polecenie skojarzone z <xref:System.Data.IDataAdapter> zwykle ma kolekcję parametrów skojarzonych z nim.</span><span class="sxs-lookup"><span data-stu-id="01042-221">Each command associated with the <xref:System.Data.IDataAdapter> usually has a parameter collection associated with it.</span></span> <span data-ttu-id="01042-222">Parametry są zamapowane do bieżącego wiersza za pośrednictwem `SourceColumn` i `SourceVersion` właściwości dostawcy danych .NET Framework `Parameter` klasy.</span><span class="sxs-lookup"><span data-stu-id="01042-222">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="01042-223">`SourceColumn` odwołuje się do <xref:System.Data.DataTable> kolumny który <xref:System.Data.IDataAdapter> odwołania do uzyskania wartości parametrów dla bieżącego wiersza.</span><span class="sxs-lookup"><span data-stu-id="01042-223">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.IDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="01042-224">`SourceColumn` odwołuje się do nazwy kolumny Niemapowane przed mapowań tabeli zostały zastosowane.</span><span class="sxs-lookup"><span data-stu-id="01042-224">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="01042-225">Jeśli `SourceColumn` odwołuje się do nieistniejącej kolumny akcję wykonywaną zależy od jednego z następujących <xref:System.Data.MissingMappingAction> wartości.</span><span class="sxs-lookup"><span data-stu-id="01042-225">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="01042-226">Wartość wyliczenia</span><span class="sxs-lookup"><span data-stu-id="01042-226">Enumeration Value</span></span>|<span data-ttu-id="01042-227">Działań</span><span class="sxs-lookup"><span data-stu-id="01042-227">Action Taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="01042-228">Użyj nazwy kolumn źródła i nazwy tabeli w <xref:System.Data.DataSet> Jeśli mapowanie nie jest obecny.</span><span class="sxs-lookup"><span data-stu-id="01042-228">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="01042-229">A <xref:System.SystemException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="01042-229">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="01042-230">Mapowania jawnie ustawione, brakuje mapowania parametru wejściowego zazwyczaj przyczyną jest błąd.</span><span class="sxs-lookup"><span data-stu-id="01042-230">When the mappings are explicitly set, a missing mapping for an input parameter is usually caused by an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="01042-231">A <xref:System.SystemException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="01042-231">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="01042-232">`SourceColumn` Właściwości są również używane do mapowania wartości dla danych wyjściowych lub parametry wejścia/wyjścia z powrotem do `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="01042-232">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="01042-233">Wyjątek jest generowany, gdy odwołuje się do nieistniejącej kolumny.</span><span class="sxs-lookup"><span data-stu-id="01042-233">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="01042-234">`SourceVersion` Właściwości dostawcy danych .NET Framework `Parameter` klasy określa, czy użyć `Original`, `Current`, lub `Proposed` wersja wartości kolumny.</span><span class="sxs-lookup"><span data-stu-id="01042-234">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the `Original`, `Current`, or `Proposed` version of the column value.</span></span> <span data-ttu-id="01042-235">Ta funkcja jest często używany do uwzględnienia oryginalnych wartości w klauzuli WHERE instrukcji UPDATE, aby wyszukać naruszeń optymistycznej współbieżności.</span><span class="sxs-lookup"><span data-stu-id="01042-235">This capability is frequently used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01042-236">Jeśli wystąpi błąd podczas aktualizowania wiersza, jest zgłaszany wyjątek i wykonywania aktualizacji nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="01042-236">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="01042-237">Aby kontynuować operację aktualizacji bez generowania wyjątków, gdy wystąpi błąd, ustaw <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> właściwości `true` przed wywołaniem <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="01042-237">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="01042-238">Mogą również odpowiadać błędów na podstawie na wiersz, w ramach `RowUpdated` zdarzeń element DataAdapter.</span><span class="sxs-lookup"><span data-stu-id="01042-238">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="01042-239">Aby kontynuować operację aktualizacji bez generowania wyjątku `RowUpdated` zdarzeń, ustaw <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> właściwość <xref:System.Data.Common.RowUpdatedEventArgs> do <xref:System.Data.UpdateStatus.Continue>.</span><span class="sxs-lookup"><span data-stu-id="01042-239">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01042-240">W poniższym przykładzie użyto klasy pochodnej <xref:System.Data.OleDb.OleDbDataAdapter>, do <xref:System.Data.Common.DataAdapter.Update%2A> źródła danych.</span><span class="sxs-lookup"><span data-stu-id="01042-240">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to <xref:System.Data.Common.DataAdapter.Update%2A> the data source.</span></span> <span data-ttu-id="01042-241">W tym przykładzie przyjęto założenie, że utworzono <xref:System.Data.OleDb.OleDbDataAdapter> i <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="01042-241">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataAdapter.IDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataAdapter.IDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="01042-242">Próba wykonania instrukcji INSERT, UPDATE lub DELETE spowodowała zero zmodyfikowanych rekordów.</span><span class="sxs-lookup"><span data-stu-id="01042-242">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>